expr	CALL,56:DO,0:functions,0:ELSE,20:IF,32:FOR,0:WHILE,1:SWITCH,1	915
0x4001cb8	            0x4157	                                push r15	      1748	expr.c	FUNCTION_19
0x4001cba	            0x4156	                                push r14	      1748	expr.c	FUNCTION_19
0x4001cbc	            0x4155	                                push r13	      1748	expr.c	FUNCTION_19
0x4001cbe	            0x4154	                                push r12	      1748	expr.c	FUNCTION_19
0x4001cc0	              0x55	                                push rbp	      1748	expr.c	FUNCTION_19
0x4001cc1	              0x53	                                push rbx	      1748	expr.c	FUNCTION_19
0x4001cc2	        0x4883ec58	                           sub rsp, 0x58	      1748	expr.c	FUNCTION_19
0x4001cc6	        0x897c240c	              mov dword [rsp + 0xc], edi	      1748	expr.c	FUNCTION_19
0x4001cca	        0x89542404	                mov dword [rsp + 4], edx	      1748	expr.c	FUNCTION_19
0x4001cce	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1748	expr.c	FUNCTION_19
0x4001cd7	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      1748	expr.c	FUNCTION_19
0x4001cdc	            0x31c9	                            xor ecx, ecx	      1748	expr.c	FUNCTION_19
0x4001cde	      0x40887c240b	               mov byte [rsp + 0xb], dil	      1749	expr.c	FUNCTION_19
0x4001ce3	            0x85ff	                           test edi, edi	      1756	expr.c	FUNCTION_19	CALL_1
0x4001ce5	            0x7914	                           jns 0x4001cfb	      1756	expr.c	FUNCTION_19	CALL_1
0x4001ce7	      0xba00000000	                              mov edx, 0	      1756	expr.c	FUNCTION_19	CALL_1
0x4001cec	      0xbedc060000	                          mov esi, 0x6dc	      1756	expr.c	FUNCTION_19	CALL_1
0x4001cf1	      0xbf00000000	                              mov edi, 0	      1756	expr.c	FUNCTION_19	CALL_1
0x4001cf6	      0xe800000000	                          call 0x4001cfb	      1756	expr.c	FUNCTION_19	CALL_1
0x4001cfb	          0x4889f3	                            mov rbx, rsi	      1756	expr.c	FUNCTION_19	CALL_1
0x4001cfe	      0x807c240c00	                 cmp byte [rsp + 0xc], 0	      1759	expr.c	FUNCTION_19	IF_1
0x4001d03	            0x751a	                           jne 0x4001d1f	      1759	expr.c	FUNCTION_19	IF_1
0x4001d05	      0xe800000000	                          call 0x4001d0a	      1761	expr.c	FUNCTION_19	IF_1	CALL_2
0x4001d0a	    0x488905000000	            mov qword [0x04001d11], rax 	      1761	expr.c	FUNCTION_19	IF_1	CALL_2
0x4001d11	    0x488b05000000	            mov rax, qword [0x04001d18] 	      1762	expr.c	FUNCTION_19	IF_1
0x4001d18	    0x488905000000	            mov qword [0x04001d1f], rax 	      1762	expr.c	FUNCTION_19	IF_1
0x4001d1f	        0x8b742404	                mov esi, dword [rsp + 4]	      1765	expr.c	FUNCTION_19	CALL_3
0x4001d23	          0x4889df	                            mov rdi, rbx	      1765	expr.c	FUNCTION_19	CALL_3
0x4001d26	      0xe8b9f4ffff	                        call sym.operand	      1765	expr.c	FUNCTION_19	CALL_3
0x4001d2b	          0x4989c6	                            mov r14, rax	      1765	expr.c	FUNCTION_19	CALL_3
0x4001d2e	    0x488b05000000	            mov rax, qword [0x04001d35] 	      1768	expr.c	FUNCTION_19	CALL_4
0x4001d35	           0xfb628	                   movzx ebp, byte [rax]	      1768	expr.c	FUNCTION_19	CALL_4
0x4001d38	        0x4080fd20	                           cmp bpl, 0x20	      1768	expr.c	FUNCTION_19	CALL_4
0x4001d3c	            0x7514	                           jne 0x4001d52	      1768	expr.c	FUNCTION_19	CALL_4
0x4001d3e	      0xba00000000	                              mov edx, 0	      1768	expr.c	FUNCTION_19	CALL_4
0x4001d43	      0xbee8060000	                          mov esi, 0x6e8	      1768	expr.c	FUNCTION_19	CALL_4
0x4001d48	      0xbf00000000	                              mov edi, 0	      1768	expr.c	FUNCTION_19	CALL_4
0x4001d4d	      0xe800000000	                          call 0x4001d52	      1768	expr.c	FUNCTION_19	CALL_4
0x4001d52	        0x400fb6ed	                          movzx ebp, bpl	      1576	expr.c	FUNCTION_16
0x4001d56	          0x4863c5	                         movsxd rax, ebp	      1579	expr.c	FUNCTION_16	IF_1
0x4001d59	    0x80b800000000	                       cmp byte [rax], 0	      1579	expr.c	FUNCTION_16	IF_1
0x4001d60	     0xf85720d0000	                           jne 0x4002ad8	      1579	expr.c	FUNCTION_16	IF_1
0x4001d66	    0xf68000000000	                      test byte [rax], 2	      1583	expr.c	FUNCTION_16	IF_2	CALL_1
0x4001d6d	     0xf84ae000000	                            je 0x4001e21	      1583	expr.c	FUNCTION_16	IF_2	CALL_1
0x4001d73	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4001d78	      0xe800000000	                          call 0x4001d7d	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4001d7d	        0x88442418	               mov byte [rsp + 0x18], al	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4001d81	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001d86	      0xbe02000000	                              mov esi, 2	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001d8b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001d90	      0xe800000000	                          call 0x4001d95	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001d95	          0x4189c4	                           mov r12d, eax	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001d98	          0x83f801	                              cmp eax, 1	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001d9b	            0x740f	                            je 0x4001dac	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001d9d	          0x83f801	                              cmp eax, 1	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001da0	            0x7255	                            jb 0x4001df7	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001da2	          0x8d40f9	                      lea eax, [rax - 7]	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001da5	          0x83f802	                              cmp eax, 2	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001da8	            0x761e	                           jbe 0x4001dc8	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001daa	            0xeb4b	                           jmp 0x4001df7	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001dac	       0xfb6542418	           movzx edx, byte [rsp + 0x18] 	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001db1	    0x488b05000000	            mov rax, qword [0x04001db8] 	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001db8	            0x8810	                      mov byte [rax], dl	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001dba	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001dbf	    0x488905000000	            mov qword [0x04001dc6], rax 	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001dc6	            0xeb59	                           jmp 0x4001e21	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001dc8	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001dcd	      0xba05000000	                              mov edx, 5	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001dd2	      0xbe00000000	                              mov esi, 0	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001dd7	      0xbf00000000	                              mov edi, 0	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001ddc	      0xe800000000	                          call 0x4001de1	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001de1	          0x4889ee	                            mov rsi, rbp	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001de4	          0x4889c7	                            mov rdi, rax	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001de7	      0xb800000000	                              mov eax, 0	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001dec	      0xe800000000	                          call 0x4001df1	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001df1	    0x41bc00000000	                             mov r12d, 0	      1599	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001df7	       0xfb6542418	           movzx edx, byte [rsp + 0x18] 	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001dfc	    0x488b05000000	            mov rax, qword [0x04001e03] 	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001e03	            0x8810	                      mov byte [rax], dl	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001e05	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001e0a	    0x8b0d00000000	            mov ecx, dword [0x04001e10] 	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001e10	            0x29c1	                            sub ecx, eax	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001e12	          0x890c24	                    mov dword [rsp], ecx	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001e15	    0x488905000000	            mov qword [0x04001e1c], rax 	      1604	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001e1c	      0xe926010000	                           jmp 0x4001f47	      1604	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001e21	          0x83fd2d	                           cmp ebp, 0x2d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e24	     0xf84a5000000	                            je 0x4001ecf	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e2a	          0x83fd2d	                           cmp ebp, 0x2d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e2d	            0x7f1d	                            jg 0x4001e4c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e2f	          0x83fd26	                           cmp ebp, 0x26	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e32	     0xf84de010000	                            je 0x4002016	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e38	          0x83fd2b	                           cmp ebp, 0x2b	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e3b	     0xf848e000000	                            je 0x4001ecf	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e41	          0x83fd21	                           cmp ebp, 0x21	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e44	     0xf8466010000	                            je 0x4001fb0	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e4a	            0xeb2b	                           jmp 0x4001e77	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e4c	          0x83fd3d	                           cmp ebp, 0x3d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e4f	     0xf8415010000	                            je 0x4001f6a	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e55	          0x83fd3d	                           cmp ebp, 0x3d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e58	            0x7f0b	                            jg 0x4001e65	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e5a	          0x83fd3c	                           cmp ebp, 0x3c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e5d	     0xf8480000000	                            je 0x4001ee3	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e63	            0xeb12	                           jmp 0x4001e77	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e65	          0x83fd3e	                           cmp ebp, 0x3e	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e68	     0xf841c010000	                            je 0x4001f8a	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e6e	          0x83fd7c	                           cmp ebp, 0x7c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e71	     0xf8470010000	                            je 0x4001fe7	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e77	          0x4863ed	                         movsxd rbp, ebp	      1613	expr.c	FUNCTION_16	SWITCH_2
0x4001e7a	    0x448b24ad0000	                 mov r12d, dword [rbp*4]	      1613	expr.c	FUNCTION_16	SWITCH_2
0x4001e82	    0xc70424010000	                      mov dword [rsp], 1	      1577	expr.c	FUNCTION_16
0x4001e89	          0x4585e4	                         test r12d, r12d	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4001e8c	     0xf85be000000	                           jne 0x4001f50	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4001e92	    0x488b2d000000	            mov rbp, qword [0x04001e99] 	      1617	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4001e99	      0xba00000000	                              mov edx, 0	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4001e9e	      0xbe02000000	                              mov esi, 2	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4001ea3	      0xbf00000000	                              mov edi, 0	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4001ea8	      0xe800000000	                          call 0x4001ead	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4001ead	          0x4189c4	                           mov r12d, eax	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4001eb0	    0xc70424010000	                      mov dword [rsp], 1	      1577	expr.c	FUNCTION_16
0x4001eb7	            0x85c0	                           test eax, eax	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4001eb9	            0x740b	                            je 0x4001ec6	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4001ebb	    0x8b0500000000	            mov eax, dword [0x04001ec1] 	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4001ec1	            0x29e8	                            sub eax, ebp	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4001ec3	          0x890424	                    mov dword [rsp], eax	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4001ec6	    0x48892d000000	            mov qword [0x04001ecd], rbp 	      1622	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4001ecd	            0xeb78	                           jmp 0x4001f47	      1622	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4001ecf	          0x4863ed	                         movsxd rbp, ebp	      1629	expr.c	FUNCTION_16	SWITCH_2
0x4001ed2	    0x448b24ad0000	                 mov r12d, dword [rbp*4]	      1629	expr.c	FUNCTION_16	SWITCH_2
0x4001eda	    0xc70424010000	                      mov dword [rsp], 1	      1577	expr.c	FUNCTION_16
0x4001ee1	            0xeb64	                           jmp 0x4001f47	      1577	expr.c	FUNCTION_16
0x4001ee3	    0x488b05000000	            mov rax, qword [0x04001eea] 	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001eea	         0xfb64001	               movzx eax, byte [rax + 1]	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001eee	            0x3c3d	                            cmp al, 0x3d	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001ef0	            0x741b	                            je 0x4001f0d	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001ef2	            0x3c3e	                            cmp al, 0x3e	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001ef4	     0xf84270c0000	                            je 0x4002b21	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001efa	            0x3c3c	                            cmp al, 0x3c	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001efc	            0x741e	                            je 0x4001f1c	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001efe	    0xc70424010000	                      mov dword [rsp], 1	      1577	expr.c	FUNCTION_16
0x4001f05	    0x41bc17000000	                          mov r12d, 0x17	      1635	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001f0b	            0xeb43	                           jmp 0x4001f50	      1635	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001f0d	    0xc70424020000	                      mov dword [rsp], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x4001f14	    0x41bc18000000	                          mov r12d, 0x18	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001f1a	            0xeb34	                           jmp 0x4001f50	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001f1c	    0xc70424020000	                      mov dword [rsp], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x4001f23	    0x41bc0d000000	                           mov r12d, 0xd	      1637	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001f29	            0xeb1c	                           jmp 0x4001f47	      1637	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001f2b	    0xc70424020000	                      mov dword [rsp], 2	      1668	expr.c	FUNCTION_16	SWITCH_2
0x4001f32	    0x41bc0e000000	                           mov r12d, 0xe	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001f38	            0xeb0d	                           jmp 0x4001f47	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001f3a	    0xc70424020000	                      mov dword [rsp], 2	      1676	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001f41	    0x41bc11000000	                          mov r12d, 0x11	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001f47	          0x4585e4	                         test r12d, r12d	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001f4a	     0xf84880b0000	                            je 0x4002ad8	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001f50	          0x4963c4	                        movsxd rax, r12d	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001f53	     0xfb6b8000000	                   movzx edi, byte [rax]	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001f5a	      0x403a7c240c	               cmp dil, byte [rsp + 0xc]	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001f5f	     0xf8fde000000	                            jg 0x4002043	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001f65	      0xe96e0b0000	                           jmp 0x4002ad8	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001f6a	    0x488b05000000	            mov rax, qword [0x04001f71] 	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x4001f71	        0x8078013d	                cmp byte [rax + 1], 0x3d	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x4001f75	     0xf855d0b0000	                           jne 0x4002ad8	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x4001f7b	    0xc70424020000	                      mov dword [rsp], 2	      1653	expr.c	FUNCTION_16	SWITCH_2
0x4001f82	    0x41bc15000000	                          mov r12d, 0x15	      1654	expr.c	FUNCTION_16	SWITCH_2
0x4001f88	            0xebc6	                           jmp 0x4001f50	      1654	expr.c	FUNCTION_16	SWITCH_2
0x4001f8a	    0x488b05000000	            mov rax, qword [0x04001f91] 	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001f91	         0xfb64001	               movzx eax, byte [rax + 1]	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001f95	            0x3c3d	                            cmp al, 0x3d	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001f97	     0xf84960b0000	                            je 0x4002b33	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001f9d	            0x3c3e	                            cmp al, 0x3e	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001f9f	            0x748a	                            je 0x4001f2b	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001fa1	    0xc70424010000	                      mov dword [rsp], 1	      1577	expr.c	FUNCTION_16
0x4001fa8	    0x41bc1a000000	                          mov r12d, 0x1a	      1660	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001fae	            0xeba0	                           jmp 0x4001f50	      1660	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4001fb0	    0x488b05000000	            mov rax, qword [0x04001fb7] 	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001fb7	         0xfb64001	               movzx eax, byte [rax + 1]	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001fbb	            0x3c21	                            cmp al, 0x21	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001fbd	     0xf8477ffffff	                            je 0x4001f3a	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001fc3	            0x3c3d	                            cmp al, 0x3d	      1577	expr.c	FUNCTION_16
0x4001fc5	           0xf94c1	                                 sete cl	      1577	expr.c	FUNCTION_16
0x4001fc8	           0xfb6c9	                           movzx ecx, cl	      1577	expr.c	FUNCTION_16
0x4001fcb	          0x83c101	                              add ecx, 1	      1577	expr.c	FUNCTION_16
0x4001fce	          0x890c24	                    mov dword [rsp], ecx	      1577	expr.c	FUNCTION_16
0x4001fd1	            0x3c3d	                            cmp al, 0x3d	      1577	expr.c	FUNCTION_16
0x4001fd3	      0xb810000000	                           mov eax, 0x10	      1577	expr.c	FUNCTION_16
0x4001fd8	    0x41bc16000000	                          mov r12d, 0x16	      1577	expr.c	FUNCTION_16
0x4001fde	        0x440f45e0	                        cmovne r12d, eax	      1577	expr.c	FUNCTION_16
0x4001fe2	      0xe969ffffff	                           jmp 0x4001f50	      1577	expr.c	FUNCTION_16
0x4001fe7	    0x488b05000000	            mov rax, qword [0x04001fee] 	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001fee	        0x8078017c	                cmp byte [rax + 1], 0x7c	      1577	expr.c	FUNCTION_16
0x4001ff2	           0xf94c1	                                 sete cl	      1577	expr.c	FUNCTION_16
0x4001ff5	           0xfb6c9	                           movzx ecx, cl	      1577	expr.c	FUNCTION_16
0x4001ff8	          0x83c101	                              add ecx, 1	      1577	expr.c	FUNCTION_16
0x4001ffb	          0x890c24	                    mov dword [rsp], ecx	      1577	expr.c	FUNCTION_16
0x4001ffe	        0x8078017c	                cmp byte [rax + 1], 0x7c	      1577	expr.c	FUNCTION_16
0x4002002	      0xb80f000000	                            mov eax, 0xf	      1577	expr.c	FUNCTION_16
0x4002007	    0x41bc1c000000	                          mov r12d, 0x1c	      1577	expr.c	FUNCTION_16
0x400200d	        0x440f45e0	                        cmovne r12d, eax	      1577	expr.c	FUNCTION_16
0x4002011	      0xe93affffff	                           jmp 0x4001f50	      1577	expr.c	FUNCTION_16
0x4002016	    0x488b05000000	            mov rax, qword [0x0400201d] 	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x400201d	        0x80780126	                cmp byte [rax + 1], 0x26	      1577	expr.c	FUNCTION_16
0x4002021	           0xf94c1	                                 sete cl	      1577	expr.c	FUNCTION_16
0x4002024	           0xfb6c9	                           movzx ecx, cl	      1577	expr.c	FUNCTION_16
0x4002027	          0x83c101	                              add ecx, 1	      1577	expr.c	FUNCTION_16
0x400202a	          0x890c24	                    mov dword [rsp], ecx	      1577	expr.c	FUNCTION_16
0x400202d	        0x80780126	                cmp byte [rax + 1], 0x26	      1577	expr.c	FUNCTION_16
0x4002031	        0x410f94c4	                               sete r12b	      1577	expr.c	FUNCTION_16
0x4002035	        0x450fb6e4	                        movzx r12d, r12b	      1577	expr.c	FUNCTION_16
0x4002039	      0x478d64e412	         lea r12d, [r12 + r12*8 + 0x12] 	      1577	expr.c	FUNCTION_16
0x400203e	      0xe90dffffff	                           jmp 0x4001f50	      1577	expr.c	FUNCTION_16
0x4002043	          0x4589e7	                          mov r15d, r12d	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4002046	        0x48630424	                 movsxd rax, dword [rsp]	      1776	expr.c	FUNCTION_19	WHILE_1
0x400204a	    0x480105000000	            add qword [0x04002051], rax 	      1776	expr.c	FUNCTION_19	WHILE_1
0x4002051	    0x66c744243a00	                mov word [rsp + 0x3a], 0	      1778	expr.c	FUNCTION_19	WHILE_1
0x4002058	        0x400fbeff	                          movsx edi, dil	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x400205c	        0x8b542404	                mov edx, dword [rsp + 4]	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x4002060	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x4002065	      0xe800000000	                          call 0x400206a	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x400206a	          0x4989c5	                            mov r13, rax	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x400206d	      0x807c243801	                cmp byte [rsp + 0x38], 1	      1780	expr.c	FUNCTION_19	WHILE_1	IF_2
0x4002072	            0x7541	                           jne 0x40020b5	      1780	expr.c	FUNCTION_19	WHILE_1	IF_2
0x4002074	      0xba05000000	                              mov edx, 5	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4002079	      0xbe00000000	                              mov esi, 0	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x400207e	      0xbf00000000	                              mov edi, 0	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4002083	      0xe800000000	                          call 0x4002088	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4002088	          0x4889c7	                            mov rdi, rax	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x400208b	      0xb800000000	                              mov eax, 0	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4002090	      0xe800000000	                          call 0x4002095	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4002095	      0xc644243802	                mov byte [rsp + 0x38], 2	      1783	expr.c	FUNCTION_19	WHILE_1	IF_2
0x400209a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1784	expr.c	FUNCTION_19	WHILE_1	IF_2
0x40020a3	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1785	expr.c	FUNCTION_19	WHILE_1	IF_2
0x40020ac	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1786	expr.c	FUNCTION_19	WHILE_1	IF_2
0x40020b5	    0x488b05000000	            mov rax, qword [0x040020bc] 	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40020bc	           0xfb610	                   movzx edx, byte [rax]	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40020bf	          0x80fa20	                            cmp dl, 0x20	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40020c2	            0x7514	                           jne 0x40020d8	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40020c4	      0xba00000000	                              mov edx, 0	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40020c9	      0xbefd060000	                          mov esi, 0x6fd	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40020ce	      0xbf00000000	                              mov edi, 0	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40020d3	      0xe800000000	                          call 0x40020d8	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40020d8	        0x4183fc1d	                          cmp r12d, 0x1d	      1791	expr.c	FUNCTION_19	WHILE_1	IF_3
0x40020dc	            0x7532	                           jne 0x4002110	      1791	expr.c	FUNCTION_19	WHILE_1	IF_3
0x40020de	          0x80fa5d	                            cmp dl, 0x5d	      1793	expr.c	FUNCTION_19	WHILE_1	IF_3	IF_4
0x40020e1	            0x7411	                            je 0x40020f4	      1793	expr.c	FUNCTION_19	WHILE_1	IF_3	IF_4
0x40020e3	      0xbf00000000	                              mov edi, 0	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x40020e8	      0xb800000000	                              mov eax, 0	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x40020ed	      0xe800000000	                          call 0x40020f2	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x40020f2	            0xeb1c	                           jmp 0x4002110	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x40020f4	        0x488d5001	                      lea rdx, [rax + 1]	      1797	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1
0x40020f8	    0x488915000000	            mov qword [0x040020ff], rdx 	      1797	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1
0x40020ff	        0x80780120	                cmp byte [rax + 1], 0x20	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002103	            0x750b	                           jne 0x4002110	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002105	        0x4883c002	                              add rax, 2	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002109	    0x488905000000	            mov qword [0x04002110], rax 	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002110	    0x488b05000000	            mov rax, qword [0x04002117] 	      1576	expr.c	FUNCTION_16
0x4002117	           0xfb628	                   movzx ebp, byte [rax]	      1576	expr.c	FUNCTION_16
0x400211a	          0x4863c5	                         movsxd rax, ebp	      1579	expr.c	FUNCTION_16	IF_1
0x400211d	    0x80b800000000	                       cmp byte [rax], 0	      1579	expr.c	FUNCTION_16	IF_1
0x4002124	     0xf851b0a0000	                           jne 0x4002b45	      1579	expr.c	FUNCTION_16	IF_1
0x400212a	    0xf68000000000	                      test byte [rax], 2	      1583	expr.c	FUNCTION_16	IF_2	CALL_1
0x4002131	     0xf84ac000000	                            je 0x40021e3	      1583	expr.c	FUNCTION_16	IF_2	CALL_1
0x4002137	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x400213c	      0xe800000000	                          call 0x4002141	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4002141	        0x88442417	               mov byte [rsp + 0x17], al	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4002145	      0x488d542417	                   lea rdx, [rsp + 0x17]	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x400214a	      0xbe02000000	                              mov esi, 2	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x400214f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4002154	      0xe800000000	                          call 0x4002159	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4002159	          0x83f801	                              cmp eax, 1	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400215c	            0x740f	                            je 0x400216d	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400215e	          0x83f801	                              cmp eax, 1	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002161	            0x7254	                            jb 0x40021b7	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002163	          0x8d50f9	                      lea edx, [rax - 7]	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002166	          0x83fa02	                              cmp edx, 2	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002169	            0x761e	                           jbe 0x4002189	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400216b	            0xeb4a	                           jmp 0x40021b7	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400216d	       0xfb6542417	           movzx edx, byte [rsp + 0x17] 	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002172	    0x488b05000000	            mov rax, qword [0x04002179] 	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002179	            0x8810	                      mov byte [rax], dl	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400217b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002180	    0x488905000000	            mov qword [0x04002187], rax 	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002187	            0xeb5a	                           jmp 0x40021e3	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002189	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x400218e	      0xba05000000	                              mov edx, 5	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4002193	      0xbe00000000	                              mov esi, 0	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4002198	      0xbf00000000	                              mov edi, 0	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x400219d	      0xe800000000	                          call 0x40021a2	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x40021a2	          0x4889ee	                            mov rsi, rbp	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x40021a5	          0x4889c7	                            mov rdi, rax	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x40021a8	      0xb800000000	                              mov eax, 0	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x40021ad	      0xe800000000	                          call 0x40021b2	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x40021b2	      0xb800000000	                              mov eax, 0	      1599	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021b7	       0xfb64c2417	           movzx ecx, byte [rsp + 0x17] 	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021bc	    0x488b15000000	            mov rdx, qword [0x040021c3] 	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021c3	            0x880a	                      mov byte [rdx], cl	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021c5	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021ca	    0x8b0d00000000	            mov ecx, dword [0x040021d0] 	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021d0	            0x29d1	                            sub ecx, edx	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021d2	          0x890c24	                    mov dword [rsp], ecx	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021d5	    0x488915000000	            mov qword [0x040021dc], rdx 	      1604	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021dc	            0x89c5	                            mov ebp, eax	      1605	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021de	      0xe90e020000	                           jmp 0x40023f1	      1605	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40021e3	          0x83fd2d	                           cmp ebp, 0x2d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40021e6	     0xf84a7000000	                            je 0x4002293	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40021ec	          0x83fd2d	                           cmp ebp, 0x2d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40021ef	            0x7f1d	                            jg 0x400220e	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40021f1	          0x83fd26	                           cmp ebp, 0x26	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40021f4	     0xf84c2010000	                            je 0x40023bc	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40021fa	          0x83fd2b	                           cmp ebp, 0x2b	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40021fd	     0xf8490000000	                            je 0x4002293	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002203	          0x83fd21	                           cmp ebp, 0x21	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002206	     0xf8458010000	                            je 0x4002364	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400220c	            0xeb2b	                           jmp 0x4002239	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400220e	          0x83fd3d	                           cmp ebp, 0x3d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002211	     0xf84e9000000	                            je 0x4002300	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002217	          0x83fd3d	                           cmp ebp, 0x3d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400221a	            0x7f0b	                            jg 0x4002227	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400221c	          0x83fd3c	                           cmp ebp, 0x3c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400221f	     0xf8484000000	                            je 0x40022a9	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002225	            0xeb12	                           jmp 0x4002239	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002227	          0x83fd3e	                           cmp ebp, 0x3e	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400222a	     0xf84f2000000	                            je 0x4002322	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002230	          0x83fd7c	                           cmp ebp, 0x7c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002233	     0xf8459010000	                            je 0x4002392	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4002239	          0x4863ed	                         movsxd rbp, ebp	      1613	expr.c	FUNCTION_16	SWITCH_2
0x400223c	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      1613	expr.c	FUNCTION_16	SWITCH_2
0x4002243	            0x89c5	                            mov ebp, eax	      1613	expr.c	FUNCTION_16	SWITCH_2
0x4002245	    0xc70424010000	                      mov dword [rsp], 1	      1577	expr.c	FUNCTION_16
0x400224c	            0x85c0	                           test eax, eax	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x400224e	     0xf859d010000	                           jne 0x40023f1	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4002254	    0x488b2d000000	            mov rbp, qword [0x0400225b] 	      1617	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x400225b	      0xba00000000	                              mov edx, 0	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4002260	      0xbe02000000	                              mov esi, 2	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4002265	      0xbf00000000	                              mov edi, 0	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x400226a	      0xe800000000	                          call 0x400226f	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x400226f	    0xc70424010000	                      mov dword [rsp], 1	      1577	expr.c	FUNCTION_16
0x4002276	            0x85c0	                           test eax, eax	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4002278	            0x740b	                            je 0x4002285	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x400227a	    0x8b0d00000000	            mov ecx, dword [0x04002280] 	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4002280	            0x29e9	                            sub ecx, ebp	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4002282	          0x890c24	                    mov dword [rsp], ecx	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4002285	    0x48892d000000	            mov qword [0x0400228c], rbp 	      1622	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x400228c	            0x89c5	                            mov ebp, eax	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x400228e	      0xe95e010000	                           jmp 0x40023f1	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4002293	          0x4863ed	                         movsxd rbp, ebp	      1629	expr.c	FUNCTION_16	SWITCH_2
0x4002296	    0x8b2cad000000	                  mov ebp, dword [rbp*4]	      1629	expr.c	FUNCTION_16	SWITCH_2
0x400229d	    0xc70424010000	                      mov dword [rsp], 1	      1577	expr.c	FUNCTION_16
0x40022a4	      0xe948010000	                           jmp 0x40023f1	      1577	expr.c	FUNCTION_16
0x40022a9	    0x488b05000000	            mov rax, qword [0x040022b0] 	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022b0	         0xfb64001	               movzx eax, byte [rax + 1]	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022b4	            0x3c3d	                            cmp al, 0x3d	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022b6	            0x7437	                            je 0x40022ef	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022b8	            0x3c3e	                            cmp al, 0x3e	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022ba	            0x7422	                            je 0x40022de	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022bc	            0x3c3c	                            cmp al, 0x3c	      1577	expr.c	FUNCTION_16
0x40022be	           0xf94c1	                                 sete cl	      1577	expr.c	FUNCTION_16
0x40022c1	           0xfb6c9	                           movzx ecx, cl	      1577	expr.c	FUNCTION_16
0x40022c4	          0x83c101	                              add ecx, 1	      1577	expr.c	FUNCTION_16
0x40022c7	          0x890c24	                    mov dword [rsp], ecx	      1577	expr.c	FUNCTION_16
0x40022ca	            0x3c3c	                            cmp al, 0x3c	      1577	expr.c	FUNCTION_16
0x40022cc	      0xb817000000	                           mov eax, 0x17	      1577	expr.c	FUNCTION_16
0x40022d1	      0xbd0d000000	                            mov ebp, 0xd	      1577	expr.c	FUNCTION_16
0x40022d6	           0xf45e8	                         cmovne ebp, eax	      1577	expr.c	FUNCTION_16
0x40022d9	      0xe913010000	                           jmp 0x40023f1	      1577	expr.c	FUNCTION_16
0x40022de	    0xc70424020000	                      mov dword [rsp], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x40022e5	      0xbd16000000	                           mov ebp, 0x16	      1640	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022ea	      0xe902010000	                           jmp 0x40023f1	      1640	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022ef	    0xc70424020000	                      mov dword [rsp], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x40022f6	      0xbd18000000	                           mov ebp, 0x18	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022fb	      0xe9f1000000	                           jmp 0x40023f1	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002300	    0x488b05000000	            mov rax, qword [0x04002307] 	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x4002307	        0x8078013d	                cmp byte [rax + 1], 0x3d	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x400230b	     0xf8534080000	                           jne 0x4002b45	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x4002311	    0xc70424020000	                      mov dword [rsp], 2	      1653	expr.c	FUNCTION_16	SWITCH_2
0x4002318	      0xbd15000000	                           mov ebp, 0x15	      1654	expr.c	FUNCTION_16	SWITCH_2
0x400231d	      0xe9cf000000	                           jmp 0x40023f1	      1654	expr.c	FUNCTION_16	SWITCH_2
0x4002322	    0x488b05000000	            mov rax, qword [0x04002329] 	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002329	         0xfb64001	               movzx eax, byte [rax + 1]	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400232d	            0x3c3d	                            cmp al, 0x3d	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400232f	            0x7422	                            je 0x4002353	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002331	            0x3c3e	                            cmp al, 0x3e	      1577	expr.c	FUNCTION_16
0x4002333	           0xf94c1	                                 sete cl	      1577	expr.c	FUNCTION_16
0x4002336	           0xfb6c9	                           movzx ecx, cl	      1577	expr.c	FUNCTION_16
0x4002339	          0x83c101	                              add ecx, 1	      1577	expr.c	FUNCTION_16
0x400233c	          0x890c24	                    mov dword [rsp], ecx	      1577	expr.c	FUNCTION_16
0x400233f	            0x3c3e	                            cmp al, 0x3e	      1577	expr.c	FUNCTION_16
0x4002341	      0xbd1a000000	                           mov ebp, 0x1a	      1577	expr.c	FUNCTION_16
0x4002346	      0xb80e000000	                            mov eax, 0xe	      1577	expr.c	FUNCTION_16
0x400234b	           0xf44e8	                          cmove ebp, eax	      1577	expr.c	FUNCTION_16
0x400234e	      0xe99e000000	                           jmp 0x40023f1	      1577	expr.c	FUNCTION_16
0x4002353	    0xc70424020000	                      mov dword [rsp], 2	      1668	expr.c	FUNCTION_16	SWITCH_2
0x400235a	      0xbd19000000	                           mov ebp, 0x19	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400235f	      0xe98d000000	                           jmp 0x40023f1	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002364	    0x488b05000000	            mov rax, qword [0x0400236b] 	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x400236b	         0xfb64001	               movzx eax, byte [rax + 1]	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x400236f	            0x3c21	                            cmp al, 0x21	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002371	            0x7472	                            je 0x40023e5	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002373	            0x3c3d	                            cmp al, 0x3d	      1577	expr.c	FUNCTION_16
0x4002375	           0xf94c1	                                 sete cl	      1577	expr.c	FUNCTION_16
0x4002378	           0xfb6c9	                           movzx ecx, cl	      1577	expr.c	FUNCTION_16
0x400237b	          0x83c101	                              add ecx, 1	      1577	expr.c	FUNCTION_16
0x400237e	          0x890c24	                    mov dword [rsp], ecx	      1577	expr.c	FUNCTION_16
0x4002381	            0x3c3d	                            cmp al, 0x3d	      1577	expr.c	FUNCTION_16
0x4002383	      0xb810000000	                           mov eax, 0x10	      1577	expr.c	FUNCTION_16
0x4002388	      0xbd16000000	                           mov ebp, 0x16	      1577	expr.c	FUNCTION_16
0x400238d	           0xf45e8	                         cmovne ebp, eax	      1577	expr.c	FUNCTION_16
0x4002390	            0xeb5f	                           jmp 0x40023f1	      1577	expr.c	FUNCTION_16
0x4002392	    0x488b05000000	            mov rax, qword [0x04002399] 	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4002399	        0x8078017c	                cmp byte [rax + 1], 0x7c	      1577	expr.c	FUNCTION_16
0x400239d	           0xf94c1	                                 sete cl	      1577	expr.c	FUNCTION_16
0x40023a0	           0xfb6c9	                           movzx ecx, cl	      1577	expr.c	FUNCTION_16
0x40023a3	          0x83c101	                              add ecx, 1	      1577	expr.c	FUNCTION_16
0x40023a6	          0x890c24	                    mov dword [rsp], ecx	      1577	expr.c	FUNCTION_16
0x40023a9	        0x8078017c	                cmp byte [rax + 1], 0x7c	      1577	expr.c	FUNCTION_16
0x40023ad	      0xb80f000000	                            mov eax, 0xf	      1577	expr.c	FUNCTION_16
0x40023b2	      0xbd1c000000	                           mov ebp, 0x1c	      1577	expr.c	FUNCTION_16
0x40023b7	           0xf45e8	                         cmovne ebp, eax	      1577	expr.c	FUNCTION_16
0x40023ba	            0xeb35	                           jmp 0x40023f1	      1577	expr.c	FUNCTION_16
0x40023bc	    0x488b05000000	            mov rax, qword [0x040023c3] 	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40023c3	        0x80780126	                cmp byte [rax + 1], 0x26	      1577	expr.c	FUNCTION_16
0x40023c7	           0xf94c1	                                 sete cl	      1577	expr.c	FUNCTION_16
0x40023ca	           0xfb6c9	                           movzx ecx, cl	      1577	expr.c	FUNCTION_16
0x40023cd	          0x83c101	                              add ecx, 1	      1577	expr.c	FUNCTION_16
0x40023d0	          0x890c24	                    mov dword [rsp], ecx	      1577	expr.c	FUNCTION_16
0x40023d3	        0x80780126	                cmp byte [rax + 1], 0x26	      1577	expr.c	FUNCTION_16
0x40023d7	        0x400f94c5	                                sete bpl	      1577	expr.c	FUNCTION_16
0x40023db	        0x400fb6ed	                          movzx ebp, bpl	      1577	expr.c	FUNCTION_16
0x40023df	        0x8d6ced12	          lea ebp, [rbp + rbp*8 + 0x12] 	      1577	expr.c	FUNCTION_16
0x40023e3	            0xeb0c	                           jmp 0x40023f1	      1577	expr.c	FUNCTION_16
0x40023e5	    0xc70424020000	                      mov dword [rsp], 2	      1676	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40023ec	      0xbd11000000	                           mov ebp, 0x11	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40023f1	            0x85ed	                           test ebp, ebp	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x40023f3	       0xf9544240a	                  setne byte [rsp + 0xa]	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x40023f8	       0xfb644240a	            movzx eax, byte [rsp + 0xa] 	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x40023fd	        0x4183fc1d	                          cmp r12d, 0x1d	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002401	            0x742d	                            je 0x4002430	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002403	            0x84c0	                             test al, al	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002405	            0x7429	                            je 0x4002430	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002407	          0x4863c5	                         movsxd rax, ebp	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400240a	          0x4963d7	                        movsxd rdx, r15d	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400240d	     0xfb68a000000	                   movzx ecx, byte [rdx]	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002414	    0x388800000000	                      cmp byte [rax], cl	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400241a	            0x7e14	                           jle 0x4002430	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400241c	      0xba00000000	                              mov edx, 0	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002421	      0xbe0d070000	                          mov esi, 0x70d	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002426	      0xbf00000000	                              mov edi, 0	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400242b	      0xe800000000	                          call 0x4002430	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002430	        0x4183ff09	                             cmp r15d, 9	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x4002434	            0x7f14	                            jg 0x400244a	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x4002436	      0xba00000000	                              mov edx, 0	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x400243b	      0xbe0e070000	                          mov esi, 0x70e	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x4002440	      0xbf00000000	                              mov edi, 0	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x4002445	      0xe800000000	                          call 0x400244a	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x400244a	        0x4183ff3d	                          cmp r15d, 0x3d	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x400244e	            0x7e14	                           jle 0x4002464	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x4002450	      0xba00000000	                              mov edx, 0	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x4002455	      0xbe12070000	                          mov esi, 0x712	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x400245a	      0xbf00000000	                              mov edi, 0	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x400245f	      0xe800000000	                          call 0x4002464	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x4002464	        0x807b1806	                cmp byte [rbx + 0x18], 6	      1818	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4002468	            0x7566	                           jne 0x40024d0	      1818	expr.c	FUNCTION_19	WHILE_1	IF_5
0x400246a	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1820	expr.c	FUNCTION_19	WHILE_1	IF_5	IF_6
0x400246f	            0x7e23	                           jle 0x4002494	      1820	expr.c	FUNCTION_19	WHILE_1	IF_5	IF_6
0x4002471	      0xba05000000	                              mov edx, 5	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x4002476	      0xbe00000000	                              mov esi, 0	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x400247b	      0xbf00000000	                              mov edi, 0	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x4002480	      0xe800000000	                          call 0x4002485	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x4002485	          0x4889c7	                            mov rdi, rax	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x4002488	      0xb800000000	                              mov eax, 0	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x400248d	      0xe800000000	                          call 0x4002492	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x4002492	            0xeb21	                           jmp 0x40024b5	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x4002494	      0xba05000000	                              mov edx, 5	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4002499	      0xbe00000000	                              mov esi, 0	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x400249e	      0xbf00000000	                              mov edi, 0	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x40024a3	      0xe800000000	                          call 0x40024a8	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x40024a8	          0x4889c7	                            mov rdi, rax	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x40024ab	      0xb800000000	                              mov eax, 0	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x40024b0	      0xe800000000	                          call 0x40024b5	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x40024b5	        0xc6431802	                mov byte [rbx + 0x18], 2	      1824	expr.c	FUNCTION_19	WHILE_1	IF_5
0x40024b9	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1825	expr.c	FUNCTION_19	WHILE_1	IF_5
0x40024c1	    0x48c703000000	                      mov qword [rbx], 0	      1826	expr.c	FUNCTION_19	WHILE_1	IF_5
0x40024c8	    0x48c743080000	                  mov qword [rbx + 8], 0	      1827	expr.c	FUNCTION_19	WHILE_1	IF_5
0x40024d0	       0xfb6442438	           movzx eax, byte [rsp + 0x38] 	      1829	expr.c	FUNCTION_19	WHILE_1	IF_7
0x40024d5	            0x3c06	                               cmp al, 6	      1829	expr.c	FUNCTION_19	WHILE_1	IF_7
0x40024d7	            0x757b	                           jne 0x4002554	      1829	expr.c	FUNCTION_19	WHILE_1	IF_7
0x40024d9	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      1831	expr.c	FUNCTION_19	WHILE_1	IF_7	IF_8
0x40024df	            0x7e23	                           jle 0x4002504	      1831	expr.c	FUNCTION_19	WHILE_1	IF_7	IF_8
0x40024e1	      0xba05000000	                              mov edx, 5	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x40024e6	      0xbe00000000	                              mov esi, 0	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x40024eb	      0xbf00000000	                              mov edi, 0	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x40024f0	      0xe800000000	                          call 0x40024f5	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x40024f5	          0x4889c7	                            mov rdi, rax	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x40024f8	      0xb800000000	                              mov eax, 0	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x40024fd	      0xe800000000	                          call 0x4002502	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x4002502	            0xeb21	                           jmp 0x4002525	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x4002504	      0xba05000000	                              mov edx, 5	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4002509	      0xbe00000000	                              mov esi, 0	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x400250e	      0xbf00000000	                              mov edi, 0	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4002513	      0xe800000000	                          call 0x4002518	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4002518	          0x4889c7	                            mov rdi, rax	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x400251b	      0xb800000000	                              mov eax, 0	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4002520	      0xe800000000	                          call 0x4002525	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4002525	      0xc644243802	                mov byte [rsp + 0x38], 2	      1835	expr.c	FUNCTION_19	WHILE_1	IF_7
0x400252a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1836	expr.c	FUNCTION_19	WHILE_1	IF_7
0x4002533	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1837	expr.c	FUNCTION_19	WHILE_1	IF_7
0x400253c	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1838	expr.c	FUNCTION_19	WHILE_1	IF_7
0x4002545	        0x4183fc13	                          cmp r12d, 0x13	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002549	     0xf8532060000	                           jne 0x4002b81	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x400254f	      0xe91e060000	                           jmp 0x4002b72	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002554	        0x4183fc13	                          cmp r12d, 0x13	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002558	     0xf852e060000	                           jne 0x4002b8c	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x400255e	            0x3c02	                               cmp al, 2	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002560	     0xf854b010000	                           jne 0x40026b1	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002566	      0xe907060000	                           jmp 0x4002b72	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x400256b	       0xfb6542439	           movzx edx, byte [rsp + 0x39] 	      1857	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10	CALL_26
0x4002570	            0xd0ea	                               shr dl, 1	      1857	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10	CALL_26
0x4002572	          0x83e201	                              and edx, 1	      1857	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10	CALL_26
0x4002575	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1857	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10	CALL_26
0x400257a	          0x4889df	                            mov rdi, rbx	      1857	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10	CALL_26
0x400257d	      0xe800000000	                          call 0x4002582	      1857	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10	CALL_26
0x4002582	      0xe997040000	                           jmp 0x4002a1e	      1857	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10	CALL_26
0x4002587	      0x807c243803	                cmp byte [rsp + 0x38], 3	      1861	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x400258c	     0xf85c9050000	                           jne 0x4002b5b	      1861	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002592	        0x807b1803	                cmp byte [rbx + 0x18], 3	      1863	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002596	     0xf85bf050000	                           jne 0x4002b5b	      1863	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x400259c	          0x4d39ee	                            cmp r14, r13	      1863	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x400259f	     0xf85b6050000	                           jne 0x4002b5b	      1863	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x40025a5	    0x4981fd000000	                              cmp r13, 0	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x40025ac	            0x743f	                            je 0x40025ed	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x40025ae	    0x4981fd000000	                              cmp r13, 0	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x40025b5	            0x7436	                            je 0x40025ed	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x40025b7	    0x4c3b2d000000	            cmp r13, qword [0x040025be] 	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x40025be	            0x742d	                            je 0x40025ed	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x40025c0	    0x4c3b2d000000	            cmp r13, qword [0x040025c7] 	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x40025c7	            0x7424	                            je 0x40025ed	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x40025c9	      0xbe00000000	                              mov esi, 0	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x40025ce	          0x488b3b	                    mov rdi, qword [rbx]	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x40025d1	      0xe800000000	                          call 0x40025d6	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x40025d6	            0x85c0	                           test eax, eax	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x40025d8	            0x7513	                           jne 0x40025ed	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x40025da	      0xbe00000000	                              mov esi, 0	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x40025df	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x40025e4	      0xe800000000	                          call 0x40025e9	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x40025e9	            0x85c0	                           test eax, eax	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x40025eb	            0x740e	                            je 0x40025fb	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x40025ed	          0x488b03	                    mov rax, qword [rbx]	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x40025f0	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x40025f5	     0xf8560050000	                           jne 0x4002b5b	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x40025fb	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1872	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_33
0x4002600	      0xe800000000	                          call 0x4002605	      1872	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_33
0x4002605	          0x4989c7	                            mov r15, rax	      1872	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_33
0x4002608	          0x488b3b	                    mov rdi, qword [rbx]	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x400260b	      0xe800000000	                          call 0x4002610	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4002610	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4002615	          0x4c89fe	                            mov rsi, r15	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4002618	          0x4889c7	                            mov rdi, rax	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x400261b	      0xe800000000	                          call 0x4002620	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4002620	            0x85c0	                           test eax, eax	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4002622	     0xf8433050000	                            je 0x4002b5b	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4002628	          0x488b3b	                    mov rdi, qword [rbx]	      1875	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_34
0x400262b	      0xe800000000	                          call 0x4002630	      1875	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_34
0x4002630	          0x4989c7	                            mov r15, rax	      1875	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_34
0x4002633	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1876	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_35
0x4002638	      0xe800000000	                          call 0x400263d	      1876	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_35
0x400263d	          0x4929c7	                            sub r15, rax	      1875	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_34
0x4002640	       0xfb6542439	           movzx edx, byte [rsp + 0x39] 	      1877	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_36
0x4002645	            0xd0ea	                               shr dl, 1	      1877	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_36
0x4002647	          0x83e201	                              and edx, 1	      1877	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_36
0x400264a	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1877	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_36
0x400264f	          0x4889df	                            mov rdi, rbx	      1877	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_36
0x4002652	      0xe800000000	                          call 0x4002657	      1877	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_36
0x4002657	      0xba00000000	                              mov edx, 0	      1878	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_37
0x400265c	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1878	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_37
0x4002661	          0x4889df	                            mov rdi, rbx	      1878	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_37
0x4002664	      0xe800000000	                          call 0x4002669	      1878	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_37
0x4002669	          0x4c89fa	                            mov rdx, r15	      1879	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_38
0x400266c	        0x48c1ea3f	                           shr rdx, 0x3f	      1879	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_38
0x4002670	          0x4c89fe	                            mov rsi, r15	      1879	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_38
0x4002673	          0x4889df	                            mov rdi, rbx	      1879	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_38
0x4002676	      0xe800000000	                          call 0x400267b	      1879	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_38
0x400267b	        0xc6431802	                mov byte [rbx + 0x18], 2	      1880	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x400267f	    0x48c703000000	                      mov qword [rbx], 0	      1881	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002686	      0xe993030000	                           jmp 0x4002a1e	      1874	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x400268b	        0x807b1805	                cmp byte [rbx + 0x18], 5	      1884	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x400268f	     0xf8406050000	                            je 0x4002b9b	      1884	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x4002695	       0xfb6542439	           movzx edx, byte [rsp + 0x39] 	      1887	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12	CALL_39
0x400269a	            0xd0ea	                               shr dl, 1	      1887	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12	CALL_39
0x400269c	          0x83e201	                              and edx, 1	      1887	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12	CALL_39
0x400269f	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1887	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12	CALL_39
0x40026a4	          0x4889df	                            mov rdi, rbx	      1887	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12	CALL_39
0x40026a7	      0xe800000000	                          call 0x40026ac	      1887	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12	CALL_39
0x40026ac	      0xe96d030000	                           jmp 0x4002a1e	      1887	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12	CALL_39
0x40026b1	        0x4183fc13	                          cmp r12d, 0x13	      1889	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026b5	            0x754c	                           jne 0x4002703	      1889	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026b7	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	      1889	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026bb	            0x3c02	                               cmp al, 2	      1889	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026bd	     0xf8538020000	                           jne 0x40028fb	      1889	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026c3	       0xfb6442438	           movzx eax, byte [rsp + 0x38] 	      1890	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026c8	            0x3c05	                               cmp al, 5	      1890	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026ca	     0xf8412030000	                            je 0x40029e2	      1890	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026d0	          0x884318	               mov byte [rbx + 0x18], al	      1893	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026d3	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1894	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026d8	          0x488903	                    mov qword [rbx], rax	      1894	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026db	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1895	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026e0	        0x48894308	                mov qword [rbx + 8], rax	      1895	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026e4	       0xfb6542439	           movzx edx, byte [rsp + 0x39] 	      1896	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13	CALL_40
0x40026e9	            0xd0ea	                               shr dl, 1	      1896	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13	CALL_40
0x40026eb	          0x83e201	                              and edx, 1	      1896	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13	CALL_40
0x40026ee	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1896	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13	CALL_40
0x40026f3	          0x4889df	                            mov rdi, rbx	      1896	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13	CALL_40
0x40026f6	      0xe800000000	                          call 0x40026fb	      1896	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13	CALL_40
0x40026fb	          0x4d89ee	                            mov r14, r13	      1897	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x40026fe	      0xe9b3030000	                           jmp 0x4002ab6	      1897	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x4002703	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002707	            0x3c02	                               cmp al, 2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002709	     0xf85ec010000	                           jne 0x40028fb	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x400270f	      0x807c243802	                cmp byte [rsp + 0x38], 2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002714	     0xf85c8020000	                           jne 0x40029e2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x400271a	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      1902	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x400271f	          0x4d85ff	                           test r15, r15	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x4002722	            0x7533	                           jne 0x4002757	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x4002724	      0x418d4424f5	                    lea eax, [r12 - 0xb]	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x4002729	          0x83f801	                              cmp eax, 1	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x400272c	            0x777c	                            ja 0x40027aa	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x400272e	      0xba05000000	                              mov edx, 5	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x4002733	      0xbe00000000	                              mov esi, 0	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x4002738	      0xbf00000000	                              mov edi, 0	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x400273d	      0xe800000000	                          call 0x4002742	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x4002742	          0x4889c7	                            mov rdi, rax	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x4002745	      0xb800000000	                              mov eax, 0	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x400274a	      0xe800000000	                          call 0x400274f	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x400274f	    0x41bf01000000	                             mov r15d, 1	      1906	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x4002755	            0xeb53	                           jmp 0x40027aa	      1906	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x4002757	        0x4983ff3f	                           cmp r15, 0x3f	      1908	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x400275b	            0x764d	                           jbe 0x40027aa	      1908	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x400275d	      0x418d4424f3	                    lea eax, [r12 - 0xd]	      1909	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4002762	          0x83f801	                              cmp eax, 1	      1909	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4002765	            0x7743	                            ja 0x40027aa	      1909	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4002767	      0xba05000000	                              mov edx, 5	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x400276c	      0xbe00000000	                              mov esi, 0	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4002771	      0xbf00000000	                              mov edi, 0	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4002776	      0xe800000000	                          call 0x400277b	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x400277b	    0x41b900000000	                              mov r9d, 0	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4002781	    0x41b800000000	                              mov r8d, 0	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4002787	      0xb93f000000	                           mov ecx, 0x3f	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x400278c	      0xba00000000	                              mov edx, 0	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4002791	          0x4c89fe	                            mov rsi, r15	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4002794	          0x4889c7	                            mov rdi, rax	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4002797	      0xe800000000	                          call 0x400279c	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x400279c	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1914	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x40027a4	    0x41bf00000000	                             mov r15d, 0	      1914	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x40027aa	      0x418d4424f6	                    lea eax, [r12 - 0xa]	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027af	          0x83f812	                           cmp eax, 0x12	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027b2	     0xf872a020000	                            ja 0x40029e2	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027b8	            0x89c0	                            mov eax, eax	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027ba	    0xff24c5000000	                       jmp qword [rax*8]	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027c1	      0x4c0faf7b10	            imul r15, qword [rbx + 0x10]	      1919	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027c6	        0x4c897b10	             mov qword [rbx + 0x10], r15	      1919	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027ca	      0xe94f020000	                           jmp 0x4002a1e	      1919	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027cf	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027d3	            0x4899	                                     cqo	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027d5	          0x49f7ff	                                idiv r15	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027d8	        0x48894310	             mov qword [rbx + 0x10], rax	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027dc	      0xe93d020000	                           jmp 0x4002a1e	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027e1	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027e5	            0x4899	                                     cqo	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027e7	          0x49f7ff	                                idiv r15	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027ea	        0x48895310	             mov qword [rbx + 0x10], rdx	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027ee	      0xe92b020000	                           jmp 0x4002a1e	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027f3	          0x4489f9	                           mov ecx, r15d	      1922	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027f6	        0x48d36310	              shl qword [rbx + 0x10], cl	      1922	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027fa	      0xe91f020000	                           jmp 0x4002a1e	      1922	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40027ff	          0x4489f9	                           mov ecx, r15d	      1926	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002802	        0x48d36b10	              shr qword [rbx + 0x10], cl	      1926	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002806	      0xe913020000	                           jmp 0x4002a1e	      1928	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400280b	        0x4c097b10	              or qword [rbx + 0x10], r15	      1929	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400280f	      0xe90a020000	                           jmp 0x4002a1e	      1929	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002814	          0x49f7d7	                                 not r15	      1930	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002817	        0x4c097b10	              or qword [rbx + 0x10], r15	      1930	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400281b	      0xe9fe010000	                           jmp 0x4002a1e	      1930	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002820	        0x4c317b10	             xor qword [rbx + 0x10], r15	      1931	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002824	      0xe9f5010000	                           jmp 0x4002a1e	      1931	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002829	        0x4c217b10	             and qword [rbx + 0x10], r15	      1932	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400282d	      0xe9ec010000	                           jmp 0x4002a1e	      1932	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002832	      0xba00000000	                              mov edx, 0	      1937	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1	CALL_45
0x4002837	          0x4c89fe	                            mov rsi, r15	      1937	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1	CALL_45
0x400283a	          0x4889df	                            mov rdi, rbx	      1937	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1	CALL_45
0x400283d	      0xe800000000	                          call 0x4002842	      1937	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1	CALL_45
0x4002842	      0xe9d7010000	                           jmp 0x4002a1e	      1938	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002847	        0x4c397b10	            cmp qword [rbx + 0x10], r15 	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400284b	           0xf94c0	                                 sete al	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400284e	           0xfb6c0	                           movzx eax, al	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002851	          0x48f7d8	                                 neg rax	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002854	        0x48894310	             mov qword [rbx + 0x10], rax	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002858	      0xe9c1010000	                           jmp 0x4002a1e	      1942	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400285d	        0x4c397b10	            cmp qword [rbx + 0x10], r15 	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002861	           0xf95c0	                                setne al	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002864	           0xfb6c0	                           movzx eax, al	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002867	          0x48f7d8	                                 neg rax	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400286a	        0x48894310	             mov qword [rbx + 0x10], rax	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400286e	      0xe9ab010000	                           jmp 0x4002a1e	      1946	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002873	        0x4c3b7b10	            cmp r15, qword [rbx + 0x10] 	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002877	           0xf9fc0	                                 setg al	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400287a	           0xfb6c0	                           movzx eax, al	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400287d	          0x48f7d8	                                 neg rax	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002880	        0x48894310	             mov qword [rbx + 0x10], rax	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002884	      0xe995010000	                           jmp 0x4002a1e	      1950	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002889	        0x4c3b7b10	            cmp r15, qword [rbx + 0x10] 	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400288d	           0xf9dc0	                                setge al	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002890	           0xfb6c0	                           movzx eax, al	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002893	          0x48f7d8	                                 neg rax	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4002896	        0x48894310	             mov qword [rbx + 0x10], rax	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400289a	      0xe97f010000	                           jmp 0x4002a1e	      1954	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400289f	        0x4c3b7b10	            cmp r15, qword [rbx + 0x10] 	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028a3	           0xf9ec0	                                setle al	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028a6	           0xfb6c0	                           movzx eax, al	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028a9	          0x48f7d8	                                 neg rax	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028ac	        0x48894310	             mov qword [rbx + 0x10], rax	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028b0	      0xe969010000	                           jmp 0x4002a1e	      1958	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028b5	        0x4c3b7b10	            cmp r15, qword [rbx + 0x10] 	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028b9	           0xf9cc0	                                 setl al	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028bc	           0xfb6c0	                           movzx eax, al	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028bf	          0x48f7d8	                                 neg rax	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028c2	        0x48894310	             mov qword [rbx + 0x10], rax	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028c6	      0xe953010000	                           jmp 0x4002a1e	      1962	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028cb	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028d0	           0xf95c0	                                setne al	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028d3	          0x4d85ff	                           test r15, r15	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028d6	           0xf95c2	                                setne dl	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028d9	           0xfb6d2	                           movzx edx, dl	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028dc	          0x4821d0	                            and rax, rdx	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028df	        0x48894310	             mov qword [rbx + 0x10], rax	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028e3	      0xe936010000	                           jmp 0x4002a1e	      1965	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028e8	        0x4c0b7b10	              or r15, qword [rbx + 0x10]	      1967	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028ec	           0xf95c0	                                setne al	      1967	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028ef	           0xfb6c0	                           movzx eax, al	      1967	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028f2	        0x48894310	             mov qword [rbx + 0x10], rax	      1967	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028f6	      0xe923010000	                           jmp 0x4002a1e	      1968	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40028fb	            0x3c03	                               cmp al, 3	      1971	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x40028fd	     0xf85df000000	                           jne 0x40029e2	      1971	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002903	      0x807c243803	                cmp byte [rsp + 0x38], 3	      1972	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002908	     0xf85d4000000	                           jne 0x40029e2	      1972	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x400290e	      0x418d4424ed	                   lea eax, [r12 - 0x13]	      1973	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002913	          0x83f801	                              cmp eax, 1	      1973	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002916	            0x7617	                           jbe 0x400292f	      1973	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002918	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1975	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x400291d	     0xf85bf000000	                           jne 0x40029e2	      1975	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002923	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      1976	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002929	     0xf85b3000000	                           jne 0x40029e2	      1976	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x400292f	        0x44886318	             mov byte [rbx + 0x18], r12b	      1979	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002933	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1980	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002938	        0x48894308	                mov qword [rbx + 8], rax	      1980	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x400293c	        0x4183fc13	                          cmp r12d, 0x13	      1981	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	IF_18
0x4002940	            0x751c	                           jne 0x400295e	      1981	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	IF_18
0x4002942	       0xfb6542439	           movzx edx, byte [rsp + 0x39] 	      1982	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	CALL_46
0x4002947	            0xd0ea	                               shr dl, 1	      1982	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	CALL_46
0x4002949	          0x83e201	                              and edx, 1	      1982	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	CALL_46
0x400294c	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1982	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	CALL_46
0x4002951	          0x4889df	                            mov rdi, rbx	      1982	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	CALL_46
0x4002954	      0xe800000000	                          call 0x4002959	      1982	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	CALL_46
0x4002959	      0xe9c0000000	                           jmp 0x4002a1e	      1982	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	CALL_46
0x400295e	        0x4183fc14	                          cmp r12d, 0x14	      1983	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19
0x4002962	     0xf85b6000000	                           jne 0x4002a1e	      1983	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19
0x4002968	       0xfb6542439	           movzx edx, byte [rsp + 0x39] 	      1986	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19
0x400296d	            0xd0ea	                               shr dl, 1	      1986	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19
0x400296f	          0x83e201	                              and edx, 1	      1985	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	CALL_47
0x4002972	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1985	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	CALL_47
0x4002977	          0x4889df	                            mov rdi, rbx	      1985	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	CALL_47
0x400297a	      0xe800000000	                          call 0x400297f	      1985	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	CALL_47
0x400297f	          0x4d39ee	                            cmp r14, r13	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4002982	           0xf94c2	                                 sete dl	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4002985	    0x4981fe000000	                              cmp r14, 0	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x400298c	           0xf95c0	                                setne al	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x400298f	            0x84c2	                             test dl, al	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4002991	     0xf8487000000	                            je 0x4002a1e	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4002997	    0x4981fe000000	                              cmp r14, 0	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x400299e	            0x747e	                            je 0x4002a1e	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x40029a0	    0x488b05000000	            mov rax, qword [0x040029a7] 	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x40029a7	          0x4939c6	                            cmp r14, rax	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x40029aa	            0x746a	                            je 0x4002a16	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x40029ac	    0x488b05000000	            mov rax, qword [0x040029b3] 	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x40029b3	          0x4939c6	                            cmp r14, rax	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x40029b6	            0x7463	                            je 0x4002a1b	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x40029b8	      0xbe00000000	                              mov esi, 0	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x40029bd	          0x488b3b	                    mov rdi, qword [rbx]	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x40029c0	      0xe800000000	                          call 0x40029c5	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x40029c5	            0x85c0	                           test eax, eax	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x40029c7	            0x7555	                           jne 0x4002a1e	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x40029c9	      0xbe00000000	                              mov esi, 0	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x40029ce	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x40029d3	      0xe800000000	                          call 0x40029d8	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x40029d8	            0x85c0	                           test eax, eax	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x40029da	     0xf8487010000	                            je 0x4002b67	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x40029e0	            0xeb3c	                           jmp 0x4002a1e	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x40029e2	          0x4889df	                            mov rdi, rbx	      2001	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_51
0x40029e5	      0xe800000000	                          call 0x40029ea	      2001	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_51
0x40029ea	          0x488903	                    mov qword [rbx], rax	      2001	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_51
0x40029ed	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2002	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_52
0x40029f2	      0xe800000000	                          call 0x40029f7	      2002	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_52
0x40029f7	        0x48894308	                mov qword [rbx + 8], rax	      2002	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_52
0x40029fb	        0x44886318	             mov byte [rbx + 0x18], r12b	      2003	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x40029ff	    0x48c743100000	               mov qword [rbx + 0x10], 0	      2004	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a07	         0xfb64319	           movzx eax, byte [rbx + 0x19] 	      2005	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a0b	          0x83c801	                               or eax, 1	      2005	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a0e	          0x83e0fd	                     and eax, 0xfffffffd	      2006	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a11	          0x884319	               mov byte [rbx + 0x19], al	      2006	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a14	            0xeb08	                           jmp 0x4002a1e	      2006	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a16	          0x4989c6	                            mov r14, rax	      2006	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a19	            0xeb03	                           jmp 0x4002a1e	      2006	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a1b	          0x4989c6	                            mov r14, rax	      2006	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4002a1e	    0x4981fe000000	                              cmp r14, 0	      2011	expr.c	FUNCTION_19	WHILE_1	IF_21	IF_22
0x4002a25	     0xf848b000000	                            je 0x4002ab6	      2011	expr.c	FUNCTION_19	WHILE_1	IF_21	IF_22
0x4002a2b	          0x4d39ee	                            cmp r14, r13	      2011	expr.c	FUNCTION_19	WHILE_1	IF_21	IF_22
0x4002a2e	     0xf8482000000	                            je 0x4002ab6	      2011	expr.c	FUNCTION_19	WHILE_1	IF_21	IF_22
0x4002a34	    0x4981fd000000	                              cmp r13, 0	      2013	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_12	IF_23
0x4002a3b	            0x745d	                            je 0x4002a9a	      2013	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_12	IF_23
0x4002a3d	    0x488b05000000	            mov rax, qword [0x04002a44] 	      2015	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_13	IF_24
0x4002a44	          0x4939c6	                            cmp r14, rax	      2015	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_13	IF_24
0x4002a47	            0x7456	                            je 0x4002a9f	      2015	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_13	IF_24
0x4002a49	          0x4939c5	                            cmp r13, rax	      2017	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_14	IF_25
0x4002a4c	            0x7456	                            je 0x4002aa4	      2017	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_14	IF_25
0x4002a4e	    0x488b05000000	            mov rax, qword [0x04002a55] 	      2019	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_15	IF_26
0x4002a55	          0x4939c6	                            cmp r14, rax	      2019	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_15	IF_26
0x4002a58	            0x744f	                            je 0x4002aa9	      2019	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_15	IF_26
0x4002a5a	          0x4939c5	                            cmp r13, rax	      2021	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_16	IF_27
0x4002a5d	            0x744f	                            je 0x4002aae	      2021	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_16	IF_27
0x4002a5f	    0x4981fd000000	                              cmp r13, 0	      2023	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_17	IF_28
0x4002a66	            0x744e	                            je 0x4002ab6	      2023	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_17	IF_28
0x4002a68	    0x4981fe000000	                              cmp r14, 0	      2025	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_18	IF_29
0x4002a6f	            0x7442	                            je 0x4002ab3	      2025	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_18	IF_29
0x4002a71	        0x4183fc14	                          cmp r12d, 0x14	      2028	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_19	IF_30
0x4002a75	            0x743f	                            je 0x4002ab6	      2028	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_19	IF_30
0x4002a77	      0xba05000000	                              mov edx, 5	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4002a7c	      0xbe00000000	                              mov esi, 0	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4002a81	      0xbf00000000	                              mov edi, 0	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4002a86	      0xe800000000	                          call 0x4002a8b	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4002a8b	          0x4889c7	                            mov rdi, rax	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4002a8e	      0xb800000000	                              mov eax, 0	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4002a93	      0xe800000000	                          call 0x4002a98	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4002a98	            0xeb1c	                           jmp 0x4002ab6	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4002a9a	          0x4d89ee	                            mov r14, r13	      2014	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_12	IF_23
0x4002a9d	            0xeb17	                           jmp 0x4002ab6	      2014	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_12	IF_23
0x4002a9f	          0x4989c6	                            mov r14, rax	      2014	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_12	IF_23
0x4002aa2	            0xeb12	                           jmp 0x4002ab6	      2014	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_12	IF_23
0x4002aa4	          0x4989c6	                            mov r14, rax	      2018	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_14	IF_25
0x4002aa7	            0xeb0d	                           jmp 0x4002ab6	      2018	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_14	IF_25
0x4002aa9	          0x4989c6	                            mov r14, rax	      2018	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_14	IF_25
0x4002aac	            0xeb08	                           jmp 0x4002ab6	      2018	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_14	IF_25
0x4002aae	          0x4989c6	                            mov r14, rax	      2022	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_16	IF_27
0x4002ab1	            0xeb03	                           jmp 0x4002ab6	      2022	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_16	IF_27
0x4002ab3	          0x4d89ee	                            mov r14, r13	      2022	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_16	IF_27
0x4002ab6	      0x807c240a00	                 cmp byte [rsp + 0xa], 0	      1771	expr.c	FUNCTION_19	WHILE_1
0x4002abb	            0x741b	                            je 0x4002ad8	      1771	expr.c	FUNCTION_19	WHILE_1
0x4002abd	          0x4189ef	                           mov r15d, ebp	      1771	expr.c	FUNCTION_19	WHILE_1
0x4002ac0	          0x4863c5	                         movsxd rax, ebp	      1771	expr.c	FUNCTION_19	WHILE_1
0x4002ac3	     0xfb6b8000000	                   movzx edi, byte [rax]	      1771	expr.c	FUNCTION_19	WHILE_1
0x4002aca	          0x4189ec	                           mov r12d, ebp	      1771	expr.c	FUNCTION_19	WHILE_1
0x4002acd	      0x40387c240b	               cmp byte [rsp + 0xb], dil	      1771	expr.c	FUNCTION_19	WHILE_1
0x4002ad2	     0xf8c6ef5ffff	                            jl 0x4002046	      1771	expr.c	FUNCTION_19	WHILE_1
0x4002ad8	          0x488b3b	                    mov rdi, qword [rbx]	      2039	expr.c	FUNCTION_19	IF_31
0x4002adb	          0x4885ff	                           test rdi, rdi	      2039	expr.c	FUNCTION_19	IF_31
0x4002ade	            0x7405	                            je 0x4002ae5	      2039	expr.c	FUNCTION_19	IF_31
0x4002ae0	      0xe800000000	                          call 0x4002ae5	      2040	expr.c	FUNCTION_19	CALL_55
0x4002ae5	      0x807c240c00	                 cmp byte [rsp + 0xc], 0	      2042	expr.c	FUNCTION_19	IF_32
0x4002aea	            0x750f	                           jne 0x4002afb	      2042	expr.c	FUNCTION_19	IF_32
0x4002aec	      0x837c240400	                  cmp dword [rsp + 4], 0	      2042	expr.c	FUNCTION_19	IF_32
0x4002af1	            0x7508	                           jne 0x4002afb	      2042	expr.c	FUNCTION_19	IF_32
0x4002af3	          0x4889df	                            mov rdi, rbx	      2043	expr.c	FUNCTION_19	CALL_56
0x4002af6	      0xe800000000	                          call 0x4002afb	      2043	expr.c	FUNCTION_19	CALL_56
0x4002afb	        0x807b1802	                cmp byte [rbx + 0x18], 2	      2045	expr.c	FUNCTION_19
0x4002aff	      0xb800000000	                              mov eax, 0	      2045	expr.c	FUNCTION_19
0x4002b04	        0x490f45c6	                         cmovne rax, r14	      2045	expr.c	FUNCTION_19
0x4002b08	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2046	expr.c	FUNCTION_19
0x4002b0d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2046	expr.c	FUNCTION_19
0x4002b16	     0xf849e000000	                            je 0x4002bba	      2046	expr.c	FUNCTION_19
0x4002b1c	      0xe994000000	                           jmp 0x4002bb5	      2046	expr.c	FUNCTION_19
0x4002b21	    0xc70424020000	                      mov dword [rsp], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x4002b28	    0x41bc16000000	                          mov r12d, 0x16	      1640	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002b2e	      0xe91df4ffff	                           jmp 0x4001f50	      1640	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002b33	    0xc70424020000	                      mov dword [rsp], 2	      1668	expr.c	FUNCTION_16	SWITCH_2
0x4002b3a	    0x41bc19000000	                          mov r12d, 0x19	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002b40	      0xe90bf4ffff	                           jmp 0x4001f50	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002b45	    0xc70424010000	                      mov dword [rsp], 1	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002b4c	      0xbd00000000	                              mov ebp, 0	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002b51	      0xc644240a00	                 mov byte [rsp + 0xa], 0	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002b56	      0xe9d5f8ffff	                           jmp 0x4002430	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4002b5b	      0x807c243802	                cmp byte [rsp + 0x38], 2	      1883	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x4002b60	            0x7542	                           jne 0x4002ba4	      1883	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x4002b62	      0xe924fbffff	                           jmp 0x400268b	      1883	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x4002b67	    0x41be00000000	                             mov r14d, 0	      1992	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4002b6d	      0xe944ffffff	                           jmp 0x4002ab6	      1992	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4002b72	        0x807b1805	                cmp byte [rbx + 0x18], 5	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002b76	     0xf85eff9ffff	                           jne 0x400256b	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002b7c	      0xe930fbffff	                           jmp 0x40026b1	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002b81	        0x4183fc14	                          cmp r12d, 0x14	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002b85	            0x74d4	                            je 0x4002b5b	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002b87	      0xe925fbffff	                           jmp 0x40026b1	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002b8c	        0x4183fc14	                          cmp r12d, 0x14	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002b90	     0xf856dfbffff	                           jne 0x4002703	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002b96	      0xe9ecf9ffff	                           jmp 0x4002587	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4002b9b	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002b9f	      0xe957fdffff	                           jmp 0x40028fb	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002ba4	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002ba8	            0x3c02	                               cmp al, 2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002baa	     0xf854bfdffff	                           jne 0x40028fb	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002bb0	      0xe92dfeffff	                           jmp 0x40029e2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4002bb5	      0xe800000000	                          call 0x4002bba	      2046	expr.c	FUNCTION_19
0x4002bba	        0x4883c458	                           add rsp, 0x58	      2046	expr.c	FUNCTION_19
0x4002bbe	              0x5b	                                 pop rbx	      2046	expr.c	FUNCTION_19
0x4002bbf	              0x5d	                                 pop rbp	      2046	expr.c	FUNCTION_19
0x4002bc0	            0x415c	                                 pop r12	      2046	expr.c	FUNCTION_19
0x4002bc2	            0x415d	                                 pop r13	      2046	expr.c	FUNCTION_19
0x4002bc4	            0x415e	                                 pop r14	      2046	expr.c	FUNCTION_19
0x4002bc6	            0x415f	                                 pop r15	      2046	expr.c	FUNCTION_19
0x4002bc8	              0xc3	                                     ret	      2046	expr.c	FUNCTION_19
floating_constant	CALL,5:DO,0:functions,0:ELSE,1:IF,2:FOR,0:WHILE,0:SWITCH,0	36
0x400009c	              0x55	                                push rbp	       196	expr.c	FUNCTION_5
0x400009d	              0x53	                                push rbx	       196	expr.c	FUNCTION_5
0x400009e	        0x4883ec08	                              sub rsp, 8	       196	expr.c	FUNCTION_5
0x40000a2	          0x4889fd	                            mov rbp, rdi	       196	expr.c	FUNCTION_5
0x40000a5	      0xb900000000	                              mov ecx, 0	       200	expr.c	FUNCTION_5	CALL_1
0x40000aa	      0xba00000000	                              mov edx, 0	       200	expr.c	FUNCTION_5	CALL_1
0x40000af	      0xbe00000000	                              mov esi, 0	       200	expr.c	FUNCTION_5	CALL_1
0x40000b4	      0xbf00000000	                              mov edi, 0	       200	expr.c	FUNCTION_5	CALL_1
0x40000b9	      0xe800000000	                          call 0x40000be	       200	expr.c	FUNCTION_5	CALL_1
0x40000be	            0x85c0	                           test eax, eax	       203	expr.c	FUNCTION_5	IF_1
0x40000c0	            0x744d	                            je 0x400010f	       203	expr.c	FUNCTION_5	IF_1
0x40000c2	            0x89c3	                            mov ebx, eax	       203	expr.c	FUNCTION_5	IF_1
0x40000c4	          0x83f802	                              cmp eax, 2	       205	expr.c	FUNCTION_5	IF_1	IF_2
0x40000c7	            0x7523	                           jne 0x40000ec	       205	expr.c	FUNCTION_5	IF_1	IF_2
0x40000c9	      0xba05000000	                              mov edx, 5	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40000ce	      0xbe00000000	                              mov esi, 0	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40000d3	      0xbf00000000	                              mov edi, 0	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40000d8	      0xe800000000	                          call 0x40000dd	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40000dd	          0x4889c7	                            mov rdi, rax	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40000e0	      0xb800000000	                              mov eax, 0	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40000e5	      0xe800000000	                          call 0x40000ea	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40000ea	            0xeb23	                           jmp 0x400010f	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40000ec	      0xba05000000	                              mov edx, 5	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x40000f1	      0xbe00000000	                              mov esi, 0	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x40000f6	      0xbf00000000	                              mov edi, 0	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x40000fb	      0xe800000000	                          call 0x4000100	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4000100	            0x89de	                            mov esi, ebx	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4000102	          0x4889c7	                            mov rdi, rax	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4000105	      0xb800000000	                              mov eax, 0	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x400010a	      0xe800000000	                          call 0x400010f	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x400010f	        0xc6451806	                mov byte [rbp + 0x18], 6	       215	expr.c	FUNCTION_5
0x4000113	    0x48c74510ffff	mov qword [rbp + 0x10], 0xffffffffffffffff 	       218	expr.c	FUNCTION_5
0x400011b	        0x4883c408	                              add rsp, 8	       219	expr.c	FUNCTION_5
0x400011f	              0x5b	                                 pop rbx	       219	expr.c	FUNCTION_5
0x4000120	              0x5d	                                 pop rbp	       219	expr.c	FUNCTION_5
0x4000121	              0xc3	                                     ret	       219	expr.c	FUNCTION_5
expr_set_rank	CALL,2:DO,0:functions,0:ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0	11
0x4000911	          0x8d47e2	                   lea eax, [rdi - 0x1e]	      1547	expr.c	FUNCTION_14	CALL_2
0x4000914	          0x83f81f	                           cmp eax, 0x1f	      1547	expr.c	FUNCTION_14	CALL_2
0x4000917	            0x7618	                           jbe 0x4000931	      1547	expr.c	FUNCTION_14	CALL_2
0x4000919	        0x4883ec08	                              sub rsp, 8	      1546	expr.c	FUNCTION_14
0x400091d	      0xba00000000	                              mov edx, 0	      1547	expr.c	FUNCTION_14	CALL_2
0x4000922	      0xbe0b060000	                          mov esi, 0x60b	      1547	expr.c	FUNCTION_14	CALL_2
0x4000927	      0xbf00000000	                              mov edi, 0	      1547	expr.c	FUNCTION_14	CALL_2
0x400092c	      0xe800000000	                          call 0x4000931	      1547	expr.c	FUNCTION_14	CALL_2
0x4000931	            0x89ff	                            mov edi, edi	      1548	expr.c	FUNCTION_14
0x4000933	    0x4088b7000000	                     mov byte [rdi], sil	      1548	expr.c	FUNCTION_14
0x400093a	              0xc3	                                     ret	      1548	expr.c	FUNCTION_14
resolve_expression	CALL,7:DO,0:functions,0:ELSE,13:IF,31:FOR,0:WHILE,0:SWITCH,2	398
0x40009c9	            0x4156	                                push r14	      2053	expr.c	FUNCTION_20
0x40009cb	            0x4155	                                push r13	      2053	expr.c	FUNCTION_20
0x40009cd	            0x4154	                                push r12	      2053	expr.c	FUNCTION_20
0x40009cf	              0x55	                                push rbp	      2053	expr.c	FUNCTION_20
0x40009d0	              0x53	                                push rbx	      2053	expr.c	FUNCTION_20
0x40009d1	        0x4883ec50	                           sub rsp, 0x50	      2053	expr.c	FUNCTION_20
0x40009d5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2053	expr.c	FUNCTION_20
0x40009de	      0x4889442448	             mov qword [rsp + 0x48], rax	      2053	expr.c	FUNCTION_20
0x40009e3	            0x31c0	                            xor eax, eax	      2053	expr.c	FUNCTION_20
0x40009e5	        0x4c8b7710	            mov r14, qword [rdi + 0x10] 	      2055	expr.c	FUNCTION_20
0x40009e9	          0x4c8b2f	                    mov r13, qword [rdi]	      2056	expr.c	FUNCTION_20
0x40009ec	        0x4c892c24	                    mov qword [rsp], r13	      2056	expr.c	FUNCTION_20
0x40009f0	        0x488b4708	                mov rax, qword [rdi + 8]	      2058	expr.c	FUNCTION_20
0x40009f4	      0x4889442408	                mov qword [rsp + 8], rax	      2058	expr.c	FUNCTION_20
0x40009f9	         0xfb66f18	           movzx ebp, byte [rdi + 0x18] 	      2059	expr.c	FUNCTION_20
0x40009fd	        0x4080fd1c	                           cmp bpl, 0x1c	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000a01	     0xf87f2050000	                            ja 0x4000ff9	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000a07	          0x4889fb	                            mov rbx, rdi	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000a0a	        0x440fb6e5	                         movzx r12d, bpl	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000a0e	        0x400fb6c5	                          movzx eax, bpl	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000a12	    0xff24c5000000	                       jmp qword [rax*8]	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000a19	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2072	expr.c	FUNCTION_20	SWITCH_1
0x4000a22	      0xe961050000	                           jmp 0x4000f88	      2073	expr.c	FUNCTION_20	SWITCH_1
0x4000a27	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000a2c	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000a31	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000a36	          0x4889e7	                            mov rdi, rsp	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000a39	      0xe800000000	                          call 0x4000a3e	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000a3e	            0x85c0	                           test eax, eax	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000a40	     0xf8542050000	                           jne 0x4000f88	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000a46	      0xe9ba050000	                           jmp 0x4001005	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000a4b	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000a50	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000a55	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000a5a	          0x4889e7	                            mov rdi, rsp	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000a5d	      0xe800000000	                          call 0x4000a62	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000a62	            0x85c0	                           test eax, eax	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000a64	     0xf849b050000	                            je 0x4001005	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000a6a	      0xb800000000	                              mov eax, 0	      2089	expr.c	FUNCTION_20	SWITCH_1	IF_3
0x4000a6f	    0x48817c242000	               cmp qword [rsp + 0x20], 0	      2088	expr.c	FUNCTION_20	SWITCH_1	IF_3
0x4000a78	     0xf8587050000	                           jne 0x4001005	      2088	expr.c	FUNCTION_20	SWITCH_1	IF_3
0x4000a7e	        0x4183fc09	                             cmp r12d, 9	      2091	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000a82	            0x7516	                           jne 0x4000a9a	      2091	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000a84	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000a8a	           0xf94c0	                                 sete al	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000a8d	           0xfb6c0	                           movzx eax, al	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000a90	      0x4889442410	             mov qword [rsp + 0x10], rax	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000a95	      0xe9d2050000	                           jmp 0x400106c	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000a9a	        0x4183fc07	                             cmp r12d, 7	      2093	expr.c	FUNCTION_20	SWITCH_1	ELSE_1	IF_5
0x4000a9e	            0x750a	                           jne 0x4000aaa	      2093	expr.c	FUNCTION_20	SWITCH_1	ELSE_1	IF_5
0x4000aa0	      0x48f75c2410	                  neg qword [rsp + 0x10]	      2094	expr.c	FUNCTION_20	SWITCH_1	ELSE_1	IF_5
0x4000aa5	      0xe9c2050000	                           jmp 0x400106c	      2094	expr.c	FUNCTION_20	SWITCH_1	ELSE_1	IF_5
0x4000aaa	      0x48f7542410	                  not qword [rsp + 0x10]	      2096	expr.c	FUNCTION_20	SWITCH_1	ELSE_2
0x4000aaf	      0xe9b8050000	                           jmp 0x400106c	      2096	expr.c	FUNCTION_20	SWITCH_1	ELSE_2
0x4000ab4	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000ab9	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000abe	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000ac3	          0x4889e7	                            mov rdi, rsp	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000ac6	      0xe800000000	                          call 0x4000acb	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000acb	            0x85c0	                           test eax, eax	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000acd	     0xf8432050000	                            je 0x4001005	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000ad3	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000ad8	      0x488d542428	                   lea rdx, [rsp + 0x28]	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000add	      0x488d742418	                   lea rsi, [rsp + 0x18]	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000ae2	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000ae7	      0xe800000000	                          call 0x4000aec	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000aec	            0x85c0	                           test eax, eax	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000aee	     0xf8411050000	                            je 0x4001005	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000af4	        0x4183fc13	                          cmp r12d, 0x13	      2125	expr.c	FUNCTION_20	SWITCH_1	IF_7
0x4000af8	            0x754f	                           jne 0x4000b49	      2125	expr.c	FUNCTION_20	SWITCH_1	IF_7
0x4000afa	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2127	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x4000aff	    0x483d00000000	                              cmp rax, 0	      2127	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x4000b05	            0x750a	                           jne 0x4000b11	      2127	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x4000b07	      0x4c03742418	             add r14, qword [rsp + 0x18]	      2129	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x4000b0c	      0xe97d040000	                           jmp 0x4000f8e	      2131	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x4000b11	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2133	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b16	    0x4881fa000000	                              cmp rdx, 0	      2133	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b1d	     0xf85fb040000	                           jne 0x400101e	      2133	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b23	      0x4c03742410	             add r14, qword [rsp + 0x10]	      2135	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b28	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2136	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b2d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2136	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b32	      0x4889442420	             mov qword [rsp + 0x20], rax	      2137	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b37	      0x488b542408	                mov rdx, qword [rsp + 8]	      2138	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b3c	        0x48891424	                    mov qword [rsp], rdx	      2138	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b40	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      2139	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b44	      0xe952040000	                           jmp 0x4000f9b	      2139	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000b49	        0x4183fc14	                          cmp r12d, 0x14	      2144	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10
0x4000b4d	            0x7519	                           jne 0x4000b68	      2144	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10
0x4000b4f	    0x48817c242800	               cmp qword [rsp + 0x28], 0	      2146	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x4000b58	     0xf85ce040000	                           jne 0x400102c	      2146	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x4000b5e	      0x4c2b742418	             sub r14, qword [rsp + 0x18]	      2148	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x4000b63	      0xe926040000	                           jmp 0x4000f8e	      2150	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x4000b68	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2167	expr.c	FUNCTION_20	SWITCH_1
0x4000b71	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b76	    0x4881fa000000	                              cmp rdx, 0	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b7d	            0x750f	                           jne 0x4000b8e	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b7f	    0x48817c242800	               cmp qword [rsp + 0x28], 0	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b88	     0xf841e020000	                            je 0x4000dac	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b8e	      0x418d4424eb	                   lea eax, [r12 - 0x15]	      2170	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b93	          0x83f801	                              cmp eax, 1	      2170	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b96	     0xf8610020000	                           jbe 0x4000dac	      2170	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b9c	          0x8d45e9	                   lea eax, [rbp - 0x17]	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000b9f	            0x3c03	                               cmp al, 3	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000ba1	            0x7606	                           jbe 0x4000ba9	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000ba3	        0x4183fc14	                          cmp r12d, 0x14	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000ba7	            0x7563	                           jne 0x4000c0c	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000ba9	      0x4839542428	            cmp qword [rsp + 0x28], rdx 	      2173	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bae	            0x755c	                           jne 0x4000c0c	      2173	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bb0	    0x833d00000000	               cmp dword [0x04000bb7], 0	      2174	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bb7	            0x7518	                           jne 0x4000bd1	      2174	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bb9	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4000bbe	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4000bc3	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4000bc8	      0xe800000000	                          call 0x4000bcd	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4000bcd	            0x85c0	                           test eax, eax	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4000bcf	            0x743b	                            je 0x4000c0c	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4000bd1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bd6	    0x483b15000000	            cmp rdx, qword [0x04000bdd] 	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bdd	            0x750c	                           jne 0x4000beb	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bdf	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000be4	      0x4839442410	            cmp qword [rsp + 0x10], rax 	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000be9	            0x7521	                           jne 0x4000c0c	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000beb	    0x4881fa000000	                              cmp rdx, 0	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bf2	     0xf85b4010000	                           jne 0x4000dac	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bf8	      0x488b442408	                mov rax, qword [rsp + 8]	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bfd	        0x48390424	                    cmp qword [rsp], rax	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c01	     0xf856e040000	                           jne 0x4001075	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c07	      0xe9a0010000	                           jmp 0x4000dac	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c0c	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c11	    0x4881fa000000	                              cmp rdx, 0	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c18	     0xf8557040000	                           jne 0x4001075	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c1e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c24	            0x7426	                            je 0x4000c4c	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c26	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c2b	    0x4881f9000000	                              cmp rcx, 0	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c32	     0xf8524040000	                           jne 0x400105c	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c38	          0x4889ca	                            mov rdx, rcx	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c3b	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c41	     0xf8405040000	                            je 0x400104c	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c47	      0xe98e000000	                           jmp 0x4000cda	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c4c	          0x8d45f1	                    lea eax, [rbp - 0xf]	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x4000c4f	            0xa8fd	                           test al, 0xfd	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x4000c51	     0xf8535040000	                           jne 0x400108c	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x4000c57	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c5c	    0x483d00000000	                              cmp rax, 0	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c62	            0x750c	                           jne 0x4000c70	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c64	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c6a	     0xf841e030000	                            je 0x4000f8e	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c70	      0x4889442420	             mov qword [rsp + 0x20], rax	      2186	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c75	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2187	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c7a	      0x4889442410	             mov qword [rsp + 0x10], rax	      2187	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c7f	      0x488b442408	                mov rax, qword [rsp + 8]	      2188	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c84	        0x48890424	                    mov qword [rsp], rax	      2188	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c88	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      2189	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c8c	      0xe9fd020000	                           jmp 0x4000f8e	      2189	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4000c91	      0x418d4424f3	                    lea eax, [r12 - 0xd]	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x4000c96	          0x83f801	                              cmp eax, 1	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x4000c99	            0x771e	                            ja 0x4000cb9	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x4000c9b	    0x4881fa000000	                              cmp rdx, 0	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x4000ca2	     0xf85e6020000	                           jne 0x4000f8e	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x4000ca8	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x4000cae	     0xf85da020000	                           jne 0x4000f8e	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x4000cb4	      0xe9f3000000	                           jmp 0x4000dac	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x4000cb9	            0x89e8	                            mov eax, ebp	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4000cbb	          0x83e0fd	                     and eax, 0xfffffffd	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4000cbe	            0x3c10	                            cmp al, 0x10	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4000cc0	     0xf84e6000000	                            je 0x4000dac	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4000cc6	      0xb800000000	                              mov eax, 0	      2204	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4000ccb	        0x4183fc0a	                           cmp r12d, 0xa	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4000ccf	     0xf8530030000	                           jne 0x4001005	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4000cd5	      0xe9d2000000	                           jmp 0x4000dac	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4000cda	    0x4881fa000000	                              cmp rdx, 0	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000ce1	            0x752f	                           jne 0x4000d12	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000ce3	        0x4183fc0a	                           cmp r12d, 0xa	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000ce7	            0x7529	                           jne 0x4000d12	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000ce9	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000cef	            0x7521	                           jne 0x4000d12	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000cf1	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      2209	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000cf6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2210	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000cfb	      0x4889442410	             mov qword [rsp + 0x10], rax	      2210	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000d00	      0x488b442408	                mov rax, qword [rsp + 8]	      2211	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000d05	        0x48890424	                    mov qword [rsp], rax	      2211	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000d09	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      2212	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000d0d	      0xe97c020000	                           jmp 0x4000f8e	      2214	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4000d12	      0x418d4424f6	                    lea eax, [r12 - 0xa]	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x4000d17	          0x83f801	                              cmp eax, 1	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x4000d1a	            0x7715	                            ja 0x4000d31	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x4000d1c	    0x4881f9000000	                              cmp rcx, 0	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x4000d23	            0x750c	                           jne 0x4000d31	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x4000d25	    0x48837c241801	               cmp qword [rsp + 0x18], 1	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x4000d2b	     0xf845d020000	                            je 0x4000f8e	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x4000d31	      0xb800000000	                              mov eax, 0	      2227	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d36	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2222	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d3b	      0x48397c2410	            cmp qword [rsp + 0x10], rdi 	      2222	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d40	     0xf85bf020000	                           jne 0x4001005	      2222	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d46	    0x488b05000000	            mov rax, qword [0x04000d4d] 	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d4d	          0x4839c8	                            cmp rax, rcx	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d50	            0x7505	                           jne 0x4000d57	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d52	          0x4839d0	                            cmp rax, rdx	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d55	            0x742e	                            je 0x4000d85	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d57	    0x4881f9000000	                              cmp rcx, 0	      2225	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d5e	     0xf859c020000	                           jne 0x4001000	      2225	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d64	    0x4881fa000000	                              cmp rdx, 0	      2225	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d6b	     0xf858f020000	                           jne 0x4001000	      2225	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d71	      0xb800000000	                              mov eax, 0	      2227	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d76	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2226	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d7b	        0x48393c24	                    cmp qword [rsp], rdi	      2226	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d7f	     0xf8580020000	                           jne 0x4001005	      2226	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000d85	        0x4183fc12	                          cmp r12d, 0x12	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x4000d89	     0xf84ff010000	                            je 0x4000f8e	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x4000d8f	        0x4183fc0f	                           cmp r12d, 0xf	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x4000d93	     0xf84f5010000	                            je 0x4000f8e	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x4000d99	      0x418d5424f0	                   lea edx, [r12 - 0x10]	      2233	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000d9e	      0xb800000000	                              mov eax, 0	      2234	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000da3	          0x83fa01	                              cmp edx, 1	      2233	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000da6	     0xf8759020000	                            ja 0x4001005	      2233	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000dac	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      2237	expr.c	FUNCTION_20	SWITCH_1
0x4000db1	      0x48034c2418	             add rcx, qword [rsp + 0x18]	      2237	expr.c	FUNCTION_20	SWITCH_1
0x4000db6	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2237	expr.c	FUNCTION_20	SWITCH_1
0x4000dbb	          0x83ed0a	                            sub ebp, 0xa	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000dbe	        0x4080fd12	                           cmp bpl, 0x12	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000dc2	     0xf87ac010000	                            ja 0x4000f74	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000dc8	        0x400fb6ed	                          movzx ebp, bpl	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000dcc	    0xff24ed000000	                       jmp qword [rbp*8]	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000dd3	      0x48014c2410	            add qword [rsp + 0x10], rcx 	      2240	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000dd8	      0xe98f020000	                           jmp 0x400106c	      2240	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ddd	      0x48294c2410	             sub qword [rsp + 0x10], rcx	      2241	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000de2	      0xe985020000	                           jmp 0x400106c	      2241	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000de7	    0x480faf4c2410	            imul rcx, qword [rsp + 0x10]	      2242	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ded	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2242	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000df2	      0xe975020000	                           jmp 0x400106c	      2242	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000df7	      0xb800000000	                              mov eax, 0	      2245	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_24
0x4000dfc	          0x4885c9	                           test rcx, rcx	      2244	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_24
0x4000dff	     0xf8400020000	                            je 0x4001005	      2244	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_24
0x4000e05	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2246	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e0a	            0x4899	                                     cqo	      2246	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e0c	          0x48f7f9	                                idiv rcx	      2246	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e0f	      0x4889442410	             mov qword [rsp + 0x10], rax	      2246	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e14	      0xe953020000	                           jmp 0x400106c	      2247	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e19	      0xb800000000	                              mov eax, 0	      2250	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_25
0x4000e1e	          0x4885c9	                           test rcx, rcx	      2249	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_25
0x4000e21	     0xf84de010000	                            je 0x4001005	      2249	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_25
0x4000e27	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2251	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e2c	            0x4899	                                     cqo	      2251	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e2e	          0x48f7f9	                                idiv rcx	      2251	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e31	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2251	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e36	      0xe931020000	                           jmp 0x400106c	      2252	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e3b	      0x48d3642410	              shl qword [rsp + 0x10], cl	      2253	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e40	      0xe927020000	                           jmp 0x400106c	      2253	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e45	      0x48d36c2410	              shr qword [rsp + 0x10], cl	      2254	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e4a	      0xe91d020000	                           jmp 0x400106c	      2254	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e4f	      0x48094c2410	              or qword [rsp + 0x10], rcx	      2255	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e54	      0xe913020000	                           jmp 0x400106c	      2255	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e59	          0x48f7d1	                                 not rcx	      2256	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e5c	      0x48094c2410	              or qword [rsp + 0x10], rcx	      2256	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e61	      0xe906020000	                           jmp 0x400106c	      2256	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e66	      0x48314c2410	             xor qword [rsp + 0x10], rcx	      2257	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e6b	      0xe9fc010000	                           jmp 0x400106c	      2257	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e70	      0x48214c2410	             and qword [rsp + 0x10], rcx	      2258	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e75	      0xe9f2010000	                           jmp 0x400106c	      2258	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e7a	      0xb800000000	                              mov eax, 0	      2266	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e7f	      0x483b4c2410	            cmp rcx, qword [rsp + 0x10] 	      2266	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e84	            0x7543	                           jne 0x4000ec9	      2266	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e86	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2262	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e8b	      0x483b542428	            cmp rdx, qword [rsp + 0x28] 	      2262	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e90	            0x7537	                           jne 0x4000ec9	      2262	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e92	    0x833d00000000	               cmp dword [0x04000e99], 0	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e99	            0x750c	                           jne 0x4000ea7	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e9b	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ea0	      0x48397c2430	            cmp qword [rsp + 0x30], rdi 	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ea5	            0x7522	                           jne 0x4000ec9	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ea7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2266	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000eae	    0x4881fa000000	                              cmp rdx, 0	      2264	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000eb5	            0x7512	                           jne 0x4000ec9	      2264	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000eb7	      0x488b442408	                mov rax, qword [rsp + 8]	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ebc	        0x48390424	                    cmp qword [rsp], rax	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ec0	           0xf94c0	                                 sete al	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ec3	           0xfb6c0	                           movzx eax, al	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ec6	          0x48f7d8	                                 neg rax	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ec9	        0x4183fc16	                          cmp r12d, 0x16	      2267	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000ecd	     0xf8594010000	                           jne 0x4001067	      2267	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000ed3	          0x48f7d0	                                 not rax	      2268	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000ed6	      0x4889442410	             mov qword [rsp + 0x10], rax	      2268	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000edb	      0xe98c010000	                           jmp 0x400106c	      2268	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000ee0	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ee5	           0xf9cc0	                                 setl al	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ee8	           0xfb6c0	                           movzx eax, al	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000eeb	          0x48f7d8	                                 neg rax	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000eee	      0x4889442410	             mov qword [rsp + 0x10], rax	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ef3	      0xe974010000	                           jmp 0x400106c	      2272	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ef8	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000efd	           0xf9ec0	                                setle al	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f00	           0xfb6c0	                           movzx eax, al	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f03	          0x48f7d8	                                 neg rax	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f06	      0x4889442410	             mov qword [rsp + 0x10], rax	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f0b	      0xe95c010000	                           jmp 0x400106c	      2275	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f10	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f15	           0xf9dc0	                                setge al	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f18	           0xfb6c0	                           movzx eax, al	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f1b	          0x48f7d8	                                 neg rax	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f1e	      0x4889442410	             mov qword [rsp + 0x10], rax	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f23	      0xe944010000	                           jmp 0x400106c	      2278	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f28	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f2d	           0xf9fc0	                                 setg al	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f30	           0xfb6c0	                           movzx eax, al	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f33	          0x48f7d8	                                 neg rax	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f36	      0x4889442410	             mov qword [rsp + 0x10], rax	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f3b	      0xe92c010000	                           jmp 0x400106c	      2281	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f40	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f46	           0xf95c0	                                setne al	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f49	          0x4885c9	                           test rcx, rcx	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f4c	           0xf95c2	                                setne dl	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f4f	           0xfb6d2	                           movzx edx, dl	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f52	          0x4821d0	                            and rax, rdx	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f55	      0x4889442410	             mov qword [rsp + 0x10], rax	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f5a	      0xe90d010000	                           jmp 0x400106c	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f5f	      0x480b4c2410	              or rcx, qword [rsp + 0x10]	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f64	           0xf95c0	                                setne al	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f67	           0xfb6c0	                           movzx eax, al	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f6a	      0x4889442410	             mov qword [rsp + 0x10], rax	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f6f	      0xe9f8000000	                           jmp 0x400106c	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f74	      0xba00000000	                              mov edx, 0	      2284	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	CALL_6
0x4000f79	      0xbeec080000	                          mov esi, 0x8ec	      2284	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	CALL_6
0x4000f7e	      0xbf00000000	                              mov edi, 0	      2284	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	CALL_6
0x4000f83	      0xe800000000	                          call 0x4000f88	      2284	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	CALL_6
0x4000f88	        0x4183fc03	                             cmp r12d, 3	      2291	expr.c	FUNCTION_20	IF_27
0x4000f8c	            0x754b	                           jne 0x4000fd9	      2291	expr.c	FUNCTION_20	IF_27
0x4000f8e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2293	expr.c	FUNCTION_20	IF_27	IF_28
0x4000f93	    0x483d00000000	                              cmp rax, 0	      2293	expr.c	FUNCTION_20	IF_27	IF_28
0x4000f99	            0x7431	                            je 0x4000fcc	      2293	expr.c	FUNCTION_20	IF_27	IF_28
0x4000f9b	    0x483905000000	            cmp qword [0x04000fa2], rax 	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000fa2	            0x750b	                           jne 0x4000faf	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000fa4	    0x41bc05000000	                             mov r12d, 5	      2296	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000faa	          0x4d85f6	                           test r14, r14	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000fad	            0x7423	                            je 0x4000fd2	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000faf	          0x4c89ee	                            mov rsi, r13	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000fb2	        0x488b3c24	                    mov rdi, qword [rsp]	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000fb6	      0xe800000000	                          call 0x4000fbb	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000fbb	    0x41bc03000000	                             mov r12d, 3	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000fc1	            0x85c0	                           test eax, eax	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000fc3	            0x750d	                           jne 0x4000fd2	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000fc5	      0x4c03742410	             add r14, qword [rsp + 0x10]	      2298	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30
0x4000fca	            0xeb06	                           jmp 0x4000fd2	      2298	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30
0x4000fcc	    0x41bc02000000	                             mov r12d, 2	      2294	expr.c	FUNCTION_20	IF_27	IF_28
0x4000fd2	        0x488b0424	                    mov rax, qword [rsp]	      2299	expr.c	FUNCTION_20	IF_27
0x4000fd6	          0x488903	                    mov qword [rbx], rax	      2299	expr.c	FUNCTION_20	IF_27
0x4000fd9	        0x44886318	             mov byte [rbx + 0x18], r12b	      2301	expr.c	FUNCTION_20
0x4000fdd	        0x4183fc02	                             cmp r12d, 2	      2303	expr.c	FUNCTION_20	IF_31
0x4000fe1	            0x7406	                            je 0x4000fe9	      2303	expr.c	FUNCTION_20	IF_31
0x4000fe3	        0x4183fc05	                             cmp r12d, 5	      2303	expr.c	FUNCTION_20	IF_31
0x4000fe7	            0x7505	                           jne 0x4000fee	      2303	expr.c	FUNCTION_20	IF_31
0x4000fe9	      0x4c03742410	             add r14, qword [rsp + 0x10]	      2304	expr.c	FUNCTION_20	IF_31
0x4000fee	        0x4c897310	             mov qword [rbx + 0x10], r14	      2305	expr.c	FUNCTION_20
0x4000ff2	      0xb801000000	                              mov eax, 1	      2307	expr.c	FUNCTION_20
0x4000ff7	            0xeb0c	                           jmp 0x4001005	      2307	expr.c	FUNCTION_20
0x4000ff9	      0xb800000000	                              mov eax, 0	      2068	expr.c	FUNCTION_20	SWITCH_1
0x4000ffe	            0xeb05	                           jmp 0x4001005	      2068	expr.c	FUNCTION_20	SWITCH_1
0x4001000	      0xb800000000	                              mov eax, 0	      2227	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4001005	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2308	expr.c	FUNCTION_20
0x400100a	    0x644833342528	                xor rsi, qword fs:[0x28]	      2308	expr.c	FUNCTION_20
0x4001013	     0xf849c000000	                            je 0x40010b5	      2308	expr.c	FUNCTION_20
0x4001019	      0xe992000000	                           jmp 0x40010b0	      2308	expr.c	FUNCTION_20
0x400101e	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2167	expr.c	FUNCTION_20	SWITCH_1
0x4001027	      0xe970fbffff	                           jmp 0x4000b9c	      2167	expr.c	FUNCTION_20	SWITCH_1
0x400102c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2167	expr.c	FUNCTION_20	SWITCH_1
0x4001035	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x400103a	    0x4881fa000000	                              cmp rdx, 0	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4001041	     0xf8562fbffff	                           jne 0x4000ba9	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4001047	      0xe942fbffff	                           jmp 0x4000b8e	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x400104c	          0x8d45f1	                    lea eax, [rbp - 0xf]	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x400104f	            0xa8fd	                           test al, 0xfd	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x4001051	     0xf853afcffff	                           jne 0x4000c91	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x4001057	      0xe932ffffff	                           jmp 0x4000f8e	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x400105c	        0x4183fc0a	                           cmp r12d, 0xa	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001060	            0x743d	                            je 0x400109f	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001062	      0xe9cafcffff	                           jmp 0x4000d31	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001067	      0x4889442410	             mov qword [rsp + 0x10], rax	      2261	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x400106c	        0xc6431802	                mov byte [rbx + 0x18], 2	      2301	expr.c	FUNCTION_20
0x4001070	      0xe974ffffff	                           jmp 0x4000fe9	      2301	expr.c	FUNCTION_20
0x4001075	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x400107a	    0x4881f9000000	                              cmp rcx, 0	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4001081	     0xf85aafcffff	                           jne 0x4000d31	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4001087	      0xe9affbffff	                           jmp 0x4000c3b	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x400108c	      0x418d4424f3	                    lea eax, [r12 - 0xd]	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x4001091	          0x83f801	                              cmp eax, 1	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x4001094	     0xf871ffcffff	                            ja 0x4000cb9	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x400109a	      0xe909fcffff	                           jmp 0x4000ca8	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x400109f	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x40010a5	     0xf8586fcffff	                           jne 0x4000d31	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x40010ab	      0xe941fcffff	                           jmp 0x4000cf1	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x40010b0	      0xe800000000	                          call 0x40010b5	      2308	expr.c	FUNCTION_20
0x40010b5	        0x4883c450	                           add rsp, 0x50	      2308	expr.c	FUNCTION_20
0x40010b9	              0x5b	                                 pop rbx	      2308	expr.c	FUNCTION_20
0x40010ba	              0x5d	                                 pop rbp	      2308	expr.c	FUNCTION_20
0x40010bb	            0x415c	                                 pop r12	      2308	expr.c	FUNCTION_20
0x40010bd	            0x415d	                                 pop r13	      2308	expr.c	FUNCTION_20
0x40010bf	            0x415e	                                 pop r14	      2308	expr.c	FUNCTION_20
0x40010c1	              0xc3	                                     ret	      2308	expr.c	FUNCTION_20
expr_symbol_where	CALL,0:DO,0:functions,0:ELSE,0:IF,1:FOR,1:WHILE,0:SWITCH,0	20
0x40007f4	    0x488b05000000	            mov rax, qword [0x040007fb] 	       127	expr.c	FUNCTION_2	FOR_1
0x40007fb	          0x4885c0	                           test rax, rax	       127	expr.c	FUNCTION_2	FOR_1
0x40007fe	            0x742a	                            je 0x400082a	       127	expr.c	FUNCTION_2	FOR_1
0x4000800	        0x483b7808	                cmp rdi, qword [rax + 8]	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000804	            0x751a	                           jne 0x4000820	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000806	            0xeb06	                           jmp 0x400080e	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000808	        0x48397808	                cmp qword [rax + 8], rdi	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x400080c	            0x7512	                           jne 0x4000820	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x400080e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       131	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000812	          0x48890e	                    mov qword [rsi], rcx	       131	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000815	          0x8b4018	            mov eax, dword [rax + 0x18] 	       132	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000818	            0x8902	                    mov dword [rdx], eax	       132	expr.c	FUNCTION_2	FOR_1	IF_1
0x400081a	      0xb801000000	                              mov eax, 1	       133	expr.c	FUNCTION_2	FOR_1	IF_1
0x400081f	              0xc3	                                     ret	       133	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000820	          0x488b00	                    mov rax, qword [rax]	       127	expr.c	FUNCTION_2	FOR_1
0x4000823	          0x4885c0	                           test rax, rax	       127	expr.c	FUNCTION_2	FOR_1
0x4000826	            0x75e0	                           jne 0x4000808	       127	expr.c	FUNCTION_2	FOR_1
0x4000828	            0xf3c3	                                     ret	       127	expr.c	FUNCTION_2	FOR_1
0x400082a	      0xb800000000	                              mov eax, 0	       137	expr.c	FUNCTION_2
0x400082f	              0xc3	                                     ret	       138	expr.c	FUNCTION_2
current_location	CALL,0:DO,0:functions,0:ELSE,1:IF,1:FOR,0:WHILE,0:SWITCH,0	10
0x400087f	    0x48813d000000	               cmp qword [0x0400088a], 0	       718	expr.c	FUNCTION_10	IF_1
0x400088a	            0x7510	                           jne 0x400089c	       718	expr.c	FUNCTION_10	IF_1
0x400088c	        0xc6471802	                mov byte [rdi + 0x18], 2	       720	expr.c	FUNCTION_10	IF_1
0x4000890	    0x488b05000000	            mov rax, qword [0x04000897] 	       721	expr.c	FUNCTION_10	IF_1
0x4000897	        0x48894710	             mov qword [rdi + 0x10], rax	       721	expr.c	FUNCTION_10	IF_1
0x400089b	              0xc3	                                     ret	       721	expr.c	FUNCTION_10	IF_1
0x400089c	        0xc6471803	                mov byte [rdi + 0x18], 3	       725	expr.c	FUNCTION_10	ELSE_1
0x40008a0	    0x48c707000000	                      mov qword [rdi], 0	       726	expr.c	FUNCTION_10	ELSE_1
0x40008a7	    0x48c747100000	               mov qword [rdi + 0x10], 0	       727	expr.c	FUNCTION_10	ELSE_1
0x40008af	              0xc3	                                     ret	       727	expr.c	FUNCTION_10	ELSE_1
expr_build_dot	CALL,3:DO,0:functions,0:ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0	17
0x40008b0	        0x4883ec38	                           sub rsp, 0x38	       168	expr.c	FUNCTION_4
0x40008b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       168	expr.c	FUNCTION_4
0x40008bd	      0x4889442428	             mov qword [rsp + 0x28], rax	       168	expr.c	FUNCTION_4
0x40008c2	            0x31c0	                            xor eax, eax	       168	expr.c	FUNCTION_4
0x40008c4	          0x4889e7	                            mov rdi, rsp	       171	expr.c	FUNCTION_4	CALL_1
0x40008c7	      0xe800000000	                          call 0x40008cc	       171	expr.c	FUNCTION_4	CALL_1
0x40008cc	          0x4889e7	                            mov rdi, rsp	       172	expr.c	FUNCTION_4	CALL_3
0x40008cf	      0xe800000000	                          call 0x40008d4	       172	expr.c	FUNCTION_4	CALL_3
0x40008d4	      0xbe00000000	                              mov esi, 0	       172	expr.c	FUNCTION_4	CALL_3
0x40008d9	          0x4889c7	                            mov rdi, rax	       172	expr.c	FUNCTION_4	CALL_3
0x40008dc	      0xe800000000	                          call 0x40008e1	       172	expr.c	FUNCTION_4	CALL_3
0x40008e1	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       173	expr.c	FUNCTION_4
0x40008e6	    0x644833142528	                xor rdx, qword fs:[0x28]	       173	expr.c	FUNCTION_4
0x40008ef	            0x7405	                            je 0x40008f6	       173	expr.c	FUNCTION_4
0x40008f1	      0xe800000000	                          call 0x40008f6	       173	expr.c	FUNCTION_4
0x40008f6	        0x4883c438	                           add rsp, 0x38	       173	expr.c	FUNCTION_4
0x40008fa	              0xc3	                                     ret	       173	expr.c	FUNCTION_4
generic_bignum_to_int64	CALL,0:DO,0:functions,0:ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0	11
0x4000040	     0xfb705000000	           movzx eax, word [0x04000047] 	       243	expr.c	FUNCTION_7
0x4000047	        0x48c1e010	                           shl rax, 0x10	       243	expr.c	FUNCTION_7
0x400004b	     0xfb715000000	           movzx edx, word [0x04000052] 	       243	expr.c	FUNCTION_7
0x4000052	          0x4809d0	                             or rax, rdx	       243	expr.c	FUNCTION_7
0x4000055	        0x48c1e010	                           shl rax, 0x10	       243	expr.c	FUNCTION_7
0x4000059	     0xfb715000000	           movzx edx, word [0x04000060] 	       243	expr.c	FUNCTION_7
0x4000060	          0x4809d0	                             or rax, rdx	       243	expr.c	FUNCTION_7
0x4000063	        0x48c1e010	                           shl rax, 0x10	       243	expr.c	FUNCTION_7
0x4000067	     0xfb715000000	           movzx edx, word [0x0400006e] 	       243	expr.c	FUNCTION_7
0x400006e	          0x4809d0	                             or rax, rdx	       243	expr.c	FUNCTION_7
0x4000071	              0xc3	                                     ret	       244	expr.c	FUNCTION_7
add_to_result	CALL,0:DO,0:functions,0:ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0	24
0x4000942	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	      1715	expr.c	FUNCTION_17
0x4000946	          0x4801ce	                            add rsi, rcx	      1718	expr.c	FUNCTION_17
0x4000949	        0x48897710	             mov qword [rdi + 0x10], rsi	      1718	expr.c	FUNCTION_17
0x400094d	         0xfb64719	           movzx eax, byte [rdi + 0x19] 	      1720	expr.c	FUNCTION_17
0x4000951	            0xd0e8	                               shr al, 1	      1720	expr.c	FUNCTION_17
0x4000953	            0x31c2	                            xor edx, eax	      1720	expr.c	FUNCTION_17
0x4000955	          0x83e201	                              and edx, 1	      1720	expr.c	FUNCTION_17
0x4000958	          0x4839f1	                            cmp rcx, rsi	      1722	expr.c	FUNCTION_17	IF_1
0x400095b	            0x7712	                            ja 0x400096f	      1722	expr.c	FUNCTION_17	IF_1
0x400095d	          0x83e201	                              and edx, 1	      1720	expr.c	FUNCTION_17
0x4000960	             0x1d2	                            add edx, edx	      1720	expr.c	FUNCTION_17
0x4000962	         0xfb64719	           movzx eax, byte [rdi + 0x19] 	      1720	expr.c	FUNCTION_17
0x4000966	          0x83e0fd	                     and eax, 0xfffffffd	      1720	expr.c	FUNCTION_17
0x4000969	             0x9c2	                             or edx, eax	      1720	expr.c	FUNCTION_17
0x400096b	          0x885719	               mov byte [rdi + 0x19], dl	      1720	expr.c	FUNCTION_17
0x400096e	              0xc3	                                     ret	      1720	expr.c	FUNCTION_17
0x400096f	          0x83f201	                              xor edx, 1	      1723	expr.c	FUNCTION_17	IF_1
0x4000972	          0x83e201	                              and edx, 1	      1723	expr.c	FUNCTION_17	IF_1
0x4000975	             0x1d2	                            add edx, edx	      1723	expr.c	FUNCTION_17	IF_1
0x4000977	         0xfb64719	           movzx eax, byte [rdi + 0x19] 	      1723	expr.c	FUNCTION_17	IF_1
0x400097b	          0x83e0fd	                     and eax, 0xfffffffd	      1723	expr.c	FUNCTION_17	IF_1
0x400097e	             0x9c2	                             or edx, eax	      1723	expr.c	FUNCTION_17	IF_1
0x4000980	          0x885719	               mov byte [rdi + 0x19], dl	      1723	expr.c	FUNCTION_17	IF_1
0x4000983	              0xc3	                                     ret	      1723	expr.c	FUNCTION_17	IF_1
integer_constant	CALL,38:DO,0:functions,0:ELSE,17:IF,29:FOR,7:WHILE,2:SWITCH,1	350
0x4000122	    0x4c8b05000000	              mov r8, qword [0x04000129]	       286	expr.c	FUNCTION_8	IF_1
0x4000129	        0x410fb600	                    movzx eax, byte [r8]	       286	expr.c	FUNCTION_8	IF_1
0x400012d	    0x80b800000000	                       cmp byte [rax], 0	       286	expr.c	FUNCTION_8	IF_1
0x4000134	            0x7405	                            je 0x400013b	       286	expr.c	FUNCTION_8	IF_1
0x4000136	        0xc6461801	                mov byte [rsi + 0x18], 1	       288	expr.c	FUNCTION_8	IF_1
0x400013a	              0xc3	                                     ret	       288	expr.c	FUNCTION_8	IF_1
0x400013b	            0x4157	                                push r15	       249	expr.c	FUNCTION_8
0x400013d	            0x4156	                                push r14	       249	expr.c	FUNCTION_8
0x400013f	            0x4155	                                push r13	       249	expr.c	FUNCTION_8
0x4000141	            0x4154	                                push r12	       249	expr.c	FUNCTION_8
0x4000143	              0x55	                                push rbp	       249	expr.c	FUNCTION_8
0x4000144	              0x53	                                push rbx	       249	expr.c	FUNCTION_8
0x4000145	        0x4883ec08	                              sub rsp, 8	       249	expr.c	FUNCTION_8
0x4000149	          0x83ff08	                              cmp edi, 8	       338	expr.c	FUNCTION_8	SWITCH_1
0x400014c	            0x7430	                            je 0x400017e	       338	expr.c	FUNCTION_8	SWITCH_1
0x400014e	          0x83ff08	                              cmp edi, 8	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000151	            0x7f13	                            jg 0x4000166	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000153	    0x41b941000000	                           mov r9d, 0x41	       342	expr.c	FUNCTION_8	SWITCH_1
0x4000159	    0x41bd02000000	                             mov r13d, 2	       341	expr.c	FUNCTION_8	SWITCH_1
0x400015f	          0x83ff02	                              cmp edi, 2	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000162	            0x7442	                            je 0x40001a6	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000164	            0xeb34	                           jmp 0x400019a	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000166	          0x83ff0a	                            cmp edi, 0xa	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000169	            0x7421	                            je 0x400018c	       338	expr.c	FUNCTION_8	SWITCH_1
0x400016b	    0x41b911000000	                           mov r9d, 0x11	       350	expr.c	FUNCTION_8	SWITCH_1
0x4000171	    0x41bd10000000	                          mov r13d, 0x10	       349	expr.c	FUNCTION_8	SWITCH_1
0x4000177	          0x83ff10	                           cmp edi, 0x10	       338	expr.c	FUNCTION_8	SWITCH_1
0x400017a	            0x742a	                            je 0x40001a6	       338	expr.c	FUNCTION_8	SWITCH_1
0x400017c	            0xeb1c	                           jmp 0x400019a	       338	expr.c	FUNCTION_8	SWITCH_1
0x400017e	    0x41b917000000	                           mov r9d, 0x17	       346	expr.c	FUNCTION_8	SWITCH_1
0x4000184	    0x41bd08000000	                             mov r13d, 8	       345	expr.c	FUNCTION_8	SWITCH_1
0x400018a	            0xeb1a	                           jmp 0x40001a6	       347	expr.c	FUNCTION_8	SWITCH_1
0x400018c	    0x41b912000000	                           mov r9d, 0x12	       354	expr.c	FUNCTION_8	SWITCH_1
0x4000192	    0x41bd0a000000	                           mov r13d, 0xa	       353	expr.c	FUNCTION_8	SWITCH_1
0x4000198	            0xeb0c	                           jmp 0x40001a6	       353	expr.c	FUNCTION_8	SWITCH_1
0x400019a	    0x41b900000000	                              mov r9d, 0	       256	expr.c	FUNCTION_8
0x40001a0	    0x41bd00000000	                             mov r13d, 0	       255	expr.c	FUNCTION_8
0x40001a6	        0x4d8d5001	                       lea r10, [r8 + 1]	       358	expr.c	FUNCTION_8
0x40001aa	    0x4c8915000000	            mov qword [0x040001b1], r10 	       358	expr.c	FUNCTION_8
0x40001b1	        0x410fb628	                    movzx ebp, byte [r8]	       358	expr.c	FUNCTION_8
0x40001b5	        0x400fb6c5	                          movzx eax, bpl	       360	expr.c	FUNCTION_8	FOR_2	CALL_4
0x40001b9	     0xfb690000000	                   movzx edx, byte [rax]	       360	expr.c	FUNCTION_8	FOR_2	CALL_4
0x40001c0	           0xfb6c2	                           movzx eax, dl	       359	expr.c	FUNCTION_8	FOR_2
0x40001c3	        0x664139c5	                            cmp r13w, ax	       359	expr.c	FUNCTION_8	FOR_2
0x40001c7	            0x7e3d	                           jle 0x4000206	       359	expr.c	FUNCTION_8	FOR_2
0x40001c9	      0xb800000000	                              mov eax, 0	       359	expr.c	FUNCTION_8	FOR_2
0x40001ce	          0x4c63df	                         movsxd r11, edi	       363	expr.c	FUNCTION_8	FOR_2
0x40001d1	        0x490fafc3	                           imul rax, r11	       363	expr.c	FUNCTION_8	FOR_2
0x40001d5	           0xfb6d2	                           movzx edx, dl	       363	expr.c	FUNCTION_8	FOR_2
0x40001d8	          0x4801d0	                            add rax, rdx	       363	expr.c	FUNCTION_8	FOR_2
0x40001db	    0x488b15000000	            mov rdx, qword [0x040001e2] 	       361	expr.c	FUNCTION_8	FOR_2
0x40001e2	        0x488d4a01	                      lea rcx, [rdx + 1]	       361	expr.c	FUNCTION_8	FOR_2
0x40001e6	    0x48890d000000	            mov qword [0x040001ed], rcx 	       361	expr.c	FUNCTION_8	FOR_2
0x40001ed	           0xfb62a	                   movzx ebp, byte [rdx]	       361	expr.c	FUNCTION_8	FOR_2
0x40001f0	        0x400fb6d5	                          movzx edx, bpl	       360	expr.c	FUNCTION_8	FOR_2	CALL_4
0x40001f4	     0xfb692000000	                   movzx edx, byte [rdx]	       360	expr.c	FUNCTION_8	FOR_2	CALL_4
0x40001fb	           0xfb6ca	                           movzx ecx, dl	       359	expr.c	FUNCTION_8	FOR_2
0x40001fe	        0x664139cd	                            cmp r13w, cx	       359	expr.c	FUNCTION_8	FOR_2
0x4000202	            0x7fcd	                            jg 0x40001d1	       359	expr.c	FUNCTION_8	FOR_2
0x4000204	            0xeb05	                           jmp 0x400020b	       359	expr.c	FUNCTION_8	FOR_2
0x4000206	      0xb800000000	                              mov eax, 0	       359	expr.c	FUNCTION_8	FOR_2
0x400020b	          0x4989f7	                            mov r15, rsi	       359	expr.c	FUNCTION_8	FOR_2
0x400020e	          0x4c89c1	                             mov rcx, r8	       367	expr.c	FUNCTION_8
0x4000211	          0x48f7d1	                                 not rcx	       367	expr.c	FUNCTION_8
0x4000214	    0x48030d000000	             add rcx, qword [0x0400021b]	       367	expr.c	FUNCTION_8
0x400021b	          0x4963d1	                         movsxd rdx, r9d	       367	expr.c	FUNCTION_8
0x400021e	          0x4839d1	                            cmp rcx, rdx	       367	expr.c	FUNCTION_8
0x4000221	        0x410f9cc1	                                setl r9b	       367	expr.c	FUNCTION_8
0x4000225	        0x450fb6c9	                          movzx r9d, r9b	       367	expr.c	FUNCTION_8
0x4000229	          0x83ff10	                           cmp edi, 0x10	       369	expr.c	FUNCTION_8	IF_10
0x400022c	     0xf85bb010000	                           jne 0x40003ed	       369	expr.c	FUNCTION_8	IF_10
0x4000232	        0x4080fd5f	                           cmp bpl, 0x5f	       369	expr.c	FUNCTION_8	IF_10
0x4000236	     0xf85b1010000	                           jne 0x40003ed	       369	expr.c	FUNCTION_8	IF_10
0x400023c	    0x4c8905000000	              mov qword [0x04000243], r8	       376	expr.c	FUNCTION_8	IF_10
0x4000243	    0x41be00000000	                             mov r14d, 0	       374	expr.c	FUNCTION_8	IF_10
0x4000249	          0x4c63e7	                         movsxd r12, edi	       390	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400024c	    0x488b05000000	            mov rax, qword [0x04000253] 	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000253	        0x488d5001	                      lea rdx, [rax + 1]	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000257	    0x488915000000	            mov qword [0x0400025e], rdx 	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400025e	           0xfb628	                   movzx ebp, byte [rax]	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000261	        0x400fb6c5	                          movzx eax, bpl	       387	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4	CALL_6
0x4000265	     0xfb680000000	                   movzx eax, byte [rax]	       387	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4	CALL_6
0x400026c	           0xfb6d0	                           movzx edx, al	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400026f	        0x664139d5	                            cmp r13w, dx	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000273	            0x7e68	                           jle 0x40002dd	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000275	      0xba00000000	                              mov edx, 0	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400027a	      0xbb00000000	                              mov ebx, 0	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400027f	        0x490fafdc	                           imul rbx, r12	       390	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000283	           0xfb6c0	                           movzx eax, al	       390	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000286	          0x4801c3	                            add rbx, rax	       390	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000289	          0x83c201	                              add edx, 1	       391	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400028c	    0x488b05000000	            mov rax, qword [0x04000293] 	       388	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000293	        0x488d4801	                      lea rcx, [rax + 1]	       388	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000297	    0x48890d000000	            mov qword [0x0400029e], rcx 	       388	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400029e	           0xfb628	                   movzx ebp, byte [rax]	       388	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x40002a1	        0x400fb6c5	                          movzx eax, bpl	       387	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4	CALL_6
0x40002a5	     0xfb680000000	                   movzx eax, byte [rax]	       387	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4	CALL_6
0x40002ac	           0xfb6c8	                           movzx ecx, al	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x40002af	        0x664139cd	                            cmp r13w, cx	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x40002b3	            0x7fca	                            jg 0x400027f	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x40002b5	          0x83fa08	                              cmp edx, 8	       395	expr.c	FUNCTION_8	IF_10	FOR_3	IF_11
0x40002b8	            0x7e28	                           jle 0x40002e2	       395	expr.c	FUNCTION_8	IF_10	FOR_3	IF_11
0x40002ba	      0xba05000000	                              mov edx, 5	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x40002bf	      0xbe00000000	                              mov esi, 0	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x40002c4	      0xbf00000000	                              mov edi, 0	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x40002c9	      0xe800000000	                          call 0x40002ce	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x40002ce	          0x4889c7	                            mov rdi, rax	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x40002d1	      0xb800000000	                              mov eax, 0	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x40002d6	      0xe800000000	                          call 0x40002db	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x40002db	            0xeb05	                           jmp 0x40002e2	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x40002dd	      0xbb00000000	                              mov ebx, 0	       385	expr.c	FUNCTION_8	IF_10	FOR_3
0x40002e2	        0x418d4601	                      lea eax, [r14 + 1]	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40002e6	          0x83f813	                           cmp eax, 0x13	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40002e9	      0xba13000000	                           mov edx, 0x13	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40002ee	           0xf4fc2	                          cmovg eax, edx	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40002f1	          0x83f801	                              cmp eax, 1	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40002f4	            0x7e1e	                           jle 0x4000314	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40002f6	      0xb900000000	                              mov ecx, 0	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40002fb	          0x8d50fe	                      lea edx, [rax - 2]	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40002fe	          0x4863d2	                         movsxd rdx, edx	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x4000301	         0xfb73451	           movzx esi, word [rcx + rdx*2]	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x4000305	          0x4863d0	                         movsxd rdx, eax	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x4000308	        0x66893451	              mov word [rcx + rdx*2], si	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x400030c	          0x83e801	                              sub eax, 1	       403	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x400030f	          0x83f801	                              cmp eax, 1	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x4000312	            0x75e2	                           jne 0x40002f6	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x4000314	    0x66891d000000	               mov word [0x0400031b], bx	       407	expr.c	FUNCTION_8	IF_10	FOR_3
0x400031b	        0x48c1eb10	                           shr rbx, 0x10	       408	expr.c	FUNCTION_8	IF_10	FOR_3
0x400031f	    0x66891d000000	               mov word [0x04000326], bx	       408	expr.c	FUNCTION_8	IF_10	FOR_3
0x4000326	        0x4183c602	                             add r14d, 2	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x400032a	        0x4080fd5f	                           cmp bpl, 0x5f	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x400032e	     0xf8418ffffff	                            je 0x400024c	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x4000334	        0x4183fe13	                          cmp r14d, 0x13	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x4000338	      0xb813000000	                           mov eax, 0x13	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x400033d	        0x440f4ff0	                         cmovg r14d, eax	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x4000341	        0x4183fe03	                             cmp r14d, 3	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x4000345	            0x7f14	                            jg 0x400035b	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x4000347	      0xba00000000	                              mov edx, 0	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x400034c	      0xbea0010000	                          mov esi, 0x1a0	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x4000351	      0xbf00000000	                              mov edi, 0	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x4000356	      0xe800000000	                          call 0x400035b	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x400035b	        0x4183fe08	                             cmp r14d, 8	       418	expr.c	FUNCTION_8	IF_10	IF_13
0x400035f	            0x7426	                            je 0x4000387	       418	expr.c	FUNCTION_8	IF_10	IF_13
0x4000361	      0xba05000000	                              mov edx, 5	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x4000366	      0xbe00000000	                              mov esi, 0	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x400036b	      0xbf00000000	                              mov edi, 0	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x4000370	      0xe800000000	                          call 0x4000375	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x4000375	          0x4889c7	                            mov rdi, rax	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x4000378	      0xb800000000	                              mov eax, 0	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x400037d	      0xe800000000	                          call 0x4000382	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x4000382	            0xeb03	                           jmp 0x4000387	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x4000384	          0x4189c6	                           mov r14d, eax	       425	expr.c	FUNCTION_8	IF_10	WHILE_1
0x4000387	        0x418d46ff	                      lea eax, [r14 - 1]	       423	expr.c	FUNCTION_8	IF_10	WHILE_1
0x400038b	          0x4863d0	                         movsxd rdx, eax	       423	expr.c	FUNCTION_8	IF_10	WHILE_1
0x400038e	    0x6683bc120000	                 cmp word [rdx + rdx], 0	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x4000397	           0xf94c1	                                 sete cl	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x400039a	        0x4183fe01	                             cmp r14d, 1	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x400039e	           0xf9fc2	                                 setg dl	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x40003a1	            0x84d1	                             test cl, dl	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x40003a3	            0x75df	                           jne 0x4000384	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x40003a5	        0x4183fe02	                             cmp r14d, 2	       427	expr.c	FUNCTION_8	IF_10	IF_14
0x40003a9	            0x7f1e	                            jg 0x40003c9	       427	expr.c	FUNCTION_8	IF_10	IF_14
0x40003ab	     0xfb705000000	           movzx eax, word [0x040003b2] 	       227	expr.c	FUNCTION_6
0x40003b2	          0xc1e010	                           shl eax, 0x10	       227	expr.c	FUNCTION_6
0x40003b5	     0xfb715000000	           movzx edx, word [0x040003bc] 	       227	expr.c	FUNCTION_6
0x40003bc	             0x9d0	                             or eax, edx	       227	expr.c	FUNCTION_6
0x40003be	    0x41b901000000	                              mov r9d, 1	       431	expr.c	FUNCTION_8	IF_10	IF_14
0x40003c4	      0xe929010000	                           jmp 0x40004f2	       431	expr.c	FUNCTION_8	IF_10	IF_14
0x40003c9	        0x4183fe04	                             cmp r14d, 4	       434	expr.c	FUNCTION_8	IF_10	ELSE_7	IF_15
0x40003cd	            0x7f10	                            jg 0x40003df	       434	expr.c	FUNCTION_8	IF_10	ELSE_7	IF_15
0x40003cf	      0xe86cfcffff	        call sym.generic_bignum_to_int64	       437	expr.c	FUNCTION_8	IF_10	ELSE_7	IF_15	CALL_14
0x40003d4	    0x41b901000000	                              mov r9d, 1	       438	expr.c	FUNCTION_8	IF_10	ELSE_7	IF_15
0x40003da	      0xe913010000	                           jmp 0x40004f2	       438	expr.c	FUNCTION_8	IF_10	ELSE_7	IF_15
0x40003df	          0x4963c6	                        movsxd rax, r14d	       446	expr.c	FUNCTION_8	IF_10	ELSE_8
0x40003e2	    0x41b900000000	                              mov r9d, 0	       443	expr.c	FUNCTION_8	IF_10	ELSE_8
0x40003e8	      0xe905010000	                           jmp 0x40004f2	       443	expr.c	FUNCTION_8	IF_10	ELSE_8
0x40003ed	          0x4839d1	                            cmp rcx, rdx	       449	expr.c	FUNCTION_8	ELSE_9	IF_16
0x40003f0	     0xf8cfc000000	                            jl 0x40004f2	       449	expr.c	FUNCTION_8	ELSE_9	IF_16
0x40003f6	    0x66c705000000	                mov word [0x040003ff], 0	       457	expr.c	FUNCTION_8	ELSE_9	IF_16
0x40003ff	    0x66c705000000	                mov word [0x04000408], 0	       458	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000408	    0x66c705000000	                mov word [0x04000411], 0	       459	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000411	    0x66c705000000	                mov word [0x0400041a], 0	       460	expr.c	FUNCTION_8	ELSE_9	IF_16
0x400041a	    0x4c8915000000	            mov qword [0x04000421], r10 	       462	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000421	        0x410fb628	                    movzx ebp, byte [r8]	       462	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000425	        0x400fb6c5	                          movzx eax, bpl	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000429	     0xfb688000000	                   movzx ecx, byte [rax]	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000430	        0x4d0fbfed	                         movsx r13, r13w	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000434	    0x41b800000000	                              mov r8d, 0	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x400043a	          0x4c39e9	                            cmp rcx, r13	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x400043d	            0x7c5d	                            jl 0x400049c	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x400043f	            0xeb70	                           jmp 0x40004b1	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000441	           0xfb716	                   movzx edx, word [rsi]	       469	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x4000444	           0xfafd7	                           imul edx, edi	       469	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x4000447	          0x4863c2	                         movsxd rax, edx	       469	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x400044a	          0x4801c8	                            add rax, rcx	       469	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x400044d	          0x668906	                      mov word [rsi], ax	       470	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x4000450	        0x48c1f810	                           sar rax, 0x10	       471	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x4000454	          0x4889c1	                            mov rcx, rax	       471	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x4000457	        0x4883c602	                              add rsi, 2	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x400045b	          0x4c39c6	                             cmp rsi, r8	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x400045e	            0x76e1	                           jbe 0x4000441	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x4000460	    0x4981f8000000	                               cmp r8, 0	       475	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x4000467	            0x730e	                           jae 0x4000477	       475	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x4000469	          0x4885c9	                           test rcx, rcx	       475	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x400046c	            0x7409	                            je 0x4000477	       475	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x400046e	      0x6641894802	                   mov word [r8 + 2], cx	       478	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x4000473	        0x4d8d4002	                        lea r8, [r8 + 2]	       478	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x4000477	    0x488b05000000	            mov rax, qword [0x0400047e] 	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x400047e	        0x488d5001	                      lea rdx, [rax + 1]	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000482	    0x488915000000	            mov qword [0x04000489], rdx 	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000489	           0xfb628	                   movzx ebp, byte [rax]	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x400048c	        0x400fb6c5	                          movzx eax, bpl	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000490	     0xfb688000000	                   movzx ecx, byte [rax]	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000497	          0x4c39e9	                            cmp rcx, r13	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x400049a	            0x7d0c	                           jge 0x40004a8	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x400049c	      0xbe00000000	                              mov esi, 0	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40004a1	          0x4939f0	                             cmp r8, rsi	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40004a4	            0x739b	                           jae 0x4000441	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40004a6	            0xebb8	                           jmp 0x4000460	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40004a8	    0x4981f8000000	                               cmp r8, 0	       485	expr.c	FUNCTION_8	ELSE_9	IF_16	IF_19
0x40004af	            0x731b	                           jae 0x40004cc	       485	expr.c	FUNCTION_8	ELSE_9	IF_16	IF_19
0x40004b1	     0xfb705000000	           movzx eax, word [0x040004b8] 	       227	expr.c	FUNCTION_6
0x40004b8	          0xc1e010	                           shl eax, 0x10	       227	expr.c	FUNCTION_6
0x40004bb	     0xfb715000000	           movzx edx, word [0x040004c2] 	       227	expr.c	FUNCTION_6
0x40004c2	             0x9d0	                             or eax, edx	       227	expr.c	FUNCTION_6
0x40004c4	    0x41b901000000	                              mov r9d, 1	       489	expr.c	FUNCTION_8	ELSE_9	IF_16	IF_19
0x40004ca	            0xeb26	                           jmp 0x40004f2	       489	expr.c	FUNCTION_8	ELSE_9	IF_16	IF_19
0x40004cc	    0x4981f8000000	                               cmp r8, 0	       492	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20
0x40004d3	            0x730d	                           jae 0x40004e2	       492	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20
0x40004d5	      0xe866fbffff	        call sym.generic_bignum_to_int64	       495	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20	CALL_18
0x40004da	    0x41b901000000	                              mov r9d, 1	       496	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20
0x40004e0	            0xeb10	                           jmp 0x40004f2	       496	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20
0x40004e2	          0x4c89c0	                             mov rax, r8	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x40004e5	    0x482d00000000	                              sub rax, 0	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x40004eb	          0x48d1f8	                              sar rax, 1	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x40004ee	        0x4883c001	                              add rax, 1	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x40004f2	            0x89ea	                            mov edx, ebp	       515	expr.c	FUNCTION_8	IF_22
0x40004f4	          0x83e2df	                     and edx, 0xffffffdf	       515	expr.c	FUNCTION_8	IF_22
0x40004f7	          0x80fa55	                            cmp dl, 0x55	       515	expr.c	FUNCTION_8	IF_22
0x40004fa	            0x7515	                           jne 0x4000511	       515	expr.c	FUNCTION_8	IF_22
0x40004fc	    0x488b15000000	            mov rdx, qword [0x04000503] 	       516	expr.c	FUNCTION_8	IF_22
0x4000503	        0x488d4a01	                      lea rcx, [rdx + 1]	       516	expr.c	FUNCTION_8	IF_22
0x4000507	    0x48890d000000	            mov qword [0x0400050e], rcx 	       516	expr.c	FUNCTION_8	IF_22
0x400050e	           0xfb62a	                   movzx ebp, byte [rdx]	       516	expr.c	FUNCTION_8	IF_22
0x4000511	            0x89ea	                            mov edx, ebp	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000513	          0x83e2df	                     and edx, 0xffffffdf	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000516	          0x80fa4c	                            cmp dl, 0x4c	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000519	            0x751f	                           jne 0x400053a	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x400051b	    0x488b15000000	            mov rdx, qword [0x04000522] 	       524	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000522	        0x488d4a01	                      lea rcx, [rdx + 1]	       524	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000526	    0x48890d000000	            mov qword [0x0400052d], rcx 	       524	expr.c	FUNCTION_8	IF_23	WHILE_2
0x400052d	           0xfb62a	                   movzx ebp, byte [rdx]	       524	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000530	            0x89ea	                            mov edx, ebp	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000532	          0x83e2df	                     and edx, 0xffffffdf	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000535	          0x80fa4c	                            cmp dl, 0x4c	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000538	            0x74e1	                            je 0x400051b	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x400053a	          0x4585c9	                           test r9d, r9d	       526	expr.c	FUNCTION_8	IF_24
0x400053d	     0xf8453010000	                            je 0x4000696	       526	expr.c	FUNCTION_8	IF_24
0x4000543	        0x4080fd62	                           cmp bpl, 0x62	       534	expr.c	FUNCTION_8	IF_24	IF_25
0x4000547	     0xf85c0000000	                           jne 0x400060d	       534	expr.c	FUNCTION_8	IF_24	IF_25
0x400054d	            0x89c5	                            mov ebp, eax	       539	expr.c	FUNCTION_8	IF_24	IF_25	CALL_19
0x400054f	          0x4863f8	                         movsxd rdi, eax	       539	expr.c	FUNCTION_8	IF_24	IF_25	CALL_19
0x4000552	      0xbe00000000	                              mov esi, 0	       539	expr.c	FUNCTION_8	IF_24	IF_25	CALL_19
0x4000557	      0xe800000000	                          call 0x400055c	       539	expr.c	FUNCTION_8	IF_24	IF_25	CALL_19
0x400055c	          0x4889c7	                            mov rdi, rax	       542	expr.c	FUNCTION_8	IF_24	IF_25	CALL_20
0x400055f	      0xe800000000	                          call 0x4000564	       542	expr.c	FUNCTION_8	IF_24	IF_25	CALL_20
0x4000564	          0x4889c3	                            mov rbx, rax	       542	expr.c	FUNCTION_8	IF_24	IF_25	CALL_20
0x4000567	          0x4885c0	                           test rax, rax	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x400056a	            0x746c	                            je 0x40005d8	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x400056c	          0x4889c7	                            mov rdi, rax	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x400056f	      0xe800000000	                          call 0x4000574	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x4000574	            0x85c0	                           test eax, eax	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x4000576	            0x7460	                            je 0x40005d8	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x4000578	          0x4889df	                            mov rdi, rbx	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x400057b	      0xe800000000	                          call 0x4000580	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000580	    0x483d00000000	                              cmp rax, 0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000586	            0x7432	                            je 0x40005ba	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000588	          0x4889df	                            mov rdi, rbx	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x400058b	      0xe800000000	                          call 0x4000590	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000590	    0x483d00000000	                              cmp rax, 0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000596	            0x7422	                            je 0x40005ba	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000598	          0x4889df	                            mov rdi, rbx	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x400059b	      0xe800000000	                          call 0x40005a0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005a0	    0x483b05000000	            cmp rax, qword [0x040005a7] 	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005a7	            0x7411	                            je 0x40005ba	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005a9	          0x4889df	                            mov rdi, rbx	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005ac	      0xe800000000	                          call 0x40005b1	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005b1	    0x483b05000000	            cmp rax, qword [0x040005b8] 	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005b8	            0x7514	                           jne 0x40005ce	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005ba	      0xba00000000	                              mov edx, 0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005bf	      0xbe23020000	                          mov esi, 0x223	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005c4	      0xbf00000000	                              mov edi, 0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005c9	      0xe800000000	                          call 0x40005ce	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005ce	      0x41c6471803	                mov byte [r15 + 0x18], 3	       549	expr.c	FUNCTION_8	IF_24	IF_25	IF_26
0x40005d3	          0x49891f	                    mov qword [r15], rbx	       550	expr.c	FUNCTION_8	IF_24	IF_25	IF_26
0x40005d6	            0xeb28	                           jmp 0x4000600	       550	expr.c	FUNCTION_8	IF_24	IF_25	IF_26
0x40005d8	      0xba05000000	                              mov edx, 5	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005dd	      0xbe00000000	                              mov esi, 0	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005e2	      0xbf00000000	                              mov edi, 0	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005e7	      0xe800000000	                          call 0x40005ec	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005ec	            0x89ee	                            mov esi, ebp	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005ee	          0x4889c7	                            mov rdi, rax	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005f1	      0xb800000000	                              mov eax, 0	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005f6	      0xe800000000	                          call 0x40005fb	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005fb	      0x41c6471802	                mov byte [r15 + 0x18], 2	       559	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12
0x4000600	    0x49c747100000	               mov qword [r15 + 0x10], 0	       562	expr.c	FUNCTION_8	IF_24	IF_25
0x4000608	      0xe99a000000	                           jmp 0x40006a7	       562	expr.c	FUNCTION_8	IF_24	IF_25
0x400060d	        0x4080fd66	                           cmp bpl, 0x66	       564	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000611	            0x7570	                           jne 0x4000683	       564	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000613	          0x4863f8	                         movsxd rdi, eax	       573	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_27
0x4000616	      0xbe01000000	                              mov esi, 1	       573	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_27
0x400061b	      0xe800000000	                          call 0x4000620	       573	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_27
0x4000620	          0x4889c7	                            mov rdi, rax	       574	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_28
0x4000623	      0xe800000000	                          call 0x4000628	       574	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_28
0x4000628	          0x4889c3	                            mov rbx, rax	       574	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_28
0x400062b	          0x4889c7	                            mov rdi, rax	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400062e	      0xe800000000	                          call 0x4000633	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000633	    0x483d00000000	                              cmp rax, 0	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000639	            0x7436	                            je 0x4000671	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400063b	          0x4889df	                            mov rdi, rbx	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400063e	      0xe800000000	                          call 0x4000643	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000643	    0x483b05000000	            cmp rax, qword [0x0400064a] 	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400064a	            0x7425	                            je 0x4000671	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400064c	          0x4889df	                            mov rdi, rbx	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400064f	      0xe800000000	                          call 0x4000654	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000654	    0x483b05000000	            cmp rax, qword [0x0400065b] 	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400065b	            0x7414	                            je 0x4000671	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400065d	      0xba00000000	                              mov edx, 0	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000662	      0xbe43020000	                          mov esi, 0x243	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000667	      0xbf00000000	                              mov edi, 0	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400066c	      0xe800000000	                          call 0x4000671	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000671	      0x41c6471803	                mov byte [r15 + 0x18], 3	       581	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000676	          0x49891f	                    mov qword [r15], rbx	       582	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000679	    0x49c747100000	               mov qword [r15 + 0x10], 0	       583	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000681	            0xeb24	                           jmp 0x40006a7	       583	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000683	      0x41c6471802	                mov byte [r15 + 0x18], 2	       610	expr.c	FUNCTION_8	IF_24	ELSE_16
0x4000688	        0x49894710	             mov qword [r15 + 0x10], rax	       611	expr.c	FUNCTION_8	IF_24	ELSE_16
0x400068c	    0x48832d000000	               sub qword [0x04000694], 1	       612	expr.c	FUNCTION_8	IF_24	ELSE_16
0x4000694	            0xeb11	                           jmp 0x40006a7	       612	expr.c	FUNCTION_8	IF_24	ELSE_16
0x4000696	      0x41c6471806	                mov byte [r15 + 0x18], 6	       618	expr.c	FUNCTION_8	ELSE_17
0x400069b	        0x49894710	             mov qword [r15 + 0x10], rax	       619	expr.c	FUNCTION_8	ELSE_17
0x400069f	    0x48832d000000	               sub qword [0x040006a7], 1	       620	expr.c	FUNCTION_8	ELSE_17
0x40006a7	        0x4883c408	                              add rsp, 8	       622	expr.c	FUNCTION_8
0x40006ab	              0x5b	                                 pop rbx	       622	expr.c	FUNCTION_8
0x40006ac	              0x5d	                                 pop rbp	       622	expr.c	FUNCTION_8
0x40006ad	            0x415c	                                 pop r12	       622	expr.c	FUNCTION_8
0x40006af	            0x415d	                                 pop r13	       622	expr.c	FUNCTION_8
0x40006b1	            0x415e	                                 pop r14	       622	expr.c	FUNCTION_8
0x40006b3	            0x415f	                                 pop r15	       622	expr.c	FUNCTION_8
0x40006b5	              0xc3	                                     ret	       622	expr.c	FUNCTION_8
subtract_from_result	CALL,0:DO,0:functions,0:ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0	25
0x4000984	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	      1731	expr.c	FUNCTION_18
0x4000988	          0x4889c8	                            mov rax, rcx	      1734	expr.c	FUNCTION_18
0x400098b	          0x4829f0	                            sub rax, rsi	      1734	expr.c	FUNCTION_18
0x400098e	        0x48894710	             mov qword [rdi + 0x10], rax	      1734	expr.c	FUNCTION_18
0x4000992	         0xfb64719	           movzx eax, byte [rdi + 0x19] 	      1736	expr.c	FUNCTION_18
0x4000996	            0xd0e8	                               shr al, 1	      1736	expr.c	FUNCTION_18
0x4000998	            0x31c2	                            xor edx, eax	      1736	expr.c	FUNCTION_18
0x400099a	          0x83e201	                              and edx, 1	      1736	expr.c	FUNCTION_18
0x400099d	          0x4839f1	                            cmp rcx, rsi	      1738	expr.c	FUNCTION_18	IF_1
0x40009a0	            0x7212	                            jb 0x40009b4	      1738	expr.c	FUNCTION_18	IF_1
0x40009a2	          0x83e201	                              and edx, 1	      1736	expr.c	FUNCTION_18
0x40009a5	             0x1d2	                            add edx, edx	      1736	expr.c	FUNCTION_18
0x40009a7	         0xfb64719	           movzx eax, byte [rdi + 0x19] 	      1736	expr.c	FUNCTION_18
0x40009ab	          0x83e0fd	                     and eax, 0xfffffffd	      1736	expr.c	FUNCTION_18
0x40009ae	             0x9c2	                             or edx, eax	      1736	expr.c	FUNCTION_18
0x40009b0	          0x885719	               mov byte [rdi + 0x19], dl	      1736	expr.c	FUNCTION_18
0x40009b3	              0xc3	                                     ret	      1736	expr.c	FUNCTION_18
0x40009b4	          0x83f201	                              xor edx, 1	      1739	expr.c	FUNCTION_18	IF_1
0x40009b7	          0x83e201	                              and edx, 1	      1739	expr.c	FUNCTION_18	IF_1
0x40009ba	             0x1d2	                            add edx, edx	      1739	expr.c	FUNCTION_18	IF_1
0x40009bc	         0xfb64719	           movzx eax, byte [rdi + 0x19] 	      1739	expr.c	FUNCTION_18	IF_1
0x40009c0	          0x83e0fd	                     and eax, 0xfffffffd	      1739	expr.c	FUNCTION_18	IF_1
0x40009c3	             0x9c2	                             or edx, eax	      1739	expr.c	FUNCTION_18	IF_1
0x40009c5	          0x885719	               mov byte [rdi + 0x19], dl	      1739	expr.c	FUNCTION_18	IF_1
0x40009c8	              0xc3	                                     ret	      1739	expr.c	FUNCTION_18	IF_1
make_expr_symbol	CALL,10:DO,0:functions,0:ELSE,1:IF,4:FOR,0:WHILE,0:SWITCH,0	78
0x40006b6	              0x55	                                push rbp	        67	expr.c	FUNCTION_1
0x40006b7	              0x53	                                push rbx	        67	expr.c	FUNCTION_1
0x40006b8	        0x4883ec38	                           sub rsp, 0x38	        67	expr.c	FUNCTION_1
0x40006bc	          0x4889fb	                            mov rbx, rdi	        67	expr.c	FUNCTION_1
0x40006bf	    0x64488b042528	                mov rax, qword fs:[0x28]	        67	expr.c	FUNCTION_1
0x40006c8	      0x4889442428	             mov qword [rsp + 0x28], rax	        67	expr.c	FUNCTION_1
0x40006cd	            0x31c0	                            xor eax, eax	        67	expr.c	FUNCTION_1
0x40006cf	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	        72	expr.c	FUNCTION_1	IF_1
0x40006d3	            0x3c03	                               cmp al, 3	        72	expr.c	FUNCTION_1	IF_1
0x40006d5	            0x7513	                           jne 0x40006ea	        72	expr.c	FUNCTION_1	IF_1
0x40006d7	      0x48837f1000	               cmp qword [rdi + 0x10], 0	        73	expr.c	FUNCTION_1	IF_1
0x40006dc	     0xf858d000000	                           jne 0x400076f	        73	expr.c	FUNCTION_1	IF_1
0x40006e2	          0x488b07	                    mov rax, qword [rdi]	        74	expr.c	FUNCTION_1	IF_1
0x40006e5	      0xe9ee000000	                           jmp 0x40007d8	        74	expr.c	FUNCTION_1	IF_1
0x40006ea	            0x3c06	                               cmp al, 6	        76	expr.c	FUNCTION_1	IF_2
0x40006ec	            0x7569	                           jne 0x4000757	        76	expr.c	FUNCTION_1	IF_2
0x40006ee	      0x48837f1000	               cmp qword [rdi + 0x10], 0	        81	expr.c	FUNCTION_1	IF_2	IF_3
0x40006f3	            0x7e23	                           jle 0x4000718	        81	expr.c	FUNCTION_1	IF_2	IF_3
0x40006f5	      0xba05000000	                              mov edx, 5	        82	expr.c	FUNCTION_1	IF_2	CALL_2
0x40006fa	      0xbe00000000	                              mov esi, 0	        82	expr.c	FUNCTION_1	IF_2	CALL_2
0x40006ff	      0xbf00000000	                              mov edi, 0	        82	expr.c	FUNCTION_1	IF_2	CALL_2
0x4000704	      0xe800000000	                          call 0x4000709	        82	expr.c	FUNCTION_1	IF_2	CALL_2
0x4000709	          0x4889c7	                            mov rdi, rax	        82	expr.c	FUNCTION_1	IF_2	CALL_2
0x400070c	      0xb800000000	                              mov eax, 0	        82	expr.c	FUNCTION_1	IF_2	CALL_2
0x4000711	      0xe800000000	                          call 0x4000716	        82	expr.c	FUNCTION_1	IF_2	CALL_2
0x4000716	            0xeb21	                           jmp 0x4000739	        82	expr.c	FUNCTION_1	IF_2	CALL_2
0x4000718	      0xba05000000	                              mov edx, 5	        84	expr.c	FUNCTION_1	IF_2	CALL_4
0x400071d	      0xbe00000000	                              mov esi, 0	        84	expr.c	FUNCTION_1	IF_2	CALL_4
0x4000722	      0xbf00000000	                              mov edi, 0	        84	expr.c	FUNCTION_1	IF_2	CALL_4
0x4000727	      0xe800000000	                          call 0x400072c	        84	expr.c	FUNCTION_1	IF_2	CALL_4
0x400072c	          0x4889c7	                            mov rdi, rax	        84	expr.c	FUNCTION_1	IF_2	CALL_4
0x400072f	      0xb800000000	                              mov eax, 0	        84	expr.c	FUNCTION_1	IF_2	CALL_4
0x4000734	      0xe800000000	                          call 0x4000739	        84	expr.c	FUNCTION_1	IF_2	CALL_4
0x4000739	      0xc644241802	                mov byte [rsp + 0x18], 2	        85	expr.c	FUNCTION_1	IF_2
0x400073e	    0x48c744241000	               mov qword [rsp + 0x10], 0	        86	expr.c	FUNCTION_1	IF_2
0x4000747	      0x80642419fc	             and byte [rsp + 0x19], 0xfc	        88	expr.c	FUNCTION_1	IF_2
0x400074c	          0x4889e7	                            mov rdi, rsp	        89	expr.c	FUNCTION_1	IF_2	CALL_5
0x400074f	      0xe81ef9ffff	            call sym.clean_up_expression	        89	expr.c	FUNCTION_1	IF_2	CALL_5
0x4000754	          0x4889e3	                            mov rbx, rsp	        90	expr.c	FUNCTION_1	IF_2
0x4000757	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	        98	expr.c	FUNCTION_1
0x400075b	      0xbe00000000	                              mov esi, 0	        97	expr.c	FUNCTION_1	CALL_6
0x4000760	            0x3c02	                               cmp al, 2	        97	expr.c	FUNCTION_1	CALL_6
0x4000762	            0x7412	                            je 0x4000776	        97	expr.c	FUNCTION_1	CALL_6
0x4000764	    0x488b35000000	            mov rsi, qword [0x0400076b] 	        97	expr.c	FUNCTION_1	CALL_6
0x400076b	            0x3c05	                               cmp al, 5	        97	expr.c	FUNCTION_1	CALL_6
0x400076d	            0x7407	                            je 0x4000776	        97	expr.c	FUNCTION_1	CALL_6
0x400076f	    0x488b35000000	            mov rsi, qword [0x04000776] 	        97	expr.c	FUNCTION_1	CALL_6
0x4000776	      0xb900000000	                              mov ecx, 0	        97	expr.c	FUNCTION_1	CALL_6
0x400077b	      0xba00000000	                              mov edx, 0	        97	expr.c	FUNCTION_1	CALL_6
0x4000780	      0xbf00000000	                              mov edi, 0	        97	expr.c	FUNCTION_1	CALL_6
0x4000785	      0xe800000000	                          call 0x400078a	        97	expr.c	FUNCTION_1	CALL_6
0x400078a	          0x4889c5	                            mov rbp, rax	        97	expr.c	FUNCTION_1	CALL_6
0x400078d	          0x4889de	                            mov rsi, rbx	       104	expr.c	FUNCTION_1	CALL_7
0x4000790	          0x4889c7	                            mov rdi, rax	       104	expr.c	FUNCTION_1	CALL_7
0x4000793	      0xe800000000	                          call 0x4000798	       104	expr.c	FUNCTION_1	CALL_7
0x4000798	        0x807b1802	                cmp byte [rbx + 0x18], 2	       106	expr.c	FUNCTION_1	IF_4
0x400079c	            0x7508	                           jne 0x40007a6	       106	expr.c	FUNCTION_1	IF_4
0x400079e	          0x4889ef	                            mov rdi, rbp	       107	expr.c	FUNCTION_1	CALL_8
0x40007a1	      0xe800000000	                          call 0x40007a6	       107	expr.c	FUNCTION_1	CALL_8
0x40007a6	      0xbf20000000	                           mov edi, 0x20	       109	expr.c	FUNCTION_1	CALL_9
0x40007ab	      0xe800000000	                          call 0x40007b0	       109	expr.c	FUNCTION_1	CALL_9
0x40007b0	          0x4889c3	                            mov rbx, rax	       109	expr.c	FUNCTION_1	CALL_9
0x40007b3	        0x48896808	                mov qword [rax + 8], rbp	       110	expr.c	FUNCTION_1
0x40007b7	        0x488d7818	                   lea rdi, [rax + 0x18]	       111	expr.c	FUNCTION_1	CALL_10
0x40007bb	      0xe800000000	                          call 0x40007c0	       111	expr.c	FUNCTION_1	CALL_10
0x40007c0	        0x48894310	             mov qword [rbx + 0x10], rax	       111	expr.c	FUNCTION_1	CALL_10
0x40007c4	    0x488b05000000	            mov rax, qword [0x040007cb] 	       112	expr.c	FUNCTION_1
0x40007cb	          0x488903	                    mov qword [rbx], rax	       112	expr.c	FUNCTION_1
0x40007ce	    0x48891d000000	            mov qword [0x040007d5], rbx 	       113	expr.c	FUNCTION_1
0x40007d5	          0x4889e8	                            mov rax, rbp	       115	expr.c	FUNCTION_1
0x40007d8	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       116	expr.c	FUNCTION_1
0x40007dd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       116	expr.c	FUNCTION_1
0x40007e6	            0x7405	                            je 0x40007ed	       116	expr.c	FUNCTION_1
0x40007e8	      0xe800000000	                          call 0x40007ed	       116	expr.c	FUNCTION_1
0x40007ed	        0x4883c438	                           add rsp, 0x38	       116	expr.c	FUNCTION_1
0x40007f1	              0x5b	                                 pop rbx	       116	expr.c	FUNCTION_1
0x40007f2	              0x5d	                                 pop rbp	       116	expr.c	FUNCTION_1
0x40007f3	              0xc3	                                     ret	       116	expr.c	FUNCTION_1
get_single_number	CALL,1:DO,0:functions,0:ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0	14
0x4002bc9	        0x4883ec38	                           sub rsp, 0x38	      2375	expr.c	FUNCTION_23
0x4002bcd	    0x64488b042528	                mov rax, qword fs:[0x28]	      2375	expr.c	FUNCTION_23
0x4002bd6	      0x4889442428	             mov qword [rsp + 0x28], rax	      2375	expr.c	FUNCTION_23
0x4002bdb	            0x31c0	                            xor eax, eax	      2375	expr.c	FUNCTION_23
0x4002bdd	      0xbe01000000	                              mov esi, 1	      2377	expr.c	FUNCTION_23	CALL_1
0x4002be2	          0x4889e7	                            mov rdi, rsp	      2377	expr.c	FUNCTION_23	CALL_1
0x4002be5	      0xe8fae5ffff	                        call sym.operand	      2377	expr.c	FUNCTION_23	CALL_1
0x4002bea	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      2379	expr.c	FUNCTION_23
0x4002bee	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2379	expr.c	FUNCTION_23
0x4002bf3	    0x644833142528	                xor rdx, qword fs:[0x28]	      2379	expr.c	FUNCTION_23
0x4002bfc	            0x7405	                            je 0x4002c03	      2379	expr.c	FUNCTION_23
0x4002bfe	      0xe800000000	                          call 0x4002c03	      2379	expr.c	FUNCTION_23
0x4002c03	        0x4883c438	                           add rsp, 0x38	      2379	expr.c	FUNCTION_23
0x4002c07	              0xc3	                                     ret	      2379	expr.c	FUNCTION_23
get_symbol_name	CALL,5:DO,1:functions,0:ELSE,1:IF,4:FOR,0:WHILE,1:SWITCH,0	66
0x40010c2	              0x53	                                push rbx	      2326	expr.c	FUNCTION_21
0x40010c3	    0x488b05000000	            mov rax, qword [0x040010ca] 	      2329	expr.c	FUNCTION_21
0x40010ca	          0x488907	                    mov qword [rdi], rax	      2329	expr.c	FUNCTION_21
0x40010cd	    0x488b05000000	            mov rax, qword [0x040010d4] 	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x40010d4	        0x488d5001	                      lea rdx, [rax + 1]	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x40010d8	    0x488915000000	            mov qword [0x040010df], rdx 	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x40010df	           0xfb618	                   movzx ebx, byte [rax]	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x40010e2	           0xfb6c3	                           movzx eax, bl	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x40010e5	    0xf68000000000	                      test byte [rax], 2	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x40010ec	            0x740c	                            je 0x40010fa	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x40010ee	    0x833d00000000	               cmp dword [0x040010f5], 0	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x40010f5	           0xf95c1	                                setne cl	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x40010f8	            0xeb10	                           jmp 0x400110a	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x40010fa	    0x833d00000000	               cmp dword [0x04001101], 0	      2333	expr.c	FUNCTION_21	IF_1
0x4001101	            0x744a	                            je 0x400114d	      2333	expr.c	FUNCTION_21	IF_1
0x4001103	          0x80fb01	                               cmp bl, 1	      2333	expr.c	FUNCTION_21	IF_1
0x4001106	            0x7545	                           jne 0x400114d	      2333	expr.c	FUNCTION_21	IF_1
0x4001108	            0xebe4	                           jmp 0x40010ee	      2333	expr.c	FUNCTION_21	IF_1
0x400110a	    0x488b05000000	            mov rax, qword [0x04001111] 	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x4001111	        0x488d5001	                      lea rdx, [rax + 1]	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x4001115	    0x488915000000	            mov qword [0x0400111c], rdx 	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x400111c	           0xfb618	                   movzx ebx, byte [rax]	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x400111f	           0xfb6d3	                           movzx edx, bl	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x4001122	     0xfb692000000	                   movzx edx, byte [rdx]	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x4001129	          0xf6c201	                              test dl, 1	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x400112c	            0x75dc	                           jne 0x400110a	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x400112e	          0x80fb01	                               cmp bl, 1	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x4001131	            0x7504	                           jne 0x4001137	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x4001133	            0x84c9	                             test cl, cl	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x4001135	            0x75d3	                           jne 0x400110a	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x4001137	          0xf6c204	                              test dl, 4	      2338	expr.c	FUNCTION_21	IF_1	IF_2	CALL_3
0x400113a	            0x7464	                            je 0x40011a0	      2338	expr.c	FUNCTION_21	IF_1	IF_2	CALL_3
0x400113c	        0x488d5002	                      lea rdx, [rax + 2]	      2339	expr.c	FUNCTION_21	IF_1	IF_2
0x4001140	    0x488915000000	            mov qword [0x04001147], rdx 	      2339	expr.c	FUNCTION_21	IF_1	IF_2
0x4001147	         0xfb65801	               movzx ebx, byte [rax + 1]	      2339	expr.c	FUNCTION_21	IF_1	IF_2
0x400114b	            0xeb53	                           jmp 0x40011a0	      2339	expr.c	FUNCTION_21	IF_1	IF_2
0x400114d	          0x80fb22	                            cmp bl, 0x22	      2341	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001150	            0x754e	                           jne 0x40011a0	      2341	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001152	          0x488917	                    mov qword [rdi], rdx	      2345	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001155	          0x80fb5c	                            cmp bl, 0x5c	      2348	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x4001158	           0xf94c1	                                 sete cl	      2348	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x400115b	    0x488b05000000	            mov rax, qword [0x04001162] 	      2349	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x4001162	        0x488d5001	                      lea rdx, [rax + 1]	      2349	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x4001166	    0x488915000000	            mov qword [0x0400116d], rdx 	      2349	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x400116d	           0xfb618	                   movzx ebx, byte [rax]	      2349	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x4001170	            0x84db	                             test bl, bl	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001172	            0x740b	                            je 0x400117f	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001174	          0x80fb22	                            cmp bl, 0x22	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001177	            0x75dc	                           jne 0x4001155	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001179	            0x84c9	                             test cl, cl	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x400117b	            0x75d8	                           jne 0x4001155	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x400117d	            0xeb21	                           jmp 0x40011a0	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x400117f	      0xba05000000	                              mov edx, 5	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x4001184	      0xbe00000000	                              mov esi, 0	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x4001189	      0xbf00000000	                              mov edi, 0	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x400118e	      0xe800000000	                          call 0x4001193	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x4001193	          0x4889c7	                            mov rdi, rax	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x4001196	      0xb800000000	                              mov eax, 0	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x400119b	      0xe800000000	                          call 0x40011a0	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x40011a0	    0x488b05000000	            mov rax, qword [0x040011a7] 	      2356	expr.c	FUNCTION_21
0x40011a7	        0x488d50ff	                      lea rdx, [rax - 1]	      2356	expr.c	FUNCTION_21
0x40011ab	    0x488915000000	            mov qword [0x040011b2], rdx 	      2356	expr.c	FUNCTION_21
0x40011b2	        0xc640ff00	                   mov byte [rax - 1], 0	      2356	expr.c	FUNCTION_21
0x40011b6	            0x89d8	                            mov eax, ebx	      2358	expr.c	FUNCTION_21
0x40011b8	              0x5b	                                 pop rbx	      2358	expr.c	FUNCTION_21
0x40011b9	              0xc3	                                     ret	      2358	expr.c	FUNCTION_21
expr_begin	CALL,2:DO,0:functions,0:ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0	2
0x400093b	      0xe800000000	                          call 0x4000940	      1556	expr.c	FUNCTION_15	CALL_1
0x4000940	            0xf3c3	                                     ret	      1556	expr.c	FUNCTION_15	CALL_1
restore_line_pointer	CALL,0:DO,0:functions,0:ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0	10
0x40011ba	            0x89f8	                            mov eax, edi	      2366	expr.c	FUNCTION_22
0x40011bc	    0x488b15000000	            mov rdx, qword [0x040011c3] 	      2367	expr.c	FUNCTION_22
0x40011c3	          0x40883a	                     mov byte [rdx], dil	      2367	expr.c	FUNCTION_22
0x40011c6	        0x4080ff22	                           cmp dil, 0x22	      2368	expr.c	FUNCTION_22	IF_1
0x40011ca	            0x7516	                           jne 0x40011e2	      2368	expr.c	FUNCTION_22	IF_1
0x40011cc	    0x488b05000000	            mov rax, qword [0x040011d3] 	      2369	expr.c	FUNCTION_22	IF_1
0x40011d3	        0x488d5001	                      lea rdx, [rax + 1]	      2369	expr.c	FUNCTION_22	IF_1
0x40011d7	    0x488915000000	            mov qword [0x040011de], rdx 	      2369	expr.c	FUNCTION_22	IF_1
0x40011de	         0xfb64001	               movzx eax, byte [rax + 1]	      2369	expr.c	FUNCTION_22	IF_1
0x40011e2	            0xf3c3	                                     ret	      2371	expr.c	FUNCTION_22
expr_set_precedence	CALL,0:DO,0:functions,0:ELSE,1:IF,1:FOR,0:WHILE,0:SWITCH,0	4
0x40008fb	    0xc60500000000	                mov byte [0x04000902], 8	      1538	expr.c	FUNCTION_13	ELSE_1
0x4000902	    0xc60500000000	                mov byte [0x04000909], 8	      1539	expr.c	FUNCTION_13	ELSE_1
0x4000909	    0xc60500000000	                mov byte [0x04000910], 8	      1540	expr.c	FUNCTION_13	ELSE_1
0x4000910	              0xc3	                                     ret	      1540	expr.c	FUNCTION_13	ELSE_1
clean_up_expression	CALL,0:DO,0:functions,0:ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,1	8
0x4000072	        0x807f1808	                cmp byte [rdi + 0x18], 8	      1392	expr.c	FUNCTION_12	SWITCH_1
0x4000076	            0x7722	                            ja 0x400009a	      1392	expr.c	FUNCTION_12	SWITCH_1
0x4000078	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	      1392	expr.c	FUNCTION_12	SWITCH_1
0x400007c	    0xff24c5000000	                       jmp qword [rax*8]	      1392	expr.c	FUNCTION_12	SWITCH_1
0x4000083	    0x48c747100000	               mov qword [rdi + 0x10], 0	      1396	expr.c	FUNCTION_12	SWITCH_1
0x400008b	    0x48c707000000	                      mov qword [rdi], 0	      1401	expr.c	FUNCTION_12	SWITCH_1
0x4000092	    0x48c747080000	                  mov qword [rdi + 8], 0	      1406	expr.c	FUNCTION_12	SWITCH_1
0x400009a	            0xf3c3	                                     ret	      1406	expr.c	FUNCTION_12	SWITCH_1
expr_build_uconstant	CALL,1:DO,0:functions,0:ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0	18
0x4000830	        0x4883ec38	                           sub rsp, 0x38	       154	expr.c	FUNCTION_3
0x4000834	    0x64488b042528	                mov rax, qword fs:[0x28]	       154	expr.c	FUNCTION_3
0x400083d	      0x4889442428	             mov qword [rsp + 0x28], rax	       154	expr.c	FUNCTION_3
0x4000842	            0x31c0	                            xor eax, eax	       154	expr.c	FUNCTION_3
0x4000844	      0xc644241802	                mov byte [rsp + 0x18], 2	       157	expr.c	FUNCTION_3
0x4000849	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       158	expr.c	FUNCTION_3
0x400084e	       0xfb6442419	           movzx eax, byte [rsp + 0x19] 	       159	expr.c	FUNCTION_3
0x4000853	          0x83c801	                               or eax, 1	       159	expr.c	FUNCTION_3
0x4000856	          0x83e0fd	                     and eax, 0xfffffffd	       160	expr.c	FUNCTION_3
0x4000859	        0x88442419	               mov byte [rsp + 0x19], al	       160	expr.c	FUNCTION_3
0x400085d	          0x4889e7	                            mov rdi, rsp	       161	expr.c	FUNCTION_3	CALL_1
0x4000860	      0xe800000000	                          call 0x4000865	       161	expr.c	FUNCTION_3	CALL_1
0x4000865	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       162	expr.c	FUNCTION_3
0x400086a	    0x644833142528	                xor rdx, qword fs:[0x28]	       162	expr.c	FUNCTION_3
0x4000873	            0x7405	                            je 0x400087a	       162	expr.c	FUNCTION_3
0x4000875	      0xe800000000	                          call 0x400087a	       162	expr.c	FUNCTION_3
0x400087a	        0x4883c438	                           add rsp, 0x38	       162	expr.c	FUNCTION_3
0x400087e	              0xc3	                                     ret	       162	expr.c	FUNCTION_3
operand	CALL,95:DO,0:functions,0:ELSE,22:IF,62:FOR,5:WHILE,0:SWITCH,4	659
0x40011e4	            0x4155	                                push r13	       740	expr.c	FUNCTION_11
0x40011e6	            0x4154	                                push r12	       740	expr.c	FUNCTION_11
0x40011e8	              0x55	                                push rbp	       740	expr.c	FUNCTION_11
0x40011e9	              0x53	                                push rbx	       740	expr.c	FUNCTION_11
0x40011ea	        0x4883ec28	                           sub rsp, 0x28	       740	expr.c	FUNCTION_11
0x40011ee	          0x4889fb	                            mov rbx, rdi	       740	expr.c	FUNCTION_11
0x40011f1	            0x89f5	                            mov ebp, esi	       740	expr.c	FUNCTION_11
0x40011f3	    0x64488b042528	                mov rax, qword fs:[0x28]	       740	expr.c	FUNCTION_11
0x40011fc	      0x4889442418	             mov qword [rsp + 0x18], rax	       740	expr.c	FUNCTION_11
0x4001201	            0x31c0	                            xor eax, eax	       740	expr.c	FUNCTION_11
0x4001203	         0xfb64719	           movzx eax, byte [rdi + 0x19] 	       752	expr.c	FUNCTION_11
0x4001207	          0x83c801	                               or eax, 1	       752	expr.c	FUNCTION_11
0x400120a	          0x83e0fd	                     and eax, 0xfffffffd	       753	expr.c	FUNCTION_11
0x400120d	          0x884719	               mov byte [rdi + 0x19], al	       753	expr.c	FUNCTION_11
0x4001210	    0x488b05000000	            mov rax, qword [0x04001217] 	       757	expr.c	FUNCTION_11	CALL_1
0x4001217	          0x803820	                    cmp byte [rax], 0x20	       757	expr.c	FUNCTION_11	CALL_1
0x400121a	            0x750b	                           jne 0x4001227	       757	expr.c	FUNCTION_11	CALL_1
0x400121c	        0x4883c001	                              add rax, 1	       757	expr.c	FUNCTION_11	CALL_1
0x4001220	    0x488905000000	            mov qword [0x04001227], rax 	       757	expr.c	FUNCTION_11	CALL_1
0x4001227	    0x4c8b25000000	            mov r12, qword [0x0400122e] 	       758	expr.c	FUNCTION_11
0x400122e	      0x4d8d6c2401	                      lea r13, [r12 + 1]	       758	expr.c	FUNCTION_11
0x4001233	    0x4c892d000000	            mov qword [0x0400123a], r13 	       758	expr.c	FUNCTION_11
0x400123a	      0x410fb60424	                   movzx eax, byte [r12]	       758	expr.c	FUNCTION_11
0x400123f	        0x8844240f	                mov byte [rsp + 0xf], al	       758	expr.c	FUNCTION_11
0x4001243	           0xfb6d0	                           movzx edx, al	       760	expr.c	FUNCTION_11	IF_1
0x4001246	          0x4863ca	                         movsxd rcx, edx	       760	expr.c	FUNCTION_11	IF_1
0x4001249	    0x80b900000000	                       cmp byte [rcx], 0	       760	expr.c	FUNCTION_11	IF_1
0x4001250	     0xf8544070000	                           jne 0x400199a	       760	expr.c	FUNCTION_11	IF_1
0x4001256	          0x83e821	                           sub eax, 0x21	       763	expr.c	FUNCTION_11	SWITCH_1
0x4001259	            0x3c5d	                            cmp al, 0x5d	       763	expr.c	FUNCTION_11	SWITCH_1
0x400125b	     0xf8749070000	                            ja 0x40019aa	       763	expr.c	FUNCTION_11	SWITCH_1
0x4001261	           0xfb6c0	                           movzx eax, al	       763	expr.c	FUNCTION_11	SWITCH_1
0x4001264	    0xff24c5000000	                       jmp qword [rax*8]	       763	expr.c	FUNCTION_11	SWITCH_1
0x400126b	    0x4c8925000000	            mov qword [0x04001272], r12 	       774	expr.c	FUNCTION_11	SWITCH_1
0x4001272	          0x4889de	                            mov rsi, rbx	       776	expr.c	FUNCTION_11	SWITCH_1	CALL_2
0x4001275	      0xbf0a000000	                            mov edi, 0xa	       776	expr.c	FUNCTION_11	SWITCH_1	CALL_2
0x400127a	      0xe8a3eeffff	               call sym.integer_constant	       776	expr.c	FUNCTION_11	SWITCH_1	CALL_2
0x400127f	      0xe929090000	                           jmp 0x4001bad	       779	expr.c	FUNCTION_11	SWITCH_1
0x4001284	    0x410fb6542401	               movzx edx, byte [r12 + 1]	       813	expr.c	FUNCTION_11	SWITCH_1
0x400128a	        0x8854240f	                mov byte [rsp + 0xf], dl	       813	expr.c	FUNCTION_11	SWITCH_1
0x400128e	          0x8d42d0	                   lea eax, [rdx - 0x30]	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4001291	            0x3c48	                            cmp al, 0x48	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4001293	            0x770a	                            ja 0x400129f	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4001295	           0xfb6c0	                           movzx eax, al	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4001298	    0xff24c5000000	                       jmp qword [rax*8]	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x400129f	            0x84d2	                             test dl, dl	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x40012a1	            0x743e	                            je 0x40012e1	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x40012a3	           0xfbef2	                           movsx esi, dl	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x40012a6	      0xbf00000000	                              mov edi, 0	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x40012ab	      0xe800000000	                          call 0x40012b0	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x40012b0	          0x4885c0	                           test rax, rax	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x40012b3	            0x742c	                            je 0x40012e1	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x40012b5	        0x4983c402	                              add r12, 2	       832	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6
0x40012b9	    0x4c8925000000	            mov qword [0x040012c0], r12 	       832	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6
0x40012c0	          0x4889df	                            mov rdi, rbx	       833	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_9
0x40012c3	      0xe8d4edffff	              call sym.floating_constant	       833	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_9
0x40012c8	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       834	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_10
0x40012cd	     0xfb680000000	                   movzx eax, byte [rax]	       834	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_10
0x40012d4	            0xf7d8	                                 neg eax	       834	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_10
0x40012d6	            0x4898	                                    cdqe	       834	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_10
0x40012d8	        0x48894310	             mov qword [rbx + 0x10], rax	       834	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_10
0x40012dc	      0xe9cc080000	                           jmp 0x4001bad	       834	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_10
0x40012e1	        0xc6431802	                mov byte [rbx + 0x18], 2	       839	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	ELSE_1
0x40012e5	    0x48c743100000	               mov qword [rbx + 0x10], 0	       840	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	ELSE_1
0x40012ed	      0xe9bb080000	                           jmp 0x4001bad	       840	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	ELSE_1
0x40012f2	        0x4983c402	                              add r12, 2	       849	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x40012f6	    0x4c8925000000	            mov qword [0x040012fd], r12 	       849	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x40012fd	          0x4889de	                            mov rsi, rbx	       850	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_11
0x4001300	      0xbf10000000	                           mov edi, 0x10	       850	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_11
0x4001305	      0xe818eeffff	               call sym.integer_constant	       850	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_11
0x400130a	      0xe99e080000	                           jmp 0x4001bad	       851	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x400130f	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       854	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x4001315	          0x83e830	                           sub eax, 0x30	       854	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x4001318	            0x3c01	                               cmp al, 1	       854	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x400131a	            0x762a	                           jbe 0x4001346	       854	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x400131c	    0x4c8925000000	            mov qword [0x04001323], r12 	       859	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x4001323	          0x4889de	                            mov rsi, rbx	       860	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8	CALL_12
0x4001326	      0xbf0a000000	                            mov edi, 0xa	       860	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8	CALL_12
0x400132b	      0xe8f2edffff	               call sym.integer_constant	       860	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8	CALL_12
0x4001330	      0xe978080000	                           jmp 0x4001bad	       861	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x4001335	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       866	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x400133b	          0x83e830	                           sub eax, 0x30	       866	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x400133e	            0x3c01	                               cmp al, 1	       866	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4001340	     0xf875dffffff	                            ja 0x40012a3	       866	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4001346	        0x4983c402	                              add r12, 2	       869	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x400134a	    0x4c8925000000	            mov qword [0x04001351], r12 	       869	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4001351	          0x4889de	                            mov rsi, rbx	       870	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9	CALL_13
0x4001354	      0xbf02000000	                              mov edi, 2	       870	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9	CALL_13
0x4001359	      0xe8c4edffff	               call sym.integer_constant	       870	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9	CALL_13
0x400135e	      0xe94a080000	                           jmp 0x4001bad	       871	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4001363	          0x4889de	                            mov rsi, rbx	       885	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_14
0x4001366	      0xbf08000000	                              mov edi, 8	       885	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_14
0x400136b	      0xe8b2edffff	               call sym.integer_constant	       885	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_14
0x4001370	      0xe938080000	                           jmp 0x4001bad	       888	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4001375	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       898	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x400137b	    0x80b800000000	                       cmp byte [rax], 0	       898	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4001382	            0x756a	                           jne 0x40013ee	       898	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4001384	      0xbe66000000	                           mov esi, 0x66	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x4001389	      0xbf00000000	                              mov edi, 0	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x400138e	      0xe800000000	                          call 0x4001393	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x4001393	          0x4885c0	                           test rax, rax	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x4001396	            0x7456	                            je 0x40013ee	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x4001398	        0x4983c402	                              add r12, 2	       901	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x400139c	      0x4c89642410	             mov qword [rsp + 0x10], r12	       901	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013a1	      0xb900000000	                              mov ecx, 0	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x40013a6	      0xba00000000	                              mov edx, 0	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x40013ab	      0xbe00000000	                              mov esi, 0	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x40013b0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x40013b5	      0xe800000000	                          call 0x40013ba	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x40013ba	    0x488b15000000	            mov rdx, qword [0x040013c1] 	       908	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013c1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       908	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013c6	        0x488d4a01	                      lea rcx, [rdx + 1]	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013ca	          0x4839c8	                            cmp rax, rcx	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013cd	            0x741f	                            je 0x40013ee	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013cf	        0x4883c202	                              add rdx, 2	       909	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013d3	          0x4839d0	                            cmp rax, rdx	       909	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013d6	            0x750c	                           jne 0x40013e4	       909	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013d8	         0xfb670ff	               movzx esi, byte [rax - 1]	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013dc	          0x8d56d5	                   lea edx, [rsi - 0x2b]	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013df	          0xf6c2fd	                           test dl, 0xfd	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013e2	            0x740a	                            je 0x40013ee	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013e4	           0xfb600	                   movzx eax, byte [rax]	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013e7	          0x83e0fb	                     and eax, 0xfffffffb	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40013ea	            0x3c62	                            cmp al, 0x62	       914	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x40013ec	            0x751a	                           jne 0x4001408	       914	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x40013ee	    0x48832d000000	               sub qword [0x040013f6], 1	       916	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x40013f6	          0x4889de	                            mov rsi, rbx	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40013f9	      0xbf0a000000	                            mov edi, 0xa	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40013fe	      0xe81fedffff	               call sym.integer_constant	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x4001403	      0xe9a5070000	                           jmp 0x4001bad	       918	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x4001408	    0x488305000000	               add qword [0x04001410], 1	       937	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4001410	          0x4889df	                            mov rdi, rbx	       938	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_19
0x4001413	      0xe884ecffff	              call sym.floating_constant	       938	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_19
0x4001418	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x400141d	     0xfb680000000	                   movzx eax, byte [rax]	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x4001424	            0xf7d8	                                 neg eax	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x4001426	            0x4898	                                    cdqe	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x4001428	        0x48894310	             mov qword [rbx + 0x10], rax	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x400142c	      0xe97c070000	                           jmp 0x4001bad	       940	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4001431	      0xe800000000	                          call 0x4001436	       957	expr.c	FUNCTION_11	SWITCH_1	IF_16	CALL_22
0x4001436	            0x85c0	                           test eax, eax	       957	expr.c	FUNCTION_11	SWITCH_1	IF_16	CALL_22
0x4001438	     0xf856c050000	                           jne 0x40019aa	       957	expr.c	FUNCTION_11	SWITCH_1	IF_16	CALL_22
0x400143e	            0x89ea	                            mov edx, ebp	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x4001440	          0x4889de	                            mov rsi, rbx	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x4001443	      0xbf00000000	                              mov edi, 0	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x4001448	      0xe800000000	                          call 0x400144d	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x400144d	          0x4889c3	                            mov rbx, rax	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x4001450	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001455	            0x3c28	                            cmp al, 0x28	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001457	            0x7516	                           jne 0x400146f	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001459	    0x488b05000000	            mov rax, qword [0x04001460] 	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001460	           0xfb628	                   movzx ebp, byte [rax]	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001463	        0x4080fd29	                           cmp bpl, 0x29	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001467	     0xf85ea070000	                           jne 0x4001c57	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x400146d	            0xeb6f	                           jmp 0x40014de	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x400146f	            0x3c5b	                            cmp al, 0x5b	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001471	            0x756b	                           jne 0x40014de	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001473	    0x488b05000000	            mov rax, qword [0x0400147a] 	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x400147a	           0xfb628	                   movzx ebp, byte [rax]	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x400147d	        0x4080fd5d	                           cmp bpl, 0x5d	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001481	     0xf85b7070000	                           jne 0x4001c3e	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001487	            0xeb55	                           jmp 0x40014de	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4001489	    0x41bc29000000	                          mov r12d, 0x29	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x400148f	      0xba05000000	                              mov edx, 5	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4001494	      0xbe00000000	                              mov esi, 0	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4001499	      0xbf00000000	                              mov edi, 0	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x400149e	      0xe800000000	                          call 0x40014a3	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40014a3	        0x400fbef5	                          movsx esi, bpl	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40014a7	          0x4489e2	                           mov edx, r12d	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40014aa	          0x4889c7	                            mov rdi, rax	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40014ad	      0xb800000000	                              mov eax, 0	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40014b2	      0xe800000000	                          call 0x40014b7	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40014b7	            0xeb2d	                           jmp 0x40014e6	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40014b9	      0xba05000000	                              mov edx, 5	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014be	      0xbe00000000	                              mov esi, 0	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014c3	      0xbf00000000	                              mov edi, 0	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014c8	      0xe800000000	                          call 0x40014cd	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014cd	            0x89ee	                            mov esi, ebp	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014cf	          0x4889c7	                            mov rdi, rax	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014d2	      0xb800000000	                              mov eax, 0	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014d7	      0xe800000000	                          call 0x40014dc	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014dc	            0xeb08	                           jmp 0x40014e6	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x40014de	    0x488305000000	               add qword [0x040014e6], 1	       976	expr.c	FUNCTION_11	SWITCH_1	ELSE_4
0x40014e6	    0x488b15000000	            mov rdx, qword [0x040014ed] 	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x40014ed	          0x4889d8	                            mov rax, rbx	       979	expr.c	FUNCTION_11	SWITCH_1
0x40014f0	          0x803a20	                    cmp byte [rdx], 0x20	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x40014f3	     0xf8533070000	                           jne 0x4001c2c	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x40014f9	        0x4883c201	                              add rdx, 1	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x40014fd	    0x488915000000	            mov qword [0x04001504], rdx 	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x4001504	      0xe923070000	                           jmp 0x4001c2c	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x4001509	        0xc6431802	                mov byte [rbx + 0x18], 2	      1000	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x400150d	      0x498d442402	                      lea rax, [r12 + 2]	      1001	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x4001512	    0x488905000000	            mov qword [0x04001519], rax 	      1001	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x4001519	    0x490fbe442401	               movsx rax, byte [r12 + 1]	      1001	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x400151f	        0x48894310	             mov qword [rbx + 0x10], rax	      1001	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x4001523	      0xe985060000	                           jmp 0x4001bad	      1002	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x4001528	          0x4863d2	                         movsxd rdx, edx	      1017	expr.c	FUNCTION_11	SWITCH_1	IF_23	CALL_32
0x400152b	    0xf68200000000	                      test byte [rdx], 2	      1017	expr.c	FUNCTION_11	SWITCH_1	IF_23	CALL_32
0x4001532	     0xf858b040000	                           jne 0x40019c3	      1017	expr.c	FUNCTION_11	SWITCH_1	IF_23	CALL_32
0x4001538	            0x89ee	                            mov esi, ebp	      1027	expr.c	FUNCTION_11	SWITCH_1	CALL_33
0x400153a	          0x4889df	                            mov rdi, rbx	      1027	expr.c	FUNCTION_11	SWITCH_1	CALL_33
0x400153d	      0xe8a2fcffff	                        call sym.operand	      1027	expr.c	FUNCTION_11	SWITCH_1	CALL_33
0x4001542	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	      1028	expr.c	FUNCTION_11	SWITCH_1	IF_24
0x4001546	            0x3c02	                               cmp al, 2	      1028	expr.c	FUNCTION_11	SWITCH_1	IF_24
0x4001548	            0x756b	                           jne 0x40015b5	      1028	expr.c	FUNCTION_11	SWITCH_1	IF_24
0x400154a	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1031	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x400154f	            0x3c2d	                            cmp al, 0x2d	      1031	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4001551	            0x7535	                           jne 0x4001588	      1031	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4001553	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1034	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4001557	          0x48f7d8	                                 neg rax	      1034	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x400155a	        0x48894310	             mov qword [rbx + 0x10], rax	      1034	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x400155e	        0x806319fe	             and byte [rbx + 0x19], 0xfe	      1038	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4001562	          0x4885c0	                           test rax, rax	      1039	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4001565	     0xf8442060000	                            je 0x4001bad	      1039	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x400156b	         0xfb65319	           movzx edx, byte [rbx + 0x19] 	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x400156f	            0x89d0	                            mov eax, edx	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4001571	            0xd0e8	                               shr al, 1	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4001573	          0x83e001	                              and eax, 1	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4001576	          0x83f001	                              xor eax, 1	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4001579	             0x1c0	                            add eax, eax	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x400157b	          0x83e2fd	                     and edx, 0xfffffffd	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x400157e	             0x9d0	                             or eax, edx	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4001580	          0x884319	               mov byte [rbx + 0x19], al	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4001583	      0xe925060000	                           jmp 0x4001bad	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4001588	            0x3c7e	                            cmp al, 0x7e	      1042	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x400158a	            0x7404	                            je 0x4001590	      1042	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x400158c	            0x3c22	                            cmp al, 0x22	      1042	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x400158e	            0x7509	                           jne 0x4001599	      1042	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4001590	        0x48f75310	                  not qword [rbx + 0x10]	      1043	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4001594	      0xe914060000	                           jmp 0x4001bad	      1043	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4001599	            0x3c21	                            cmp al, 0x21	      1044	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x400159b	     0xf850c060000	                           jne 0x4001bad	      1044	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x40015a1	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x40015a6	           0xf94c0	                                 sete al	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x40015a9	           0xfb6c0	                           movzx eax, al	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x40015ac	        0x48894310	             mov qword [rbx + 0x10], rax	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x40015b0	      0xe9f8050000	                           jmp 0x4001bad	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x40015b5	            0x3c06	                               cmp al, 6	      1047	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015b7	     0xf8551010000	                           jne 0x400170e	      1047	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015bd	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1048	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015c1	          0x4885d2	                           test rdx, rdx	      1048	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015c4	     0xf8fc0060000	                            jg 0x4001c8a	      1048	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015ca	      0x807c240f2d	              cmp byte [rsp + 0xf], 0x2d	      1049	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015cf	     0xf853d010000	                           jne 0x4001712	      1049	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015d5	     0xfb605000000	           movzx eax, byte [0x040015dc] 	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015dc	            0x3c2b	                            cmp al, 0x2b	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015de	            0x7408	                            je 0x40015e8	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015e0	            0x3c50	                            cmp al, 0x50	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015e2	     0xf852a010000	                           jne 0x4001712	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40015e8	            0x3c2b	                            cmp al, 0x2b	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x40015ea	      0xba2d000000	                           mov edx, 0x2d	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x40015ef	      0xb84e000000	                           mov eax, 0x4e	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x40015f4	           0xf44c2	                          cmove eax, edx	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x40015f7	    0x880500000000	               mov byte [0x040015fd], al	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x40015fd	      0xe9ab050000	                           jmp 0x4001bad	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x4001602	      0xb801000000	                              mov eax, 1	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x4001607	    0x66f794000000	                    not word [rax + rax]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x400160f	            0x89c2	                            mov edx, eax	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4001611	          0x4889c6	                            mov rsi, rax	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4001614	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4001618	        0x4883c001	                              add rax, 1	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x400161c	          0x4839ce	                            cmp rsi, rcx	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x400161f	            0x7ce6	                            jl 0x4001607	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4001621	        0x4883f913	                           cmp rcx, 0x13	      1070	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33
0x4001625	            0x7f2a	                            jg 0x4001651	      1070	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33
0x4001627	    0x48c743101400	           mov qword [rbx + 0x10], 0x14 	      1072	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33
0x400162f	          0x83fa13	                           cmp edx, 0x13	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4001632	     0xf8f32060000	                            jg 0x4001c6a	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4001638	          0x4863c2	                         movsxd rax, edx	      1074	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x400163b	    0x66c784000000	           mov word [rax + rax], 0xffff 	      1074	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4001645	          0x83c201	                              add edx, 1	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4001648	          0x4863c2	                         movsxd rax, edx	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x400164b	        0x483b4310	            cmp rax, qword [rbx + 0x10] 	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x400164f	            0x7ce7	                            jl 0x4001638	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4001651	        0x4080ff2d	                           cmp dil, 0x2d	      1077	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34
0x4001655	     0xf8552050000	                           jne 0x4001bad	      1077	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34
0x400165b	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4001660	     0xf8e47050000	                           jle 0x4001bad	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4001666	     0xfb705000000	           movzx eax, word [0x0400166d] 	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x400166d	          0x83c001	                              add eax, 1	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4001670	    0x668905000000	               mov word [0x04001677], ax	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4001677	          0x6685c0	                             test ax, ax	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x400167a	     0xf852d050000	                           jne 0x4001bad	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x4001680	      0xb801000000	                              mov eax, 1	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x4001685	            0xeb1d	                           jmp 0x40016a4	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x4001687	      0xb900000000	                              mov ecx, 0	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x400168c	         0xfb73441	           movzx esi, word [rcx + rax*2]	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4001690	          0x8d5601	                      lea edx, [rsi + 1]	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4001693	        0x66891441	              mov word [rcx + rax*2], dx	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4001697	        0x4883c001	                              add rax, 1	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x400169b	          0x6685d2	                             test dx, dx	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x400169e	     0xf8509050000	                           jne 0x4001bad	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x40016a4	        0x483b4310	            cmp rax, qword [rbx + 0x10] 	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x40016a8	            0x7cdd	                            jl 0x4001687	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x40016aa	      0xe9fe040000	                           jmp 0x4001bad	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x40016af	        0x4080ff21	                           cmp dil, 0x21	      1085	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40016b3	     0xf85f4040000	                           jne 0x4001bad	      1085	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40016b9	    0x66833d000000	                cmp word [0x040016c1], 0	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x40016c1	            0x7523	                           jne 0x40016e6	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x40016c3	          0x4889d6	                            mov rsi, rdx	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x40016c6	      0xb801000000	                              mov eax, 1	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x40016cb	            0xeb0f	                           jmp 0x40016dc	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x40016cd	        0x4883c001	                              add rax, 1	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x40016d1	    0x6683bc000000	                 cmp word [rax + rax], 0	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x40016da	            0x750f	                           jne 0x40016eb	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x40016dc	          0x4889c1	                            mov rcx, rax	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40016df	          0x4839c6	                            cmp rsi, rax	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40016e2	            0x75e9	                           jne 0x40016cd	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40016e4	            0xeb05	                           jmp 0x40016eb	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40016e6	      0xb900000000	                              mov ecx, 0	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40016eb	          0x4839ca	                            cmp rdx, rcx	      1090	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40016ee	           0xf9ec0	                                setle al	      1090	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40016f1	           0xfb6c0	                           movzx eax, al	      1090	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40016f4	        0x48894310	             mov qword [rbx + 0x10], rax	      1090	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40016f8	        0xc6431802	                mov byte [rbx + 0x18], 2	      1091	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40016fc	         0xfb64319	           movzx eax, byte [rbx + 0x19] 	      1092	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4001700	          0x83c801	                               or eax, 1	      1092	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4001703	          0x83e0fd	                     and eax, 0xfffffffd	      1093	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4001706	          0x884319	               mov byte [rbx + 0x19], al	      1093	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4001709	      0xe99f040000	                           jmp 0x4001bad	      1093	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x400170e	            0x3c01	                               cmp al, 1	      1096	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38
0x4001710	            0x7644	                           jbe 0x4001756	      1096	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38
0x4001712	      0x807c240f2b	              cmp byte [rsp + 0xf], 0x2b	      1099	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x4001717	     0xf8490040000	                            je 0x4001bad	      1099	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x400171d	          0x4889df	                            mov rdi, rbx	      1101	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	CALL_34
0x4001720	      0xe800000000	                          call 0x4001725	      1101	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	CALL_34
0x4001725	          0x488903	                    mov qword [rbx], rax	      1101	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	CALL_34
0x4001728	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1102	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x400172d	            0x3c2d	                            cmp al, 0x2d	      1102	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x400172f	            0x7506	                           jne 0x4001737	      1102	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x4001731	        0xc6431807	                mov byte [rbx + 0x18], 7	      1103	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x4001735	            0xeb12	                           jmp 0x4001749	      1103	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x4001737	            0x3c7e	                            cmp al, 0x7e	      1104	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x4001739	            0x7404	                            je 0x400173f	      1104	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x400173b	            0x3c22	                            cmp al, 0x22	      1104	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x400173d	            0x7506	                           jne 0x4001745	      1104	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x400173f	        0xc6431808	                mov byte [rbx + 0x18], 8	      1105	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x4001743	            0xeb04	                           jmp 0x4001749	      1105	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x4001745	        0xc6431809	                mov byte [rbx + 0x18], 9	      1107	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_13
0x4001749	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1108	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x4001751	      0xe957040000	                           jmp 0x4001bad	      1108	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x4001756	    0x440fbe64240f	           movsx r12d, byte [rsp + 0xf] 	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x400175c	      0xba05000000	                              mov edx, 5	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4001761	      0xbe00000000	                              mov esi, 0	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4001766	      0xbf00000000	                              mov edi, 0	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x400176b	      0xe800000000	                          call 0x4001770	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4001770	          0x4489e6	                           mov esi, r12d	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4001773	          0x4889c7	                            mov rdi, rax	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4001776	      0xb800000000	                              mov eax, 0	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x400177b	      0xe800000000	                          call 0x4001780	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4001780	      0xe928040000	                           jmp 0x4001bad	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4001785	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1141	expr.c	FUNCTION_11	SWITCH_1	IF_45	CALL_41
0x400178b	    0xf68000000000	                      test byte [rax], 1	      1141	expr.c	FUNCTION_11	SWITCH_1	IF_45	CALL_41
0x4001792	            0x750d	                           jne 0x40017a1	      1141	expr.c	FUNCTION_11	SWITCH_1	IF_45	CALL_41
0x4001794	          0x4889df	                            mov rdi, rbx	      1143	expr.c	FUNCTION_11	SWITCH_1	IF_45	CALL_42
0x4001797	      0xe800000000	                          call 0x400179c	      1143	expr.c	FUNCTION_11	SWITCH_1	IF_45	CALL_42
0x400179c	      0xe90c040000	                           jmp 0x4001bad	      1144	expr.c	FUNCTION_11	SWITCH_1	IF_45
0x40017a1	      0xba08000000	                              mov edx, 8	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40017a6	      0xbe00000000	                              mov esi, 0	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40017ab	          0x4c89ef	                            mov rdi, r13	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40017ae	      0xe800000000	                          call 0x40017b3	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40017b3	            0x85c0	                           test eax, eax	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40017b5	            0x750f	                           jne 0x40017c6	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40017b7	    0x410fb6442409	               movzx eax, byte [r12 + 9]	      1147	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_44
0x40017bd	    0xf68000000000	                      test byte [rax], 1	      1147	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_44
0x40017c4	            0x742d	                            je 0x40017f3	      1147	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_44
0x40017c6	      0xba07000000	                              mov edx, 7	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40017cb	      0xbe00000000	                              mov esi, 0	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40017d0	          0x4c89ef	                            mov rdi, r13	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40017d3	      0xe800000000	                          call 0x40017d8	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40017d8	            0x85c0	                           test eax, eax	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40017da	     0xf85e3010000	                           jne 0x40019c3	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40017e0	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      1149	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_46
0x40017e6	    0xf68000000000	                      test byte [rax], 1	      1149	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_46
0x40017ed	     0xf85d0010000	                           jne 0x40019c3	      1149	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_46
0x40017f3	    0x450fb6642402	              movzx r12d, byte [r12 + 2]	      1154	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40017f9	        0x4183e4df	                    and r12d, 0xffffffdf	      1154	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40017fd	        0x4180fc54	                          cmp r12b, 0x54	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x4001801	           0xf94c0	                                 sete al	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x4001804	           0xfb6c0	                           movzx eax, al	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x4001807	      0x498d440507	                lea rax, [r13 + rax + 7]	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x400180c	    0x488905000000	            mov qword [0x04001813], rax 	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x4001813	          0x803820	                    cmp byte [rax], 0x20	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x4001816	            0x750b	                           jne 0x4001823	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x4001818	        0x4883c001	                              add rax, 1	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x400181c	    0x488905000000	            mov qword [0x04001823], rax 	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x4001823	        0xc6431801	                mov byte [rbx + 0x18], 1	      1159	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x4001827	    0x488b05000000	            mov rax, qword [0x0400182e] 	      1161	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	IF_47
0x400182e	          0x803828	                    cmp byte [rax], 0x28	      1161	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	IF_47
0x4001831	            0x7426	                            je 0x4001859	      1161	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	IF_47
0x4001833	      0xba05000000	                              mov edx, 5	      1162	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_49
0x4001838	      0xbe00000000	                              mov esi, 0	      1162	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_49
0x400183d	      0xbf00000000	                              mov edi, 0	      1162	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_49
0x4001842	      0xe800000000	                          call 0x4001847	      1162	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_49
0x4001847	          0x4889c7	                            mov rdi, rax	      1162	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_49
0x400184a	      0xb800000000	                              mov eax, 0	      1162	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_49
0x400184f	      0xe800000000	                          call 0x4001854	      1162	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_49
0x4001854	      0xe954030000	                           jmp 0x4001bad	      1162	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_49
0x4001859	        0x488d5001	                      lea rdx, [rax + 1]	      1167	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x400185d	    0x488915000000	            mov qword [0x04001864], rdx 	      1167	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4001864	        0x80780120	                cmp byte [rax + 1], 0x20	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x4001868	            0x750b	                           jne 0x4001875	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x400186a	        0x4883c002	                              add rax, 2	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x400186e	    0x488905000000	            mov qword [0x04001875], rax 	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x4001875	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1169	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_51
0x400187a	      0xe800000000	                          call 0x400187f	      1169	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_51
0x400187f	        0x8844240f	                mov byte [rsp + 0xf], al	      1169	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_51
0x4001883	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1170	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48
0x4001888	          0x803e00	                       cmp byte [rsi], 0	      1170	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48
0x400188b	            0x7549	                           jne 0x40018d6	      1170	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48
0x400188d	      0xba05000000	                              mov edx, 5	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x4001892	      0xbe00000000	                              mov esi, 0	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x4001897	      0xbf00000000	                              mov edi, 0	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x400189c	      0xe800000000	                          call 0x40018a1	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x40018a1	          0x4889c7	                            mov rdi, rax	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x40018a4	      0xb800000000	                              mov eax, 0	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x40018a9	      0xe800000000	                          call 0x40018ae	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x40018ae	       0xfbe7c240f	            movsx edi, byte [rsp + 0xf] 	      1173	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_54
0x40018b3	      0xe800000000	                          call 0x40018b8	      1173	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_54
0x40018b8	      0x807c240f29	              cmp byte [rsp + 0xf], 0x29	      1174	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	IF_49
0x40018bd	            0x740a	                            je 0x40018c9	      1174	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	IF_49
0x40018bf	      0xe800000000	                          call 0x40018c4	      1175	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_55
0x40018c4	      0xe9e4020000	                           jmp 0x4001bad	      1175	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_55
0x40018c9	    0x488305000000	               add qword [0x040018d1], 1	      1177	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	ELSE_17
0x40018d1	      0xe9d7020000	                           jmp 0x4001bad	      1177	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	ELSE_17
0x40018d6	        0x4180fc54	                          cmp r12b, 0x54	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x40018da	      0xbf00000000	                              mov edi, 0	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x40018df	      0xb800000000	                              mov eax, 0	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x40018e4	        0x480f44f8	                          cmove rdi, rax	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x40018e8	      0xba00000000	                              mov edx, 0	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x40018ed	      0xb800000000	                              mov eax, 0	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x40018f2	      0xe800000000	                          call 0x40018f7	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x40018f7	          0x4989c4	                            mov r12, rax	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x40018fa	          0x4889c7	                            mov rdi, rax	      1183	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_57
0x40018fd	      0xe800000000	                          call 0x4001902	      1183	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_57
0x4001902	          0x4989c5	                            mov r13, rax	      1183	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_57
0x4001905	          0x4c89e7	                            mov rdi, r12	      1184	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_58
0x4001908	      0xe800000000	                          call 0x400190d	      1184	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_58
0x400190d	        0xc6431803	                mov byte [rbx + 0x18], 3	      1186	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4001911	          0x4c892b	                    mov qword [rbx], r13	      1187	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4001914	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1188	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x400191c	       0xfb654240f	            movzx edx, byte [rsp + 0xf] 	      1190	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4001921	    0x488b05000000	            mov rax, qword [0x04001928] 	      1190	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4001928	            0x8810	                      mov byte [rax], dl	      1190	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x400192a	    0x488b05000000	            mov rax, qword [0x04001931] 	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4001931	          0x803822	                    cmp byte [rax], 0x22	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4001934	            0x750b	                           jne 0x4001941	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4001936	        0x4883c001	                              add rax, 1	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400193a	    0x488905000000	            mov qword [0x04001941], rax 	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4001941	    0x488b05000000	            mov rax, qword [0x04001948] 	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4001948	          0x803820	                    cmp byte [rax], 0x20	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400194b	            0x750b	                           jne 0x4001958	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400194d	        0x4883c001	                              add rax, 1	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4001951	    0x488905000000	            mov qword [0x04001958], rax 	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4001958	    0x488b05000000	            mov rax, qword [0x0400195f] 	      1192	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_50
0x400195f	          0x803829	                    cmp byte [rax], 0x29	      1192	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_50
0x4001962	            0x7426	                            je 0x400198a	      1192	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_50
0x4001964	      0xba05000000	                              mov edx, 5	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x4001969	      0xbe00000000	                              mov esi, 0	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x400196e	      0xbf00000000	                              mov edi, 0	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x4001973	      0xe800000000	                          call 0x4001978	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x4001978	          0x4889c7	                            mov rdi, rax	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x400197b	      0xb800000000	                              mov eax, 0	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x4001980	      0xe800000000	                          call 0x4001985	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x4001985	      0xe923020000	                           jmp 0x4001bad	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x400198a	        0x4883c001	                              add rax, 1	      1195	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	ELSE_18
0x400198e	    0x488905000000	            mov qword [0x04001995], rax 	      1195	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	ELSE_18
0x4001995	      0xe913020000	                           jmp 0x4001bad	      1195	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	ELSE_18
0x400199a	        0xc6431801	                mov byte [rbx + 0x18], 1	      1207	expr.c	FUNCTION_11	SWITCH_1
0x400199e	    0x4c8925000000	            mov qword [0x040019a5], r12 	      1208	expr.c	FUNCTION_11	SWITCH_1
0x40019a5	      0xe903020000	                           jmp 0x4001bad	      1209	expr.c	FUNCTION_11	SWITCH_1
0x40019aa	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x40019af	           0xfb6d0	                           movzx edx, al	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x40019b2	    0xf68200000000	                      test byte [rdx], 2	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x40019b9	            0x7508	                           jne 0x40019c3	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x40019bb	            0x3c22	                            cmp al, 0x22	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x40019bd	     0xf859b010000	                           jne 0x4001b5e	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x40019c3	    0x48832d000000	               sub qword [0x040019cb], 1	      1252	expr.c	FUNCTION_11	SWITCH_1	IF_55
0x40019cb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1253	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_68
0x40019d0	      0xe800000000	                          call 0x40019d5	      1253	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_68
0x40019d5	        0x8844240f	                mov byte [rsp + 0xf], al	      1253	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_68
0x40019d9	      0x488d54240f	                    lea rdx, [rsp + 0xf]	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x40019de	      0xbe01000000	                              mov esi, 1	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x40019e3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x40019e8	      0xe800000000	                          call 0x40019ed	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x40019ed	          0x4189c4	                           mov r12d, eax	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x40019f0	          0x83f807	                              cmp eax, 7	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x40019f3	            0x7417	                            je 0x4001a0c	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x40019f5	          0x83f807	                              cmp eax, 7	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x40019f8	            0x7706	                            ja 0x4001a00	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x40019fa	            0x85c0	                           test eax, eax	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x40019fc	            0x744a	                            je 0x4001a48	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x40019fe	            0xeb73	                           jmp 0x4001a73	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a00	          0x83f808	                              cmp eax, 8	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a03	            0x741b	                            je 0x4001a20	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a05	          0x83f809	                              cmp eax, 9	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a08	            0x742a	                            je 0x4001a34	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a0a	            0xeb67	                           jmp 0x4001a73	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a0c	       0xfbe7c240f	            movsx edi, byte [rsp + 0xf] 	      1262	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_70
0x4001a11	      0xe800000000	                          call 0x4001a16	      1262	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_70
0x4001a16	      0xc644240f2d	              mov byte [rsp + 0xf], 0x2d	      1263	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a1b	      0xe918fbffff	                           jmp 0x4001538	      1264	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a20	       0xfbe7c240f	            movsx edi, byte [rsp + 0xf] 	      1266	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_71
0x4001a25	      0xe800000000	                          call 0x4001a2a	      1266	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_71
0x4001a2a	      0xc644240f7e	              mov byte [rsp + 0xf], 0x7e	      1267	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a2f	      0xe904fbffff	                           jmp 0x4001538	      1268	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a34	       0xfbe7c240f	            movsx edi, byte [rsp + 0xf] 	      1270	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_72
0x4001a39	      0xe800000000	                          call 0x4001a3e	      1270	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_72
0x4001a3e	      0xc644240f21	              mov byte [rsp + 0xf], 0x21	      1271	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a43	      0xe9f0faffff	                           jmp 0x4001538	      1272	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4001a48	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a4d	      0xba05000000	                              mov edx, 5	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a52	      0xbe00000000	                              mov esi, 0	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a57	      0xbf00000000	                              mov edi, 0	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a5c	      0xe800000000	                          call 0x4001a61	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a61	          0x4c89e6	                            mov rsi, r12	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a64	          0x4889c7	                            mov rdi, rax	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a67	      0xb800000000	                              mov eax, 0	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a6c	      0xe800000000	                          call 0x4001a71	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a71	            0xeb43	                           jmp 0x4001ab6	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4001a73	        0x4183fc01	                             cmp r12d, 1	      1280	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4001a77	            0x763d	                           jbe 0x4001ab6	      1280	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4001a79	       0xfbe7c240f	            movsx edi, byte [rsp + 0xf] 	      1282	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_75
0x4001a7e	      0xe800000000	                          call 0x4001a83	      1282	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_75
0x4001a83	            0x89ea	                            mov edx, ebp	      1283	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_76
0x4001a85	          0x4889de	                            mov rsi, rbx	      1283	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_76
0x4001a88	      0xbf09000000	                              mov edi, 9	      1283	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_76
0x4001a8d	      0xe800000000	                          call 0x4001a92	      1283	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_76
0x4001a92	          0x4889df	                            mov rdi, rbx	      1284	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_77
0x4001a95	      0xe800000000	                          call 0x4001a9a	      1284	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_77
0x4001a9a	          0x488903	                    mov qword [rbx], rax	      1284	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_77
0x4001a9d	    0x48c743080000	                  mov qword [rbx + 8], 0	      1285	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4001aa5	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1286	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4001aad	        0x44886318	             mov byte [rbx + 0x18], r12b	      1287	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4001ab1	      0xe9f7000000	                           jmp 0x4001bad	      1288	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4001ab6	      0x488d54240f	                    lea rdx, [rsp + 0xf]	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4001abb	          0x4889de	                            mov rsi, rbx	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4001abe	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4001ac3	      0xe800000000	                          call 0x4001ac8	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4001ac8	            0x85c0	                           test eax, eax	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4001aca	            0x740f	                            je 0x4001adb	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4001acc	       0xfbe7c240f	            movsx edi, byte [rsp + 0xf] 	      1300	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_79
0x4001ad1	      0xe800000000	                          call 0x4001ad6	      1300	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_79
0x4001ad6	      0xe9d2000000	                           jmp 0x4001bad	      1301	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57
0x4001adb	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1305	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_80
0x4001ae0	      0xe800000000	                          call 0x4001ae5	      1305	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_80
0x4001ae5	          0x4989c4	                            mov r12, rax	      1305	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_80
0x4001ae8	          0x4889c7	                            mov rdi, rax	      1309	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_81
0x4001aeb	      0xe800000000	                          call 0x4001af0	      1309	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_81
0x4001af0	          0x4989c5	                            mov r13, rax	      1309	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_81
0x4001af3	    0x483d00000000	                              cmp rax, 0	      1311	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x4001af9	            0x7528	                           jne 0x4001b23	      1311	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x4001afb	          0x83fd02	                              cmp ebp, 2	      1311	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x4001afe	            0x7423	                            je 0x4001b23	      1311	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x4001b00	      0xbe00000000	                              mov esi, 0	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4001b05	          0x4c89e7	                            mov rdi, r12	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4001b08	      0xe800000000	                          call 0x4001b0d	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4001b0d	            0x85c0	                           test eax, eax	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4001b0f	            0x7512	                           jne 0x4001b23	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4001b11	        0xc6431802	                mov byte [rbx + 0x18], 2	      1314	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x4001b15	          0x4c89e7	                            mov rdi, r12	      1315	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_83
0x4001b18	      0xe800000000	                          call 0x4001b1d	      1315	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_83
0x4001b1d	        0x48894310	             mov qword [rbx + 0x10], rax	      1315	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_83
0x4001b21	            0xeb2f	                           jmp 0x4001b52	      1315	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_83
0x4001b23	          0x83fd02	                              cmp ebp, 2	      1317	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59
0x4001b26	            0x741b	                            je 0x4001b43	      1317	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59
0x4001b28	    0x4c3b2d000000	            cmp r13, qword [0x04001b2f] 	      1317	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59
0x4001b2f	            0x7512	                           jne 0x4001b43	      1317	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59
0x4001b31	        0xc6431805	                mov byte [rbx + 0x18], 5	      1319	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59
0x4001b35	          0x4c89e7	                            mov rdi, r12	      1320	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59	CALL_84
0x4001b38	      0xe800000000	                          call 0x4001b3d	      1320	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59	CALL_84
0x4001b3d	        0x48894310	             mov qword [rbx + 0x10], rax	      1320	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59	CALL_84
0x4001b41	            0xeb0f	                           jmp 0x4001b52	      1320	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59	CALL_84
0x4001b43	        0xc6431803	                mov byte [rbx + 0x18], 3	      1324	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_21
0x4001b47	          0x4c8923	                    mov qword [rbx], r12	      1325	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_21
0x4001b4a	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1326	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_21
0x4001b52	       0xfbe7c240f	            movsx edi, byte [rsp + 0xf] 	      1329	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_85
0x4001b57	      0xe800000000	                          call 0x4001b5c	      1329	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_85
0x4001b5c	            0xeb4f	                           jmp 0x4001bad	      1329	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_85
0x4001b5e	        0xc6431801	                mov byte [rbx + 0x18], 1	      1337	expr.c	FUNCTION_11	SWITCH_1	ELSE_22
0x4001b62	    0x48832d000000	               sub qword [0x04001b6a], 1	      1338	expr.c	FUNCTION_11	SWITCH_1	ELSE_22
0x4001b6a	          0x4889df	                            mov rdi, rbx	      1339	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	CALL_86
0x4001b6d	      0xe800000000	                          call 0x4001b72	      1339	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	CALL_86
0x4001b72	        0x807b1801	                cmp byte [rbx + 0x18], 1	      1340	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4001b76	            0x7535	                           jne 0x4001bad	      1340	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4001b78	    0x488305000000	               add qword [0x04001b80], 1	      1342	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4001b80	      0xba05000000	                              mov edx, 5	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4001b85	      0xbe00000000	                              mov esi, 0	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4001b8a	      0xbf00000000	                              mov edi, 0	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4001b8f	      0xe800000000	                          call 0x4001b94	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4001b94	          0x4889c7	                            mov rdi, rax	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4001b97	      0xb800000000	                              mov eax, 0	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4001b9c	      0xe800000000	                          call 0x4001ba1	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4001ba1	        0xc6431802	                mov byte [rbx + 0x18], 2	      1344	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4001ba5	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1345	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4001bad	          0x4889df	                            mov rdi, rbx	      1353	expr.c	FUNCTION_11	CALL_89
0x4001bb0	      0xe8bde4ffff	            call sym.clean_up_expression	      1353	expr.c	FUNCTION_11	CALL_89
0x4001bb5	    0x488b05000000	            mov rax, qword [0x04001bbc] 	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bbc	          0x803820	                    cmp byte [rax], 0x20	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bbf	     0xf85b4000000	                           jne 0x4001c79	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bc5	        0x4883c001	                              add rax, 1	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bc9	    0x488905000000	            mov qword [0x04001bd0], rax 	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bd0	        0x4883c001	                              add rax, 1	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bd4	        0x8078ff20	                cmp byte [rax - 1], 0x20	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bd8	            0x74ef	                            je 0x4001bc9	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bda	      0xe99a000000	                           jmp 0x4001c79	      1354	expr.c	FUNCTION_11	CALL_90
0x4001bdf	      0xe800000000	                          call 0x4001be4	      1359	expr.c	FUNCTION_11	CALL_92
0x4001be4	          0x83fd02	                              cmp ebp, 2	      1361	expr.c	FUNCTION_11	IF_62
0x4001be7	            0x7422	                            je 0x4001c0b	      1361	expr.c	FUNCTION_11	IF_62
0x4001be9	      0xbe00000000	                              mov esi, 0	      1364	expr.c	FUNCTION_11	IF_62	CALL_93
0x4001bee	          0x488b3b	                    mov rdi, qword [rbx]	      1364	expr.c	FUNCTION_11	IF_62	CALL_93
0x4001bf1	      0xe800000000	                          call 0x4001bf6	      1364	expr.c	FUNCTION_11	IF_62	CALL_93
0x4001bf6	          0x488903	                    mov qword [rbx], rax	      1364	expr.c	FUNCTION_11	IF_62	CALL_93
0x4001bf9	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1366	expr.c	FUNCTION_11	IF_62	CALL_94
0x4001bfd	      0xbe00000000	                              mov esi, 0	      1366	expr.c	FUNCTION_11	IF_62	CALL_94
0x4001c02	      0xe800000000	                          call 0x4001c07	      1366	expr.c	FUNCTION_11	IF_62	CALL_94
0x4001c07	        0x48894308	                mov qword [rbx + 8], rax	      1366	expr.c	FUNCTION_11	IF_62	CALL_94
0x4001c0b	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	      1369	expr.c	FUNCTION_11	SWITCH_4
0x4001c0f	            0x3c03	                               cmp al, 3	      1369	expr.c	FUNCTION_11	SWITCH_4
0x4001c11	            0x7411	                            je 0x4001c24	      1369	expr.c	FUNCTION_11	SWITCH_4
0x4001c13	            0x3c05	                               cmp al, 5	      1372	expr.c	FUNCTION_11	SWITCH_4
0x4001c15	      0xb800000000	                              mov eax, 0	      1372	expr.c	FUNCTION_11	SWITCH_4
0x4001c1a	    0x480f44050000	           cmove rax, qword [0x04001c22]	      1372	expr.c	FUNCTION_11	SWITCH_4
0x4001c22	            0xeb08	                           jmp 0x4001c2c	      1372	expr.c	FUNCTION_11	SWITCH_4
0x4001c24	          0x488b3b	                    mov rdi, qword [rbx]	      1374	expr.c	FUNCTION_11	SWITCH_4	CALL_95
0x4001c27	      0xe800000000	                          call 0x4001c2c	      1374	expr.c	FUNCTION_11	SWITCH_4	CALL_95
0x4001c2c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1378	expr.c	FUNCTION_11
0x4001c31	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1378	expr.c	FUNCTION_11
0x4001c3a	            0x7471	                            je 0x4001cad	      1378	expr.c	FUNCTION_11
0x4001c3c	            0xeb6a	                           jmp 0x4001ca8	      1378	expr.c	FUNCTION_11
0x4001c3e	    0x41bc5d000000	                          mov r12d, 0x5d	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4001c44	          0x4084ed	                           test bpl, bpl	       969	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18
0x4001c47	     0xf8542f8ffff	                           jne 0x400148f	       969	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18
0x4001c4d	      0xbd5d000000	                           mov ebp, 0x5d	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4001c52	      0xe962f8ffff	                           jmp 0x40014b9	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4001c57	          0x4084ed	                           test bpl, bpl	       969	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18
0x4001c5a	     0xf8529f8ffff	                           jne 0x4001489	       969	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18
0x4001c60	      0xbd29000000	                           mov ebp, 0x29	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4001c65	      0xe94ff8ffff	                           jmp 0x40014b9	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4001c6a	        0x4080ff2d	                           cmp dil, 0x2d	      1077	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34
0x4001c6e	     0xf8539ffffff	                           jne 0x4001bad	      1077	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34
0x4001c74	      0xe9edf9ffff	                           jmp 0x4001666	      1077	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34
0x4001c79	          0x488b3b	                    mov rdi, qword [rbx]	      1358	expr.c	FUNCTION_11	IF_61
0x4001c7c	          0x4885ff	                           test rdi, rdi	      1358	expr.c	FUNCTION_11	IF_61
0x4001c7f	     0xf855affffff	                           jne 0x4001bdf	      1358	expr.c	FUNCTION_11	IF_61
0x4001c85	      0xe95affffff	                           jmp 0x4001be4	      1358	expr.c	FUNCTION_11	IF_61
0x4001c8a	       0xfb67c240f	            movzx edi, byte [rsp + 0xf] 	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4001c8f	        0x4080ff7e	                           cmp dil, 0x7e	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4001c93	     0xf8469f9ffff	                            je 0x4001602	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4001c99	        0x4080ff2d	                           cmp dil, 0x2d	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4001c9d	     0xf850cfaffff	                           jne 0x40016af	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4001ca3	      0xe95af9ffff	                           jmp 0x4001602	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4001ca8	      0xe800000000	                          call 0x4001cad	      1378	expr.c	FUNCTION_11
0x4001cad	        0x4883c428	                           add rsp, 0x28	      1378	expr.c	FUNCTION_11
0x4001cb1	              0x5b	                                 pop rbx	      1378	expr.c	FUNCTION_11
0x4001cb2	              0x5d	                                 pop rbp	      1378	expr.c	FUNCTION_11
0x4001cb3	            0x415c	                                 pop r12	      1378	expr.c	FUNCTION_11
0x4001cb5	            0x415d	                                 pop r13	      1378	expr.c	FUNCTION_11
0x4001cb7	              0xc3	                                     ret	      1378	expr.c	FUNCTION_11
