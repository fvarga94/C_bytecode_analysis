inflate	FOR,6:CALL,34:IF,103:DO,4:functions,0:ELSE,8:WHILE,4:SWITCH,2	1874
0x40004d9	            0x4157	                                push r15	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004db	            0x4156	                                push r14	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004dd	            0x4155	                                push r13	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004df	            0x4154	                                push r12	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004e1	              0x55	                                push rbp	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004e2	              0x53	                                push rbx	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004e3	        0x4883ec68	                           sub rsp, 0x68	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004e7	          0x4989ff	                            mov r15, rdi	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004ea	        0x89742410	             mov dword [rsp + 0x10], esi	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004ee	    0x64488b042528	                mov rax, qword fs:[0x28]	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004f7	      0x4889442458	             mov qword [rsp + 0x58], rax	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004fc	            0x31c0	                            xor eax, eax	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40004fe	      0xe83dfbffff	              call sym.inflateStateCheck	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000503	        0x8944242c	             mov dword [rsp + 0x2c], eax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000507	            0x85c0	                           test eax, eax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000509	     0xf85f81b0000	                           jne 0x4002107	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400050f	      0x49837f1800	               cmp qword [r15 + 0x18], 0	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000514	     0xf84f41b0000	                            je 0x400210e	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400051a	        0x49833f00	                      cmp qword [r15], 0	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400051e	            0x750b	                           jne 0x400052b	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000520	      0x41837f0800	                  cmp dword [r15 + 8], 0	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x4000525	     0xf85ea1b0000	                           jne 0x4002115	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x400052b	        0x4d8b6f38	            mov r13, qword [r15 + 0x38] 	       649	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400052f	    0x41817d083f3f	            cmp dword [r13 + 8], 0x3f3f 	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000537	            0x7508	                           jne 0x4000541	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000539	    0x41c74508403f	            mov dword [r13 + 8], 0x3f40 	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000541	        0x498b4718	            mov rax, qword [r15 + 0x18] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000545	      0x4889442420	             mov qword [rsp + 0x20], rax	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400054a	        0x418b4720	            mov eax, dword [r15 + 0x20] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400054e	        0x89442414	             mov dword [rsp + 0x14], eax	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000552	          0x4d8b27	                    mov r12, qword [r15]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000555	        0x418b7f08	                mov edi, dword [r15 + 8]	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000559	        0x897c2430	             mov dword [rsp + 0x30], edi	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400055d	        0x4d8b7550	            mov r14, qword [r13 + 0x50] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000561	        0x418b5d58	            mov ebx, dword [r13 + 0x58] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000565	        0x8944240c	              mov dword [rsp + 0xc], eax	       653	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000569	            0x89fd	                            mov ebp, edi	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400056b	    0xc74424280000	               mov dword [rsp + 0x28], 0	       654	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000573	    0x498d85580500	                  lea rax, [r13 + 0x558]	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x400057a	      0x4889442440	             mov qword [rsp + 0x40], rax	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x400057f	    0x498d85180300	                  lea rax, [r13 + 0x318]	      1024	inflate.c	FUNCTION_7	SWITCH_1
0x4000586	      0x4889442438	             mov qword [rsp + 0x38], rax	      1024	inflate.c	FUNCTION_7	SWITCH_1
0x400058b	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x400058f	          0x83e805	                              sub eax, 5	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x4000592	        0x89442434	             mov dword [rsp + 0x34], eax	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x4000596	      0x4c897c2418	             mov qword [rsp + 0x18], r15	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x400059b	          0x4d89ef	                            mov r15, r13	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x400059e	        0x418b4708	                mov eax, dword [r15 + 8]	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005a2	      0x2d343f0000	                         sub eax, 0x3f34	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005a7	          0x83f81e	                           cmp eax, 0x1e	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005aa	            0x771e	                            ja 0x40005ca	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005ac	            0x89c0	                            mov eax, eax	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005ae	    0xff24c5000000	                       jmp qword [rax*8]	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005b5	          0x4d89fd	                            mov r13, r15	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005b8	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005bd	    0xc74424280100	               mov dword [rsp + 0x28], 1	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x40005c5	      0xe90c1a0000	                           jmp 0x4001fd6	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x40005ca	      0xb8feffffff	                     mov eax, 0xfffffffe	      1244	inflate.c	FUNCTION_7	SWITCH_1
0x40005cf	      0xe94d1b0000	                           jmp 0x4002121	      1244	inflate.c	FUNCTION_7	SWITCH_1
0x40005d4	          0x83fb0d	                            cmp ebx, 0xd	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40005d7	     0xf875d0b0000	                            ja 0x400113a	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40005dd	            0x85ed	                           test ebp, ebp	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40005df	     0xf85360b0000	                           jne 0x400111b	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40005e5	          0x4d89fd	                            mov r13, r15	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40005e8	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40005ed	      0xe9e4190000	                           jmp 0x4001fd6	       921	inflate.c	FUNCTION_7	SWITCH_1
0x40005f2	          0x83fb1f	                           cmp ebx, 0x1f	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005f5	     0xf8740080000	                            ja 0x4000e3b	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005fb	            0x85ed	                           test ebp, ebp	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005fd	     0xf851b080000	                           jne 0x4000e1e	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000603	          0x4d89fd	                            mov r13, r15	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000606	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400060b	      0xe9c6190000	                           jmp 0x4001fd6	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000610	          0x83fb0f	                            cmp ebx, 0xf	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000613	     0xf8742020000	                            ja 0x400085b	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000619	            0x85ed	                           test ebp, ebp	       707	inflate.c	FUNCTION_7	SWITCH_1
0x400061b	     0xf851b020000	                           jne 0x400083c	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000621	          0x4d89fd	                            mov r13, r15	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000624	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000629	      0xe9a8190000	                           jmp 0x4001fd6	       707	inflate.c	FUNCTION_7	SWITCH_1
0x400062e	        0x418b5710	            mov edx, dword [r15 + 0x10] 	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4000632	            0x85d2	                           test edx, edx	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4000634	            0x7416	                            je 0x400064c	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4000636	          0x83fb0f	                            cmp ebx, 0xf	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000639	            0x7747	                            ja 0x4000682	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400063b	            0x85ed	                           test ebp, ebp	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400063d	            0x7524	                           jne 0x4000663	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400063f	          0x4d89fd	                            mov r13, r15	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000642	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000647	      0xe98a190000	                           jmp 0x4001fd6	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400064c	    0x41c74708403f	            mov dword [r15 + 8], 0x3f40 	       659	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4000654	      0xe945ffffff	                           jmp 0x400059e	       660	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4000659	            0x85ed	                           test ebp, ebp	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400065b	     0xf84de170000	                            je 0x4001e3f	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000661	            0xeb02	                           jmp 0x4000665	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000663	            0x89d9	                            mov ecx, ebx	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000665	          0x83ed01	                              sub ebp, 1	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000668	        0x4983c401	                              add r12, 1	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400066c	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000672	          0x48d3e0	                             shl rax, cl	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000675	          0x4901c6	                            add r14, rax	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000678	          0x83c108	                              add ecx, 8	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400067b	          0x83f90f	                            cmp ecx, 0xf	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400067e	            0x76d9	                           jbe 0x4000659	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000680	            0x89cb	                            mov ebx, ecx	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000682	          0xf6c202	                              test dl, 2	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000685	            0x746c	                            je 0x40006f3	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000687	    0x4981fe1f8b00	                         cmp r14, 0x8b1f	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x400068e	            0x7563	                           jne 0x40006f3	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4000690	      0x41837f3800	               cmp dword [r15 + 0x38], 0	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4000695	            0x7508	                           jne 0x400069f	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4000697	    0x41c747380f00	            mov dword [r15 + 0x38], 0xf 	       666	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x400069f	      0xba00000000	                              mov edx, 0	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x40006a4	      0xbe00000000	                              mov esi, 0	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x40006a9	      0xbf00000000	                              mov edi, 0	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x40006ae	      0xe800000000	                          call 0x40006b3	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x40006b3	        0x49894720	             mov qword [r15 + 0x20], rax	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x40006b7	      0x4488742450	             mov byte [rsp + 0x50], r14b	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006bc	        0x49c1ee08	                              shr r14, 8	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006c0	      0x4488742451	             mov byte [rsp + 0x51], r14b	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006c5	      0xba02000000	                              mov edx, 2	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006ca	      0x488d742450	                   lea rsi, [rsp + 0x50]	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006cf	          0x4889c7	                            mov rdi, rax	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006d2	      0xe800000000	                          call 0x40006d7	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006d7	        0x49894720	             mov qword [r15 + 0x20], rax	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006db	    0x41c74708353f	            mov dword [r15 + 8], 0x3f35 	       670	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006e3	      0xbb00000000	                              mov ebx, 0	       669	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006e8	    0x41be00000000	                             mov r14d, 0	       669	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006ee	      0xe9abfeffff	                           jmp 0x400059e	       671	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40006f3	    0x41c747180000	               mov dword [r15 + 0x18], 0	       673	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40006fb	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40006ff	          0x4885c0	                           test rax, rax	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x4000702	            0x7407	                            je 0x400070b	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x4000704	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	       675	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x400070b	      0x41f6471001	               test byte [r15 + 0x10], 1	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000710	            0x7446	                            je 0x4000758	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000712	          0x4489f1	                           mov ecx, r14d	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000715	          0xc1e108	                              shl ecx, 8	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000718	            0x89c8	                            mov eax, ecx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400071a	      0x2500ff0000	                         and eax, 0xff00	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400071f	          0x4c89f1	                            mov rcx, r14	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000722	        0x48c1e908	                              shr rcx, 8	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000726	          0x4801c1	                            add rcx, rax	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000729	    0x48ba11420821	           movabs rdx, 0x842108421084211	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000733	          0x4889c8	                            mov rax, rcx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000736	          0x48f7e2	                                 mul rdx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000739	          0x4889c8	                            mov rax, rcx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400073c	          0x4829d0	                            sub rax, rdx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400073f	          0x48d1e8	                              shr rax, 1	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000742	          0x4801d0	                            add rax, rdx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000745	        0x48c1e804	                              shr rax, 4	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000749	          0x4889c2	                            mov rdx, rax	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400074c	        0x48c1e205	                              shl rdx, 5	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000750	          0x4829c2	                            sub rdx, rax	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000753	          0x4839d1	                            cmp rcx, rdx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000756	            0x741a	                            je 0x4000772	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4000758	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       681	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x400075d	    0x48c740300000	               mov qword [rax + 0x30], 0	       681	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000765	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       682	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x400076d	      0xe92cfeffff	                           jmp 0x400059e	       683	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4000772	          0x4489f0	                           mov eax, r14d	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000775	          0x83e00f	                            and eax, 0xf	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000778	          0x83f808	                              cmp eax, 8	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x400077b	            0x741a	                            je 0x4000797	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x400077d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       686	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000782	    0x48c740300000	               mov qword [rax + 0x30], 0	       686	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x400078a	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       687	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000792	      0xe907feffff	                           jmp 0x400059e	       688	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4000797	        0x49c1ee04	                              shr r14, 4	       690	inflate.c	FUNCTION_7	SWITCH_1
0x400079b	          0x83eb04	                              sub ebx, 4	       690	inflate.c	FUNCTION_7	SWITCH_1
0x400079e	          0x4489f1	                           mov ecx, r14d	       691	inflate.c	FUNCTION_7	SWITCH_1
0x40007a1	          0x83e10f	                            and ecx, 0xf	       691	inflate.c	FUNCTION_7	SWITCH_1
0x40007a4	          0x83c108	                              add ecx, 8	       691	inflate.c	FUNCTION_7	SWITCH_1
0x40007a7	        0x418b4738	            mov eax, dword [r15 + 0x38] 	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x40007ab	            0x85c0	                           test eax, eax	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x40007ad	            0x750b	                           jne 0x40007ba	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x40007af	        0x41894f38	             mov dword [r15 + 0x38], ecx	       693	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x40007b3	          0x83f90f	                            cmp ecx, 0xf	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007b6	            0x770b	                            ja 0x40007c3	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007b8	            0xeb23	                           jmp 0x40007dd	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007ba	          0x83f90f	                            cmp ecx, 0xf	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007bd	            0x7704	                            ja 0x40007c3	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007bf	            0x39c1	                            cmp ecx, eax	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007c1	            0x761a	                           jbe 0x40007dd	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007c3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       695	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007c8	    0x48c740300000	               mov qword [rax + 0x30], 0	       695	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007d0	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       696	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007d8	      0xe9c1fdffff	                           jmp 0x400059e	       697	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40007dd	      0xb801000000	                              mov eax, 1	       699	inflate.c	FUNCTION_7	SWITCH_1
0x40007e2	            0xd3e0	                             shl eax, cl	       699	inflate.c	FUNCTION_7	SWITCH_1
0x40007e4	        0x4189471c	             mov dword [r15 + 0x1c], eax	       699	inflate.c	FUNCTION_7	SWITCH_1
0x40007e8	      0xba00000000	                              mov edx, 0	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40007ed	      0xbe00000000	                              mov esi, 0	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40007f2	      0xbf00000000	                              mov edi, 0	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40007f7	      0xe800000000	                          call 0x40007fc	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40007fc	        0x49894720	             mov qword [r15 + 0x20], rax	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000800	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000805	        0x48894360	             mov qword [rbx + 0x60], rax	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000809	    0x4181e6000200	                         and r14d, 0x200	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000810	        0x4983fe01	                              cmp r14, 1	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000814	            0x19c0	                            sbb eax, eax	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000816	          0x83e002	                              and eax, 2	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000819	       0x53d3f0000	                         add eax, 0x3f3d	       702	inflate.c	FUNCTION_7	SWITCH_1
0x400081e	        0x41894708	                mov dword [r15 + 8], eax	       702	inflate.c	FUNCTION_7	SWITCH_1
0x4000822	      0xbb00000000	                              mov ebx, 0	       703	inflate.c	FUNCTION_7	SWITCH_1
0x4000827	    0x41be00000000	                             mov r14d, 0	       703	inflate.c	FUNCTION_7	SWITCH_1
0x400082d	      0xe96cfdffff	                           jmp 0x400059e	       704	inflate.c	FUNCTION_7	SWITCH_1
0x4000832	            0x85ed	                           test ebp, ebp	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000834	     0xf8414160000	                            je 0x4001e4e	       707	inflate.c	FUNCTION_7	SWITCH_1
0x400083a	            0xeb02	                           jmp 0x400083e	       707	inflate.c	FUNCTION_7	SWITCH_1
0x400083c	            0x89d9	                            mov ecx, ebx	       707	inflate.c	FUNCTION_7	SWITCH_1
0x400083e	          0x83ed01	                              sub ebp, 1	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000841	        0x4983c401	                              add r12, 1	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000845	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       707	inflate.c	FUNCTION_7	SWITCH_1
0x400084b	          0x48d3e0	                             shl rax, cl	       707	inflate.c	FUNCTION_7	SWITCH_1
0x400084e	          0x4901c6	                            add r14, rax	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000851	          0x83c108	                              add ecx, 8	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000854	          0x83f90f	                            cmp ecx, 0xf	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000857	            0x76d9	                           jbe 0x4000832	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000859	            0x89cb	                            mov ebx, ecx	       707	inflate.c	FUNCTION_7	SWITCH_1
0x400085b	        0x45897718	            mov dword [r15 + 0x18], r14d	       708	inflate.c	FUNCTION_7	SWITCH_1
0x400085f	        0x4180fe08	                             cmp r14b, 8	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000863	            0x741a	                            je 0x400087f	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000865	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       710	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x400086a	    0x48c740300000	               mov qword [rax + 0x30], 0	       710	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000872	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       711	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x400087a	      0xe91ffdffff	                           jmp 0x400059e	       712	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x400087f	    0x41f7c600e000	                       test r14d, 0xe000	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000886	            0x741a	                            je 0x40008a2	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000888	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       715	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x400088d	    0x48c740300000	               mov qword [rax + 0x30], 0	       715	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4000895	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       716	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x400089d	      0xe9fcfcffff	                           jmp 0x400059e	       717	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x40008a2	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x40008a6	          0x4885c0	                           test rax, rax	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x40008a9	            0x740c	                            je 0x40008b7	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x40008ab	          0x4c89f2	                            mov rdx, r14	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x40008ae	        0x48c1ea08	                              shr rdx, 8	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x40008b2	          0x83e201	                              and edx, 1	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x40008b5	            0x8910	                    mov dword [rax], edx	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x40008b7	      0x41f6471902	               test byte [r15 + 0x19], 2	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008bc	            0x742c	                            je 0x40008ea	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008be	      0x41f6471004	               test byte [r15 + 0x10], 4	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008c3	            0x7425	                            je 0x40008ea	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008c5	      0x4488742450	             mov byte [rsp + 0x50], r14b	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008ca	        0x49c1ee08	                              shr r14, 8	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008ce	      0x4488742451	             mov byte [rsp + 0x51], r14b	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008d3	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008d7	      0xba02000000	                              mov edx, 2	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008dc	      0x488d742450	                   lea rsi, [rsp + 0x50]	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008e1	      0xe800000000	                          call 0x40008e6	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008e6	        0x49894720	             mov qword [r15 + 0x20], rax	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x40008ea	    0x41c74708363f	            mov dword [r15 + 8], 0x3f36 	       724	inflate.c	FUNCTION_7	SWITCH_1
0x40008f2	    0x41be00000000	                             mov r14d, 0	       723	inflate.c	FUNCTION_7	SWITCH_1
0x40008f8	      0xbb00000000	                              mov ebx, 0	       723	inflate.c	FUNCTION_7	SWITCH_1
0x40008fd	            0xeb05	                           jmp 0x4000904	       723	inflate.c	FUNCTION_7	SWITCH_1
0x40008ff	          0x83fb1f	                           cmp ebx, 0x1f	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000902	            0x7738	                            ja 0x400093c	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000904	            0x85ed	                           test ebp, ebp	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000906	            0x7517	                           jne 0x400091f	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000908	          0x4d89fd	                            mov r13, r15	       726	inflate.c	FUNCTION_7	SWITCH_1
0x400090b	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000910	      0xe9c1160000	                           jmp 0x4001fd6	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000915	            0x85ed	                           test ebp, ebp	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000917	     0xf8440150000	                            je 0x4001e5d	       726	inflate.c	FUNCTION_7	SWITCH_1
0x400091d	            0xeb02	                           jmp 0x4000921	       726	inflate.c	FUNCTION_7	SWITCH_1
0x400091f	            0x89d9	                            mov ecx, ebx	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000921	          0x83ed01	                              sub ebp, 1	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000924	        0x4983c401	                              add r12, 1	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000928	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       726	inflate.c	FUNCTION_7	SWITCH_1
0x400092e	          0x48d3e0	                             shl rax, cl	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000931	          0x4901c6	                            add r14, rax	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000934	          0x83c108	                              add ecx, 8	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000937	          0x83f91f	                           cmp ecx, 0x1f	       726	inflate.c	FUNCTION_7	SWITCH_1
0x400093a	            0x76d9	                           jbe 0x4000915	       726	inflate.c	FUNCTION_7	SWITCH_1
0x400093c	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000940	          0x4885c0	                           test rax, rax	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000943	            0x7404	                            je 0x4000949	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000945	        0x4c897008	                mov qword [rax + 8], r14	       728	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000949	      0x41f6471902	               test byte [r15 + 0x19], 2	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x400094e	            0x7442	                            je 0x4000992	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000950	      0x41f6471004	               test byte [r15 + 0x10], 4	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000955	            0x743b	                            je 0x4000992	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000957	      0x4488742450	             mov byte [rsp + 0x50], r14b	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x400095c	          0x4c89f0	                            mov rax, r14	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x400095f	        0x48c1e808	                              shr rax, 8	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000963	        0x88442451	               mov byte [rsp + 0x51], al	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000967	          0x4c89f0	                            mov rax, r14	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x400096a	        0x48c1e810	                           shr rax, 0x10	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x400096e	        0x88442452	               mov byte [rsp + 0x52], al	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000972	        0x49c1ee18	                           shr r14, 0x18	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000976	      0x4488742453	             mov byte [rsp + 0x53], r14b	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x400097b	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x400097f	      0xba04000000	                              mov edx, 4	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000984	      0x488d742450	                   lea rsi, [rsp + 0x50]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000989	      0xe800000000	                          call 0x400098e	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x400098e	        0x49894720	             mov qword [r15 + 0x20], rax	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000992	    0x41c74708373f	            mov dword [r15 + 8], 0x3f37 	       732	inflate.c	FUNCTION_7	SWITCH_1
0x400099a	      0xbb00000000	                              mov ebx, 0	       731	inflate.c	FUNCTION_7	SWITCH_1
0x400099f	    0x41be00000000	                             mov r14d, 0	       731	inflate.c	FUNCTION_7	SWITCH_1
0x40009a5	            0xeb05	                           jmp 0x40009ac	       731	inflate.c	FUNCTION_7	SWITCH_1
0x40009a7	          0x83fb0f	                            cmp ebx, 0xf	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009aa	            0x7738	                            ja 0x40009e4	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009ac	            0x85ed	                           test ebp, ebp	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009ae	            0x7517	                           jne 0x40009c7	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009b0	          0x4d89fd	                            mov r13, r15	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009b3	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009b8	      0xe919160000	                           jmp 0x4001fd6	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009bd	            0x85ed	                           test ebp, ebp	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009bf	     0xf84a7140000	                            je 0x4001e6c	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009c5	            0xeb02	                           jmp 0x40009c9	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009c7	            0x89d9	                            mov ecx, ebx	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009c9	          0x83ed01	                              sub ebp, 1	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009cc	        0x4983c401	                              add r12, 1	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009d0	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009d6	          0x48d3e0	                             shl rax, cl	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009d9	          0x4901c6	                            add r14, rax	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009dc	          0x83c108	                              add ecx, 8	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009df	          0x83f90f	                            cmp ecx, 0xf	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009e2	            0x76d9	                           jbe 0x40009bd	       734	inflate.c	FUNCTION_7	SWITCH_1
0x40009e4	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x40009e8	          0x4885c0	                           test rax, rax	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x40009eb	            0x7415	                            je 0x4000a02	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x40009ed	        0x410fb6d6	                         movzx edx, r14b	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x40009f1	          0x895010	             mov dword [rax + 0x10], edx	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x40009f4	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x40009f8	          0x4c89f2	                            mov rdx, r14	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x40009fb	        0x48c1ea08	                              shr rdx, 8	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x40009ff	          0x895014	             mov dword [rax + 0x14], edx	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4000a02	      0x41f6471902	               test byte [r15 + 0x19], 2	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a07	            0x742c	                            je 0x4000a35	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a09	      0x41f6471004	               test byte [r15 + 0x10], 4	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a0e	            0x7425	                            je 0x4000a35	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a10	      0x4488742450	             mov byte [rsp + 0x50], r14b	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a15	        0x49c1ee08	                              shr r14, 8	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a19	      0x4488742451	             mov byte [rsp + 0x51], r14b	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a1e	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a22	      0xba02000000	                              mov edx, 2	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a27	      0x488d742450	                   lea rsi, [rsp + 0x50]	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a2c	      0xe800000000	                          call 0x4000a31	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a31	        0x49894720	             mov qword [r15 + 0x20], rax	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4000a35	    0x41c74708383f	            mov dword [r15 + 8], 0x3f38 	       742	inflate.c	FUNCTION_7	SWITCH_1
0x4000a3d	      0x41f6471904	               test byte [r15 + 0x19], 4	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a42	            0x7522	                           jne 0x4000a66	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a44	      0xbb00000000	                              mov ebx, 0	       741	inflate.c	FUNCTION_7	SWITCH_1
0x4000a49	    0x41be00000000	                             mov r14d, 0	       741	inflate.c	FUNCTION_7	SWITCH_1
0x4000a4f	      0xe9a6000000	                           jmp 0x4000afa	       741	inflate.c	FUNCTION_7	SWITCH_1
0x4000a54	      0x41f6471904	               test byte [r15 + 0x19], 4	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a59	     0xf849b000000	                            je 0x4000afa	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a5f	          0x83fb0f	                            cmp ebx, 0xf	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a62	            0x760d	                           jbe 0x4000a71	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a64	            0xeb43	                           jmp 0x4000aa9	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a66	      0xbb00000000	                              mov ebx, 0	       741	inflate.c	FUNCTION_7	SWITCH_1
0x4000a6b	    0x41be00000000	                             mov r14d, 0	       741	inflate.c	FUNCTION_7	SWITCH_1
0x4000a71	            0x85ed	                           test ebp, ebp	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a73	            0x7517	                           jne 0x4000a8c	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a75	          0x4d89fd	                            mov r13, r15	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a78	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a7d	      0xe954150000	                           jmp 0x4001fd6	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a82	            0x85ed	                           test ebp, ebp	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a84	     0xf84f1130000	                            je 0x4001e7b	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a8a	            0xeb02	                           jmp 0x4000a8e	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a8c	            0x89d9	                            mov ecx, ebx	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a8e	          0x83ed01	                              sub ebp, 1	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a91	        0x4983c401	                              add r12, 1	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a95	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a9b	          0x48d3e0	                             shl rax, cl	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000a9e	          0x4901c6	                            add r14, rax	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000aa1	          0x83c108	                              add ecx, 8	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000aa4	          0x83f90f	                            cmp ecx, 0xf	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000aa7	            0x76d9	                           jbe 0x4000a82	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000aa9	        0x4589775c	            mov dword [r15 + 0x5c], r14d	       746	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000aad	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000ab1	          0x4885c0	                           test rax, rax	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000ab4	            0x7404	                            je 0x4000aba	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000ab6	        0x44897020	            mov dword [rax + 0x20], r14d	       748	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4000aba	      0x41f6471902	               test byte [r15 + 0x19], 2	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000abf	            0x744c	                            je 0x4000b0d	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ac1	      0x41f6471004	               test byte [r15 + 0x10], 4	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ac6	            0x7452	                            je 0x4000b1a	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ac8	      0x4488742450	             mov byte [rsp + 0x50], r14b	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000acd	        0x49c1ee08	                              shr r14, 8	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ad1	      0x4488742451	             mov byte [rsp + 0x51], r14b	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ad6	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ada	      0xba02000000	                              mov edx, 2	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000adf	      0x488d742450	                   lea rsi, [rsp + 0x50]	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ae4	      0xe800000000	                          call 0x4000ae9	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000ae9	        0x49894720	             mov qword [r15 + 0x20], rax	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4000aed	      0xbb00000000	                              mov ebx, 0	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000af2	    0x41be00000000	                             mov r14d, 0	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000af8	            0xeb2b	                           jmp 0x4000b25	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000afa	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000afe	          0x4885c0	                           test rax, rax	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000b01	            0x7422	                            je 0x4000b25	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000b03	    0x48c740180000	               mov qword [rax + 0x18], 0	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000b0b	            0xeb18	                           jmp 0x4000b25	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4000b0d	      0xbb00000000	                              mov ebx, 0	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000b12	    0x41be00000000	                             mov r14d, 0	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000b18	            0xeb0b	                           jmp 0x4000b25	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000b1a	      0xbb00000000	                              mov ebx, 0	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000b1f	    0x41be00000000	                             mov r14d, 0	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4000b25	    0x41c74708393f	            mov dword [r15 + 8], 0x3f39 	       755	inflate.c	FUNCTION_7	SWITCH_1
0x4000b2d	      0x41f6471904	               test byte [r15 + 0x19], 4	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000b32	     0xf8488000000	                            je 0x4000bc0	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000b38	        0x418b475c	            mov eax, dword [r15 + 0x5c] 	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000b3c	            0x39c5	                            cmp ebp, eax	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000b3e	          0x4189c5	                           mov r13d, eax	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000b41	        0x440f46ed	                        cmovbe r13d, ebp	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4000b45	          0x4585ed	                         test r13d, r13d	       760	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4000b48	            0x746b	                            je 0x4000bb5	       760	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4000b4a	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b4e	          0x4885d2	                           test rdx, rdx	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b51	            0x7434	                            je 0x4000b87	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b53	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	       762	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b57	          0x4885ff	                           test rdi, rdi	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b5a	            0x742b	                            je 0x4000b87	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b5c	          0x8b7220	            mov esi, dword [rdx + 0x20] 	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b5f	            0x29c6	                            sub esi, eax	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b61	            0x89f0	                            mov eax, esi	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b63	          0x8b4a24	            mov ecx, dword [rdx + 0x24] 	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4000b66	      0x418d743500	                    lea esi, [r13 + rsi]	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000b6b	          0x4189c8	                            mov r8d, ecx	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000b6e	          0x4129c0	                            sub r8d, eax	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000b71	          0x4489ea	                           mov edx, r13d	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000b74	            0x39ce	                            cmp esi, ecx	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000b76	        0x490f47d0	                           cmova rdx, r8	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4000b7a	            0x89c0	                            mov eax, eax	        53	string3.h	FUNCTION_18	CALL_3
0x4000b7c	          0x4801c7	                            add rdi, rax	        53	string3.h	FUNCTION_18	CALL_3
0x4000b7f	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_18	CALL_3
0x4000b82	      0xe800000000	                          call 0x4000b87	        53	string3.h	FUNCTION_18	CALL_3
0x4000b87	      0x41f6471902	               test byte [r15 + 0x19], 2	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000b8c	            0x741a	                            je 0x4000ba8	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000b8e	      0x41f6471004	               test byte [r15 + 0x10], 4	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000b93	            0x7413	                            je 0x4000ba8	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4000b95	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4000b99	          0x4489ea	                           mov edx, r13d	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4000b9c	          0x4c89e6	                            mov rsi, r12	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4000b9f	      0xe800000000	                          call 0x4000ba4	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4000ba4	        0x49894720	             mov qword [r15 + 0x20], rax	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4000ba8	          0x4429ed	                           sub ebp, r13d	       770	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4000bab	          0x4489e8	                           mov eax, r13d	       771	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4000bae	          0x4901c4	                            add r12, rax	       771	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4000bb1	        0x45296f5c	            sub dword [r15 + 0x5c], r13d	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4000bb5	      0x41837f5c00	               cmp dword [r15 + 0x5c], 0	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x4000bba	     0xf85ca120000	                           jne 0x4001e8a	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x4000bc0	    0x41c7475c0000	               mov dword [r15 + 0x5c], 0	       776	inflate.c	FUNCTION_7	SWITCH_1
0x4000bc8	    0x41c747083a3f	            mov dword [r15 + 8], 0x3f3a 	       777	inflate.c	FUNCTION_7	SWITCH_1
0x4000bd0	      0x41f6471908	               test byte [r15 + 0x19], 8	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4000bd5	     0xf848d000000	                            je 0x4000c68	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4000bdb	            0x85ed	                           test ebp, ebp	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x4000bdd	     0xf84b4120000	                            je 0x4001e97	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x4000be3	      0xb800000000	                              mov eax, 0	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x4000be8	        0x448d6801	                     lea r13d, [rax + 1]	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000bec	            0x89c0	                            mov eax, eax	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000bee	      0x410fb60c04	             movzx ecx, byte [r12 + rax]	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000bf3	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000bf7	          0x4885c0	                           test rax, rax	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000bfa	            0x741e	                            je 0x4000c1a	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000bfc	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c00	          0x4885f6	                           test rsi, rsi	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c03	            0x7415	                            je 0x4000c1a	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c05	        0x418b575c	            mov edx, dword [r15 + 0x5c] 	       786	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c09	          0x3b5030	            cmp edx, dword [rax + 0x30] 	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c0c	            0x730c	                           jae 0x4000c1a	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c0e	          0x8d4201	                      lea eax, [rdx + 1]	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c11	        0x4189475c	             mov dword [r15 + 0x5c], eax	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c15	            0x89d2	                            mov edx, edx	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c17	          0x880c16	                mov byte [rsi + rdx], cl	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x4000c1a	          0x4489e8	                           mov eax, r13d	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000c1d	            0x84c9	                             test cl, cl	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000c1f	            0x7405	                            je 0x4000c26	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000c21	          0x4439ed	                           cmp ebp, r13d	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000c24	            0x77c2	                            ja 0x4000be8	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000c26	        0x884c2448	               mov byte [rsp + 0x48], cl	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x4000c2a	      0x41f6471902	               test byte [r15 + 0x19], 2	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4000c2f	            0x741a	                            je 0x4000c4b	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4000c31	      0x41f6471004	               test byte [r15 + 0x10], 4	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4000c36	            0x7413	                            je 0x4000c4b	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4000c38	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4000c3c	          0x4489ea	                           mov edx, r13d	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4000c3f	          0x4c89e6	                            mov rsi, r12	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4000c42	      0xe800000000	                          call 0x4000c47	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4000c47	        0x49894720	             mov qword [r15 + 0x20], rax	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x4000c4b	          0x4429ed	                           sub ebp, r13d	       791	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4000c4e	          0x4589ed	                          mov r13d, r13d	       792	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4000c51	          0x4d01ec	                            add r12, r13	       792	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x4000c54	      0x807c244800	                cmp byte [rsp + 0x48], 0	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4000c59	            0x741e	                            je 0x4000c79	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4000c5b	          0x4d89fd	                            mov r13, r15	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4000c5e	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4000c63	      0xe96e130000	                           jmp 0x4001fd6	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4000c68	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4000c6c	          0x4885c0	                           test rax, rax	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4000c6f	            0x7408	                            je 0x4000c79	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4000c71	    0x48c740280000	               mov qword [rax + 0x28], 0	       796	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4000c79	    0x41c7475c0000	               mov dword [r15 + 0x5c], 0	       797	inflate.c	FUNCTION_7	SWITCH_1
0x4000c81	    0x41c747083b3f	            mov dword [r15 + 8], 0x3f3b 	       798	inflate.c	FUNCTION_7	SWITCH_1
0x4000c89	      0x41f6471910	           test byte [r15 + 0x19], 0x10 	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x4000c8e	     0xf848d000000	                            je 0x4000d21	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x4000c94	            0x85ed	                           test ebp, ebp	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x4000c96	     0xf8408120000	                            je 0x4001ea4	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x4000c9c	      0xb800000000	                              mov eax, 0	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x4000ca1	        0x448d6801	                     lea r13d, [rax + 1]	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000ca5	            0x89c0	                            mov eax, eax	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000ca7	      0x410fb60c04	             movzx ecx, byte [r12 + rax]	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000cac	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cb0	          0x4885c0	                           test rax, rax	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cb3	            0x741e	                            je 0x4000cd3	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cb5	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cb9	          0x4885f6	                           test rsi, rsi	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cbc	            0x7415	                            je 0x4000cd3	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cbe	        0x418b575c	            mov edx, dword [r15 + 0x5c] 	       807	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cc2	          0x3b5040	            cmp edx, dword [rax + 0x40] 	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cc5	            0x730c	                           jae 0x4000cd3	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cc7	          0x8d4201	                      lea eax, [rdx + 1]	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cca	        0x4189475c	             mov dword [r15 + 0x5c], eax	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cce	            0x89d2	                            mov edx, edx	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cd0	          0x880c16	                mov byte [rsi + rdx], cl	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4000cd3	          0x4489e8	                           mov eax, r13d	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000cd6	            0x84c9	                             test cl, cl	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000cd8	            0x7405	                            je 0x4000cdf	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000cda	          0x4439ed	                           cmp ebp, r13d	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000cdd	            0x77c2	                            ja 0x4000ca1	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000cdf	        0x884c2448	               mov byte [rsp + 0x48], cl	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4000ce3	      0x41f6471902	               test byte [r15 + 0x19], 2	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4000ce8	            0x741a	                            je 0x4000d04	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4000cea	      0x41f6471004	               test byte [r15 + 0x10], 4	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4000cef	            0x7413	                            je 0x4000d04	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4000cf1	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4000cf5	          0x4489ea	                           mov edx, r13d	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4000cf8	          0x4c89e6	                            mov rsi, r12	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4000cfb	      0xe800000000	                          call 0x4000d00	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4000d00	        0x49894720	             mov qword [r15 + 0x20], rax	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4000d04	          0x4429ed	                           sub ebp, r13d	       812	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x4000d07	          0x4589ed	                          mov r13d, r13d	       813	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x4000d0a	          0x4d01ec	                            add r12, r13	       813	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x4000d0d	      0x807c244800	                cmp byte [rsp + 0x48], 0	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x4000d12	            0x741e	                            je 0x4000d32	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x4000d14	          0x4d89fd	                            mov r13, r15	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x4000d17	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x4000d1c	      0xe9b5120000	                           jmp 0x4001fd6	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x4000d21	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x4000d25	          0x4885c0	                           test rax, rax	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x4000d28	            0x7408	                            je 0x4000d32	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x4000d2a	    0x48c740380000	               mov qword [rax + 0x38], 0	       817	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x4000d32	    0x41c747083c3f	            mov dword [r15 + 8], 0x3f3c 	       818	inflate.c	FUNCTION_7	SWITCH_1
0x4000d3a	        0x418b5718	            mov edx, dword [r15 + 0x18] 	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d3e	          0xf6c602	                              test dh, 2	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d41	     0xf8482000000	                            je 0x4000dc9	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d47	          0x83fb0f	                            cmp ebx, 0xf	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d4a	            0x773a	                            ja 0x4000d86	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d4c	            0x85ed	                           test ebp, ebp	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d4e	            0x7517	                           jne 0x4000d67	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d50	          0x4d89fd	                            mov r13, r15	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d53	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d58	      0xe979120000	                           jmp 0x4001fd6	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d5d	            0x85ed	                           test ebp, ebp	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d5f	     0xf844c110000	                            je 0x4001eb1	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d65	            0xeb02	                           jmp 0x4000d69	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d67	            0x89d9	                            mov ecx, ebx	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d69	          0x83ed01	                              sub ebp, 1	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d6c	        0x4983c401	                              add r12, 1	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d70	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d76	          0x48d3e0	                             shl rax, cl	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d79	          0x4901c6	                            add r14, rax	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d7c	          0x83c108	                              add ecx, 8	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d7f	          0x83f90f	                            cmp ecx, 0xf	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d82	            0x76d9	                           jbe 0x4000d5d	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d84	            0x89cb	                            mov ebx, ecx	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000d86	      0x41f6471004	               test byte [r15 + 0x10], 4	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000d8b	            0x7424	                            je 0x4000db1	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000d8d	      0x410fb74720	           movzx eax, word [r15 + 0x20] 	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000d92	          0x4c39f0	                            cmp rax, r14	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000d95	            0x7427	                            je 0x4000dbe	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000d97	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       823	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000d9c	    0x48c740300000	               mov qword [rax + 0x30], 0	       823	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000da4	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       824	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000dac	      0xe9edf7ffff	                           jmp 0x400059e	       825	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4000db1	      0xbb00000000	                              mov ebx, 0	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000db6	    0x41be00000000	                             mov r14d, 0	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000dbc	            0xeb0b	                           jmp 0x4000dc9	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000dbe	      0xbb00000000	                              mov ebx, 0	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000dc3	    0x41be00000000	                             mov r14d, 0	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4000dc9	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4000dcd	          0x4885c0	                           test rax, rax	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4000dd0	            0x7414	                            je 0x4000de6	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4000dd2	          0xc1fa09	                              sar edx, 9	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4000dd5	          0x83e201	                              and edx, 1	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4000dd8	          0x895044	             mov dword [rax + 0x44], edx	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4000ddb	        0x498b4730	            mov rax, qword [r15 + 0x30] 	       831	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4000ddf	    0xc74048010000	               mov dword [rax + 0x48], 1	       831	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x4000de6	      0xba00000000	                              mov edx, 0	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x4000deb	      0xbe00000000	                              mov esi, 0	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x4000df0	      0xbf00000000	                              mov edi, 0	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x4000df5	      0xe800000000	                          call 0x4000dfa	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x4000dfa	        0x49894720	             mov qword [r15 + 0x20], rax	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x4000dfe	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x4000e03	        0x48894660	             mov qword [rsi + 0x60], rax	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x4000e07	    0x41c747083f3f	            mov dword [r15 + 8], 0x3f3f 	       834	inflate.c	FUNCTION_7	SWITCH_1
0x4000e0f	      0xe98af7ffff	                           jmp 0x400059e	       835	inflate.c	FUNCTION_7	SWITCH_1
0x4000e14	            0x85ed	                           test ebp, ebp	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e16	     0xf84a4100000	                            je 0x4001ec0	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e1c	            0xeb02	                           jmp 0x4000e20	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e1e	            0x89d9	                            mov ecx, ebx	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e20	          0x83ed01	                              sub ebp, 1	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e23	        0x4983c401	                              add r12, 1	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e27	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e2d	          0x48d3e0	                             shl rax, cl	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e30	          0x4901c6	                            add r14, rax	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e33	          0x83c108	                              add ecx, 8	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e36	          0x83f91f	                           cmp ecx, 0x1f	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e39	            0x76d9	                           jbe 0x4000e14	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000e3b	          0x4c89f2	                            mov rdx, r14	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e3e	        0x48c1ea18	                           shr rdx, 0x18	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e42	           0xfb6d2	                           movzx edx, dl	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e45	          0x4c89f0	                            mov rax, r14	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e48	        0x48c1e808	                              shr rax, 8	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e4c	      0x2500ff0000	                         and eax, 0xff00	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e51	          0x4801c2	                            add rdx, rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e54	          0x4c89f0	                            mov rax, r14	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e57	      0x2500ff0000	                         and eax, 0xff00	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e5c	        0x48c1e008	                              shl rax, 8	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e60	          0x4801d0	                            add rax, rdx	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e63	        0x49c1e618	                           shl r14, 0x18	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e67	          0x4589f6	                          mov r14d, r14d	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e6a	          0x4c01f0	                            add rax, r14	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e6d	        0x49894720	             mov qword [r15 + 0x20], rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e71	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e76	        0x48894360	             mov qword [rbx + 0x60], rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000e7a	    0x41c747083e3f	            mov dword [r15 + 8], 0x3f3e 	       841	inflate.c	FUNCTION_7	SWITCH_1
0x4000e82	      0xbb00000000	                              mov ebx, 0	       840	inflate.c	FUNCTION_7	SWITCH_1
0x4000e87	    0x41be00000000	                             mov r14d, 0	       840	inflate.c	FUNCTION_7	SWITCH_1
0x4000e8d	      0x41837f1400	               cmp dword [r15 + 0x14], 0	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000e92	            0x7532	                           jne 0x4000ec6	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000e94	          0x4d89fd	                            mov r13, r15	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000e97	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000e9c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000ea1	        0x49894718	             mov qword [r15 + 0x18], rax	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000ea5	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000ea9	        0x41894720	             mov dword [r15 + 0x20], eax	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000ead	          0x4d8927	                    mov qword [r15], r12	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000eb0	        0x41896f08	                mov dword [r15 + 8], ebp	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000eb4	        0x4d897550	             mov qword [r13 + 0x50], r14	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000eb8	        0x41895d58	             mov dword [r13 + 0x58], ebx	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000ebc	      0xb802000000	                              mov eax, 2	       845	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000ec1	      0xe95b120000	                           jmp 0x4002121	       845	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000ec6	      0xba00000000	                              mov edx, 0	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000ecb	      0xbe00000000	                              mov esi, 0	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000ed0	      0xbf00000000	                              mov edi, 0	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000ed5	      0xe800000000	                          call 0x4000eda	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000eda	        0x49894720	             mov qword [r15 + 0x20], rax	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000ede	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000ee3	        0x48894760	             mov qword [rdi + 0x60], rax	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000ee7	    0x41c747083f3f	            mov dword [r15 + 8], 0x3f3f 	       848	inflate.c	FUNCTION_7	SWITCH_1
0x4000eef	      0x837c243401	               cmp dword [rsp + 0x34], 1	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x4000ef4	     0xf86d50f0000	                           jbe 0x4001ecf	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x4000efa	      0x41837f0c00	                cmp dword [r15 + 0xc], 0	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000eff	            0x7516	                           jne 0x4000f17	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000f01	          0x83fb02	                              cmp ebx, 2	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f04	            0x7752	                            ja 0x4000f58	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f06	            0x85ed	                           test ebp, ebp	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f08	            0x752f	                           jne 0x4000f39	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f0a	          0x4d89fd	                            mov r13, r15	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f0d	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f12	      0xe9bf100000	                           jmp 0x4001fd6	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f17	            0x89d9	                            mov ecx, ebx	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000f19	          0x83e107	                              and ecx, 7	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000f1c	          0x49d3ee	                             shr r14, cl	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000f1f	          0x83e3f8	                     and ebx, 0xfffffff8	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000f22	    0x41c747084e3f	            mov dword [r15 + 8], 0x3f4e 	       854	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000f2a	      0xe96ff6ffff	                           jmp 0x400059e	       855	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000f2f	            0x85ed	                           test ebp, ebp	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f31	     0xf84a50f0000	                            je 0x4001edc	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f37	            0xeb02	                           jmp 0x4000f3b	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f39	            0x89d9	                            mov ecx, ebx	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f3b	          0x83ed01	                              sub ebp, 1	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f3e	        0x4983c401	                              add r12, 1	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f42	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f48	          0x48d3e0	                             shl rax, cl	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f4b	          0x4901c6	                            add r14, rax	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f4e	          0x83c108	                              add ecx, 8	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f51	          0x83f902	                              cmp ecx, 2	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f54	            0x76d9	                           jbe 0x4000f2f	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f56	            0x89cb	                            mov ebx, ecx	       857	inflate.c	FUNCTION_7	SWITCH_1
0x4000f58	          0x4489f0	                           mov eax, r14d	       858	inflate.c	FUNCTION_7	SWITCH_1
0x4000f5b	          0x83e001	                              and eax, 1	       858	inflate.c	FUNCTION_7	SWITCH_1
0x4000f5e	        0x4189470c	              mov dword [r15 + 0xc], eax	       858	inflate.c	FUNCTION_7	SWITCH_1
0x4000f62	          0x49d1ee	                              shr r14, 1	       859	inflate.c	FUNCTION_7	SWITCH_1
0x4000f65	          0x4489f0	                           mov eax, r14d	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f68	          0x83e003	                              and eax, 3	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f6b	          0x83f801	                              cmp eax, 1	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f6e	            0x741b	                            je 0x4000f8b	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f70	          0x83f801	                              cmp eax, 1	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f73	            0x720c	                            jb 0x4000f81	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f75	          0x83f802	                              cmp eax, 2	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f78	            0x745a	                            je 0x4000fd4	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f7a	          0x83f803	                              cmp eax, 3	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f7d	            0x745f	                            je 0x4000fde	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f7f	            0xeb72	                           jmp 0x4000ff3	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f81	    0x41c74708413f	            mov dword [r15 + 8], 0x3f41 	       864	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f89	            0xeb68	                           jmp 0x4000ff3	       865	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000f8b	    0x49c747680000	               mov qword [r15 + 0x68], 0	       315	inflate.c	FOR_1	IF_7
0x4000f93	    0x41c747780900	               mov dword [r15 + 0x78], 9	       316	inflate.c	FOR_1	IF_7
0x4000f9b	    0x49c747700000	               mov qword [r15 + 0x70], 0	       317	inflate.c	FOR_1	IF_7
0x4000fa3	    0x41c7477c0500	               mov dword [r15 + 0x7c], 5	       318	inflate.c	FOR_1	IF_7
0x4000fab	    0x41c74708473f	            mov dword [r15 + 8], 0x3f47 	       870	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000fb3	      0x837c241006	               cmp dword [rsp + 0x10], 6	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fb8	            0x7539	                           jne 0x4000ff3	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fba	          0x4d89fd	                            mov r13, r15	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fbd	          0x4c89f2	                            mov rdx, r14	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fc0	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fc5	        0x48c1ea02	                              shr rdx, 2	       872	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fc9	          0x4989d6	                            mov r14, rdx	       872	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fcc	          0x83eb03	                              sub ebx, 3	       872	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fcf	      0xe902100000	                           jmp 0x4001fd6	       873	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4000fd4	    0x41c74708443f	            mov dword [r15 + 8], 0x3f44 	       879	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000fdc	            0xeb15	                           jmp 0x4000ff3	       880	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000fde	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       882	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000fe3	    0x48c740300000	               mov qword [rax + 0x30], 0	       882	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000feb	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       883	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000ff3	        0x49c1ee02	                              shr r14, 2	       885	inflate.c	FUNCTION_7	SWITCH_1
0x4000ff7	          0x83eb03	                              sub ebx, 3	       885	inflate.c	FUNCTION_7	SWITCH_1
0x4000ffa	      0xe99ff5ffff	                           jmp 0x400059e	       886	inflate.c	FUNCTION_7	SWITCH_1
0x4000fff	            0x89d9	                            mov ecx, ebx	       888	inflate.c	FUNCTION_7	SWITCH_1
0x4001001	          0x83e107	                              and ecx, 7	       888	inflate.c	FUNCTION_7	SWITCH_1
0x4001004	          0x49d3ee	                             shr r14, cl	       888	inflate.c	FUNCTION_7	SWITCH_1
0x4001007	          0x83e3f8	                     and ebx, 0xfffffff8	       888	inflate.c	FUNCTION_7	SWITCH_1
0x400100a	          0x83fb1f	                           cmp ebx, 0x1f	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400100d	            0x773a	                            ja 0x4001049	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400100f	            0x85ed	                           test ebp, ebp	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001011	            0x7517	                           jne 0x400102a	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001013	          0x4d89fd	                            mov r13, r15	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001016	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400101b	      0xe9b60f0000	                           jmp 0x4001fd6	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001020	            0x85ed	                           test ebp, ebp	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001022	     0xf84c30e0000	                            je 0x4001eeb	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001028	            0xeb02	                           jmp 0x400102c	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400102a	            0x89d9	                            mov ecx, ebx	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400102c	          0x83ed01	                              sub ebp, 1	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400102f	        0x4983c401	                              add r12, 1	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001033	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001039	          0x48d3e0	                             shl rax, cl	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400103c	          0x4901c6	                            add r14, rax	       889	inflate.c	FUNCTION_7	SWITCH_1
0x400103f	          0x83c108	                              add ecx, 8	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001042	          0x83f91f	                           cmp ecx, 0x1f	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001045	            0x76d9	                           jbe 0x4001020	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001047	            0x89cb	                            mov ebx, ecx	       889	inflate.c	FUNCTION_7	SWITCH_1
0x4001049	        0x410fb7d6	                         movzx edx, r14w	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400104d	          0x4c89f0	                            mov rax, r14	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001050	        0x48c1e810	                           shr rax, 0x10	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001054	    0x4835ffff0000	                         xor rax, 0xffff	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400105a	          0x4839c2	                            cmp rdx, rax	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400105d	            0x741a	                            je 0x4001079	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400105f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       891	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001064	    0x48c740300000	               mov qword [rax + 0x30], 0	       891	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400106c	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       892	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001074	      0xe925f5ffff	                           jmp 0x400059e	       893	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001079	    0x4181e6ffff00	                        and r14d, 0xffff	       895	inflate.c	FUNCTION_7	SWITCH_1
0x4001080	        0x4589775c	            mov dword [r15 + 0x5c], r14d	       895	inflate.c	FUNCTION_7	SWITCH_1
0x4001084	    0x41c74708423f	            mov dword [r15 + 8], 0x3f42 	       899	inflate.c	FUNCTION_7	SWITCH_1
0x400108c	      0x837c241006	               cmp dword [rsp + 0x10], 6	       900	inflate.c	FUNCTION_7	SWITCH_1	IF_50
0x4001091	     0xf84900d0000	                            je 0x4001e27	       900	inflate.c	FUNCTION_7	SWITCH_1	IF_50
0x4001097	      0xbb00000000	                              mov ebx, 0	       898	inflate.c	FUNCTION_7	SWITCH_1
0x400109c	    0x41be00000000	                             mov r14d, 0	       898	inflate.c	FUNCTION_7	SWITCH_1
0x40010a2	    0x41c74708433f	            mov dword [r15 + 8], 0x3f43 	       902	inflate.c	FUNCTION_7	SWITCH_1
0x40010aa	        0x458b6f5c	           mov r13d, dword [r15 + 0x5c] 	       904	inflate.c	FUNCTION_7	SWITCH_1
0x40010ae	          0x4585ed	                         test r13d, r13d	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010b1	            0x7451	                            je 0x4001104	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010b3	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010b7	          0x4439e8	                           cmp eax, r13d	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010ba	        0x440f46e8	                        cmovbe r13d, eax	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010be	          0x4439ed	                           cmp ebp, r13d	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010c1	        0x440f46ed	                        cmovbe r13d, ebp	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010c5	          0x4585ed	                         test r13d, r13d	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x40010c8	     0xf842c0e0000	                            je 0x4001efa	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x40010ce	          0x4489ee	                           mov esi, r13d	       909	inflate.c	FUNCTION_7	SWITCH_1	IF_51	CALL_17
0x40010d1	      0x4889742448	             mov qword [rsp + 0x48], rsi	        53	string3.h	FUNCTION_18	CALL_3
0x40010d6	          0x4889f2	                            mov rdx, rsi	        53	string3.h	FUNCTION_18	CALL_3
0x40010d9	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_18	CALL_3
0x40010dc	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_18	CALL_3
0x40010e1	      0xe800000000	                          call 0x40010e6	        53	string3.h	FUNCTION_18	CALL_3
0x40010e6	          0x4429ed	                           sub ebp, r13d	       910	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010e9	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       911	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010ee	          0x4901f4	                            add r12, rsi	       911	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010f1	      0x44296c2414	            sub dword [rsp + 0x14], r13d	       912	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010f6	      0x4801742420	            add qword [rsp + 0x20], rsi 	       913	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010fb	        0x45296f5c	            sub dword [r15 + 0x5c], r13d	       914	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x40010ff	      0xe99af4ffff	                           jmp 0x400059e	       915	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4001104	    0x41c747083f3f	            mov dword [r15 + 8], 0x3f3f 	       918	inflate.c	FUNCTION_7	SWITCH_1
0x400110c	      0xe98df4ffff	                           jmp 0x400059e	       919	inflate.c	FUNCTION_7	SWITCH_1
0x4001111	            0x85ed	                           test ebp, ebp	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001113	     0xf84ee0d0000	                            je 0x4001f07	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001119	            0xeb02	                           jmp 0x400111d	       921	inflate.c	FUNCTION_7	SWITCH_1
0x400111b	            0x89d9	                            mov ecx, ebx	       921	inflate.c	FUNCTION_7	SWITCH_1
0x400111d	          0x83ed01	                              sub ebp, 1	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001120	        0x4983c401	                              add r12, 1	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001124	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       921	inflate.c	FUNCTION_7	SWITCH_1
0x400112a	          0x48d3e0	                             shl rax, cl	       921	inflate.c	FUNCTION_7	SWITCH_1
0x400112d	          0x4901c6	                            add r14, rax	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001130	          0x83c108	                              add ecx, 8	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001133	          0x83f90d	                            cmp ecx, 0xd	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001136	            0x76d9	                           jbe 0x4001111	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4001138	            0x89cb	                            mov ebx, ecx	       921	inflate.c	FUNCTION_7	SWITCH_1
0x400113a	          0x4489f1	                           mov ecx, r14d	       922	inflate.c	FUNCTION_7	SWITCH_1
0x400113d	          0x83e11f	                           and ecx, 0x1f	       922	inflate.c	FUNCTION_7	SWITCH_1
0x4001140	    0x81c101010000	                          add ecx, 0x101	       922	inflate.c	FUNCTION_7	SWITCH_1
0x4001146	    0x41898f840000	             mov dword [r15 + 0x84], ecx	       922	inflate.c	FUNCTION_7	SWITCH_1
0x400114d	          0x4c89f0	                            mov rax, r14	       923	inflate.c	FUNCTION_7	SWITCH_1
0x4001150	        0x48c1e805	                              shr rax, 5	       923	inflate.c	FUNCTION_7	SWITCH_1
0x4001154	          0x83e01f	                           and eax, 0x1f	       924	inflate.c	FUNCTION_7	SWITCH_1
0x4001157	          0x83c001	                              add eax, 1	       924	inflate.c	FUNCTION_7	SWITCH_1
0x400115a	    0x418987880000	             mov dword [r15 + 0x88], eax	       924	inflate.c	FUNCTION_7	SWITCH_1
0x4001161	          0x4c89f2	                            mov rdx, r14	       925	inflate.c	FUNCTION_7	SWITCH_1
0x4001164	        0x48c1ea0a	                            shr rdx, 0xa	       925	inflate.c	FUNCTION_7	SWITCH_1
0x4001168	          0x83e20f	                            and edx, 0xf	       926	inflate.c	FUNCTION_7	SWITCH_1
0x400116b	          0x83c204	                              add edx, 4	       926	inflate.c	FUNCTION_7	SWITCH_1
0x400116e	    0x418997800000	             mov dword [r15 + 0x80], edx	       926	inflate.c	FUNCTION_7	SWITCH_1
0x4001175	        0x49c1ee0e	                            shr r14, 0xe	       927	inflate.c	FUNCTION_7	SWITCH_1
0x4001179	          0x83eb0e	                            sub ebx, 0xe	       927	inflate.c	FUNCTION_7	SWITCH_1
0x400117c	          0x83f81e	                           cmp eax, 0x1e	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x400117f	            0x7708	                            ja 0x4001189	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001181	    0x81f91e010000	                          cmp ecx, 0x11e	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001187	            0x761a	                           jbe 0x40011a3	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001189	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       930	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x400118e	    0x48c740300000	               mov qword [rax + 0x30], 0	       930	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001196	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       931	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x400119e	      0xe9fbf3ffff	                           jmp 0x400059e	       932	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x40011a3	    0x41c7878c0000	               mov dword [r15 + 0x8c], 0	       936	inflate.c	FUNCTION_7	SWITCH_1
0x40011ae	    0x41c74708453f	            mov dword [r15 + 8], 0x3f45 	       937	inflate.c	FUNCTION_7	SWITCH_1
0x40011b6	    0x418b978c0000	            mov edx, dword [r15 + 0x8c] 	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011bd	    0x418bb7800000	            mov esi, dword [r15 + 0x80] 	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011c4	            0x89d9	                            mov ecx, ebx	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011c6	            0x39f2	                            cmp edx, esi	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011c8	            0x7257	                            jb 0x4001221	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011ca	            0xeb6f	                           jmp 0x400123b	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011cc	            0x85ed	                           test ebp, ebp	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011ce	     0xf84420d0000	                            je 0x4001f16	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011d4	          0x83ed01	                              sub ebp, 1	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011d7	        0x4983c401	                              add r12, 1	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011db	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011e1	          0x48d3e0	                             shl rax, cl	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011e4	          0x4901c6	                            add r14, rax	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011e7	          0x83c108	                              add ecx, 8	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011ea	          0x83f902	                              cmp ecx, 2	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011ed	            0x76dd	                           jbe 0x40011cc	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011ef	          0x8d4201	                      lea eax, [rdx + 1]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011f2	    0x4189878c0000	             mov dword [r15 + 0x8c], eax	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011f9	            0x89d2	                            mov edx, edx	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x40011fb	     0xfb794120000	             movzx edx, word [rdx + rdx]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001203	          0x4489f7	                           mov edi, r14d	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001206	          0x83e707	                              and edi, 7	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001209	    0x664189bc5798	       mov word [r15 + rdx*2 + 0x98], di	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001212	        0x49c1ee03	                              shr r14, 3	       942	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001216	          0x83e903	                              sub ecx, 3	       942	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001219	            0x39f0	                            cmp eax, esi	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400121b	            0x731c	                           jae 0x4001239	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400121d	            0x89c2	                            mov edx, eax	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400121f	            0xeb00	                           jmp 0x4001221	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001221	          0x83f902	                              cmp ecx, 2	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001224	            0x77c9	                            ja 0x40011ef	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001226	            0x85ed	                           test ebp, ebp	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001228	            0x75aa	                           jne 0x40011d4	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400122a	            0x89cb	                            mov ebx, ecx	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400122c	          0x4d89fd	                            mov r13, r15	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400122f	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001234	      0xe99d0d0000	                           jmp 0x4001fd6	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001239	            0x89cb	                            mov ebx, ecx	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x400123b	    0x418b878c0000	            mov eax, dword [r15 + 0x8c] 	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001242	          0x83f812	                           cmp eax, 0x12	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001245	            0x7728	                            ja 0x400126f	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001247	            0x89c2	                            mov edx, eax	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001249	     0xfb794120000	             movzx edx, word [rdx + rdx]	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001251	    0x6641c7845798	        mov word [r15 + rdx*2 + 0x98], 0	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400125c	          0x83c001	                              add eax, 1	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400125f	          0x83f813	                           cmp eax, 0x13	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001262	            0x75e3	                           jne 0x4001247	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001264	    0x41c7878c0000	           mov dword [r15 + 0x8c], 0x13 	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x400126f	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       946	inflate.c	FUNCTION_7	SWITCH_1
0x4001274	    0x498987900000	             mov qword [r15 + 0x90], rax	       946	inflate.c	FUNCTION_7	SWITCH_1
0x400127b	        0x49894768	             mov qword [r15 + 0x68], rax	       947	inflate.c	FUNCTION_7	SWITCH_1
0x400127f	    0x41c747780700	               mov dword [r15 + 0x78], 7	       948	inflate.c	FUNCTION_7	SWITCH_1
0x4001287	    0x498d8f900000	                   lea rcx, [r15 + 0x90]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x400128e	    0x498db7980000	                   lea rsi, [r15 + 0x98]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001295	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x400129a	        0x4d8d4778	                    lea r8, [r15 + 0x78]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x400129e	      0xba13000000	                           mov edx, 0x13	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40012a3	      0xbf00000000	                              mov edi, 0	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40012a8	      0xe800000000	                          call 0x40012ad	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40012ad	        0x89442428	             mov dword [rsp + 0x28], eax	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x40012b1	            0x85c0	                           test eax, eax	       951	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40012b3	            0x741a	                            je 0x40012cf	       951	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40012b5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       952	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40012ba	    0x48c740300000	               mov qword [rax + 0x30], 0	       952	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40012c2	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       953	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40012ca	      0xe9cff2ffff	                           jmp 0x400059e	       954	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x40012cf	    0x41c7878c0000	               mov dword [r15 + 0x8c], 0	       957	inflate.c	FUNCTION_7	SWITCH_1
0x40012da	    0x41c74708463f	            mov dword [r15 + 8], 0x3f46 	       958	inflate.c	FUNCTION_7	SWITCH_1
0x40012e2	    0x418b97840000	            mov edx, dword [r15 + 0x84] 	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x40012e9	          0x4189d0	                            mov r8d, edx	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x40012ec	    0x450387880000	             add r8d, dword [r15 + 0x88]	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x40012f3	    0x41b901000000	                              mov r9d, 1	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x40012f9	      0xe931020000	                           jmp 0x400152f	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x40012fe	            0x85ed	                           test ebp, ebp	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001300	            0x7517	                           jne 0x4001319	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001302	          0x4d89fd	                            mov r13, r15	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001305	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400130a	      0xe9c70c0000	                           jmp 0x4001fd6	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400130f	            0x85ed	                           test ebp, ebp	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001311	     0xf840e0c0000	                            je 0x4001f25	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001317	            0xeb02	                           jmp 0x400131b	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001319	            0x89d9	                            mov ecx, ebx	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400131b	          0x83ed01	                              sub ebp, 1	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400131e	        0x4983c401	                              add r12, 1	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001322	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001328	          0x48d3e0	                             shl rax, cl	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400132b	          0x4901c6	                            add r14, rax	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400132e	          0x83c108	                              add ecx, 8	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001331	            0x89f0	                            mov eax, esi	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001333	          0x4421f0	                           and eax, r14d	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001336	        0x488d0487	                  lea rax, [rdi + rax*4]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400133a	         0xfb65801	               movzx ebx, byte [rax + 1]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400133e	      0x440fb75802	              movzx r11d, word [rax + 2]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001343	           0xfb6c3	                           movzx eax, bl	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001346	            0x39c8	                            cmp eax, ecx	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001348	            0x77c5	                            ja 0x400130f	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x400134a	            0x89de	                            mov esi, ebx	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x400134c	            0x89cb	                            mov ebx, ecx	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x400134e	            0x89f1	                            mov ecx, esi	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001350	      0x664183fb0f	                           cmp r11w, 0xf	       966	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001355	            0x7721	                            ja 0x4001378	       966	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001357	          0x49d3ee	                             shr r14, cl	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x400135a	            0x29c3	                            sub ebx, eax	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x400135c	        0x418d4201	                      lea eax, [r10 + 1]	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001360	    0x4189878c0000	             mov dword [r15 + 0x8c], eax	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001367	          0x4589d2	                          mov r10d, r10d	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x400136a	    0x6647899c5798	     mov word [r15 + r10*2 + 0x98], r11w	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001373	      0xe9b7010000	                           jmp 0x400152f	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001378	      0x664183fb10	                          cmp r11w, 0x10	       971	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x400137d	     0xf858e000000	                           jne 0x4001411	       971	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001383	        0x440fb6d9	                          movzx r11d, cl	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001387	        0x418d7b02	                      lea edi, [r11 + 2]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x400138b	            0x39df	                            cmp edi, ebx	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x400138d	            0x7639	                           jbe 0x40013c8	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x400138f	            0x85ed	                           test ebp, ebp	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001391	            0x7517	                           jne 0x40013aa	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001393	          0x4d89fd	                            mov r13, r15	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001396	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x400139b	      0xe9360c0000	                           jmp 0x4001fd6	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013a0	            0x85ed	                           test ebp, ebp	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013a2	     0xf848c0b0000	                            je 0x4001f34	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013a8	            0xeb02	                           jmp 0x40013ac	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013aa	            0x89d9	                            mov ecx, ebx	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013ac	          0x83ed01	                              sub ebp, 1	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013af	        0x4983c401	                              add r12, 1	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013b3	    0x410fb67424ff	               movzx esi, byte [r12 - 1]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013b9	          0x48d3e6	                             shl rsi, cl	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013bc	          0x4901f6	                            add r14, rsi	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013bf	          0x83c108	                              add ecx, 8	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013c2	            0x39f9	                            cmp ecx, edi	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013c4	            0x72da	                            jb 0x40013a0	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013c6	            0x89cb	                            mov ebx, ecx	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013c8	          0x4489d9	                           mov ecx, r11d	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013cb	          0x49d3ee	                             shr r14, cl	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013ce	            0x29c3	                            sub ebx, eax	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013d0	          0x4585d2	                         test r10d, r10d	       974	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x40013d3	            0x751a	                           jne 0x40013ef	       974	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x40013d5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       975	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x40013da	    0x48c740300000	               mov qword [rax + 0x30], 0	       975	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x40013e2	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       976	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x40013ea	      0xe9aff1ffff	                           jmp 0x400059e	       977	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x40013ef	        0x418d42ff	                      lea eax, [r10 - 1]	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013f3	    0x410fb7b44798	   movzx esi, word [r15 + rax*2 + 0x98] 	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013fc	          0x4489f7	                           mov edi, r14d	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x40013ff	          0x83e703	                              and edi, 3	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001402	          0x83c703	                              add edi, 3	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001405	        0x49c1ee02	                              shr r14, 2	       981	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001409	          0x83eb02	                              sub ebx, 2	       981	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x400140c	      0xe9d9000000	                           jmp 0x40014ea	       981	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001411	      0x664183fb11	                          cmp r11w, 0x11	       983	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001416	            0x7421	                            je 0x4001439	       983	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001418	        0x440fb6d9	                          movzx r11d, cl	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x400141c	        0x418d7b07	                      lea edi, [r11 + 7]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001420	            0x39df	                            cmp edi, ebx	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001422	     0xf86a1000000	                           jbe 0x40014c9	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001428	            0x85ed	                           test ebp, ebp	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x400142a	            0x757f	                           jne 0x40014ab	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x400142c	          0x4d89fd	                            mov r13, r15	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x400142f	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001434	      0xe99d0b0000	                           jmp 0x4001fd6	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4001439	        0x440fb6d9	                          movzx r11d, cl	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400143d	        0x418d7b03	                      lea edi, [r11 + 3]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001441	            0x39df	                            cmp edi, ebx	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001443	            0x7639	                           jbe 0x400147e	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001445	            0x85ed	                           test ebp, ebp	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001447	            0x7517	                           jne 0x4001460	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001449	          0x4d89fd	                            mov r13, r15	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400144c	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001451	      0xe9800b0000	                           jmp 0x4001fd6	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001456	            0x85ed	                           test ebp, ebp	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001458	     0xf84e50a0000	                            je 0x4001f43	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400145e	            0xeb02	                           jmp 0x4001462	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001460	            0x89d9	                            mov ecx, ebx	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001462	          0x83ed01	                              sub ebp, 1	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001465	        0x4983c401	                              add r12, 1	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001469	    0x410fb67424ff	               movzx esi, byte [r12 - 1]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400146f	          0x48d3e6	                             shl rsi, cl	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001472	          0x4901f6	                            add r14, rsi	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001475	          0x83c108	                              add ecx, 8	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001478	            0x39f9	                            cmp ecx, edi	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400147a	            0x72da	                            jb 0x4001456	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400147c	            0x89cb	                            mov ebx, ecx	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400147e	          0x4489d9	                           mov ecx, r11d	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001481	          0x49d3ee	                             shr r14, cl	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001484	          0x4489f7	                           mov edi, r14d	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001487	          0x83e707	                              and edi, 7	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400148a	          0x83c703	                              add edi, 3	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400148d	        0x49c1ee03	                              shr r14, 3	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001491	      0xbefdffffff	                     mov esi, 0xfffffffd	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001496	            0x29c6	                            sub esi, eax	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001498	             0x1f3	                            add ebx, esi	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400149a	      0xbe00000000	                              mov esi, 0	       986	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x400149f	            0xeb49	                           jmp 0x40014ea	       986	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x40014a1	            0x85ed	                           test ebp, ebp	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014a3	     0xf84a90a0000	                            je 0x4001f52	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014a9	            0xeb02	                           jmp 0x40014ad	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014ab	            0x89d9	                            mov ecx, ebx	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014ad	          0x83ed01	                              sub ebp, 1	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014b0	        0x4983c401	                              add r12, 1	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014b4	    0x410fb67424ff	               movzx esi, byte [r12 - 1]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014ba	          0x48d3e6	                             shl rsi, cl	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014bd	          0x4901f6	                            add r14, rsi	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014c0	          0x83c108	                              add ecx, 8	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014c3	            0x39f9	                            cmp ecx, edi	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014c5	            0x72da	                            jb 0x40014a1	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014c7	            0x89cb	                            mov ebx, ecx	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014c9	          0x4489d9	                           mov ecx, r11d	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014cc	          0x49d3ee	                             shr r14, cl	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014cf	          0x4489f7	                           mov edi, r14d	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014d2	          0x83e77f	                           and edi, 0x7f	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014d5	          0x83c70b	                            add edi, 0xb	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014d8	        0x49c1ee07	                              shr r14, 7	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014dc	      0xbef9ffffff	                     mov esi, 0xfffffff9	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014e1	            0x29c6	                            sub esi, eax	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014e3	             0x1f3	                            add ebx, esi	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014e5	      0xbe00000000	                              mov esi, 0	       993	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x40014ea	        0x428d0c17	                    lea ecx, [rdi + r10]	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x40014ee	          0x4139c8	                            cmp r8d, ecx	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x40014f1	            0x7206	                            jb 0x40014f9	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x40014f3	            0x85ff	                           test edi, edi	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x40014f5	            0x751c	                           jne 0x4001513	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x40014f7	            0xeb36	                           jmp 0x400152f	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x40014f9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       998	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x40014fe	    0x48c740300000	               mov qword [rax + 0x30], 0	       998	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001506	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	       999	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x400150e	      0xe98bf0ffff	                           jmp 0x400059e	      1000	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4001513	          0x4489d0	                           mov eax, r10d	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001516	    0x664189b44798	       mov word [r15 + rax*2 + 0x98], si	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x400151f	        0x4183c201	                             add r10d, 1	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001523	          0x4139ca	                           cmp r10d, ecx	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001526	            0x75eb	                           jne 0x4001513	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4001528	    0x41898f8c0000	             mov dword [r15 + 0x8c], ecx	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x400152f	    0x458b978c0000	           mov r10d, dword [r15 + 0x8c] 	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001536	          0x4539c2	                           cmp r10d, r8d	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4001539	            0x7332	                           jae 0x400156d	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x400153b	        0x498b7f68	            mov rdi, qword [r15 + 0x68] 	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400153f	        0x418b4f78	            mov ecx, dword [r15 + 0x78] 	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001543	          0x4489ce	                            mov esi, r9d	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001546	            0xd3e6	                             shl esi, cl	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001548	          0x83ee01	                              sub esi, 1	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400154b	            0x89f0	                            mov eax, esi	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400154d	          0x4421f0	                           and eax, r14d	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001550	        0x488d0487	                  lea rax, [rdi + rax*4]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001554	         0xfb64801	               movzx ecx, byte [rax + 1]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4001558	      0x440fb75802	              movzx r11d, word [rax + 2]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x400155d	           0xfb6c1	                           movzx eax, cl	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001560	            0x39c3	                            cmp ebx, eax	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001562	     0xf8296fdffff	                            jb 0x40012fe	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4001568	      0xe9e3fdffff	                           jmp 0x4001350	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x400156d	    0x41817f08513f	            cmp dword [r15 + 8], 0x3f51 	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4001575	     0xf8423f0ffff	                            je 0x400059e	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x400157b	    0x664183bf9802	               cmp word [r15 + 0x298], 0	      1011	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001584	            0x751a	                           jne 0x40015a0	      1011	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001586	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1012	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x400158b	    0x48c740300000	               mov qword [rax + 0x30], 0	      1012	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001593	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	      1013	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x400159b	      0xe9feefffff	                           jmp 0x400059e	      1014	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x40015a0	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x40015a5	    0x498987900000	             mov qword [r15 + 0x90], rax	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x40015ac	        0x49894768	             mov qword [r15 + 0x68], rax	      1021	inflate.c	FUNCTION_7	SWITCH_1
0x40015b0	    0x41c747780900	               mov dword [r15 + 0x78], 9	      1022	inflate.c	FUNCTION_7	SWITCH_1
0x40015b8	    0x498d87900000	                   lea rax, [r15 + 0x90]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015bf	      0x4889442448	             mov qword [rsp + 0x48], rax	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015c4	    0x4d8daf980000	                   lea r13, [r15 + 0x98]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015cb	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015d0	        0x4d8d4778	                    lea r8, [r15 + 0x78]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015d4	          0x4889c1	                            mov rcx, rax	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015d7	          0x4c89ee	                            mov rsi, r13	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015da	      0xbf01000000	                              mov edi, 1	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015df	      0xe800000000	                          call 0x40015e4	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015e4	        0x89442428	             mov dword [rsp + 0x28], eax	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x40015e8	            0x85c0	                           test eax, eax	      1025	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x40015ea	            0x741a	                            je 0x4001606	      1025	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x40015ec	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1026	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x40015f1	    0x48c740300000	               mov qword [rax + 0x30], 0	      1026	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x40015f9	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	      1027	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001601	      0xe998efffff	                           jmp 0x400059e	      1028	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4001606	    0x498b87900000	            mov rax, qword [r15 + 0x90] 	      1030	inflate.c	FUNCTION_7	SWITCH_1
0x400160d	        0x49894770	             mov qword [r15 + 0x70], rax	      1030	inflate.c	FUNCTION_7	SWITCH_1
0x4001611	    0x41c7477c0600	               mov dword [r15 + 0x7c], 6	      1031	inflate.c	FUNCTION_7	SWITCH_1
0x4001619	    0x418b97880000	            mov edx, dword [r15 + 0x88] 	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001620	    0x418b87840000	            mov eax, dword [r15 + 0x84] 	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001627	      0x498d744500	                  lea rsi, [r13 + rax*2]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x400162c	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001631	        0x4d8d477c	                    lea r8, [r15 + 0x7c]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001635	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x400163a	      0xbf02000000	                              mov edi, 2	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x400163f	      0xe800000000	                          call 0x4001644	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001644	        0x89442428	             mov dword [rsp + 0x28], eax	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4001648	            0x85c0	                           test eax, eax	      1034	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x400164a	            0x741a	                            je 0x4001666	      1034	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x400164c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1035	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001651	    0x48c740300000	               mov qword [rax + 0x30], 0	      1035	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001659	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	      1036	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001661	      0xe938efffff	                           jmp 0x400059e	      1037	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4001666	    0x41c74708473f	            mov dword [r15 + 8], 0x3f47 	      1040	inflate.c	FUNCTION_7	SWITCH_1
0x400166e	      0x837c241006	               cmp dword [rsp + 0x10], 6	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x4001673	     0xf84e5080000	                            je 0x4001f5e	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x4001679	    0x41c74708483f	            mov dword [r15 + 8], 0x3f48 	      1043	inflate.c	FUNCTION_7	SWITCH_1
0x4001681	          0x83fd05	                              cmp ebp, 5	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001684	            0x7679	                           jbe 0x40016ff	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001686	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400168a	    0x81fe01010000	                          cmp esi, 0x101	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001690	            0x766d	                           jbe 0x40016ff	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001692	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001697	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400169c	        0x48897818	             mov qword [rax + 0x18], rdi	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016a0	          0x897020	             mov dword [rax + 0x20], esi	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016a3	          0x4c8920	                    mov qword [rax], r12	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016a6	          0x896808	                mov dword [rax + 8], ebp	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016a9	        0x4d897750	             mov qword [r15 + 0x50], r14	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016ad	        0x41895f58	             mov dword [r15 + 0x58], ebx	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016b1	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x40016b5	          0x4889c3	                            mov rbx, rax	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x40016b8	          0x4889c7	                            mov rdi, rax	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x40016bb	      0xe800000000	                          call 0x40016c0	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x40016c0	          0x4889d8	                            mov rax, rbx	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016c3	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016c7	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016cc	          0x8b5820	            mov ebx, dword [rax + 0x20] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016cf	        0x895c2414	             mov dword [rsp + 0x14], ebx	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016d3	          0x4c8b20	                    mov r12, qword [rax]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016d6	          0x8b6808	                mov ebp, dword [rax + 8]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016d9	        0x4d8b7750	            mov r14, qword [r15 + 0x50] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016dd	        0x418b5f58	            mov ebx, dword [r15 + 0x58] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x40016e1	    0x41817f083f3f	            cmp dword [r15 + 8], 0x3f3f 	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x40016e9	     0xf85afeeffff	                           jne 0x400059e	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x40016ef	    0x41c787ec1b00	   mov dword [r15 + 0x1bec], 0xffffffff 	      1050	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x40016fa	      0xe99feeffff	                           jmp 0x400059e	      1050	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x40016ff	    0x41c787ec1b00	            mov dword [r15 + 0x1bec], 0 	      1053	inflate.c	FUNCTION_7	SWITCH_1
0x400170a	        0x498b7f68	            mov rdi, qword [r15 + 0x68] 	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400170e	        0x418b4f78	            mov ecx, dword [r15 + 0x78] 	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001712	      0xbe01000000	                              mov esi, 1	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001717	            0xd3e6	                             shl esi, cl	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001719	          0x83ee01	                              sub esi, 1	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400171c	            0x89f0	                            mov eax, esi	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400171e	          0x4421f0	                           and eax, r14d	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001721	        0x488d0487	                  lea rax, [rdi + rax*4]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001725	        0x440fb600	                   movzx r8d, byte [rax]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001729	         0xfb65001	               movzx edx, byte [rax + 1]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400172d	      0x440fb74802	               movzx r9d, word [rax + 2]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001732	           0xfb6c2	                           movzx eax, dl	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001735	            0x39c3	                            cmp ebx, eax	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001737	            0x7352	                           jae 0x400178b	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001739	            0x85ed	                           test ebp, ebp	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400173b	            0x7517	                           jne 0x4001754	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400173d	          0x4d89fd	                            mov r13, r15	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001740	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001745	      0xe98c080000	                           jmp 0x4001fd6	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400174a	            0x85ed	                           test ebp, ebp	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400174c	     0xf8416080000	                            je 0x4001f68	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001752	            0xeb02	                           jmp 0x4001756	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001754	            0x89d9	                            mov ecx, ebx	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001756	          0x83ed01	                              sub ebp, 1	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001759	        0x4983c401	                              add r12, 1	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400175d	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001763	          0x48d3e0	                             shl rax, cl	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001766	          0x4901c6	                            add r14, rax	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001769	          0x83c108	                              add ecx, 8	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400176c	            0x89f0	                            mov eax, esi	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400176e	          0x4421f0	                           and eax, r14d	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001771	        0x488d0487	                  lea rax, [rdi + rax*4]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001775	        0x440fb600	                   movzx r8d, byte [rax]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001779	         0xfb65001	               movzx edx, byte [rax + 1]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400177d	      0x440fb74802	               movzx r9d, word [rax + 2]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4001782	           0xfb6c2	                           movzx eax, dl	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001785	            0x39c8	                            cmp eax, ecx	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001787	            0x77c1	                            ja 0x400174a	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4001789	            0x89cb	                            mov ebx, ecx	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x400178b	          0x4584c0	                           test r8b, r8b	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400178e	     0xf84b2000000	                            je 0x4001846	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4001794	        0x41f6c0f0	                          test r8b, 0xf0	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4001798	     0xf85a8000000	                           jne 0x4001846	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400179e	        0x450fb7d9	                         movzx r11d, r9w	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017a2	           0xfb6f2	                           movzx esi, dl	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017a5	        0x418d0c30	                     lea ecx, [r8 + rsi]	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017a9	    0x41ba01000000	                             mov r10d, 1	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017af	          0x41d3e2	                            shl r10d, cl	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017b2	        0x4183ea01	                             sub r10d, 1	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017b6	          0x4589d0	                           mov r8d, r10d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017b9	          0x4521f0	                           and r8d, r14d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017bc	            0x89d1	                            mov ecx, edx	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017be	          0x41d3e8	                             shr r8d, cl	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017c1	        0x438d1418	                     lea edx, [r8 + r11]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017c5	        0x488d0c97	                  lea rcx, [rdi + rdx*4]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017c9	        0x440fb601	                   movzx r8d, byte [rcx]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017cd	         0xfb65101	               movzx edx, byte [rcx + 1]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017d1	      0x440fb74902	               movzx r9d, word [rcx + 2]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017d6	           0xfb6ca	                           movzx ecx, dl	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40017d9	             0x1f1	                            add ecx, esi	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40017db	            0x39d9	                            cmp ecx, ebx	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40017dd	            0x7659	                           jbe 0x4001838	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x40017df	            0x85ed	                           test ebp, ebp	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017e1	            0x7515	                           jne 0x40017f8	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017e3	          0x4d89fd	                            mov r13, r15	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017e6	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017eb	      0xe9e6070000	                           jmp 0x4001fd6	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017f0	            0x85ed	                           test ebp, ebp	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017f2	     0xf847c070000	                            je 0x4001f74	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017f8	          0x83ed01	                              sub ebp, 1	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017fb	        0x4983c401	                              add r12, 1	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40017ff	    0x410fb65424ff	               movzx edx, byte [r12 - 1]	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4001805	            0x89d9	                            mov ecx, ebx	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4001807	          0x48d3e2	                             shl rdx, cl	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400180a	          0x4901d6	                            add r14, rdx	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400180d	          0x83c308	                              add ebx, 8	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4001810	          0x4489d2	                           mov edx, r10d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4001813	          0x4421f2	                           and edx, r14d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4001816	            0x89f1	                            mov ecx, esi	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4001818	            0xd3ea	                             shr edx, cl	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400181a	        0x428d141a	                    lea edx, [rdx + r11]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400181e	        0x488d0c97	                  lea rcx, [rdi + rdx*4]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4001822	        0x440fb601	                   movzx r8d, byte [rcx]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4001826	         0xfb65101	               movzx edx, byte [rcx + 1]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400182a	      0x440fb74902	               movzx r9d, word [rcx + 2]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400182f	           0xfb6ca	                           movzx ecx, dl	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x4001832	             0x1f1	                            add ecx, esi	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x4001834	            0x39d9	                            cmp ecx, ebx	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x4001836	            0x77b8	                            ja 0x40017f0	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x4001838	            0x89f1	                            mov ecx, esi	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400183a	          0x49d3ee	                             shr r14, cl	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400183d	            0x29c3	                            sub ebx, eax	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400183f	    0x4189b7ec1b00	          mov dword [r15 + 0x1bec], esi 	      1068	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4001846	           0xfb6c2	                           movzx eax, dl	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x4001849	            0x89d1	                            mov ecx, edx	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x400184b	          0x49d3ee	                             shr r14, cl	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x400184e	            0x29c3	                            sub ebx, eax	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x4001850	    0x410187ec1b00	           add dword [r15 + 0x1bec], eax	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x4001857	        0x450fb7c9	                          movzx r9d, r9w	      1072	inflate.c	FUNCTION_7	SWITCH_1
0x400185b	        0x45894f5c	             mov dword [r15 + 0x5c], r9d	      1072	inflate.c	FUNCTION_7	SWITCH_1
0x400185f	          0x4584c0	                           test r8b, r8b	      1073	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4001862	            0x750d	                           jne 0x4001871	      1073	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4001864	    0x41c747084d3f	            mov dword [r15 + 8], 0x3f4d 	      1077	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x400186c	      0xe92dedffff	                           jmp 0x400059e	      1078	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4001871	        0x41f6c020	                          test r8b, 0x20	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4001875	            0x7418	                            je 0x400188f	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4001877	    0x41c787ec1b00	   mov dword [r15 + 0x1bec], 0xffffffff 	      1082	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4001882	    0x41c747083f3f	            mov dword [r15 + 8], 0x3f3f 	      1083	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400188a	      0xe90fedffff	                           jmp 0x400059e	      1084	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400188f	        0x41f6c040	                          test r8b, 0x40	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001893	            0x741a	                            je 0x40018af	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001895	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1087	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x400189a	    0x48c740300000	               mov qword [rax + 0x30], 0	      1087	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40018a2	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	      1088	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40018aa	      0xe9efecffff	                           jmp 0x400059e	      1089	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x40018af	        0x4183e00f	                            and r8d, 0xf	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x40018b3	        0x45894764	             mov dword [r15 + 0x64], r8d	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x40018b7	    0x41c74708493f	            mov dword [r15 + 8], 0x3f49 	      1092	inflate.c	FUNCTION_7	SWITCH_1
0x40018bf	        0x418b5764	            mov edx, dword [r15 + 0x64] 	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018c3	            0x85d2	                           test edx, edx	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018c5	            0x745c	                            je 0x4001923	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018c7	            0x39d3	                            cmp ebx, edx	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018c9	            0x7339	                           jae 0x4001904	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018cb	            0x85ed	                           test ebp, ebp	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018cd	            0x7517	                           jne 0x40018e6	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018cf	          0x4d89fd	                            mov r13, r15	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018d2	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018d7	      0xe9fa060000	                           jmp 0x4001fd6	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018dc	            0x85ed	                           test ebp, ebp	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018de	     0xf849a060000	                            je 0x4001f7e	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018e4	            0xeb02	                           jmp 0x40018e8	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018e6	            0x89d9	                            mov ecx, ebx	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018e8	          0x83ed01	                              sub ebp, 1	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018eb	        0x4983c401	                              add r12, 1	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018ef	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018f5	          0x48d3e0	                             shl rax, cl	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018f8	          0x4901c6	                            add r14, rax	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018fb	          0x83c108	                              add ecx, 8	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40018fe	            0x39ca	                            cmp edx, ecx	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001900	            0x77da	                            ja 0x40018dc	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001902	            0x89cb	                            mov ebx, ecx	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001904	      0xb801000000	                              mov eax, 1	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001909	            0x89d1	                            mov ecx, edx	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400190b	            0xd3e0	                             shl eax, cl	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400190d	          0x83e801	                              sub eax, 1	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001910	          0x4421f0	                           and eax, r14d	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001913	        0x4101475c	             add dword [r15 + 0x5c], eax	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001917	          0x49d3ee	                             shr r14, cl	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400191a	            0x29d3	                            sub ebx, edx	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x400191c	    0x410197ec1b00	           add dword [r15 + 0x1bec], edx	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001923	        0x418b475c	            mov eax, dword [r15 + 0x5c] 	      1101	inflate.c	FUNCTION_7	SWITCH_1
0x4001927	    0x418987f01b00	          mov dword [r15 + 0x1bf0], eax 	      1101	inflate.c	FUNCTION_7	SWITCH_1
0x400192e	    0x41c747084a3f	            mov dword [r15 + 8], 0x3f4a 	      1102	inflate.c	FUNCTION_7	SWITCH_1
0x4001936	        0x498b7f70	            mov rdi, qword [r15 + 0x70] 	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400193a	        0x418b4f7c	            mov ecx, dword [r15 + 0x7c] 	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400193e	      0xbe01000000	                              mov esi, 1	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001943	            0xd3e6	                             shl esi, cl	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001945	          0x83ee01	                              sub esi, 1	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001948	            0x89f0	                            mov eax, esi	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400194a	          0x4421f0	                           and eax, r14d	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400194d	        0x488d0487	                  lea rax, [rdi + rax*4]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001951	        0x440fb600	                   movzx r8d, byte [rax]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001955	         0xfb65001	               movzx edx, byte [rax + 1]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001959	      0x440fb74802	               movzx r9d, word [rax + 2]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400195e	           0xfb6c2	                           movzx eax, dl	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4001961	            0x39c3	                            cmp ebx, eax	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4001963	            0x7352	                           jae 0x40019b7	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4001965	            0x85ed	                           test ebp, ebp	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001967	            0x7517	                           jne 0x4001980	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001969	          0x4d89fd	                            mov r13, r15	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400196c	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001971	      0xe960060000	                           jmp 0x4001fd6	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001976	            0x85ed	                           test ebp, ebp	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001978	     0xf840c060000	                            je 0x4001f8a	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400197e	            0xeb02	                           jmp 0x4001982	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001980	            0x89d9	                            mov ecx, ebx	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001982	          0x83ed01	                              sub ebp, 1	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001985	        0x4983c401	                              add r12, 1	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001989	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400198f	          0x48d3e0	                             shl rax, cl	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001992	          0x4901c6	                            add r14, rax	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001995	          0x83c108	                              add ecx, 8	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4001998	            0x89f0	                            mov eax, esi	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400199a	          0x4421f0	                           and eax, r14d	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x400199d	        0x488d0487	                  lea rax, [rdi + rax*4]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40019a1	        0x440fb600	                   movzx r8d, byte [rax]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40019a5	         0xfb65001	               movzx edx, byte [rax + 1]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40019a9	      0x440fb74802	               movzx r9d, word [rax + 2]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40019ae	           0xfb6c2	                           movzx eax, dl	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40019b1	            0x39c8	                            cmp eax, ecx	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40019b3	            0x77c1	                            ja 0x4001976	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40019b5	            0x89cb	                            mov ebx, ecx	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40019b7	        0x41f6c0f0	                          test r8b, 0xf0	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x40019bb	     0xf85a8000000	                           jne 0x4001a69	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x40019c1	        0x450fb7d9	                         movzx r11d, r9w	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019c5	           0xfb6f2	                           movzx esi, dl	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019c8	        0x418d0c30	                     lea ecx, [r8 + rsi]	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019cc	    0x41ba01000000	                             mov r10d, 1	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019d2	          0x41d3e2	                            shl r10d, cl	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019d5	        0x4183ea01	                             sub r10d, 1	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019d9	          0x4589d0	                           mov r8d, r10d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019dc	          0x4521f0	                           and r8d, r14d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019df	            0x89d1	                            mov ecx, edx	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019e1	          0x41d3e8	                             shr r8d, cl	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019e4	        0x438d1418	                     lea edx, [r8 + r11]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019e8	        0x488d0c97	                  lea rcx, [rdi + rdx*4]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019ec	        0x440fb601	                   movzx r8d, byte [rcx]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019f0	         0xfb65101	               movzx edx, byte [rcx + 1]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019f4	      0x440fb74902	               movzx r9d, word [rcx + 2]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x40019f9	           0xfb6ca	                           movzx ecx, dl	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40019fc	             0x1f1	                            add ecx, esi	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x40019fe	            0x39d9	                            cmp ecx, ebx	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4001a00	            0x7659	                           jbe 0x4001a5b	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4001a02	            0x85ed	                           test ebp, ebp	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a04	            0x7515	                           jne 0x4001a1b	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a06	          0x4d89fd	                            mov r13, r15	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a09	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a0e	      0xe9c3050000	                           jmp 0x4001fd6	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a13	            0x85ed	                           test ebp, ebp	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a15	     0xf847b050000	                            je 0x4001f96	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a1b	          0x83ed01	                              sub ebp, 1	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a1e	        0x4983c401	                              add r12, 1	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a22	    0x410fb65424ff	               movzx edx, byte [r12 - 1]	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a28	            0x89d9	                            mov ecx, ebx	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a2a	          0x48d3e2	                             shl rdx, cl	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a2d	          0x4901d6	                            add r14, rdx	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a30	          0x83c308	                              add ebx, 8	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a33	          0x4489d2	                           mov edx, r10d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a36	          0x4421f2	                           and edx, r14d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a39	            0x89f1	                            mov ecx, esi	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a3b	            0xd3ea	                             shr edx, cl	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a3d	        0x428d141a	                    lea edx, [rdx + r11]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a41	        0x488d0c97	                  lea rcx, [rdi + rdx*4]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a45	        0x440fb601	                   movzx r8d, byte [rcx]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a49	         0xfb65101	               movzx edx, byte [rcx + 1]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a4d	      0x440fb74902	               movzx r9d, word [rcx + 2]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4001a52	           0xfb6ca	                           movzx ecx, dl	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4001a55	             0x1f1	                            add ecx, esi	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4001a57	            0x39d9	                            cmp ecx, ebx	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4001a59	            0x77b8	                            ja 0x4001a13	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4001a5b	            0x89f1	                            mov ecx, esi	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4001a5d	          0x49d3ee	                             shr r14, cl	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4001a60	            0x29c3	                            sub ebx, eax	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4001a62	    0x4101b7ec1b00	           add dword [r15 + 0x1bec], esi	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4001a69	           0xfb6c2	                           movzx eax, dl	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4001a6c	            0x89d1	                            mov ecx, edx	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4001a6e	          0x49d3ee	                             shr r14, cl	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4001a71	            0x29c3	                            sub ebx, eax	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4001a73	    0x410187ec1b00	           add dword [r15 + 0x1bec], eax	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x4001a7a	        0x41f6c040	                          test r8b, 0x40	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a7e	            0x741a	                            je 0x4001a9a	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a80	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1123	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a85	    0x48c740300000	               mov qword [rax + 0x30], 0	      1123	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a8d	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	      1124	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a95	      0xe904ebffff	                           jmp 0x400059e	      1125	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a9a	        0x450fb7c9	                          movzx r9d, r9w	      1127	inflate.c	FUNCTION_7	SWITCH_1
0x4001a9e	        0x45894f60	             mov dword [r15 + 0x60], r9d	      1127	inflate.c	FUNCTION_7	SWITCH_1
0x4001aa2	        0x4183e00f	                            and r8d, 0xf	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x4001aa6	        0x45894764	             mov dword [r15 + 0x64], r8d	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x4001aaa	    0x41c747084b3f	            mov dword [r15 + 8], 0x3f4b 	      1129	inflate.c	FUNCTION_7	SWITCH_1
0x4001ab2	        0x418b5764	            mov edx, dword [r15 + 0x64] 	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ab6	            0x85d2	                           test edx, edx	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ab8	            0x745c	                            je 0x4001b16	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001aba	            0x39d3	                            cmp ebx, edx	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001abc	            0x7339	                           jae 0x4001af7	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001abe	            0x85ed	                           test ebp, ebp	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ac0	            0x7517	                           jne 0x4001ad9	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ac2	          0x4d89fd	                            mov r13, r15	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ac5	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001aca	      0xe907050000	                           jmp 0x4001fd6	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001acf	            0x85ed	                           test ebp, ebp	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ad1	     0xf84c9040000	                            je 0x4001fa0	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ad7	            0xeb02	                           jmp 0x4001adb	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ad9	            0x89d9	                            mov ecx, ebx	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001adb	          0x83ed01	                              sub ebp, 1	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ade	        0x4983c401	                              add r12, 1	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ae2	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001ae8	          0x48d3e0	                             shl rax, cl	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001aeb	          0x4901c6	                            add r14, rax	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001aee	          0x83c108	                              add ecx, 8	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001af1	            0x39ca	                            cmp edx, ecx	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001af3	            0x77da	                            ja 0x4001acf	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001af5	            0x89cb	                            mov ebx, ecx	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001af7	      0xb801000000	                              mov eax, 1	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001afc	            0x89d1	                            mov ecx, edx	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001afe	            0xd3e0	                             shl eax, cl	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001b00	          0x83e801	                              sub eax, 1	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001b03	          0x4421f0	                           and eax, r14d	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001b06	        0x41014760	             add dword [r15 + 0x60], eax	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001b0a	          0x49d3ee	                             shr r14, cl	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001b0d	            0x29d3	                            sub ebx, edx	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001b0f	    0x410197ec1b00	           add dword [r15 + 0x1bec], edx	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4001b16	    0x41c747084c3f	            mov dword [r15 + 8], 0x3f4c 	      1145	inflate.c	FUNCTION_7	SWITCH_1
0x4001b1e	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x4001b22	            0x85c0	                           test eax, eax	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x4001b24	     0xf8482040000	                            je 0x4001fac	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x4001b2a	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1148	inflate.c	FUNCTION_7	SWITCH_1
0x4001b2e	            0x29c2	                            sub edx, eax	      1148	inflate.c	FUNCTION_7	SWITCH_1
0x4001b30	        0x418b4760	            mov eax, dword [r15 + 0x60] 	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x4001b34	            0x39c2	                            cmp edx, eax	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x4001b36	            0x7353	                           jae 0x4001b8b	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x4001b38	            0x29d0	                            sub eax, edx	      1150	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x4001b3a	        0x413b4740	            cmp eax, dword [r15 + 0x40] 	      1151	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85
0x4001b3e	            0x7624	                           jbe 0x4001b64	      1151	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85
0x4001b40	    0x4183bfe81b00	             cmp dword [r15 + 0x1be8], 0	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001b48	            0x741a	                            je 0x4001b64	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001b4a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1153	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001b4f	    0x48c740300000	               mov qword [rax + 0x30], 0	      1153	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001b57	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	      1154	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001b5f	      0xe93aeaffff	                           jmp 0x400059e	      1155	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001b64	        0x418b7744	            mov esi, dword [r15 + 0x44] 	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4001b68	            0x39f0	                            cmp eax, esi	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4001b6a	            0x760e	                           jbe 0x4001b7a	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4001b6c	            0x29f0	                            sub eax, esi	      1172	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4001b6e	        0x418b773c	            mov esi, dword [r15 + 0x3c] 	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4001b72	            0x29c6	                            sub esi, eax	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4001b74	        0x49037748	             add rsi, qword [r15 + 0x48]	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4001b78	            0xeb06	                           jmp 0x4001b80	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4001b7a	            0x29c6	                            sub esi, eax	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4001b7c	        0x49037748	             add rsi, qword [r15 + 0x48]	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4001b80	        0x418b575c	            mov edx, dword [r15 + 0x5c] 	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4001b84	            0x39d0	                            cmp eax, edx	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4001b86	           0xf47c2	                          cmova eax, edx	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4001b89	            0xeb0e	                           jmp 0x4001b99	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4001b8b	            0x89c0	                            mov eax, eax	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001b8d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001b92	          0x4829c6	                            sub rsi, rax	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001b95	        0x418b475c	            mov eax, dword [r15 + 0x5c] 	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001b99	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001b9d	            0x39c7	                            cmp edi, eax	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001b9f	           0xf46c7	                         cmovbe eax, edi	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001ba2	            0x29c7	                            sub edi, eax	      1184	inflate.c	FUNCTION_7	SWITCH_1
0x4001ba4	        0x897c2414	             mov dword [rsp + 0x14], edi	      1184	inflate.c	FUNCTION_7	SWITCH_1
0x4001ba8	        0x4129475c	             sub dword [r15 + 0x5c], eax	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001bac	          0x8d48ff	                      lea ecx, [rax - 1]	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001baf	        0x4883c101	                              add rcx, 1	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001bb3	      0xb800000000	                              mov eax, 0	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001bb8	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001bbd	         0xfb61406	             movzx edx, byte [rsi + rax]	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001bc1	          0x881407	                mov byte [rdi + rax], dl	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001bc4	        0x4883c001	                              add rax, 1	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001bc8	          0x4839c8	                            cmp rax, rcx	      1188	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001bcb	            0x75f0	                           jne 0x4001bbd	      1188	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001bcd	      0x48014c2420	            add qword [rsp + 0x20], rcx 	      1188	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001bd2	      0x41837f5c00	               cmp dword [r15 + 0x5c], 0	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x4001bd7	     0xf85c1e9ffff	                           jne 0x400059e	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x4001bdd	    0x41c74708483f	            mov dword [r15 + 8], 0x3f48 	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x4001be5	      0xe9b4e9ffff	                           jmp 0x400059e	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x4001bea	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x4001bee	            0x85f6	                           test esi, esi	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x4001bf0	     0xf84c0030000	                            je 0x4001fb6	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x4001bf6	        0x418b475c	            mov eax, dword [r15 + 0x5c] 	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x4001bfa	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x4001bff	            0x8807	                      mov byte [rdi], al	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x4001c01	            0x89f0	                            mov eax, esi	      1194	inflate.c	FUNCTION_7	SWITCH_1
0x4001c03	          0x83e801	                              sub eax, 1	      1194	inflate.c	FUNCTION_7	SWITCH_1
0x4001c06	        0x89442414	             mov dword [rsp + 0x14], eax	      1194	inflate.c	FUNCTION_7	SWITCH_1
0x4001c0a	    0x41c74708483f	            mov dword [r15 + 8], 0x3f48 	      1195	inflate.c	FUNCTION_7	SWITCH_1
0x4001c12	        0x488d4701	                      lea rax, [rdi + 1]	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x4001c16	      0x4889442420	             mov qword [rsp + 0x20], rax	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x4001c1b	      0xe97ee9ffff	                           jmp 0x400059e	      1196	inflate.c	FUNCTION_7	SWITCH_1
0x4001c20	      0x41837f1000	               cmp dword [r15 + 0x10], 0	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c25	     0xf842b010000	                            je 0x4001d56	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c2b	          0x83fb1f	                           cmp ebx, 0x1f	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c2e	            0x773a	                            ja 0x4001c6a	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c30	            0x85ed	                           test ebp, ebp	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c32	            0x7517	                           jne 0x4001c4b	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c34	          0x4d89fd	                            mov r13, r15	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c37	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c3c	      0xe995030000	                           jmp 0x4001fd6	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c41	            0x85ed	                           test ebp, ebp	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c43	     0xf8477030000	                            je 0x4001fc0	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c49	            0xeb02	                           jmp 0x4001c4d	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c4b	            0x89d9	                            mov ecx, ebx	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c4d	          0x83ed01	                              sub ebp, 1	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c50	        0x4983c401	                              add r12, 1	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c54	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c5a	          0x48d3e0	                             shl rax, cl	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c5d	          0x4901c6	                            add r14, rax	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c60	          0x83c108	                              add ecx, 8	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c63	          0x83f91f	                           cmp ecx, 0x1f	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c66	            0x76d9	                           jbe 0x4001c41	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c68	            0x89cb	                            mov ebx, ecx	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c6a	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1200	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c6e	        0x2b542414	             sub edx, dword [rsp + 0x14]	      1200	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c72	            0x89d0	                            mov eax, edx	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c74	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c79	        0x48014628	            add qword [rsi + 0x28], rax 	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c7d	        0x49014728	            add qword [r15 + 0x28], rax 	      1202	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001c81	      0x41f6471004	               test byte [r15 + 0x10], 4	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c86	            0x743c	                            je 0x4001cc4	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c88	            0x85d2	                           test edx, edx	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c8a	            0x7438	                            je 0x4001cc4	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c8c	      0x41837f1800	               cmp dword [r15 + 0x18], 0	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c91	            0x7413	                            je 0x4001ca6	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c93	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c98	          0x4829c6	                            sub rsi, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c9b	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001c9f	      0xe800000000	                          call 0x4001ca4	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001ca4	            0xeb11	                           jmp 0x4001cb7	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001ca6	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001cab	          0x4829c6	                            sub rsi, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001cae	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001cb2	      0xe800000000	                          call 0x4001cb7	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001cb7	        0x49894720	             mov qword [r15 + 0x20], rax	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001cbb	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001cc0	        0x48894660	             mov qword [rsi + 0x60], rax	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001cc4	      0x41f6471004	               test byte [r15 + 0x10], 4	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cc9	            0x7463	                            je 0x4001d2e	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001ccb	          0x4c89f0	                            mov rax, r14	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cce	      0x41837f1800	               cmp dword [r15 + 0x18], 0	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cd3	            0x7531	                           jne 0x4001d06	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cd5	          0x4c89f2	                            mov rdx, r14	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cd8	        0x48c1ea18	                           shr rdx, 0x18	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cdc	           0xfb6d2	                           movzx edx, dl	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cdf	        0x48c1e808	                              shr rax, 8	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001ce3	      0x2500ff0000	                         and eax, 0xff00	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001ce8	          0x4801c2	                            add rdx, rax	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001ceb	          0x4c89f0	                            mov rax, r14	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cee	      0x2500ff0000	                         and eax, 0xff00	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cf3	        0x48c1e008	                              shl rax, 8	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cf7	          0x4801c2	                            add rdx, rax	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cfa	          0x4c89f0	                            mov rax, r14	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001cfd	        0x48c1e018	                           shl rax, 0x18	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d01	            0x89c0	                            mov eax, eax	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d03	          0x4801d0	                            add rax, rdx	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d06	        0x493b4720	            cmp rax, qword [r15 + 0x20] 	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d0a	            0x7437	                            je 0x4001d43	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d0c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1212	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d11	    0x48c740300000	               mov qword [rax + 0x30], 0	      1212	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d19	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	      1213	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d21	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d25	        0x8944240c	              mov dword [rsp + 0xc], eax	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d29	      0xe970e8ffff	                           jmp 0x400059e	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d2e	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d32	        0x8944240c	              mov dword [rsp + 0xc], eax	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001d36	      0xbb00000000	                              mov ebx, 0	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001d3b	    0x41be00000000	                             mov r14d, 0	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001d41	            0xeb13	                           jmp 0x4001d56	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001d43	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001d47	        0x8944240c	              mov dword [rsp + 0xc], eax	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001d4b	      0xbb00000000	                              mov ebx, 0	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001d50	    0x41be00000000	                             mov r14d, 0	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001d56	    0x41c747084f3f	            mov dword [r15 + 8], 0x3f4f 	      1220	inflate.c	FUNCTION_7	SWITCH_1
0x4001d5e	      0x41837f1000	               cmp dword [r15 + 0x10], 0	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d63	     0xf8482000000	                            je 0x4001deb	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d69	      0x41837f1800	               cmp dword [r15 + 0x18], 0	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d6e	     0xf8481000000	                            je 0x4001df5	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d74	          0x83fb1f	                           cmp ebx, 0x1f	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d77	            0x773a	                            ja 0x4001db3	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d79	            0x85ed	                           test ebp, ebp	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d7b	            0x7517	                           jne 0x4001d94	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d7d	          0x4d89fd	                            mov r13, r15	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d80	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d85	      0xe94c020000	                           jmp 0x4001fd6	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d8a	            0x85ed	                           test ebp, ebp	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d8c	     0xf843a020000	                            je 0x4001fcc	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d92	            0xeb02	                           jmp 0x4001d96	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d94	            0x89d9	                            mov ecx, ebx	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d96	          0x83ed01	                              sub ebp, 1	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d99	        0x4983c401	                              add r12, 1	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001d9d	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001da3	          0x48d3e0	                             shl rax, cl	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001da6	          0x4901c6	                            add r14, rax	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001da9	          0x83c108	                              add ecx, 8	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001dac	          0x83f91f	                           cmp ecx, 0x1f	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001daf	            0x76d9	                           jbe 0x4001d8a	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001db1	            0x89cb	                            mov ebx, ecx	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001db3	        0x418b4728	            mov eax, dword [r15 + 0x28] 	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001db7	          0x4c39f0	                            cmp rax, r14	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001dba	            0x741a	                            je 0x4001dd6	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001dbc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1225	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001dc1	    0x48c740300000	               mov qword [rax + 0x30], 0	      1225	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001dc9	    0x41c74708513f	            mov dword [r15 + 8], 0x3f51 	      1226	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001dd1	      0xe9c8e7ffff	                           jmp 0x400059e	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001dd6	          0x4d89fd	                            mov r13, r15	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001dd9	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001dde	      0xbb00000000	                              mov ebx, 0	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001de3	    0x41be00000000	                             mov r14d, 0	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001de9	            0xeb12	                           jmp 0x4001dfd	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001deb	          0x4d89fd	                            mov r13, r15	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001dee	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001df3	            0xeb08	                           jmp 0x4001dfd	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001df5	          0x4d89fd	                            mov r13, r15	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001df8	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001dfd	    0x41c74508503f	            mov dword [r13 + 8], 0x3f50 	      1233	inflate.c	FUNCTION_7	SWITCH_1
0x4001e05	    0xc74424280100	               mov dword [rsp + 0x28], 1	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x4001e0d	      0xe9c4010000	                           jmp 0x4001fd6	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x4001e12	          0x4d89fd	                            mov r13, r15	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x4001e15	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x4001e1a	    0xc7442428fdff	     mov dword [rsp + 0x28], 0xfffffffd 	      1238	inflate.c	FUNCTION_7	SWITCH_1
0x4001e22	      0xe9af010000	                           jmp 0x4001fd6	      1238	inflate.c	FUNCTION_7	SWITCH_1
0x4001e27	          0x4d89fd	                            mov r13, r15	      1238	inflate.c	FUNCTION_7	SWITCH_1
0x4001e2a	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1238	inflate.c	FUNCTION_7	SWITCH_1
0x4001e2f	      0xbb00000000	                              mov ebx, 0	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e34	    0x41be00000000	                             mov r14d, 0	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e3a	      0xe997010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e3f	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e41	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e44	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e49	      0xe988010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e4e	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e50	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e53	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e58	      0xe979010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e5d	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e5f	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e62	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e67	      0xe96a010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e6c	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e6e	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e71	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e76	      0xe95b010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e7b	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e7d	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e80	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e85	      0xe94c010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e8a	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e8d	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e92	      0xe93f010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e97	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e9a	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001e9f	      0xe932010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ea4	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ea7	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001eac	      0xe925010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001eb1	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001eb3	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001eb6	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ebb	      0xe916010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ec0	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ec2	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ec5	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001eca	      0xe907010000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ecf	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ed2	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ed7	      0xe9fa000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001edc	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ede	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ee1	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ee6	      0xe9eb000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001eeb	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001eed	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ef0	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001ef5	      0xe9dc000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001efa	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001efd	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f02	      0xe9cf000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f07	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f09	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f0c	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f11	      0xe9c0000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f16	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f18	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f1b	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f20	      0xe9b1000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f25	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f27	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f2a	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f2f	      0xe9a2000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f34	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f36	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f39	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f3e	      0xe993000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f43	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f45	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f48	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f4d	      0xe984000000	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f52	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f54	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f57	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f5c	            0xeb78	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f5e	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f61	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f66	            0xeb6e	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f68	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f6a	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f6d	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f72	            0xeb62	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f74	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f77	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f7c	            0xeb58	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f7e	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f80	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f83	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f88	            0xeb4c	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f8a	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f8c	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f8f	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f94	            0xeb40	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f96	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f99	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001f9e	            0xeb36	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fa0	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fa2	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fa5	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001faa	            0xeb2a	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fac	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001faf	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fb4	            0xeb20	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fb6	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fb9	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fbe	            0xeb16	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fc0	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fc2	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fc5	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fca	            0xeb0a	                           jmp 0x4001fd6	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fcc	            0x89cb	                            mov ebx, ecx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fce	          0x4d89fd	                            mov r13, r15	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fd1	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001fd6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1254	inflate.c	FUNCTION_7
0x4001fdb	        0x49894718	             mov qword [r15 + 0x18], rax	      1254	inflate.c	FUNCTION_7
0x4001fdf	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1254	inflate.c	FUNCTION_7
0x4001fe3	        0x41894720	             mov dword [r15 + 0x20], eax	      1254	inflate.c	FUNCTION_7
0x4001fe7	          0x4d8927	                    mov qword [r15], r12	      1254	inflate.c	FUNCTION_7
0x4001fea	        0x41896f08	                mov dword [r15 + 8], ebp	      1254	inflate.c	FUNCTION_7
0x4001fee	        0x4d897550	             mov qword [r13 + 0x50], r14	      1254	inflate.c	FUNCTION_7
0x4001ff2	        0x41895d58	             mov dword [r13 + 0x58], ebx	      1254	inflate.c	FUNCTION_7
0x4001ff6	      0x41837d3c00	               cmp dword [r13 + 0x3c], 0	      1255	inflate.c	FUNCTION_7	IF_100
0x4001ffb	            0x7523	                           jne 0x4002020	      1255	inflate.c	FUNCTION_7	IF_100
0x4001ffd	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1255	inflate.c	FUNCTION_7	IF_100
0x4002001	        0x413b4720	            cmp eax, dword [r15 + 0x20] 	      1255	inflate.c	FUNCTION_7	IF_100
0x4002005	            0x7443	                            je 0x400204a	      1255	inflate.c	FUNCTION_7	IF_100
0x4002007	        0x418b4508	                mov eax, dword [r13 + 8]	      1255	inflate.c	FUNCTION_7	IF_100
0x400200b	      0x3d503f0000	                         cmp eax, 0x3f50	      1255	inflate.c	FUNCTION_7	IF_100
0x4002010	            0x7738	                            ja 0x400204a	      1255	inflate.c	FUNCTION_7	IF_100
0x4002012	      0x3d4d3f0000	                         cmp eax, 0x3f4d	      1256	inflate.c	FUNCTION_7	IF_100
0x4002017	            0x7607	                           jbe 0x4002020	      1256	inflate.c	FUNCTION_7	IF_100
0x4002019	      0x837c241004	               cmp dword [rsp + 0x10], 4	      1256	inflate.c	FUNCTION_7	IF_100
0x400201e	            0x742a	                            je 0x400204a	      1256	inflate.c	FUNCTION_7	IF_100
0x4002020	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002024	        0x412b5720	             sub edx, dword [r15 + 0x20]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002028	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x400202c	          0x4c89ff	                            mov rdi, r15	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x400202f	      0xe8c1e0ffff	                   call sym.updatewindow	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002034	            0x85c0	                           test eax, eax	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002036	            0x7412	                            je 0x400204a	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4002038	    0x41c74508523f	            mov dword [r13 + 8], 0x3f52 	      1258	inflate.c	FUNCTION_7	IF_100	IF_101
0x4002040	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1259	inflate.c	FUNCTION_7	IF_100	IF_101
0x4002045	      0xe9d7000000	                           jmp 0x4002121	      1259	inflate.c	FUNCTION_7	IF_100	IF_101
0x400204a	        0x8b5c2430	            mov ebx, dword [rsp + 0x30] 	      1261	inflate.c	FUNCTION_7
0x400204e	        0x412b5f08	                sub ebx, dword [r15 + 8]	      1261	inflate.c	FUNCTION_7
0x4002052	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	      1262	inflate.c	FUNCTION_7
0x4002056	        0x412b6f20	             sub ebp, dword [r15 + 0x20]	      1262	inflate.c	FUNCTION_7
0x400205a	            0x89d8	                            mov eax, ebx	      1263	inflate.c	FUNCTION_7
0x400205c	        0x49014710	            add qword [r15 + 0x10], rax 	      1263	inflate.c	FUNCTION_7
0x4002060	            0x89e8	                            mov eax, ebp	      1264	inflate.c	FUNCTION_7
0x4002062	        0x49014728	            add qword [r15 + 0x28], rax 	      1264	inflate.c	FUNCTION_7
0x4002066	        0x49014528	            add qword [r13 + 0x28], rax 	      1265	inflate.c	FUNCTION_7
0x400206a	      0x41f6451004	               test byte [r13 + 0x10], 4	      1266	inflate.c	FUNCTION_7	IF_102
0x400206f	            0x7439	                            je 0x40020aa	      1266	inflate.c	FUNCTION_7	IF_102
0x4002071	            0x85ed	                           test ebp, ebp	      1266	inflate.c	FUNCTION_7	IF_102
0x4002073	            0x7435	                            je 0x40020aa	      1266	inflate.c	FUNCTION_7	IF_102
0x4002075	      0x41837d1800	               cmp dword [r13 + 0x18], 0	      1268	inflate.c	FUNCTION_7	IF_102
0x400207a	            0x7414	                            je 0x4002090	      1268	inflate.c	FUNCTION_7	IF_102
0x400207c	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4002080	          0x4829c6	                            sub rsi, rax	      1268	inflate.c	FUNCTION_7	IF_102
0x4002083	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4002087	            0x89ea	                            mov edx, ebp	      1268	inflate.c	FUNCTION_7	IF_102
0x4002089	      0xe800000000	                          call 0x400208e	      1268	inflate.c	FUNCTION_7	IF_102
0x400208e	            0xeb12	                           jmp 0x40020a2	      1268	inflate.c	FUNCTION_7	IF_102
0x4002090	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4002094	          0x4829c6	                            sub rsi, rax	      1268	inflate.c	FUNCTION_7	IF_102
0x4002097	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      1268	inflate.c	FUNCTION_7	IF_102
0x400209b	            0x89ea	                            mov edx, ebp	      1268	inflate.c	FUNCTION_7	IF_102
0x400209d	      0xe800000000	                          call 0x40020a2	      1268	inflate.c	FUNCTION_7	IF_102
0x40020a2	        0x49894520	             mov qword [r13 + 0x20], rax	      1267	inflate.c	FUNCTION_7	IF_102
0x40020a6	        0x49894760	             mov qword [r15 + 0x60], rax	      1267	inflate.c	FUNCTION_7	IF_102
0x40020aa	        0x418b450c	              mov eax, dword [r13 + 0xc]	      1269	inflate.c	FUNCTION_7
0x40020ae	            0x85c0	                           test eax, eax	      1269	inflate.c	FUNCTION_7
0x40020b0	      0xba40000000	                           mov edx, 0x40	      1269	inflate.c	FUNCTION_7
0x40020b5	           0xf45c2	                         cmovne eax, edx	      1269	inflate.c	FUNCTION_7
0x40020b8	        0x41034558	             add eax, dword [r13 + 0x58]	      1269	inflate.c	FUNCTION_7
0x40020bc	        0x418b5508	                mov edx, dword [r13 + 8]	      1270	inflate.c	FUNCTION_7
0x40020c0	    0x81fa3f3f0000	                         cmp edx, 0x3f3f	      1270	inflate.c	FUNCTION_7
0x40020c6	            0x746b	                            je 0x4002133	      1270	inflate.c	FUNCTION_7
0x40020c8	    0x81fa473f0000	                         cmp edx, 0x3f47	      1271	inflate.c	FUNCTION_7
0x40020ce	            0x7408	                            je 0x40020d8	      1271	inflate.c	FUNCTION_7
0x40020d0	    0x81fa423f0000	                         cmp edx, 0x3f42	      1271	inflate.c	FUNCTION_7
0x40020d6	            0x7508	                           jne 0x40020e0	      1271	inflate.c	FUNCTION_7
0x40020d8	    0xc744242c0001	          mov dword [rsp + 0x2c], 0x100 	      1271	inflate.c	FUNCTION_7
0x40020e0	         0x344242c	             add eax, dword [rsp + 0x2c]	      1269	inflate.c	FUNCTION_7
0x40020e4	        0x41894758	             mov dword [r15 + 0x58], eax	      1269	inflate.c	FUNCTION_7
0x40020e8	             0x9eb	                             or ebx, ebp	      1272	inflate.c	FUNCTION_7	IF_103
0x40020ea	            0x740b	                            je 0x40020f7	      1272	inflate.c	FUNCTION_7	IF_103
0x40020ec	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1272	inflate.c	FUNCTION_7	IF_103
0x40020f0	      0x837c241004	               cmp dword [rsp + 0x10], 4	      1272	inflate.c	FUNCTION_7	IF_103
0x40020f5	            0x752a	                           jne 0x4002121	      1272	inflate.c	FUNCTION_7	IF_103
0x40020f7	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      1273	inflate.c	FUNCTION_7	IF_103
0x40020fb	            0x85ff	                           test edi, edi	      1273	inflate.c	FUNCTION_7	IF_103
0x40020fd	      0xb8fbffffff	                     mov eax, 0xfffffffb	      1273	inflate.c	FUNCTION_7	IF_103
0x4002102	           0xf45c7	                         cmovne eax, edi	      1273	inflate.c	FUNCTION_7	IF_103
0x4002105	            0xeb1a	                           jmp 0x4002121	      1273	inflate.c	FUNCTION_7	IF_103
0x4002107	      0xb8feffffff	                     mov eax, 0xfffffffe	       647	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x400210c	            0xeb13	                           jmp 0x4002121	       647	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x400210e	      0xb8feffffff	                     mov eax, 0xfffffffe	       647	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x4002113	            0xeb0c	                           jmp 0x4002121	       647	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x4002115	      0xb8feffffff	                     mov eax, 0xfffffffe	       647	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x400211a	            0xeb05	                           jmp 0x4002121	       647	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x400211c	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1241	inflate.c	FUNCTION_7	SWITCH_1
0x4002121	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1275	inflate.c	FUNCTION_7
0x4002126	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1275	inflate.c	FUNCTION_7
0x400212f	            0x740c	                            je 0x400213d	      1275	inflate.c	FUNCTION_7
0x4002131	            0xeb05	                           jmp 0x4002138	      1275	inflate.c	FUNCTION_7
0x4002133	          0x83e880	             sub eax, 0xffffffffffffff80	      1269	inflate.c	FUNCTION_7
0x4002136	            0xeba8	                           jmp 0x40020e0	      1269	inflate.c	FUNCTION_7
0x4002138	      0xe800000000	                          call 0x400213d	      1275	inflate.c	FUNCTION_7
0x400213d	        0x4883c468	                           add rsp, 0x68	      1275	inflate.c	FUNCTION_7
0x4002141	              0x5b	                                 pop rbx	      1275	inflate.c	FUNCTION_7
0x4002142	              0x5d	                                 pop rbp	      1275	inflate.c	FUNCTION_7
0x4002143	            0x415c	                                 pop r12	      1275	inflate.c	FUNCTION_7
0x4002145	            0x415d	                                 pop r13	      1275	inflate.c	FUNCTION_7
0x4002147	            0x415e	                                 pop r14	      1275	inflate.c	FUNCTION_7
0x4002149	            0x415f	                                 pop r15	      1275	inflate.c	FUNCTION_7
0x400214b	              0xc3	                                     ret	      1275	inflate.c	FUNCTION_7
inflateUndermine	FOR,0:CALL,1:IF,1:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	12
0x4002635	              0x53	                                push rbx	      1511	inflate.c	FUNCTION_14
0x4002636	          0x4889fb	                            mov rbx, rdi	      1511	inflate.c	FUNCTION_14
0x4002639	      0xe802daffff	              call sym.inflateStateCheck	      1514	inflate.c	FUNCTION_14	CALL_1
0x400263e	      0xbafeffffff	                     mov edx, 0xfffffffe	      1514	inflate.c	FUNCTION_14	CALL_1
0x4002643	            0x85c0	                           test eax, eax	      1514	inflate.c	FUNCTION_14	CALL_1
0x4002645	            0x7513	                           jne 0x400265a	      1514	inflate.c	FUNCTION_14	CALL_1
0x4002647	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1515	inflate.c	FUNCTION_14
0x400264b	    0xc780e81b0000	            mov dword [rax + 0x1be8], 1 	      1521	inflate.c	FUNCTION_14
0x4002655	      0xbafdffffff	                     mov edx, 0xfffffffd	      1522	inflate.c	FUNCTION_14
0x400265a	            0x89d0	                            mov eax, edx	      1524	inflate.c	FUNCTION_14
0x400265c	              0x5b	                                 pop rbx	      1524	inflate.c	FUNCTION_14
0x400265d	              0xc3	                                     ret	      1524	inflate.c	FUNCTION_14
inflateSync	FOR,0:CALL,4:IF,4:DO,0:functions,0:ELSE,0:WHILE,1:SWITCH,0	88
0x40022f6	            0x4156	                                push r14	      1402	inflate.c	FUNCTION_11
0x40022f8	            0x4155	                                push r13	      1402	inflate.c	FUNCTION_11
0x40022fa	            0x4154	                                push r12	      1402	inflate.c	FUNCTION_11
0x40022fc	              0x55	                                push rbp	      1402	inflate.c	FUNCTION_11
0x40022fd	              0x53	                                push rbx	      1402	inflate.c	FUNCTION_11
0x40022fe	        0x4883ec10	                           sub rsp, 0x10	      1402	inflate.c	FUNCTION_11
0x4002302	          0x4889fb	                            mov rbx, rdi	      1402	inflate.c	FUNCTION_11
0x4002305	    0x64488b042528	                mov rax, qword fs:[0x28]	      1402	inflate.c	FUNCTION_11
0x400230e	      0x4889442408	                mov qword [rsp + 8], rax	      1402	inflate.c	FUNCTION_11
0x4002313	            0x31c0	                            xor eax, eax	      1402	inflate.c	FUNCTION_11
0x4002315	      0xe826ddffff	              call sym.inflateStateCheck	      1409	inflate.c	FUNCTION_11	CALL_1
0x400231a	            0x85c0	                           test eax, eax	      1409	inflate.c	FUNCTION_11	CALL_1
0x400231c	     0xf85e0000000	                           jne 0x4002402	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002322	          0x4189c4	                           mov r12d, eax	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002325	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	      1410	inflate.c	FUNCTION_11
0x4002329	        0x837b0800	                  cmp dword [rbx + 8], 0	      1411	inflate.c	FUNCTION_11	IF_2
0x400232d	            0x750a	                           jne 0x4002339	      1411	inflate.c	FUNCTION_11	IF_2
0x400232f	        0x837d5807	               cmp dword [rbp + 0x58], 7	      1411	inflate.c	FUNCTION_11	IF_2
0x4002333	     0xf86d1000000	                           jbe 0x400240a	      1411	inflate.c	FUNCTION_11	IF_2
0x4002339	    0x817d08533f00	            cmp dword [rbp + 8], 0x3f53 	      1414	inflate.c	FUNCTION_11	IF_3
0x4002340	            0x7475	                            je 0x40023b7	      1414	inflate.c	FUNCTION_11	IF_3
0x4002342	    0xc74508533f00	             mov dword [rbp + 8], 0x3f53	      1415	inflate.c	FUNCTION_11	IF_3
0x4002349	          0x8b5558	            mov edx, dword [rbp + 0x58] 	      1416	inflate.c	FUNCTION_11	IF_3
0x400234c	            0x89d1	                            mov ecx, edx	      1416	inflate.c	FUNCTION_11	IF_3
0x400234e	          0x83e107	                              and ecx, 7	      1416	inflate.c	FUNCTION_11	IF_3
0x4002351	        0x488b4550	            mov rax, qword [rbp + 0x50] 	      1416	inflate.c	FUNCTION_11	IF_3
0x4002355	          0x48d3e0	                             shl rax, cl	      1416	inflate.c	FUNCTION_11	IF_3
0x4002358	          0x4889c1	                            mov rcx, rax	      1416	inflate.c	FUNCTION_11	IF_3
0x400235b	        0x48894550	            mov qword [rbp + 0x50], rax 	      1416	inflate.c	FUNCTION_11	IF_3
0x400235f	          0x83e2f8	                     and edx, 0xfffffff8	      1417	inflate.c	FUNCTION_11	IF_3
0x4002362	          0x895558	            mov dword [rbp + 0x58], edx 	      1417	inflate.c	FUNCTION_11	IF_3
0x4002365	          0x83fa07	                              cmp edx, 7	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002368	            0x762f	                           jbe 0x4002399	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400236a	          0x4889e0	                            mov rax, rsp	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400236d	          0x83ea08	                              sub edx, 8	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002370	          0xc1ea03	                              shr edx, 3	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002373	            0x89d6	                            mov esi, edx	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002375	      0x488d743401	                lea rsi, [rsp + rsi + 1]	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400237a	            0x8808	                      mov byte [rax], cl	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400237c	        0x48c1e908	                              shr rcx, 8	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002380	        0x4883c001	                              add rax, 1	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002384	          0x4839f0	                            cmp rax, rsi	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002387	            0x75f1	                           jne 0x400237a	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002389	          0x83c201	                              add edx, 1	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400238c	        0x48894d50	            mov qword [rbp + 0x50], rcx 	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002390	    0xc74558000000	               mov dword [rbp + 0x58], 0	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002397	            0xeb05	                           jmp 0x400239e	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002399	      0xba00000000	                              mov edx, 0	      1418	inflate.c	FUNCTION_11	IF_3
0x400239e	    0xc7858c000000	               mov dword [rbp + 0x8c], 0	      1424	inflate.c	FUNCTION_11	IF_3
0x40023a8	    0x488dbd8c0000	                   lea rdi, [rbp + 0x8c]	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x40023af	          0x4889e6	                            mov rsi, rsp	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x40023b2	      0xe8dadcffff	                     call sym.syncsearch	      1425	inflate.c	FUNCTION_11	IF_3	CALL_2
0x40023b7	          0x8b5308	                mov edx, dword [rbx + 8]	      1429	inflate.c	FUNCTION_11	CALL_3
0x40023ba	    0x488dbd8c0000	                   lea rdi, [rbp + 0x8c]	      1429	inflate.c	FUNCTION_11	CALL_3
0x40023c1	          0x488b33	                    mov rsi, qword [rbx]	      1429	inflate.c	FUNCTION_11	CALL_3
0x40023c4	      0xe8c8dcffff	                     call sym.syncsearch	      1429	inflate.c	FUNCTION_11	CALL_3
0x40023c9	          0x294308	                sub dword [rbx + 8], eax	      1430	inflate.c	FUNCTION_11
0x40023cc	            0x89c0	                            mov eax, eax	      1431	inflate.c	FUNCTION_11
0x40023ce	          0x480103	                    add qword [rbx], rax	      1431	inflate.c	FUNCTION_11
0x40023d1	        0x48034310	             add rax, qword [rbx + 0x10]	      1432	inflate.c	FUNCTION_11
0x40023d5	          0x4989c5	                            mov r13, rax	      1432	inflate.c	FUNCTION_11
0x40023d8	        0x48894310	             mov qword [rbx + 0x10], rax	      1432	inflate.c	FUNCTION_11
0x40023dc	    0x83bd8c000000	               cmp dword [rbp + 0x8c], 4	      1435	inflate.c	FUNCTION_11	IF_4
0x40023e3	            0x752d	                           jne 0x4002412	      1435	inflate.c	FUNCTION_11	IF_4
0x40023e5	        0x4c8b7328	            mov r14, qword [rbx + 0x28] 	      1436	inflate.c	FUNCTION_11
0x40023e9	          0x4889df	                            mov rdi, rbx	      1437	inflate.c	FUNCTION_11	CALL_4
0x40023ec	      0xe800000000	                          call 0x40023f1	      1437	inflate.c	FUNCTION_11	CALL_4
0x40023f1	        0x4c896b10	             mov qword [rbx + 0x10], r13	      1438	inflate.c	FUNCTION_11
0x40023f5	        0x4c897328	             mov qword [rbx + 0x28], r14	      1438	inflate.c	FUNCTION_11
0x40023f9	    0xc745083f3f00	             mov dword [rbp + 8], 0x3f3f	      1439	inflate.c	FUNCTION_11
0x4002400	            0xeb16	                           jmp 0x4002418	      1440	inflate.c	FUNCTION_11
0x4002402	    0x41bcfeffffff	                    mov r12d, 0xfffffffe	      1409	inflate.c	FUNCTION_11	CALL_1
0x4002408	            0xeb0e	                           jmp 0x4002418	      1409	inflate.c	FUNCTION_11	CALL_1
0x400240a	    0x41bcfbffffff	                    mov r12d, 0xfffffffb	      1411	inflate.c	FUNCTION_11	IF_2
0x4002410	            0xeb06	                           jmp 0x4002418	      1411	inflate.c	FUNCTION_11	IF_2
0x4002412	    0x41bcfdffffff	                    mov r12d, 0xfffffffd	      1435	inflate.c	FUNCTION_11	IF_4
0x4002418	          0x4489e0	                           mov eax, r12d	      1441	inflate.c	FUNCTION_11
0x400241b	      0x488b742408	                mov rsi, qword [rsp + 8]	      1441	inflate.c	FUNCTION_11
0x4002420	    0x644833342528	                xor rsi, qword fs:[0x28]	      1441	inflate.c	FUNCTION_11
0x4002429	            0x7405	                            je 0x4002430	      1441	inflate.c	FUNCTION_11
0x400242b	      0xe800000000	                          call 0x4002430	      1441	inflate.c	FUNCTION_11
0x4002430	        0x4883c410	                           add rsp, 0x10	      1441	inflate.c	FUNCTION_11
0x4002434	              0x5b	                                 pop rbx	      1441	inflate.c	FUNCTION_11
0x4002435	              0x5d	                                 pop rbp	      1441	inflate.c	FUNCTION_11
0x4002436	            0x415c	                                 pop r12	      1441	inflate.c	FUNCTION_11
0x4002438	            0x415d	                                 pop r13	      1441	inflate.c	FUNCTION_11
0x400243a	            0x415e	                                 pop r14	      1441	inflate.c	FUNCTION_11
0x400243c	              0xc3	                                     ret	      1441	inflate.c	FUNCTION_11
inflateCodesUsed	FOR,0:CALL,1:IF,1:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	14
0x40026dd	              0x53	                                push rbx	      1556	inflate.c	FUNCTION_17
0x40026de	          0x4889fb	                            mov rbx, rdi	      1556	inflate.c	FUNCTION_17
0x40026e1	      0xe85ad9ffff	              call sym.inflateStateCheck	      1558	inflate.c	FUNCTION_17	CALL_1
0x40026e6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1558	inflate.c	FUNCTION_17	CALL_1
0x40026ed	            0x85c0	                           test eax, eax	      1558	inflate.c	FUNCTION_17	CALL_1
0x40026ef	            0x7519	                           jne 0x400270a	      1558	inflate.c	FUNCTION_17	CALL_1
0x40026f1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1559	inflate.c	FUNCTION_17
0x40026f5	    0x488d88580500	                  lea rcx, [rax + 0x558]	      1560	inflate.c	FUNCTION_17
0x40026fc	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      1560	inflate.c	FUNCTION_17
0x4002703	          0x4829ca	                            sub rdx, rcx	      1560	inflate.c	FUNCTION_17
0x4002706	        0x48c1fa02	                              sar rdx, 2	      1560	inflate.c	FUNCTION_17
0x400270a	          0x4889d0	                            mov rax, rdx	      1561	inflate.c	FUNCTION_17
0x400270d	              0x5b	                                 pop rbx	      1561	inflate.c	FUNCTION_17
0x400270e	              0xc3	                                     ret	      1561	inflate.c	FUNCTION_17
inflatePrime	FOR,0:CALL,1:IF,3:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	40
0x4000463	            0x4154	                                push r12	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000465	              0x55	                                push rbp	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000466	              0x53	                                push rbx	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x4000467	          0x4989fc	                            mov r12, rdi	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400046a	            0x89f5	                            mov ebp, esi	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400046c	            0x89d3	                            mov ebx, edx	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400046e	      0xe8cdfbffff	              call sym.inflateStateCheck	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x4000473	            0x85c0	                           test eax, eax	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x4000475	            0x754a	                           jne 0x40004c1	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x4000477	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	       255	inflate.c	FOR_1	IF_7	FUNCTION_5
0x400047c	            0x85ed	                           test ebp, ebp	       256	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x400047e	            0x7911	                           jns 0x4000491	       256	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x4000480	    0x48c746500000	               mov qword [rsi + 0x50], 0	       257	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x4000488	    0xc74658000000	               mov dword [rsi + 0x58], 0	       258	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x400048f	            0xeb43	                           jmp 0x40004d4	       259	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x4000491	          0x83fd10	                           cmp ebp, 0x10	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x4000494	            0x7f32	                            jg 0x40004c8	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x4000496	        0x448b4658	            mov r8d, dword [rsi + 0x58] 	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x400049a	      0x428d7c0500	                     lea edi, [rbp + r8]	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x400049f	          0x83ff20	                           cmp edi, 0x20	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004a2	            0x772b	                            ja 0x40004cf	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004a4	      0xba01000000	                              mov edx, 1	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004a9	            0x89e9	                            mov ecx, ebp	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004ab	          0x48d3e2	                             shl rdx, cl	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004ae	          0x83ea01	                              sub edx, 1	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004b1	            0x21d3	                            and ebx, edx	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004b3	          0x4489c1	                            mov ecx, r8d	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004b6	            0xd3e3	                             shl ebx, cl	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004b8	        0x48015e50	            add qword [rsi + 0x50], rbx 	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004bc	          0x897e58	             mov dword [rsi + 0x58], edi	       264	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004bf	            0xeb13	                           jmp 0x40004d4	       265	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004c1	      0xb8feffffff	                     mov eax, 0xfffffffe	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004c6	            0xeb0c	                           jmp 0x40004d4	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004c8	      0xb8feffffff	                     mov eax, 0xfffffffe	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004cd	            0xeb05	                           jmp 0x40004d4	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004cf	      0xb8feffffff	                     mov eax, 0xfffffffe	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004d4	              0x5b	                                 pop rbx	       266	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004d5	              0x5d	                                 pop rbp	       266	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004d6	            0x415c	                                 pop r12	       266	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004d8	              0xc3	                                     ret	       266	inflate.c	FOR_1	IF_7	FUNCTION_5
inflateMark	FOR,0:CALL,1:IF,1:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	24
0x400268a	              0x53	                                push rbx	      1543	inflate.c	FUNCTION_16
0x400268b	          0x4889fb	                            mov rbx, rdi	      1543	inflate.c	FUNCTION_16
0x400268e	      0xe8add9ffff	              call sym.inflateStateCheck	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x4002693	            0x85c0	                           test eax, eax	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x4002695	            0x753d	                           jne 0x40026d4	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x4002697	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	      1548	inflate.c	FUNCTION_16
0x400269b	    0x486381ec1b00	       movsxd rax, dword [rcx + 0x1bec] 	      1549	inflate.c	FUNCTION_16
0x40026a2	        0x48c1e010	                           shl rax, 0x10	      1549	inflate.c	FUNCTION_16
0x40026a6	          0x4889c2	                            mov rdx, rax	      1549	inflate.c	FUNCTION_16
0x40026a9	          0x8b7108	                mov esi, dword [rcx + 8]	      1550	inflate.c	FUNCTION_16
0x40026ac	    0x81fe433f0000	                         cmp esi, 0x3f43	      1549	inflate.c	FUNCTION_16
0x40026b2	            0x7505	                           jne 0x40026b9	      1549	inflate.c	FUNCTION_16
0x40026b4	          0x8b415c	            mov eax, dword [rcx + 0x5c] 	      1549	inflate.c	FUNCTION_16
0x40026b7	            0xeb16	                           jmp 0x40026cf	      1549	inflate.c	FUNCTION_16
0x40026b9	      0xb800000000	                              mov eax, 0	      1549	inflate.c	FUNCTION_16
0x40026be	    0x81fe4c3f0000	                         cmp esi, 0x3f4c	      1549	inflate.c	FUNCTION_16
0x40026c4	            0x7509	                           jne 0x40026cf	      1549	inflate.c	FUNCTION_16
0x40026c6	    0x8b81f01b0000	          mov eax, dword [rcx + 0x1bf0] 	      1549	inflate.c	FUNCTION_16
0x40026cc	          0x2b415c	             sub eax, dword [rcx + 0x5c]	      1549	inflate.c	FUNCTION_16
0x40026cf	          0x4801d0	                            add rax, rdx	      1549	inflate.c	FUNCTION_16
0x40026d2	            0xeb07	                           jmp 0x40026db	      1549	inflate.c	FUNCTION_16
0x40026d4	    0x48c7c00000ff	             mov rax, 0xffffffffffff0000	      1547	inflate.c	FUNCTION_16	IF_1
0x40026db	              0x5b	                                 pop rbx	      1552	inflate.c	FUNCTION_16
0x40026dc	              0xc3	                                     ret	      1552	inflate.c	FUNCTION_16
inflateStateCheck	FOR,0:CALL,0:IF,2:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	26
0x4000040	          0x4885ff	                           test rdi, rdi	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000043	            0x7433	                            je 0x4000078	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000045	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400004a	            0x7432	                            je 0x400007e	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400004c	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000051	            0x7431	                            je 0x4000084	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000053	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       112	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000057	          0x4885d2	                           test rdx, rdx	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x400005a	            0x742e	                            je 0x400008a	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x400005c	      0xb801000000	                              mov eax, 1	       115	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000061	          0x483b3a	                    cmp rdi, qword [rdx]	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000064	            0x7529	                           jne 0x400008f	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000066	          0x8b4208	                mov eax, dword [rdx + 8]	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000069	      0x2d343f0000	                         sub eax, 0x3f34	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400006e	          0x83f81f	                           cmp eax, 0x1f	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000071	           0xf97c0	                                 seta al	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000074	           0xfb6c0	                           movzx eax, al	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000077	              0xc3	                                     ret	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000078	      0xb801000000	                              mov eax, 1	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400007d	              0xc3	                                     ret	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400007e	      0xb801000000	                              mov eax, 1	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000083	              0xc3	                                     ret	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000084	      0xb801000000	                              mov eax, 1	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000089	              0xc3	                                     ret	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400008a	      0xb801000000	                              mov eax, 1	       115	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x400008f	            0xf3c3	                                     ret	       117	inflate.c	FOR_1	IF_7	FUNCTION_1
inflateCopy	FOR,0:CALL,7:IF,6:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	120
0x400246a	            0x4156	                                push r14	      1464	inflate.c	FUNCTION_13
0x400246c	            0x4155	                                push r13	      1464	inflate.c	FUNCTION_13
0x400246e	            0x4154	                                push r12	      1464	inflate.c	FUNCTION_13
0x4002470	              0x55	                                push rbp	      1464	inflate.c	FUNCTION_13
0x4002471	              0x53	                                push rbx	      1464	inflate.c	FUNCTION_13
0x4002472	          0x4889fd	                            mov rbp, rdi	      1464	inflate.c	FUNCTION_13
0x4002475	          0x4889f3	                            mov rbx, rsi	      1464	inflate.c	FUNCTION_13
0x4002478	          0x4889f7	                            mov rdi, rsi	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x400247b	      0xe8c0dbffff	              call sym.inflateStateCheck	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002480	            0x85c0	                           test eax, eax	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002482	     0xf8598010000	                           jne 0x4002620	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002488	          0x4885ed	                           test rbp, rbp	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x400248b	     0xf848f010000	                            je 0x4002620	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002491	        0x4c8b6b38	            mov r13, qword [rbx + 0x38] 	      1473	inflate.c	FUNCTION_13
0x4002495	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1476	inflate.c	FUNCTION_13
0x4002499	      0xbaf81b0000	                         mov edx, 0x1bf8	      1476	inflate.c	FUNCTION_13
0x400249e	      0xbe01000000	                              mov esi, 1	      1476	inflate.c	FUNCTION_13
0x40024a3	          0xff5340	                 call qword [rbx + 0x40]	      1476	inflate.c	FUNCTION_13
0x40024a6	          0x4989c4	                            mov r12, rax	      1476	inflate.c	FUNCTION_13
0x40024a9	          0x4885c0	                           test rax, rax	      1478	inflate.c	FUNCTION_13	IF_2
0x40024ac	     0xf8475010000	                            je 0x4002627	      1478	inflate.c	FUNCTION_13	IF_2
0x40024b2	      0x49837d4800	               cmp qword [r13 + 0x48], 0	      1480	inflate.c	FUNCTION_13	IF_3
0x40024b7	            0x7433	                            je 0x40024ec	      1480	inflate.c	FUNCTION_13	IF_3
0x40024b9	        0x418b4d38	            mov ecx, dword [r13 + 0x38] 	      1481	inflate.c	FUNCTION_13	IF_3
0x40024bd	      0xbe01000000	                              mov esi, 1	      1481	inflate.c	FUNCTION_13	IF_3
0x40024c2	            0xd3e6	                             shl esi, cl	      1481	inflate.c	FUNCTION_13	IF_3
0x40024c4	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1481	inflate.c	FUNCTION_13	IF_3
0x40024c8	      0xba01000000	                              mov edx, 1	      1481	inflate.c	FUNCTION_13	IF_3
0x40024cd	          0xff5340	                 call qword [rbx + 0x40]	      1481	inflate.c	FUNCTION_13	IF_3
0x40024d0	          0x4989c6	                            mov r14, rax	      1481	inflate.c	FUNCTION_13	IF_3
0x40024d3	          0x4885c0	                           test rax, rax	      1483	inflate.c	FUNCTION_13	IF_3	IF_4
0x40024d6	            0x751a	                           jne 0x40024f2	      1483	inflate.c	FUNCTION_13	IF_3	IF_4
0x40024d8	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40024dc	          0x4c89e6	                            mov rsi, r12	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40024df	          0xff5348	                 call qword [rbx + 0x48]	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x40024e2	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1485	inflate.c	FUNCTION_13	IF_3	IF_4
0x40024e7	      0xe940010000	                           jmp 0x400262c	      1485	inflate.c	FUNCTION_13	IF_3	IF_4
0x40024ec	    0x41be00000000	                             mov r14d, 0	      1479	inflate.c	FUNCTION_13
0x40024f2	          0x488b03	                    mov rax, qword [rbx]	        53	string3.h	FUNCTION_18	CALL_3
0x40024f5	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_18	CALL_3
0x40024f9	        0x488b4308	                mov rax, qword [rbx + 8]	        53	string3.h	FUNCTION_18	CALL_3
0x40024fd	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_18	CALL_3
0x4002501	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002505	        0x48894510	            mov qword [rbp + 0x10], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002509	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_18	CALL_3
0x400250d	        0x48894518	            mov qword [rbp + 0x18], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002511	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002515	        0x48894520	            mov qword [rbp + 0x20], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002519	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        53	string3.h	FUNCTION_18	CALL_3
0x400251d	        0x48894528	            mov qword [rbp + 0x28], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002521	        0x488b4330	            mov rax, qword [rbx + 0x30] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002525	        0x48894530	            mov qword [rbp + 0x30], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002529	        0x488b4338	            mov rax, qword [rbx + 0x38] 	        53	string3.h	FUNCTION_18	CALL_3
0x400252d	        0x48894538	            mov qword [rbp + 0x38], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002531	        0x488b4340	            mov rax, qword [rbx + 0x40] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002535	        0x48894540	            mov qword [rbp + 0x40], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002539	        0x488b4348	            mov rax, qword [rbx + 0x48] 	        53	string3.h	FUNCTION_18	CALL_3
0x400253d	        0x48894548	            mov qword [rbp + 0x48], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002541	        0x488b4350	            mov rax, qword [rbx + 0x50] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002545	        0x48894550	            mov qword [rbp + 0x50], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002549	        0x488b4358	            mov rax, qword [rbx + 0x58] 	        53	string3.h	FUNCTION_18	CALL_3
0x400254d	        0x48894558	            mov qword [rbp + 0x58], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002551	        0x488b4360	            mov rax, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002555	        0x48894560	            mov qword [rbp + 0x60], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002559	        0x488b4368	            mov rax, qword [rbx + 0x68] 	        53	string3.h	FUNCTION_18	CALL_3
0x400255d	        0x48894568	            mov qword [rbp + 0x68], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002561	        0x498b4500	                    mov rax, qword [r13]	        53	string3.h	FUNCTION_18	CALL_3
0x4002565	        0x49890424	                    mov qword [r12], rax	        53	string3.h	FUNCTION_18	CALL_3
0x4002569	    0x498b85f01b00	          mov rax, qword [r13 + 0x1bf0] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002570	    0x49898424f01b	          mov qword [r12 + 0x1bf0], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002578	      0x498d7c2408	                      lea rdi, [r12 + 8]	        53	string3.h	FUNCTION_18	CALL_3
0x400257d	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_18	CALL_3
0x4002581	          0x4c89e1	                            mov rcx, r12	        53	string3.h	FUNCTION_18	CALL_3
0x4002584	          0x4829f9	                            sub rcx, rdi	        53	string3.h	FUNCTION_18	CALL_3
0x4002587	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_18	CALL_3
0x400258a	          0x4829ce	                            sub rsi, rcx	        53	string3.h	FUNCTION_18	CALL_3
0x400258d	    0x81c1f81b0000	                         add ecx, 0x1bf8	        53	string3.h	FUNCTION_18	CALL_3
0x4002593	          0xc1e903	                              shr ecx, 3	        53	string3.h	FUNCTION_18	CALL_3
0x4002596	            0x89c9	                            mov ecx, ecx	        53	string3.h	FUNCTION_18	CALL_3
0x4002598	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_18	CALL_3
0x400259b	        0x49892c24	                    mov qword [r12], rbp	      1492	inflate.c	FUNCTION_13
0x400259f	        0x498b4568	            mov rax, qword [r13 + 0x68] 	      1493	inflate.c	FUNCTION_13	IF_5
0x40025a3	    0x498d95580500	                  lea rdx, [r13 + 0x558]	      1493	inflate.c	FUNCTION_13	IF_5
0x40025aa	          0x4839d0	                            cmp rax, rdx	      1493	inflate.c	FUNCTION_13	IF_5
0x40025ad	            0x722b	                            jb 0x40025da	      1493	inflate.c	FUNCTION_13	IF_5
0x40025af	    0x498d8de41b00	                 lea rcx, [r13 + 0x1be4]	      1494	inflate.c	FUNCTION_13	IF_5
0x40025b6	          0x4839c8	                            cmp rax, rcx	      1493	inflate.c	FUNCTION_13	IF_5
0x40025b9	            0x771f	                            ja 0x40025da	      1493	inflate.c	FUNCTION_13	IF_5
0x40025bb	    0x498d8c245805	                  lea rcx, [r12 + 0x558]	      1495	inflate.c	FUNCTION_13	IF_5
0x40025c3	          0x4829d0	                            sub rax, rdx	      1495	inflate.c	FUNCTION_13	IF_5
0x40025c6	          0x4801c8	                            add rax, rcx	      1495	inflate.c	FUNCTION_13	IF_5
0x40025c9	      0x4989442468	             mov qword [r12 + 0x68], rax	      1495	inflate.c	FUNCTION_13	IF_5
0x40025ce	          0x4829d1	                            sub rcx, rdx	      1496	inflate.c	FUNCTION_13	IF_5
0x40025d1	        0x49034d70	             add rcx, qword [r13 + 0x70]	      1496	inflate.c	FUNCTION_13	IF_5
0x40025d5	      0x49894c2470	             mov qword [r12 + 0x70], rcx	      1496	inflate.c	FUNCTION_13	IF_5
0x40025da	    0x498b85900000	            mov rax, qword [r13 + 0x90] 	      1498	inflate.c	FUNCTION_13
0x40025e1	          0x4829d0	                            sub rax, rdx	      1498	inflate.c	FUNCTION_13
0x40025e4	    0x498d84045805	           lea rax, [r12 + rax + 0x558] 	      1498	inflate.c	FUNCTION_13
0x40025ec	    0x498984249000	             mov qword [r12 + 0x90], rax	      1498	inflate.c	FUNCTION_13
0x40025f4	          0x4d85f6	                           test r14, r14	      1499	inflate.c	FUNCTION_13	IF_6
0x40025f7	            0x7417	                            je 0x4002610	      1499	inflate.c	FUNCTION_13	IF_6
0x40025f9	        0x418b4d38	            mov ecx, dword [r13 + 0x38] 	        53	string3.h	FUNCTION_18	CALL_3
0x40025fd	      0xba01000000	                              mov edx, 1	        53	string3.h	FUNCTION_18	CALL_3
0x4002602	            0xd3e2	                             shl edx, cl	        53	string3.h	FUNCTION_18	CALL_3
0x4002604	        0x498b7548	            mov rsi, qword [r13 + 0x48] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002608	          0x4c89f7	                            mov rdi, r14	        53	string3.h	FUNCTION_18	CALL_3
0x400260b	      0xe800000000	                          call 0x4002610	        53	string3.h	FUNCTION_18	CALL_3
0x4002610	      0x4d89742448	             mov qword [r12 + 0x48], r14	      1503	inflate.c	FUNCTION_13
0x4002615	        0x4c896538	            mov qword [rbp + 0x38], r12 	      1504	inflate.c	FUNCTION_13
0x4002619	      0xb800000000	                              mov eax, 0	      1505	inflate.c	FUNCTION_13
0x400261e	            0xeb0c	                           jmp 0x400262c	      1505	inflate.c	FUNCTION_13
0x4002620	      0xb8feffffff	                     mov eax, 0xfffffffe	      1472	inflate.c	FUNCTION_13	IF_1
0x4002625	            0xeb05	                           jmp 0x400262c	      1472	inflate.c	FUNCTION_13	IF_1
0x4002627	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1478	inflate.c	FUNCTION_13	IF_2
0x400262c	              0x5b	                                 pop rbx	      1506	inflate.c	FUNCTION_13
0x400262d	              0x5d	                                 pop rbp	      1506	inflate.c	FUNCTION_13
0x400262e	            0x415c	                                 pop r12	      1506	inflate.c	FUNCTION_13
0x4002630	            0x415d	                                 pop r13	      1506	inflate.c	FUNCTION_13
0x4002632	            0x415e	                                 pop r14	      1506	inflate.c	FUNCTION_13
0x4002634	              0xc3	                                     ret	      1506	inflate.c	FUNCTION_13
inflateValidate	FOR,0:CALL,1:IF,2:DO,0:functions,0:ELSE,1:WHILE,0:SWITCH,0	18
0x400265e	              0x55	                                push rbp	      1529	inflate.c	FUNCTION_15
0x400265f	              0x53	                                push rbx	      1529	inflate.c	FUNCTION_15
0x4002660	          0x4889fb	                            mov rbx, rdi	      1529	inflate.c	FUNCTION_15
0x4002663	            0x89f5	                            mov ebp, esi	      1529	inflate.c	FUNCTION_15
0x4002665	      0xe8d6d9ffff	              call sym.inflateStateCheck	      1532	inflate.c	FUNCTION_15	CALL_1
0x400266a	            0x85c0	                           test eax, eax	      1532	inflate.c	FUNCTION_15	CALL_1
0x400266c	            0x7514	                           jne 0x4002682	      1532	inflate.c	FUNCTION_15	CALL_1
0x400266e	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1533	inflate.c	FUNCTION_15
0x4002672	            0x85ed	                           test ebp, ebp	      1534	inflate.c	FUNCTION_15	IF_2
0x4002674	            0x7406	                            je 0x400267c	      1534	inflate.c	FUNCTION_15	IF_2
0x4002676	        0x834a1004	                or dword [rdx + 0x10], 4	      1535	inflate.c	FUNCTION_15	IF_2
0x400267a	            0xeb0b	                           jmp 0x4002687	      1535	inflate.c	FUNCTION_15	IF_2
0x400267c	        0x836210fb	      and dword [rdx + 0x10], 0xfffffffb	      1537	inflate.c	FUNCTION_15	ELSE_1
0x4002680	            0xeb05	                           jmp 0x4002687	      1537	inflate.c	FUNCTION_15	ELSE_1
0x4002682	      0xb8feffffff	                     mov eax, 0xfffffffe	      1532	inflate.c	FUNCTION_15	CALL_1
0x4002687	              0x5b	                                 pop rbx	      1539	inflate.c	FUNCTION_15
0x4002688	              0x5d	                                 pop rbp	      1539	inflate.c	FUNCTION_15
0x4002689	              0xc3	                                     ret	      1539	inflate.c	FUNCTION_15
inflateSyncPoint	FOR,0:CALL,1:IF,1:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	15
0x400243d	              0x53	                                push rbx	      1453	inflate.c	FUNCTION_12
0x400243e	          0x4889fb	                            mov rbx, rdi	      1453	inflate.c	FUNCTION_12
0x4002441	      0xe8fadbffff	              call sym.inflateStateCheck	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002446	            0x85c0	                           test eax, eax	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002448	            0x7519	                           jne 0x4002463	      1456	inflate.c	FUNCTION_12	CALL_1
0x400244a	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1457	inflate.c	FUNCTION_12
0x400244e	    0x817a08413f00	            cmp dword [rdx + 8], 0x3f41 	      1458	inflate.c	FUNCTION_12
0x4002455	            0x7511	                           jne 0x4002468	      1458	inflate.c	FUNCTION_12
0x4002457	        0x837a5800	               cmp dword [rdx + 0x58], 0	      1456	inflate.c	FUNCTION_12	CALL_1
0x400245b	           0xf94c0	                                 sete al	      1456	inflate.c	FUNCTION_12	CALL_1
0x400245e	           0xfb6c0	                           movzx eax, al	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002461	            0xeb05	                           jmp 0x4002468	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002463	      0xb8feffffff	                     mov eax, 0xfffffffe	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002468	              0x5b	                                 pop rbx	      1459	inflate.c	FUNCTION_12
0x4002469	              0xc3	                                     ret	      1459	inflate.c	FUNCTION_12
inflateGetHeader	FOR,0:CALL,1:IF,2:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	19
0x40022bf	              0x55	                                push rbp	      1352	inflate.c	FUNCTION_10
0x40022c0	              0x53	                                push rbx	      1352	inflate.c	FUNCTION_10
0x40022c1	          0x4889fb	                            mov rbx, rdi	      1352	inflate.c	FUNCTION_10
0x40022c4	          0x4889f5	                            mov rbp, rsi	      1352	inflate.c	FUNCTION_10
0x40022c7	      0xe874ddffff	              call sym.inflateStateCheck	      1356	inflate.c	FUNCTION_10	CALL_1
0x40022cc	            0x85c0	                           test eax, eax	      1356	inflate.c	FUNCTION_10	CALL_1
0x40022ce	            0x7517	                           jne 0x40022e7	      1356	inflate.c	FUNCTION_10	CALL_1
0x40022d0	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1357	inflate.c	FUNCTION_10
0x40022d4	        0xf6421002	               test byte [rdx + 0x10], 2	      1358	inflate.c	FUNCTION_10	IF_2
0x40022d8	            0x7414	                            je 0x40022ee	      1358	inflate.c	FUNCTION_10	IF_2
0x40022da	        0x48896a30	             mov qword [rdx + 0x30], rbp	      1361	inflate.c	FUNCTION_10
0x40022de	    0xc74548000000	               mov dword [rbp + 0x48], 0	      1362	inflate.c	FUNCTION_10
0x40022e5	            0xeb0c	                           jmp 0x40022f3	      1363	inflate.c	FUNCTION_10
0x40022e7	      0xb8feffffff	                     mov eax, 0xfffffffe	      1356	inflate.c	FUNCTION_10	CALL_1
0x40022ec	            0xeb05	                           jmp 0x40022f3	      1356	inflate.c	FUNCTION_10	CALL_1
0x40022ee	      0xb8feffffff	                     mov eax, 0xfffffffe	      1358	inflate.c	FUNCTION_10	IF_2
0x40022f3	              0x5b	                                 pop rbx	      1364	inflate.c	FUNCTION_10
0x40022f4	              0x5d	                                 pop rbp	      1364	inflate.c	FUNCTION_10
0x40022f5	              0xc3	                                     ret	      1364	inflate.c	FUNCTION_10
inflateResetKeep	FOR,0:CALL,2:IF,2:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	32
0x4000207	              0x53	                                push rbx	       121	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000208	          0x4889fb	                            mov rbx, rdi	       121	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400020b	      0xe830feffff	              call sym.inflateStateCheck	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x4000210	            0x85c0	                           test eax, eax	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x4000212	     0xf8591000000	                           jne 0x40002a9	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x4000218	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       125	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400021c	    0x48c742280000	               mov qword [rdx + 0x28], 0	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000224	    0x48c743280000	               mov qword [rbx + 0x28], 0	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400022c	    0x48c743100000	               mov qword [rbx + 0x10], 0	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000234	    0x48c743300000	               mov qword [rbx + 0x30], 0	       127	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400023c	          0x8b4a10	            mov ecx, dword [rdx + 0x10] 	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400023f	            0x85c9	                           test ecx, ecx	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000241	            0x7407	                            je 0x400024a	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000243	          0x83e101	                              and ecx, 1	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000246	        0x48894b60	             mov qword [rbx + 0x60], rcx	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400024a	    0xc74208343f00	            mov dword [rdx + 8], 0x3f34 	       130	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000251	    0xc7420c000000	                mov dword [rdx + 0xc], 0	       131	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000258	    0xc74214000000	               mov dword [rdx + 0x14], 0	       132	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400025f	    0xc7421c008000	         mov dword [rdx + 0x1c], 0x8000 	       133	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000266	    0x48c742300000	               mov qword [rdx + 0x30], 0	       134	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400026e	    0x48c742500000	               mov qword [rdx + 0x50], 0	       135	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000276	    0xc74258000000	               mov dword [rdx + 0x58], 0	       136	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400027d	    0x488d8a580500	                  lea rcx, [rdx + 0x558]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000284	    0x48898a900000	             mov qword [rdx + 0x90], rcx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400028b	        0x48894a70	             mov qword [rdx + 0x70], rcx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400028f	        0x48894a68	             mov qword [rdx + 0x68], rcx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000293	    0xc782e81b0000	            mov dword [rdx + 0x1be8], 1 	       138	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400029d	    0xc782ec1b0000	   mov dword [rdx + 0x1bec], 0xffffffff 	       139	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40002a7	            0xeb05	                           jmp 0x40002ae	       141	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40002a9	      0xb8feffffff	                     mov eax, 0xfffffffe	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40002ae	              0x5b	                                 pop rbx	       142	inflate.c	FOR_1	IF_7	FUNCTION_2
0x40002af	              0xc3	                                     ret	       142	inflate.c	FOR_1	IF_7	FUNCTION_2
inflateReset	FOR,0:CALL,2:IF,1:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	15
0x40002b0	              0x53	                                push rbx	       146	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002b1	          0x4889fb	                            mov rbx, rdi	       146	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002b4	      0xe887fdffff	              call sym.inflateStateCheck	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x40002b9	            0x89c2	                            mov edx, eax	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x40002bb	      0xb8feffffff	                     mov eax, 0xfffffffe	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x40002c0	            0x85d2	                           test edx, edx	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x40002c2	            0x7521	                           jne 0x40002e5	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x40002c4	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       150	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002c8	    0xc7403c000000	               mov dword [rax + 0x3c], 0	       151	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002cf	    0xc74040000000	               mov dword [rax + 0x40], 0	       152	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002d6	    0xc74044000000	               mov dword [rax + 0x44], 0	       153	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002dd	          0x4889df	                            mov rdi, rbx	       154	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_2
0x40002e0	      0xe800000000	                          call 0x40002e5	       154	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_2
0x40002e5	              0x5b	                                 pop rbx	       155	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002e6	              0xc3	                                     ret	       155	inflate.c	FOR_1	IF_7	FUNCTION_3
inflateReset2	FOR,0:CALL,3:IF,5:DO,0:functions,0:ELSE,1:WHILE,0:SWITCH,0	50
0x40002e7	            0x4156	                                push r14	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002e9	            0x4155	                                push r13	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002eb	            0x4154	                                push r12	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002ed	              0x55	                                push rbp	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002ee	              0x53	                                push rbx	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002ef	          0x4989fc	                            mov r12, rdi	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002f2	            0x89f3	                            mov ebx, esi	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002f4	      0xe847fdffff	              call sym.inflateStateCheck	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x40002f9	            0x85c0	                           test eax, eax	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x40002fb	            0x7570	                           jne 0x400036d	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x40002fd	      0x498b6c2438	            mov rbp, qword [r12 + 0x38] 	       166	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000302	            0x85db	                           test ebx, ebx	       169	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000304	            0x790a	                           jns 0x4000310	       169	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000306	            0xf7db	                                 neg ebx	       171	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000308	    0x41bd00000000	                             mov r13d, 0	       170	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x400030e	            0xeb16	                           jmp 0x4000326	       170	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000310	          0x4189dd	                           mov r13d, ebx	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x4000313	        0x41c1fd04	                             sar r13d, 4	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x4000317	        0x4183c505	                             add r13d, 5	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x400031b	            0x89d8	                            mov eax, ebx	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x400031d	          0x83e00f	                            and eax, 0xf	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x4000320	          0x83fb2f	                           cmp ebx, 0x2f	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x4000323	           0xf4ed8	                         cmovle ebx, eax	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x4000326	          0x4189de	                           mov r14d, ebx	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x4000329	          0x8d43f8	                      lea eax, [rbx - 8]	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x400032c	          0x83f807	                              cmp eax, 7	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x400032f	            0x7609	                           jbe 0x400033a	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x4000331	      0xb8feffffff	                     mov eax, 0xfffffffe	       183	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x4000336	            0x85db	                           test ebx, ebx	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x4000338	            0x7538	                           jne 0x4000372	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x400033a	        0x488b7548	            mov rsi, qword [rbp + 0x48] 	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x400033e	          0x4885f6	                           test rsi, rsi	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000341	            0x7418	                            je 0x400035b	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000343	        0x443b7538	           cmp r14d, dword [rbp + 0x38] 	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000347	            0x7412	                            je 0x400035b	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000349	      0x498b7c2450	            mov rdi, qword [r12 + 0x50] 	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x400034e	      0x41ff542448	                 call qword [r12 + 0x48]	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x4000353	    0x48c745480000	               mov qword [rbp + 0x48], 0	       186	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x400035b	        0x44896d10	           mov dword [rbp + 0x10], r13d 	       190	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400035f	        0x44897538	           mov dword [rbp + 0x38], r14d 	       191	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000363	          0x4c89e7	                            mov rdi, r12	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x4000366	      0xe800000000	                          call 0x400036b	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x400036b	            0xeb05	                           jmp 0x4000372	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x400036d	      0xb8feffffff	                     mov eax, 0xfffffffe	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x4000372	              0x5b	                                 pop rbx	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000373	              0x5d	                                 pop rbp	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000374	            0x415c	                                 pop r12	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000376	            0x415d	                                 pop r13	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000378	            0x415e	                                 pop r14	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400037a	              0xc3	                                     ret	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
inflateEnd	FOR,0:CALL,4:IF,2:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	25
0x400214c	              0x55	                                push rbp	      1279	inflate.c	FUNCTION_8
0x400214d	              0x53	                                push rbx	      1279	inflate.c	FUNCTION_8
0x400214e	        0x4883ec08	                              sub rsp, 8	      1279	inflate.c	FUNCTION_8
0x4002152	          0x4889fb	                            mov rbx, rdi	      1279	inflate.c	FUNCTION_8
0x4002155	      0xe8e6deffff	              call sym.inflateStateCheck	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x400215a	            0x85c0	                           test eax, eax	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x400215c	            0x752b	                           jne 0x4002189	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x400215e	            0x89c5	                            mov ebp, eax	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x4002160	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002164	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002168	          0x4885f6	                           test rsi, rsi	      1284	inflate.c	FUNCTION_8	CALL_2
0x400216b	            0x7407	                            je 0x4002174	      1284	inflate.c	FUNCTION_8	CALL_2
0x400216d	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002171	          0xff5348	                 call qword [rbx + 0x48]	      1284	inflate.c	FUNCTION_8	CALL_2
0x4002174	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1285	inflate.c	FUNCTION_8	CALL_3
0x4002178	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1285	inflate.c	FUNCTION_8	CALL_3
0x400217c	          0xff5348	                 call qword [rbx + 0x48]	      1285	inflate.c	FUNCTION_8	CALL_3
0x400217f	    0x48c743380000	               mov qword [rbx + 0x38], 0	      1286	inflate.c	FUNCTION_8
0x4002187	            0xeb05	                           jmp 0x400218e	      1288	inflate.c	FUNCTION_8
0x4002189	      0xbdfeffffff	                     mov ebp, 0xfffffffe	      1282	inflate.c	FUNCTION_8	IF_1
0x400218e	            0x89e8	                            mov eax, ebp	      1289	inflate.c	FUNCTION_8
0x4002190	        0x4883c408	                              add rsp, 8	      1289	inflate.c	FUNCTION_8
0x4002194	              0x5b	                                 pop rbx	      1289	inflate.c	FUNCTION_8
0x4002195	              0x5d	                                 pop rbp	      1289	inflate.c	FUNCTION_8
0x4002196	              0xc3	                                     ret	      1289	inflate.c	FUNCTION_8
inflateGetDictionary	FOR,0:CALL,3:IF,3:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	43
0x4002197	            0x4155	                                push r13	      1295	inflate.c	FUNCTION_9
0x4002199	            0x4154	                                push r12	      1295	inflate.c	FUNCTION_9
0x400219b	              0x55	                                push rbp	      1295	inflate.c	FUNCTION_9
0x400219c	              0x53	                                push rbx	      1295	inflate.c	FUNCTION_9
0x400219d	        0x4883ec08	                              sub rsp, 8	      1295	inflate.c	FUNCTION_9
0x40021a1	          0x4889fb	                            mov rbx, rdi	      1295	inflate.c	FUNCTION_9
0x40021a4	          0x4989f5	                            mov r13, rsi	      1295	inflate.c	FUNCTION_9
0x40021a7	          0x4989d4	                            mov r12, rdx	      1295	inflate.c	FUNCTION_9
0x40021aa	      0xe891deffff	              call sym.inflateStateCheck	      1299	inflate.c	FUNCTION_9	CALL_1
0x40021af	            0x85c0	                           test eax, eax	      1299	inflate.c	FUNCTION_9	CALL_1
0x40021b1	            0x7548	                           jne 0x40021fb	      1299	inflate.c	FUNCTION_9	CALL_1
0x40021b3	            0x89c5	                            mov ebp, eax	      1299	inflate.c	FUNCTION_9	CALL_1
0x40021b5	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      1300	inflate.c	FUNCTION_9
0x40021b9	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      1303	inflate.c	FUNCTION_9	IF_2
0x40021bc	            0x85d2	                           test edx, edx	      1303	inflate.c	FUNCTION_9	IF_2
0x40021be	            0x742d	                            je 0x40021ed	      1303	inflate.c	FUNCTION_9	IF_2
0x40021c0	          0x4d85ed	                           test r13, r13	      1303	inflate.c	FUNCTION_9	IF_2
0x40021c3	            0x7428	                            je 0x40021ed	      1303	inflate.c	FUNCTION_9	IF_2
0x40021c5	          0x8b7344	            mov esi, dword [rbx + 0x44] 	      1305	inflate.c	FUNCTION_9	IF_2
0x40021c8	            0x29f2	                            sub edx, esi	        53	string3.h	FUNCTION_18	CALL_3
0x40021ca	            0x89f6	                            mov esi, esi	        53	string3.h	FUNCTION_18	CALL_3
0x40021cc	        0x48037348	             add rsi, qword [rbx + 0x48]	        53	string3.h	FUNCTION_18	CALL_3
0x40021d0	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_18	CALL_3
0x40021d3	      0xe800000000	                          call 0x40021d8	        53	string3.h	FUNCTION_18	CALL_3
0x40021d8	          0x8b5344	            mov edx, dword [rbx + 0x44] 	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x40021db	          0x8b7b40	            mov edi, dword [rbx + 0x40] 	        53	string3.h	FUNCTION_18	CALL_3
0x40021de	          0x4829d7	                            sub rdi, rdx	        53	string3.h	FUNCTION_18	CALL_3
0x40021e1	          0x4c01ef	                            add rdi, r13	        53	string3.h	FUNCTION_18	CALL_3
0x40021e4	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	        53	string3.h	FUNCTION_18	CALL_3
0x40021e8	      0xe800000000	                          call 0x40021ed	        53	string3.h	FUNCTION_18	CALL_3
0x40021ed	          0x4d85e4	                           test r12, r12	      1309	inflate.c	FUNCTION_9	IF_3
0x40021f0	            0x740e	                            je 0x4002200	      1309	inflate.c	FUNCTION_9	IF_3
0x40021f2	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1310	inflate.c	FUNCTION_9	IF_3
0x40021f5	        0x41890424	                    mov dword [r12], eax	      1310	inflate.c	FUNCTION_9	IF_3
0x40021f9	            0xeb05	                           jmp 0x4002200	      1310	inflate.c	FUNCTION_9	IF_3
0x40021fb	      0xbdfeffffff	                     mov ebp, 0xfffffffe	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002200	            0x89e8	                            mov eax, ebp	      1312	inflate.c	FUNCTION_9
0x4002202	        0x4883c408	                              add rsp, 8	      1312	inflate.c	FUNCTION_9
0x4002206	              0x5b	                                 pop rbx	      1312	inflate.c	FUNCTION_9
0x4002207	              0x5d	                                 pop rbp	      1312	inflate.c	FUNCTION_9
0x4002208	            0x415c	                                 pop r12	      1312	inflate.c	FUNCTION_9
0x400220a	            0x415d	                                 pop r13	      1312	inflate.c	FUNCTION_9
0x400220c	              0xc3	                                     ret	      1312	inflate.c	FUNCTION_9
