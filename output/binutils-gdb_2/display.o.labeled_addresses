init_line_structures	functions,0:DO,0:FOR,1:IF,5:WHILE,0:ELSE,1:CALL,8:SWITCH,0	90
0x4000040	              0x55	                                push rbp	       450	display.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	       450	display.c	FUNCTION_1
0x4000042	        0x4883ec08	                              sub rsp, 8	       450	display.c	FUNCTION_1
0x4000046	            0x89fb	                            mov ebx, edi	       450	display.c	FUNCTION_1
0x4000048	    0x488b05000000	            mov rax, qword [0x0400004f] 	       453	display.c	FUNCTION_1	IF_1
0x400004f	        0x48833800	                      cmp qword [rax], 0	       453	display.c	FUNCTION_1	IF_1
0x4000053	            0x7556	                           jne 0x40000ab	       453	display.c	FUNCTION_1	IF_1
0x4000055	    0x393d00000000	            cmp dword [0x0400005b], edi 	       455	display.c	FUNCTION_1	IF_1	IF_2
0x400005b	            0x7d06	                           jge 0x4000063	       455	display.c	FUNCTION_1	IF_1	IF_2
0x400005d	    0x893d00000000	            mov dword [0x04000063], edi 	       456	display.c	FUNCTION_1	IF_1	IF_2
0x4000063	    0x488b2d000000	            mov rbp, qword [0x0400006a] 	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x400006a	    0x48633d000000	         movsxd rdi, dword [0x04000071] 	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x4000071	      0xe800000000	                          call 0x4000076	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x4000076	        0x48894500	                    mov qword [rbp], rax	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x400007a	    0x488b2d000000	            mov rbp, qword [0x04000081] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000081	    0x48633d000000	         movsxd rdi, dword [0x04000088] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000088	      0xe800000000	                          call 0x400008d	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x400008d	        0x48894500	                    mov qword [rbp], rax	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000091	    0x8b0d00000000	            mov ecx, dword [0x04000097] 	       469	display.c	FUNCTION_1	FOR_1
0x4000097	    0x488b3d000000	            mov rdi, qword [0x0400009e] 	       471	display.c	FUNCTION_1	FOR_1
0x400009e	    0x488b35000000	            mov rsi, qword [0x040000a5] 	       472	display.c	FUNCTION_1	FOR_1
0x40000a5	            0x39cb	                            cmp ebx, ecx	       469	display.c	FUNCTION_1	FOR_1
0x40000a7	            0x7c4d	                            jl 0x40000f6	       469	display.c	FUNCTION_1	FOR_1
0x40000a9	            0xeb63	                           jmp 0x400010e	       469	display.c	FUNCTION_1	FOR_1
0x40000ab	    0x8b0500000000	            mov eax, dword [0x040000b1] 	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000b1	            0x39c7	                            cmp edi, eax	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000b3	            0x7edc	                           jle 0x4000091	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000b5	             0x1c0	                            add eax, eax	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000b7	            0x39c7	                            cmp edi, eax	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000b9	           0xf4fc7	                          cmovg eax, edi	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000bc	    0x890500000000	            mov dword [0x040000c2], eax 	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000c2	    0x488b2d000000	            mov rbp, qword [0x040000c9] 	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000c9	          0x4863f0	                         movsxd rsi, eax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000cc	        0x488b7d00	                    mov rdi, qword [rbp]	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000d0	      0xe800000000	                          call 0x40000d5	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000d5	        0x48894500	                    mov qword [rbp], rax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000d9	    0x488b2d000000	            mov rbp, qword [0x040000e0] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000e0	    0x486335000000	         movsxd rsi, dword [0x040000e7] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000e7	        0x488b7d00	                    mov rdi, qword [rbp]	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000eb	      0xe800000000	                          call 0x40000f0	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000f0	        0x48894500	                    mov qword [rbp], rax	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000f4	            0xeb9b	                           jmp 0x4000091	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000f6	          0x4863c3	                         movsxd rax, ebx	       471	display.c	FUNCTION_1	FOR_1
0x40000f9	          0x488b17	                    mov rdx, qword [rdi]	       471	display.c	FUNCTION_1	FOR_1
0x40000fc	        0xc6040200	                 mov byte [rdx + rax], 0	       471	display.c	FUNCTION_1	FOR_1
0x4000100	          0x488b16	                    mov rdx, qword [rsi]	       472	display.c	FUNCTION_1	FOR_1
0x4000103	        0xc6040201	                 mov byte [rdx + rax], 1	       472	display.c	FUNCTION_1	FOR_1
0x4000107	          0x83c301	                              add ebx, 1	       469	display.c	FUNCTION_1	FOR_1
0x400010a	            0x39cb	                            cmp ebx, ecx	       469	display.c	FUNCTION_1	FOR_1
0x400010c	            0x75e8	                           jne 0x40000f6	       469	display.c	FUNCTION_1	FOR_1
0x400010e	    0x488b1d000000	            mov rbx, qword [0x04000115] 	       475	display.c	FUNCTION_1	IF_5
0x4000115	      0x48837b0800	                  cmp qword [rbx + 8], 0	       475	display.c	FUNCTION_1	IF_5
0x400011a	     0xf85a0000000	                           jne 0x40001c0	       475	display.c	FUNCTION_1	IF_5
0x4000120	    0xc74310000100	          mov dword [rbx + 0x10], 0x100 	       478	display.c	FUNCTION_1	IF_5
0x4000127	    0x488b05000000	            mov rax, qword [0x0400012e] 	       478	display.c	FUNCTION_1	IF_5
0x400012e	    0xc74010000100	          mov dword [rax + 0x10], 0x100 	       478	display.c	FUNCTION_1	IF_5
0x4000135	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       481	display.c	FUNCTION_1	IF_5
0x4000138	          0x894320	             mov dword [rbx + 0x20], eax	       481	display.c	FUNCTION_1	IF_5
0x400013b	            0x4898	                                    cdqe	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x400013d	    0x488d3c850000	                        lea rdi, [rax*4]	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000145	      0xe800000000	                          call 0x400014a	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x400014a	        0x48894318	             mov qword [rbx + 0x18], rax	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x400014e	    0x488b1d000000	            mov rbx, qword [0x04000155] 	       484	display.c	FUNCTION_1	IF_5
0x4000155	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       484	display.c	FUNCTION_1	IF_5
0x4000158	          0x894320	             mov dword [rbx + 0x20], eax	       484	display.c	FUNCTION_1	IF_5
0x400015b	            0x4898	                                    cdqe	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x400015d	    0x488d3c850000	                        lea rdi, [rax*4]	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x4000165	      0xe800000000	                          call 0x400016a	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x400016a	        0x48894318	             mov qword [rbx + 0x18], rax	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x400016e	    0x488b1d000000	            mov rbx, qword [0x04000175] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000175	        0x48637b10	         movsxd rdi, dword [rbx + 0x10] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000179	        0x48c1e702	                              shl rdi, 2	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x400017d	      0xe800000000	                          call 0x4000182	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000182	        0x48894308	                mov qword [rbx + 8], rax	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x4000186	    0x488b1d000000	            mov rbx, qword [0x0400018d] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x400018d	        0x48637b10	         movsxd rdi, dword [rbx + 0x10] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x4000191	        0x48c1e702	                              shl rdi, 2	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x4000195	      0xe800000000	                          call 0x400019a	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x400019a	        0x48894308	                mov qword [rbx + 8], rax	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x400019e	    0x488b05000000	            mov rax, qword [0x040001a5] 	       490	display.c	FUNCTION_1	IF_5
0x40001a5	        0x488b4008	                mov rax, qword [rax + 8]	       490	display.c	FUNCTION_1	IF_5
0x40001a9	    0x488b15000000	            mov rdx, qword [0x040001b0] 	       490	display.c	FUNCTION_1	IF_5
0x40001b0	        0x488b5208	                mov rdx, qword [rdx + 8]	       490	display.c	FUNCTION_1	IF_5
0x40001b4	    0xc70200000000	                      mov dword [rdx], 0	       490	display.c	FUNCTION_1	IF_5
0x40001ba	    0xc70000000000	                      mov dword [rax], 0	       490	display.c	FUNCTION_1	IF_5
0x40001c0	    0xc70500000000	               mov dword [0x040001ca], 1	       493	display.c	FUNCTION_1
0x40001ca	        0x4883c408	                              add rsp, 8	       494	display.c	FUNCTION_1
0x40001ce	              0x5b	                                 pop rbx	       494	display.c	FUNCTION_1
0x40001cf	              0x5d	                                 pop rbp	       494	display.c	FUNCTION_1
0x40001d0	              0xc3	                                     ret	       494	display.c	FUNCTION_1
_rl_erase_at_end_of_line	functions,0:DO,0:FOR,2:IF,0:WHILE,0:ELSE,0:CALL,3:SWITCH,0	38
0x40014ed	              0x55	                                push rbp	      2316	display.c	FUNCTION_14
0x40014ee	              0x53	                                push rbx	      2316	display.c	FUNCTION_14
0x40014ef	        0x4883ec08	                              sub rsp, 8	      2316	display.c	FUNCTION_14
0x40014f3	            0x89fd	                            mov ebp, edi	      2316	display.c	FUNCTION_14
0x40014f5	      0xe800000000	                          call 0x40014fa	      2319	display.c	FUNCTION_14	CALL_1
0x40014fa	            0x85ed	                           test ebp, ebp	      2320	display.c	FUNCTION_14	FOR_1
0x40014fc	            0x7e5c	                           jle 0x400155a	      2320	display.c	FUNCTION_14	FOR_1
0x40014fe	      0xbb00000000	                              mov ebx, 0	      2320	display.c	FUNCTION_14	FOR_1
0x4001503	    0x488b35000000	            mov rsi, qword [0x0400150a] 	      2321	display.c	FUNCTION_14	CALL_2
0x400150a	      0xbf20000000	                           mov edi, 0x20	      2321	display.c	FUNCTION_14	CALL_2
0x400150f	      0xe800000000	                          call 0x4001514	      2321	display.c	FUNCTION_14	CALL_2
0x4001514	          0x83c301	                              add ebx, 1	      2320	display.c	FUNCTION_14	FOR_1
0x4001517	            0x39dd	                            cmp ebp, ebx	      2320	display.c	FUNCTION_14	FOR_1
0x4001519	            0x75e8	                           jne 0x4001503	      2320	display.c	FUNCTION_14	FOR_1
0x400151b	            0xeb28	                           jmp 0x4001545	      2320	display.c	FUNCTION_14	FOR_1
0x400151d	          0x488b0e	                    mov rcx, qword [rsi]	      2324	display.c	FUNCTION_14	FOR_2
0x4001520	    0x8b0500000000	            mov eax, dword [0x04001526] 	      2324	display.c	FUNCTION_14	FOR_2
0x4001526	          0x83e801	                              sub eax, 1	      2324	display.c	FUNCTION_14	FOR_2
0x4001529	    0x890500000000	            mov dword [0x0400152f], eax 	      2324	display.c	FUNCTION_14	FOR_2
0x400152f	            0x4898	                                    cdqe	      2324	display.c	FUNCTION_14	FOR_2
0x4001531	        0xc6040100	                 mov byte [rcx + rax], 0	      2324	display.c	FUNCTION_14	FOR_2
0x4001535	          0x83c201	                              add edx, 1	      2323	display.c	FUNCTION_14	FOR_2
0x4001538	            0x39d5	                            cmp ebp, edx	      2323	display.c	FUNCTION_14	FOR_2
0x400153a	            0x75e1	                           jne 0x400151d	      2323	display.c	FUNCTION_14	FOR_2
0x400153c	    0x830500000000	               add dword [0x04001543], 1	      2325	display.c	FUNCTION_14
0x4001543	            0xeb1e	                           jmp 0x4001563	      2326	display.c	FUNCTION_14
0x4001545	            0x89ef	                            mov edi, ebp	      2322	display.c	FUNCTION_14	CALL_3
0x4001547	      0xe800000000	                          call 0x400154c	      2322	display.c	FUNCTION_14	CALL_3
0x400154c	    0x488b35000000	            mov rsi, qword [0x04001553] 	      2324	display.c	FUNCTION_14	FOR_2
0x4001553	      0xba00000000	                              mov edx, 0	      2324	display.c	FUNCTION_14	FOR_2
0x4001558	            0xebc3	                           jmp 0x400151d	      2324	display.c	FUNCTION_14	FOR_2
0x400155a	            0x89ef	                            mov edi, ebp	      2322	display.c	FUNCTION_14	CALL_3
0x400155c	      0xe800000000	                          call 0x4001561	      2322	display.c	FUNCTION_14	CALL_3
0x4001561	            0xebd9	                           jmp 0x400153c	      2322	display.c	FUNCTION_14	CALL_3
0x4001563	        0x4883c408	                              add rsp, 8	      2326	display.c	FUNCTION_14
0x4001567	              0x5b	                                 pop rbx	      2326	display.c	FUNCTION_14
0x4001568	              0x5d	                                 pop rbp	      2326	display.c	FUNCTION_14
0x4001569	              0xc3	                                     ret	      2326	display.c	FUNCTION_14
rl_show_char	functions,0:DO,0:FOR,0:IF,3:WHILE,0:ELSE,0:CALL,8:SWITCH,0	75
0x4000efc	            0x4155	                                push r13	      2085	display.c	FUNCTION_7
0x4000efe	            0x4154	                                push r12	      2085	display.c	FUNCTION_7
0x4000f00	              0x55	                                push rbp	      2085	display.c	FUNCTION_7
0x4000f01	              0x53	                                push rbx	      2085	display.c	FUNCTION_7
0x4000f02	        0x4883ec08	                              sub rsp, 8	      2085	display.c	FUNCTION_7
0x4000f06	            0x89fb	                            mov ebx, edi	      2085	display.c	FUNCTION_7
0x4000f08	          0x8d4780	                   lea eax, [rdi - 0x80]	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000f0b	      0xbd01000000	                              mov ebp, 1	      2086	display.c	FUNCTION_7
0x4000f10	          0x83f87f	                           cmp eax, 0x7f	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000f13	            0x772c	                            ja 0x4000f41	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000f15	    0x833d00000000	               cmp dword [0x04000f1c], 0	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000f1c	            0x7523	                           jne 0x4000f41	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000f1e	    0x488b0d000000	            mov rcx, qword [0x04000f25] 	        97	stdio2.h	CALL_138
0x4000f25	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_138
0x4000f2a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_138
0x4000f2f	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_138
0x4000f34	      0xe800000000	                          call 0x4000f39	        97	stdio2.h	CALL_138
0x4000f39	          0x80e37f	                            and bl, 0x7f	      2091	display.c	FUNCTION_7	IF_1	CALL_2
0x4000f3c	      0xbd03000000	                              mov ebp, 3	      2090	display.c	FUNCTION_7	IF_1
0x4000f41	          0x83fb1f	                           cmp ebx, 0x1f	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f44	            0x7f14	                            jg 0x4000f5a	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f46	          0x4189dc	                           mov r12d, ebx	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f49	    0x4181e4800000	                          and r12d, 0x80	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f50	          0x83fb09	                              cmp ebx, 9	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f53	            0x7405	                            je 0x4000f5a	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f55	          0x4585e4	                         test r12d, r12d	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f58	            0x7443	                            je 0x4000f9d	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f5a	          0x83fb7f	                           cmp ebx, 0x7f	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f5d	     0xf8587000000	                           jne 0x4000fea	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f63	            0xeb62	                           jmp 0x4000fc7	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4000f65	          0x4189dc	                           mov r12d, ebx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f68	        0x4183cc40	                           or r12d, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f6c	        0x450fb6ec	                        movzx r13d, r12b	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f70	          0x83cb40	                            or ebx, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f73	          0x4139dd	                           cmp r13d, ebx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f76	            0x7572	                           jne 0x4000fea	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f78	      0xe800000000	                          call 0x4000f7d	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f7d	        0x450fb6e4	                        movzx r12d, r12b	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f81	          0x488b00	                    mov rax, qword [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f84	          0x4489eb	                           mov ebx, r13d	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f87	    0x42f644600102	         test byte [rax + r12*2 + 1], 2 	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f8d	            0x745b	                            je 0x4000fea	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f8f	      0xe800000000	                          call 0x4000f94	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f94	          0x488b00	                    mov rax, qword [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f97	        0x428b1ca0	            mov ebx, dword [rax + r12*4]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f9b	            0xeb4d	                           jmp 0x4000fea	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000f9d	    0x488b0d000000	            mov rcx, qword [0x04000fa4] 	        97	stdio2.h	CALL_138
0x4000fa4	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_138
0x4000fa9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_138
0x4000fae	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_138
0x4000fb3	      0xe800000000	                          call 0x4000fb8	        97	stdio2.h	CALL_138
0x4000fb8	          0x83c502	                              add ebp, 2	      2101	display.c	FUNCTION_7	IF_2	IF_3
0x4000fbb	          0x4585e4	                         test r12d, r12d	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000fbe	            0x74a5	                            je 0x4000f65	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000fc0	      0xbb3f000000	                           mov ebx, 0x3f	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000fc5	            0xeb23	                           jmp 0x4000fea	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000fc7	    0x488b0d000000	            mov rcx, qword [0x04000fce] 	        97	stdio2.h	CALL_138
0x4000fce	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_138
0x4000fd3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_138
0x4000fd8	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_138
0x4000fdd	      0xe800000000	                          call 0x4000fe2	        97	stdio2.h	CALL_138
0x4000fe2	          0x83c502	                              add ebp, 2	      2101	display.c	FUNCTION_7	IF_2	IF_3
0x4000fe5	      0xbb3f000000	                           mov ebx, 0x3f	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000fea	    0x488b35000000	            mov rsi, qword [0x04000ff1] 	      2105	display.c	FUNCTION_7	CALL_7
0x4000ff1	            0x89df	                            mov edi, ebx	      2105	display.c	FUNCTION_7	CALL_7
0x4000ff3	      0xe800000000	                          call 0x4000ff8	      2105	display.c	FUNCTION_7	CALL_7
0x4000ff8	    0x488b3d000000	            mov rdi, qword [0x04000fff] 	      2106	display.c	FUNCTION_7	CALL_8
0x4000fff	      0xe800000000	                          call 0x4001004	      2106	display.c	FUNCTION_7	CALL_8
0x4001004	            0x89e8	                            mov eax, ebp	      2108	display.c	FUNCTION_7
0x4001006	        0x4883c408	                              add rsp, 8	      2108	display.c	FUNCTION_7
0x400100a	              0x5b	                                 pop rbx	      2108	display.c	FUNCTION_7
0x400100b	              0x5d	                                 pop rbp	      2108	display.c	FUNCTION_7
0x400100c	            0x415c	                                 pop r12	      2108	display.c	FUNCTION_7
0x400100e	            0x415d	                                 pop r13	      2108	display.c	FUNCTION_7
0x4001010	              0xc3	                                     ret	      2108	display.c	FUNCTION_7
_rl_update_final	functions,0:DO,0:FOR,0:IF,2:WHILE,0:ELSE,0:CALL,6:SWITCH,0	50
0x4003eeb	              0x53	                                push rbx	      2447	display.c	FUNCTION_19
0x4003eec	    0x8b3d00000000	            mov edi, dword [0x04003ef2] 	      2453	display.c	FUNCTION_19	IF_1
0x4003ef2	            0x85ff	                           test edi, edi	      2453	display.c	FUNCTION_19	IF_1
0x4003ef4	     0xf84ce000000	                            je 0x4003fc8	      2453	display.c	FUNCTION_19	IF_1
0x4003efa	    0x833d00000000	               cmp dword [0x04003f01], 0	      2453	display.c	FUNCTION_19	IF_1
0x4003f01	     0xf85c1000000	                           jne 0x4003fc8	      2453	display.c	FUNCTION_19	IF_1
0x4003f07	    0x488b15000000	            mov rdx, qword [0x04003f0e] 	      2454	display.c	FUNCTION_19	IF_1
0x4003f0e	          0x4863c7	                         movsxd rax, edi	      2454	display.c	FUNCTION_19	IF_1
0x4003f11	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2454	display.c	FUNCTION_19	IF_1
0x4003f15	        0x48630481	         movsxd rax, dword [rcx + rax*4]	      2454	display.c	FUNCTION_19	IF_1
0x4003f19	          0x488b12	                    mov rdx, qword [rdx]	      2454	display.c	FUNCTION_19	IF_1
0x4003f1c	        0x803c0200	                 cmp byte [rdx + rax], 0	      2453	display.c	FUNCTION_19	IF_1
0x4003f20	     0xf85a2000000	                           jne 0x4003fc8	      2453	display.c	FUNCTION_19	IF_1
0x4003f26	          0x83ef01	                              sub edi, 1	      2456	display.c	FUNCTION_19	IF_1
0x4003f29	    0x893d00000000	            mov dword [0x04003f2f], edi 	      2456	display.c	FUNCTION_19	IF_1
0x4003f2f	      0xe800000000	                          call 0x4003f34	      2459	display.c	FUNCTION_19	CALL_1
0x4003f34	    0x833d00000000	               cmp dword [0x04003f3b], 0	      2461	display.c	FUNCTION_19	IF_2
0x4003f3b	            0x7467	                            je 0x4003fa4	      2461	display.c	FUNCTION_19	IF_2
0x4003f3d	    0x488b35000000	            mov rsi, qword [0x04003f44] 	      2461	display.c	FUNCTION_19	IF_2
0x4003f44	        0x488b4e08	                mov rcx, qword [rsi + 8]	      2461	display.c	FUNCTION_19	IF_2
0x4003f48	    0x486305000000	         movsxd rax, dword [0x04003f4f] 	      2461	display.c	FUNCTION_19	IF_2
0x4003f4f	        0x4883c001	                              add rax, 1	      2461	display.c	FUNCTION_19	IF_2
0x4003f53	        0x8b5481fc	        mov edx, dword [rcx + rax*4 - 4]	      2461	display.c	FUNCTION_19	IF_2
0x4003f57	          0x8b3c81	            mov edi, dword [rcx + rax*4]	      2461	display.c	FUNCTION_19	IF_2
0x4003f5a	            0x29d7	                            sub edi, edx	      2461	display.c	FUNCTION_19	IF_2
0x4003f5c	    0x3b3d00000000	            cmp edi, dword [0x04003f62] 	      2461	display.c	FUNCTION_19	IF_2
0x4003f62	            0x7540	                           jne 0x4003fa4	      2461	display.c	FUNCTION_19	IF_2
0x4003f64	          0x4863d2	                         movsxd rdx, edx	      2465	display.c	FUNCTION_19	IF_2
0x4003f67	          0x4889d3	                            mov rbx, rdx	      2465	display.c	FUNCTION_19	IF_2
0x4003f6a	          0x48031e	                    add rbx, qword [rsi]	      2465	display.c	FUNCTION_19	IF_2
0x4003f6d	    0xc70500000000	     mov dword [0x04003f77], 0xffffffff 	      2466	display.c	FUNCTION_19	IF_2
0x4003f77	          0x83ef01	                              sub edi, 1	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4003f7a	          0x4889de	                            mov rsi, rbx	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4003f7d	      0xe800000000	                          call 0x4003f82	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x4003f82	      0xbf00000000	                              mov edi, 0	      2468	display.c	FUNCTION_19	IF_2	CALL_3
0x4003f87	      0xe800000000	                          call 0x4003f8c	      2468	display.c	FUNCTION_19	IF_2	CALL_3
0x4003f8c	    0x486305000000	         movsxd rax, dword [0x04003f93] 	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4003f93	       0xfbe7c03ff	         movsx edi, byte [rbx + rax - 1]	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4003f98	    0x488b35000000	            mov rsi, qword [0x04003f9f] 	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4003f9f	      0xe800000000	                          call 0x4003fa4	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4003fa4	    0xc70500000000	               mov dword [0x04003fae], 0	      2471	display.c	FUNCTION_19
0x4003fae	      0xe800000000	                          call 0x4003fb3	      2472	display.c	FUNCTION_19	CALL_5
0x4003fb3	    0x488b3d000000	            mov rdi, qword [0x04003fba] 	      2473	display.c	FUNCTION_19	CALL_6
0x4003fba	      0xe800000000	                          call 0x4003fbf	      2473	display.c	FUNCTION_19	CALL_6
0x4003fbf	    0x830500000000	               add dword [0x04003fc6], 1	      2474	display.c	FUNCTION_19
0x4003fc6	            0xeb07	                           jmp 0x4003fcf	      2475	display.c	FUNCTION_19
0x4003fc8	      0xe800000000	                          call 0x4003fcd	      2459	display.c	FUNCTION_19	CALL_1
0x4003fcd	            0xebd5	                           jmp 0x4003fa4	      2459	display.c	FUNCTION_19	CALL_1
0x4003fcf	              0x5b	                                 pop rbx	      2475	display.c	FUNCTION_19
0x4003fd0	              0xc3	                                     ret	      2475	display.c	FUNCTION_19
_rl_move_vert	functions,0:DO,0:FOR,2:IF,3:WHILE,0:ELSE,1:CALL,7:SWITCH,0	47
0x4000e4e	    0x8b0500000000	            mov eax, dword [0x04000e54] 	      2047	display.c	FUNCTION_6	IF_1
0x4000e54	            0x39f8	                            cmp eax, edi	      2047	display.c	FUNCTION_6	IF_1
0x4000e56	     0xf849e000000	                            je 0x4000efa	      2047	display.c	FUNCTION_6	IF_1
0x4000e5c	    0x3b3d00000000	            cmp edi, dword [0x04000e62] 	      2047	display.c	FUNCTION_6	IF_1
0x4000e62	     0xf8f92000000	                            jg 0x4000efa	      2047	display.c	FUNCTION_6	IF_1
0x4000e68	            0x4154	                                push r12	      2044	display.c	FUNCTION_6
0x4000e6a	              0x55	                                push rbp	      2044	display.c	FUNCTION_6
0x4000e6b	              0x53	                                push rbx	      2044	display.c	FUNCTION_6
0x4000e6c	          0x4189fc	                           mov r12d, edi	      2044	display.c	FUNCTION_6
0x4000e6f	            0x89fd	                            mov ebp, edi	      2050	display.c	FUNCTION_6	IF_2
0x4000e71	            0x29c5	                            sub ebp, eax	      2050	display.c	FUNCTION_6	IF_2
0x4000e73	            0x85ed	                           test ebp, ebp	      2050	display.c	FUNCTION_6	IF_2
0x4000e75	            0x7e3f	                           jle 0x4000eb6	      2050	display.c	FUNCTION_6	IF_2
0x4000e77	      0xbb00000000	                              mov ebx, 0	      2050	display.c	FUNCTION_6	IF_2
0x4000e7c	    0x488b35000000	            mov rsi, qword [0x04000e83] 	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4000e83	      0xbf0a000000	                            mov edi, 0xa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4000e88	      0xe800000000	                          call 0x4000e8d	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4000e8d	          0x83c301	                              add ebx, 1	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4000e90	            0x39dd	                            cmp ebp, ebx	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4000e92	            0x75e8	                           jne 0x4000e7c	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4000e94	      0xba00000000	                              mov edx, 0	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4000e99	      0xbe01000000	                              mov esi, 1	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4000e9e	    0x488b3d000000	            mov rdi, qword [0x04000ea5] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4000ea5	      0xe800000000	                          call 0x4000eaa	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4000eaa	    0xc70500000000	               mov dword [0x04000eb4], 0	      2059	display.c	FUNCTION_6	IF_2
0x4000eb4	            0xeb39	                           jmp 0x4000eef	      2059	display.c	FUNCTION_6	IF_2
0x4000eb6	    0x488b05000000	            mov rax, qword [0x04000ebd] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000ebd	          0x4885c0	                           test rax, rax	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000ec0	            0x742d	                            je 0x4000eef	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000ec2	          0x803800	                       cmp byte [rax], 0	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000ec5	            0x7428	                            je 0x4000eef	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000ec7	            0xf7dd	                                 neg ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000ec9	            0x85ed	                           test ebp, ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000ecb	            0x7e22	                           jle 0x4000eef	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000ecd	      0xbb00000000	                              mov ebx, 0	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000ed2	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000ed7	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000edc	    0x488b3d000000	            mov rdi, qword [0x04000ee3] 	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000ee3	      0xe800000000	                          call 0x4000ee8	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000ee8	          0x83c301	                              add ebx, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000eeb	            0x39eb	                            cmp ebx, ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000eed	            0x75e3	                           jne 0x4000ed2	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000eef	    0x448925000000	           mov dword [0x04000ef6], r12d 	      2077	display.c	FUNCTION_6
0x4000ef6	              0x5b	                                 pop rbx	      2078	display.c	FUNCTION_6
0x4000ef7	              0x5d	                                 pop rbp	      2078	display.c	FUNCTION_6
0x4000ef8	            0x415c	                                 pop r12	      2078	display.c	FUNCTION_6
0x4000efa	            0xf3c3	                                     ret	      2078	display.c	FUNCTION_6
cr	functions,0:DO,0:FOR,0:IF,1:WHILE,0:ELSE,0:CALL,2:SWITCH,0	10
0x40001d1	    0x488b3d000000	            mov rdi, qword [0x040001d8] 	      2481	display.c	FUNCTION_20	IF_1
0x40001d8	          0x4885ff	                           test rdi, rdi	      2481	display.c	FUNCTION_20	IF_1
0x40001db	            0x7421	                            je 0x40001fe	      2481	display.c	FUNCTION_20	IF_1
0x40001dd	        0x4883ec08	                              sub rsp, 8	      2480	display.c	FUNCTION_20
0x40001e1	      0xba00000000	                              mov edx, 0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40001e6	      0xbe01000000	                              mov esi, 1	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40001eb	      0xe800000000	                          call 0x40001f0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40001f0	    0xc70500000000	               mov dword [0x040001fa], 0	      2488	display.c	FUNCTION_20	IF_1
0x40001fa	        0x4883c408	                              add rsp, 8	      2490	display.c	FUNCTION_20
0x40001fe	            0xf3c3	                                     ret	      2490	display.c	FUNCTION_20
rl_redisplay	functions,0:DO,0:FOR,6:IF,72:WHILE,5:ELSE,29:CALL,54:SWITCH,0	1330
0x4002914	            0x4157	                                push r15	       499	display.c	FUNCTION_2
0x4002916	            0x4156	                                push r14	       499	display.c	FUNCTION_2
0x4002918	            0x4155	                                push r13	       499	display.c	FUNCTION_2
0x400291a	            0x4154	                                push r12	       499	display.c	FUNCTION_2
0x400291c	              0x55	                                push rbp	       499	display.c	FUNCTION_2
0x400291d	              0x53	                                push rbx	       499	display.c	FUNCTION_2
0x400291e	        0x4883ec58	                           sub rsp, 0x58	       499	display.c	FUNCTION_2
0x4002922	    0x64488b042528	                mov rax, qword fs:[0x28]	       499	display.c	FUNCTION_2
0x400292b	      0x4889442448	             mov qword [rsp + 0x48], rax	       499	display.c	FUNCTION_2
0x4002930	            0x31c0	                            xor eax, eax	       499	display.c	FUNCTION_2
0x4002932	    0x833d00000000	               cmp dword [0x04002939], 0	       513	display.c	FUNCTION_2	IF_1
0x4002939	     0xf845d150000	                            je 0x4003e9c	       513	display.c	FUNCTION_2	IF_1
0x400293f	      0xe800000000	                          call 0x4002944	       518	display.c	FUNCTION_2	CALL_1
0x4002944	    0x810d00000000	         or dword [0x0400294e], 0x800000	       519	display.c	FUNCTION_2	CALL_2
0x400294e	    0x48833d000000	               cmp qword [0x04002956], 0	       521	display.c	FUNCTION_2	IF_2
0x4002956	            0x750b	                           jne 0x4002963	       521	display.c	FUNCTION_2	IF_2
0x4002958	    0x48c705000000	               mov qword [0x04002963], 0	       522	display.c	FUNCTION_2	IF_2
0x4002963	    0x833d00000000	               cmp dword [0x0400296a], 0	       524	display.c	FUNCTION_2	IF_3
0x400296a	            0x7514	                           jne 0x4002980	       524	display.c	FUNCTION_2	IF_3
0x400296c	      0xbf00000000	                              mov edi, 0	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4002971	      0xb800000000	                              mov eax, 0	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4002976	      0xe8c5d6ffff	           call sym.init_line_structures	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x400297b	      0xe800000000	                          call 0x4002980	       527	display.c	FUNCTION_2	IF_3	CALL_4
0x4002980	    0xc70500000000	     mov dword [0x0400298a], 0xffffffff 	       531	display.c	FUNCTION_2
0x400298a	    0x8b0500000000	            mov eax, dword [0x04002990] 	       533	display.c	FUNCTION_2
0x4002990	    0x2b0500000000	             sub eax, dword [0x04002996]	       533	display.c	FUNCTION_2
0x4002996	    0x890500000000	            mov dword [0x0400299c], eax 	       533	display.c	FUNCTION_2
0x400299c	    0x488b05000000	            mov rax, qword [0x040029a3] 	       535	display.c	FUNCTION_2
0x40029a3	          0x488b00	                    mov rax, qword [rax]	       535	display.c	FUNCTION_2
0x40029a6	      0x4889442408	                mov qword [rsp + 8], rax	       535	display.c	FUNCTION_2
0x40029ab	    0xc70500000000	               mov dword [0x040029b5], 0	       540	display.c	FUNCTION_2
0x40029b5	      0xbb00000000	                              mov ebx, 0	       536	display.c	FUNCTION_2
0x40029ba	    0x833d00000000	               cmp dword [0x040029c1], 0	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40029c1	            0x743d	                            je 0x4002a00	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40029c3	      0xe800000000	                          call 0x40029c8	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40029c8	          0x4885c0	                           test rax, rax	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40029cb	            0x7427	                            je 0x40029f4	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40029cd	    0x48833d000000	               cmp qword [0x040029d5], 0	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40029d5	            0x7424	                            je 0x40029fb	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40029d7	      0x488b442408	                mov rax, qword [rsp + 8]	       543	display.c	FUNCTION_2	IF_4
0x40029dc	          0xc6002a	                    mov byte [rax], 0x2a	       543	display.c	FUNCTION_2	IF_4
0x40029df	        0xc6400100	                   mov byte [rax + 1], 0	       544	display.c	FUNCTION_2	IF_4
0x40029e3	    0xc70500000000	               mov dword [0x040029ed], 1	       545	display.c	FUNCTION_2	IF_4
0x40029ed	      0xbb01000000	                              mov ebx, 1	       543	display.c	FUNCTION_2	IF_4
0x40029f2	            0xeb0c	                           jmp 0x4002a00	       543	display.c	FUNCTION_2	IF_4
0x40029f4	      0xbb00000000	                              mov ebx, 0	       536	display.c	FUNCTION_2
0x40029f9	            0xeb05	                           jmp 0x4002a00	       536	display.c	FUNCTION_2
0x40029fb	      0xbb00000000	                              mov ebx, 0	       536	display.c	FUNCTION_2
0x4002a00	    0x488b05000000	            mov rax, qword [0x04002a07] 	       551	display.c	FUNCTION_2	IF_5
0x4002a07	          0x488b10	                    mov rdx, qword [rax]	       551	display.c	FUNCTION_2	IF_5
0x4002a0a	    0x488b05000000	            mov rax, qword [0x04002a11] 	       551	display.c	FUNCTION_2	IF_5
0x4002a11	          0x488b00	                    mov rax, qword [rax]	       551	display.c	FUNCTION_2	IF_5
0x4002a14	           0xfb600	                   movzx eax, byte [rax]	       551	display.c	FUNCTION_2	IF_5
0x4002a17	            0x3802	                      cmp byte [rdx], al	       551	display.c	FUNCTION_2	IF_5
0x4002a19	            0x740a	                            je 0x4002a25	       551	display.c	FUNCTION_2	IF_5
0x4002a1b	    0xc70500000000	               mov dword [0x04002a25], 0	       552	display.c	FUNCTION_2	IF_5
0x4002a25	    0x488b2d000000	            mov rbp, qword [0x04002a2c] 	       558	display.c	FUNCTION_2	IF_6
0x4002a2c	    0x483b2d000000	            cmp rbp, qword [0x04002a33] 	       558	display.c	FUNCTION_2	IF_6
0x4002a33	            0x740e	                            je 0x4002a43	       558	display.c	FUNCTION_2	IF_6
0x4002a35	    0x48833d000000	               cmp qword [0x04002a3d], 0	       558	display.c	FUNCTION_2	IF_6
0x4002a3d	     0xf84eb000000	                            je 0x4002b2e	       558	display.c	FUNCTION_2	IF_6
0x4002a43	    0x488b15000000	            mov rdx, qword [0x04002a4a] 	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002a4a	          0x4885d2	                           test rdx, rdx	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002a4d	            0x742c	                            je 0x4002a7b	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002a4f	    0x833d00000000	               cmp dword [0x04002a56], 0	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002a56	            0x7423	                            je 0x4002a7b	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002a58	      0xb800000000	                              mov eax, 0	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a5d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a64	          0x4889d7	                            mov rdi, rdx	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a67	            0xf2ae	              repne scasb al, byte [rdi]	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a69	          0x4889c8	                            mov rax, rcx	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a6c	          0x48f7d0	                                 not rax	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a6f	        0x488d70ff	                      lea rsi, [rax - 1]	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a73	          0x4889d7	                            mov rdi, rdx	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a76	      0xe800000000	                          call 0x4002a7b	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4002a7b	    0x8b0500000000	            mov eax, dword [0x04002a81] 	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4002a81	            0x85c0	                           test eax, eax	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4002a83	     0xf8e82000000	                           jle 0x4002b0b	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4002a89	             0x1d8	                            add eax, ebx	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4002a8b	          0x8d5002	                      lea edx, [rax + 2]	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4002a8e	    0x3b1500000000	            cmp edx, dword [0x04002a94] 	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002a94	            0x7c56	                            jl 0x4002aec	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002a96	       0x502040000	                          add eax, 0x402	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002a9b	            0x89d1	                            mov ecx, edx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002a9d	          0xc1f91f	                           sar ecx, 0x1f	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002aa0	          0xc1e916	                           shr ecx, 0x16	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002aa3	             0x1ca	                            add edx, ecx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002aa5	    0x81e2ff030000	                          and edx, 0x3ff	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002aab	            0x29ca	                            sub edx, ecx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002aad	            0x29d0	                            sub eax, edx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002aaf	    0x890500000000	            mov dword [0x04002ab5], eax 	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002ab5	    0x488b2d000000	            mov rbp, qword [0x04002abc] 	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4002abc	          0x4863f0	                         movsxd rsi, eax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4002abf	        0x488b7d00	                    mov rdi, qword [rbp]	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4002ac3	      0xe800000000	                          call 0x4002ac8	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4002ac8	        0x48894500	                    mov qword [rbp], rax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4002acc	    0x488b2d000000	            mov rbp, qword [0x04002ad3] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4002ad3	    0x486335000000	         movsxd rsi, dword [0x04002ada] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4002ada	        0x488b7d00	                    mov rdi, qword [rbp]	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4002ade	      0xe800000000	                          call 0x4002ae3	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4002ae3	      0x4889442408	                mov qword [rsp + 8], rax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4002ae8	        0x48894500	                    mov qword [rbp], rax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4002aec	    0x8b2d00000000	            mov ebp, dword [0x04002af2] 	       572	display.c	FUNCTION_2	IF_6	IF_8	CALL_10
0x4002af2	          0x4863d5	                         movsxd rdx, ebp	       126	string3.h	FUNCTION_50	CALL_3
0x4002af5	          0x4863fb	                         movsxd rdi, ebx	       126	string3.h	FUNCTION_50	CALL_3
0x4002af8	      0x48037c2408	                add rdi, qword [rsp + 8]	       126	string3.h	FUNCTION_50	CALL_3
0x4002afd	    0x488b35000000	            mov rsi, qword [0x04002b04] 	       126	string3.h	FUNCTION_50	CALL_3
0x4002b04	      0xe800000000	                          call 0x4002b09	       126	string3.h	FUNCTION_50	CALL_3
0x4002b09	             0x1eb	                            add ebx, ebp	       573	display.c	FUNCTION_2	IF_6	IF_8
0x4002b0b	          0x4863c3	                         movsxd rax, ebx	       575	display.c	FUNCTION_2	IF_6
0x4002b0e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       575	display.c	FUNCTION_2	IF_6
0x4002b13	        0xc6040700	                 mov byte [rdi + rax], 0	       575	display.c	FUNCTION_2	IF_6
0x4002b17	    0x8b0500000000	            mov eax, dword [0x04002b1d] 	       576	display.c	FUNCTION_2	IF_6
0x4002b1d	    0x2b0500000000	             sub eax, dword [0x04002b23]	       576	display.c	FUNCTION_2	IF_6
0x4002b23	    0x890500000000	            mov dword [0x04002b29], eax 	       576	display.c	FUNCTION_2	IF_6
0x4002b29	      0xe905010000	                           jmp 0x4002c33	       576	display.c	FUNCTION_2	IF_6
0x4002b2e	      0xbe0a000000	                            mov esi, 0xa	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4002b33	          0x4889ef	                            mov rdi, rbp	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4002b36	      0xe800000000	                          call 0x4002b3b	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4002b3b	          0x4989c4	                            mov r12, rax	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x4002b3e	          0x4885c0	                           test rax, rax	       582	display.c	FUNCTION_2	ELSE_1	IF_10
0x4002b41	            0x7433	                            je 0x4002b76	       582	display.c	FUNCTION_2	ELSE_1	IF_10
0x4002b43	        0x4c8d6801	                      lea r13, [rax + 1]	       586	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4002b47	    0x833d00000000	               cmp dword [0x04002b4e], 0	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x4002b4e	            0x7429	                            je 0x4002b79	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x4002b50	          0x4d89ef	                            mov r15, r13	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4002b53	          0x4929ef	                            sub r15, rbp	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4002b56	          0x4489fe	                           mov esi, r15d	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4002b59	          0x4889ef	                            mov rdi, rbp	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4002b5c	      0xe800000000	                          call 0x4002b61	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4002b61	        0x4183ff01	                             cmp r15d, 1	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4002b65	            0x7e08	                           jle 0x4002b6f	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4002b67	    0x41807c24ff0d	                 cmp byte [r12 - 1], 0xd	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4002b6d	            0x740a	                            je 0x4002b79	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4002b6f	      0xe85dd6ffff	                             call sym.cr	       594	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_13
0x4002b74	            0xeb03	                           jmp 0x4002b79	       594	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_13
0x4002b76	          0x4989ed	                            mov r13, rbp	       583	display.c	FUNCTION_2	ELSE_1	IF_10
0x4002b79	      0xb800000000	                              mov eax, 0	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4002b7e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4002b85	          0x4c89ef	                            mov rdi, r13	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4002b88	            0xf2ae	              repne scasb al, byte [rdi]	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4002b8a	          0x4889c8	                            mov rax, rcx	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4002b8d	          0x48f7d0	                                 not rax	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4002b90	        0x488d68ff	                      lea rbp, [rax - 1]	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4002b94	    0x892d00000000	            mov dword [0x04002b9a], ebp 	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4002b9a	        0x448d242b	                   lea r12d, [rbx + rbp]	       599	display.c	FUNCTION_2	ELSE_1
0x4002b9e	      0x418d442402	                      lea eax, [r12 + 2]	       599	display.c	FUNCTION_2	ELSE_1
0x4002ba3	    0x3b0500000000	            cmp eax, dword [0x04002ba9] 	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002ba9	            0x7c54	                            jl 0x4002bff	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bab	    0x418d94240204	                  lea edx, [r12 + 0x402]	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bb3	            0x89c1	                            mov ecx, eax	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bb5	          0xc1f91f	                           sar ecx, 0x1f	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bb8	          0xc1e916	                           shr ecx, 0x16	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bbb	             0x1c8	                            add eax, ecx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bbd	      0x25ff030000	                          and eax, 0x3ff	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bc2	            0x29c8	                            sub eax, ecx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bc4	            0x29c2	                            sub edx, eax	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bc6	    0x891500000000	            mov dword [0x04002bcc], edx 	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4002bcc	    0x4c8b3d000000	            mov r15, qword [0x04002bd3] 	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4002bd3	          0x4863f2	                         movsxd rsi, edx	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4002bd6	          0x498b3f	                    mov rdi, qword [r15]	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4002bd9	      0xe800000000	                          call 0x4002bde	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4002bde	          0x498907	                    mov qword [r15], rax	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4002be1	    0x4c8b3d000000	            mov r15, qword [0x04002be8] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4002be8	    0x486335000000	         movsxd rsi, dword [0x04002bef] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4002bef	          0x498b3f	                    mov rdi, qword [r15]	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4002bf2	      0xe800000000	                          call 0x4002bf7	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4002bf7	      0x4889442408	                mov qword [rsp + 8], rax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4002bfc	          0x498907	                    mov qword [r15], rax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4002bff	          0x4863d5	                         movsxd rdx, ebp	       126	string3.h	FUNCTION_50	CALL_3
0x4002c02	          0x4863fb	                         movsxd rdi, ebx	       126	string3.h	FUNCTION_50	CALL_3
0x4002c05	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       126	string3.h	FUNCTION_50	CALL_3
0x4002c0a	          0x4801df	                            add rdi, rbx	       126	string3.h	FUNCTION_50	CALL_3
0x4002c0d	          0x4c89ee	                            mov rsi, r13	       126	string3.h	FUNCTION_50	CALL_3
0x4002c10	      0xe800000000	                          call 0x4002c15	       126	string3.h	FUNCTION_50	CALL_3
0x4002c15	          0x4963c4	                        movsxd rax, r12d	       608	display.c	FUNCTION_2	ELSE_1
0x4002c18	        0xc6040300	                 mov byte [rbx + rax], 0	       608	display.c	FUNCTION_2	ELSE_1
0x4002c1c	    0xc70500000000	               mov dword [0x04002c26], 0	       609	display.c	FUNCTION_2	ELSE_1
0x4002c26	    0xc70500000000	               mov dword [0x04002c30], 0	       609	display.c	FUNCTION_2	ELSE_1
0x4002c30	          0x4489e3	                           mov ebx, r12d	       607	display.c	FUNCTION_2	ELSE_1
0x4002c33	    0x488b05000000	            mov rax, qword [0x04002c3a] 	       660	display.c	FUNCTION_2
0x4002c3a	        0x488b5008	                mov rdx, qword [rax + 8]	       660	display.c	FUNCTION_2
0x4002c3e	    0xc70200000000	                      mov dword [rdx], 0	       660	display.c	FUNCTION_2
0x4002c44	    0x8b2d00000000	            mov ebp, dword [0x04002c4a] 	       661	display.c	FUNCTION_2
0x4002c4a	     0x32d00000000	             add ebp, dword [0x04002c50]	       661	display.c	FUNCTION_2
0x4002c50	        0x48635020	         movsxd rdx, dword [rax + 0x20] 	        90	string3.h	FUNCTION_45	CALL_6
0x4002c54	        0x48c1e202	                              shl rdx, 2	        90	string3.h	FUNCTION_45	CALL_6
0x4002c58	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        90	string3.h	FUNCTION_45	CALL_6
0x4002c5c	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_45	CALL_6
0x4002c61	      0xe800000000	                          call 0x4002c66	        90	string3.h	FUNCTION_45	CALL_6
0x4002c66	            0x89e8	                            mov eax, ebp	       674	display.c	FUNCTION_2
0x4002c68	              0x99	                                     cdq	       674	display.c	FUNCTION_2
0x4002c69	    0xf73d00000000	                 idiv dword [0x04002c6f]	       674	display.c	FUNCTION_2
0x4002c6f	        0x89442404	                mov dword [rsp + 4], eax	       674	display.c	FUNCTION_2
0x4002c73	    0x41bd00000000	                             mov r13d, 0	       665	display.c	FUNCTION_2
0x4002c79	    0x41bf00000000	                             mov r15d, 0	       660	display.c	FUNCTION_2
0x4002c7f	      0xe92c010000	                           jmp 0x4002db0	       678	display.c	FUNCTION_2	WHILE_1
0x4002c84	      0xe800000000	                          call 0x4002c89	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002c89	        0x4883f801	                              cmp rax, 1	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002c8d	            0x7676	                           jbe 0x4002d05	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002c8f	    0x833d00000000	               cmp dword [0x04002c96], 0	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002c96	            0x756d	                           jne 0x4002d05	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002c98	    0x833d00000000	               cmp dword [0x04002c9f], 0	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002c9f	            0x7e64	                           jle 0x4002d05	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ca1	    0x448b35000000	           mov r14d, dword [0x04002ca8] 	       692	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ca8	          0x4539f5	                          cmp r13d, r14d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cab	            0x7d66	                           jge 0x4002d13	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cad	          0x4589ec	                          mov r12d, r13d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cb0	      0xb901000000	                              mov ecx, 1	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cb5	          0x4489e2	                           mov edx, r12d	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cb8	          0x4489ee	                           mov esi, r13d	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cbb	    0x488b3d000000	            mov rdi, qword [0x04002cc2] 	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cc2	      0xe86fd5ffff	                  call sym._rl_col_width	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cc7	    0x8b1500000000	            mov edx, dword [0x04002ccd] 	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4002ccd	            0x39d0	                            cmp eax, edx	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4002ccf	            0x7e1f	                           jle 0x4002cf0	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4002cd1	      0xba00000000	                              mov edx, 0	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002cd6	          0x4489e6	                           mov esi, r12d	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002cd9	    0x488b3d000000	            mov rdi, qword [0x04002ce0] 	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002ce0	      0xe800000000	                          call 0x4002ce5	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002ce5	          0x4189c4	                           mov r12d, eax	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002ce8	          0x4589ee	                          mov r14d, r13d	       691	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ceb	          0x4189c5	                           mov r13d, eax	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002cee	            0xeb31	                           jmp 0x4002d21	       699	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4002cf0	            0x39d0	                            cmp eax, edx	       701	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	ELSE_3	IF_16
0x4002cf2	            0x7427	                            je 0x4002d1b	       701	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	ELSE_3	IF_16
0x4002cf4	        0x4183c401	                             add r12d, 1	       703	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cf8	          0x4539e6	                          cmp r14d, r12d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cfb	            0x7fb3	                            jg 0x4002cb0	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002cfd	          0x4589ee	                          mov r14d, r13d	       691	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002d00	          0x4589e5	                          mov r13d, r12d	       703	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002d03	            0xeb1c	                           jmp 0x4002d21	       703	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002d05	        0x458d6701	                     lea r12d, [r15 + 1]	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4002d09	    0x440faf250000	           imul r12d, dword [0x04002d11]	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4002d11	            0xeb0e	                           jmp 0x4002d21	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4002d13	          0x4589ee	                          mov r14d, r13d	       691	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002d16	          0x4589ec	                          mov r12d, r13d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002d19	            0xeb06	                           jmp 0x4002d21	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002d1b	          0x4589ee	                          mov r14d, r13d	       691	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002d1e	          0x4589e5	                          mov r13d, r12d	       691	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002d21	    0x48833d000000	               cmp qword [0x04002d29], 0	       716	display.c	FUNCTION_2	WHILE_1
0x4002d29	            0x751f	                           jne 0x4002d4a	       716	display.c	FUNCTION_2	WHILE_1
0x4002d2b	    0x8b0500000000	            mov eax, dword [0x04002d31] 	       715	display.c	FUNCTION_2	WHILE_1
0x4002d31	          0x4585ff	                         test r15d, r15d	       715	display.c	FUNCTION_2	WHILE_1
0x4002d34	            0x7423	                            je 0x4002d59	       715	display.c	FUNCTION_2	WHILE_1
0x4002d36	      0x443b7c2404	               cmp r15d, dword [rsp + 4]	       715	display.c	FUNCTION_2	WHILE_1
0x4002d3b	    0x8b0500000000	            mov eax, dword [0x04002d41] 	       715	display.c	FUNCTION_2	WHILE_1
0x4002d41	     0xf4505000000	          cmovne eax, dword [0x04002d48]	       715	display.c	FUNCTION_2	WHILE_1
0x4002d48	            0xeb0f	                           jmp 0x4002d59	       715	display.c	FUNCTION_2	WHILE_1
0x4002d4a	          0x4585ff	                         test r15d, r15d	       716	display.c	FUNCTION_2	WHILE_1
0x4002d4d	      0xb800000000	                              mov eax, 0	       716	display.c	FUNCTION_2	WHILE_1
0x4002d52	     0xf4405000000	           cmove eax, dword [0x04002d59]	       716	display.c	FUNCTION_2	WHILE_1
0x4002d59	        0x4183c701	                             add r15d, 1	       718	display.c	FUNCTION_2	WHILE_1
0x4002d5d	          0x4963cf	                        movsxd rcx, r15d	       718	display.c	FUNCTION_2	WHILE_1
0x4002d60	    0x488b15000000	            mov rdx, qword [0x04002d67] 	       718	display.c	FUNCTION_2	WHILE_1
0x4002d67	        0x488b5208	                mov rdx, qword [rdx + 8]	       718	display.c	FUNCTION_2	WHILE_1
0x4002d6b	          0x4101c4	                           add r12d, eax	       718	display.c	FUNCTION_2	WHILE_1
0x4002d6e	        0x4489248a	           mov dword [rdx + rcx*4], r12d	       718	display.c	FUNCTION_2	WHILE_1
0x4002d72	      0xe800000000	                          call 0x4002d77	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d77	        0x4883f801	                              cmp rax, 1	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d7b	            0x762d	                           jbe 0x4002daa	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d7d	    0x833d00000000	               cmp dword [0x04002d84], 0	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d84	            0x7524	                           jne 0x4002daa	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d86	    0x833d00000000	               cmp dword [0x04002d8d], 0	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d8d	            0x7e1b	                           jle 0x4002daa	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d8f	      0xb901000000	                              mov ecx, 1	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d94	          0x4489ea	                           mov edx, r13d	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d97	          0x4489f6	                           mov esi, r14d	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002d9a	    0x488b3d000000	            mov rdi, qword [0x04002da1] 	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002da1	      0xe890d4ffff	                  call sym._rl_col_width	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002da6	            0x29c5	                            sub ebp, eax	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002da8	            0xeb06	                           jmp 0x4002db0	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002daa	    0x2b2d00000000	             sub ebp, dword [0x04002db0]	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x4002db0	    0x3b2d00000000	            cmp ebp, dword [0x04002db6] 	       678	display.c	FUNCTION_2	WHILE_1
0x4002db6	     0xf8dc8feffff	                           jge 0x4002c84	       678	display.c	FUNCTION_2	WHILE_1
0x4002dbc	    0x44893d000000	           mov dword [0x04002dc3], r15d 	       727	display.c	FUNCTION_2	ELSE_5
0x4002dc3	      0xe800000000	                          call 0x4002dc8	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4002dc8	    0x48c744241001	               mov qword [rsp + 0x10], 1	       744	display.c	FUNCTION_2	ELSE_6
0x4002dd1	        0x4883f801	                              cmp rax, 1	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4002dd5	            0x7634	                           jbe 0x4002e0b	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4002dd7	    0x833d00000000	               cmp dword [0x04002dde], 0	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4002dde	            0x752b	                           jne 0x4002e0b	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4002de0	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_45	CALL_6
0x4002de9	    0x486315000000	         movsxd rdx, dword [0x04002df0] 	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002df0	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002df5	    0x488b35000000	            mov rsi, qword [0x04002dfc] 	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002dfc	      0x488d7c243c	                   lea rdi, [rsp + 0x3c]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002e01	      0xe800000000	                          call 0x4002e06	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002e06	      0x4889442410	             mov qword [rsp + 0x10], rax	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002e0b	    0xc74424200000	               mov dword [rsp + 0x20], 0	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002e13	    0xc74424280000	               mov dword [rsp + 0x28], 0	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002e1b	    0xc74424040000	                  mov dword [rsp + 4], 0	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002e23	      0xe9ec070000	                           jmp 0x4003614	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4002e28	      0x4863442404	            movsxd rax, dword [rsp + 4] 	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4002e2d	          0x4889c1	                            mov rcx, rax	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4002e30	      0x4889442418	             mov qword [rsp + 0x18], rax	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4002e35	    0x488b05000000	            mov rax, qword [0x04002e3c] 	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4002e3c	      0x440fb62c08	            movzx r13d, byte [rax + rcx]	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4002e41	        0x450fb6f5	                        movzx r14d, r13b	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4002e45	      0xe800000000	                          call 0x4002e4a	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4002e4a	        0x4883f801	                              cmp rax, 1	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4002e4e	            0x765e	                           jbe 0x4002eae	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4002e50	    0x833d00000000	               cmp dword [0x04002e57], 0	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4002e57	            0x7555	                           jne 0x4002eae	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4002e59	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4002e5e	        0x4883c002	                              add rax, 2	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4002e62	        0x4883f801	                              cmp rax, 1	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4002e66	            0x771c	                            ja 0x4002e84	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4002e68	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_45	CALL_6
0x4002e71	    0xc74424240100	               mov dword [rsp + 0x24], 1	       761	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4002e79	    0x48c744241001	               mov qword [rsp + 0x10], 1	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4002e82	            0xeb2a	                           jmp 0x4002eae	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4002e84	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       764	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21	CALL_24
0x4002e8a	     0xf8494070000	                            je 0x4003624	       764	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21	CALL_24
0x4002e90	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4002e94	      0xb800000000	                              mov eax, 0	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4002e99	      0xe800000000	                          call 0x4002e9e	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4002e9e	            0x89c7	                            mov edi, eax	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4002ea0	            0x85c0	                           test eax, eax	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4002ea2	      0xb801000000	                              mov eax, 1	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4002ea7	           0xf49c7	                         cmovns eax, edi	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4002eaa	        0x89442424	             mov dword [rsp + 0x24], eax	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4002eae	        0x448d6308	                     lea r12d, [rbx + 8]	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002eb2	    0x8b3500000000	            mov esi, dword [0x04002eb8] 	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002eb8	          0x4139f4	                           cmp r12d, esi	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002ebb	            0x7c59	                            jl 0x4002f16	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002ebd	             0x1f6	                            add esi, esi	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002ebf	    0x893500000000	            mov dword [0x04002ec5], esi 	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002ec5	    0x488b05000000	            mov rax, qword [0x04002ecc] 	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4002ecc	          0x4863f6	                         movsxd rsi, esi	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4002ecf	      0x4889442408	                mov qword [rsp + 8], rax	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4002ed4	          0x488b38	                    mov rdi, qword [rax]	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4002ed7	      0xe800000000	                          call 0x4002edc	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4002edc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4002ee1	          0x488907	                    mov qword [rdi], rax	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4002ee4	    0x488b05000000	            mov rax, qword [0x04002eeb] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4002eeb	    0x486335000000	         movsxd rsi, dword [0x04002ef2] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4002ef2	      0x4889442408	                mov qword [rsp + 8], rax	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4002ef7	          0x488b38	                    mov rdi, qword [rax]	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4002efa	      0xe800000000	                          call 0x4002eff	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4002eff	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4002f04	          0x488907	                    mov qword [rdi], rax	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4002f07	    0x488b05000000	            mov rax, qword [0x04002f0e] 	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002f0e	          0x488b00	                    mov rax, qword [rax]	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002f11	      0x4889442408	                mov qword [rsp + 8], rax	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4002f16	        0x8b442404	                mov eax, dword [rsp + 4]	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4002f1a	    0x3b0500000000	            cmp eax, dword [0x04002f20] 	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4002f20	            0x750b	                           jne 0x4002f2d	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4002f22	    0x891d00000000	            mov dword [0x04002f28], ebx 	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4002f28	      0x44897c2428	            mov dword [rsp + 0x28], r15d	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4002f2d	        0x410fb6c5	                         movzx eax, r13b	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4002f31	          0x83c080	             add eax, 0xffffffffffffff80	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4002f34	          0x83f87f	                           cmp eax, 0x7f	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4002f37	     0xf87a1000000	                            ja 0x4002fde	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4002f3d	    0x833d00000000	               cmp dword [0x04002f44], 0	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4002f44	     0xf8594000000	                           jne 0x4002fde	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4002f4a	          0x4863fb	                         movsxd rdi, ebx	        33	stdio2.h	FUNCTION_25	CALL_1
0x4002f4d	      0x48037c2408	                add rdi, qword [rsp + 8]	        33	stdio2.h	FUNCTION_25	CALL_1
0x4002f52	          0x4589f0	                           mov r8d, r14d	        33	stdio2.h	FUNCTION_25	CALL_1
0x4002f55	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_25	CALL_1
0x4002f5a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_25	CALL_1
0x4002f61	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_25	CALL_1
0x4002f66	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_25	CALL_1
0x4002f6b	      0xe800000000	                          call 0x4002f70	        33	stdio2.h	FUNCTION_25	CALL_1
0x4002f70	          0x8d4504	                      lea eax, [rbp + 4]	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f73	    0x8b1500000000	            mov edx, dword [0x04002f79] 	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f79	            0x39d0	                            cmp eax, edx	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f7b	            0x7c57	                            jl 0x4002fd4	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f7d	            0x29ea	                            sub edx, ebp	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f7f	            0x89d5	                            mov ebp, edx	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f81	    0x4c8b25000000	            mov r12, qword [0x04002f88] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f88	      0x418b442410	            mov eax, dword [r12 + 0x10] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f8d	          0x8d50fe	                      lea edx, [rax - 2]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f90	          0x4139d7	                           cmp r15d, edx	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f93	            0x7c20	                            jl 0x4002fb5	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f95	             0x1c0	                            add eax, eax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f97	      0x4189442410	             mov dword [r12 + 0x10], eax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f9c	            0x4898	                                    cdqe	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002f9e	    0x488d34850000	                        lea rsi, [rax*4]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fa6	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fab	      0xe800000000	                          call 0x4002fb0	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fb0	      0x4989442408	                mov qword [r12 + 8], rax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fb5	        0x4183c701	                             add r15d, 1	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fb9	          0x4963d7	                        movsxd rdx, r15d	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fbc	    0x488b05000000	            mov rax, qword [0x04002fc3] 	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fc3	        0x488b4008	                mov rax, qword [rax + 8]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fc7	          0x8d0c2b	                    lea ecx, [rbx + rbp]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fca	          0x890c90	            mov dword [rax + rdx*4], ecx	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fcd	      0xb804000000	                              mov eax, 4	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fd2	            0x29e8	                            sub eax, ebp	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4002fd4	          0x83c304	                              add ebx, 4	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4002fd7	            0x89c5	                            mov ebp, eax	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4002fd9	      0xe9e6050000	                           jmp 0x40035c4	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4002fde	        0x4183fe09	                             cmp r14d, 9	       817	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002fe2	     0xf85cf000000	                           jne 0x40030b7	       817	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002fe8	            0x89ea	                            mov edx, ebp	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002fea	          0xc1fa1f	                           sar edx, 0x1f	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002fed	          0xc1ea1d	                           shr edx, 0x1d	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002ff0	        0x8d441500	                    lea eax, [rbp + rdx]	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002ff4	          0x83e007	                              and eax, 7	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002ff7	            0x29d0	                            sub eax, edx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002ff9	          0x4129c4	                           sub r12d, eax	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002ffc	          0x4589e5	                          mov r13d, r12d	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4002fff	          0x4129dd	                           sub r13d, ebx	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003002	      0x428d542d00	                    lea edx, [rbp + r13]	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003007	    0x8b0500000000	            mov eax, dword [0x0400300d] 	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400300d	            0x39c2	                            cmp edx, eax	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400300f	            0x7d0d	                           jge 0x400301e	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003011	            0x89d5	                            mov ebp, edx	       841	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12
0x4003013	          0x4439e3	                           cmp ebx, r12d	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003016	     0xf8da8050000	                           jge 0x40035c4	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400301c	            0xeb79	                           jmp 0x4003097	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400301e	            0x29e8	                            sub eax, ebp	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003020	            0x89c5	                            mov ebp, eax	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003022	    0x4c8b35000000	            mov r14, qword [0x04003029] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003029	        0x418b4610	            mov eax, dword [r14 + 0x10] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400302d	          0x8d50fe	                      lea edx, [rax - 2]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003030	          0x4139d7	                           cmp r15d, edx	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003033	            0x7c1d	                            jl 0x4003052	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003035	             0x1c0	                            add eax, eax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003037	        0x41894610	             mov dword [r14 + 0x10], eax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400303b	            0x4898	                                    cdqe	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400303d	    0x488d34850000	                        lea rsi, [rax*4]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003045	        0x498b7e08	                mov rdi, qword [r14 + 8]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003049	      0xe800000000	                          call 0x400304e	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400304e	        0x49894608	                mov qword [r14 + 8], rax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003052	        0x4183c701	                             add r15d, 1	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003056	          0x4963d7	                        movsxd rdx, r15d	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003059	    0x488b05000000	            mov rax, qword [0x04003060] 	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003060	        0x488b4008	                mov rax, qword [rax + 8]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003064	          0x8d0c2b	                    lea ecx, [rbx + rbp]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003067	          0x890c90	            mov dword [rax + rdx*4], ecx	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400306a	          0x4129ed	                           sub r13d, ebp	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400306d	          0x4489ed	                           mov ebp, r13d	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003070	          0x4439e3	                           cmp ebx, r12d	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4003073	     0xf8d4b050000	                           jge 0x40035c4	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4003079	      0x488b542408	                mov rdx, qword [rsp + 8]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400307e	          0x8d4301	                      lea eax, [rbx + 1]	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4003081	          0x4863db	                         movsxd rbx, ebx	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4003084	        0xc6041a20	              mov byte [rdx + rbx], 0x20	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4003088	            0x89c3	                            mov ebx, eax	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400308a	          0x4139c4	                           cmp r12d, eax	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400308d	            0x75ef	                           jne 0x400307e	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400308f	          0x4489e3	                           mov ebx, r12d	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4003092	      0xe92d050000	                           jmp 0x40035c4	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4003097	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x400309c	          0x8d4301	                      lea eax, [rbx + 1]	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400309f	          0x4863db	                         movsxd rbx, ebx	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40030a2	        0xc6041920	              mov byte [rcx + rbx], 0x20	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40030a6	            0x89c3	                            mov ebx, eax	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40030a8	          0x4139c4	                           cmp r12d, eax	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40030ab	            0x75ef	                           jne 0x400309c	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40030ad	          0x4489e3	                           mov ebx, r12d	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40030b0	            0x89d5	                            mov ebp, edx	       841	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12
0x40030b2	      0xe90d050000	                           jmp 0x40035c4	       841	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12
0x40030b7	        0x4183fe0a	                           cmp r14d, 0xa	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030bb	            0x757c	                           jne 0x4003139	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030bd	    0x833d00000000	               cmp dword [0x040030c4], 0	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030c4	     0xf8584000000	                           jne 0x400314e	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030ca	    0x488b05000000	            mov rax, qword [0x040030d1] 	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030d1	          0x4885c0	                           test rax, rax	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030d4	            0x7478	                            je 0x400314e	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030d6	          0x803800	                       cmp byte [rax], 0	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030d9	            0x7473	                            je 0x400314e	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030db	          0x8d6b01	                      lea ebp, [rbx + 1]	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030de	          0x4863db	                         movsxd rbx, ebx	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030e1	      0x488b442408	                mov rax, qword [rsp + 8]	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030e6	        0xc6041800	                 mov byte [rax + rbx], 0	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030ea	    0x488b1d000000	            mov rbx, qword [0x040030f1] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030f1	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030f4	          0x8d50fe	                      lea edx, [rax - 2]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030f7	          0x4139d7	                           cmp r15d, edx	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030fa	            0x7c1c	                            jl 0x4003118	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030fc	             0x1c0	                            add eax, eax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40030fe	          0x894310	             mov dword [rbx + 0x10], eax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003101	            0x4898	                                    cdqe	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003103	    0x488d34850000	                        lea rsi, [rax*4]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400310b	        0x488b7b08	                mov rdi, qword [rbx + 8]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400310f	      0xe800000000	                          call 0x4003114	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003114	        0x48894308	                mov qword [rbx + 8], rax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003118	        0x4183c701	                             add r15d, 1	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400311c	          0x4963d7	                        movsxd rdx, r15d	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400311f	    0x488b05000000	            mov rax, qword [0x04003126] 	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003126	        0x488b4008	                mov rax, qword [rax + 8]	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400312a	          0x892c90	            mov dword [rax + rdx*4], ebp	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400312d	            0x89eb	                            mov ebx, ebp	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400312f	      0xbd00000000	                              mov ebp, 0	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003134	      0xe98b040000	                           jmp 0x40035c4	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003139	        0x4183fe1f	                          cmp r14d, 0x1f	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x400313d	            0x7f05	                            jg 0x4003144	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x400313f	          0x4584ed	                         test r13b, r13b	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003142	            0x790a	                           jns 0x400314e	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003144	        0x4183fe7f	                          cmp r14d, 0x7f	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003148	     0xf8597010000	                           jne 0x40032e5	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x400314e	        0x448d6301	                     lea r12d, [rbx + 1]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003152	          0x4863c3	                         movsxd rax, ebx	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003155	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400315a	        0xc604075e	              mov byte [rdi + rax], 0x5e	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400315e	          0x83c501	                              add ebp, 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003161	    0x3b2d00000000	            cmp ebp, dword [0x04003167] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003167	     0xf8c8f000000	                            jl 0x40031fc	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400316d	    0x488b2d000000	            mov rbp, qword [0x04003174] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003174	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003177	          0x8d50fe	                      lea edx, [rax - 2]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400317a	          0x4139d7	                           cmp r15d, edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400317d	            0x7c1c	                            jl 0x400319b	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400317f	             0x1c0	                            add eax, eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003181	          0x894510	            mov dword [rbp + 0x10], eax 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003184	            0x4898	                                    cdqe	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003186	    0x488d34850000	                        lea rsi, [rax*4]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400318e	        0x488b7d08	                mov rdi, qword [rbp + 8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003192	      0xe800000000	                          call 0x4003197	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003197	        0x48894508	                mov qword [rbp + 8], rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400319b	    0x488b2d000000	            mov rbp, qword [0x040031a2] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031a2	        0x4183c701	                             add r15d, 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031a6	          0x4963c7	                        movsxd rax, r15d	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031a9	          0x4889c1	                            mov rcx, rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031ac	      0x4889442418	             mov qword [rsp + 0x18], rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031b1	        0x488b4508	                mov rax, qword [rbp + 8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031b5	        0x44892488	           mov dword [rax + rcx*4], r12d	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031b9	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031bc	          0x8d50ff	                      lea edx, [rax - 1]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031bf	          0x4139d7	                           cmp r15d, edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031c2	            0x7c1c	                            jl 0x40031e0	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031c4	             0x1c0	                            add eax, eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031c6	          0x894520	            mov dword [rbp + 0x20], eax 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031c9	            0x4898	                                    cdqe	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031cb	    0x488d34850000	                        lea rsi, [rax*4]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031d3	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031d7	      0xe800000000	                          call 0x40031dc	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031dc	        0x48894518	            mov qword [rbp + 0x18], rax 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031e0	    0x488b05000000	            mov rax, qword [0x040031e7] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031e7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031eb	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031f0	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031f4	          0x893cb0	            mov dword [rax + rsi*4], edi	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031f7	      0xbd00000000	                              mov ebp, 0	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40031fc	          0x83c302	                              add ebx, 2	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40031ff	          0x4d63e4	                        movsxd r12, r12d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003202	      0x4c03642408	                add r12, qword [rsp + 8]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003207	      0xb83f000000	                           mov eax, 0x3f	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400320c	        0x4183fe1f	                          cmp r14d, 0x1f	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003210	            0x7f38	                            jg 0x400324a	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003212	          0x4584ed	                         test r13b, r13b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003215	            0x7833	                            js 0x400324a	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003217	          0x4589ee	                          mov r14d, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400321a	        0x4183ce40	                           or r14d, 0x40	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400321e	          0x4489f0	                           mov eax, r14d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003221	          0x4538f6	                          cmp r14b, r14b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003224	            0x7524	                           jne 0x400324a	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003226	      0xe800000000	                          call 0x400322b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400322b	        0x450fb6ee	                        movzx r13d, r14b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400322f	          0x488b10	                    mov rdx, qword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003232	          0x4489f0	                           mov eax, r14d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003235	    0x42f6446a0102	         test byte [rdx + r13*2 + 1], 2 	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400323b	            0x740d	                            je 0x400324a	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400323d	      0xe800000000	                          call 0x4003242	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003242	          0x488b00	                    mov rax, qword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003245	      0x420fb604a8	           movzx eax, byte [rax + r13*4]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400324a	        0x41880424	                      mov byte [r12], al	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400324e	          0x83c501	                              add ebp, 1	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003251	    0x3b2d00000000	            cmp ebp, dword [0x04003257] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003257	     0xf8c67030000	                            jl 0x40035c4	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400325d	    0x488b2d000000	            mov rbp, qword [0x04003264] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003264	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003267	          0x8d50fe	                      lea edx, [rax - 2]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400326a	          0x4139d7	                           cmp r15d, edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400326d	            0x7c1c	                            jl 0x400328b	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400326f	             0x1c0	                            add eax, eax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003271	          0x894510	            mov dword [rbp + 0x10], eax 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003274	            0x4898	                                    cdqe	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003276	    0x488d34850000	                        lea rsi, [rax*4]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400327e	        0x488b7d08	                mov rdi, qword [rbp + 8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003282	      0xe800000000	                          call 0x4003287	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003287	        0x48894508	                mov qword [rbp + 8], rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400328b	    0x488b2d000000	            mov rbp, qword [0x04003292] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003292	        0x4183c701	                             add r15d, 1	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003296	          0x4d63e7	                        movsxd r12, r15d	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003299	        0x488b4508	                mov rax, qword [rbp + 8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400329d	        0x42891ca0	            mov dword [rax + r12*4], ebx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032a1	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032a4	          0x8d50ff	                      lea edx, [rax - 1]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032a7	          0x4139d7	                           cmp r15d, edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032aa	            0x7c1c	                            jl 0x40032c8	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032ac	             0x1c0	                            add eax, eax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032ae	          0x894520	            mov dword [rbp + 0x20], eax 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032b1	            0x4898	                                    cdqe	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032b3	    0x488d34850000	                        lea rsi, [rax*4]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032bb	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032bf	      0xe800000000	                          call 0x40032c4	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032c4	        0x48894518	            mov qword [rbp + 0x18], rax 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032c8	    0x488b05000000	            mov rax, qword [0x040032cf] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032cf	        0x488b4018	            mov rax, qword [rax + 0x18] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032d3	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032d7	        0x428934a0	            mov dword [rax + r12*4], esi	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032db	      0xbd00000000	                              mov ebp, 0	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032e0	      0xe9df020000	                           jmp 0x40035c4	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40032e5	      0xe800000000	                          call 0x40032ea	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40032ea	        0x4883f801	                              cmp rax, 1	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40032ee	     0xf8629020000	                           jbe 0x400351d	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40032f4	    0x833d00000000	               cmp dword [0x040032fb], 0	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40032fb	     0xf851c020000	                           jne 0x400351d	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x4003301	    0x8b0500000000	            mov eax, dword [0x04003307] 	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4003307	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x400330b	        0x8d540d00	                    lea edx, [rbp + rcx]	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x400330f	            0x39c2	                            cmp edx, eax	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4003311	     0xf8ed6000000	                           jle 0x40033ed	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4003317	            0x39c5	                            cmp ebp, eax	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003319	     0xf8ddb000000	                           jge 0x40033fa	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400331f	            0x89ea	                            mov edx, ebp	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003321	            0x89d8	                            mov eax, ebx	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003323	            0x29dd	                            sub ebp, ebx	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003325	        0x896c2420	             mov dword [rsp + 0x20], ebp	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003329	        0x895c242c	             mov dword [rsp + 0x2c], ebx	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400332d	        0x448d7001	                     lea r14d, [rax + 1]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003331	            0x4898	                                    cdqe	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003333	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003338	        0xc6040720	              mov byte [rdi + rax], 0x20	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400333c	          0x4489f3	                           mov ebx, r14d	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400333f	          0x4589f4	                          mov r12d, r14d	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003342	      0x442b64242c	            sub r12d, dword [rsp + 0x2c]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003347	          0x83c201	                              add edx, 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400334a	    0x3b1500000000	            cmp edx, dword [0x04003350] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003350	            0x7c7f	                            jl 0x40033d1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003352	    0x488b2d000000	            mov rbp, qword [0x04003359] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003359	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400335c	          0x8d50fe	                      lea edx, [rax - 2]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400335f	          0x4439fa	                           cmp edx, r15d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003362	            0x7f1c	                            jg 0x4003380	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003364	             0x1c0	                            add eax, eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003366	          0x894510	            mov dword [rbp + 0x10], eax 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003369	            0x4898	                                    cdqe	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400336b	    0x488d34850000	                        lea rsi, [rax*4]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003373	        0x488b7d08	                mov rdi, qword [rbp + 8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003377	      0xe800000000	                          call 0x400337c	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400337c	        0x48894508	                mov qword [rbp + 8], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003380	    0x488b2d000000	            mov rbp, qword [0x04003387] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003387	        0x4183c701	                             add r15d, 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400338b	          0x4d63ef	                        movsxd r13, r15d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400338e	        0x488b4508	                mov rax, qword [rbp + 8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003392	        0x468934a8	           mov dword [rax + r13*4], r14d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003396	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003399	          0x8d50ff	                      lea edx, [rax - 1]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400339c	          0x4139d7	                           cmp r15d, edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400339f	            0x7c1c	                            jl 0x40033bd	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033a1	             0x1c0	                            add eax, eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033a3	          0x894520	            mov dword [rbp + 0x20], eax 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033a6	            0x4898	                                    cdqe	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033a8	    0x488d34850000	                        lea rsi, [rax*4]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033b0	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033b4	      0xe800000000	                          call 0x40033b9	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033b9	        0x48894518	            mov qword [rbp + 0x18], rax 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033bd	    0x488b05000000	            mov rax, qword [0x040033c4] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033c4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033c8	        0x468924a8	           mov dword [rax + r13*4], r12d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033cc	      0xba00000000	                              mov edx, 0	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033d1	          0x4489f0	                           mov eax, r14d	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033d4	         0x35c2420	             add ebx, dword [rsp + 0x20]	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033d8	    0x391d00000000	            cmp dword [0x040033de], ebx 	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033de	     0xf8f49ffffff	                            jg 0x400332d	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033e4	      0x4489642420	            mov dword [rsp + 0x20], r12d	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033e9	            0x89d5	                            mov ebp, edx	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033eb	            0xeb18	                           jmp 0x4003405	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033ed	          0x4189de	                           mov r14d, ebx	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033f0	    0xc74424200000	               mov dword [rsp + 0x20], 0	       866	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40033f8	            0xeb0b	                           jmp 0x4003405	       866	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40033fa	          0x4189de	                           mov r14d, ebx	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40033fd	    0xc74424200000	               mov dword [rsp + 0x20], 0	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003405	        0x8b442404	                mov eax, dword [rsp + 4]	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4003409	    0x3b0500000000	            cmp eax, dword [0x0400340f] 	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x400340f	            0x750c	                           jne 0x400341d	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4003411	    0x448935000000	           mov dword [0x04003418], r14d 	       878	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4003418	      0x44897c2428	            mov dword [rsp + 0x28], r15d	       879	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x400341d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003422	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003427	          0x4801c6	                            add rsi, rax	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400342a	          0x4839f0	                            cmp rax, rsi	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400342d	            0x7332	                           jae 0x4003461	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400342f	          0x4489f2	                           mov edx, r14d	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003432	        0x8b7c2404	                mov edi, dword [rsp + 4]	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003436	          0x4429f7	                           sub edi, r14d	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003439	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400343e	          0x8d5a01	                      lea ebx, [rdx + 1]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003441	    0x488b0d000000	            mov rcx, qword [0x04003448] 	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003448	         0xfb60401	             movzx eax, byte [rcx + rax]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400344c	          0x4863d2	                         movsxd rdx, edx	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400344f	        0x41880410	                 mov byte [r8 + rdx], al	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003453	          0x8d041f	                    lea eax, [rdi + rbx]	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003456	            0x4898	                                    cdqe	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003458	            0x89da	                            mov edx, ebx	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400345a	          0x4839f0	                            cmp rax, rsi	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400345d	            0x72df	                            jb 0x400343e	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400345f	            0xeb03	                           jmp 0x4003464	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003461	          0x4489f3	                           mov ebx, r14d	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003464	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003468	            0x85c0	                           test eax, eax	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400346a	     0xf8e54010000	                           jle 0x40035c4	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003470	    0x41bc00000000	                             mov r12d, 0	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003476	          0x4189c6	                           mov r14d, eax	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003479	          0x83c501	                              add ebp, 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400347c	    0x3b2d00000000	            cmp ebp, dword [0x04003482] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003482	     0xf8c83000000	                            jl 0x400350b	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003488	    0x488b2d000000	            mov rbp, qword [0x0400348f] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400348f	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003492	          0x8d50fe	                      lea edx, [rax - 2]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003495	          0x4439fa	                           cmp edx, r15d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003498	            0x7f1c	                            jg 0x40034b6	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400349a	             0x1c0	                            add eax, eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400349c	          0x894510	            mov dword [rbp + 0x10], eax 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400349f	            0x4898	                                    cdqe	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034a1	    0x488d34850000	                        lea rsi, [rax*4]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034a9	        0x488b7d08	                mov rdi, qword [rbp + 8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034ad	      0xe800000000	                          call 0x40034b2	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034b2	        0x48894508	                mov qword [rbp + 8], rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034b6	    0x488b2d000000	            mov rbp, qword [0x040034bd] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034bd	        0x4183c701	                             add r15d, 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034c1	          0x4d63ef	                        movsxd r13, r15d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034c4	        0x488b4508	                mov rax, qword [rbp + 8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034c8	        0x42891ca8	            mov dword [rax + r13*4], ebx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034cc	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034cf	          0x8d50ff	                      lea edx, [rax - 1]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034d2	          0x4139d7	                           cmp r15d, edx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034d5	            0x7c1c	                            jl 0x40034f3	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034d7	             0x1c0	                            add eax, eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034d9	          0x894520	            mov dword [rbp + 0x20], eax 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034dc	            0x4898	                                    cdqe	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034de	    0x488d34850000	                        lea rsi, [rax*4]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034e6	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034ea	      0xe800000000	                          call 0x40034ef	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034ef	        0x48894518	            mov qword [rbp + 0x18], rax 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034f3	    0x488b05000000	            mov rax, qword [0x040034fa] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034fa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40034fe	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003502	        0x42893ca8	            mov dword [rax + r13*4], edi	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003506	      0xbd00000000	                              mov ebp, 0	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400350b	        0x4183c401	                             add r12d, 1	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400350f	          0x4539e6	                          cmp r14d, r12d	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003512	     0xf8561ffffff	                           jne 0x4003479	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003518	      0xe9a7000000	                           jmp 0x40035c4	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400351d	        0x448d6301	                     lea r12d, [rbx + 1]	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003521	          0x4863db	                         movsxd rbx, ebx	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003524	      0x488b442408	                mov rax, qword [rsp + 8]	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003529	        0x44882c18	              mov byte [rax + rbx], r13b	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400352d	          0x83c501	                              add ebp, 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003530	          0x4489e3	                           mov ebx, r12d	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003533	    0x3b2d00000000	            cmp ebp, dword [0x04003539] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003539	     0xf8c85000000	                            jl 0x40035c4	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400353f	    0x488b1d000000	            mov rbx, qword [0x04003546] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003546	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003549	          0x8d50fe	                      lea edx, [rax - 2]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400354c	          0x4139d7	                           cmp r15d, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400354f	            0x7c1c	                            jl 0x400356d	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003551	             0x1c0	                            add eax, eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003553	          0x894310	             mov dword [rbx + 0x10], eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003556	            0x4898	                                    cdqe	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003558	    0x488d34850000	                        lea rsi, [rax*4]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003560	        0x488b7b08	                mov rdi, qword [rbx + 8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003564	      0xe800000000	                          call 0x4003569	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003569	        0x48894308	                mov qword [rbx + 8], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400356d	    0x488b1d000000	            mov rbx, qword [0x04003574] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003574	        0x4183c701	                             add r15d, 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003578	          0x4963ef	                        movsxd rbp, r15d	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400357b	        0x488b4308	                mov rax, qword [rbx + 8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400357f	        0x448924a8	           mov dword [rax + rbp*4], r12d	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003583	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003586	          0x8d50ff	                      lea edx, [rax - 1]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003589	          0x4139d7	                           cmp r15d, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400358c	            0x7c1c	                            jl 0x40035aa	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400358e	             0x1c0	                            add eax, eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003590	          0x894320	             mov dword [rbx + 0x20], eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003593	            0x4898	                                    cdqe	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003595	    0x488d34850000	                        lea rsi, [rax*4]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400359d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035a1	      0xe800000000	                          call 0x40035a6	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035a6	        0x48894318	             mov qword [rbx + 0x18], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035aa	    0x488b05000000	            mov rax, qword [0x040035b1] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035b1	        0x488b4018	            mov rax, qword [rax + 0x18] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035b5	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035b9	          0x890ca8	            mov dword [rax + rbp*4], ecx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035bc	          0x4489e3	                           mov ebx, r12d	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035bf	      0xbd00000000	                              mov ebp, 0	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40035c4	      0xe800000000	                          call 0x40035c9	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40035c9	        0x4883f801	                              cmp rax, 1	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40035cd	            0x7640	                           jbe 0x400360f	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40035cf	    0x833d00000000	               cmp dword [0x040035d6], 0	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40035d6	            0x7537	                           jne 0x400360f	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40035d8	        0x8b742404	                mov esi, dword [rsp + 4]	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40035dc	         0x3742410	             add esi, dword [rsp + 0x10]	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40035e0	        0x89742404	                mov dword [rsp + 4], esi	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40035e4	    0x8b1500000000	            mov edx, dword [0x040035ea] 	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40035ea	            0x29f2	                            sub edx, esi	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40035ec	          0x4863d2	                         movsxd rdx, edx	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40035ef	          0x4863f6	                         movsxd rsi, esi	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40035f2	    0x480335000000	             add rsi, qword [0x040035f9]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40035f9	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40035fe	      0x488d7c243c	                   lea rdi, [rsp + 0x3c]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4003603	      0xe800000000	                          call 0x4003608	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4003608	      0x4889442410	             mov qword [rsp + 0x10], rax	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x400360d	            0xeb05	                           jmp 0x4003614	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x400360f	      0x8344240401	                  add dword [rsp + 4], 1	       905	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_17
0x4003614	        0x8b442404	                mov eax, dword [rsp + 4]	       745	display.c	FUNCTION_2	WHILE_3
0x4003618	    0x3b0500000000	            cmp eax, dword [0x0400361e] 	       745	display.c	FUNCTION_2	WHILE_3
0x400361e	     0xf8c04f8ffff	                            jl 0x4002e28	       745	display.c	FUNCTION_2	WHILE_3
0x4003624	          0x4863c3	                         movsxd rax, ebx	       909	display.c	FUNCTION_2	ELSE_17
0x4003627	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       909	display.c	FUNCTION_2	ELSE_17
0x400362c	        0xc6040100	                 mov byte [rcx + rax], 0	       909	display.c	FUNCTION_2	ELSE_17
0x4003630	    0x833d00000000	               cmp dword [0x04003637], 0	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003637	            0x790b	                           jns 0x4003644	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003639	    0x891d00000000	            mov dword [0x0400363f], ebx 	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x400363f	      0x44897c2428	            mov dword [rsp + 0x28], r15d	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003644	    0x488b2d000000	            mov rbp, qword [0x0400364b] 	       917	display.c	FUNCTION_2
0x400364b	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       917	display.c	FUNCTION_2
0x400364e	          0x8d50fe	                      lea edx, [rax - 2]	       917	display.c	FUNCTION_2
0x4003651	          0x4139d7	                           cmp r15d, edx	       917	display.c	FUNCTION_2
0x4003654	            0x7c1c	                            jl 0x4003672	       917	display.c	FUNCTION_2
0x4003656	             0x1c0	                            add eax, eax	       917	display.c	FUNCTION_2
0x4003658	          0x894510	            mov dword [rbp + 0x10], eax 	       917	display.c	FUNCTION_2
0x400365b	            0x4898	                                    cdqe	       917	display.c	FUNCTION_2
0x400365d	    0x488d34850000	                        lea rsi, [rax*4]	       917	display.c	FUNCTION_2
0x4003665	        0x488b7d08	                mov rdi, qword [rbp + 8]	       917	display.c	FUNCTION_2
0x4003669	      0xe800000000	                          call 0x400366e	       917	display.c	FUNCTION_2
0x400366e	        0x48894508	                mov qword [rbp + 8], rax	       917	display.c	FUNCTION_2
0x4003672	    0x488b35000000	            mov rsi, qword [0x04003679] 	       918	display.c	FUNCTION_2
0x4003679	          0x4963c7	                        movsxd rax, r15d	       918	display.c	FUNCTION_2
0x400367c	        0x488b5608	                mov rdx, qword [rsi + 8]	       918	display.c	FUNCTION_2
0x4003680	        0x895c8204	        mov dword [rdx + rax*4 + 4], ebx	       918	display.c	FUNCTION_2
0x4003684	    0x448b25000000	           mov r12d, dword [0x0400368b] 	       933	display.c	FUNCTION_2	IF_37
0x400368b	          0x4585e4	                         test r12d, r12d	       933	display.c	FUNCTION_2	IF_37
0x400368e	     0xf85ec040000	                           jne 0x4003b80	       933	display.c	FUNCTION_2	IF_37
0x4003694	    0x488b05000000	            mov rax, qword [0x0400369b] 	       933	display.c	FUNCTION_2	IF_37
0x400369b	          0x4885c0	                           test rax, rax	       933	display.c	FUNCTION_2	IF_37
0x400369e	     0xf84dc040000	                            je 0x4003b80	       933	display.c	FUNCTION_2	IF_37
0x40036a4	          0x803800	                       cmp byte [rax], 0	       933	display.c	FUNCTION_2	IF_37
0x40036a7	     0xf84d3040000	                            je 0x4003b80	       933	display.c	FUNCTION_2	IF_37
0x40036ad	    0x833d00000000	               cmp dword [0x040036b4], 0	       937	display.c	FUNCTION_2	IF_37	IF_38
0x40036b4	            0x740d	                            je 0x40036c3	       937	display.c	FUNCTION_2	IF_37	IF_38
0x40036b6	    0x833d00000000	               cmp dword [0x040036bd], 0	       937	display.c	FUNCTION_2	IF_37	IF_38
0x40036bd	     0xf840b070000	                            je 0x4003dce	       937	display.c	FUNCTION_2	IF_37	IF_38
0x40036c3	    0xc70500000000	               mov dword [0x040036cd], 0	       939	display.c	FUNCTION_2	IF_37	IF_38
0x40036cd	    0x3b1d00000000	            cmp ebx, dword [0x040036d3] 	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x40036d3	            0x7c36	                            jl 0x400370b	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x40036d5	      0xe800000000	                          call 0x40036da	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40036da	        0x4883f801	                              cmp rax, 1	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40036de	            0x7622	                           jbe 0x4003702	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40036e0	    0x833d00000000	               cmp dword [0x040036e7], 0	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40036e7	            0x7519	                           jne 0x4003702	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40036e9	      0xba00000000	                              mov edx, 0	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40036ee	    0x8b3500000000	            mov esi, dword [0x040036f4] 	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40036f4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40036f9	      0xe800000000	                          call 0x40036fe	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40036fe	            0x89c3	                            mov ebx, eax	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x4003700	            0xeb09	                           jmp 0x400370b	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x4003702	    0x8b0500000000	            mov eax, dword [0x04003708] 	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x4003708	          0x8d58ff	                      lea ebx, [rax - 1]	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x400370b	          0x4585ff	                         test r15d, r15d	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400370e	     0xf88c6010000	                            js 0x40038da	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003714	      0xbd00000000	                              mov ebp, 0	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003719	    0x448b2d000000	           mov r13d, dword [0x04003720] 	       977	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003720	    0xc70500000000	               mov dword [0x0400372a], 0	       978	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400372a	    0x4c8b0d000000	              mov r9, qword [0x04003731]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003731	        0x498b4908	                 mov rcx, qword [r9 + 8]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003735	          0x4863c5	                         movsxd rax, ebp	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003738	        0x4883c001	                              add rax, 1	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400373c	    0x488d34850000	                        lea rsi, [rax*4]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003744	        0x8b5431fc	          mov edx, dword [rcx + rsi - 4]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003748	        0x448b0481	            mov r8d, dword [rcx + rax*4]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400374c	          0x4129d0	                            sub r8d, edx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400374f	    0x392d00000000	            cmp dword [0x04003755], ebp 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003755	     0xf8ce0060000	                            jl 0x4003e3b	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400375b	    0x4c8b15000000	            mov r10, qword [0x04003762] 	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003762	        0x498b4a08	                mov rcx, qword [r10 + 8]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003766	        0x8b7c31fc	          mov edi, dword [rcx + rsi - 4]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400376a	          0x8b0c81	            mov ecx, dword [rcx + rax*4]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400376d	            0x29f9	                            sub ecx, edi	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400376f	          0x4863d2	                         movsxd rdx, edx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003772	          0x4889d6	                            mov rsi, rdx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003775	          0x490331	                     add rsi, qword [r9]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003778	          0x4863ff	                         movsxd rdi, edi	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400377b	          0x49033a	                    add rdi, qword [r10]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400377e	          0x4589f9	                           mov r9d, r15d	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003781	            0x89ea	                            mov edx, ebp	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003783	      0xe814deffff	                    call sym.update_line	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003788	            0x85ed	                           test ebp, ebp	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x400378a	            0x7553	                           jne 0x40037df	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x400378c	      0xe800000000	                          call 0x4003791	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4003791	        0x4883f801	                              cmp rax, 1	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4003795	            0x7648	                           jbe 0x40037df	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4003797	    0x833d00000000	               cmp dword [0x0400379e], 0	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x400379e	            0x753f	                           jne 0x40037df	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037a0	    0x833d00000000	               cmp dword [0x040037a7], 0	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037a7	            0x7536	                           jne 0x40037df	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037a9	    0x8b0500000000	            mov eax, dword [0x040037af] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037af	          0x4139c5	                           cmp r13d, eax	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037b2	            0x742b	                            je 0x40037df	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037b4	    0x3b0500000000	            cmp eax, dword [0x040037ba] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037ba	            0x7e23	                           jle 0x40037df	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037bc	    0x443b2d000000	           cmp r13d, dword [0x040037c3] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037c3	            0x7d1a	                           jge 0x40037df	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037c5	    0x2b0500000000	             sub eax, dword [0x040037cb]	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037cb	    0x890500000000	            mov dword [0x040037d1], eax 	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40037d1	          0x4585ff	                         test r15d, r15d	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x40037d4	     0xf8485060000	                            je 0x4003e5f	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x40037da	      0xe9ca000000	                           jmp 0x40038a9	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x40037df	    0x392d00000000	            cmp dword [0x040037e5], ebp 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40037e5	            0x755d	                           jne 0x4003844	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40037e7	    0x8b0500000000	            mov eax, dword [0x040037ed] 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40037ed	    0x390500000000	            cmp dword [0x040037f3], eax 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40037f3	            0x7e4f	                           jle 0x4003844	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40037f5	      0xe800000000	                          call 0x40037fa	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40037fa	        0x4883f801	                              cmp rax, 1	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40037fe	            0x7644	                           jbe 0x4003844	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003800	    0x833d00000000	               cmp dword [0x04003807], 0	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003807	            0x753b	                           jne 0x4003844	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003809	    0x833d00000000	               cmp dword [0x04003810], 0	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003810	            0x7532	                           jne 0x4003844	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003812	    0x8b1500000000	            mov edx, dword [0x04003818] 	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003818	          0x4139d5	                           cmp r13d, edx	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x400381b	            0x7427	                            je 0x4003844	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x400381d	    0x8b0d00000000	            mov ecx, dword [0x04003823] 	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003823	    0x8b0500000000	            mov eax, dword [0x04003829] 	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003829	    0x2b0500000000	             sub eax, dword [0x0400382f]	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x400382f	            0x29c8	                            sub eax, ecx	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003831	            0x39c2	                            cmp edx, eax	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003833	            0x7e0f	                           jle 0x4003844	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003835	          0x8d040a	                    lea eax, [rdx + rcx]	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003838	    0x2b0500000000	             sub eax, dword [0x0400383e]	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x400383e	    0x890500000000	            mov dword [0x04003844], eax 	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003844	          0x4489f8	                           mov eax, r15d	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003847	             0x9e8	                             or eax, ebp	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003849	            0x755a	                           jne 0x40038a5	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400384b	    0x3b1d00000000	            cmp ebx, dword [0x04003851] 	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003851	            0x7552	                           jne 0x40038a5	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003853	    0x448b2d000000	           mov r13d, dword [0x0400385a] 	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400385a	    0x443b2d000000	           cmp r13d, dword [0x04003861] 	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003861	            0x7e42	                           jle 0x40038a5	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003863	    0x3b1d00000000	            cmp ebx, dword [0x04003869] 	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003869	            0x7d3a	                           jge 0x40038a5	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400386b	      0xe800000000	                          call 0x4003870	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4003870	        0x4883f801	                              cmp rax, 1	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4003874	            0x7617	                           jbe 0x400388d	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4003876	    0x833d00000000	               cmp dword [0x0400387d], 0	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x400387d	            0x750e	                           jne 0x400388d	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x400387f	    0x8b3d00000000	            mov edi, dword [0x04003885] 	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4003885	    0x2b3d00000000	             sub edi, dword [0x0400388b]	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x400388b	            0xeb0f	                           jmp 0x400389c	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x400388d	          0x4489ef	                           mov edi, r13d	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4003890	     0x33d00000000	             add edi, dword [0x04003896]	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4003896	    0x2b3d00000000	             sub edi, dword [0x0400389c]	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x400389c	            0x85ff	                           test edi, edi	      1018	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_45
0x400389e	            0x7405	                            je 0x40038a5	      1018	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_45
0x40038a0	      0xe800000000	                          call 0x40038a5	      1019	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	CALL_36
0x40038a5	            0x85ed	                           test ebp, ebp	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038a7	            0x7523	                           jne 0x40038cc	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038a9	          0x4585ff	                         test r15d, r15d	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038ac	            0x7e10	                           jle 0x40038be	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038ae	    0x488b05000000	            mov rax, qword [0x040038b5] 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038b5	        0x488b4008	                mov rax, qword [rax + 8]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038b9	          0x8b4004	                mov eax, dword [rax + 4]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038bc	            0xeb08	                           jmp 0x40038c6	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038be	            0x89d8	                            mov eax, ebx	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038c0	    0x2b0500000000	             sub eax, dword [0x040038c6]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038c6	    0x890500000000	            mov dword [0x040038cc], eax 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40038cc	          0x83c501	                              add ebp, 1	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40038cf	          0x4139ef	                           cmp r15d, ebp	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40038d2	     0xf8d41feffff	                           jge 0x4003719	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40038d8	            0xeb05	                           jmp 0x40038df	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40038da	      0xbd00000000	                              mov ebp, 0	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40038df	    0x8b0500000000	            mov eax, dword [0x040038e5] 	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x40038e5	          0x4139c7	                           cmp r15d, eax	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x40038e8	            0x7d68	                           jge 0x4003952	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x40038ea	            0x39e8	                            cmp eax, ebp	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40038ec	            0x7c64	                            jl 0x4003952	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40038ee	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40038f5	    0x488b15000000	            mov rdx, qword [0x040038fc] 	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40038fc	          0x4863c5	                         movsxd rax, ebp	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40038ff	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4003903	        0x48631c81	         movsxd rbx, dword [rcx + rax*4]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4003907	          0x48031a	                    add rbx, qword [rdx]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400390a	            0x89ef	                            mov edi, ebp	      1048	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_37
0x400390c	      0xe800000000	                          call 0x4003911	      1048	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_37
0x4003911	          0x4889de	                            mov rsi, rbx	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_38
0x4003914	      0xbf00000000	                              mov edi, 0	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_38
0x4003919	      0xe800000000	                          call 0x400391e	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_38
0x400391e	    0x8b3d00000000	            mov edi, dword [0x04003924] 	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x4003924	    0x392d00000000	            cmp dword [0x0400392a], ebp 	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x400392a	            0x7516	                           jne 0x4003942	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x400392c	      0xb800000000	                              mov eax, 0	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x4003931	          0x4c89e1	                            mov rcx, r12	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x4003934	          0x4889df	                            mov rdi, rbx	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x4003937	            0xf2ae	              repne scasb al, byte [rdi]	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x4003939	          0x4889c8	                            mov rax, rcx	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x400393c	          0x48f7d0	                                 not rax	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x400393f	          0x8d78ff	                      lea edi, [rax - 1]	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x4003942	      0xe800000000	                          call 0x4003947	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x4003947	          0x83c501	                              add ebp, 1	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400394a	    0x392d00000000	            cmp dword [0x04003950], ebp 	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4003950	            0x7da3	                           jge 0x40038f5	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4003952	    0x44893d000000	           mov dword [0x04003959], r15d 	      1054	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4003959	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x400395d	    0x3b0500000000	            cmp eax, dword [0x04003963] 	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x4003963	            0x743a	                            je 0x400399f	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x4003965	            0x89c7	                            mov edi, eax	      1061	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	CALL_41
0x4003967	      0xe800000000	                          call 0x400396c	      1061	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	CALL_41
0x400396c	      0xe800000000	                          call 0x4003971	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4003971	        0x4883f801	                              cmp rax, 1	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4003975	            0x7409	                            je 0x4003980	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4003977	    0x833d00000000	               cmp dword [0x0400397e], 0	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400397e	            0x741f	                            je 0x400399f	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4003980	      0x837c242800	               cmp dword [rsp + 0x28], 0	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4003985	     0xf85c6040000	                           jne 0x4003e51	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400398b	    0x8b0500000000	            mov eax, dword [0x04003991] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4003991	            0x85c0	                           test eax, eax	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4003993	     0xf84b8040000	                            je 0x4003e51	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4003999	     0x10500000000	             add dword [0x0400399f], eax	      1067	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400399f	    0x8b1d00000000	            mov ebx, dword [0x040039a5] 	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x40039a5	      0x837c242800	               cmp dword [rsp + 0x28], 0	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039aa	        0x410f94c4	                               sete r12b	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039ae	            0x85db	                           test ebx, ebx	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039b0	     0xf8ee8000000	                           jle 0x4003a9e	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039b6	          0x4584e4	                         test r12b, r12b	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039b9	     0xf84df000000	                            je 0x4003a9e	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039bf	    0x833d00000000	               cmp dword [0x040039c6], 0	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039c6	     0xf8ed2000000	                           jle 0x4003a9e	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039cc	    0x8b2d00000000	            mov ebp, dword [0x040039d2] 	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x40039d2	      0xe800000000	                          call 0x40039d7	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039d7	        0x4883f801	                              cmp rax, 1	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039db	            0x760f	                           jbe 0x40039ec	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039dd	    0x8b0500000000	            mov eax, dword [0x040039e3] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039e3	    0x833d00000000	               cmp dword [0x040039ea], 0	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039ea	            0x7409	                            je 0x40039f5	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039ec	    0x8b0500000000	            mov eax, dword [0x040039f2] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039f2	          0x83c001	                              add eax, 1	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039f5	    0x3b0500000000	            cmp eax, dword [0x040039fb] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40039fb	     0xf8e9d000000	                           jle 0x4003a9e	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4003a01	    0x48833d000000	               cmp qword [0x04003a09], 0	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4003a09	     0xf848f000000	                            je 0x4003a9e	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4003a0f	    0x488b3d000000	            mov rdi, qword [0x04003a16] 	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x4003a16	          0x4885ff	                           test rdi, rdi	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x4003a19	            0x740f	                            je 0x4003a2a	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x4003a1b	      0xba00000000	                              mov edx, 0	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x4003a20	      0xbe01000000	                              mov esi, 1	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x4003a25	      0xe800000000	                          call 0x4003a2a	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x4003a2a	    0x833d00000000	               cmp dword [0x04003a31], 0	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x4003a31	            0x740f	                            je 0x4003a42	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x4003a33	      0xbe01000000	                              mov esi, 1	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x4003a38	      0xbf00000000	                              mov edi, 0	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x4003a3d	      0xe800000000	                          call 0x4003a42	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x4003a42	             0x1eb	                            add ebx, ebp	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4003a44	            0x89de	                            mov esi, ebx	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x4003a46	    0x488b3d000000	            mov rdi, qword [0x04003a4d] 	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x4003a4d	      0xe800000000	                          call 0x4003a52	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x4003a52	      0xe800000000	                          call 0x4003a57	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a57	        0x4883f801	                              cmp rax, 1	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a5b	            0x7635	                           jbe 0x4003a92	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a5d	    0x833d00000000	               cmp dword [0x04003a64], 0	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a64	            0x752c	                           jne 0x4003a92	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a66	      0xb901000000	                              mov ecx, 1	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a6b	            0x89da	                            mov edx, ebx	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a6d	      0xbe00000000	                              mov esi, 0	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a72	    0x488b3d000000	            mov rdi, qword [0x04003a79] 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a79	      0xe8b8c7ffff	                  call sym._rl_col_width	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a7e	    0x2b0500000000	             sub eax, dword [0x04003a84]	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a84	     0x30500000000	             add eax, dword [0x04003a8a]	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a8a	    0x890500000000	            mov dword [0x04003a90], eax 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a90	            0xeb0c	                           jmp 0x4003a9e	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4003a92	     0x31d00000000	             add ebx, dword [0x04003a98]	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x4003a98	    0x891d00000000	            mov dword [0x04003a9e], ebx 	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x4003a9e	      0x4863542428	         movsxd rdx, dword [rsp + 0x28] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4003aa3	    0x488b05000000	            mov rax, qword [0x04003aaa] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4003aaa	        0x488b4008	                mov rax, qword [rax + 8]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4003aae	          0x8b2c90	            mov ebp, dword [rax + rdx*4]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4003ab1	    0x8b1d00000000	            mov ebx, dword [0x04003ab7] 	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4003ab7	            0x29eb	                            sub ebx, ebp	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4003ab9	    0x833d00000000	               cmp dword [0x04003ac0], 0	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4003ac0	            0x746c	                            je 0x4003b2e	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4003ac2	          0x4584e4	                         test r12b, r12b	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4003ac5	            0x7467	                            je 0x4003b2e	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4003ac7	    0x3b1d00000000	            cmp ebx, dword [0x04003acd] 	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4003acd	            0x7d5f	                           jge 0x4003b2e	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4003acf	      0xe800000000	                          call 0x4003ad4	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003ad4	          0x4189dc	                           mov r12d, ebx	      1120	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23
0x4003ad7	        0x4883f801	                              cmp rax, 1	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003adb	            0x7630	                           jbe 0x4003b0d	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003add	    0x833d00000000	               cmp dword [0x04003ae4], 0	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003ae4	            0x7527	                           jne 0x4003b0d	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003ae6	          0x4863fd	                         movsxd rdi, ebp	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003ae9	    0x488b05000000	            mov rax, qword [0x04003af0] 	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003af0	          0x480338	                    add rdi, qword [rax]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003af3	      0xb901000000	                              mov ecx, 1	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003af8	            0x89da	                            mov edx, ebx	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003afa	      0xbe00000000	                              mov esi, 0	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003aff	      0xe832c7ffff	                  call sym._rl_col_width	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003b04	    0x2b0500000000	             sub eax, dword [0x04003b0a]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003b0a	          0x4189c4	                           mov r12d, eax	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4003b0d	          0x4585e4	                         test r12d, r12d	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4003b10	            0x781c	                            js 0x4003b2e	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4003b12	    0x8b0500000000	            mov eax, dword [0x04003b18] 	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4003b18	          0x4139c4	                           cmp r12d, eax	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4003b1b	            0x7d11	                           jge 0x4003b2e	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4003b1d	          0x4429e0	                           sub eax, r12d	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x4003b20	            0x89c7	                            mov edi, eax	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x4003b22	      0xe800000000	                          call 0x4003b27	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x4003b27	    0x448925000000	           mov dword [0x04003b2e], r12d 	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4003b2e	      0xe800000000	                          call 0x4003b33	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4003b33	        0x4883f801	                              cmp rax, 1	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4003b37	            0x7622	                           jbe 0x4003b5b	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4003b39	    0x833d00000000	               cmp dword [0x04003b40], 0	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4003b40	            0x7519	                           jne 0x4003b5b	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4003b42	          0x4863f5	                         movsxd rsi, ebp	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_47
0x4003b45	    0x488b05000000	            mov rax, qword [0x04003b4c] 	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_47
0x4003b4c	          0x480330	                    add rsi, qword [rax]	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_47
0x4003b4f	            0x89df	                            mov edi, ebx	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_47
0x4003b51	      0xe800000000	                          call 0x4003b56	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_47
0x4003b56	      0xe973020000	                           jmp 0x4003dce	      1133	display.c	FUNCTION_2	IF_37	IF_38	CALL_47
0x4003b5b	    0x3b1d00000000	            cmp ebx, dword [0x04003b61] 	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4003b61	     0xf8467020000	                            je 0x4003dce	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4003b67	          0x4863f5	                         movsxd rsi, ebp	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4003b6a	    0x488b05000000	            mov rax, qword [0x04003b71] 	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4003b71	          0x480330	                    add rsi, qword [rax]	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4003b74	            0x89df	                            mov edi, ebx	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4003b76	      0xe800000000	                          call 0x4003b7b	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4003b7b	      0xe94e020000	                           jmp 0x4003dce	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4003b80	    0xc70500000000	               mov dword [0x04003b8a], 0	      1144	display.c	FUNCTION_2	ELSE_25
0x4003b8a	    0x448b0d000000	            mov r9d, dword [0x04003b91] 	      1150	display.c	FUNCTION_2	ELSE_25
0x4003b91	    0x448b05000000	            mov r8d, dword [0x04003b98] 	      1150	display.c	FUNCTION_2	ELSE_25
0x4003b98	          0x4589c3	                           mov r11d, r8d	      1151	display.c	FUNCTION_2	ELSE_25
0x4003b9b	    0x44031d000000	            add r11d, dword [0x04003ba2]	      1151	display.c	FUNCTION_2	ELSE_25
0x4003ba2	    0x8b3d00000000	            mov edi, dword [0x04003ba8] 	      1154	display.c	FUNCTION_2	ELSE_25
0x4003ba8	            0x85ff	                           test edi, edi	      1154	display.c	FUNCTION_2	ELSE_25
0x4003baa	          0x4489c0	                            mov eax, r8d	      1154	display.c	FUNCTION_2	ELSE_25
0x4003bad	           0xf45c7	                         cmovne eax, edi	      1154	display.c	FUNCTION_2	ELSE_25
0x4003bb0	          0x4589ca	                           mov r10d, r9d	      1154	display.c	FUNCTION_2	ELSE_25
0x4003bb3	          0x4129c2	                           sub r10d, eax	      1154	display.c	FUNCTION_2	ELSE_25
0x4003bb6	    0x8b0d00000000	            mov ecx, dword [0x04003bbc] 	      1155	display.c	FUNCTION_2	ELSE_25
0x4003bbc	      0xba56555555	                     mov edx, 0x55555556	      1155	display.c	FUNCTION_2	ELSE_25
0x4003bc1	            0x89c8	                            mov eax, ecx	      1155	display.c	FUNCTION_2	ELSE_25
0x4003bc3	            0xf7ea	                                imul edx	      1155	display.c	FUNCTION_2	ELSE_25
0x4003bc5	            0x89c8	                            mov eax, ecx	      1155	display.c	FUNCTION_2	ELSE_25
0x4003bc7	          0xc1f81f	                           sar eax, 0x1f	      1155	display.c	FUNCTION_2	ELSE_25
0x4003bca	            0x29c2	                            sub edx, eax	      1155	display.c	FUNCTION_2	ELSE_25
0x4003bcc	          0x4189d4	                           mov r12d, edx	      1155	display.c	FUNCTION_2	ELSE_25
0x4003bcf	          0x83e902	                              sub ecx, 2	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x4003bd2	          0x4139ca	                           cmp r10d, ecx	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x4003bd5	            0x7e28	                           jle 0x4003bff	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x4003bd7	          0x8d1412	                    lea edx, [rdx + rdx]	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4003bda	          0x4129d1	                            sub r9d, edx	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4003bdd	      0xb800000000	                              mov eax, 0	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4003be2	        0x410f49c1	                         cmovns eax, r9d	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4003be6	            0x89c5	                            mov ebp, eax	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4003be8	          0x4585c0	                           test r8d, r8d	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003beb	            0x7446	                            je 0x4003c33	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003bed	            0x85c0	                           test eax, eax	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003bef	            0x7e42	                           jle 0x4003c33	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003bf1	          0x4139c3	                           cmp r11d, eax	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003bf4	           0xf9fc0	                                 setg al	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003bf7	            0x84c0	                             test al, al	      1171	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003bf9	        0x410f45eb	                        cmovne ebp, r11d	      1171	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003bfd	            0xeb34	                           jmp 0x4003c33	      1171	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4003bff	          0x4489c8	                            mov eax, r9d	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4003c02	          0x4429c0	                            sub eax, r8d	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4003c05	            0x39c8	                            cmp eax, ecx	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4003c07	            0x7c47	                            jl 0x4003c50	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4003c09	            0x89fd	                            mov ebp, edi	      1184	display.c	FUNCTION_2	ELSE_25	ELSE_28
0x4003c0b	          0x4585d2	                         test r10d, r10d	      1175	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003c0e	            0x7f23	                            jg 0x4003c33	      1175	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003c10	        0x418d41ff	                       lea eax, [r9 - 1]	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003c14	              0x99	                                     cdq	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003c15	          0x41f7fc	                               idiv r12d	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003c18	        0x410fafc4	                          imul eax, r12d	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003c1c	            0x89c5	                            mov ebp, eax	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003c1e	          0x4585c0	                           test r8d, r8d	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4003c21	            0x7410	                            je 0x4003c33	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4003c23	            0x85c0	                           test eax, eax	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4003c25	            0x7e0c	                           jle 0x4003c33	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4003c27	          0x4139c3	                           cmp r11d, eax	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4003c2a	           0xf9fc0	                                 setg al	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4003c2d	            0x84c0	                             test al, al	      1181	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4003c2f	        0x410f45eb	                        cmovne ebp, r11d	      1181	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4003c33	            0x85ed	                           test ebp, ebp	      1188	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003c35	            0x7e0c	                           jle 0x4003c43	      1188	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003c37	          0x4863c5	                         movsxd rax, ebp	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003c3a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003c3f	        0xc604013c	              mov byte [rcx + rax], 0x3c	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003c43	            0x85ed	                           test ebp, ebp	      1195	display.c	FUNCTION_2	ELSE_25
0x4003c45	      0xb800000000	                              mov eax, 0	      1195	display.c	FUNCTION_2	ELSE_25
0x4003c4a	        0x410f44c0	                          cmove eax, r8d	      1195	display.c	FUNCTION_2	ELSE_25
0x4003c4e	            0xeb08	                           jmp 0x4003c58	      1195	display.c	FUNCTION_2	ELSE_25
0x4003c50	          0x4489c0	                            mov eax, r8d	      1195	display.c	FUNCTION_2	ELSE_25
0x4003c53	      0xbd00000000	                              mov ebp, 0	      1174	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4003c58	             0x1e8	                            add eax, ebp	      1195	display.c	FUNCTION_2	ELSE_25
0x4003c5a	     0x30500000000	             add eax, dword [0x04003c60]	      1195	display.c	FUNCTION_2	ELSE_25
0x4003c60	            0x39c3	                            cmp ebx, eax	      1196	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003c62	            0x7e0c	                           jle 0x4003c70	      1196	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003c64	            0x4898	                                    cdqe	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003c66	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003c6b	      0xc64401ff3e	         mov byte [rcx + rax - 1], 0x3e 	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003c70	    0x833d00000000	               cmp dword [0x04003c77], 0	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c77	            0x7411	                            je 0x4003c8a	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c79	    0x833d00000000	               cmp dword [0x04003c80], 0	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c80	            0x7508	                           jne 0x4003c8a	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c82	            0x39ef	                            cmp edi, ebp	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c84	     0xf8444010000	                            je 0x4003dce	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c8a	    0xc70500000000	               mov dword [0x04003c94], 0	      1201	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c94	    0x448b2d000000	           mov r13d, dword [0x04003c9b] 	      1202	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c9b	    0xc70500000000	               mov dword [0x04003ca5], 0	      1203	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003ca5	            0x85ed	                           test ebp, ebp	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003ca7	      0xb800000000	                              mov eax, 0	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003cac	        0x440f45c0	                         cmovne r8d, eax	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003cb0	    0x8b0500000000	            mov eax, dword [0x04003cb6] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cb6	          0x4c63e5	                         movsxd r12, ebp	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cb9	            0x89c1	                            mov ecx, eax	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cbb	     0x30d00000000	             add ecx, dword [0x04003cc1]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cc1	          0x4c89e2	                            mov rdx, r12	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cc4	          0x480316	                    add rdx, qword [rsi]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cc7	          0x4889d6	                            mov rsi, rdx	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cca	          0x4863ff	                         movsxd rdi, edi	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003ccd	    0x488b15000000	            mov rdx, qword [0x04003cd4] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cd4	          0x48033a	                    add rdi, qword [rdx]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cd7	    0x41b900000000	                              mov r9d, 0	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003cdd	        0x458d0400	                     lea r8d, [r8 + rax]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003ce1	      0xba00000000	                              mov edx, 0	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003ce6	      0xe8b1d8ffff	                    call sym.update_line	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003ceb	      0xe800000000	                          call 0x4003cf0	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003cf0	        0x4883f801	                              cmp rax, 1	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003cf4	            0x763a	                           jbe 0x4003d30	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003cf6	    0x833d00000000	               cmp dword [0x04003cfd], 0	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003cfd	            0x7531	                           jne 0x4003d30	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003cff	    0x833d00000000	               cmp dword [0x04003d06], 0	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d06	            0x7528	                           jne 0x4003d30	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d08	    0x8b0500000000	            mov eax, dword [0x04003d0e] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d0e	          0x4139c5	                           cmp r13d, eax	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d11	            0x741d	                            je 0x4003d30	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d13	    0x3b0500000000	            cmp eax, dword [0x04003d19] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d19	            0x7e15	                           jle 0x4003d30	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d1b	    0x443b2d000000	           cmp r13d, dword [0x04003d22] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d22	            0x7d0c	                           jge 0x4003d30	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d24	    0x2b0500000000	             sub eax, dword [0x04003d2a]	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d2a	    0x890500000000	            mov dword [0x04003d30], eax 	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003d30	    0x8b0500000000	            mov eax, dword [0x04003d36] 	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d36	            0x85ed	                           test ebp, ebp	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d38	            0x7522	                           jne 0x4003d5c	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d3a	    0x8b1500000000	            mov edx, dword [0x04003d40] 	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d40	    0x3b1500000000	            cmp edx, dword [0x04003d46] 	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d46	            0x7e41	                           jle 0x4003d89	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d48	            0x39c3	                            cmp ebx, eax	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d4a	            0x753d	                           jne 0x4003d89	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d4c	            0x29d0	                            sub eax, edx	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d4e	    0x390500000000	            cmp dword [0x04003d54], eax 	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d54	     0xf8e16010000	                           jle 0x4003e70	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d5a	            0xeb1a	                           jmp 0x4003d76	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d5c	    0x833d00000000	               cmp dword [0x04003d63], 0	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d63	     0xf8927010000	                           jns 0x4003e90	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d69	            0x39c3	                            cmp ebx, eax	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d6b	     0xf851f010000	                           jne 0x4003e90	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d71	      0xe90d010000	                           jmp 0x4003e83	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003d76	    0x8b3d00000000	            mov edi, dword [0x04003d7c] 	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_50
0x4003d7c	            0x29c7	                            sub edi, eax	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_50
0x4003d7e	      0xe800000000	                          call 0x4003d83	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_50
0x4003d83	            0x29eb	                            sub ebx, ebp	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d85	            0x85ed	                           test ebp, ebp	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d87	            0x7508	                           jne 0x4003d91	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d89	    0x8b0500000000	            mov eax, dword [0x04003d8f] 	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d8f	            0xeb05	                           jmp 0x4003d96	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d91	      0xb800000000	                              mov eax, 0	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d96	            0x29c3	                            sub ebx, eax	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d98	    0x891d00000000	            mov dword [0x04003d9e], ebx 	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003d9e	    0x8b0500000000	            mov eax, dword [0x04003da4] 	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4003da4	            0x39c3	                            cmp ebx, eax	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4003da6	            0x7e06	                           jle 0x4003dae	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4003da8	    0x890500000000	            mov dword [0x04003dae], eax 	      1227	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4003dae	    0x488b05000000	            mov rax, qword [0x04003db5] 	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003db5	          0x4c89e6	                            mov rsi, r12	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003db8	          0x480330	                    add rsi, qword [rax]	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003dbb	    0x8b3d00000000	            mov edi, dword [0x04003dc1] 	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003dc1	            0x29ef	                            sub edi, ebp	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003dc3	      0xe800000000	                          call 0x4003dc8	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003dc8	    0x892d00000000	            mov dword [0x04003dce], ebp 	      1230	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003dce	    0x488b3d000000	            mov rdi, qword [0x04003dd5] 	      1233	display.c	FUNCTION_2	CALL_52
0x4003dd5	      0xe800000000	                          call 0x4003dda	      1233	display.c	FUNCTION_2	CALL_52
0x4003dda	    0x488b05000000	            mov rax, qword [0x04003de1] 	      1237	display.c	FUNCTION_2
0x4003de1	    0x488b15000000	            mov rdx, qword [0x04003de8] 	      1239	display.c	FUNCTION_2
0x4003de8	    0x488915000000	            mov qword [0x04003def], rdx 	      1239	display.c	FUNCTION_2
0x4003def	    0x488905000000	            mov qword [0x04003df6], rax 	      1240	display.c	FUNCTION_2
0x4003df6	    0xc70500000000	               mov dword [0x04003e00], 0	      1242	display.c	FUNCTION_2
0x4003e00	    0x833d00000000	               cmp dword [0x04003e07], 0	      1246	display.c	FUNCTION_2	IF_72
0x4003e07	            0x7415	                            je 0x4003e1e	      1246	display.c	FUNCTION_2	IF_72
0x4003e09	    0x833d00000000	               cmp dword [0x04003e10], 0	      1246	display.c	FUNCTION_2	IF_72
0x4003e10	            0x740c	                            je 0x4003e1e	      1246	display.c	FUNCTION_2	IF_72
0x4003e12	    0xc70500000000	               mov dword [0x04003e1c], 0	      1247	display.c	FUNCTION_2	IF_72
0x4003e1c	            0xeb0c	                           jmp 0x4003e2a	      1247	display.c	FUNCTION_2	IF_72
0x4003e1e	    0x8b0500000000	            mov eax, dword [0x04003e24] 	      1249	display.c	FUNCTION_2	ELSE_29
0x4003e24	    0x890500000000	            mov dword [0x04003e2a], eax 	      1249	display.c	FUNCTION_2	ELSE_29
0x4003e2a	    0x812500000000	      and dword [0x04003e34], 0xff7fffff	      1252	display.c	FUNCTION_2	CALL_53
0x4003e34	      0xe800000000	                          call 0x4003e39	      1253	display.c	FUNCTION_2	CALL_54
0x4003e39	            0xeb61	                           jmp 0x4003e9c	      1253	display.c	FUNCTION_2	CALL_54
0x4003e3b	          0x4863d2	                         movsxd rdx, edx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e3e	          0x4889d6	                            mov rsi, rdx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e41	          0x490331	                     add rsi, qword [r9]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e44	          0x4489e1	                           mov ecx, r12d	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e47	      0xbf00000000	                              mov edi, 0	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e4c	      0xe92df9ffff	                           jmp 0x400377e	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e51	      0x837c242800	               cmp dword [rsp + 0x28], 0	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4003e56	        0x410f94c4	                               sete r12b	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4003e5a	      0xe93ffcffff	                           jmp 0x4003a9e	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4003e5f	    0x3b1d00000000	            cmp ebx, dword [0x04003e65] 	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003e65	     0xf853efaffff	                           jne 0x40038a9	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003e6b	      0xe9e3f9ffff	                           jmp 0x4003853	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003e70	            0x29eb	                            sub ebx, ebp	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003e72	      0xe912ffffff	                           jmp 0x4003d89	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003e77	            0x29eb	                            sub ebx, ebp	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003e79	      0xb800000000	                              mov eax, 0	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003e7e	      0xe913ffffff	                           jmp 0x4003d96	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003e83	    0x390500000000	            cmp dword [0x04003e89], eax 	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003e89	            0x7eec	                           jle 0x4003e77	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003e8b	      0xe9e6feffff	                           jmp 0x4003d76	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003e90	            0x29eb	                            sub ebx, ebp	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003e92	      0xb800000000	                              mov eax, 0	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003e97	      0xe9fafeffff	                           jmp 0x4003d96	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003e9c	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1254	display.c	FUNCTION_2
0x4003ea1	    0x644833042528	                xor rax, qword fs:[0x28]	      1254	display.c	FUNCTION_2
0x4003eaa	            0x7405	                            je 0x4003eb1	      1254	display.c	FUNCTION_2
0x4003eac	      0xe800000000	                          call 0x4003eb1	      1254	display.c	FUNCTION_2
0x4003eb1	        0x4883c458	                           add rsp, 0x58	      1254	display.c	FUNCTION_2
0x4003eb5	              0x5b	                                 pop rbx	      1254	display.c	FUNCTION_2
0x4003eb6	              0x5d	                                 pop rbp	      1254	display.c	FUNCTION_2
0x4003eb7	            0x415c	                                 pop r12	      1254	display.c	FUNCTION_2
0x4003eb9	            0x415d	                                 pop r13	      1254	display.c	FUNCTION_2
0x4003ebb	            0x415e	                                 pop r14	      1254	display.c	FUNCTION_2
0x4003ebd	            0x415f	                                 pop r15	      1254	display.c	FUNCTION_2
0x4003ebf	              0xc3	                                     ret	      1254	display.c	FUNCTION_2
rl_on_new_line_with_prompt	functions,0:DO,0:FOR,0:IF,3:WHILE,1:ELSE,1:CALL,7:SWITCH,0	98
0x40009d8	            0x4154	                                push r12	      1825	display.c	FUNCTION_4
0x40009da	              0x55	                                push rbp	      1825	display.c	FUNCTION_4
0x40009db	              0x53	                                push rbx	      1825	display.c	FUNCTION_4
0x40009dc	    0x488b3d000000	            mov rdi, qword [0x040009e3] 	      1831	display.c	FUNCTION_4	CALL_1
0x40009e3	      0xb800000000	                              mov eax, 0	      1831	display.c	FUNCTION_4	CALL_1
0x40009e8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1831	display.c	FUNCTION_4	CALL_1
0x40009ef	            0xf2ae	              repne scasb al, byte [rdi]	      1831	display.c	FUNCTION_4	CALL_1
0x40009f1	            0x89cf	                            mov edi, ecx	      1832	display.c	FUNCTION_4	CALL_2
0x40009f3	            0xf7d7	                                 not edi	      1832	display.c	FUNCTION_4	CALL_2
0x40009f5	      0xe846f6ffff	           call sym.init_line_structures	      1832	display.c	FUNCTION_4	CALL_2
0x40009fa	    0x488b1d000000	            mov rbx, qword [0x04000a01] 	      1836	display.c	FUNCTION_4
0x4000a01	          0x4885db	                           test rbx, rbx	      1836	display.c	FUNCTION_4
0x4000a04	    0x480f441d0000	           cmove rbx, qword [0x04000a0c]	      1836	display.c	FUNCTION_4
0x4000a0c	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_48	CALL_3
0x4000a0f	    0x488b05000000	            mov rax, qword [0x04000a16] 	       110	string3.h	FUNCTION_48	CALL_3
0x4000a16	          0x488b38	                    mov rdi, qword [rax]	       110	string3.h	FUNCTION_48	CALL_3
0x4000a19	      0xe800000000	                          call 0x4000a1e	       110	string3.h	FUNCTION_48	CALL_3
0x4000a1e	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_48	CALL_3
0x4000a21	    0x488b05000000	            mov rax, qword [0x04000a28] 	       110	string3.h	FUNCTION_48	CALL_3
0x4000a28	          0x488b38	                    mov rdi, qword [rax]	       110	string3.h	FUNCTION_48	CALL_3
0x4000a2b	      0xe800000000	                          call 0x4000a30	       110	string3.h	FUNCTION_48	CALL_3
0x4000a30	    0x488b2d000000	            mov rbp, qword [0x04000a37] 	      1841	display.c	FUNCTION_4	CALL_5
0x4000a37	      0xbe0a000000	                            mov esi, 0xa	      1841	display.c	FUNCTION_4	CALL_5
0x4000a3c	          0x4889ef	                            mov rdi, rbp	      1841	display.c	FUNCTION_4	CALL_5
0x4000a3f	      0xe800000000	                          call 0x4000a44	      1841	display.c	FUNCTION_4	CALL_5
0x4000a44	          0x4889c3	                            mov rbx, rax	      1841	display.c	FUNCTION_4	CALL_5
0x4000a47	          0x4885c0	                           test rax, rax	      1843	display.c	FUNCTION_4	IF_1
0x4000a4a	        0x480f44dd	                          cmove rbx, rbp	      1843	display.c	FUNCTION_4	IF_1
0x4000a4e	      0xb800000000	                              mov eax, 0	      1845	display.c	FUNCTION_4	CALL_6
0x4000a53	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1845	display.c	FUNCTION_4	CALL_6
0x4000a5a	          0x4889df	                            mov rdi, rbx	      1845	display.c	FUNCTION_4	CALL_6
0x4000a5d	            0xf2ae	              repne scasb al, byte [rdi]	      1845	display.c	FUNCTION_4	CALL_6
0x4000a5f	          0x48f7d1	                                 not rcx	      1845	display.c	FUNCTION_4	CALL_6
0x4000a62	        0x4c8d61ff	                      lea r12, [rcx - 1]	      1845	display.c	FUNCTION_4	CALL_6
0x4000a66	          0x4489e5	                           mov ebp, r12d	      1845	display.c	FUNCTION_4	CALL_6
0x4000a69	      0xe800000000	                          call 0x4000a6e	      1846	display.c	FUNCTION_4	IF_2
0x4000a6e	        0x4883f801	                              cmp rax, 1	      1846	display.c	FUNCTION_4	IF_2
0x4000a72	            0x7626	                           jbe 0x4000a9a	      1846	display.c	FUNCTION_4	IF_2
0x4000a74	    0x833d00000000	               cmp dword [0x04000a7b], 0	      1846	display.c	FUNCTION_4	IF_2
0x4000a7b	            0x751d	                           jne 0x4000a9a	      1846	display.c	FUNCTION_4	IF_2
0x4000a7d	      0xb901000000	                              mov ecx, 1	      1847	display.c	FUNCTION_4	IF_2
0x4000a82	          0x4489e2	                           mov edx, r12d	      1847	display.c	FUNCTION_4	IF_2
0x4000a85	      0xbe00000000	                              mov esi, 0	      1847	display.c	FUNCTION_4	IF_2
0x4000a8a	          0x4889df	                            mov rdi, rbx	      1847	display.c	FUNCTION_4	IF_2
0x4000a8d	      0xe8a4f7ffff	                  call sym._rl_col_width	      1847	display.c	FUNCTION_4	IF_2
0x4000a92	    0x890500000000	            mov dword [0x04000a98], eax 	      1847	display.c	FUNCTION_4	IF_2
0x4000a98	            0xeb07	                           jmp 0x4000aa1	      1847	display.c	FUNCTION_4	IF_2
0x4000a9a	    0x448925000000	           mov dword [0x04000aa1], r12d 	      1849	display.c	FUNCTION_4	ELSE_1
0x4000aa1	    0x833d00000000	               cmp dword [0x04000aa8], 0	      1854	display.c	FUNCTION_4
0x4000aa8	           0xf94c3	                                 sete bl	      1854	display.c	FUNCTION_4
0x4000aab	           0xfb6db	                           movzx ebx, bl	      1854	display.c	FUNCTION_4
0x4000aae	     0x31d00000000	             add ebx, dword [0x04000ab4]	      1854	display.c	FUNCTION_4
0x4000ab4	            0x89e8	                            mov eax, ebp	      1855	display.c	FUNCTION_4
0x4000ab6	              0x99	                                     cdq	      1855	display.c	FUNCTION_4
0x4000ab7	            0xf7fb	                                idiv ebx	      1855	display.c	FUNCTION_4
0x4000ab9	    0x890500000000	            mov dword [0x04000abf], eax 	      1855	display.c	FUNCTION_4
0x4000abf	          0x4585e4	                         test r12d, r12d	      1859	display.c	FUNCTION_4	IF_3
0x4000ac2	            0x7e1a	                           jle 0x4000ade	      1859	display.c	FUNCTION_4	IF_3
0x4000ac4	            0x89e8	                            mov eax, ebp	      1859	display.c	FUNCTION_4	IF_3
0x4000ac6	              0x99	                                     cdq	      1859	display.c	FUNCTION_4	IF_3
0x4000ac7	            0xf7fb	                                idiv ebx	      1859	display.c	FUNCTION_4	IF_3
0x4000ac9	            0x85d2	                           test edx, edx	      1859	display.c	FUNCTION_4	IF_3
0x4000acb	            0x7552	                           jne 0x4000b1f	      1859	display.c	FUNCTION_4	IF_3
0x4000acd	      0xbe01000000	                              mov esi, 1	      1860	display.c	FUNCTION_4	CALL_7
0x4000ad2	      0xbf00000000	                              mov edi, 0	      1860	display.c	FUNCTION_4	CALL_7
0x4000ad7	      0xe800000000	                          call 0x4000adc	      1860	display.c	FUNCTION_4	CALL_7
0x4000adc	            0xeb41	                           jmp 0x4000b1f	      1860	display.c	FUNCTION_4	CALL_7
0x4000ade	    0xc70500000000	               mov dword [0x04000ae8], 0	      1861	display.c	FUNCTION_4
0x4000ae8	      0xb900000000	                              mov ecx, 0	      1863	display.c	FUNCTION_4
0x4000aed	          0x4585e4	                         test r12d, r12d	      1864	display.c	FUNCTION_4	WHILE_1
0x4000af0	            0x7839	                            js 0x4000b2b	      1864	display.c	FUNCTION_4	WHILE_1
0x4000af2	    0x488b3d000000	            mov rdi, qword [0x04000af9] 	      1867	display.c	FUNCTION_4	WHILE_1
0x4000af9	      0xb800000000	                              mov eax, 0	      1867	display.c	FUNCTION_4	WHILE_1
0x4000afe	      0xba00000000	                              mov edx, 0	      1867	display.c	FUNCTION_4	WHILE_1
0x4000b03	    0x890500000000	            mov dword [0x04000b09], eax 	      1866	display.c	FUNCTION_4	WHILE_1
0x4000b09	          0x8d4801	                      lea ecx, [rax + 1]	      1867	display.c	FUNCTION_4	WHILE_1
0x4000b0c	            0x4898	                                    cdqe	      1867	display.c	FUNCTION_4	WHILE_1
0x4000b0e	        0x488b7708	                mov rsi, qword [rdi + 8]	      1867	display.c	FUNCTION_4	WHILE_1
0x4000b12	          0x891486	            mov dword [rsi + rax*4], edx	      1867	display.c	FUNCTION_4	WHILE_1
0x4000b15	             0x1da	                            add edx, ebx	      1868	display.c	FUNCTION_4	WHILE_1
0x4000b17	            0x89c8	                            mov eax, ecx	      1867	display.c	FUNCTION_4	WHILE_1
0x4000b19	            0x39d5	                            cmp ebp, edx	      1864	display.c	FUNCTION_4	WHILE_1
0x4000b1b	            0x7de6	                           jge 0x4000b03	      1864	display.c	FUNCTION_4	WHILE_1
0x4000b1d	            0xeb0c	                           jmp 0x4000b2b	      1864	display.c	FUNCTION_4	WHILE_1
0x4000b1f	    0xc70500000000	               mov dword [0x04000b29], 0	      1861	display.c	FUNCTION_4
0x4000b29	            0xebc7	                           jmp 0x4000af2	      1861	display.c	FUNCTION_4
0x4000b2b	          0x4863c9	                         movsxd rcx, ecx	      1870	display.c	FUNCTION_4
0x4000b2e	    0x488b05000000	            mov rax, qword [0x04000b35] 	      1870	display.c	FUNCTION_4
0x4000b35	        0x488b4008	                mov rax, qword [rax + 8]	      1870	display.c	FUNCTION_4
0x4000b39	        0x44892488	           mov dword [rax + rcx*4], r12d	      1870	display.c	FUNCTION_4
0x4000b3d	    0xc70500000000	               mov dword [0x04000b47], 0	      1871	display.c	FUNCTION_4
0x4000b47	    0x488b05000000	            mov rax, qword [0x04000b4e] 	      1873	display.c	FUNCTION_4
0x4000b4e	    0x488905000000	            mov qword [0x04000b55], rax 	      1873	display.c	FUNCTION_4
0x4000b55	      0xb800000000	                              mov eax, 0	      1876	display.c	FUNCTION_4
0x4000b5a	              0x5b	                                 pop rbx	      1876	display.c	FUNCTION_4
0x4000b5b	              0x5d	                                 pop rbp	      1876	display.c	FUNCTION_4
0x4000b5c	            0x415c	                                 pop r12	      1876	display.c	FUNCTION_4
0x4000b5e	              0xc3	                                     ret	      1876	display.c	FUNCTION_4
rl_save_prompt	functions,0:DO,0:FOR,0:IF,0:WHILE,0:ELSE,0:CALL,0:SWITCH,0	25
0x40010a4	    0x488b05000000	            mov rax, qword [0x040010ab] 	      2237	display.c	FUNCTION_11
0x40010ab	    0x488905000000	            mov qword [0x040010b2], rax 	      2237	display.c	FUNCTION_11
0x40010b2	    0x488b05000000	            mov rax, qword [0x040010b9] 	      2238	display.c	FUNCTION_11
0x40010b9	    0x488905000000	            mov qword [0x040010c0], rax 	      2238	display.c	FUNCTION_11
0x40010c0	    0x8b0500000000	            mov eax, dword [0x040010c6] 	      2239	display.c	FUNCTION_11
0x40010c6	    0x890500000000	            mov dword [0x040010cc], eax 	      2239	display.c	FUNCTION_11
0x40010cc	    0x8b0500000000	            mov eax, dword [0x040010d2] 	      2240	display.c	FUNCTION_11
0x40010d2	    0x890500000000	            mov dword [0x040010d8], eax 	      2240	display.c	FUNCTION_11
0x40010d8	    0x8b0500000000	            mov eax, dword [0x040010de] 	      2241	display.c	FUNCTION_11
0x40010de	    0x890500000000	            mov dword [0x040010e4], eax 	      2241	display.c	FUNCTION_11
0x40010e4	    0x8b0500000000	            mov eax, dword [0x040010ea] 	      2242	display.c	FUNCTION_11
0x40010ea	    0x890500000000	            mov dword [0x040010f0], eax 	      2242	display.c	FUNCTION_11
0x40010f0	    0x8b0500000000	            mov eax, dword [0x040010f6] 	      2243	display.c	FUNCTION_11
0x40010f6	    0x890500000000	            mov dword [0x040010fc], eax 	      2243	display.c	FUNCTION_11
0x40010fc	    0x8b0500000000	            mov eax, dword [0x04001102] 	      2244	display.c	FUNCTION_11
0x4001102	    0x890500000000	            mov dword [0x04001108], eax 	      2244	display.c	FUNCTION_11
0x4001108	    0x48c705000000	               mov qword [0x04001113], 0	      2246	display.c	FUNCTION_11
0x4001113	    0x48c705000000	               mov qword [0x0400111e], 0	      2246	display.c	FUNCTION_11
0x400111e	    0xc70500000000	               mov dword [0x04001128], 0	      2247	display.c	FUNCTION_11
0x4001128	    0xc70500000000	               mov dword [0x04001132], 0	      2248	display.c	FUNCTION_11
0x4001132	    0xc70500000000	               mov dword [0x0400113c], 0	      2248	display.c	FUNCTION_11
0x400113c	    0xc70500000000	               mov dword [0x04001146], 0	      2248	display.c	FUNCTION_11
0x4001146	    0xc70500000000	               mov dword [0x04001150], 0	      2249	display.c	FUNCTION_11
0x4001150	    0xc70500000000	               mov dword [0x0400115a], 0	      2249	display.c	FUNCTION_11
0x400115a	              0xc3	                                     ret	      2249	display.c	FUNCTION_11
rl_reset_line_state	functions,0:DO,0:FOR,0:IF,0:WHILE,0:ELSE,0:CALL,1:SWITCH,0	9
0x4001075	      0xe800000000	                          call 0x400107a	      2227	display.c	FUNCTION_10	CALL_1
0x400107a	    0x488b05000000	            mov rax, qword [0x04001081] 	      2229	display.c	FUNCTION_10
0x4001081	          0x4885c0	                           test rax, rax	      2229	display.c	FUNCTION_10
0x4001084	      0xba00000000	                              mov edx, 0	      2229	display.c	FUNCTION_10
0x4001089	        0x480f44c2	                          cmove rax, rdx	      2229	display.c	FUNCTION_10
0x400108d	    0x488905000000	            mov qword [0x04001094], rax 	      2229	display.c	FUNCTION_10
0x4001094	    0xc70500000000	               mov dword [0x0400109e], 1	      2230	display.c	FUNCTION_10
0x400109e	      0xb800000000	                              mov eax, 0	      2232	display.c	FUNCTION_10
0x40010a3	              0xc3	                                     ret	      2232	display.c	FUNCTION_10
_rl_make_prompt_for_search	functions,0:DO,0:FOR,0:IF,3:WHILE,0:ELSE,1:CALL,8:SWITCH,0	77
0x40013d4	            0x4155	                                push r13	      2277	display.c	FUNCTION_13
0x40013d6	            0x4154	                                push r12	      2277	display.c	FUNCTION_13
0x40013d8	              0x55	                                push rbp	      2277	display.c	FUNCTION_13
0x40013d9	              0x53	                                push rbx	      2277	display.c	FUNCTION_13
0x40013da	        0x4883ec08	                              sub rsp, 8	      2277	display.c	FUNCTION_13
0x40013de	            0x89fd	                            mov ebp, edi	      2277	display.c	FUNCTION_13
0x40013e0	      0xe800000000	                          call 0x40013e5	      2281	display.c	FUNCTION_13	CALL_1
0x40013e5	    0x488b1d000000	            mov rbx, qword [0x040013ec] 	      2286	display.c	FUNCTION_13	CALL_2
0x40013ec	          0x4885db	                           test rbx, rbx	      2286	display.c	FUNCTION_13	CALL_2
0x40013ef	     0xf84c3000000	                            je 0x40014b8	      2286	display.c	FUNCTION_13	CALL_2
0x40013f5	      0xbe0a000000	                            mov esi, 0xa	      2286	display.c	FUNCTION_13	CALL_2
0x40013fa	          0x4889df	                            mov rdi, rbx	      2286	display.c	FUNCTION_13	CALL_2
0x40013fd	      0xe800000000	                          call 0x4001402	      2286	display.c	FUNCTION_13	CALL_2
0x4001402	          0x4885c0	                           test rax, rax	      2287	display.c	FUNCTION_13	IF_1
0x4001405	            0x7553	                           jne 0x400145a	      2287	display.c	FUNCTION_13	IF_1
0x4001407	          0x803b00	                       cmp byte [rbx], 0	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x400140a	     0xf8493000000	                            je 0x40014a3	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001410	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001417	          0x4889df	                            mov rdi, rbx	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x400141a	            0xf2ae	              repne scasb al, byte [rdi]	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x400141c	          0x48f7d1	                                 not rcx	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x400141f	          0x4889cb	                            mov rbx, rcx	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001422	        0x4883eb01	                              sub rbx, 1	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001426	          0x4189dc	                           mov r12d, ebx	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001429	          0x8d7b02	                      lea edi, [rbx + 2]	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x400142c	          0x4863ff	                         movsxd rdi, edi	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x400142f	      0xe800000000	                          call 0x4001434	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001434	          0x4989c5	                            mov r13, rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001437	            0x85db	                           test ebx, ebx	      2291	display.c	FUNCTION_13	IF_1	IF_2
0x4001439	            0x740f	                            je 0x400144a	      2291	display.c	FUNCTION_13	IF_1	IF_2
0x400143b	    0x488b35000000	            mov rsi, qword [0x04001442] 	       110	string3.h	FUNCTION_48	CALL_3
0x4001442	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_48	CALL_3
0x4001445	      0xe800000000	                          call 0x400144a	       110	string3.h	FUNCTION_48	CALL_3
0x400144a	          0x4963c4	                        movsxd rax, r12d	      2293	display.c	FUNCTION_13	IF_1
0x400144d	      0x41886c0500	               mov byte [r13 + rax], bpl	      2293	display.c	FUNCTION_13	IF_1
0x4001452	    0x41c644050100	             mov byte [r13 + rax + 1], 0	      2294	display.c	FUNCTION_13	IF_1
0x4001458	            0xeb76	                           jmp 0x40014d0	      2294	display.c	FUNCTION_13	IF_1
0x400145a	        0x4c8d6001	                      lea r12, [rax + 1]	      2298	display.c	FUNCTION_13	ELSE_1
0x400145e	      0xb800000000	                              mov eax, 0	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4001463	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x400146a	          0x4c89e7	                            mov rdi, r12	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x400146d	            0xf2ae	              repne scasb al, byte [rdi]	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x400146f	          0x48f7d1	                                 not rcx	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4001472	        0x488d59ff	                      lea rbx, [rcx - 1]	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4001476	          0x8d7b02	                      lea edi, [rbx + 2]	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4001479	          0x4863ff	                         movsxd rdi, edi	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x400147c	      0xe800000000	                          call 0x4001481	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4001481	          0x4989c5	                            mov r13, rax	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4001484	            0x85db	                           test ebx, ebx	      2301	display.c	FUNCTION_13	ELSE_1	IF_3
0x4001486	            0x740b	                            je 0x4001493	      2301	display.c	FUNCTION_13	ELSE_1	IF_3
0x4001488	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_48	CALL_3
0x400148b	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_48	CALL_3
0x400148e	      0xe800000000	                          call 0x4001493	       110	string3.h	FUNCTION_48	CALL_3
0x4001493	          0x4863db	                         movsxd rbx, ebx	      2303	display.c	FUNCTION_13	ELSE_1
0x4001496	      0x41886c1d00	               mov byte [r13 + rbx], bpl	      2303	display.c	FUNCTION_13	ELSE_1
0x400149b	    0x41c6441d0100	             mov byte [r13 + rbx + 1], 0	      2304	display.c	FUNCTION_13	ELSE_1
0x40014a1	            0xeb2d	                           jmp 0x40014d0	      2304	display.c	FUNCTION_13	ELSE_1
0x40014a3	      0xbf02000000	                              mov edi, 2	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x40014a8	      0xe800000000	                          call 0x40014ad	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x40014ad	          0x4989c5	                            mov r13, rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x40014b0	    0x41bc00000000	                             mov r12d, 0	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x40014b6	            0xeb92	                           jmp 0x400144a	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x40014b8	      0xbf02000000	                              mov edi, 2	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x40014bd	      0xe800000000	                          call 0x40014c2	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x40014c2	          0x4989c5	                            mov r13, rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x40014c5	    0x41bc00000000	                             mov r12d, 0	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x40014cb	      0xe97affffff	                           jmp 0x400144a	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x40014d0	    0x8b0500000000	            mov eax, dword [0x040014d6] 	      2308	display.c	FUNCTION_13
0x40014d6	          0x83c001	                              add eax, 1	      2308	display.c	FUNCTION_13
0x40014d9	    0x890500000000	            mov dword [0x040014df], eax 	      2308	display.c	FUNCTION_13
0x40014df	          0x4c89e8	                            mov rax, r13	      2310	display.c	FUNCTION_13
0x40014e2	        0x4883c408	                              add rsp, 8	      2310	display.c	FUNCTION_13
0x40014e6	              0x5b	                                 pop rbx	      2310	display.c	FUNCTION_13
0x40014e7	              0x5d	                                 pop rbp	      2310	display.c	FUNCTION_13
0x40014e8	            0x415c	                                 pop r12	      2310	display.c	FUNCTION_13
0x40014ea	            0x415d	                                 pop r13	      2310	display.c	FUNCTION_13
0x40014ec	              0xc3	                                     ret	      2310	display.c	FUNCTION_13
rl_restore_prompt	functions,0:DO,0:FOR,0:IF,0:WHILE,0:ELSE,0:CALL,2:SWITCH,0	35
0x40012b9	        0x4883ec08	                              sub rsp, 8	      2254	display.c	FUNCTION_12
0x40012bd	    0x488b3d000000	            mov rdi, qword [0x040012c4] 	      2255	display.c	FUNCTION_12	CALL_1
0x40012c4	          0x4885ff	                           test rdi, rdi	      2255	display.c	FUNCTION_12	CALL_1
0x40012c7	            0x7405	                            je 0x40012ce	      2255	display.c	FUNCTION_12	CALL_1
0x40012c9	      0xe800000000	                          call 0x40012ce	      2255	display.c	FUNCTION_12	CALL_1
0x40012ce	    0x488b3d000000	            mov rdi, qword [0x040012d5] 	      2256	display.c	FUNCTION_12	CALL_2
0x40012d5	          0x4885ff	                           test rdi, rdi	      2256	display.c	FUNCTION_12	CALL_2
0x40012d8	            0x7405	                            je 0x40012df	      2256	display.c	FUNCTION_12	CALL_2
0x40012da	      0xe800000000	                          call 0x40012df	      2256	display.c	FUNCTION_12	CALL_2
0x40012df	    0x488b05000000	            mov rax, qword [0x040012e6] 	      2258	display.c	FUNCTION_12
0x40012e6	    0x488905000000	            mov qword [0x040012ed], rax 	      2258	display.c	FUNCTION_12
0x40012ed	    0x488b05000000	            mov rax, qword [0x040012f4] 	      2259	display.c	FUNCTION_12
0x40012f4	    0x488905000000	            mov qword [0x040012fb], rax 	      2259	display.c	FUNCTION_12
0x40012fb	    0x8b0500000000	            mov eax, dword [0x04001301] 	      2260	display.c	FUNCTION_12
0x4001301	    0x890500000000	            mov dword [0x04001307], eax 	      2260	display.c	FUNCTION_12
0x4001307	    0x8b0500000000	            mov eax, dword [0x0400130d] 	      2261	display.c	FUNCTION_12
0x400130d	    0x890500000000	            mov dword [0x04001313], eax 	      2261	display.c	FUNCTION_12
0x4001313	    0x8b0500000000	            mov eax, dword [0x04001319] 	      2262	display.c	FUNCTION_12
0x4001319	    0x890500000000	            mov dword [0x0400131f], eax 	      2262	display.c	FUNCTION_12
0x400131f	    0x8b0500000000	            mov eax, dword [0x04001325] 	      2263	display.c	FUNCTION_12
0x4001325	    0x890500000000	            mov dword [0x0400132b], eax 	      2263	display.c	FUNCTION_12
0x400132b	    0x8b0500000000	            mov eax, dword [0x04001331] 	      2264	display.c	FUNCTION_12
0x4001331	    0x890500000000	            mov dword [0x04001337], eax 	      2264	display.c	FUNCTION_12
0x4001337	    0x8b0500000000	            mov eax, dword [0x0400133d] 	      2265	display.c	FUNCTION_12
0x400133d	    0x890500000000	            mov dword [0x04001343], eax 	      2265	display.c	FUNCTION_12
0x4001343	    0x48c705000000	               mov qword [0x0400134e], 0	      2268	display.c	FUNCTION_12
0x400134e	    0x48c705000000	               mov qword [0x04001359], 0	      2268	display.c	FUNCTION_12
0x4001359	    0xc70500000000	               mov dword [0x04001363], 0	      2269	display.c	FUNCTION_12
0x4001363	    0xc70500000000	               mov dword [0x0400136d], 0	      2270	display.c	FUNCTION_12
0x400136d	    0xc70500000000	               mov dword [0x04001377], 0	      2270	display.c	FUNCTION_12
0x4001377	    0xc70500000000	               mov dword [0x04001381], 0	      2270	display.c	FUNCTION_12
0x4001381	    0xc70500000000	               mov dword [0x0400138b], 0	      2271	display.c	FUNCTION_12
0x400138b	    0xc70500000000	               mov dword [0x04001395], 0	      2271	display.c	FUNCTION_12
0x4001395	        0x4883c408	                              add rsp, 8	      2272	display.c	FUNCTION_12
0x4001399	              0xc3	                                     ret	      2272	display.c	FUNCTION_12
space_to_eol	functions,0:DO,0:FOR,1:IF,0:WHILE,0:ELSE,0:CALL,1:SWITCH,0	18
0x4000200	              0x55	                                push rbp	      2348	display.c	FUNCTION_16
0x4000201	              0x53	                                push rbx	      2348	display.c	FUNCTION_16
0x4000202	        0x4883ec08	                              sub rsp, 8	      2348	display.c	FUNCTION_16
0x4000206	            0x89fd	                            mov ebp, edi	      2348	display.c	FUNCTION_16
0x4000208	            0x85ff	                           test edi, edi	      2351	display.c	FUNCTION_16	FOR_1
0x400020a	            0x7e1d	                           jle 0x4000229	      2351	display.c	FUNCTION_16	FOR_1
0x400020c	      0xbb00000000	                              mov ebx, 0	      2351	display.c	FUNCTION_16	FOR_1
0x4000211	    0x488b35000000	            mov rsi, qword [0x04000218] 	      2352	display.c	FUNCTION_16	CALL_1
0x4000218	      0xbf20000000	                           mov edi, 0x20	      2352	display.c	FUNCTION_16	CALL_1
0x400021d	      0xe800000000	                          call 0x4000222	      2352	display.c	FUNCTION_16	CALL_1
0x4000222	          0x83c301	                              add ebx, 1	      2351	display.c	FUNCTION_16	FOR_1
0x4000225	            0x39dd	                            cmp ebp, ebx	      2351	display.c	FUNCTION_16	FOR_1
0x4000227	            0x75e8	                           jne 0x4000211	      2351	display.c	FUNCTION_16	FOR_1
0x4000229	     0x12d00000000	             add dword [0x0400022f], ebp	      2354	display.c	FUNCTION_16
0x400022f	        0x4883c408	                              add rsp, 8	      2355	display.c	FUNCTION_16
0x4000233	              0x5b	                                 pop rbx	      2355	display.c	FUNCTION_16
0x4000234	              0x5d	                                 pop rbp	      2355	display.c	FUNCTION_16
0x4000235	              0xc3	                                     ret	      2355	display.c	FUNCTION_16
_rl_clear_screen	functions,0:DO,0:FOR,0:IF,1:WHILE,0:ELSE,1:CALL,4:SWITCH,0	11
0x4003ec0	        0x4883ec08	                              sub rsp, 8	      2359	display.c	FUNCTION_17
0x4003ec4	    0x488b3d000000	            mov rdi, qword [0x04003ecb] 	      2364	display.c	FUNCTION_17	IF_1
0x4003ecb	          0x4885ff	                           test rdi, rdi	      2364	display.c	FUNCTION_17	IF_1
0x4003ece	            0x7411	                            je 0x4003ee1	      2364	display.c	FUNCTION_17	IF_1
0x4003ed0	      0xba00000000	                              mov edx, 0	      2365	display.c	FUNCTION_17	CALL_3
0x4003ed5	      0xbe01000000	                              mov esi, 1	      2365	display.c	FUNCTION_17	CALL_3
0x4003eda	      0xe800000000	                          call 0x4003edf	      2365	display.c	FUNCTION_17	CALL_3
0x4003edf	            0xeb05	                           jmp 0x4003ee6	      2365	display.c	FUNCTION_17	CALL_3
0x4003ee1	      0xe800000000	                          call 0x4003ee6	      2367	display.c	FUNCTION_17	CALL_4
0x4003ee6	        0x4883c408	                              add rsp, 8	      2369	display.c	FUNCTION_17
0x4003eea	              0xc3	                                     ret	      2369	display.c	FUNCTION_17
_rl_redisplay_after_sigwinch	functions,0:DO,0:FOR,0:IF,4:WHILE,0:ELSE,3:CALL,13:SWITCH,0	70
0x4003fd1	              0x55	                                push rbp	      2521	display.c	FUNCTION_21
0x4003fd2	              0x53	                                push rbx	      2521	display.c	FUNCTION_21
0x4003fd3	        0x4883ec08	                              sub rsp, 8	      2521	display.c	FUNCTION_21
0x4003fd7	    0x48833d000000	               cmp qword [0x04003fdf], 0	      2528	display.c	FUNCTION_21	IF_1
0x4003fdf	            0x747e	                            je 0x400405f	      2528	display.c	FUNCTION_21	IF_1
0x4003fe1	    0x8b3d00000000	            mov edi, dword [0x04003fe7] 	      2530	display.c	FUNCTION_21	IF_1	CALL_1
0x4003fe7	      0xe800000000	                          call 0x4003fec	      2530	display.c	FUNCTION_21	IF_1	CALL_1
0x4003fec	      0xba00000000	                              mov edx, 0	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4003ff1	      0xbe01000000	                              mov esi, 1	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4003ff6	    0x488b3d000000	            mov rdi, qword [0x04003ffd] 	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4003ffd	      0xe800000000	                          call 0x4004002	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4004002	    0xc70500000000	               mov dword [0x0400400c], 0	      2537	display.c	FUNCTION_21	IF_1
0x400400c	    0x488b3d000000	            mov rdi, qword [0x04004013] 	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4004013	          0x4885ff	                           test rdi, rdi	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4004016	            0x7411	                            je 0x4004029	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4004018	      0xba00000000	                              mov edx, 0	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x400401d	      0xbe01000000	                              mov esi, 1	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4004022	      0xe800000000	                          call 0x4004027	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4004027	            0xeb21	                           jmp 0x400404a	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4004029	    0x8b3d00000000	            mov edi, dword [0x0400402f] 	      2546	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x400402f	      0xe8ccc1ffff	                   call sym.space_to_eol	      2546	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x4004034	      0xba00000000	                              mov edx, 0	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004039	      0xbe01000000	                              mov esi, 1	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x400403e	    0x488b3d000000	            mov rdi, qword [0x04004045] 	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004045	      0xe800000000	                          call 0x400404a	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x400404a	    0x833d00000000	               cmp dword [0x04004051], 0	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4004051	            0x7e11	                           jle 0x4004064	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4004053	      0xbf00000000	                              mov edi, 0	      2551	display.c	FUNCTION_21	IF_1	CALL_9
0x4004058	      0xe800000000	                          call 0x400405d	      2551	display.c	FUNCTION_21	IF_1	CALL_9
0x400405d	            0xeb05	                           jmp 0x4004064	      2551	display.c	FUNCTION_21	IF_1	CALL_9
0x400405f	      0xe800000000	                          call 0x4004064	      2554	display.c	FUNCTION_21	CALL_10
0x4004064	    0x488b2d000000	            mov rbp, qword [0x0400406b] 	      2557	display.c	FUNCTION_21	CALL_11
0x400406b	      0xbe0a000000	                            mov esi, 0xa	      2557	display.c	FUNCTION_21	CALL_11
0x4004070	          0x4889ef	                            mov rdi, rbp	      2557	display.c	FUNCTION_21	CALL_11
0x4004073	      0xe800000000	                          call 0x4004078	      2557	display.c	FUNCTION_21	CALL_11
0x4004078	          0x4885c0	                           test rax, rax	      2558	display.c	FUNCTION_21	IF_4
0x400407b	     0xf8483000000	                            je 0x4004104	      2558	display.c	FUNCTION_21	IF_4
0x4004081	        0x488d5801	                      lea rbx, [rax + 1]	      2559	display.c	FUNCTION_21	CALL_12
0x4004085	      0xe800000000	                          call 0x400408a	      2502	display.c	CALL_112
0x400408a	    0x48891d000000	            mov qword [0x04004091], rbx 	      2504	display.c	
0x4004091	    0x41b800000000	                              mov r8d, 0	      2505	display.c	CALL_113
0x4004097	      0xb900000000	                              mov ecx, 0	      2505	display.c	CALL_113
0x400409c	      0xba00000000	                              mov edx, 0	      2505	display.c	CALL_113
0x40040a1	      0xbe00000000	                              mov esi, 0	      2505	display.c	CALL_113
0x40040a6	          0x4889df	                            mov rdi, rbx	      2505	display.c	CALL_113
0x40040a9	      0xb800000000	                              mov eax, 0	      2505	display.c	CALL_113
0x40040ae	      0xe855c3ffff	                  call sym.expand_prompt	      2505	display.c	CALL_113
0x40040b3	          0x4889c7	                            mov rdi, rax	      2505	display.c	CALL_113
0x40040b6	    0x488905000000	            mov qword [0x040040bd], rax 	      2505	display.c	CALL_113
0x40040bd	    0x48c705000000	               mov qword [0x040040c8], 0	      2509	display.c	
0x40040c8	          0x4885c0	                           test rax, rax	      2510	display.c	CALL_114
0x40040cb	            0x7419	                            je 0x40040e6	      2510	display.c	CALL_114
0x40040cd	      0xb800000000	                              mov eax, 0	      2510	display.c	CALL_114
0x40040d2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2510	display.c	CALL_114
0x40040d9	            0xf2ae	              repne scasb al, byte [rdi]	      2510	display.c	CALL_114
0x40040db	          0x4889c8	                            mov rax, rcx	      2510	display.c	CALL_114
0x40040de	          0x48f7d0	                                 not rax	      2510	display.c	CALL_114
0x40040e1	          0x8d40ff	                      lea eax, [rax - 1]	      2510	display.c	CALL_114
0x40040e4	            0xeb05	                           jmp 0x40040eb	      2510	display.c	CALL_114
0x40040e6	      0xb800000000	                              mov eax, 0	      2510	display.c	CALL_114
0x40040eb	    0x890500000000	            mov dword [0x040040f1], eax 	      2510	display.c	CALL_114
0x40040f1	      0xe800000000	                          call 0x40040f6	      2512	display.c	CALL_115
0x40040f6	    0x48892d000000	            mov qword [0x040040fd], rbp 	      2514	display.c	
0x40040fd	      0xe800000000	                          call 0x4004102	      2515	display.c	CALL_116
0x4004102	            0xeb05	                           jmp 0x4004109	      2515	display.c	CALL_116
0x4004104	      0xe800000000	                          call 0x4004109	      2561	display.c	FUNCTION_21	CALL_13
0x4004109	        0x4883c408	                              add rsp, 8	      2562	display.c	FUNCTION_21
0x400410d	              0x5b	                                 pop rbx	      2562	display.c	FUNCTION_21
0x400410e	              0x5d	                                 pop rbp	      2562	display.c	FUNCTION_21
0x400410f	              0xc3	                                     ret	      2562	display.c	FUNCTION_21
rl_clear_message	functions,0:DO,0:FOR,0:IF,1:WHILE,0:ELSE,0:CALL,1:SWITCH,0	11
0x400139a	        0x4883ec08	                              sub rsp, 8	      2213	display.c	FUNCTION_9
0x400139e	    0x488b05000000	            mov rax, qword [0x040013a5] 	      2214	display.c	FUNCTION_9
0x40013a5	    0x488905000000	            mov qword [0x040013ac], rax 	      2214	display.c	FUNCTION_9
0x40013ac	    0x833d00000000	               cmp dword [0x040013b3], 0	      2215	display.c	FUNCTION_9	IF_1
0x40013b3	            0x740f	                            je 0x40013c4	      2215	display.c	FUNCTION_9	IF_1
0x40013b5	      0xe800000000	                          call 0x40013ba	      2217	display.c	FUNCTION_9	IF_1	CALL_1
0x40013ba	    0xc70500000000	               mov dword [0x040013c4], 0	      2218	display.c	FUNCTION_9	IF_1
0x40013c4	    0xff1500000000	                 call qword [0x040013ca]	      2220	display.c	FUNCTION_9
0x40013ca	      0xb800000000	                              mov eax, 0	      2222	display.c	FUNCTION_9
0x40013cf	        0x4883c408	                              add rsp, 8	      2222	display.c	FUNCTION_9
0x40013d3	              0xc3	                                     ret	      2222	display.c	FUNCTION_9
_rl_clean_up_for_exit	functions,0:DO,0:FOR,0:IF,1:WHILE,0:ELSE,0:CALL,3:SWITCH,0	13
0x4004110	    0x833d00000000	               cmp dword [0x04004117], 0	      2567	display.c	FUNCTION_22	IF_1
0x4004117	            0x7438	                            je 0x4004151	      2567	display.c	FUNCTION_22	IF_1
0x4004119	        0x4883ec08	                              sub rsp, 8	      2566	display.c	FUNCTION_22
0x400411d	    0x8b3d00000000	            mov edi, dword [0x04004123] 	      2569	display.c	FUNCTION_22	IF_1	CALL_1
0x4004123	      0xe800000000	                          call 0x4004128	      2569	display.c	FUNCTION_22	IF_1	CALL_1
0x4004128	    0xc70500000000	               mov dword [0x04004132], 0	      2570	display.c	FUNCTION_22	IF_1
0x4004132	    0x488b3d000000	            mov rdi, qword [0x04004139] 	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x4004139	      0xe800000000	                          call 0x400413e	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x400413e	      0xbe00000000	                              mov esi, 0	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x4004143	      0xbf01000000	                              mov edi, 1	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x4004148	      0xe800000000	                          call 0x400414d	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x400414d	        0x4883c408	                              add rsp, 8	      2574	display.c	FUNCTION_22
0x4004151	            0xf3c3	                                     ret	      2574	display.c	FUNCTION_22
_rl_current_display_line	functions,0:DO,0:FOR,0:IF,2:WHILE,0:ELSE,2:CALL,0:SWITCH,0	17
0x400417c	    0x488b05000000	            mov rax, qword [0x04004183] 	      2594	display.c	FUNCTION_24	IF_1
0x4004183	    0x483905000000	            cmp qword [0x0400418a], rax 	      2594	display.c	FUNCTION_24	IF_1
0x400418a	            0x7514	                           jne 0x40041a0	      2594	display.c	FUNCTION_24	IF_1
0x400418c	    0x8b0500000000	            mov eax, dword [0x04004192] 	      2595	display.c	FUNCTION_24	IF_1
0x4004192	    0x2b0500000000	             sub eax, dword [0x04004198]	      2595	display.c	FUNCTION_24	IF_1
0x4004198	    0x2b0500000000	             sub eax, dword [0x0400419e]	      2595	display.c	FUNCTION_24	IF_1
0x400419e	            0xeb0c	                           jmp 0x40041ac	      2595	display.c	FUNCTION_24	IF_1
0x40041a0	    0x8b0500000000	            mov eax, dword [0x040041a6] 	      2597	display.c	FUNCTION_24	ELSE_1
0x40041a6	    0x2b0500000000	             sub eax, dword [0x040041ac]	      2597	display.c	FUNCTION_24	ELSE_1
0x40041ac	            0x85c0	                           test eax, eax	      2599	display.c	FUNCTION_24	IF_2
0x40041ae	            0x7e0b	                           jle 0x40041bb	      2599	display.c	FUNCTION_24	IF_2
0x40041b0	              0x99	                                     cdq	      2600	display.c	FUNCTION_24	IF_2
0x40041b1	    0xf73d00000000	                 idiv dword [0x040041b7]	      2600	display.c	FUNCTION_24	IF_2
0x40041b7	          0x83c001	                              add eax, 1	      2600	display.c	FUNCTION_24	IF_2
0x40041ba	              0xc3	                                     ret	      2600	display.c	FUNCTION_24	IF_2
0x40041bb	      0xb800000000	                              mov eax, 0	      2602	display.c	FUNCTION_24	ELSE_2
0x40041c0	              0xc3	                                     ret	      2605	display.c	FUNCTION_24
_rl_clear_to_eol	functions,0:DO,0:FOR,0:IF,2:WHILE,0:ELSE,1:CALL,2:SWITCH,0	14
0x400156a	        0x4883ec08	                              sub rsp, 8	      2333	display.c	FUNCTION_15
0x400156e	    0x488b05000000	            mov rax, qword [0x04001575] 	      2335	display.c	FUNCTION_15	IF_1
0x4001575	          0x4885c0	                           test rax, rax	      2335	display.c	FUNCTION_15	IF_1
0x4001578	            0x7414	                            je 0x400158e	      2335	display.c	FUNCTION_15	IF_1
0x400157a	      0xba00000000	                              mov edx, 0	      2336	display.c	FUNCTION_15	CALL_1
0x400157f	      0xbe01000000	                              mov esi, 1	      2336	display.c	FUNCTION_15	CALL_1
0x4001584	          0x4889c7	                            mov rdi, rax	      2336	display.c	FUNCTION_15	CALL_1
0x4001587	      0xe800000000	                          call 0x400158c	      2336	display.c	FUNCTION_15	CALL_1
0x400158c	            0xeb09	                           jmp 0x4001597	      2336	display.c	FUNCTION_15	CALL_1
0x400158e	            0x85ff	                           test edi, edi	      2339	display.c	FUNCTION_15	ELSE_1	IF_2
0x4001590	            0x7405	                            je 0x4001597	      2339	display.c	FUNCTION_15	ELSE_1	IF_2
0x4001592	      0xe869ecffff	                   call sym.space_to_eol	      2340	display.c	FUNCTION_15	ELSE_1	IF_2
0x4001597	        0x4883c408	                              add rsp, 8	      2341	display.c	FUNCTION_15
0x400159b	              0xc3	                                     ret	      2341	display.c	FUNCTION_15
_rl_erase_entire_line	functions,0:DO,0:FOR,0:IF,0:WHILE,0:ELSE,0:CALL,4:SWITCH,0	9
0x4004153	        0x4883ec08	                              sub rsp, 8	      2578	display.c	FUNCTION_23
0x4004157	      0xe875c0ffff	                             call sym.cr	      2579	display.c	FUNCTION_23	CALL_1
0x400415c	      0xbf00000000	                              mov edi, 0	      2580	display.c	FUNCTION_23	CALL_2
0x4004161	      0xe800000000	                          call 0x4004166	      2580	display.c	FUNCTION_23	CALL_2
0x4004166	      0xe866c0ffff	                             call sym.cr	      2581	display.c	FUNCTION_23	CALL_3
0x400416b	    0x488b3d000000	            mov rdi, qword [0x04004172] 	      2582	display.c	FUNCTION_23	CALL_4
0x4004172	      0xe800000000	                          call 0x4004177	      2582	display.c	FUNCTION_23	CALL_4
0x4004177	        0x4883c408	                              add rsp, 8	      2583	display.c	FUNCTION_23
0x400417b	              0xc3	                                     ret	      2583	display.c	FUNCTION_23
rl_forced_update_display	functions,0:DO,0:FOR,0:IF,1:WHILE,1:ELSE,0:CALL,1:SWITCH,0	17
0x4000b5f	        0x4883ec08	                              sub rsp, 8	      1881	display.c	FUNCTION_5
0x4000b63	    0x488b05000000	            mov rax, qword [0x04000b6a] 	      1884	display.c	FUNCTION_5	IF_1
0x4000b6a	          0x488b00	                    mov rax, qword [rax]	      1884	display.c	FUNCTION_5	IF_1
0x4000b6d	          0x4885c0	                           test rax, rax	      1884	display.c	FUNCTION_5	IF_1
0x4000b70	            0x7412	                            je 0x4000b84	      1884	display.c	FUNCTION_5	IF_1
0x4000b72	          0x803800	                       cmp byte [rax], 0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b75	            0x740d	                            je 0x4000b84	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b77	        0x4883c001	                              add rax, 1	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b7b	        0xc640ff00	                   mov byte [rax - 1], 0	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b7f	          0x803800	                       cmp byte [rax], 0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b82	            0x75f3	                           jne 0x4000b77	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b84	      0xe800000000	                          call 0x4000b89	      1890	display.c	FUNCTION_5	CALL_1
0x4000b89	    0x830500000000	               add dword [0x04000b90], 1	      1891	display.c	FUNCTION_5
0x4000b90	    0xff1500000000	                 call qword [0x04000b96]	      1892	display.c	FUNCTION_5
0x4000b96	      0xb800000000	                              mov eax, 0	      1894	display.c	FUNCTION_5
0x4000b9b	        0x4883c408	                              add rsp, 8	      1894	display.c	FUNCTION_5
0x4000b9f	              0xc3	                                     ret	      1894	display.c	FUNCTION_5
rl_on_new_line	functions,0:DO,0:FOR,0:IF,2:WHILE,0:ELSE,0:CALL,0:SWITCH,0	17
0x4000978	    0x488b05000000	            mov rax, qword [0x0400097f] 	      1808	display.c	FUNCTION_3	IF_1
0x400097f	          0x488b10	                    mov rdx, qword [rax]	      1808	display.c	FUNCTION_3	IF_1
0x4000982	          0x4885d2	                           test rdx, rdx	      1808	display.c	FUNCTION_3	IF_1
0x4000985	            0x7403	                            je 0x400098a	      1808	display.c	FUNCTION_3	IF_1
0x4000987	          0xc60200	                       mov byte [rdx], 0	      1809	display.c	FUNCTION_3	IF_1
0x400098a	    0xc70500000000	               mov dword [0x04000994], 0	      1811	display.c	FUNCTION_3
0x4000994	    0xc70500000000	               mov dword [0x0400099e], 0	      1811	display.c	FUNCTION_3
0x400099e	    0xc70500000000	               mov dword [0x040009a8], 0	      1812	display.c	FUNCTION_3
0x40009a8	    0xc70500000000	               mov dword [0x040009b2], 0	      1812	display.c	FUNCTION_3
0x40009b2	        0x488b4008	                mov rax, qword [rax + 8]	      1813	display.c	FUNCTION_3	IF_2
0x40009b6	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x40009b9	            0x740d	                            je 0x40009c8	      1813	display.c	FUNCTION_3	IF_2
0x40009bb	    0xc74004000000	                  mov dword [rax + 4], 0	      1814	display.c	FUNCTION_3	IF_2
0x40009c2	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x40009c8	    0xc70500000000	               mov dword [0x040009d2], 0	      1815	display.c	FUNCTION_3
0x40009d2	      0xb800000000	                              mov eax, 0	      1817	display.c	FUNCTION_3
0x40009d7	              0xc3	                                     ret	      1817	display.c	FUNCTION_3
rl_message	functions,0:DO,0:FOR,0:IF,1:WHILE,0:ELSE,0:CALL,9:SWITCH,0	66
0x400115b	    0x4881ecd80000	                           sub rsp, 0xd8	      2147	display.c	FUNCTION_8
0x4001162	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2147	display.c	FUNCTION_8
0x4001167	      0x4889542430	             mov qword [rsp + 0x30], rdx	      2147	display.c	FUNCTION_8
0x400116c	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      2147	display.c	FUNCTION_8
0x4001171	      0x4c89442440	              mov qword [rsp + 0x40], r8	      2147	display.c	FUNCTION_8
0x4001176	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      2147	display.c	FUNCTION_8
0x400117b	            0x84c0	                             test al, al	      2147	display.c	FUNCTION_8
0x400117d	            0x7437	                            je 0x40011b6	      2147	display.c	FUNCTION_8
0x400117f	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	      2147	display.c	FUNCTION_8
0x4001184	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	      2147	display.c	FUNCTION_8
0x4001189	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	      2147	display.c	FUNCTION_8
0x400118e	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	      2147	display.c	FUNCTION_8
0x4001196	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	      2147	display.c	FUNCTION_8
0x400119e	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	      2147	display.c	FUNCTION_8
0x40011a6	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	      2147	display.c	FUNCTION_8
0x40011ae	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	      2147	display.c	FUNCTION_8
0x40011b6	    0x64488b042528	                mov rax, qword fs:[0x28]	      2147	display.c	FUNCTION_8
0x40011bf	      0x4889442418	             mov qword [rsp + 0x18], rax	      2147	display.c	FUNCTION_8
0x40011c4	            0x31c0	                            xor eax, eax	      2147	display.c	FUNCTION_8
0x40011c6	    0xc70424080000	                      mov dword [rsp], 8	      2154	display.c	FUNCTION_8	CALL_1
0x40011cd	    0xc74424043000	               mov dword [rsp + 4], 0x30	      2154	display.c	FUNCTION_8	CALL_1
0x40011d5	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      2154	display.c	FUNCTION_8	CALL_1
0x40011dd	      0x4889442408	                mov qword [rsp + 8], rax	      2154	display.c	FUNCTION_8	CALL_1
0x40011e2	      0x488d442420	                   lea rax, [rsp + 0x20]	      2154	display.c	FUNCTION_8	CALL_1
0x40011e7	      0x4889442410	             mov qword [rsp + 0x10], rax	      2154	display.c	FUNCTION_8	CALL_1
0x40011ec	          0x4989e1	                             mov r9, rsp	        77	stdio2.h	FUNCTION_28	CALL_2
0x40011ef	          0x4989f8	                             mov r8, rdi	        77	stdio2.h	FUNCTION_28	CALL_2
0x40011f2	      0xb980000000	                           mov ecx, 0x80	        77	stdio2.h	FUNCTION_28	CALL_2
0x40011f7	      0xba01000000	                              mov edx, 1	        77	stdio2.h	FUNCTION_28	CALL_2
0x40011fc	      0xbe7f000000	                           mov esi, 0x7f	        77	stdio2.h	FUNCTION_28	CALL_2
0x4001201	      0xbf00000000	                              mov edi, 0	        77	stdio2.h	FUNCTION_28	CALL_2
0x4001206	      0xe800000000	                          call 0x400120b	        77	stdio2.h	FUNCTION_28	CALL_2
0x400120b	    0x48833d000000	               cmp qword [0x04001213], 0	      2168	display.c	FUNCTION_8	IF_1
0x4001213	            0x750f	                           jne 0x4001224	      2168	display.c	FUNCTION_8	IF_1
0x4001215	      0xe800000000	                          call 0x400121a	      2170	display.c	FUNCTION_8	IF_1	CALL_7
0x400121a	    0xc70500000000	               mov dword [0x04001224], 1	      2171	display.c	FUNCTION_8	IF_1
0x4001224	    0x48c705000000	               mov qword [0x0400122f], 0	      2173	display.c	FUNCTION_8
0x400122f	    0x41b800000000	                              mov r8d, 0	      2174	display.c	FUNCTION_8	CALL_8
0x4001235	      0xb900000000	                              mov ecx, 0	      2174	display.c	FUNCTION_8	CALL_8
0x400123a	      0xba00000000	                              mov edx, 0	      2174	display.c	FUNCTION_8	CALL_8
0x400123f	      0xbe00000000	                              mov esi, 0	      2174	display.c	FUNCTION_8	CALL_8
0x4001244	      0xbf00000000	                              mov edi, 0	      2174	display.c	FUNCTION_8	CALL_8
0x4001249	      0xb800000000	                              mov eax, 0	      2174	display.c	FUNCTION_8	CALL_8
0x400124e	      0xe8b5f1ffff	                  call sym.expand_prompt	      2174	display.c	FUNCTION_8	CALL_8
0x4001253	          0x4889c7	                            mov rdi, rax	      2174	display.c	FUNCTION_8	CALL_8
0x4001256	    0x488905000000	            mov qword [0x0400125d], rax 	      2174	display.c	FUNCTION_8	CALL_8
0x400125d	    0x48c705000000	               mov qword [0x04001268], 0	      2178	display.c	FUNCTION_8
0x4001268	          0x4885c0	                           test rax, rax	      2179	display.c	FUNCTION_8	CALL_9
0x400126b	            0x7419	                            je 0x4001286	      2179	display.c	FUNCTION_8	CALL_9
0x400126d	      0xb800000000	                              mov eax, 0	      2179	display.c	FUNCTION_8	CALL_9
0x4001272	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2179	display.c	FUNCTION_8	CALL_9
0x4001279	            0xf2ae	              repne scasb al, byte [rdi]	      2179	display.c	FUNCTION_8	CALL_9
0x400127b	          0x4889c8	                            mov rax, rcx	      2179	display.c	FUNCTION_8	CALL_9
0x400127e	          0x48f7d0	                                 not rax	      2179	display.c	FUNCTION_8	CALL_9
0x4001281	          0x8d40ff	                      lea eax, [rax - 1]	      2179	display.c	FUNCTION_8	CALL_9
0x4001284	            0xeb05	                           jmp 0x400128b	      2179	display.c	FUNCTION_8	CALL_9
0x4001286	      0xb800000000	                              mov eax, 0	      2179	display.c	FUNCTION_8	CALL_9
0x400128b	    0x890500000000	            mov dword [0x04001291], eax 	      2179	display.c	FUNCTION_8	CALL_9
0x4001291	    0xff1500000000	                 call qword [0x04001297]	      2180	display.c	FUNCTION_8
0x4001297	      0xb800000000	                              mov eax, 0	      2183	display.c	FUNCTION_8
0x400129c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2183	display.c	FUNCTION_8
0x40012a1	    0x644833142528	                xor rdx, qword fs:[0x28]	      2183	display.c	FUNCTION_8
0x40012aa	            0x7405	                            je 0x40012b1	      2183	display.c	FUNCTION_8
0x40012ac	      0xe800000000	                          call 0x40012b1	      2183	display.c	FUNCTION_8
0x40012b1	    0x4881c4d80000	                           add rsp, 0xd8	      2183	display.c	FUNCTION_8
0x40012b8	              0xc3	                                     ret	      2183	display.c	FUNCTION_8
