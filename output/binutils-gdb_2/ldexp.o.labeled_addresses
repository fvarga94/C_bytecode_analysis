is_dot	CALL,0:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	12
0x400010a	      0xb800000000	                              mov eax, 0	       922	ldexp.c	FUNCTION_22
0x400010f	        0x837f1003	               cmp dword [rdi + 0x10], 3	       922	ldexp.c	FUNCTION_22
0x4000113	            0x751b	                           jne 0x4000130	       922	ldexp.c	FUNCTION_22
0x4000115	    0x813f03010000	                  cmp dword [rdi], 0x103	       920	ldexp.c	FUNCTION_22
0x400011b	            0x7513	                           jne 0x4000130	       920	ldexp.c	FUNCTION_22
0x400011d	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       921	ldexp.c	FUNCTION_22
0x4000121	          0x803a2e	                    cmp byte [rdx], 0x2e	       921	ldexp.c	FUNCTION_22
0x4000124	            0x750a	                           jne 0x4000130	       921	ldexp.c	FUNCTION_22
0x4000126	        0x807a0100	                   cmp byte [rdx + 1], 0	       922	ldexp.c	FUNCTION_22
0x400012a	           0xf94c0	                                 sete al	       922	ldexp.c	FUNCTION_22
0x400012d	           0xfb6c0	                           movzx eax, al	       922	ldexp.c	FUNCTION_22
0x4000130	              0xc3	                                     ret	       923	ldexp.c	FUNCTION_22
exp_get_abs_int	CALL,3:functions,0:ELSE,1:DO,0:IF,4:FOR,0:WHILE,0:SWITCH,0	36
0x40025bb	            0x4154	                                push r12	      1592	ldexp.c	FUNCTION_45
0x40025bd	              0x55	                                push rbp	      1592	ldexp.c	FUNCTION_45
0x40025be	              0x53	                                push rbx	      1592	ldexp.c	FUNCTION_45
0x40025bf	            0x89f3	                            mov ebx, esi	      1592	ldexp.c	FUNCTION_45
0x40025c1	          0x4885ff	                           test rdi, rdi	      1593	ldexp.c	FUNCTION_45	IF_1
0x40025c4	            0x7469	                            je 0x400262f	      1593	ldexp.c	FUNCTION_45	IF_1
0x40025c6	          0x4889fd	                            mov rbp, rdi	      1593	ldexp.c	FUNCTION_45	IF_1
0x40025c9	          0x4989d4	                            mov r12, rdx	      1593	ldexp.c	FUNCTION_45	IF_1
0x40025cc	      0xe800000000	                          call 0x40025d1	      1595	ldexp.c	FUNCTION_45	IF_1	CALL_1
0x40025d1	    0x833d00000000	               cmp dword [0x040025d8], 0	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x40025d8	            0x7420	                            je 0x40025fa	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x40025da	    0x488b05000000	            mov rax, qword [0x040025e1] 	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x40025e1	          0x4885c0	                           test rax, rax	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x40025e4	            0x740b	                            je 0x40025f1	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x40025e6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x40025ea	    0x480105000000	            add qword [0x040025f1], rax 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x40025f1	    0x488b05000000	            mov rax, qword [0x040025f8] 	      1601	ldexp.c	FUNCTION_45	IF_1	IF_2
0x40025f8	            0xeb38	                           jmp 0x4002632	      1601	ldexp.c	FUNCTION_45	IF_1	IF_2
0x40025fa	          0x4d85e4	                           test r12, r12	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x40025fd	            0x7430	                            je 0x400262f	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x40025ff	    0x833d00000000	               cmp dword [0x04002606], 1	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4002606	            0x7427	                            je 0x400262f	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4002608	      0xba05000000	                              mov edx, 5	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400260d	      0xbe00000000	                              mov esi, 0	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4002612	      0xbf00000000	                              mov edi, 0	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4002617	      0xe800000000	                          call 0x400261c	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400261c	          0x4c89e2	                            mov rdx, r12	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400261f	          0x4889ee	                            mov rsi, rbp	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4002622	          0x4889c7	                            mov rdi, rax	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4002625	      0xb800000000	                              mov eax, 0	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400262a	      0xe800000000	                          call 0x400262f	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400262f	          0x4863c3	                         movsxd rax, ebx	      1609	ldexp.c	FUNCTION_45
0x4002632	              0x5b	                                 pop rbx	      1610	ldexp.c	FUNCTION_45
0x4002633	              0x5d	                                 pop rbp	      1610	ldexp.c	FUNCTION_45
0x4002634	            0x415c	                                 pop r12	      1610	ldexp.c	FUNCTION_45
0x4002636	              0xc3	                                     ret	      1610	ldexp.c	FUNCTION_45
exp_unop	CALL,2:functions,0:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0	32
0x4001efc	            0x4154	                                push r12	      1309	ldexp.c	FUNCTION_34
0x4001efe	              0x55	                                push rbp	      1309	ldexp.c	FUNCTION_34
0x4001eff	              0x53	                                push rbx	      1309	ldexp.c	FUNCTION_34
0x4001f00	          0x4189fc	                           mov r12d, edi	      1309	ldexp.c	FUNCTION_34
0x4001f03	          0x4889f5	                            mov rbp, rsi	      1309	ldexp.c	FUNCTION_34
0x4001f06	      0xbf28000000	                           mov edi, 0x28	      1310	ldexp.c	FUNCTION_34	CALL_1
0x4001f0b	      0xe800000000	                          call 0x4001f10	      1310	ldexp.c	FUNCTION_34	CALL_1
0x4001f10	          0x4889c3	                            mov rbx, rax	      1310	ldexp.c	FUNCTION_34	CALL_1
0x4001f13	          0x448920	                   mov dword [rax], r12d	      1312	ldexp.c	FUNCTION_34
0x4001f16	        0x488b4508	                mov rax, qword [rbp + 8]	      1313	ldexp.c	FUNCTION_34
0x4001f1a	        0x48894308	                mov qword [rbx + 8], rax	      1313	ldexp.c	FUNCTION_34
0x4001f1e	          0x8b4504	                mov eax, dword [rbp + 4]	      1314	ldexp.c	FUNCTION_34
0x4001f21	          0x894304	                mov dword [rbx + 4], eax	      1314	ldexp.c	FUNCTION_34
0x4001f24	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1315	ldexp.c	FUNCTION_34
0x4001f28	    0xc74310020000	               mov dword [rbx + 0x10], 2	      1316	ldexp.c	FUNCTION_34
0x4001f2f	        0x837d1007	               cmp dword [rbp + 0x10], 7	      1317	ldexp.c	FUNCTION_34	IF_1
0x4001f33	            0x7527	                           jne 0x4001f5c	      1317	ldexp.c	FUNCTION_34	IF_1
0x4001f35	    0x4181fc170100	                         cmp r12d, 0x117	      1319	ldexp.c	FUNCTION_34	IF_1
0x4001f3c	            0x741e	                            je 0x4001f5c	      1319	ldexp.c	FUNCTION_34	IF_1
0x4001f3e	          0x4489e0	                           mov eax, r12d	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f41	          0x83e0df	                     and eax, 0xffffffdf	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f44	      0x3d40010000	                          cmp eax, 0x140	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f49	            0x7411	                            je 0x4001f5c	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f4b	    0x4181fc260100	                         cmp r12d, 0x126	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f52	            0x7408	                            je 0x4001f5c	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f54	          0x4889df	                            mov rdi, rbx	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4001f57	      0xe885feffff	                 call sym.exp_value_fold	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4001f5c	          0x4889d8	                            mov rax, rbx	      1324	ldexp.c	FUNCTION_34
0x4001f5f	              0x5b	                                 pop rbx	      1324	ldexp.c	FUNCTION_34
0x4001f60	              0x5d	                                 pop rbp	      1324	ldexp.c	FUNCTION_34
0x4001f61	            0x415c	                                 pop r12	      1324	ldexp.c	FUNCTION_34
0x4001f63	              0xc3	                                     ret	      1324	ldexp.c	FUNCTION_34
make_abs	CALL,0:functions,0:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0	8
0x4000040	    0x488b05000000	            mov rax, qword [0x04000047] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4000047	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x400004a	            0x740b	                            je 0x4000057	       183	ldexp.c	FUNCTION_3	IF_1
0x400004c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4000050	    0x480105000000	            add qword [0x04000057], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x4000057	    0x48c705000000	               mov qword [0x04000062], 0	       185	ldexp.c	FUNCTION_3
0x4000062	    0xc70500000000	               mov dword [0x0400006c], 0	       186	ldexp.c	FUNCTION_3
0x400006c	              0xc3	                                     ret	       186	ldexp.c	FUNCTION_3
exp_trinop	CALL,2:functions,0:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0	36
0x4001e8e	            0x4156	                                push r14	      1290	ldexp.c	FUNCTION_33
0x4001e90	            0x4155	                                push r13	      1290	ldexp.c	FUNCTION_33
0x4001e92	            0x4154	                                push r12	      1290	ldexp.c	FUNCTION_33
0x4001e94	              0x55	                                push rbp	      1290	ldexp.c	FUNCTION_33
0x4001e95	              0x53	                                push rbx	      1290	ldexp.c	FUNCTION_33
0x4001e96	          0x4189fe	                           mov r14d, edi	      1290	ldexp.c	FUNCTION_33
0x4001e99	          0x4889f5	                            mov rbp, rsi	      1290	ldexp.c	FUNCTION_33
0x4001e9c	          0x4989d4	                            mov r12, rdx	      1290	ldexp.c	FUNCTION_33
0x4001e9f	          0x4989cd	                            mov r13, rcx	      1290	ldexp.c	FUNCTION_33
0x4001ea2	      0xbf30000000	                           mov edi, 0x30	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4001ea7	      0xe800000000	                          call 0x4001eac	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4001eac	          0x4889c3	                            mov rbx, rax	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4001eaf	          0x448930	                   mov dword [rax], r14d	      1293	ldexp.c	FUNCTION_33
0x4001eb2	        0x488b4508	                mov rax, qword [rbp + 8]	      1294	ldexp.c	FUNCTION_33
0x4001eb6	        0x48894308	                mov qword [rbx + 8], rax	      1294	ldexp.c	FUNCTION_33
0x4001eba	          0x8b4504	                mov eax, dword [rbp + 4]	      1295	ldexp.c	FUNCTION_33
0x4001ebd	          0x894304	                mov dword [rbx + 4], eax	      1295	ldexp.c	FUNCTION_33
0x4001ec0	        0x4c896320	             mov qword [rbx + 0x20], r12	      1296	ldexp.c	FUNCTION_33
0x4001ec4	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1297	ldexp.c	FUNCTION_33
0x4001ec8	        0x4c896b28	             mov qword [rbx + 0x28], r13	      1298	ldexp.c	FUNCTION_33
0x4001ecc	    0xc74310010000	               mov dword [rbx + 0x10], 1	      1299	ldexp.c	FUNCTION_33
0x4001ed3	        0x837d1007	               cmp dword [rbp + 0x10], 7	      1300	ldexp.c	FUNCTION_33	IF_1
0x4001ed7	            0x7517	                           jne 0x4001ef0	      1300	ldexp.c	FUNCTION_33	IF_1
0x4001ed9	    0x41837c241007	               cmp dword [r12 + 0x10], 7	      1301	ldexp.c	FUNCTION_33	IF_1
0x4001edf	            0x750f	                           jne 0x4001ef0	      1301	ldexp.c	FUNCTION_33	IF_1
0x4001ee1	      0x41837d1007	               cmp dword [r13 + 0x10], 7	      1302	ldexp.c	FUNCTION_33	IF_1
0x4001ee6	            0x7508	                           jne 0x4001ef0	      1302	ldexp.c	FUNCTION_33	IF_1
0x4001ee8	          0x4889df	                            mov rdi, rbx	      1303	ldexp.c	FUNCTION_33	CALL_2
0x4001eeb	      0xe8f1feffff	                 call sym.exp_value_fold	      1303	ldexp.c	FUNCTION_33	CALL_2
0x4001ef0	          0x4889d8	                            mov rax, rbx	      1305	ldexp.c	FUNCTION_33
0x4001ef3	              0x5b	                                 pop rbx	      1305	ldexp.c	FUNCTION_33
0x4001ef4	              0x5d	                                 pop rbp	      1305	ldexp.c	FUNCTION_33
0x4001ef5	            0x415c	                                 pop r12	      1305	ldexp.c	FUNCTION_33
0x4001ef7	            0x415d	                                 pop r13	      1305	ldexp.c	FUNCTION_33
0x4001ef9	            0x415e	                                 pop r14	      1305	ldexp.c	FUNCTION_33
0x4001efb	              0xc3	                                     ret	      1305	ldexp.c	FUNCTION_33
exp_get_vma	CALL,3:functions,0:ELSE,1:DO,0:IF,3:FOR,0:WHILE,0:SWITCH,0	34
0x400240e	          0x4889f0	                            mov rax, rsi	      1522	ldexp.c	FUNCTION_42
0x4002411	          0x4885ff	                           test rdi, rdi	      1513	ldexp.c	FUNCTION_42	IF_1
0x4002414	            0x7466	                            je 0x400247c	      1513	ldexp.c	FUNCTION_42	IF_1
0x4002416	            0x4154	                                push r12	      1512	ldexp.c	FUNCTION_42
0x4002418	              0x55	                                push rbp	      1512	ldexp.c	FUNCTION_42
0x4002419	              0x53	                                push rbx	      1512	ldexp.c	FUNCTION_42
0x400241a	          0x4989d4	                            mov r12, rdx	      1512	ldexp.c	FUNCTION_42
0x400241d	          0x4889f5	                            mov rbp, rsi	      1512	ldexp.c	FUNCTION_42
0x4002420	          0x4889fb	                            mov rbx, rdi	      1512	ldexp.c	FUNCTION_42
0x4002423	      0xe800000000	                          call 0x4002428	      1515	ldexp.c	FUNCTION_42	IF_1	CALL_1
0x4002428	    0x488b05000000	            mov rax, qword [0x0400242f] 	      1517	ldexp.c	FUNCTION_42	IF_1	IF_2
0x400242f	    0x833d00000000	               cmp dword [0x04002436], 0	      1516	ldexp.c	FUNCTION_42	IF_1	IF_2
0x4002436	            0x7540	                           jne 0x4002478	      1516	ldexp.c	FUNCTION_42	IF_1	IF_2
0x4002438	          0x4d85e4	                           test r12, r12	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x400243b	            0x7438	                            je 0x4002475	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x400243d	          0x4889e8	                            mov rax, rbp	      1522	ldexp.c	FUNCTION_42
0x4002440	    0x833d00000000	               cmp dword [0x04002447], 1	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4002447	            0x742f	                            je 0x4002478	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4002449	      0xba05000000	                              mov edx, 5	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x400244e	      0xbe00000000	                              mov esi, 0	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002453	      0xbf00000000	                              mov edi, 0	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002458	      0xe800000000	                          call 0x400245d	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x400245d	          0x4c89e2	                            mov rdx, r12	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002460	          0x4889de	                            mov rsi, rbx	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002463	          0x4889c7	                            mov rdi, rax	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002466	      0xb800000000	                              mov eax, 0	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x400246b	      0xe800000000	                          call 0x4002470	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4002470	          0x4889e8	                            mov rax, rbp	      1522	ldexp.c	FUNCTION_42
0x4002473	            0xeb03	                           jmp 0x4002478	      1522	ldexp.c	FUNCTION_42
0x4002475	          0x4889e8	                            mov rax, rbp	      1522	ldexp.c	FUNCTION_42
0x4002478	              0x5b	                                 pop rbx	      1523	ldexp.c	FUNCTION_42
0x4002479	              0x5d	                                 pop rbp	      1523	ldexp.c	FUNCTION_42
0x400247a	            0x415c	                                 pop r12	      1523	ldexp.c	FUNCTION_42
0x400247c	            0xf3c3	                                     ret	      1523	ldexp.c	FUNCTION_42
ldexp_finish	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	5
0x400269b	        0x4883ec08	                              sub rsp, 8	      1666	ldexp.c	FUNCTION_50
0x400269f	      0xbf00000000	                              mov edi, 0	      1667	ldexp.c	FUNCTION_50	CALL_1
0x40026a4	      0xe800000000	                          call 0x40026a9	      1667	ldexp.c	FUNCTION_50	CALL_1
0x40026a9	        0x4883c408	                              add rsp, 8	      1668	ldexp.c	FUNCTION_50
0x40026ad	              0xc3	                                     ret	      1668	ldexp.c	FUNCTION_50
exp_print_tree	CALL,34:functions,0:ELSE,2:DO,0:IF,8:FOR,0:WHILE,0:SWITCH,2	180
0x40020ac	              0x53	                                push rbx	      1402	ldexp.c	FUNCTION_41
0x40020ad	          0x4889fb	                            mov rbx, rdi	      1402	ldexp.c	FUNCTION_41
0x40020b0	    0x48833d000000	               cmp qword [0x040020b8], 0	      1405	ldexp.c	FUNCTION_41	IF_1
0x40020b8	            0x750e	                           jne 0x40020c8	      1405	ldexp.c	FUNCTION_41	IF_1
0x40020ba	    0x488b05000000	            mov rax, qword [0x040020c1] 	      1406	ldexp.c	FUNCTION_41	IF_1
0x40020c1	    0x488905000000	            mov qword [0x040020c8], rax 	      1406	ldexp.c	FUNCTION_41	IF_1
0x40020c8	          0x4885db	                           test rbx, rbx	      1408	ldexp.c	FUNCTION_41	IF_2
0x40020cb	            0x7514	                           jne 0x40020e1	      1408	ldexp.c	FUNCTION_41	IF_2
0x40020cd	      0xbf00000000	                              mov edi, 0	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40020d2	      0xb800000000	                              mov eax, 0	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40020d7	      0xe800000000	                          call 0x40020dc	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40020dc	      0xe92b030000	                           jmp 0x400240c	      1411	ldexp.c	FUNCTION_41	IF_2
0x40020e1	        0x837b1009	               cmp dword [rbx + 0x10], 9	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020e5	     0xf87e5020000	                            ja 0x40023d0	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020eb	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020ee	    0xff24c5000000	                       jmp qword [rax*8]	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020f5	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40020f9	      0xbf00000000	                              mov edi, 0	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40020fe	      0xb800000000	                              mov eax, 0	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x4002103	      0xe800000000	                          call 0x4002108	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x4002108	      0xe9ff020000	                           jmp 0x400240c	      1418	ldexp.c	FUNCTION_41	SWITCH_1
0x400210d	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002111	    0x488bb0f00000	            mov rsi, qword [rax + 0xf0] 	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002118	          0x4885f6	                           test rsi, rsi	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x400211b	            0x740f	                            je 0x400212c	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x400211d	      0xbf00000000	                              mov edi, 0	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002122	      0xb800000000	                              mov eax, 0	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002127	      0xe800000000	                          call 0x400212c	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x400212c	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002130	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002134	          0x488b30	                    mov rsi, qword [rax]	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002137	      0xbf00000000	                              mov edi, 0	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x400213c	      0xb800000000	                              mov eax, 0	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002141	      0xe800000000	                          call 0x4002146	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002146	      0xe9c1020000	                           jmp 0x400240c	      1423	ldexp.c	FUNCTION_41	SWITCH_1
0x400214b	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x400214f	    0x488b35000000	            mov rsi, qword [0x04002156] 	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002156	      0xe800000000	                          call 0x400215b	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x400215b	      0xbe01000000	                              mov esi, 1	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002160	            0x8b3b	                    mov edi, dword [rbx]	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002162	      0xe8e0e0ffff	                call sym.exp_print_token	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002167	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1427	ldexp.c	FUNCTION_41	SWITCH_1	CALL_7
0x400216b	      0xe800000000	                          call 0x4002170	      1427	ldexp.c	FUNCTION_41	SWITCH_1	CALL_7
0x4002170	      0xe997020000	                           jmp 0x400240c	      1428	ldexp.c	FUNCTION_41	SWITCH_1
0x4002175	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	        97	stdio2.h	CALL_11
0x4002179	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x400217e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x4002183	    0x488b3d000000	            mov rdi, qword [0x0400218a] 	        97	stdio2.h	CALL_11
0x400218a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_11
0x400218f	      0xe800000000	                          call 0x4002194	        97	stdio2.h	CALL_11
0x4002194	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4002198	      0xe800000000	                          call 0x400219d	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x400219d	    0x488b35000000	            mov rsi, qword [0x040021a4] 	      1433	ldexp.c	FUNCTION_41	SWITCH_1	CALL_9
0x40021a4	      0xbf29000000	                           mov edi, 0x29	      1433	ldexp.c	FUNCTION_41	SWITCH_1	CALL_9
0x40021a9	      0xe800000000	                          call 0x40021ae	      1433	ldexp.c	FUNCTION_41	SWITCH_1	CALL_9
0x40021ae	      0xe959020000	                           jmp 0x400240c	      1434	ldexp.c	FUNCTION_41	SWITCH_1
0x40021b3	            0x8b3b	                    mov edi, dword [rbx]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40021b5	    0x8d87e9feffff	                  lea eax, [rdi - 0x117]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40021bb	          0x83f82f	                           cmp eax, 0x2f	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40021be	     0xf871d020000	                            ja 0x40023e1	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40021c4	            0x89c0	                            mov eax, eax	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40021c6	    0xff24c5000000	                       jmp qword [rax*8]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40021cd	      0xbe00000000	                              mov esi, 0	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_10
0x40021d2	      0xbf31010000	                          mov edi, 0x131	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_10
0x40021d7	      0xe86be0ffff	                call sym.exp_print_token	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_10
0x40021dc	    0x488b0d000000	            mov rcx, qword [0x040021e3] 	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x40021e3	      0xba03000000	                              mov edx, 3	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x40021e8	      0xbe01000000	                              mov esi, 1	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x40021ed	      0xbf00000000	                              mov edi, 0	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x40021f2	      0xe800000000	                          call 0x40021f7	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x40021f7	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x40021fb	      0xe800000000	                          call 0x4002200	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4002200	    0x488b0d000000	            mov rcx, qword [0x04002207] 	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4002207	      0xba03000000	                              mov edx, 3	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x400220c	      0xbe01000000	                              mov esi, 1	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4002211	      0xbf00000000	                              mov edi, 0	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4002216	      0xe800000000	                          call 0x400221b	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x400221b	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x400221f	      0xe800000000	                          call 0x4002224	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4002224	    0x488b35000000	            mov rsi, qword [0x0400222b] 	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x400222b	      0xbf29000000	                           mov edi, 0x29	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002230	      0xe800000000	                          call 0x4002235	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002235	      0xe9d2010000	                           jmp 0x400240c	      1455	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x400223a	      0xbe00000000	                              mov esi, 0	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_16
0x400223f	      0xe803e0ffff	                call sym.exp_print_token	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_16
0x4002244	    0x488b35000000	            mov rsi, qword [0x0400224b] 	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x400224b	      0xbf20000000	                           mov edi, 0x20	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002250	      0xe800000000	                          call 0x4002255	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002255	    0x488b35000000	            mov rsi, qword [0x0400225c] 	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x400225c	      0xbf28000000	                           mov edi, 0x28	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4002261	      0xe800000000	                          call 0x4002266	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4002266	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x400226a	      0xe800000000	                          call 0x400226f	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x400226f	    0x488b0d000000	            mov rcx, qword [0x04002276] 	        97	stdio2.h	CALL_11
0x4002276	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_11
0x400227b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x4002280	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_11
0x4002285	      0xe800000000	                          call 0x400228a	        97	stdio2.h	CALL_11
0x400228a	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x400228e	      0xe800000000	                          call 0x4002293	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002293	    0x488b35000000	            mov rsi, qword [0x0400229a] 	      1469	ldexp.c	FUNCTION_41	SWITCH_1	CALL_22
0x400229a	      0xbf29000000	                           mov edi, 0x29	      1469	ldexp.c	FUNCTION_41	SWITCH_1	CALL_22
0x400229f	      0xe800000000	                          call 0x40022a4	      1469	ldexp.c	FUNCTION_41	SWITCH_1	CALL_22
0x40022a4	      0xe963010000	                           jmp 0x400240c	      1470	ldexp.c	FUNCTION_41	SWITCH_1
0x40022a9	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x40022ad	      0xe800000000	                          call 0x40022b2	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x40022b2	    0x488b35000000	            mov rsi, qword [0x040022b9] 	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40022b9	      0xbf3f000000	                           mov edi, 0x3f	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40022be	      0xe800000000	                          call 0x40022c3	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40022c3	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x40022c7	      0xe800000000	                          call 0x40022cc	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x40022cc	    0x488b35000000	            mov rsi, qword [0x040022d3] 	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x40022d3	      0xbf3a000000	                           mov edi, 0x3a	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x40022d8	      0xe800000000	                          call 0x40022dd	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x40022dd	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1476	ldexp.c	FUNCTION_41	SWITCH_1	CALL_27
0x40022e1	      0xe800000000	                          call 0x40022e6	      1476	ldexp.c	FUNCTION_41	SWITCH_1	CALL_27
0x40022e6	      0xe921010000	                           jmp 0x400240c	      1477	ldexp.c	FUNCTION_41	SWITCH_1
0x40022eb	      0xbe00000000	                              mov esi, 0	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x40022f0	            0x8b3b	                    mov edi, dword [rbx]	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x40022f2	      0xe850dfffff	                call sym.exp_print_token	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x40022f7	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x40022fc	     0xf840a010000	                            je 0x400240c	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x4002302	    0x488b0d000000	            mov rcx, qword [0x04002309] 	        97	stdio2.h	CALL_11
0x4002309	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_11
0x400230e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x4002313	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_11
0x4002318	      0xe800000000	                          call 0x400231d	        97	stdio2.h	CALL_11
0x400231d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1483	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_29
0x4002321	      0xe800000000	                          call 0x4002326	      1483	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_29
0x4002326	    0x488b35000000	            mov rsi, qword [0x0400232d] 	      1484	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_30
0x400232d	      0xbf29000000	                           mov edi, 0x29	      1484	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_30
0x4002332	      0xe800000000	                          call 0x4002337	      1484	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_30
0x4002337	      0xe9d0000000	                           jmp 0x400240c	      1484	ldexp.c	FUNCTION_41	SWITCH_1	IF_6	CALL_30
0x400233c	    0x488b0d000000	            mov rcx, qword [0x04002343] 	        97	stdio2.h	CALL_11
0x4002343	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_11
0x4002348	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x400234d	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_11
0x4002352	      0xe800000000	                          call 0x4002357	        97	stdio2.h	CALL_11
0x4002357	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_31
0x400235b	      0xe800000000	                          call 0x4002360	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_31
0x4002360	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	        97	stdio2.h	CALL_11
0x4002364	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x4002369	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x400236e	    0x488b3d000000	            mov rdi, qword [0x04002375] 	        97	stdio2.h	CALL_11
0x4002375	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_11
0x400237a	      0xe800000000	                          call 0x400237f	        97	stdio2.h	CALL_11
0x400237f	      0xe988000000	                           jmp 0x400240c	        97	stdio2.h	CALL_11
0x4002384	            0x8b3b	                    mov edi, dword [rbx]	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4002386	    0x81ff03010000	                          cmp edi, 0x103	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x400238c	            0x7512	                           jne 0x40023a0	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x400238e	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x4002392	    0x488b35000000	            mov rsi, qword [0x04002399] 	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x4002399	      0xe800000000	                          call 0x400239e	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x400239e	            0xeb6c	                           jmp 0x400240c	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x40023a0	      0xbe00000000	                              mov esi, 0	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_33
0x40023a5	      0xe89ddeffff	                call sym.exp_print_token	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_33
0x40023aa	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x40023ae	          0x4885c9	                           test rcx, rcx	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x40023b1	            0x7459	                            je 0x400240c	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x40023b3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x40023b8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x40023bd	    0x488b3d000000	            mov rdi, qword [0x040023c4] 	        97	stdio2.h	CALL_11
0x40023c4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_11
0x40023c9	      0xe800000000	                          call 0x40023ce	        97	stdio2.h	CALL_11
0x40023ce	            0xeb3c	                           jmp 0x400240c	        97	stdio2.h	CALL_11
0x40023d0	      0xbee1050000	                          mov esi, 0x5e1	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x40023d5	      0xbf00000000	                              mov edi, 0	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x40023da	      0xe800000000	                          call 0x40023df	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x40023df	            0xeb2b	                           jmp 0x400240c	      1506	ldexp.c	FUNCTION_41	SWITCH_1
0x40023e1	    0x488b35000000	            mov rsi, qword [0x040023e8] 	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x40023e8	      0xbf28000000	                           mov edi, 0x28	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x40023ed	      0xe800000000	                          call 0x40023f2	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x40023f2	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x40023f6	      0xe800000000	                          call 0x40023fb	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x40023fb	      0xbe01000000	                              mov esi, 1	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4002400	            0x8b3b	                    mov edi, dword [rbx]	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4002402	      0xe840deffff	                call sym.exp_print_token	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4002407	      0xe97efeffff	                           jmp 0x400228a	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x400240c	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x400240d	              0xc3	                                     ret	      1508	ldexp.c	FUNCTION_41
exp_print_token	CALL,6:functions,0:ELSE,2:DO,0:IF,5:FOR,1:WHILE,0:SWITCH,0	59
0x4000247	            0x4154	                                push r12	        78	ldexp.c	FUNCTION_1
0x4000249	              0x55	                                push rbp	        78	ldexp.c	FUNCTION_1
0x400024a	              0x53	                                push rbx	        78	ldexp.c	FUNCTION_1
0x400024b	            0x89fd	                            mov ebp, edi	        78	ldexp.c	FUNCTION_1
0x400024d	          0x4189f4	                           mov r12d, esi	        78	ldexp.c	FUNCTION_1
0x4000250	    0x81ff02010000	                          cmp edi, 0x102	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4000256	     0xf849e000000	                            je 0x40002fa	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400025c	      0xb800000000	                              mov eax, 0	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4000261	      0xbb01000000	                              mov ebx, 1	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000266	            0x3928	                    cmp dword [rax], ebp	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4000268	     0xf8491000000	                            je 0x40002ff	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400026e	          0x83c301	                              add ebx, 1	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000271	        0x4883c010	                           add rax, 0x10	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000275	          0x83fb33	                           cmp ebx, 0x33	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4000278	            0x75ec	                           jne 0x4000266	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x400027a	      0xe98b000000	                           jmp 0x400030a	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x400027f	    0x488b35000000	            mov rsi, qword [0x04000286] 	       145	ldexp.c	FUNCTION_1	CALL_2
0x4000286	      0xbf20000000	                           mov edi, 0x20	       145	ldexp.c	FUNCTION_1	CALL_2
0x400028b	      0xe800000000	                          call 0x4000290	       145	ldexp.c	FUNCTION_1	CALL_2
0x4000290	          0x83fb32	                           cmp ebx, 0x32	       147	ldexp.c	FUNCTION_1	IF_3	CALL_3
0x4000293	            0x771b	                            ja 0x40002b0	       147	ldexp.c	FUNCTION_1	IF_3	CALL_3
0x4000295	            0x89db	                            mov ebx, ebx	       148	ldexp.c	FUNCTION_1	CALL_4
0x4000297	        0x48c1e304	                              shl rbx, 4	       148	ldexp.c	FUNCTION_1	CALL_4
0x400029b	    0x488b35000000	            mov rsi, qword [0x040002a2] 	       148	ldexp.c	FUNCTION_1	CALL_4
0x40002a2	    0x488bbb000000	                    mov rdi, qword [rbx]	       148	ldexp.c	FUNCTION_1	CALL_4
0x40002a9	      0xe800000000	                          call 0x40002ae	       148	ldexp.c	FUNCTION_1	CALL_4
0x40002ae	            0xeb32	                           jmp 0x40002e2	       148	ldexp.c	FUNCTION_1	CALL_4
0x40002b0	          0x83fd7e	                           cmp ebp, 0x7e	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40002b3	            0x7f10	                            jg 0x40002c5	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40002b5	    0x488b35000000	            mov rsi, qword [0x040002bc] 	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40002bc	            0x89ef	                            mov edi, ebp	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40002be	      0xe800000000	                          call 0x40002c3	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40002c3	            0xeb1d	                           jmp 0x40002e2	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40002c5	            0x89e9	                            mov ecx, ebp	        97	stdio2.h	CALL_11
0x40002c7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x40002cc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x40002d1	    0x488b3d000000	            mov rdi, qword [0x040002d8] 	        97	stdio2.h	CALL_11
0x40002d8	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_11
0x40002dd	      0xe800000000	                          call 0x40002e2	        97	stdio2.h	CALL_11
0x40002e2	          0x4585e4	                         test r12d, r12d	       154	ldexp.c	FUNCTION_1	IF_5
0x40002e5	            0x743b	                            je 0x4000322	       154	ldexp.c	FUNCTION_1	IF_5
0x40002e7	    0x488b35000000	            mov rsi, qword [0x040002ee] 	       155	ldexp.c	FUNCTION_1	CALL_6
0x40002ee	      0xbf20000000	                           mov edi, 0x20	       155	ldexp.c	FUNCTION_1	CALL_6
0x40002f3	      0xe800000000	                          call 0x40002f8	       155	ldexp.c	FUNCTION_1	CALL_6
0x40002f8	            0xeb28	                           jmp 0x4000322	       156	ldexp.c	FUNCTION_1
0x40002fa	      0xbb00000000	                              mov ebx, 0	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x40002ff	          0x4585e4	                         test r12d, r12d	       144	ldexp.c	FUNCTION_1	IF_2
0x4000302	     0xf8577ffffff	                           jne 0x400027f	       144	ldexp.c	FUNCTION_1	IF_2
0x4000308	            0xeb8b	                           jmp 0x4000295	       144	ldexp.c	FUNCTION_1	IF_2
0x400030a	          0x4585e4	                         test r12d, r12d	       144	ldexp.c	FUNCTION_1	IF_2
0x400030d	            0x74a1	                            je 0x40002b0	       144	ldexp.c	FUNCTION_1	IF_2
0x400030f	    0x488b35000000	            mov rsi, qword [0x04000316] 	       145	ldexp.c	FUNCTION_1	CALL_2
0x4000316	      0xbf20000000	                           mov edi, 0x20	       145	ldexp.c	FUNCTION_1	CALL_2
0x400031b	      0xe800000000	                          call 0x4000320	       145	ldexp.c	FUNCTION_1	CALL_2
0x4000320	            0xeb8e	                           jmp 0x40002b0	       145	ldexp.c	FUNCTION_1	CALL_2
0x4000322	              0x5b	                                 pop rbx	       156	ldexp.c	FUNCTION_1
0x4000323	              0x5d	                                 pop rbp	       156	ldexp.c	FUNCTION_1
0x4000324	            0x415c	                                 pop r12	       156	ldexp.c	FUNCTION_1
0x4000326	              0xc3	                                     ret	       156	ldexp.c	FUNCTION_1
exp_assert	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	19
0x400206c	              0x55	                                push rbp	      1387	ldexp.c	FUNCTION_40
0x400206d	              0x53	                                push rbx	      1387	ldexp.c	FUNCTION_40
0x400206e	        0x4883ec08	                              sub rsp, 8	      1387	ldexp.c	FUNCTION_40
0x4002072	          0x4889fb	                            mov rbx, rdi	      1387	ldexp.c	FUNCTION_40
0x4002075	          0x4889f5	                            mov rbp, rsi	      1387	ldexp.c	FUNCTION_40
0x4002078	      0xbf28000000	                           mov edi, 0x28	      1390	ldexp.c	FUNCTION_40	CALL_1
0x400207d	      0xe800000000	                          call 0x4002082	      1390	ldexp.c	FUNCTION_40	CALL_1
0x4002082	    0xc70021000000	                   mov dword [rax], 0x21	      1391	ldexp.c	FUNCTION_40
0x4002088	        0x488b5308	                mov rdx, qword [rbx + 8]	      1392	ldexp.c	FUNCTION_40
0x400208c	        0x48895008	                mov qword [rax + 8], rdx	      1392	ldexp.c	FUNCTION_40
0x4002090	          0x8b5304	                mov edx, dword [rbx + 4]	      1393	ldexp.c	FUNCTION_40
0x4002093	          0x895004	                mov dword [rax + 4], edx	      1393	ldexp.c	FUNCTION_40
0x4002096	    0xc74010080000	               mov dword [rax + 0x10], 8	      1394	ldexp.c	FUNCTION_40
0x400209d	        0x48895818	             mov qword [rax + 0x18], rbx	      1395	ldexp.c	FUNCTION_40
0x40020a1	        0x48896820	             mov qword [rax + 0x20], rbp	      1396	ldexp.c	FUNCTION_40
0x40020a5	        0x4883c408	                              add rsp, 8	      1398	ldexp.c	FUNCTION_40
0x40020a9	              0x5b	                                 pop rbx	      1398	ldexp.c	FUNCTION_40
0x40020aa	              0x5d	                                 pop rbp	      1398	ldexp.c	FUNCTION_40
0x40020ab	              0xc3	                                     ret	      1398	ldexp.c	FUNCTION_40
exp_fold_tree_1	CALL,35:functions,0:ELSE,8:DO,0:IF,26:FOR,0:WHILE,0:SWITCH,1	1329
0x4000383	            0x4155	                                push r13	       999	ldexp.c	FUNCTION_28
0x4000385	            0x4154	                                push r12	       999	ldexp.c	FUNCTION_28
0x4000387	              0x55	                                push rbp	       999	ldexp.c	FUNCTION_28
0x4000388	              0x53	                                push rbx	       999	ldexp.c	FUNCTION_28
0x4000389	        0x4883ec38	                           sub rsp, 0x38	       999	ldexp.c	FUNCTION_28
0x400038d	    0x64488b042528	                mov rax, qword fs:[0x28]	       999	ldexp.c	FUNCTION_28
0x4000396	      0x4889442428	             mov qword [rsp + 0x28], rax	       999	ldexp.c	FUNCTION_28
0x400039b	            0x31c0	                            xor eax, eax	       999	ldexp.c	FUNCTION_28
0x400039d	          0x4885ff	                           test rdi, rdi	      1000	ldexp.c	FUNCTION_28	IF_1
0x40003a0	            0x7531	                           jne 0x40003d3	      1000	ldexp.c	FUNCTION_28	IF_1
0x40003a2	    0x48c705000000	               mov qword [0x040003ad], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40003ad	    0x48c705000000	               mov qword [0x040003b8], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40003b8	    0x48c705000000	               mov qword [0x040003c3], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40003c3	    0x48c705000000	               mov qword [0x040003ce], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40003ce	      0xe9ae180000	                           jmp 0x4001c81	        90	string3.h	FUNCTION_71	CALL_6
0x40003d3	          0x4889fb	                            mov rbx, rdi	        90	string3.h	FUNCTION_71	CALL_6
0x40003d6	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40003d9	          0x83f809	                              cmp eax, 9	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40003dc	     0xf87c1170000	                            ja 0x4001ba3	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40003e2	            0x89c2	                            mov edx, eax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40003e4	    0xff24d5000000	                       jmp qword [rdx*8]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40003eb	    0x48813d000000	               cmp qword [0x040003f6], 0	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x40003f6	            0x7536	                           jne 0x400042e	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x40003f8	    0x833d00000000	               cmp dword [0x040003ff], 0	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x40003ff	            0x752d	                           jne 0x400042e	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000401	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4000405	    0xc70500000000	               mov dword [0x0400040f], 1	       192	ldexp.c	FUNCTION_4
0x400040f	    0x48c705000000	               mov qword [0x0400041a], 0	       193	ldexp.c	FUNCTION_4
0x400041a	    0x488905000000	            mov qword [0x04000421], rax 	       194	ldexp.c	FUNCTION_4
0x4000421	    0x48c705000000	               mov qword [0x0400042c], 0	       195	ldexp.c	FUNCTION_4
0x400042c	            0xeb09	                           jmp 0x4000437	       195	ldexp.c	FUNCTION_4
0x400042e	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1013	ldexp.c	FUNCTION_28	SWITCH_1	CALL_3
0x4000432	      0xe836fcffff	                     call sym.new_number	      1013	ldexp.c	FUNCTION_28	SWITCH_1	CALL_3
0x4000437	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x400043b	    0x488905000000	            mov qword [0x04000442], rax 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4000442	      0xe93a180000	                           jmp 0x4001c81	      1015	ldexp.c	FUNCTION_28	SWITCH_1
0x4000447	    0x833d00000000	               cmp dword [0x0400044e], 0	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400044e	            0x7438	                            je 0x4000488	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4000450	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4000454	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4000458	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x400045c	        0x48034720	             add rax, qword [rdi + 0x20]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4000460	    0xc70500000000	               mov dword [0x0400046a], 1	       251	ldexp.c	FUNCTION_9
0x400046a	    0x488905000000	            mov qword [0x04000471], rax 	       252	ldexp.c	FUNCTION_9
0x4000471	    0x48c705000000	               mov qword [0x0400047c], 0	       253	ldexp.c	FUNCTION_9
0x400047c	    0x488915000000	            mov qword [0x04000483], rdx 	       254	ldexp.c	FUNCTION_9
0x4000483	      0xe9f9170000	                           jmp 0x4001c81	       254	ldexp.c	FUNCTION_9
0x4000488	    0x48c705000000	               mov qword [0x04000493], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4000493	    0x48c705000000	               mov qword [0x0400049e], 0	        90	string3.h	FUNCTION_71	CALL_6
0x400049e	    0x48c705000000	               mov qword [0x040004a9], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40004a9	    0x48c705000000	               mov qword [0x040004b4], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40004b4	      0xe9c8170000	                           jmp 0x4001c81	        90	string3.h	FUNCTION_71	CALL_6
0x40004b9	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x40004bd	      0xe8c1feffff	                call sym.exp_fold_tree_1	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x40004c2	    0x833d00000000	               cmp dword [0x040004c9], 4	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x40004c9	     0xf85b2170000	                           jne 0x4001c81	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x40004cf	    0x48833d000000	               cmp qword [0x040004d7], 0	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x40004d7	     0xf85a4170000	                           jne 0x4001c81	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x40004dd	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004e1	      0xbf00000000	                              mov edi, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004e6	      0xb800000000	                              mov eax, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004eb	      0xe800000000	                          call 0x40004f0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004f0	      0xe98c170000	                           jmp 0x4001c81	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004f5	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x40004f9	      0xe885feffff	                call sym.exp_fold_tree_1	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x40004fe	    0x833d00000000	               cmp dword [0x04000505], 0	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4000505	     0xf8476170000	                            je 0x4001c81	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x400050b	            0x8b13	                    mov edx, dword [rbx]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400050d	    0x81fa17010000	                          cmp edx, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000513	            0x747a	                            je 0x400058f	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000515	    0x81fa17010000	                          cmp edx, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400051b	            0x7f20	                            jg 0x400053d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400051d	          0x83fa2d	                           cmp edx, 0x2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000520	     0xf841b010000	                            je 0x4000641	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000526	          0x83fa7e	                           cmp edx, 0x7e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000529	     0xf84ec000000	                            je 0x400061b	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400052f	          0x83fa21	                           cmp edx, 0x21	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000532	     0xf85ce010000	                           jne 0x4000706	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000538	      0xe9ea000000	                           jmp 0x4000627	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400053d	    0x81fa40010000	                          cmp edx, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000543	     0xf8404010000	                            je 0x400064d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000549	    0x81fa40010000	                          cmp edx, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400054f	            0x7f11	                            jg 0x4000562	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000551	    0x81fa26010000	                          cmp edx, 0x126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000557	     0xf843e010000	                            je 0x400069b	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400055d	      0xe9a4010000	                           jmp 0x4000706	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000562	    0x81fa60010000	                          cmp edx, 0x160	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000568	            0x746f	                            je 0x40005d9	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400056a	    0x488b05000000	            mov rax, qword [0x04000571] 	       161	ldexp.c	FUNCTION_2
0x4000571	      0xbe00000000	                              mov esi, 0	       163	ldexp.c	FUNCTION_2
0x4000576	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       162	ldexp.c	FUNCTION_2
0x400057d	      0xbf01000000	                              mov edi, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4000582	    0x81fa67010000	                          cmp edx, 0x167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000588	            0x745c	                            je 0x40005e6	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400058a	      0xe977010000	                           jmp 0x4000706	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400058f	    0x833d00000000	               cmp dword [0x04000596], 0	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x4000596	            0x7432	                            je 0x40005ca	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x4000598	    0x488b0d000000	            mov rcx, qword [0x0400059f] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x400059f	    0x488b3d000000	            mov rdi, qword [0x040005a6] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x40005a6	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x40005aa	            0x7614	                           jbe 0x40005c0	      1615	ldexp.c	FUNCTION_46	IF_1
0x40005ac	      0x488d4439ff	                lea rax, [rcx + rdi - 1]	      1619	ldexp.c	FUNCTION_46
0x40005b1	      0xba00000000	                              mov edx, 0	      1619	ldexp.c	FUNCTION_46
0x40005b6	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x40005b9	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x40005bd	          0x4889c7	                            mov rdi, rax	      1619	ldexp.c	FUNCTION_46
0x40005c0	      0xe8d0faffff	               call sym.new_rel_from_abs	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x40005c5	      0xe9b7160000	                           jmp 0x4001c81	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x40005ca	    0xc70500000000	               mov dword [0x040005d4], 0	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x40005d4	      0xe9a8160000	                           jmp 0x4001c81	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x40005d9	      0xe862faffff	                       call sym.make_abs	       380	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_4
0x40005de	      0xe99e160000	                           jmp 0x4001c81	       380	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_4
0x40005e3	          0x4889d1	                            mov rcx, rdx	       167	ldexp.c	FUNCTION_2	DO_1
0x40005e6	        0x488d5101	                      lea rdx, [rcx + 1]	       167	ldexp.c	FUNCTION_2	DO_1
0x40005ea	        0x4883f801	                              cmp rax, 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40005ee	            0x7605	                           jbe 0x40005f5	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40005f0	            0xa801	                              test al, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40005f2	           0xf45f7	                         cmovne esi, edi	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40005f5	          0x48d1e8	                              shr rax, 1	       172	ldexp.c	FUNCTION_2
0x40005f8	            0x75e9	                           jne 0x40005e3	       172	ldexp.c	FUNCTION_2
0x40005fa	        0x4883c102	                              add rcx, 2	       175	ldexp.c	FUNCTION_2	IF_2
0x40005fe	            0x85f6	                           test esi, esi	       175	ldexp.c	FUNCTION_2	IF_2
0x4000600	        0x480f45d1	                         cmovne rdx, rcx	       175	ldexp.c	FUNCTION_2	IF_2
0x4000604	    0x48c705000000	               mov qword [0x0400060f], 0	       176	ldexp.c	FUNCTION_2
0x400060f	    0x488915000000	            mov qword [0x04000616], rdx 	       177	ldexp.c	FUNCTION_2
0x4000616	      0xe966160000	                           jmp 0x4001c81	       177	ldexp.c	FUNCTION_2
0x400061b	    0x48f715000000	                  not qword [0x04000622]	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000622	      0xe95a160000	                           jmp 0x4001c81	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000627	    0x48833d000000	               cmp qword [0x0400062f], 0	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400062f	           0xf94c0	                                 sete al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000632	           0xfb6c0	                           movzx eax, al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000635	    0x488905000000	            mov qword [0x0400063c], rax 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400063c	      0xe940160000	                           jmp 0x4001c81	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000641	    0x48f71d000000	                  neg qword [0x04000648]	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000648	      0xe934160000	                           jmp 0x4001c81	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400064d	    0x833d00000000	               cmp dword [0x04000654], 0	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4000654	            0x7436	                            je 0x400068c	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4000656	      0xe8e5f9ffff	                       call sym.make_abs	       403	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_6
0x400065b	    0x488b0d000000	            mov rcx, qword [0x04000662] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4000662	    0x488b05000000	            mov rax, qword [0x04000669] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4000669	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x400066d	            0x7611	                           jbe 0x4000680	      1615	ldexp.c	FUNCTION_46	IF_1
0x400066f	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x4000674	      0xba00000000	                              mov edx, 0	      1619	ldexp.c	FUNCTION_46
0x4000679	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x400067c	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4000680	    0x488905000000	            mov qword [0x04000687], rax 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4000687	      0xe9f5150000	                           jmp 0x4001c81	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x400068c	    0xc70500000000	               mov dword [0x04000696], 0	       407	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_2
0x4000696	      0xe9e6150000	                           jmp 0x4001c81	       407	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_2
0x400069b	    0x833d00000000	               cmp dword [0x040006a2], 0	       343	ldexp.c	FUNCTION_14	IF_1
0x40006a2	            0x740d	                            je 0x40006b1	       343	ldexp.c	FUNCTION_14	IF_1
0x40006a4	    0x48813d000000	               cmp qword [0x040006af], 0	       344	ldexp.c	FUNCTION_14	IF_1
0x40006af	            0x740f	                            je 0x40006c0	       344	ldexp.c	FUNCTION_14	IF_1
0x40006b1	    0xc70500000000	               mov dword [0x040006bb], 0	       346	ldexp.c	FUNCTION_14	IF_1
0x40006bb	      0xe9c1150000	                           jmp 0x4001c81	       346	ldexp.c	FUNCTION_14	IF_1
0x40006c0	    0x8b0500000000	            mov eax, dword [0x040006c6] 	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40006c6	          0x8d50ff	                      lea edx, [rax - 1]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40006c9	          0x83fa01	                              cmp edx, 1	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40006cc	            0x771d	                            ja 0x40006eb	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40006ce	    0xc70500000000	               mov dword [0x040006d8], 3	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40006d8	    0x488b05000000	            mov rax, qword [0x040006df] 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40006df	    0x488905000000	            mov qword [0x040006e6], rax 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40006e6	      0xe996150000	                           jmp 0x4001c81	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40006eb	          0x83e804	                              sub eax, 4	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x40006ee	          0x83f802	                              cmp eax, 2	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x40006f1	     0xf868a150000	                           jbe 0x4001c81	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x40006f7	    0xc70500000000	               mov dword [0x04000701], 0	       361	ldexp.c	FUNCTION_14	ELSE_3
0x4000701	      0xe97b150000	                           jmp 0x4001c81	       361	ldexp.c	FUNCTION_14	ELSE_3
0x4000706	      0xbe9f010000	                          mov esi, 0x19f	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x400070b	      0xbf00000000	                              mov edi, 0	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000710	      0xe800000000	                          call 0x4000715	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000715	      0xe967150000	                           jmp 0x4001c81	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x400071a	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x400071e	      0xe860fcffff	                call sym.exp_fold_tree_1	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x4000723	    0x833d00000000	               cmp dword [0x0400072a], 0	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x400072a	     0xf849e000000	                            je 0x40007ce	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000730	    0x813b31010000	                  cmp dword [rbx], 0x131	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000736	     0xf8592000000	                           jne 0x40007ce	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x400073c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000740	        0x488b6818	            mov rbp, qword [rax + 0x18] 	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000744	    0x488b1d000000	            mov rbx, qword [0x0400074b] 	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x400074b	          0x4885db	                           test rbx, rbx	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x400074e	     0xf842d150000	                            je 0x4001c81	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000754	        0x488b7b08	                mov rdi, qword [rbx + 8]	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000758	          0x4889ee	                            mov rsi, rbp	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x400075b	      0xe800000000	                          call 0x4000760	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000760	            0x85c0	                           test eax, eax	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000762	            0x755d	                           jne 0x40007c1	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000764	        0x837b1800	               cmp dword [rbx + 0x18], 0	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000768	            0x7542	                           jne 0x40007ac	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x400076a	    0x833d00000000	               cmp dword [0x04000771], 0	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000771	            0x7439	                            je 0x40007ac	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000773	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000777	      0xba00000000	                              mov edx, 0	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x400077c	    0x48f735000000	                  div qword [0x04000783]	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000783	          0x4885d2	                           test rdx, rdx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000786	            0x7424	                            je 0x40007ac	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000788	      0xba05000000	                              mov edx, 5	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x400078d	      0xbe00000000	                              mov esi, 0	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000792	      0xbf00000000	                              mov edi, 0	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4000797	      0xe800000000	                          call 0x400079c	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x400079c	          0x4889ee	                            mov rsi, rbp	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x400079f	          0x4889c7	                            mov rdi, rax	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40007a2	      0xb800000000	                              mov eax, 0	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40007a7	      0xe800000000	                          call 0x40007ac	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40007ac	    0xc74318010000	               mov dword [rbx + 0x18], 1	       552	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2
0x40007b3	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       553	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_5
0x40007b7	      0xe8d9f8ffff	               call sym.new_rel_from_abs	       553	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_5
0x40007bc	      0xe9c0140000	                           jmp 0x4001c81	       553	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_5
0x40007c1	          0x488b1b	                    mov rbx, qword [rbx]	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x40007c4	          0x4885db	                           test rbx, rbx	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x40007c7	            0x758b	                           jne 0x4000754	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x40007c9	      0xe9b3140000	                           jmp 0x4001c81	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x40007ce	    0x488b05000000	            mov rax, qword [0x040007d5] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40007d5	        0x48890424	                    mov qword [rsp], rax	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40007d9	    0x488b05000000	            mov rax, qword [0x040007e0] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40007e0	      0x4889442408	                mov qword [rsp + 8], rax	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40007e5	    0x488b05000000	            mov rax, qword [0x040007ec] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40007ec	      0x4889442410	             mov qword [rsp + 0x10], rax	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40007f1	    0x488b05000000	            mov rax, qword [0x040007f8] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40007f8	      0x4889442418	             mov qword [rsp + 0x18], rax	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40007fd	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000801	      0xe87dfbffff	                call sym.exp_fold_tree_1	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000806	    0x8b0500000000	            mov eax, dword [0x0400080c] 	       561	ldexp.c	ELSE_3	FUNCTION_19
0x400080c	        0x23442418	             and eax, dword [rsp + 0x18]	       561	ldexp.c	ELSE_3	FUNCTION_19
0x4000810	    0x890500000000	            mov dword [0x04000816], eax 	       561	ldexp.c	ELSE_3	FUNCTION_19
0x4000816	            0x85c0	                           test eax, eax	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x4000818	     0xf8463140000	                            je 0x4001c81	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x400081e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x4000823	    0x488b05000000	            mov rax, qword [0x0400082a] 	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x400082a	          0x4839c2	                            cmp rdx, rax	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x400082d	            0x743c	                            je 0x400086b	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x400082f	          0x4885d2	                           test rdx, rdx	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000832	            0x7422	                            je 0x4000856	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000834	          0x4885c0	                           test rax, rax	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000837	            0x741d	                            je 0x4000856	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000839	      0xe802f8ffff	                       call sym.make_abs	       572	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6	CALL_7
0x400083e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000843	        0x488b4028	            mov rax, qword [rax + 0x28] 	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000847	        0x48010424	                    add qword [rsp], rax	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x400084b	    0x48c744241000	               mov qword [rsp + 0x10], 0	       574	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000854	            0xeb15	                           jmp 0x400086b	       574	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000856	          0x4885c0	                           test rax, rax	       578	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000859	            0x7510	                           jne 0x400086b	       578	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x400085b	    0x488915000000	            mov qword [0x04000862], rdx 	       580	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000862	    0x48c744241000	               mov qword [rsp + 0x10], 0	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x400086b	            0x8b03	                    mov eax, dword [rbx]	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400086d	      0x3d0e010000	                          cmp eax, 0x10e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000872	     0xf8408030000	                            je 0x4000b80	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000878	      0x3d0e010000	                          cmp eax, 0x10e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400087d	     0xf8f88000000	                            jg 0x400090b	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000883	          0x83f82f	                           cmp eax, 0x2f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000886	     0xf84b6030000	                            je 0x4000c42	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400088c	          0x83f82f	                           cmp eax, 0x2f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400088f	            0x7f3c	                            jg 0x40008cd	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000891	          0x83f82a	                           cmp eax, 0x2a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000894	     0xf842b010000	                            je 0x40009c5	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400089a	          0x83f82a	                           cmp eax, 0x2a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400089d	            0x7f17	                            jg 0x40008b6	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400089f	          0x83f825	                           cmp eax, 0x25	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008a2	     0xf843e030000	                            je 0x4000be6	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008a8	          0x83f826	                           cmp eax, 0x26	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008ab	     0xf8497010000	                            je 0x4000a48	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008b1	      0xe932060000	                           jmp 0x4000ee8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008b6	          0x83f82b	                           cmp eax, 0x2b	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008b9	     0xf84ee000000	                            je 0x40009ad	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008bf	          0x83f82d	                           cmp eax, 0x2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008c2	     0xf841d010000	                            je 0x40009e5	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008c8	      0xe91b060000	                           jmp 0x4000ee8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008cd	          0x83f85e	                           cmp eax, 0x5e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008d0	     0xf848a010000	                            je 0x4000a60	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008d6	          0x83f85e	                           cmp eax, 0x5e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008d9	            0x7f17	                            jg 0x40008f2	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008db	          0x83f83c	                           cmp eax, 0x3c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008de	     0xf84fc010000	                            je 0x4000ae0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008e4	          0x83f83e	                           cmp eax, 0x3e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008e7	     0xf841b020000	                            je 0x4000b08	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008ed	      0xe9f6050000	                           jmp 0x4000ee8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008f2	          0x83f87c	                           cmp eax, 0x7c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008f5	     0xf847d010000	                            je 0x4000a78	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008fb	      0x3d0d010000	                          cmp eax, 0x10d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000900	     0xf84ad020000	                            je 0x4000bb3	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000906	      0xe9dd050000	                           jmp 0x4000ee8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400090b	      0x3d14010000	                          cmp eax, 0x114	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000910	     0xf8410010000	                            je 0x4000a26	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000916	      0x3d14010000	                          cmp eax, 0x114	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400091b	            0x7f48	                            jg 0x4000965	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400091d	      0x3d11010000	                          cmp eax, 0x111	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000922	     0xf8408020000	                            je 0x4000b30	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000928	      0x3d11010000	                          cmp eax, 0x111	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400092d	            0x7f1b	                            jg 0x400094a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400092f	      0x3d0f010000	                          cmp eax, 0x10f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000934	     0xf8456010000	                            je 0x4000a90	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400093a	      0x3d10010000	                          cmp eax, 0x110	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400093f	     0xf8473010000	                            je 0x4000ab8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000945	      0xe99e050000	                           jmp 0x4000ee8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400094a	      0x3d12010000	                          cmp eax, 0x112	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400094f	     0xf8403020000	                            je 0x4000b58	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000955	      0x3d13010000	                          cmp eax, 0x113	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400095a	     0xf84a4000000	                            je 0x4000a04	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000960	      0xe983050000	                           jmp 0x4000ee8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000965	      0x3d25010000	                          cmp eax, 0x125	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400096a	     0xf849c040000	                            je 0x4000e0c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000970	      0x3d25010000	                          cmp eax, 0x125	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000975	            0x7f1b	                            jg 0x4000992	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000977	      0x3d17010000	                          cmp eax, 0x117	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400097c	     0xf8456030000	                            je 0x4000cd8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000982	      0x3d24010000	                          cmp eax, 0x124	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000987	     0xf8479030000	                            je 0x4000d06	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400098d	      0xe956050000	                           jmp 0x4000ee8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000992	      0x3d45010000	                          cmp eax, 0x145	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000997	     0xf8401030000	                            je 0x4000c9e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400099d	      0x3d46010000	                          cmp eax, 0x146	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009a2	     0xf8413030000	                            je 0x4000cbb	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009a8	      0xe93b050000	                           jmp 0x4000ee8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009ad	        0x488b0424	                    mov rax, qword [rsp]	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009b1	    0x480105000000	            add qword [0x040009b8], rax 	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009b8	          0x4889e7	                            mov rdi, rsp	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009bb	      0xe80ef7ffff	           call sym.arith_result_section	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009c0	      0xe9bc120000	                           jmp 0x4001c81	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009c5	        0x488b0424	                    mov rax, qword [rsp]	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009c9	    0x480faf050000	            imul rax, qword [0x040009d1]	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009d1	    0x488905000000	            mov qword [0x040009d8], rax 	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009d8	          0x4889e7	                            mov rdi, rsp	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009db	      0xe8eef6ffff	           call sym.arith_result_section	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009e0	      0xe99c120000	                           jmp 0x4001c81	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009e5	        0x488b0424	                    mov rax, qword [rsp]	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009e9	    0x482b05000000	             sub rax, qword [0x040009f0]	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009f0	    0x488905000000	            mov qword [0x040009f7], rax 	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009f7	          0x4889e7	                            mov rdi, rsp	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009fa	      0xe8cff6ffff	           call sym.arith_result_section	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009ff	      0xe97d120000	                           jmp 0x4001c81	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a04	    0x488b0d000000	            mov rcx, qword [0x04000a0b] 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a0b	        0x488b0424	                    mov rax, qword [rsp]	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a0f	          0x48d3e0	                             shl rax, cl	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a12	    0x488905000000	            mov qword [0x04000a19], rax 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a19	          0x4889e7	                            mov rdi, rsp	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a1c	      0xe8adf6ffff	           call sym.arith_result_section	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a21	      0xe95b120000	                           jmp 0x4001c81	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a26	    0x488b0d000000	            mov rcx, qword [0x04000a2d] 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a2d	        0x488b0424	                    mov rax, qword [rsp]	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a31	          0x48d3e8	                             shr rax, cl	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a34	    0x488905000000	            mov qword [0x04000a3b], rax 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a3b	          0x4889e7	                            mov rdi, rsp	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a3e	      0xe88bf6ffff	           call sym.arith_result_section	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a43	      0xe939120000	                           jmp 0x4001c81	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a48	        0x488b0424	                    mov rax, qword [rsp]	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a4c	    0x482105000000	             and qword [0x04000a53], rax	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a53	          0x4889e7	                            mov rdi, rsp	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a56	      0xe873f6ffff	           call sym.arith_result_section	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a5b	      0xe921120000	                           jmp 0x4001c81	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a60	        0x488b0424	                    mov rax, qword [rsp]	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a64	    0x483105000000	             xor qword [0x04000a6b], rax	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a6b	          0x4889e7	                            mov rdi, rsp	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a6e	      0xe85bf6ffff	           call sym.arith_result_section	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a73	      0xe909120000	                           jmp 0x4001c81	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a78	        0x488b0424	                    mov rax, qword [rsp]	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a7c	    0x480905000000	              or qword [0x04000a83], rax	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a83	          0x4889e7	                            mov rdi, rsp	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a86	      0xe843f6ffff	           call sym.arith_result_section	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a8b	      0xe9f1110000	                           jmp 0x4001c81	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a90	    0x488b05000000	            mov rax, qword [0x04000a97] 	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a97	        0x48390424	                    cmp qword [rsp], rax	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a9b	           0xf94c0	                                 sete al	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a9e	           0xfb6c0	                           movzx eax, al	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000aa1	    0x488905000000	            mov qword [0x04000aa8], rax 	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000aa8	    0x48c705000000	               mov qword [0x04000ab3], 0	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ab3	      0xe9c9110000	                           jmp 0x4001c81	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ab8	    0x488b05000000	            mov rax, qword [0x04000abf] 	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000abf	        0x48390424	                    cmp qword [rsp], rax	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ac3	           0xf95c0	                                setne al	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ac6	           0xfb6c0	                           movzx eax, al	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ac9	    0x488905000000	            mov qword [0x04000ad0], rax 	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ad0	    0x48c705000000	               mov qword [0x04000adb], 0	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000adb	      0xe9a1110000	                           jmp 0x4001c81	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ae0	    0x488b05000000	            mov rax, qword [0x04000ae7] 	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ae7	        0x48390424	                    cmp qword [rsp], rax	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000aeb	           0xf92c0	                                 setb al	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000aee	           0xfb6c0	                           movzx eax, al	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000af1	    0x488905000000	            mov qword [0x04000af8], rax 	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000af8	    0x48c705000000	               mov qword [0x04000b03], 0	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b03	      0xe979110000	                           jmp 0x4001c81	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b08	    0x488b05000000	            mov rax, qword [0x04000b0f] 	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b0f	        0x48390424	                    cmp qword [rsp], rax	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b13	           0xf97c0	                                 seta al	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b16	           0xfb6c0	                           movzx eax, al	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b19	    0x488905000000	            mov qword [0x04000b20], rax 	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b20	    0x48c705000000	               mov qword [0x04000b2b], 0	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b2b	      0xe951110000	                           jmp 0x4001c81	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b30	    0x488b05000000	            mov rax, qword [0x04000b37] 	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b37	        0x48390424	                    cmp qword [rsp], rax	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b3b	           0xf96c0	                                setbe al	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b3e	           0xfb6c0	                           movzx eax, al	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b41	    0x488905000000	            mov qword [0x04000b48], rax 	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b48	    0x48c705000000	               mov qword [0x04000b53], 0	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b53	      0xe929110000	                           jmp 0x4001c81	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b58	    0x488b05000000	            mov rax, qword [0x04000b5f] 	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b5f	        0x48390424	                    cmp qword [rsp], rax	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b63	           0xf93c0	                                setae al	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b66	           0xfb6c0	                           movzx eax, al	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b69	    0x488905000000	            mov qword [0x04000b70], rax 	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b70	    0x48c705000000	               mov qword [0x04000b7b], 0	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b7b	      0xe901110000	                           jmp 0x4001c81	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b80	      0xb800000000	                              mov eax, 0	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b85	      0x48833c2400	                      cmp qword [rsp], 0	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b8a	            0x740e	                            je 0x4000b9a	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b8c	    0x48833d000000	               cmp qword [0x04000b94], 0	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b94	           0xf95c0	                                setne al	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b97	           0xfb6c0	                           movzx eax, al	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b9a	            0x4898	                                    cdqe	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b9c	    0x488905000000	            mov qword [0x04000ba3], rax 	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ba3	    0x48c705000000	               mov qword [0x04000bae], 0	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bae	      0xe9ce100000	                           jmp 0x4001c81	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bb3	      0xb801000000	                              mov eax, 1	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bb8	      0x48833c2400	                      cmp qword [rsp], 0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bbd	            0x750e	                           jne 0x4000bcd	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bbf	    0x48833d000000	               cmp qword [0x04000bc7], 0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bc7	           0xf95c0	                                setne al	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bca	           0xfb6c0	                           movzx eax, al	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bcd	            0x4898	                                    cdqe	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bcf	    0x488905000000	            mov qword [0x04000bd6], rax 	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000bd6	    0x48c705000000	               mov qword [0x04000be1], 0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000be1	      0xe99b100000	                           jmp 0x4001c81	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000be6	    0x488b0d000000	            mov rcx, qword [0x04000bed] 	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000bed	          0x4885c9	                           test rcx, rcx	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000bf0	            0x7412	                            je 0x4000c04	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000bf2	        0x488b0424	                    mov rax, qword [rsp]	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000bf6	            0x4899	                                     cqo	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000bf8	          0x48f7f9	                                idiv rcx	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000bfb	    0x488915000000	            mov qword [0x04000c02], rdx 	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000c02	            0xeb31	                           jmp 0x4000c35	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000c04	    0x833d00000000	               cmp dword [0x04000c0b], 1	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c0b	            0x7428	                            je 0x4000c35	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c0d	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c11	      0xba05000000	                              mov edx, 5	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c16	      0xbe00000000	                              mov esi, 0	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c1b	      0xbf00000000	                              mov edi, 0	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c20	      0xe800000000	                          call 0x4000c25	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c25	          0x4889de	                            mov rsi, rbx	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c28	          0x4889c7	                            mov rdi, rax	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c2b	      0xb800000000	                              mov eax, 0	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c30	      0xe800000000	                          call 0x4000c35	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4000c35	          0x4889e7	                            mov rdi, rsp	       628	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	CALL_10
0x4000c38	      0xe891f4ffff	           call sym.arith_result_section	       628	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	CALL_10
0x4000c3d	      0xe93f100000	                           jmp 0x4001c81	       628	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	CALL_10
0x4000c42	    0x488b0d000000	            mov rcx, qword [0x04000c49] 	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000c49	          0x4885c9	                           test rcx, rcx	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000c4c	            0x7412	                            je 0x4000c60	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000c4e	        0x488b0424	                    mov rax, qword [rsp]	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000c52	            0x4899	                                     cqo	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000c54	          0x48f7f9	                                idiv rcx	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000c57	    0x488905000000	            mov qword [0x04000c5e], rax 	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000c5e	            0xeb31	                           jmp 0x4000c91	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000c60	    0x833d00000000	               cmp dword [0x04000c67], 1	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x4000c67	            0x7428	                            je 0x4000c91	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x4000c69	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c6d	      0xba05000000	                              mov edx, 5	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c72	      0xbe00000000	                              mov esi, 0	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c77	      0xbf00000000	                              mov edi, 0	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c7c	      0xe800000000	                          call 0x4000c81	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c81	          0x4889de	                            mov rsi, rbx	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c84	          0x4889c7	                            mov rdi, rax	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c87	      0xb800000000	                              mov eax, 0	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c8c	      0xe800000000	                          call 0x4000c91	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4000c91	          0x4889e7	                            mov rdi, rsp	       637	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_13
0x4000c94	      0xe835f4ffff	           call sym.arith_result_section	       637	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_13
0x4000c99	      0xe9e30f0000	                           jmp 0x4001c81	       637	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_13
0x4000c9e	        0x488b0424	                    mov rax, qword [rsp]	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000ca2	    0x483b05000000	            cmp rax, qword [0x04000ca9] 	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000ca9	     0xf86d20f0000	                           jbe 0x4001c81	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000caf	    0x488905000000	            mov qword [0x04000cb6], rax 	       642	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000cb6	      0xe9c60f0000	                           jmp 0x4001c81	       642	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000cbb	        0x488b0424	                    mov rax, qword [rsp]	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x4000cbf	    0x483b05000000	            cmp rax, qword [0x04000cc6] 	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x4000cc6	     0xf83b50f0000	                           jae 0x4001c81	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x4000ccc	    0x488905000000	            mov qword [0x04000cd3], rax 	       647	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x4000cd3	      0xe9a90f0000	                           jmp 0x4001c81	       647	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x4000cd8	    0x488b0d000000	            mov rcx, qword [0x04000cdf] 	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x4000cdf	        0x488b0424	                    mov rax, qword [rsp]	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x4000ce3	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000ce7	            0x7611	                           jbe 0x4000cfa	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000ce9	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x4000cee	      0xba00000000	                              mov edx, 0	      1619	ldexp.c	FUNCTION_46
0x4000cf3	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4000cf6	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4000cfa	    0x488905000000	            mov qword [0x04000d01], rax 	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x4000d01	      0xe97b0f0000	                           jmp 0x4001c81	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x4000d06	    0xc70500000000	               mov dword [0x04000d10], 1	       450	ldexp.c	ELSE_1	FUNCTION_17
0x4000d10	    0x833d00000000	               cmp dword [0x04000d17], 0	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000d17	            0x740d	                            je 0x4000d26	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000d19	    0x48813d000000	               cmp qword [0x04000d24], 0	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000d24	            0x740f	                            je 0x4000d35	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000d26	    0xc70500000000	               mov dword [0x04000d30], 0	       453	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000d30	      0xe94c0f0000	                           jmp 0x4001c81	       453	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000d35	        0x488b0c24	                    mov rcx, qword [rsp]	       456	ldexp.c	FUNCTION_17
0x4000d39	    0x488b3d000000	            mov rdi, qword [0x04000d40] 	       457	ldexp.c	FUNCTION_17
0x4000d40	    0x488b35000000	            mov rsi, qword [0x04000d47] 	       459	ldexp.c	FUNCTION_17	CALL_1
0x4000d47	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000d4b	            0x7613	                           jbe 0x4000d60	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000d4d	      0x488d4431ff	                lea rax, [rcx + rsi - 1]	      1619	ldexp.c	FUNCTION_46
0x4000d52	      0xba00000000	                              mov edx, 0	      1619	ldexp.c	FUNCTION_46
0x4000d57	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4000d5a	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4000d5e	            0xeb03	                           jmp 0x4000d63	      1619	ldexp.c	FUNCTION_46
0x4000d60	          0x4889f0	                            mov rax, rsi	      1616	ldexp.c	FUNCTION_46	IF_1
0x4000d63	    0x488905000000	            mov qword [0x04000d6a], rax 	       459	ldexp.c	FUNCTION_17	CALL_1
0x4000d6a	    0x8b1500000000	            mov edx, dword [0x04000d70] 	       460	ldexp.c	FUNCTION_17	IF_2
0x4000d70	          0x83fa04	                              cmp edx, 4	       460	ldexp.c	FUNCTION_17	IF_2
0x4000d73	            0x7513	                           jne 0x4000d88	       460	ldexp.c	FUNCTION_17	IF_2
0x4000d75	    0x488b05000000	            mov rax, qword [0x04000d7c] 	       461	ldexp.c	FUNCTION_17	IF_2
0x4000d7c	    0x488905000000	            mov qword [0x04000d83], rax 	       461	ldexp.c	FUNCTION_17	IF_2
0x4000d83	      0xe9f90e0000	                           jmp 0x4001c81	       461	ldexp.c	FUNCTION_17	IF_2
0x4000d88	          0x83fa05	                              cmp edx, 5	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x4000d8b	            0x7523	                           jne 0x4000db0	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x4000d8d	          0x4839f9	                            cmp rcx, rdi	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000d90	     0xf86eb0e0000	                           jbe 0x4001c81	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000d96	      0x488d5437ff	                lea rdx, [rdi + rsi - 1]	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000d9b	          0x4829f9	                            sub rcx, rdi	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000d9e	          0x4821ca	                            and rdx, rcx	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000da1	          0x4801d0	                            add rax, rdx	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000da4	    0x488905000000	            mov qword [0x04000dab], rax 	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000dab	      0xe9d10e0000	                           jmp 0x4001c81	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4000db0	        0x4c8d41ff	                       lea r8, [rcx - 1]	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000db4	          0x4c21c6	                             and rsi, r8	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000db7	          0x4801f0	                            add rax, rsi	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000dba	    0x488905000000	            mov qword [0x04000dc1], rax 	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000dc1	          0x83fa06	                              cmp edx, 6	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x4000dc4	     0xf84b70e0000	                            je 0x4001c81	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x4000dca	            0x85d2	                           test edx, edx	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000dcc	            0x752f	                           jne 0x4000dfd	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000dce	    0xc70500000000	               mov dword [0x04000dd8], 1	       477	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000dd8	    0x488905000000	            mov qword [0x04000ddf], rax 	       478	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000ddf	    0x48893d000000	            mov qword [0x04000de6], rdi 	       479	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000de6	    0x48890d000000	            mov qword [0x04000ded], rcx 	       480	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000ded	    0x48c705000000	               mov qword [0x04000df8], 0	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000df8	      0xe9840e0000	                           jmp 0x4001c81	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000dfd	    0xc70500000000	               mov dword [0x04000e07], 0	       484	ldexp.c	FUNCTION_17	ELSE_3	ELSE_5
0x4000e07	      0xe9750e0000	                           jmp 0x4001c81	       484	ldexp.c	FUNCTION_17	ELSE_3	ELSE_5
0x4000e0c	    0xc70500000000	               mov dword [0x04000e16], 2	       494	ldexp.c	ELSE_5	FUNCTION_18
0x4000e16	    0x488b15000000	            mov rdx, qword [0x04000e1d] 	       495	ldexp.c	ELSE_5	FUNCTION_18
0x4000e1d	    0x488915000000	            mov qword [0x04000e24], rdx 	       495	ldexp.c	ELSE_5	FUNCTION_18
0x4000e24	    0x833d00000000	               cmp dword [0x04000e2b], 0	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000e2b	            0x740d	                            je 0x4000e3a	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000e2d	    0x48813d000000	               cmp qword [0x04000e38], 0	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000e38	            0x740f	                            je 0x4000e49	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000e3a	    0xc70500000000	               mov dword [0x04000e44], 0	       498	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000e44	      0xe9380e0000	                           jmp 0x4001c81	       498	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000e49	    0x8b0500000000	            mov eax, dword [0x04000e4f] 	       499	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000e4f	          0x83f801	                              cmp eax, 1	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000e52	           0xf94c1	                                 sete cl	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000e55	          0x8d70fc	                      lea esi, [rax - 4]	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000e58	          0x83fe02	                              cmp esi, 2	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000e5b	            0x7604	                           jbe 0x4000e61	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000e5d	            0x84c9	                             test cl, cl	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000e5f	            0x7478	                            je 0x4000ed9	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000e61	          0x83f804	                              cmp eax, 4	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e64	            0x7404	                            je 0x4000e6a	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e66	            0x84c9	                             test cl, cl	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e68	            0x740e	                            je 0x4000e78	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e6a	          0x4889d1	                            mov rcx, rdx	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e6d	        0x48030c24	                    add rcx, qword [rsp]	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e71	    0x48890d000000	            mov qword [0x04000e78], rcx 	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e78	          0x83f804	                              cmp eax, 4	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e7b	            0x7535	                           jne 0x4000eb2	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e7d	    0x488b0d000000	            mov rcx, qword [0x04000e84] 	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e84	    0x488b05000000	            mov rax, qword [0x04000e8b] 	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e8b	        0x488d70ff	                      lea rsi, [rax - 1]	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e8f	          0x4885ce	                           test rsi, rcx	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e92	            0x741e	                            je 0x4000eb2	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e94	      0x488d4c01ff	                lea rcx, [rcx + rax - 1]	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e99	          0x48f7d8	                                 neg rax	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e9c	          0x4821c8	                            and rax, rcx	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e9f	    0x488905000000	            mov qword [0x04000ea6], rax 	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000ea6	          0x4829d0	                            sub rax, rdx	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000ea9	    0x488905000000	            mov qword [0x04000eb0], rax 	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000eb0	            0xeb0b	                           jmp 0x4000ebd	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000eb2	        0x488b0424	                    mov rax, qword [rsp]	       516	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	ELSE_2
0x4000eb6	    0x488905000000	            mov qword [0x04000ebd], rax 	       516	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	ELSE_2
0x4000ebd	    0x833d00000000	               cmp dword [0x04000ec4], 1	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000ec4	     0xf85b70d0000	                           jne 0x4001c81	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000eca	    0xc70500000000	               mov dword [0x04000ed4], 2	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000ed4	      0xe9a80d0000	                           jmp 0x4001c81	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4000ed9	    0xc70500000000	               mov dword [0x04000ee3], 0	       522	ldexp.c	ELSE_5	FUNCTION_18	ELSE_3
0x4000ee3	      0xe9990d0000	                           jmp 0x4001c81	       522	ldexp.c	ELSE_5	FUNCTION_18	ELSE_3
0x4000ee8	      0xbe97020000	                          mov esi, 0x297	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4000eed	      0xbf00000000	                              mov edi, 0	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4000ef2	      0xe800000000	                          call 0x4000ef7	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4000ef7	      0xe9850d0000	                           jmp 0x4001c81	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4000efc	    0x488b2d000000	            mov rbp, qword [0x04000f03] 	       671	ldexp.c	FUNCTION_20
0x4000f03	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       673	ldexp.c	FUNCTION_20	CALL_1
0x4000f07	      0xe877f4ffff	                call sym.exp_fold_tree_1	       673	ldexp.c	FUNCTION_20	CALL_1
0x4000f0c	    0x48892d000000	            mov qword [0x04000f13], rbp 	       674	ldexp.c	FUNCTION_20
0x4000f13	    0x833d00000000	               cmp dword [0x04000f1a], 0	       675	ldexp.c	FUNCTION_20	IF_1
0x4000f1a	     0xf84610d0000	                            je 0x4001c81	       675	ldexp.c	FUNCTION_20	IF_1
0x4000f20	    0x48833d000000	               cmp qword [0x04000f28], 0	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000f28	            0x7406	                            je 0x4000f30	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000f2a	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000f2e	            0xeb04	                           jmp 0x4000f34	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000f30	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000f34	      0xe84af4ffff	                call sym.exp_fold_tree_1	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000f39	      0xe9430d0000	                           jmp 0x4001c81	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000f3e	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000f42	          0x803e2e	                    cmp byte [rsi], 0x2e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000f45	     0xf85af020000	                           jne 0x40011fa	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000f4b	        0x807e0100	                   cmp byte [rsi + 1], 0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000f4f	     0xf85a5020000	                           jne 0x40011fa	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000f55	          0x83f804	                              cmp eax, 4	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4000f58	            0x7424	                            je 0x4000f7e	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4000f5a	      0xba05000000	                              mov edx, 5	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000f5f	      0xbe00000000	                              mov esi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000f64	      0xbf00000000	                              mov edi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000f69	      0xe800000000	                          call 0x4000f6e	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000f6e	          0x4889de	                            mov rsi, rbx	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000f71	          0x4889c7	                            mov rdi, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000f74	      0xb800000000	                              mov eax, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000f79	      0xe800000000	                          call 0x4000f7e	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000f7e	    0x833d00000000	               cmp dword [0x04000f85], 0	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000f85	     0xf843e020000	                            je 0x40011c9	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000f8b	    0xc70500000000	               mov dword [0x04000f95], 1	      1057	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000f95	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4000f99	      0xe8e5f3ffff	                call sym.exp_fold_tree_1	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4000f9e	    0xc70500000000	               mov dword [0x04000fa8], 0	      1059	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000fa8	    0x833d00000000	               cmp dword [0x04000faf], 1	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000faf	     0xf856a0c0000	                           jne 0x4001c1f	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fb5	    0x488b05000000	            mov rax, qword [0x04000fbc] 	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fbc	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fc2	     0xf844c0c0000	                            je 0x4001c14	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fc8	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fce	     0xf84400c0000	                            je 0x4001c14	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fd4	    0x833d00000000	               cmp dword [0x04000fdb], 0	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fdb	     0xf84d3000000	                            je 0x40010b4	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fe1	    0x48833d000000	               cmp qword [0x04000fe9], 0	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fe9	     0xf85c5000000	                           jne 0x40010b4	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000fef	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x4000ff3	        0x837f1007	               cmp dword [rdi + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4000ff7	     0xf85e60b0000	                           jne 0x4001be3	       931	ldexp.c	FUNCTION_23
0x4000ffd	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4001002	     0xf85db0b0000	                           jne 0x4001be3	       931	ldexp.c	FUNCTION_23
0x4001008	      0xe9be000000	                           jmp 0x40010cb	       931	ldexp.c	FUNCTION_23
0x400100d	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x4001011	        0x837d1000	               cmp dword [rbp + 0x10], 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001015	            0x7536	                           jne 0x400104d	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001017	        0x837d002b	                   cmp dword [rbp], 0x2b	       975	ldexp.c	FUNCTION_26
0x400101b	     0xf8593000000	                           jne 0x40010b4	       975	ldexp.c	FUNCTION_26
0x4001021	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001025	      0xe8e0f0ffff	                         call sym.is_dot	       976	ldexp.c	FUNCTION_26	CALL_1
0x400102a	            0x85c0	                           test eax, eax	       976	ldexp.c	FUNCTION_26	CALL_1
0x400102c	     0xf8482000000	                            je 0x40010b4	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001032	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001036	        0x837f1007	               cmp dword [rdi + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x400103a	     0xf85bd0b0000	                           jne 0x4001bfd	       931	ldexp.c	FUNCTION_23
0x4001040	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4001045	     0xf85b20b0000	                           jne 0x4001bfd	       931	ldexp.c	FUNCTION_23
0x400104b	            0xeb75	                           jmp 0x40010c2	       931	ldexp.c	FUNCTION_23
0x400104d	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x4001051	        0x83781002	               cmp dword [rax + 0x10], 2	       986	ldexp.c	FUNCTION_27	IF_1
0x4001055	            0x755d	                           jne 0x40010b4	       986	ldexp.c	FUNCTION_27	IF_1
0x4001057	    0x813817010000	                  cmp dword [rax], 0x117	       987	ldexp.c	FUNCTION_27	IF_1
0x400105d	            0x7555	                           jne 0x40010b4	       987	ldexp.c	FUNCTION_27	IF_1
0x400105f	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	       989	ldexp.c	FUNCTION_27	IF_1
0x4001063	    0x41837c241001	               cmp dword [r12 + 0x10], 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001069	            0x7549	                           jne 0x40010b4	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x400106b	      0x498b6c2418	            mov rbp, qword [r12 + 0x18] 	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001070	        0x837d1000	               cmp dword [rbp + 0x10], 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001074	            0x753e	                           jne 0x40010b4	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001076	    0x817d00100100	                  cmp dword [rbp], 0x110	       963	ldexp.c	FUNCTION_25
0x400107d	            0x7535	                           jne 0x40010b4	       963	ldexp.c	FUNCTION_25
0x400107f	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001083	      0xe882f0ffff	                         call sym.is_dot	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001088	            0x85c0	                           test eax, eax	       964	ldexp.c	FUNCTION_25	CALL_1
0x400108a	            0x7428	                            je 0x40010b4	       964	ldexp.c	FUNCTION_25	CALL_1
0x400108c	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001090	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4001094	            0x751e	                           jne 0x40010b4	       931	ldexp.c	FUNCTION_23
0x4001096	      0x4883781800	               cmp qword [rax + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x400109b	            0x7517	                           jne 0x40010b4	       931	ldexp.c	FUNCTION_23
0x400109d	      0xe99e0b0000	                           jmp 0x4001c40	       931	ldexp.c	FUNCTION_23
0x40010a2	      0x4883781801	               cmp qword [rax + 0x18], 1	       931	ldexp.c	FUNCTION_23
0x40010a7	        0x410f94c5	                               sete r13b	       931	ldexp.c	FUNCTION_23
0x40010ab	        0x450fb6ed	                        movzx r13d, r13b	       931	ldexp.c	FUNCTION_23
0x40010af	          0x4585ed	                         test r13d, r13d	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x40010b2	            0x750e	                           jne 0x40010c2	      1078	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_17
0x40010b4	    0x488b05000000	            mov rax, qword [0x040010bb] 	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40010bb	    0x814820000020	         or dword [rax + 0x20], 0x200000	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40010c2	    0x833d00000000	               cmp dword [0x040010c9], 0	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40010c9	            0x740f	                            je 0x40010da	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40010cb	    0x488b05000000	            mov rax, qword [0x040010d2] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40010d2	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40010d8	            0x7536	                           jne 0x4001110	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40010da	    0x833d00000000	               cmp dword [0x040010e1], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40010e1	     0xf849a0b0000	                            je 0x4001c81	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40010e7	      0xba05000000	                              mov edx, 5	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40010ec	      0xbe00000000	                              mov esi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40010f1	      0xbf00000000	                              mov edi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40010f6	      0xe800000000	                          call 0x40010fb	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40010fb	          0x4889de	                            mov rsi, rbx	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40010fe	          0x4889c7	                            mov rdi, rax	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4001101	      0xb800000000	                              mov eax, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4001106	      0xe800000000	                          call 0x400110b	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x400110b	      0xe9710b0000	                           jmp 0x4001c81	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4001110	    0x488b15000000	            mov rdx, qword [0x04001117] 	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4001117	          0x4885d2	                           test rdx, rdx	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x400111a	            0x7529	                           jne 0x4001145	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x400111c	      0xba05000000	                              mov edx, 5	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001121	      0xbe00000000	                              mov esi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001126	      0xbf00000000	                              mov edi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400112b	      0xe800000000	                          call 0x4001130	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001130	          0x4889de	                            mov rsi, rbx	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001133	          0x4889c7	                            mov rdi, rax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001136	      0xb800000000	                              mov eax, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400113b	      0xe800000000	                          call 0x4001140	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001140	      0xe93c0b0000	                           jmp 0x4001c81	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001145	    0x833d00000000	               cmp dword [0x0400114c], 2	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x400114c	            0x760c	                           jbe 0x400115a	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x400114e	    0x483d00000000	                              cmp rax, 0	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4001154	     0xf85270b0000	                           jne 0x4001c81	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x400115a	    0x488b2d000000	            mov rbp, qword [0x04001161] 	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4001161	    0x488b0d000000	            mov rcx, qword [0x04001168] 	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4001168	          0x4885c9	                           test rcx, rcx	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x400116b	            0x7406	                            je 0x4001173	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x400116d	        0x48036928	             add rbp, qword [rcx + 0x28]	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4001171	            0xeb04	                           jmp 0x4001177	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4001173	        0x48036828	             add rbp, qword [rax + 0x28]	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x4001177	    0x4c8b25000000	            mov r12, qword [0x0400117e] 	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x400117e	          0x4c39e5	                            cmp rbp, r12	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4001181	            0x7337	                           jae 0x40011ba	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4001183	    0x483d00000000	                              cmp rax, 0	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4001189	            0x742f	                            je 0x40011ba	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x400118b	      0xba05000000	                              mov edx, 5	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4001190	      0xbe00000000	                              mov esi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4001195	      0xbf00000000	                              mov edi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400119a	      0xe800000000	                          call 0x400119f	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400119f	          0x4889e9	                            mov rcx, rbp	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40011a2	          0x4c89e2	                            mov rdx, r12	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40011a5	          0x4889de	                            mov rsi, rbx	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40011a8	          0x4889c7	                            mov rdi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40011ab	      0xb800000000	                              mov eax, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40011b0	      0xe800000000	                          call 0x40011b5	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40011b5	      0xe9c70a0000	                           jmp 0x4001c81	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40011ba	    0x48892d000000	            mov qword [0x040011c1], rbp 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40011c1	          0x48892a	                    mov qword [rdx], rbp	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40011c4	      0xe9b80a0000	                           jmp 0x4001c81	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40011c9	    0x48c705000000	               mov qword [0x040011d4], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40011d4	    0x48c705000000	               mov qword [0x040011df], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40011df	    0x48c705000000	               mov qword [0x040011ea], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40011ea	    0x48c705000000	               mov qword [0x040011f5], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40011f5	      0xe9870a0000	                           jmp 0x4001c81	        90	string3.h	FUNCTION_71	CALL_6
0x40011fa	      0xbd00000000	                              mov ebp, 0	      1123	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x40011ff	          0x83f805	                              cmp eax, 5	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4001202	            0x7538	                           jne 0x400123c	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4001204	    0x41b801000000	                              mov r8d, 1	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x400120a	      0xb900000000	                              mov ecx, 0	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x400120f	      0xba00000000	                              mov edx, 0	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4001214	    0x488b3d000000	            mov rdi, qword [0x0400121b] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x400121b	      0xe800000000	                          call 0x4001220	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4001220	          0x4889c5	                            mov rbp, rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4001223	          0x4885c0	                           test rax, rax	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4001226	     0xf84550a0000	                            je 0x4001c81	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400122c	        0x80781802	                cmp byte [rax + 0x18], 2	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4001230	            0x760a	                           jbe 0x400123c	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4001232	        0xf6401904	               test byte [rax + 0x19], 4	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4001236	     0xf84450a0000	                            je 0x4001c81	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400123c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4001240	    0x488905000000	            mov qword [0x04001247], rax 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4001247	    0x48c705000000	               mov qword [0x04001252], 0	      1145	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4001252	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4001256	      0xe828f1ffff	                call sym.exp_fold_tree_1	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x400125b	    0x833d00000000	               cmp dword [0x04001262], 4	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4001262	            0x740e	                            je 0x4001272	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4001264	    0x48833d000000	               cmp qword [0x0400126c], 0	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400126c	     0xf84ae010000	                            je 0x4001420	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4001272	        0x837b1005	               cmp dword [rbx + 0x10], 5	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4001276	            0x7507	                           jne 0x400127f	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4001278	    0xc74310060000	               mov dword [rbx + 0x10], 6	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x400127f	          0x4885ed	                           test rbp, rbp	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4001282	            0x7550	                           jne 0x40012d4	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4001284	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4001288	    0x41b801000000	                              mov r8d, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400128e	      0xb900000000	                              mov ecx, 0	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4001293	      0xba01000000	                              mov edx, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4001298	    0x488b3d000000	            mov rdi, qword [0x0400129f] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400129f	      0xe800000000	                          call 0x40012a4	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40012a4	          0x4889c5	                            mov rbp, rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40012a7	          0x4885c0	                           test rax, rax	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40012aa	            0x7528	                           jne 0x40012d4	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40012ac	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012b0	      0xba05000000	                              mov edx, 5	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012b5	      0xbe00000000	                              mov esi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012ba	      0xbf00000000	                              mov edi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012bf	      0xe800000000	                          call 0x40012c4	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012c4	          0x4c89e6	                            mov rsi, r12	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012c7	          0x4889c7	                            mov rdi, rax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012ca	      0xb800000000	                              mov eax, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012cf	      0xe800000000	                          call 0x40012d4	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40012d4	    0x833d00000000	               cmp dword [0x040012db], 0	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40012db	     0xf854c090000	                           jne 0x4001c2d	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40012e1	        0x807d1800	                cmp byte [rbp + 0x18], 0	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40012e5	     0xf8535010000	                           jne 0x4001420	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40012eb	    0x48c705000000	               mov qword [0x040012f6], 0	      1178	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40012f6	    0xc70500000000	               mov dword [0x04001300], 1	      1180	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4001300	    0x488b05000000	            mov rax, qword [0x04001307] 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4001307	    0x488905000000	            mov qword [0x0400130e], rax 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x400130e	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4001312	      0xb900000000	                              mov ecx, 0	       309	ldexp.c	FUNCTION_13
0x4001317	      0xba01000000	                              mov edx, 1	       309	ldexp.c	FUNCTION_13
0x400131c	          0x4c89ee	                            mov rsi, r13	       309	ldexp.c	FUNCTION_13
0x400131f	      0xbf00000000	                              mov edi, 0	       309	ldexp.c	FUNCTION_13
0x4001324	      0xe800000000	                          call 0x4001329	       309	ldexp.c	FUNCTION_13
0x4001329	          0x4989c4	                            mov r12, rax	       309	ldexp.c	FUNCTION_13
0x400132c	          0x4885c0	                           test rax, rax	       313	ldexp.c	FUNCTION_13	IF_1
0x400132f	            0x7524	                           jne 0x4001355	       313	ldexp.c	FUNCTION_13	IF_1
0x4001331	      0xba05000000	                              mov edx, 5	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001336	      0xbe00000000	                              mov esi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x400133b	      0xbf00000000	                              mov edi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001340	      0xe800000000	                          call 0x4001345	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001345	          0x4c89ee	                            mov rsi, r13	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001348	          0x4889c7	                            mov rdi, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x400134b	      0xb800000000	                              mov eax, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001350	      0xe800000000	                          call 0x4001355	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001355	        0xf6451908	               test byte [rbp + 0x19], 8	       319	ldexp.c	FUNCTION_13	IF_2
0x4001359	            0x7511	                           jne 0x400136c	       319	ldexp.c	FUNCTION_13	IF_2
0x400135b	         0xfb64518	           movzx eax, byte [rbp + 0x18] 	       320	ldexp.c	FUNCTION_13	IF_2
0x400135f	          0x83e803	                              sub eax, 3	       320	ldexp.c	FUNCTION_13	IF_2
0x4001362	            0x3c02	                               cmp al, 2	       320	ldexp.c	FUNCTION_13	IF_2
0x4001364	            0x7706	                            ja 0x400136c	       320	ldexp.c	FUNCTION_13	IF_2
0x4001366	    0x41804c242101	                 or byte [r12 + 0x21], 1	       324	ldexp.c	FUNCTION_13	IF_2
0x400136c	    0x8b0500000000	            mov eax, dword [0x04001372] 	       331	ldexp.c	FUNCTION_13
0x4001372	      0x4188442420	               mov byte [r12 + 0x20], al	       331	ldexp.c	FUNCTION_13
0x4001377	    0x49c744241800	               mov qword [r12 + 0x18], 0	       332	ldexp.c	FUNCTION_13
0x4001380	    0x833d00000000	               cmp dword [0x04001387], 4	       333	ldexp.c	FUNCTION_13	IF_4
0x4001387	            0x7520	                           jne 0x40013a9	       333	ldexp.c	FUNCTION_13	IF_4
0x4001389	    0x833d00000000	               cmp dword [0x04001390], 0	       334	ldexp.c	FUNCTION_13	IF_4
0x4001390	            0x7417	                            je 0x40013a9	       334	ldexp.c	FUNCTION_13	IF_4
0x4001392	    0x48813d000000	               cmp qword [0x0400139d], 0	       335	ldexp.c	FUNCTION_13	IF_4
0x400139d	            0x750a	                           jne 0x40013a9	       335	ldexp.c	FUNCTION_13	IF_4
0x400139f	      0xe800000000	                          call 0x40013a4	       336	ldexp.c	FUNCTION_13	CALL_4
0x40013a4	      0x4989442418	             mov qword [r12 + 0x18], rax	       336	ldexp.c	FUNCTION_13	CALL_4
0x40013a9	        0xc6451803	                mov byte [rbp + 0x18], 3	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013ad	    0x488b05000000	            mov rax, qword [0x040013b4] 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013b4	        0x48894530	            mov qword [rbp + 0x30], rax 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013b8	    0x488b05000000	            mov rax, qword [0x040013bf] 	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013bf	        0x48894528	            mov qword [rbp + 0x28], rax 	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013c3	        0x837b0400	                  cmp dword [rbx + 4], 0	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013c7	           0xf94c0	                                 sete al	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013ca	          0xc1e002	                              shl eax, 2	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013cd	         0xfb65519	           movzx edx, byte [rbp + 0x19] 	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013d1	          0x83e2fb	                     and edx, 0xfffffffb	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013d4	             0x9d0	                             or eax, edx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013d6	          0x83c808	                               or eax, 8	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013d9	          0x884519	               mov byte [rbp + 0x19], al	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40013dc	        0x837b2800	               cmp dword [rbx + 0x28], 0	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40013e0	            0x7419	                            je 0x40013fb	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40013e2	    0x488b3d000000	            mov rdi, qword [0x040013e9] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40013e9	        0x488b4708	                mov rax, qword [rdi + 8]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40013ed	          0x4889ea	                            mov rdx, rbp	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40013f0	      0xbe00000000	                              mov esi, 0	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40013f5	    0xff9028030000	                call qword [rax + 0x328]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40013fb	    0x488b15000000	            mov rdx, qword [0x04001402] 	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4001402	        0x488d42ff	                      lea rax, [rdx - 1]	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4001406	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x400140a	            0x7714	                            ja 0x4001420	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x400140c	    0x488b3d000000	            mov rdi, qword [0x04001413] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4001413	        0x488b4708	                mov rax, qword [rdi + 8]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4001417	          0x4889ee	                            mov rsi, rbp	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x400141a	    0xff90d0020000	                call qword [rax + 0x2d0]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4001420	    0x48c705000000	               mov qword [0x0400142b], 0	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x400142b	      0xe951080000	                           jmp 0x4001c81	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4001430	    0x48c705000000	               mov qword [0x0400143b], 0	        90	string3.h	FUNCTION_71	CALL_6
0x400143b	    0x48c705000000	               mov qword [0x04001446], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4001446	    0x48c705000000	               mov qword [0x04001451], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4001451	    0x48c705000000	               mov qword [0x0400145c], 0	        90	string3.h	FUNCTION_71	CALL_6
0x400145c	            0x8b07	                    mov eax, dword [rdi]	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400145e	      0x3d42010000	                          cmp eax, 0x142	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001463	            0x7f2d	                            jg 0x4001492	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001465	      0x3d41010000	                          cmp eax, 0x141	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400146a	     0xf8d20050000	                           jge 0x4001990	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001470	      0x3d2b010000	                          cmp eax, 0x12b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001475	            0x7463	                            je 0x40014da	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001477	      0x3d3b010000	                          cmp eax, 0x13b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400147c	     0xf8493000000	                            je 0x4001515	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001482	      0x3d03010000	                          cmp eax, 0x103	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001487	     0xf8502070000	                           jne 0x4001b8f	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400148d	      0xe920010000	                           jmp 0x40015b2	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001492	      0x3d4e010000	                          cmp eax, 0x14e	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4001497	     0xf8410060000	                            je 0x4001aad	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400149d	      0x3d4e010000	                          cmp eax, 0x14e	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014a2	            0x7f1b	                            jg 0x40014bf	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014a4	      0x3d43010000	                          cmp eax, 0x143	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014a9	     0xf847a030000	                            je 0x4001829	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014af	      0x3d44010000	                          cmp eax, 0x144	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014b4	     0xf840e040000	                            je 0x40018c8	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014ba	      0xe9d0060000	                           jmp 0x4001b8f	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014bf	      0x3d50010000	                          cmp eax, 0x150	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014c4	     0xf8485050000	                            je 0x4001a4f	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014ca	      0x3d82010000	                          cmp eax, 0x182	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014cf	     0xf8436060000	                            je 0x4001b0b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014d5	      0xe9b5060000	                           jmp 0x4001b8f	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40014da	    0x8b0500000000	            mov eax, dword [0x040014e0] 	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x40014e0	            0x85c0	                           test eax, eax	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x40014e2	     0xf8499070000	                            je 0x4001c81	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x40014e8	      0xbf00000000	                              mov edi, 0	       694	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x40014ed	          0x83f801	                              cmp eax, 1	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x40014f0	            0x7419	                            je 0x400150b	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x40014f2	    0x488b3d000000	            mov rdi, qword [0x040014f9] 	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40014f9	        0x488b4708	                mov rax, qword [rdi + 8]	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40014fd	      0xbe00000000	                              mov esi, 0	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4001502	    0xff90a0020000	                call qword [rax + 0x2a0]	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4001508	          0x4863f8	                         movsxd rdi, eax	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x400150b	      0xe85debffff	                     call sym.new_number	       699	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_3
0x4001510	      0xe96c070000	                           jmp 0x4001c81	       699	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_3
0x4001515	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4001519	    0x41b901000000	                              mov r9d, 1	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x400151f	    0x41b800000000	                              mov r8d, 0	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4001525	      0xb900000000	                              mov ecx, 0	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x400152a	      0xbe00000000	                              mov esi, 0	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x400152f	    0x488b3d000000	            mov rdi, qword [0x04001536] 	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4001536	      0xe800000000	                          call 0x400153b	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x400153b	          0x4885c0	                           test rax, rax	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400153e	            0x7459	                            je 0x4001599	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001540	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4001544	          0x83e903	                              sub ecx, 3	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4001547	      0xba00000000	                              mov edx, 0	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400154c	          0x80f902	                               cmp cl, 2	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x400154f	            0x7754	                            ja 0x40015a5	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4001551	      0xba01000000	                              mov edx, 1	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001556	        0xf6401908	               test byte [rax + 0x19], 8	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400155a	            0x7449	                            je 0x40015a5	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400155c	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       298	ldexp.c	FUNCTION_12
0x4001560	      0xb900000000	                              mov ecx, 0	       298	ldexp.c	FUNCTION_12
0x4001565	      0xba00000000	                              mov edx, 0	       298	ldexp.c	FUNCTION_12
0x400156a	      0xbf00000000	                              mov edi, 0	       298	ldexp.c	FUNCTION_12
0x400156f	      0xe800000000	                          call 0x4001574	       298	ldexp.c	FUNCTION_12
0x4001574	          0x4885c0	                           test rax, rax	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001577	            0x7427	                            je 0x40015a0	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001579	      0xba01000000	                              mov edx, 1	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400157e	        0xf6402101	               test byte [rax + 0x21], 1	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001582	            0x7521	                           jne 0x40015a5	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001584	     0xfb615000000	           movzx edx, byte [0x0400158b] 	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400158b	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400158f	            0x39c2	                            cmp edx, eax	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001591	           0xf94c2	                                 sete dl	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001594	           0xfb6d2	                           movzx edx, dl	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001597	            0xeb0c	                           jmp 0x40015a5	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4001599	      0xba00000000	                              mov edx, 0	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400159e	            0xeb05	                           jmp 0x40015a5	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x40015a0	      0xba01000000	                              mov edx, 1	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x40015a5	          0x4863fa	                         movsxd rdi, edx	       708	ldexp.c	FUNCTION_21	SWITCH_1	CALL_5
0x40015a8	      0xe8c0eaffff	                     call sym.new_number	       708	ldexp.c	FUNCTION_21	SWITCH_1	CALL_5
0x40015ad	      0xe9cf060000	                           jmp 0x4001c81	       708	ldexp.c	FUNCTION_21	SWITCH_1	CALL_5
0x40015b2	    0x488b3d000000	            mov rdi, qword [0x040015b9] 	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x40015b9	          0x4885ff	                           test rdi, rdi	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x40015bc	     0xf8487000000	                            je 0x4001649	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x40015c2	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40015c6	          0x4889ee	                            mov rsi, rbp	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40015c9	      0xe800000000	                          call 0x40015ce	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40015ce	            0x85c0	                           test eax, eax	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40015d0	            0x7577	                           jne 0x4001649	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x40015d2	    0x41b901000000	                              mov r9d, 1	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40015d8	    0x41b800000000	                              mov r8d, 0	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40015de	      0xb900000000	                              mov ecx, 0	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40015e3	          0x4889ea	                            mov rdx, rbp	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40015e6	      0xbe00000000	                              mov esi, 0	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40015eb	    0x488b3d000000	            mov rdi, qword [0x040015f2] 	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40015f2	      0xe800000000	                          call 0x40015f7	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40015f7	          0x4885c0	                           test rax, rax	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40015fa	            0x7442	                            je 0x400163e	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40015fc	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001600	          0x8d51fd	                      lea edx, [rcx - 3]	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001603	          0x80fa01	                               cmp dl, 1	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001606	            0x7736	                            ja 0x400163e	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001608	    0x488178280000	               cmp qword [rax + 0x28], 0	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001610	            0x752c	                           jne 0x400163e	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001612	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       298	ldexp.c	FUNCTION_12
0x4001616	      0xb900000000	                              mov ecx, 0	       298	ldexp.c	FUNCTION_12
0x400161b	      0xba00000000	                              mov edx, 0	       298	ldexp.c	FUNCTION_12
0x4001620	      0xbf00000000	                              mov edi, 0	       298	ldexp.c	FUNCTION_12
0x4001625	      0xe800000000	                          call 0x400162a	       298	ldexp.c	FUNCTION_12
0x400162a	          0x4885c0	                           test rax, rax	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x400162d	            0x740f	                            je 0x400163e	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x400162f	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001633	     0xfb605000000	           movzx eax, byte [0x0400163a] 	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400163a	            0x39c2	                            cmp edx, eax	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400163c	            0x740b	                            je 0x4001649	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400163e	    0x48c705000000	               mov qword [0x04001649], 0	       734	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001649	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x400164d	          0x803a2e	                    cmp byte [rdx], 0x2e	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001650	            0x7517	                           jne 0x4001669	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001652	        0x807a0100	                   cmp byte [rdx + 1], 0	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001656	            0x7511	                           jne 0x4001669	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4001658	    0x488b3d000000	            mov rdi, qword [0x0400165f] 	       737	ldexp.c	FUNCTION_21	SWITCH_1	CALL_10
0x400165f	      0xe831eaffff	               call sym.new_rel_from_abs	       737	ldexp.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001664	      0xe918060000	                           jmp 0x4001c81	       737	ldexp.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001669	    0x41b901000000	                              mov r9d, 1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400166f	    0x41b800000000	                              mov r8d, 0	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4001675	      0xb901000000	                              mov ecx, 1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400167a	      0xbe00000000	                              mov esi, 0	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400167f	    0x488b3d000000	            mov rdi, qword [0x04001686] 	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4001686	      0xe800000000	                          call 0x400168b	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400168b	          0x4889c5	                            mov rbp, rax	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400168e	          0x4885c0	                           test rax, rax	       744	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_6
0x4001691	            0x7526	                           jne 0x40016b9	       744	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_6
0x4001693	      0xba05000000	                              mov edx, 5	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x4001698	      0xbe00000000	                              mov esi, 0	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x400169d	      0xbf00000000	                              mov edi, 0	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40016a2	      0xe800000000	                          call 0x40016a7	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40016a7	          0x4889c7	                            mov rdi, rax	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40016aa	      0xb800000000	                              mov eax, 0	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40016af	      0xe800000000	                          call 0x40016b4	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40016b4	      0xe951010000	                           jmp 0x400180a	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40016b9	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40016bd	          0x8d50fd	                      lea edx, [rax - 3]	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40016c0	          0x80fa01	                               cmp dl, 1	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40016c3	     0xf87cf000000	                            ja 0x4001798	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40016c9	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40016cd	        0x488b4268	            mov rax, qword [rdx + 0x68] 	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40016d1	          0x4885c0	                           test rax, rax	       752	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8
0x40016d4	            0x7565	                           jne 0x400173b	       752	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8
0x40016d6	    0x833d00000000	               cmp dword [0x040016dd], 1	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x40016dd	            0x772c	                            ja 0x400170b	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x40016df	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x40016e3	    0xc70500000000	               mov dword [0x040016ed], 1	       251	ldexp.c	FUNCTION_9
0x40016ed	    0x488905000000	            mov qword [0x040016f4], rax 	       252	ldexp.c	FUNCTION_9
0x40016f4	    0x48c705000000	               mov qword [0x040016ff], 0	       253	ldexp.c	FUNCTION_9
0x40016ff	    0x488915000000	            mov qword [0x04001706], rdx 	       254	ldexp.c	FUNCTION_9
0x4001706	      0xe9ff000000	                           jmp 0x400180a	       254	ldexp.c	FUNCTION_9
0x400170b	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400170f	      0xba05000000	                              mov edx, 5	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001714	      0xbe00000000	                              mov esi, 0	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001719	      0xbf00000000	                              mov edi, 0	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400171e	      0xe800000000	                          call 0x4001723	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001723	          0x4c89e2	                            mov rdx, r12	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001726	          0x4889de	                            mov rsi, rbx	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001729	          0x4889c7	                            mov rdi, rax	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400172c	      0xb800000000	                              mov eax, 0	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001731	      0xe800000000	                          call 0x4001736	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001736	      0xe9cf000000	                           jmp 0x400180a	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400173b	    0x483d00000000	                              cmp rax, 0	       761	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001741	            0x7528	                           jne 0x400176b	       761	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001743	    0x48813d000000	               cmp qword [0x0400174e], 0	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400174e	            0x7509	                           jne 0x4001759	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001750	    0x833d00000000	               cmp dword [0x04001757], 0	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001757	            0x7412	                            je 0x400176b	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001759	        0x488b7a60	            mov rdi, qword [rdx + 0x60] 	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400175d	        0x48037d30	             add rdi, qword [rbp + 0x30]	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001761	      0xe807e9ffff	                     call sym.new_number	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001766	      0xe99f000000	                           jmp 0x400180a	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400176b	        0x488b5260	            mov rdx, qword [rdx + 0x60] 	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x400176f	        0x48035530	             add rdx, qword [rbp + 0x30]	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x4001773	    0xc70500000000	               mov dword [0x0400177d], 1	       251	ldexp.c	FUNCTION_9
0x400177d	    0x488915000000	            mov qword [0x04001784], rdx 	       252	ldexp.c	FUNCTION_9
0x4001784	    0x48c705000000	               mov qword [0x0400178f], 0	       253	ldexp.c	FUNCTION_9
0x400178f	    0x488905000000	            mov qword [0x04001796], rax 	       254	ldexp.c	FUNCTION_9
0x4001796	            0xeb72	                           jmp 0x400180a	       254	ldexp.c	FUNCTION_9
0x4001798	    0x8b1500000000	            mov edx, dword [0x0400179e] 	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x400179e	          0x83fa04	                              cmp edx, 4	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40017a1	            0x740e	                            je 0x40017b1	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40017a3	          0x83fa01	                              cmp edx, 1	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40017a6	            0x7436	                            je 0x40017de	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40017a8	    0x833d00000000	               cmp dword [0x040017af], 0	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40017af	            0x742d	                            je 0x40017de	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40017b1	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017b5	      0xba05000000	                              mov edx, 5	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017ba	      0xbe00000000	                              mov esi, 0	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017bf	      0xbf00000000	                              mov edi, 0	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017c4	      0xe800000000	                          call 0x40017c9	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017c9	          0x4c89e2	                            mov rdx, r12	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017cc	          0x4889de	                            mov rsi, rbx	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017cf	          0x4889c7	                            mov rdi, rax	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017d2	      0xb800000000	                              mov eax, 0	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017d7	      0xe800000000	                          call 0x40017dc	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017dc	            0xeb2c	                           jmp 0x400180a	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40017de	            0x84c0	                             test al, al	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x40017e0	            0x7528	                           jne 0x400180a	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x40017e2	        0xc6451801	                mov byte [rbp + 0x18], 1	       777	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x40017e6	    0x48c745280000	               mov qword [rbp + 0x28], 0	       778	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x40017ee	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x40017f3	            0x7515	                           jne 0x400180a	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x40017f5	    0x488b3d000000	            mov rdi, qword [0x040017fc] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x40017fc	        0x483b6f30	            cmp rbp, qword [rdi + 0x30] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001800	            0x7408	                            je 0x400180a	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001802	          0x4889ee	                            mov rsi, rbp	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4001805	      0xe800000000	                          call 0x400180a	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x400180a	    0x48833d000000	               cmp qword [0x04001812], 0	       782	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001812	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001819	        0x480f45e8	                         cmovne rbp, rax	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x400181d	    0x48892d000000	            mov qword [0x04001824], rbp 	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001824	      0xe958040000	                           jmp 0x4001c81	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001829	    0x833d00000000	               cmp dword [0x04001830], 0	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x4001830	     0xf844b040000	                            je 0x4001c81	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x4001836	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x400183a	      0xba00000000	                              mov edx, 0	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x400183f	      0xbe00000000	                              mov esi, 0	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x4001844	      0xe800000000	                          call 0x4001849	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x4001849	          0x4885c0	                           test rax, rax	       795	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16
0x400184c	            0x753d	                           jne 0x400188b	       795	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16
0x400184e	    0x833d00000000	               cmp dword [0x04001855], 4	       797	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17
0x4001855	     0xf8526040000	                           jne 0x4001c81	       797	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17
0x400185b	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x400185f	      0xba05000000	                              mov edx, 5	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001864	      0xbe00000000	                              mov esi, 0	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001869	      0xbf00000000	                              mov edi, 0	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x400186e	      0xe800000000	                          call 0x4001873	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001873	          0x4889ea	                            mov rdx, rbp	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001876	          0x4889de	                            mov rsi, rbx	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001879	          0x4889c7	                            mov rdi, rax	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x400187c	      0xb800000000	                              mov eax, 0	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001881	      0xe800000000	                          call 0x4001886	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x4001886	      0xe9f6030000	                           jmp 0x4001c81	       798	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16	IF_17	CALL_24
0x400188b	    0xf68090000000	               test byte [rax + 0x90], 1	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001892	     0xf84e9030000	                            je 0x4001c81	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4001898	        0x488b4038	            mov rax, qword [rax + 0x38] 	       803	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x400189c	    0xc70500000000	               mov dword [0x040018a6], 1	       251	ldexp.c	FUNCTION_9
0x40018a6	    0x48c705000000	               mov qword [0x040018b1], 0	       252	ldexp.c	FUNCTION_9
0x40018b1	    0x48c705000000	               mov qword [0x040018bc], 0	       253	ldexp.c	FUNCTION_9
0x40018bc	    0x488905000000	            mov qword [0x040018c3], rax 	       254	ldexp.c	FUNCTION_9
0x40018c3	      0xe9b9030000	                           jmp 0x4001c81	       254	ldexp.c	FUNCTION_9
0x40018c8	    0x833d00000000	               cmp dword [0x040018cf], 0	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x40018cf	     0xf84ac030000	                            je 0x4001c81	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x40018d5	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x40018d9	      0xba00000000	                              mov edx, 0	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x40018de	      0xbe00000000	                              mov esi, 0	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x40018e3	      0xe800000000	                          call 0x40018e8	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x40018e8	          0x4885c0	                           test rax, rax	       813	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20
0x40018eb	            0x753d	                           jne 0x400192a	       813	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20
0x40018ed	    0x833d00000000	               cmp dword [0x040018f4], 4	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x40018f4	     0xf8587030000	                           jne 0x4001c81	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x40018fa	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40018fe	      0xba05000000	                              mov edx, 5	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001903	      0xbe00000000	                              mov esi, 0	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001908	      0xbf00000000	                              mov edi, 0	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x400190d	      0xe800000000	                          call 0x4001912	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001912	          0x4889ea	                            mov rdx, rbp	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001915	          0x4889de	                            mov rsi, rbx	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001918	          0x4889c7	                            mov rdi, rax	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x400191b	      0xb800000000	                              mov eax, 0	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001920	      0xe800000000	                          call 0x4001925	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4001925	      0xe957030000	                           jmp 0x4001c81	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x400192a	    0xf68090000000	               test byte [rax + 0x90], 2	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x4001931	     0xf844a030000	                            je 0x4001c81	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x4001937	        0x488b7860	            mov rdi, qword [rax + 0x60] 	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x400193b	          0x4885ff	                           test rdi, rdi	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x400193e	            0x7534	                           jne 0x4001974	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x4001940	        0x488b4038	            mov rax, qword [rax + 0x38] 	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x4001944	        0x488b4030	            mov rax, qword [rax + 0x30] 	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x4001948	    0xc70500000000	               mov dword [0x04001952], 1	       192	ldexp.c	FUNCTION_4
0x4001952	    0x48c705000000	               mov qword [0x0400195d], 0	       193	ldexp.c	FUNCTION_4
0x400195d	    0x488905000000	            mov qword [0x04001964], rax 	       194	ldexp.c	FUNCTION_4
0x4001964	    0x48c705000000	               mov qword [0x0400196f], 0	       195	ldexp.c	FUNCTION_4
0x400196f	      0xe90d030000	                           jmp 0x4001c81	       195	ldexp.c	FUNCTION_4
0x4001974	      0xe80aeaffff	                call sym.exp_fold_tree_1	       826	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_30
0x4001979	    0x833d00000000	               cmp dword [0x04001980], 0	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x4001980	     0xf84fb020000	                            je 0x4001c81	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x4001986	      0xe8b5e6ffff	                       call sym.make_abs	       828	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_31
0x400198b	      0xe9f1020000	                           jmp 0x4001c81	       828	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_31
0x4001990	    0x833d00000000	               cmp dword [0x04001997], 0	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x4001997	     0xf84e4020000	                            je 0x4001c81	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x400199d	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x40019a1	      0xba00000000	                              mov edx, 0	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x40019a6	      0xbe00000000	                              mov esi, 0	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x40019ab	      0xe800000000	                          call 0x40019b0	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x40019b0	          0x4885c0	                           test rax, rax	       841	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26
0x40019b3	            0x7543	                           jne 0x40019f8	       841	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26
0x40019b5	    0x833d00000000	               cmp dword [0x040019bc], 4	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x40019bc	            0x752b	                           jne 0x40019e9	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x40019be	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019c2	      0xba05000000	                              mov edx, 5	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019c7	      0xbe00000000	                              mov esi, 0	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019cc	      0xbf00000000	                              mov edi, 0	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019d1	      0xe800000000	                          call 0x40019d6	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019d6	          0x4889ea	                            mov rdx, rbp	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019d9	          0x4889de	                            mov rsi, rbx	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019dc	          0x4889c7	                            mov rdi, rax	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019df	      0xb800000000	                              mov eax, 0	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019e4	      0xe800000000	                          call 0x40019e9	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x40019e9	      0xbf00000000	                              mov edi, 0	       847	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	CALL_35
0x40019ee	      0xe87ae6ffff	                     call sym.new_number	       847	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	CALL_35
0x40019f3	      0xe989020000	                           jmp 0x4001c81	       847	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	CALL_35
0x40019f8	        0x488b4038	            mov rax, qword [rax + 0x38] 	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x40019fc	          0x4885c0	                           test rax, rax	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x40019ff	            0x743f	                            je 0x4001a40	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x4001a01	    0x813b41010000	                  cmp dword [rbx], 0x141	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a07	            0x7522	                           jne 0x4001a2b	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a09	        0x488b5838	            mov rbx, qword [rax + 0x38] 	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a0d	    0x488b3d000000	            mov rdi, qword [0x04001a14] 	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x4001a14	      0xe800000000	                          call 0x4001a19	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x4001a19	            0x89c1	                            mov ecx, eax	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a1b	          0x4889d8	                            mov rax, rbx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a1e	      0xba00000000	                              mov edx, 0	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a23	          0x48f7f1	                                 div rcx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a26	          0x4889c7	                            mov rdi, rax	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a29	            0xeb0b	                           jmp 0x4001a36	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001a2b	          0x8b4870	            mov ecx, dword [rax + 0x70] 	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4001a2e	      0xbf01000000	                              mov edi, 1	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4001a33	          0x48d3e7	                             shl rdi, cl	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4001a36	      0xe832e6ffff	                     call sym.new_number	       859	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_37
0x4001a3b	      0xe941020000	                           jmp 0x4001c81	       859	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_37
0x4001a40	      0xbf00000000	                              mov edi, 0	       862	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_38
0x4001a45	      0xe823e6ffff	                     call sym.new_number	       862	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_38
0x4001a4a	      0xe932020000	                           jmp 0x4001c81	       862	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_38
0x4001a4f	    0x833d00000000	               cmp dword [0x04001a56], 0	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x4001a56	     0xf8425020000	                            je 0x4001c81	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x4001a5c	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a60	      0xbe00000000	                              mov esi, 0	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a65	      0xe800000000	                          call 0x4001a6a	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4001a6a	          0x4885c0	                           test rax, rax	       873	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	IF_31
0x4001a6d	            0x740e	                            je 0x4001a7d	       873	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	IF_31
0x4001a6f	        0x488b7828	            mov rdi, qword [rax + 0x28] 	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4001a73	      0xe8f5e5ffff	                     call sym.new_number	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4001a78	      0xe904020000	                           jmp 0x4001c81	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4001a7d	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a81	      0xba05000000	                              mov edx, 5	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a86	      0xbe00000000	                              mov esi, 0	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a8b	      0xbf00000000	                              mov edi, 0	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a90	      0xe800000000	                          call 0x4001a95	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a95	          0x4889ea	                            mov rdx, rbp	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a98	          0x4889de	                            mov rsi, rbx	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a9b	          0x4889c7	                            mov rdi, rax	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001a9e	      0xb800000000	                              mov eax, 0	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001aa3	      0xe800000000	                          call 0x4001aa8	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001aa8	      0xe9d4010000	                           jmp 0x4001c81	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4001aad	    0x833d00000000	               cmp dword [0x04001ab4], 0	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4001ab4	     0xf84c7010000	                            je 0x4001c81	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4001aba	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001abe	      0xbe00000000	                              mov esi, 0	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001ac3	      0xe800000000	                          call 0x4001ac8	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4001ac8	          0x4885c0	                           test rax, rax	       889	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	IF_33
0x4001acb	            0x740e	                            je 0x4001adb	       889	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	IF_33
0x4001acd	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4001ad1	      0xe8bfe5ffff	               call sym.new_rel_from_abs	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4001ad6	      0xe9a6010000	                           jmp 0x4001c81	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4001adb	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001adf	      0xba05000000	                              mov edx, 5	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001ae4	      0xbe00000000	                              mov esi, 0	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001ae9	      0xbf00000000	                              mov edi, 0	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001aee	      0xe800000000	                          call 0x4001af3	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001af3	          0x4889ea	                            mov rdx, rbp	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001af6	          0x4889de	                            mov rsi, rbx	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001af9	          0x4889c7	                            mov rdi, rax	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001afc	      0xb800000000	                              mov eax, 0	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001b01	      0xe800000000	                          call 0x4001b06	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001b06	      0xe976010000	                           jmp 0x4001c81	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x4001b0b	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b0f	      0xbf00000000	                              mov edi, 0	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b14	      0xb90c000000	                            mov ecx, 0xc	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b19	          0x4889ee	                            mov rsi, rbp	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b1c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b1e	           0xf97c2	                                 seta dl	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b21	           0xf92c0	                                 setb al	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b24	            0x38c2	                              cmp dl, al	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b26	            0x7511	                           jne 0x4001b39	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x4001b28	    0x488b3d000000	            mov rdi, qword [0x04001b2f] 	       900	ldexp.c	FUNCTION_21	SWITCH_1	CALL_48
0x4001b2f	      0xe839e5ffff	                     call sym.new_number	       900	ldexp.c	FUNCTION_21	SWITCH_1	CALL_48
0x4001b34	      0xe948010000	                           jmp 0x4001c81	       900	ldexp.c	FUNCTION_21	SWITCH_1	CALL_48
0x4001b39	      0xbf00000000	                              mov edi, 0	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b3e	      0xb90f000000	                            mov ecx, 0xf	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b43	          0x4889ee	                            mov rsi, rbp	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b46	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b48	           0xf97c2	                                 seta dl	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b4b	           0xf92c0	                                 setb al	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b4e	            0x38c2	                              cmp dl, al	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b50	            0x7511	                           jne 0x4001b63	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x4001b52	    0x488b3d000000	            mov rdi, qword [0x04001b59] 	       902	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35
0x4001b59	      0xe80fe5ffff	                     call sym.new_number	       902	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35
0x4001b5e	      0xe91e010000	                           jmp 0x4001c81	       902	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35
0x4001b63	      0xba05000000	                              mov edx, 5	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b68	      0xbe00000000	                              mov esi, 0	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b6d	      0xbf00000000	                              mov edi, 0	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b72	      0xe800000000	                          call 0x4001b77	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b77	          0x4889ea	                            mov rdx, rbp	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b7a	          0x4889de	                            mov rsi, rbx	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b7d	          0x4889c7	                            mov rdi, rax	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b80	      0xb800000000	                              mov eax, 0	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b85	      0xe800000000	                          call 0x4001b8a	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b8a	      0xe9f2000000	                           jmp 0x4001c81	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001b8f	      0xbe8d030000	                          mov esi, 0x38d	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x4001b94	      0xbf00000000	                              mov edi, 0	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x4001b99	      0xe800000000	                          call 0x4001b9e	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x4001b9e	      0xe9de000000	                           jmp 0x4001c81	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x4001ba3	      0xbecb040000	                          mov esi, 0x4cb	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4001ba8	      0xbf00000000	                              mov edi, 0	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4001bad	      0xe800000000	                          call 0x4001bb2	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4001bb2	    0x48c705000000	               mov qword [0x04001bbd], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4001bbd	    0x48c705000000	               mov qword [0x04001bc8], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4001bc8	    0x48c705000000	               mov qword [0x04001bd3], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4001bd3	    0x48c705000000	               mov qword [0x04001bde], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4001bde	      0xe99e000000	                           jmp 0x4001c81	        90	string3.h	FUNCTION_71	CALL_6
0x4001be3	      0xbe00000000	                              mov esi, 0	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4001be8	      0xe8a8e5ffff	                   call sym.is_sym_value	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4001bed	          0x4189c5	                           mov r13d, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4001bf0	            0x85c0	                           test eax, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4001bf2	     0xf85caf4ffff	                           jne 0x40010c2	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4001bf8	      0xe910f4ffff	                           jmp 0x400100d	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4001bfd	      0xbe00000000	                              mov esi, 0	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001c02	      0xe88ee5ffff	                   call sym.is_sym_value	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001c07	            0x85c0	                           test eax, eax	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x4001c09	     0xf843ef4ffff	                            je 0x400104d	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x4001c0f	      0xe9aef4ffff	                           jmp 0x40010c2	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x4001c14	    0x833d00000000	               cmp dword [0x04001c1b], 0	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c1b	            0x7464	                            je 0x4001c81	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c1d	            0xeb35	                           jmp 0x4001c54	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c1f	    0x833d00000000	               cmp dword [0x04001c26], 0	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c26	            0x7541	                           jne 0x4001c69	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c28	      0xe9baf4ffff	                           jmp 0x40010e7	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c2d	    0x48833d000000	               cmp qword [0x04001c35], 0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4001c35	     0xf85d3f6ffff	                           jne 0x400130e	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4001c3b	      0xe9c0f6ffff	                           jmp 0x4001300	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4001c40	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001c45	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4001c49	     0xf8560f4ffff	                           jne 0x40010af	       931	ldexp.c	FUNCTION_23
0x4001c4f	      0xe94ef4ffff	                           jmp 0x40010a2	       931	ldexp.c	FUNCTION_23
0x4001c54	    0x488b05000000	            mov rax, qword [0x04001c5b] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c5b	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c61	     0xf85a9f4ffff	                           jne 0x4001110	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c67	            0xeb18	                           jmp 0x4001c81	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c69	    0x488b05000000	            mov rax, qword [0x04001c70] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c70	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c76	     0xf8594f4ffff	                           jne 0x4001110	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c7c	      0xe966f4ffff	                           jmp 0x40010e7	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001c81	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1231	ldexp.c	FUNCTION_28
0x4001c86	    0x644833042528	                xor rax, qword fs:[0x28]	      1231	ldexp.c	FUNCTION_28
0x4001c8f	            0x7405	                            je 0x4001c96	      1231	ldexp.c	FUNCTION_28
0x4001c91	      0xe800000000	                          call 0x4001c96	      1231	ldexp.c	FUNCTION_28
0x4001c96	        0x4883c438	                           add rsp, 0x38	      1231	ldexp.c	FUNCTION_28
0x4001c9a	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x4001c9b	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x4001c9c	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x4001c9e	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x4001ca0	              0xc3	                                     ret	      1231	ldexp.c	FUNCTION_28
new_number	CALL,0:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	5
0x400006d	    0xc70500000000	               mov dword [0x04000077], 1	       242	ldexp.c	FUNCTION_8
0x4000077	    0x48893d000000	            mov qword [0x0400007e], rdi 	       243	ldexp.c	FUNCTION_8
0x400007e	    0x48c705000000	               mov qword [0x04000089], 0	       244	ldexp.c	FUNCTION_8
0x4000089	    0x48c705000000	               mov qword [0x04000094], 0	       245	ldexp.c	FUNCTION_8
0x4000094	              0xc3	                                     ret	       245	ldexp.c	FUNCTION_8
exp_provide	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	21
0x400202b	            0x4154	                                push r12	      1379	ldexp.c	FUNCTION_39
0x400202d	              0x55	                                push rbp	      1379	ldexp.c	FUNCTION_39
0x400202e	              0x53	                                push rbx	      1379	ldexp.c	FUNCTION_39
0x400202f	          0x4989fc	                            mov r12, rdi	      1379	ldexp.c	FUNCTION_39
0x4002032	          0x4889f3	                            mov rbx, rsi	      1379	ldexp.c	FUNCTION_39
0x4002035	            0x89d5	                            mov ebp, edx	      1379	ldexp.c	FUNCTION_39
0x4002037	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x400203c	      0xe800000000	                          call 0x4002041	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4002041	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x4002047	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x400204b	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x400204f	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x4002052	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x4002055	    0xc74010050000	               mov dword [rax + 0x10], 5	      1352	ldexp.c	FUNCTION_36
0x400205c	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x4002060	        0x4c896018	             mov qword [rax + 0x18], r12	      1354	ldexp.c	FUNCTION_36
0x4002064	          0x896828	             mov dword [rax + 0x28], ebp	      1355	ldexp.c	FUNCTION_36
0x4002067	              0x5b	                                 pop rbx	      1381	ldexp.c	FUNCTION_39
0x4002068	              0x5d	                                 pop rbp	      1381	ldexp.c	FUNCTION_39
0x4002069	            0x415c	                                 pop r12	      1381	ldexp.c	FUNCTION_39
0x400206b	              0xc3	                                     ret	      1381	ldexp.c	FUNCTION_39
exp_intop	CALL,2:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	20
0x4001ca1	              0x55	                                push rbp	       200	ldexp.c	FUNCTION_5
0x4001ca2	              0x53	                                push rbx	       200	ldexp.c	FUNCTION_5
0x4001ca3	        0x4883ec08	                              sub rsp, 8	       200	ldexp.c	FUNCTION_5
0x4001ca7	          0x4889fd	                            mov rbp, rdi	       200	ldexp.c	FUNCTION_5
0x4001caa	      0xbf28000000	                           mov edi, 0x28	       201	ldexp.c	FUNCTION_5	CALL_1
0x4001caf	      0xe800000000	                          call 0x4001cb4	       201	ldexp.c	FUNCTION_5	CALL_1
0x4001cb4	          0x4889c3	                            mov rbx, rax	       201	ldexp.c	FUNCTION_5	CALL_1
0x4001cb7	    0xc70002010000	                  mov dword [rax], 0x102	       202	ldexp.c	FUNCTION_5
0x4001cbd	      0xe800000000	                          call 0x4001cc2	       203	ldexp.c	FUNCTION_5	CALL_2
0x4001cc2	        0x48894308	                mov qword [rbx + 8], rax	       203	ldexp.c	FUNCTION_5	CALL_2
0x4001cc6	    0x8b0500000000	            mov eax, dword [0x04001ccc] 	       204	ldexp.c	FUNCTION_5
0x4001ccc	          0x894304	                mov dword [rbx + 4], eax	       204	ldexp.c	FUNCTION_5
0x4001ccf	        0x48896b18	             mov qword [rbx + 0x18], rbp	       205	ldexp.c	FUNCTION_5
0x4001cd3	    0x48c743200000	               mov qword [rbx + 0x20], 0	       206	ldexp.c	FUNCTION_5
0x4001cdb	    0xc74310070000	               mov dword [rbx + 0x10], 7	       207	ldexp.c	FUNCTION_5
0x4001ce2	          0x4889d8	                            mov rax, rbx	       209	ldexp.c	FUNCTION_5
0x4001ce5	        0x4883c408	                              add rsp, 8	       209	ldexp.c	FUNCTION_5
0x4001ce9	              0x5b	                                 pop rbx	       209	ldexp.c	FUNCTION_5
0x4001cea	              0x5d	                                 pop rbp	       209	ldexp.c	FUNCTION_5
0x4001ceb	              0xc3	                                     ret	       209	ldexp.c	FUNCTION_5
exp_fold_tree_no_dot	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	8
0x4001da8	        0x4883ec08	                              sub rsp, 8	      1245	ldexp.c	FUNCTION_30
0x4001dac	    0xc70500000000	               mov dword [0x04001db6], 0	      1246	ldexp.c	FUNCTION_30
0x4001db6	    0x48c705000000	               mov qword [0x04001dc1], 0	      1247	ldexp.c	FUNCTION_30
0x4001dc1	    0x48c705000000	               mov qword [0x04001dcc], 0	      1248	ldexp.c	FUNCTION_30
0x4001dcc	    0x48c705000000	               mov qword [0x04001dd7], 0	      1249	ldexp.c	FUNCTION_30
0x4001dd7	      0xe8a7e5ffff	                call sym.exp_fold_tree_1	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4001ddc	        0x4883c408	                              add rsp, 8	      1251	ldexp.c	FUNCTION_30
0x4001de0	              0xc3	                                     ret	      1251	ldexp.c	FUNCTION_30
exp_nameop	CALL,2:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	20
0x4001f64	            0x4154	                                push r12	      1328	ldexp.c	FUNCTION_35
0x4001f66	              0x55	                                push rbp	      1328	ldexp.c	FUNCTION_35
0x4001f67	              0x53	                                push rbx	      1328	ldexp.c	FUNCTION_35
0x4001f68	          0x4189fc	                           mov r12d, edi	      1328	ldexp.c	FUNCTION_35
0x4001f6b	          0x4889f5	                            mov rbp, rsi	      1328	ldexp.c	FUNCTION_35
0x4001f6e	      0xbf20000000	                           mov edi, 0x20	      1329	ldexp.c	FUNCTION_35	CALL_1
0x4001f73	      0xe800000000	                          call 0x4001f78	      1329	ldexp.c	FUNCTION_35	CALL_1
0x4001f78	          0x4889c3	                            mov rbx, rax	      1329	ldexp.c	FUNCTION_35	CALL_1
0x4001f7b	          0x448920	                   mov dword [rax], r12d	      1331	ldexp.c	FUNCTION_35
0x4001f7e	      0xe800000000	                          call 0x4001f83	      1332	ldexp.c	FUNCTION_35	CALL_2
0x4001f83	        0x48894308	                mov qword [rbx + 8], rax	      1332	ldexp.c	FUNCTION_35	CALL_2
0x4001f87	    0x8b0500000000	            mov eax, dword [0x04001f8d] 	      1333	ldexp.c	FUNCTION_35
0x4001f8d	          0x894304	                mov dword [rbx + 4], eax	      1333	ldexp.c	FUNCTION_35
0x4001f90	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1334	ldexp.c	FUNCTION_35
0x4001f94	    0xc74310030000	               mov dword [rbx + 0x10], 3	      1335	ldexp.c	FUNCTION_35
0x4001f9b	          0x4889d8	                            mov rax, rbx	      1338	ldexp.c	FUNCTION_35
0x4001f9e	              0x5b	                                 pop rbx	      1338	ldexp.c	FUNCTION_35
0x4001f9f	              0x5d	                                 pop rbp	      1338	ldexp.c	FUNCTION_35
0x4001fa0	            0x415c	                                 pop r12	      1338	ldexp.c	FUNCTION_35
0x4001fa2	              0xc3	                                     ret	      1338	ldexp.c	FUNCTION_35
arith_result_section	CALL,0:functions,0:ELSE,1:DO,0:IF,2:FOR,0:WHILE,0:SWITCH,0	11
0x40000ce	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       436	ldexp.c	FUNCTION_16	IF_1
0x40000d2	    0x483905000000	            cmp qword [0x040000d9], rax 	       436	ldexp.c	FUNCTION_16	IF_1
0x40000d9	            0x752d	                           jne 0x4000108	       436	ldexp.c	FUNCTION_16	IF_1
0x40000db	    0x48813d000000	               cmp qword [0x040000e6], 0	       438	ldexp.c	FUNCTION_16	IF_1	IF_2
0x40000e6	            0x7515	                           jne 0x40000fd	       438	ldexp.c	FUNCTION_16	IF_1	IF_2
0x40000e8	    0x833d00000000	               cmp dword [0x040000ef], 0	       439	ldexp.c	FUNCTION_16	IF_1	IF_2
0x40000ef	            0x750c	                           jne 0x40000fd	       439	ldexp.c	FUNCTION_16	IF_1	IF_2
0x40000f1	    0x48c705000000	               mov qword [0x040000fc], 0	       441	ldexp.c	FUNCTION_16	IF_1	IF_2
0x40000fc	              0xc3	                                     ret	       441	ldexp.c	FUNCTION_16	IF_1	IF_2
0x40000fd	    0x48c705000000	               mov qword [0x04000108], 0	       443	ldexp.c	FUNCTION_16	IF_1	ELSE_1
0x4000108	            0xf3c3	                                     ret	       443	ldexp.c	FUNCTION_16	IF_1	ELSE_1
exp_fold_tree	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	9
0x4001d78	        0x4883ec08	                              sub rsp, 8	      1235	ldexp.c	FUNCTION_29
0x4001d7c	    0xc70500000000	               mov dword [0x04001d86], 0	      1236	ldexp.c	FUNCTION_29
0x4001d86	          0x488b02	                    mov rax, qword [rdx]	      1237	ldexp.c	FUNCTION_29
0x4001d89	    0x488905000000	            mov qword [0x04001d90], rax 	      1237	ldexp.c	FUNCTION_29
0x4001d90	    0x488915000000	            mov qword [0x04001d97], rdx 	      1238	ldexp.c	FUNCTION_29
0x4001d97	    0x488935000000	            mov qword [0x04001d9e], rsi 	      1239	ldexp.c	FUNCTION_29
0x4001d9e	      0xe8e0e5ffff	                call sym.exp_fold_tree_1	      1240	ldexp.c	FUNCTION_29	CALL_1
0x4001da3	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x4001da7	              0xc3	                                     ret	      1241	ldexp.c	FUNCTION_29
exp_relop	CALL,2:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	21
0x4001d32	            0x4154	                                push r12	       228	ldexp.c	FUNCTION_7
0x4001d34	              0x55	                                push rbp	       228	ldexp.c	FUNCTION_7
0x4001d35	              0x53	                                push rbx	       228	ldexp.c	FUNCTION_7
0x4001d36	          0x4989fc	                            mov r12, rdi	       228	ldexp.c	FUNCTION_7
0x4001d39	          0x4889f5	                            mov rbp, rsi	       228	ldexp.c	FUNCTION_7
0x4001d3c	      0xbf28000000	                           mov edi, 0x28	       229	ldexp.c	FUNCTION_7	CALL_1
0x4001d41	      0xe800000000	                          call 0x4001d46	       229	ldexp.c	FUNCTION_7	CALL_1
0x4001d46	          0x4889c3	                            mov rbx, rax	       229	ldexp.c	FUNCTION_7	CALL_1
0x4001d49	    0xc7006e010000	                  mov dword [rax], 0x16e	       230	ldexp.c	FUNCTION_7
0x4001d4f	      0xe800000000	                          call 0x4001d54	       231	ldexp.c	FUNCTION_7	CALL_2
0x4001d54	        0x48894308	                mov qword [rbx + 8], rax	       231	ldexp.c	FUNCTION_7	CALL_2
0x4001d58	    0x8b0500000000	            mov eax, dword [0x04001d5e] 	       232	ldexp.c	FUNCTION_7
0x4001d5e	          0x894304	                mov dword [rbx + 4], eax	       232	ldexp.c	FUNCTION_7
0x4001d61	    0xc74310090000	               mov dword [rbx + 0x10], 9	       233	ldexp.c	FUNCTION_7
0x4001d68	        0x4c896318	             mov qword [rbx + 0x18], r12	       234	ldexp.c	FUNCTION_7
0x4001d6c	        0x48896b20	             mov qword [rbx + 0x20], rbp	       235	ldexp.c	FUNCTION_7
0x4001d70	          0x4889d8	                            mov rax, rbx	       237	ldexp.c	FUNCTION_7
0x4001d73	              0x5b	                                 pop rbx	       237	ldexp.c	FUNCTION_7
0x4001d74	              0x5d	                                 pop rbp	       237	ldexp.c	FUNCTION_7
0x4001d75	            0x415c	                                 pop r12	       237	ldexp.c	FUNCTION_7
0x4001d77	              0xc3	                                     ret	       237	ldexp.c	FUNCTION_7
exp_get_value_int	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	5
0x400247e	        0x4883ec08	                              sub rsp, 8	      1527	ldexp.c	FUNCTION_43
0x4002482	          0x4863f6	                         movsxd rsi, esi	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002485	      0xe800000000	                          call 0x400248a	      1528	ldexp.c	FUNCTION_43	CALL_1
0x400248a	        0x4883c408	                              add rsp, 8	      1529	ldexp.c	FUNCTION_43
0x400248e	              0xc3	                                     ret	      1529	ldexp.c	FUNCTION_43
exp_binop	CALL,2:functions,0:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0	37
0x4001e15	            0x4155	                                push r13	      1270	ldexp.c	FUNCTION_32
0x4001e17	            0x4154	                                push r12	      1270	ldexp.c	FUNCTION_32
0x4001e19	              0x55	                                push rbp	      1270	ldexp.c	FUNCTION_32
0x4001e1a	              0x53	                                push rbx	      1270	ldexp.c	FUNCTION_32
0x4001e1b	        0x4883ec08	                              sub rsp, 8	      1270	ldexp.c	FUNCTION_32
0x4001e1f	          0x4189fd	                           mov r13d, edi	      1270	ldexp.c	FUNCTION_32
0x4001e22	          0x4889f5	                            mov rbp, rsi	      1270	ldexp.c	FUNCTION_32
0x4001e25	          0x4989d4	                            mov r12, rdx	      1270	ldexp.c	FUNCTION_32
0x4001e28	      0xbf28000000	                           mov edi, 0x28	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4001e2d	      0xe800000000	                          call 0x4001e32	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4001e32	          0x4889c3	                            mov rbx, rax	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4001e35	          0x448928	                   mov dword [rax], r13d	      1273	ldexp.c	FUNCTION_32
0x4001e38	        0x488b4508	                mov rax, qword [rbp + 8]	      1274	ldexp.c	FUNCTION_32
0x4001e3c	        0x48894308	                mov qword [rbx + 8], rax	      1274	ldexp.c	FUNCTION_32
0x4001e40	          0x8b4504	                mov eax, dword [rbp + 4]	      1275	ldexp.c	FUNCTION_32
0x4001e43	          0x894304	                mov dword [rbx + 4], eax	      1275	ldexp.c	FUNCTION_32
0x4001e46	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1276	ldexp.c	FUNCTION_32
0x4001e4a	        0x4c896320	             mov qword [rbx + 0x20], r12	      1277	ldexp.c	FUNCTION_32
0x4001e4e	    0xc74310000000	               mov dword [rbx + 0x10], 0	      1278	ldexp.c	FUNCTION_32
0x4001e55	        0x837d1007	               cmp dword [rbp + 0x10], 7	      1279	ldexp.c	FUNCTION_32	IF_1
0x4001e59	            0x7525	                           jne 0x4001e80	      1279	ldexp.c	FUNCTION_32	IF_1
0x4001e5b	    0x41837c241007	               cmp dword [r12 + 0x10], 7	      1280	ldexp.c	FUNCTION_32	IF_1
0x4001e61	            0x751d	                           jne 0x4001e80	      1280	ldexp.c	FUNCTION_32	IF_1
0x4001e63	    0x418d85dcfeff	                  lea eax, [r13 - 0x124]	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e6a	          0x83f801	                              cmp eax, 1	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e6d	            0x7611	                           jbe 0x4001e80	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e6f	    0x4181fd170100	                         cmp r13d, 0x117	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e76	            0x7408	                            je 0x4001e80	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e78	          0x4889df	                            mov rdi, rbx	      1284	ldexp.c	FUNCTION_32	CALL_2
0x4001e7b	      0xe861ffffff	                 call sym.exp_value_fold	      1284	ldexp.c	FUNCTION_32	CALL_2
0x4001e80	          0x4889d8	                            mov rax, rbx	      1286	ldexp.c	FUNCTION_32
0x4001e83	        0x4883c408	                              add rsp, 8	      1286	ldexp.c	FUNCTION_32
0x4001e87	              0x5b	                                 pop rbx	      1286	ldexp.c	FUNCTION_32
0x4001e88	              0x5d	                                 pop rbp	      1286	ldexp.c	FUNCTION_32
0x4001e89	            0x415c	                                 pop r12	      1286	ldexp.c	FUNCTION_32
0x4001e8b	            0x415d	                                 pop r13	      1286	ldexp.c	FUNCTION_32
0x4001e8d	              0xc3	                                     ret	      1286	ldexp.c	FUNCTION_32
exp_get_fill	CALL,6:functions,0:ELSE,1:DO,1:IF,6:FOR,0:WHILE,0:SWITCH,0	84
0x400248f	          0x4889f0	                            mov rax, rsi	      1539	ldexp.c	FUNCTION_44	IF_1
0x4002492	          0x4885ff	                           test rdi, rdi	      1538	ldexp.c	FUNCTION_44	IF_1
0x4002495	     0xf841e010000	                            je 0x40025b9	      1538	ldexp.c	FUNCTION_44	IF_1
0x400249b	            0x4154	                                push r12	      1533	ldexp.c	FUNCTION_44
0x400249d	              0x55	                                push rbp	      1533	ldexp.c	FUNCTION_44
0x400249e	              0x53	                                push rbx	      1533	ldexp.c	FUNCTION_44
0x400249f	          0x4989d4	                            mov r12, rdx	      1533	ldexp.c	FUNCTION_44
0x40024a2	          0x4889f5	                            mov rbp, rsi	      1533	ldexp.c	FUNCTION_44
0x40024a5	          0x4889fb	                            mov rbx, rdi	      1533	ldexp.c	FUNCTION_44
0x40024a8	      0xe800000000	                          call 0x40024ad	      1541	ldexp.c	FUNCTION_44	CALL_1
0x40024ad	    0x833d00000000	               cmp dword [0x040024b4], 0	      1542	ldexp.c	FUNCTION_44	IF_2
0x40024b4	            0x7548	                           jne 0x40024fe	      1542	ldexp.c	FUNCTION_44	IF_2
0x40024b6	          0x4d85e4	                           test r12, r12	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x40024b9	     0xf84f3000000	                            je 0x40025b2	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x40024bf	          0x4889e8	                            mov rax, rbp	      1547	ldexp.c	FUNCTION_44	IF_2
0x40024c2	    0x833d00000000	               cmp dword [0x040024c9], 1	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x40024c9	     0xf84e6000000	                            je 0x40025b5	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x40024cf	      0xba05000000	                              mov edx, 5	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024d4	      0xbe00000000	                              mov esi, 0	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024d9	      0xbf00000000	                              mov edi, 0	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024de	      0xe800000000	                          call 0x40024e3	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024e3	          0x4c89e2	                            mov rdx, r12	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024e6	          0x4889de	                            mov rsi, rbx	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024e9	          0x4889c7	                            mov rdi, rax	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024ec	      0xb800000000	                              mov eax, 0	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024f1	      0xe800000000	                          call 0x40024f6	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x40024f6	          0x4889e8	                            mov rax, rbp	      1547	ldexp.c	FUNCTION_44	IF_2
0x40024f9	      0xe9b7000000	                           jmp 0x40025b5	      1547	ldexp.c	FUNCTION_44	IF_2
0x40024fe	    0x488b3d000000	            mov rdi, qword [0x04002505] 	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002505	          0x4885ff	                           test rdi, rdi	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002508	            0x7473	                            je 0x400257d	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x400250a	      0xb800000000	                              mov eax, 0	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x400250f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002516	            0xf2ae	              repne scasb al, byte [rdi]	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002518	          0x48f7d1	                                 not rcx	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x400251b	          0x4889cb	                            mov rbx, rcx	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x400251e	        0x4883eb01	                              sub rbx, 1	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002522	            0x7459	                            je 0x400257d	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002524	        0x488d6b01	                      lea rbp, [rbx + 1]	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002528	          0x48d1ed	                              shr rbp, 1	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x400252b	        0x488d7d0f	                    lea rdi, [rbp + 0xf]	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x400252f	      0xe800000000	                          call 0x4002534	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002534	          0x488928	                    mov qword [rax], rbp	      1555	ldexp.c	FUNCTION_44	IF_4
0x4002537	        0x488d7808	                      lea rdi, [rax + 8]	      1556	ldexp.c	FUNCTION_44	IF_4
0x400253b	    0x488b35000000	            mov rsi, qword [0x04002542] 	      1557	ldexp.c	FUNCTION_44	IF_4
0x4002542	      0xb900000000	                              mov ecx, 0	      1558	ldexp.c	FUNCTION_44	IF_4
0x4002547	        0x4883c601	                              add rsi, 1	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x400254b	         0xfb656ff	               movzx edx, byte [rsi - 1]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x400254f	          0x83ea30	                           sub edx, 0x30	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4002552	          0x83fa09	                              cmp edx, 9	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x4002555	            0x7606	                           jbe 0x400255d	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x4002557	          0x83ea07	                              sub edx, 7	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x400255a	          0x83e20f	                            and edx, 0xf	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x400255d	          0xc1e104	                              shl ecx, 4	      1566	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4002560	             0x1d1	                            add ecx, edx	      1567	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4002562	        0x4883eb01	                              sub rbx, 1	      1568	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4002566	          0xf6c301	                              test bl, 1	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4002569	            0x750b	                           jne 0x4002576	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x400256b	            0x880f	                      mov byte [rdi], cl	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x400256d	        0x488d7f01	                      lea rdi, [rdi + 1]	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4002571	      0xb900000000	                              mov ecx, 0	      1572	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4002576	          0x4885db	                           test rbx, rbx	      1575	ldexp.c	FUNCTION_44	IF_4
0x4002579	            0x75cc	                           jne 0x4002547	      1575	ldexp.c	FUNCTION_44	IF_4
0x400257b	            0xeb38	                           jmp 0x40025b5	      1575	ldexp.c	FUNCTION_44	IF_4
0x400257d	      0xbf13000000	                           mov edi, 0x13	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x4002582	      0xe800000000	                          call 0x4002587	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x4002587	    0x488b15000000	            mov rdx, qword [0x0400258e] 	      1580	ldexp.c	FUNCTION_44	ELSE_1
0x400258e	            0x89d1	                            mov ecx, edx	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x4002590	          0xc1e918	                           shr ecx, 0x18	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x4002593	          0x884808	                  mov byte [rax + 8], cl	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x4002596	            0x89d1	                            mov ecx, edx	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x4002598	          0xc1e910	                           shr ecx, 0x10	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x400259b	          0x884809	                  mov byte [rax + 9], cl	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x400259e	            0x89d1	                            mov ecx, edx	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x40025a0	          0xc1e908	                              shr ecx, 8	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x40025a3	          0x88480a	                mov byte [rax + 0xa], cl	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x40025a6	          0x88500b	                mov byte [rax + 0xb], dl	      1584	ldexp.c	FUNCTION_44	ELSE_1
0x40025a9	    0x48c700040000	                      mov qword [rax], 4	      1585	ldexp.c	FUNCTION_44	ELSE_1
0x40025b0	            0xeb03	                           jmp 0x40025b5	      1585	ldexp.c	FUNCTION_44	ELSE_1
0x40025b2	          0x4889e8	                            mov rax, rbp	      1547	ldexp.c	FUNCTION_44	IF_2
0x40025b5	              0x5b	                                 pop rbx	      1588	ldexp.c	FUNCTION_44
0x40025b6	              0x5d	                                 pop rbp	      1588	ldexp.c	FUNCTION_44
0x40025b7	            0x415c	                                 pop r12	      1588	ldexp.c	FUNCTION_44
0x40025b9	            0xf3c3	                                     ret	      1588	ldexp.c	FUNCTION_44
ldexp_finalize_syms	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	7
0x400267e	        0x4883ec08	                              sub rsp, 8	      1660	ldexp.c	FUNCTION_49
0x4002682	      0xba00000000	                              mov edx, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x4002687	      0xbe00000000	                              mov esi, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x400268c	      0xbf00000000	                              mov edi, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x4002691	      0xe800000000	                          call 0x4002696	      1661	ldexp.c	FUNCTION_49	CALL_1
0x4002696	        0x4883c408	                              add rsp, 8	      1662	ldexp.c	FUNCTION_49
0x400269a	              0xc3	                                     ret	      1662	ldexp.c	FUNCTION_49
exp_defsym	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	20
0x4001fe4	              0x55	                                push rbp	      1371	ldexp.c	FUNCTION_38
0x4001fe5	              0x53	                                push rbx	      1371	ldexp.c	FUNCTION_38
0x4001fe6	        0x4883ec08	                              sub rsp, 8	      1371	ldexp.c	FUNCTION_38
0x4001fea	          0x4889fd	                            mov rbp, rdi	      1371	ldexp.c	FUNCTION_38
0x4001fed	          0x4889f3	                            mov rbx, rsi	      1371	ldexp.c	FUNCTION_38
0x4001ff0	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4001ff5	      0xe800000000	                          call 0x4001ffa	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4001ffa	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x4002000	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x4002004	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x4002008	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x400200b	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x400200e	    0xc74010040000	               mov dword [rax + 0x10], 4	      1352	ldexp.c	FUNCTION_36
0x4002015	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x4002019	        0x48896818	             mov qword [rax + 0x18], rbp	      1354	ldexp.c	FUNCTION_36
0x400201d	    0xc74028000000	               mov dword [rax + 0x28], 0	      1355	ldexp.c	FUNCTION_36
0x4002024	        0x4883c408	                              add rsp, 8	      1373	ldexp.c	FUNCTION_38
0x4002028	              0x5b	                                 pop rbx	      1373	ldexp.c	FUNCTION_38
0x4002029	              0x5d	                                 pop rbp	      1373	ldexp.c	FUNCTION_38
0x400202a	              0xc3	                                     ret	      1373	ldexp.c	FUNCTION_38
exp_value_fold	CALL,1:functions,0:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0	12
0x4001de1	              0x53	                                push rbx	      1255	ldexp.c	FUNCTION_31
0x4001de2	          0x4889fb	                            mov rbx, rdi	      1255	ldexp.c	FUNCTION_31
0x4001de5	      0xe800000000	                          call 0x4001dea	      1256	ldexp.c	FUNCTION_31	CALL_1
0x4001dea	    0x833d00000000	               cmp dword [0x04001df1], 0	      1257	ldexp.c	FUNCTION_31	IF_1
0x4001df1	            0x7420	                            je 0x4001e13	      1257	ldexp.c	FUNCTION_31	IF_1
0x4001df3	    0xc70302010000	                  mov dword [rbx], 0x102	      1259	ldexp.c	FUNCTION_31	IF_1
0x4001df9	    0x488b05000000	            mov rax, qword [0x04001e00] 	      1260	ldexp.c	FUNCTION_31	IF_1
0x4001e00	        0x48894318	             mov qword [rbx + 0x18], rax	      1260	ldexp.c	FUNCTION_31	IF_1
0x4001e04	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1261	ldexp.c	FUNCTION_31	IF_1
0x4001e0c	    0xc74310070000	               mov dword [rbx + 0x10], 7	      1262	ldexp.c	FUNCTION_31	IF_1
0x4001e13	              0x5b	                                 pop rbx	      1264	ldexp.c	FUNCTION_31
0x4001e14	              0xc3	                                     ret	      1264	ldexp.c	FUNCTION_31
definedness_newfunc	CALL,3:functions,0:ELSE,0:DO,0:IF,2:FOR,0:WHILE,0:SWITCH,0	28
0x4000327	              0x55	                                push rbp	       275	ldexp.c	FUNCTION_11
0x4000328	              0x53	                                push rbx	       275	ldexp.c	FUNCTION_11
0x4000329	        0x4883ec08	                              sub rsp, 8	       275	ldexp.c	FUNCTION_11
0x400032d	          0x4889fb	                            mov rbx, rdi	       275	ldexp.c	FUNCTION_11
0x4000330	          0x4885ff	                           test rdi, rdi	       278	ldexp.c	FUNCTION_11	IF_1
0x4000333	            0x753c	                           jne 0x4000371	       278	ldexp.c	FUNCTION_11	IF_1
0x4000335	          0x4889f7	                            mov rdi, rsi	       278	ldexp.c	FUNCTION_11	IF_1
0x4000338	          0x4889d5	                            mov rbp, rdx	       278	ldexp.c	FUNCTION_11	IF_1
0x400033b	      0xbe28000000	                           mov esi, 0x28	       279	ldexp.c	FUNCTION_11	IF_1
0x4000340	      0xe800000000	                          call 0x4000345	       279	ldexp.c	FUNCTION_11	IF_1
0x4000345	          0x4889c3	                            mov rbx, rax	       279	ldexp.c	FUNCTION_11	IF_1
0x4000348	          0x4885c0	                           test rax, rax	       282	ldexp.c	FUNCTION_11	IF_2
0x400034b	            0x7524	                           jne 0x4000371	       282	ldexp.c	FUNCTION_11	IF_2
0x400034d	      0xba05000000	                              mov edx, 5	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000352	      0xbe00000000	                              mov esi, 0	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000357	      0xbf00000000	                              mov edi, 0	       283	ldexp.c	FUNCTION_11	CALL_3
0x400035c	      0xe800000000	                          call 0x4000361	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000361	          0x4889ee	                            mov rsi, rbp	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000364	          0x4889c7	                            mov rdi, rax	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000367	      0xb800000000	                              mov eax, 0	       283	ldexp.c	FUNCTION_11	CALL_3
0x400036c	      0xe800000000	                          call 0x4000371	       283	ldexp.c	FUNCTION_11	CALL_3
0x4000371	        0x806321fe	             and byte [rbx + 0x21], 0xfe	       285	ldexp.c	FUNCTION_11
0x4000375	        0xc6432000	                mov byte [rbx + 0x20], 0	       286	ldexp.c	FUNCTION_11
0x4000379	          0x4889d8	                            mov rax, rbx	       288	ldexp.c	FUNCTION_11
0x400037c	        0x4883c408	                              add rsp, 8	       288	ldexp.c	FUNCTION_11
0x4000380	              0x5b	                                 pop rbx	       288	ldexp.c	FUNCTION_11
0x4000381	              0x5d	                                 pop rbp	       288	ldexp.c	FUNCTION_11
0x4000382	              0xc3	                                     ret	       288	ldexp.c	FUNCTION_11
set_sym_sections	CALL,1:functions,0:ELSE,0:DO,0:IF,2:FOR,0:WHILE,0:SWITCH,0	26
0x4000131	    0x48817f180000	               cmp qword [rdi + 0x18], 0	      1642	ldexp.c	FUNCTION_48	IF_1
0x4000139	            0x7454	                            je 0x400018f	      1642	ldexp.c	FUNCTION_48	IF_1
0x400013b	              0x53	                                push rbx	      1640	ldexp.c	FUNCTION_48
0x400013c	          0x4889fb	                            mov rbx, rdi	      1640	ldexp.c	FUNCTION_48
0x400013f	        0x488b7708	                mov rsi, qword [rdi + 8]	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000143	    0x41b801000000	                              mov r8d, 1	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000149	      0xb900000000	                              mov ecx, 0	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400014e	      0xba00000000	                              mov edx, 0	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000153	    0x488b3d000000	            mov rdi, qword [0x0400015a] 	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400015a	      0xe800000000	                          call 0x400015f	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400015f	          0x4885c0	                           test rax, rax	      1647	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000162	            0x7424	                            je 0x4000188	      1647	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000164	        0x80781803	                cmp byte [rax + 0x18], 3	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000168	            0x751e	                           jne 0x4000188	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400016a	    0x488178280000	               cmp qword [rax + 0x28], 0	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000172	            0x7514	                           jne 0x4000188	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000174	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000178	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400017c	        0x48295030	             sub qword [rax + 0x30], rdx	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000180	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1652	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000184	        0x48895028	             mov qword [rax + 0x28], rdx	      1652	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000188	      0xb801000000	                              mov eax, 1	      1656	ldexp.c	FUNCTION_48
0x400018d	              0x5b	                                 pop rbx	      1656	ldexp.c	FUNCTION_48
0x400018e	              0xc3	                                     ret	      1656	ldexp.c	FUNCTION_48
0x400018f	      0xb801000000	                              mov eax, 1	      1656	ldexp.c	FUNCTION_48
0x4000194	              0xc3	                                     ret	      1656	ldexp.c	FUNCTION_48
ldexp_init	CALL,3:functions,0:ELSE,0:DO,0:IF,1:FOR,0:WHILE,0:SWITCH,0	17
0x4002637	        0x4883ec08	                              sub rsp, 8	      1624	ldexp.c	FUNCTION_47
0x400263b	      0xb90d000000	                            mov ecx, 0xd	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x4002640	      0xba28000000	                           mov edx, 0x28	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x4002645	      0xbe00000000	                              mov esi, 0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x400264a	      0xbf00000000	                              mov edi, 0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x400264f	      0xe800000000	                          call 0x4002654	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x4002654	            0x85c0	                           test eax, eax	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x4002656	            0x7521	                           jne 0x4002679	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x4002658	      0xba05000000	                              mov edx, 5	      1631	ldexp.c	FUNCTION_47	CALL_3
0x400265d	      0xbe00000000	                              mov esi, 0	      1631	ldexp.c	FUNCTION_47	CALL_3
0x4002662	      0xbf00000000	                              mov edi, 0	      1631	ldexp.c	FUNCTION_47	CALL_3
0x4002667	      0xe800000000	                          call 0x400266c	      1631	ldexp.c	FUNCTION_47	CALL_3
0x400266c	          0x4889c7	                            mov rdi, rax	      1631	ldexp.c	FUNCTION_47	CALL_3
0x400266f	      0xb800000000	                              mov eax, 0	      1631	ldexp.c	FUNCTION_47	CALL_3
0x4002674	      0xe800000000	                          call 0x4002679	      1631	ldexp.c	FUNCTION_47	CALL_3
0x4002679	        0x4883c408	                              add rsp, 8	      1632	ldexp.c	FUNCTION_47
0x400267d	              0xc3	                                     ret	      1632	ldexp.c	FUNCTION_47
exp_assign	CALL,1:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	21
0x4001fa3	            0x4154	                                push r12	      1363	ldexp.c	FUNCTION_37
0x4001fa5	              0x55	                                push rbp	      1363	ldexp.c	FUNCTION_37
0x4001fa6	              0x53	                                push rbx	      1363	ldexp.c	FUNCTION_37
0x4001fa7	          0x4989fc	                            mov r12, rdi	      1363	ldexp.c	FUNCTION_37
0x4001faa	          0x4889f3	                            mov rbx, rsi	      1363	ldexp.c	FUNCTION_37
0x4001fad	            0x89d5	                            mov ebp, edx	      1363	ldexp.c	FUNCTION_37
0x4001faf	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4001fb4	      0xe800000000	                          call 0x4001fb9	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4001fb9	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x4001fbf	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x4001fc3	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x4001fc7	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x4001fca	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x4001fcd	    0xc74010040000	               mov dword [rax + 0x10], 4	      1352	ldexp.c	FUNCTION_36
0x4001fd4	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x4001fd8	        0x4c896018	             mov qword [rax + 0x18], r12	      1354	ldexp.c	FUNCTION_36
0x4001fdc	          0x896828	             mov dword [rax + 0x28], ebp	      1355	ldexp.c	FUNCTION_36
0x4001fdf	              0x5b	                                 pop rbx	      1365	ldexp.c	FUNCTION_37
0x4001fe0	              0x5d	                                 pop rbp	      1365	ldexp.c	FUNCTION_37
0x4001fe1	            0x415c	                                 pop r12	      1365	ldexp.c	FUNCTION_37
0x4001fe3	              0xc3	                                     ret	      1365	ldexp.c	FUNCTION_37
new_rel_from_abs	CALL,0:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	8
0x4000095	    0x488b05000000	            mov rax, qword [0x0400009c] 	       260	ldexp.c	FUNCTION_10
0x400009c	    0xc70500000000	               mov dword [0x040000a6], 1	       262	ldexp.c	FUNCTION_10
0x40000a6	    0xc70500000000	               mov dword [0x040000b0], 1	       263	ldexp.c	FUNCTION_10
0x40000b0	        0x482b7828	             sub rdi, qword [rax + 0x28]	       264	ldexp.c	FUNCTION_10
0x40000b4	    0x48893d000000	            mov qword [0x040000bb], rdi 	       264	ldexp.c	FUNCTION_10
0x40000bb	    0x48c705000000	               mov qword [0x040000c6], 0	       265	ldexp.c	FUNCTION_10
0x40000c6	    0x488905000000	            mov qword [0x040000cd], rax 	       266	ldexp.c	FUNCTION_10
0x40000cd	              0xc3	                                     ret	       266	ldexp.c	FUNCTION_10
exp_bigintop	CALL,2:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	21
0x4001cec	            0x4154	                                push r12	       213	ldexp.c	FUNCTION_6
0x4001cee	              0x55	                                push rbp	       213	ldexp.c	FUNCTION_6
0x4001cef	              0x53	                                push rbx	       213	ldexp.c	FUNCTION_6
0x4001cf0	          0x4989fc	                            mov r12, rdi	       213	ldexp.c	FUNCTION_6
0x4001cf3	          0x4889f5	                            mov rbp, rsi	       213	ldexp.c	FUNCTION_6
0x4001cf6	      0xbf28000000	                           mov edi, 0x28	       214	ldexp.c	FUNCTION_6	CALL_1
0x4001cfb	      0xe800000000	                          call 0x4001d00	       214	ldexp.c	FUNCTION_6	CALL_1
0x4001d00	          0x4889c3	                            mov rbx, rax	       214	ldexp.c	FUNCTION_6	CALL_1
0x4001d03	    0xc70002010000	                  mov dword [rax], 0x102	       215	ldexp.c	FUNCTION_6
0x4001d09	      0xe800000000	                          call 0x4001d0e	       216	ldexp.c	FUNCTION_6	CALL_2
0x4001d0e	        0x48894308	                mov qword [rbx + 8], rax	       216	ldexp.c	FUNCTION_6	CALL_2
0x4001d12	    0x8b0500000000	            mov eax, dword [0x04001d18] 	       217	ldexp.c	FUNCTION_6
0x4001d18	          0x894304	                mov dword [rbx + 4], eax	       217	ldexp.c	FUNCTION_6
0x4001d1b	        0x4c896318	             mov qword [rbx + 0x18], r12	       218	ldexp.c	FUNCTION_6
0x4001d1f	        0x48896b20	             mov qword [rbx + 0x20], rbp	       219	ldexp.c	FUNCTION_6
0x4001d23	    0xc74310070000	               mov dword [rbx + 0x10], 7	       220	ldexp.c	FUNCTION_6
0x4001d2a	          0x4889d8	                            mov rax, rbx	       222	ldexp.c	FUNCTION_6
0x4001d2d	              0x5b	                                 pop rbx	       222	ldexp.c	FUNCTION_6
0x4001d2e	              0x5d	                                 pop rbp	       222	ldexp.c	FUNCTION_6
0x4001d2f	            0x415c	                                 pop r12	       222	ldexp.c	FUNCTION_6
0x4001d31	              0xc3	                                     ret	       222	ldexp.c	FUNCTION_6
is_sym_value	CALL,2:functions,0:ELSE,0:DO,0:IF,0:FOR,0:WHILE,0:SWITCH,0	47
0x4000195	      0xba00000000	                              mov edx, 0	       954	ldexp.c	FUNCTION_24
0x400019a	        0x837f1003	               cmp dword [rdi + 0x10], 3	       954	ldexp.c	FUNCTION_24
0x400019e	     0xf85a0000000	                           jne 0x4000244	       954	ldexp.c	FUNCTION_24
0x40001a4	    0x813f03010000	                  cmp dword [rdi], 0x103	       944	ldexp.c	FUNCTION_24
0x40001aa	     0xf8594000000	                           jne 0x4000244	       944	ldexp.c	FUNCTION_24
0x40001b0	              0x55	                                push rbp	       939	ldexp.c	FUNCTION_24
0x40001b1	              0x53	                                push rbx	       939	ldexp.c	FUNCTION_24
0x40001b2	        0x4883ec08	                              sub rsp, 8	       939	ldexp.c	FUNCTION_24
0x40001b6	          0x4889f5	                            mov rbp, rsi	       939	ldexp.c	FUNCTION_24
0x40001b9	          0x4889fb	                            mov rbx, rdi	       939	ldexp.c	FUNCTION_24
0x40001bc	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	       298	ldexp.c	FUNCTION_12
0x40001c0	      0xb900000000	                              mov ecx, 0	       298	ldexp.c	FUNCTION_12
0x40001c5	      0xbf00000000	                              mov edi, 0	       298	ldexp.c	FUNCTION_12
0x40001ca	      0xe800000000	                          call 0x40001cf	       298	ldexp.c	FUNCTION_12
0x40001cf	      0xba00000000	                              mov edx, 0	       954	ldexp.c	FUNCTION_24
0x40001d4	          0x4885c0	                           test rax, rax	       945	ldexp.c	FUNCTION_24	CALL_1
0x40001d7	            0x7462	                            je 0x400023b	       945	ldexp.c	FUNCTION_24	CALL_1
0x40001d9	         0xfb64820	           movzx ecx, byte [rax + 0x20] 	       946	ldexp.c	FUNCTION_24
0x40001dd	     0xfb605000000	           movzx eax, byte [0x040001e4] 	       946	ldexp.c	FUNCTION_24
0x40001e4	            0x39c1	                            cmp ecx, eax	       946	ldexp.c	FUNCTION_24
0x40001e6	            0x7553	                           jne 0x400023b	       946	ldexp.c	FUNCTION_24
0x40001e8	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       947	ldexp.c	FUNCTION_24	CALL_2
0x40001ec	    0x41b901000000	                              mov r9d, 1	       947	ldexp.c	FUNCTION_24	CALL_2
0x40001f2	    0x41b800000000	                              mov r8d, 0	       947	ldexp.c	FUNCTION_24	CALL_2
0x40001f8	      0xb900000000	                              mov ecx, 0	       947	ldexp.c	FUNCTION_24	CALL_2
0x40001fd	      0xbe00000000	                              mov esi, 0	       947	ldexp.c	FUNCTION_24	CALL_2
0x4000202	    0x488b3d000000	            mov rdi, qword [0x04000209] 	       947	ldexp.c	FUNCTION_24	CALL_2
0x4000209	      0xe800000000	                          call 0x400020e	       947	ldexp.c	FUNCTION_24	CALL_2
0x400020e	      0xba00000000	                              mov edx, 0	       954	ldexp.c	FUNCTION_24
0x4000213	          0x4885c0	                           test rax, rax	       947	ldexp.c	FUNCTION_24	CALL_2
0x4000216	            0x7423	                            je 0x400023b	       947	ldexp.c	FUNCTION_24	CALL_2
0x4000218	          0x8b4818	            mov ecx, dword [rax + 0x18] 	       952	ldexp.c	FUNCTION_24
0x400021b	      0x6681e1ff08	                           and cx, 0x8ff	       952	ldexp.c	FUNCTION_24
0x4000220	      0x6681f90308	                           cmp cx, 0x803	       952	ldexp.c	FUNCTION_24
0x4000225	            0x7514	                           jne 0x400023b	       952	ldexp.c	FUNCTION_24
0x4000227	    0x488178280000	               cmp qword [rax + 0x28], 0	       953	ldexp.c	FUNCTION_24
0x400022f	            0x750a	                           jne 0x400023b	       953	ldexp.c	FUNCTION_24
0x4000231	        0x48396830	            cmp qword [rax + 0x30], rbp 	       954	ldexp.c	FUNCTION_24
0x4000235	           0xf94c2	                                 sete dl	       954	ldexp.c	FUNCTION_24
0x4000238	           0xfb6d2	                           movzx edx, dl	       954	ldexp.c	FUNCTION_24
0x400023b	            0x89d0	                            mov eax, edx	       955	ldexp.c	FUNCTION_24
0x400023d	        0x4883c408	                              add rsp, 8	       955	ldexp.c	FUNCTION_24
0x4000241	              0x5b	                                 pop rbx	       955	ldexp.c	FUNCTION_24
0x4000242	              0x5d	                                 pop rbp	       955	ldexp.c	FUNCTION_24
0x4000243	              0xc3	                                     ret	       955	ldexp.c	FUNCTION_24
0x4000244	            0x89d0	                            mov eax, edx	       955	ldexp.c	FUNCTION_24
0x4000246	              0xc3	                                     ret	       955	ldexp.c	FUNCTION_24
