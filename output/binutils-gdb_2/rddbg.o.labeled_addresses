read_debugging_info	DO,0:WHILE,0:SWITCH,0:IF,8:ELSE,0:functions,0:CALL,9:FOR,0	436
0x4000292	            0x4157	                                push r15	        47	rddbg.c	FUNCTION_1
0x4000294	            0x4156	                                push r14	        47	rddbg.c	FUNCTION_1
0x4000296	            0x4155	                                push r13	        47	rddbg.c	FUNCTION_1
0x4000298	            0x4154	                                push r12	        47	rddbg.c	FUNCTION_1
0x400029a	              0x55	                                push rbp	        47	rddbg.c	FUNCTION_1
0x400029b	              0x53	                                push rbx	        47	rddbg.c	FUNCTION_1
0x400029c	    0x4881ecc80000	                           sub rsp, 0xc8	        47	rddbg.c	FUNCTION_1
0x40002a3	          0x4989ff	                            mov r15, rdi	        47	rddbg.c	FUNCTION_1
0x40002a6	    0x4889b4248800	             mov qword [rsp + 0x88], rsi	        47	rddbg.c	FUNCTION_1
0x40002ae	    0x488994248000	             mov qword [rsp + 0x80], rdx	        47	rddbg.c	FUNCTION_1
0x40002b6	        0x894c247c	             mov dword [rsp + 0x7c], ecx	        47	rddbg.c	FUNCTION_1
0x40002ba	    0x64488b042528	                mov rax, qword fs:[0x28]	        47	rddbg.c	FUNCTION_1
0x40002c3	    0x48898424b800	             mov qword [rsp + 0xb8], rax	        47	rddbg.c	FUNCTION_1
0x40002cb	            0x31c0	                            xor eax, eax	        47	rddbg.c	FUNCTION_1
0x40002cd	      0xe800000000	                          call 0x40002d2	        51	rddbg.c	FUNCTION_1	CALL_1
0x40002d2	      0x4889442458	             mov qword [rsp + 0x58], rax	        51	rddbg.c	FUNCTION_1	CALL_1
0x40002d7	          0x4885c0	                           test rax, rax	        52	rddbg.c	FUNCTION_1	IF_1
0x40002da	     0xf8486060000	                            je 0x4000966	        52	rddbg.c	FUNCTION_1	IF_1
0x40002e0	    0x48c744245000	               mov qword [rsp + 0x50], 0	        52	rddbg.c	FUNCTION_1	IF_1
0x40002e9	    0x48c744246000	               mov qword [rsp + 0x60], 0	        52	rddbg.c	FUNCTION_1	IF_1
0x40002f2	      0xbb00000000	                              mov ebx, 0	        52	rddbg.c	FUNCTION_1	IF_1
0x40002f7	      0xc644241f00	                mov byte [rsp + 0x1f], 0	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x40002fc	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000301	          0x498b06	                    mov rax, qword [r14]	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000304	      0x4889442468	             mov qword [rsp + 0x68], rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000309	          0x4889c6	                            mov rsi, rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x400030c	          0x4c89ff	                            mov rdi, r15	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x400030f	      0xe800000000	                          call 0x4000314	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000314	          0x4989c4	                            mov r12, rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000317	        0x4d8b6e08	                mov r13, qword [r14 + 8]	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400031b	          0x4c89ee	                            mov rsi, r13	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400031e	          0x4c89ff	                            mov rdi, r15	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000321	      0xe800000000	                          call 0x4000326	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000326	          0x4889c5	                            mov rbp, rax	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000329	          0x4d85e4	                           test r12, r12	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400032c	     0xf8496030000	                            je 0x40006c8	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000332	          0x4885c0	                           test rax, rax	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000335	     0xf848d030000	                            je 0x40006c8	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400033b	      0x498b5c2438	            mov rbx, qword [r12 + 0x38] 	       124	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_3
0x4000340	          0x4889df	                            mov rdi, rbx	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000343	      0xe800000000	                          call 0x4000348	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000348	      0x4889442470	             mov qword [rsp + 0x70], rax	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x400034d	          0x4989d8	                             mov r8, rbx	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000350	      0xb900000000	                              mov ecx, 0	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000355	          0x4889c2	                            mov rdx, rax	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000358	          0x4c89e6	                            mov rsi, r12	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400035b	          0x4c89ff	                            mov rdi, r15	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400035e	      0xe800000000	                          call 0x4000363	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000363	            0x85c0	                           test eax, eax	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000365	            0x7537	                           jne 0x400039e	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000367	      0xe800000000	                          call 0x400036c	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x400036c	            0x89c7	                            mov edi, eax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x400036e	      0xe800000000	                          call 0x4000373	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000373	          0x4989c1	                             mov r9, rax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000376	      0x4c8b442468	              mov r8, qword [rsp + 0x68]	        97	stdio2.h	CALL_14
0x400037b	          0x498b0f	                    mov rcx, qword [r15]	        97	stdio2.h	CALL_14
0x400037e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000383	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000388	    0x488b3d000000	            mov rdi, qword [0x0400038f] 	        97	stdio2.h	CALL_14
0x400038f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000394	      0xe800000000	                          call 0x4000399	        97	stdio2.h	CALL_14
0x4000399	      0xe9f7050000	                           jmp 0x4000995	        97	stdio2.h	CALL_14
0x400039e	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x40003a2	          0x4989c6	                            mov r14, rax	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x40003a5	      0x4889442408	                mov qword [rsp + 8], rax	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x40003aa	        0x488d7801	                      lea rdi, [rax + 1]	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40003ae	      0xe800000000	                          call 0x40003b3	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40003b3	      0x4889442410	             mov qword [rsp + 0x10], rax	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40003b8	          0x4d89f0	                             mov r8, r14	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003bb	      0xb900000000	                              mov ecx, 0	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003c0	          0x4889c2	                            mov rdx, rax	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003c3	          0x4889ee	                            mov rsi, rbp	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003c6	          0x4c89ff	                            mov rdi, r15	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003c9	      0xe800000000	                          call 0x40003ce	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003ce	            0x85c0	                           test eax, eax	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003d0	            0x7535	                           jne 0x4000407	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003d2	      0xe800000000	                          call 0x40003d7	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40003d7	            0x89c7	                            mov edi, eax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40003d9	      0xe800000000	                          call 0x40003de	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40003de	          0x4989c1	                             mov r9, rax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40003e1	          0x4d89e8	                             mov r8, r13	        97	stdio2.h	CALL_14
0x40003e4	          0x498b0f	                    mov rcx, qword [r15]	        97	stdio2.h	CALL_14
0x40003e7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40003ec	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40003f1	    0x488b3d000000	            mov rdi, qword [0x040003f8] 	        97	stdio2.h	CALL_14
0x40003f8	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x40003fd	      0xe800000000	                          call 0x4000402	        97	stdio2.h	CALL_14
0x4000402	      0xe98e050000	                           jmp 0x4000995	        97	stdio2.h	CALL_14
0x4000407	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400040c	      0x488b542408	                mov rdx, qword [rsp + 8]	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000411	        0xc6041000	                 mov byte [rax + rdx], 0	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000415	    0x48837c246000	               cmp qword [rsp + 0x60], 0	       145	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x400041b	            0x7530	                           jne 0x400044d	       145	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x400041d	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x4000425	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x400042d	      0xba01000000	                              mov edx, 1	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x4000432	          0x4c89fe	                            mov rsi, r15	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x4000435	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x400043a	      0xe800000000	                          call 0x400043f	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x400043f	      0x4889442460	             mov qword [rsp + 0x60], rax	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x4000444	          0x4885c0	                           test rax, rax	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x4000447	     0xf8448050000	                            je 0x4000995	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x400044d	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000452	      0x488d5418f4	              lea rdx, [rax + rbx - 0xc]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000457	      0x4889542448	             mov qword [rsp + 0x48], rdx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400045c	          0x4839d0	                            cmp rax, rdx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400045f	     0xf874f020000	                            ja 0x40006b4	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000465	          0x4989c6	                            mov r14, rax	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000468	    0x48c744242800	               mov qword [rsp + 0x28], 0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000471	    0x48c744244000	               mov qword [rsp + 0x40], 0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400047a	          0x4801c3	                            add rbx, rax	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400047d	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000482	        0x498b4708	                mov rax, qword [r15 + 8]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x4000486	          0x4c89f7	                            mov rdi, r14	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x4000489	          0xff5038	                 call qword [rax + 0x38]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x400048c	          0x4889c5	                            mov rbp, rax	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x400048f	      0x410fb64604	               movzx eax, byte [r14 + 4]	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x4000494	            0x89c3	                            mov ebx, eax	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x4000496	        0x89442478	             mov dword [rsp + 0x78], eax	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x400049a	        0x498d7e06	                      lea rdi, [r14 + 6]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x400049e	        0x498b4708	                mov rax, qword [r15 + 8]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x40004a2	          0xff5050	                 call qword [rax + 0x50]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x40004a5	      0x4889442430	             mov qword [rsp + 0x30], rax	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x40004aa	        0x498d7e08	                      lea rdi, [r14 + 8]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x40004ae	        0x498b4708	                mov rax, qword [r15 + 8]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x40004b2	          0xff5038	                 call qword [rax + 0x38]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x40004b5	      0x4889442438	             mov qword [rsp + 0x38], rax	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x40004ba	            0x85db	                           test ebx, ebx	       173	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004bc	            0x7518	                           jne 0x40004d6	       173	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004be	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004c3	      0x4889542428	             mov qword [rsp + 0x28], rdx	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004c8	        0x488d0410	                    lea rax, [rax + rdx]	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004cc	      0x4889442440	             mov qword [rsp + 0x40], rax	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004d1	      0xe9cf010000	                           jmp 0x40006a5	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004d6	            0x89e8	                            mov eax, ebp	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004d8	      0x4803442428	             add rax, qword [rsp + 0x28]	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004dd	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x40004e2	        0x488d1c02	                    lea rbx, [rdx + rax]	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x40004e6	    0x41bd00000000	                             mov r13d, 0	       194	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x40004ec	      0x4839442408	                cmp qword [rsp + 8], rax	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004f1	     0xf871a010000	                            ja 0x4000611	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004f7	          0x498b1f	                    mov rbx, qword [r15]	       188	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_22
0x40004fa	      0xba05000000	                              mov edx, 5	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x40004ff	      0xbe00000000	                              mov esi, 0	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x4000504	      0xbf00000000	                              mov edi, 0	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x4000509	      0xe800000000	                          call 0x400050e	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x400050e	          0x4889c6	                            mov rsi, rax	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x4000511	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_14
0x4000514	      0x482b4c2470	             sub rcx, qword [rsp + 0x70]	        97	stdio2.h	CALL_14
0x4000519	    0x48b8abaaaaaa	          movabs rax, 0x2aaaaaaaaaaaaaab	        97	stdio2.h	CALL_14
0x4000523	          0x48f7e9	                                imul rcx	        97	stdio2.h	CALL_14
0x4000526	          0x48d1fa	                              sar rdx, 1	        97	stdio2.h	CALL_14
0x4000529	          0x4989d1	                             mov r9, rdx	        97	stdio2.h	CALL_14
0x400052c	        0x48c1f93f	                           sar rcx, 0x3f	        97	stdio2.h	CALL_14
0x4000530	        0x8b442478	            mov eax, dword [rsp + 0x78] 	        97	stdio2.h	CALL_14
0x4000534	              0x50	                                push rax	        97	stdio2.h	CALL_14
0x4000535	              0x55	                                push rbp	        97	stdio2.h	CALL_14
0x4000536	          0x4929c9	                             sub r9, rcx	        97	stdio2.h	CALL_14
0x4000539	      0x4c8b442478	              mov r8, qword [rsp + 0x78]	        97	stdio2.h	CALL_14
0x400053e	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_14
0x4000541	          0x4889f2	                            mov rdx, rsi	        97	stdio2.h	CALL_14
0x4000544	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000549	    0x488b3d000000	            mov rdi, qword [0x04000550] 	        97	stdio2.h	CALL_14
0x4000550	       0xfb644242f	           movzx eax, byte [rsp + 0x2f] 	        97	stdio2.h	CALL_14
0x4000555	      0xe800000000	                          call 0x400055a	        97	stdio2.h	CALL_14
0x400055a	        0x4883c410	                           add rsp, 0x10	        97	stdio2.h	CALL_14
0x400055e	      0xe942010000	                           jmp 0x40006a5	        97	stdio2.h	CALL_14
0x4000563	        0xc6450000	                       mov byte [rbp], 0	       207	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000567	        0x498b4708	                mov rax, qword [r15 + 8]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x400056b	          0x4c89e7	                            mov rdi, r12	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x400056e	          0xff5038	                 call qword [rax + 0x38]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x4000571	        0x428d3430	                    lea esi, [rax + r14]	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x4000575	      0x4839742408	                cmp qword [rsp + 8], rsi	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x400057a	            0x7762	                            ja 0x40005de	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x400057c	          0x498b2f	                    mov rbp, qword [r15]	       212	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_26
0x400057f	      0xba05000000	                              mov edx, 5	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x4000584	      0xbe00000000	                              mov esi, 0	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x4000589	      0xbf00000000	                              mov edi, 0	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x400058e	      0xe800000000	                          call 0x4000593	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x4000593	          0x4889c6	                            mov rsi, rax	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x4000596	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_14
0x4000599	      0x482b4c2470	             sub rcx, qword [rsp + 0x70]	        97	stdio2.h	CALL_14
0x400059e	    0x48b8abaaaaaa	          movabs rax, 0x2aaaaaaaaaaaaaab	        97	stdio2.h	CALL_14
0x40005a8	          0x48f7e9	                                imul rcx	        97	stdio2.h	CALL_14
0x40005ab	          0x48d1fa	                              sar rdx, 1	        97	stdio2.h	CALL_14
0x40005ae	          0x4989d1	                             mov r9, rdx	        97	stdio2.h	CALL_14
0x40005b1	        0x48c1f93f	                           sar rcx, 0x3f	        97	stdio2.h	CALL_14
0x40005b5	          0x4929c9	                             sub r9, rcx	        97	stdio2.h	CALL_14
0x40005b8	      0x4c8b442468	              mov r8, qword [rsp + 0x68]	        97	stdio2.h	CALL_14
0x40005bd	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_14
0x40005c0	          0x4889f2	                            mov rdx, rsi	        97	stdio2.h	CALL_14
0x40005c3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40005c8	    0x488b3d000000	            mov rdi, qword [0x040005cf] 	        97	stdio2.h	CALL_14
0x40005cf	       0xfb644241f	           movzx eax, byte [rsp + 0x1f] 	        97	stdio2.h	CALL_14
0x40005d4	      0xe800000000	                          call 0x40005d9	        97	stdio2.h	CALL_14
0x40005d9	          0x4d89e6	                            mov r14, r12	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005dc	            0xeb7c	                           jmp 0x400065a	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005de	      0x4803742410	             add rsi, qword [rsp + 0x10]	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005e3	      0xba00000000	                              mov edx, 0	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005e8	          0x4889df	                            mov rdi, rbx	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005eb	       0xfb644241f	           movzx eax, byte [rsp + 0x1f] 	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005f0	      0xe800000000	                          call 0x40005f5	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005f5	          0x4889c3	                            mov rbx, rax	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005f8	        0xc645005c	                    mov byte [rbp], 0x5c	       223	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005fc	          0x4d85ed	                           test r13, r13	       225	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_9
0x40005ff	            0x7408	                            je 0x4000609	       225	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_9
0x4000601	          0x4c89ef	                            mov rdi, r13	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_28
0x4000604	      0xe800000000	                          call 0x4000609	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_28
0x4000609	          0x4989dd	                            mov r13, rbx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400060c	          0x4c89e2	                            mov rdx, r12	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400060f	            0xeb08	                           jmp 0x4000619	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000611	          0x4c89f2	                            mov rdx, r14	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000614	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000619	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000620	          0x4889df	                            mov rdi, rbx	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000623	      0xb800000000	                              mov eax, 0	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000628	            0xf2ae	              repne scasb al, byte [rdi]	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x400062a	          0x48f7d1	                                 not rcx	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x400062d	        0x4883e901	                              sub rcx, 1	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000631	            0x741f	                            je 0x4000652	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000633	      0x488d6c0bff	                lea rbp, [rbx + rcx - 1]	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000638	        0x807d005c	                    cmp byte [rbp], 0x5c	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400063c	            0x7519	                           jne 0x4000657	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400063e	        0x4c8d620c	                    lea r12, [rdx + 0xc]	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000642	      0x4c3b642420	            cmp r12, qword [rsp + 0x20] 	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000647	     0xf8216ffffff	                            jb 0x4000563	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400064d	          0x4989d6	                            mov r14, rdx	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000650	            0xeb08	                           jmp 0x400065a	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000652	          0x4989d6	                            mov r14, rdx	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000655	            0xeb03	                           jmp 0x400065a	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000657	          0x4989d6	                            mov r14, rdx	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400065a	          0x4889d9	                            mov rcx, rbx	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x400065d	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x4000662	          0x4c89e2	                            mov rdx, r12	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x4000665	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x400066a	          0x4489ee	                           mov esi, r13d	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x400066d	        0x8b6c2478	            mov ebp, dword [rsp + 0x78] 	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x4000671	            0x89ef	                            mov edi, ebp	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x4000673	      0xe806faffff	                      call sym.save_stab	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x4000678	          0x4989d9	                             mov r9, rbx	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x400067b	          0x4d89e0	                             mov r8, r12	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x400067e	          0x4489e9	                           mov ecx, r13d	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000681	            0x89ea	                            mov edx, ebp	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000683	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000688	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x400068d	      0xe800000000	                          call 0x4000692	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000692	            0x85c0	                           test eax, eax	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000694	            0x750f	                           jne 0x40006a5	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000696	      0xe87bfaffff	                   call sym.stab_context	       234	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_31
0x400069b	      0xe8a0f9ffff	               call sym.free_saved_stabs	       235	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_32
0x40006a0	      0xe9f0020000	                           jmp 0x4000995	       235	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_32
0x40006a5	        0x4983c60c	                            add r14, 0xc	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40006a9	      0x4c3b742448	            cmp r14, qword [rsp + 0x48] 	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40006ae	     0xf86cefdffff	                           jbe 0x4000482	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40006b4	      0xe887f9ffff	               call sym.free_saved_stabs	       245	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_33
0x40006b9	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006be	      0xe800000000	                          call 0x40006c3	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006c3	      0xbb01000000	                              mov ebx, 1	       152	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40006c8	    0x488344245010	            add qword [rsp + 0x50], 0x10	       152	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40006ce	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       152	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40006d3	    0x483d00000000	                              cmp rax, 0	       111	rddbg.c	FUNCTION_2	FOR_1
0x40006d9	     0xf851dfcffff	                           jne 0x40002fc	       111	rddbg.c	FUNCTION_2	FOR_1
0x40006df	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       254	rddbg.c	FUNCTION_2	IF_11
0x40006e4	          0x4885c0	                           test rax, rax	       254	rddbg.c	FUNCTION_2	IF_11
0x40006e7	            0x7415	                            je 0x40006fe	       254	rddbg.c	FUNCTION_2	IF_11
0x40006e9	          0x4889c6	                            mov rsi, rax	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40006ec	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40006f1	      0xe800000000	                          call 0x40006f6	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40006f6	            0x85c0	                           test eax, eax	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x40006f8	     0xf846f020000	                            je 0x400096d	        55	rddbg.c	FUNCTION_1	IF_2	CALL_2
0x40006fe	        0x498b4708	                mov rax, qword [r15 + 8]	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x4000702	        0x83780801	                  cmp dword [rax + 8], 1	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x4000706	     0xf85e7010000	                           jne 0x40008f3	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x400070c	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       273	rddbg.c	FUNCTION_3
0x4000714	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	       273	rddbg.c	FUNCTION_3
0x400071c	        0x488d14d0	                  lea rdx, [rax + rdx*8]	       273	rddbg.c	FUNCTION_3
0x4000720	          0x4839d0	                            cmp rax, rdx	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000723	     0xf8373020000	                           jae 0x400099c	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000729	          0x4989c4	                            mov r12, rax	       274	rddbg.c	FUNCTION_3	FOR_1
0x400072c	    0x48c744241000	               mov qword [rsp + 0x10], 0	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000735	      0x4c897c2408	                mov qword [rsp + 8], r15	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400073a	          0x4989d7	                            mov r15, rdx	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400073d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000742	        0x488b4708	                mov rax, qword [rdi + 8]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000746	    0x488d94249000	                   lea rdx, [rsp + 0x90]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x400074e	        0x498b3424	                    mov rsi, qword [r12]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000752	    0xff9010020000	                call qword [rax + 0x210]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000758	    0x80bc24980000	            cmp byte [rsp + 0x98], 0x2d 	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000760	     0xf854b010000	                           jne 0x40008b1	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000766	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       285	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x400076c	            0x7532	                           jne 0x40007a0	       285	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x400076e	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000776	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x400077e	      0xba00000000	                              mov edx, 0	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000783	      0x488b742408	                mov rsi, qword [rsp + 8]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000788	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x400078d	      0xe800000000	                          call 0x4000792	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000792	      0x4889442410	             mov qword [rsp + 0x10], rax	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000797	          0x4885c0	                           test rax, rax	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x400079a	     0xf8420010000	                            je 0x40008c0	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x40007a0	    0x488b9c24a000	            mov rbx, qword [rsp + 0xa0] 	       294	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40007a8	          0x4885db	                           test rbx, rbx	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007ab	     0xf840f010000	                            je 0x40008c0	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007b1	          0x803b00	                       cmp byte [rbx], 0	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007b4	     0xf8406010000	                            je 0x40008c0	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007ba	    0x41be00000000	                             mov r14d, 0	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007c0	            0xeb62	                           jmp 0x4000824	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007c2	          0x4889df	                            mov rdi, rbx	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x40007c5	      0xe800000000	                          call 0x40007ca	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x40007ca	          0x4889c5	                            mov rbp, rax	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x40007cd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x40007d4	          0x4889c7	                            mov rdi, rax	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x40007d7	      0xb800000000	                              mov eax, 0	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x40007dc	            0xf2ae	              repne scasb al, byte [rdi]	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x40007de	          0x48f7d1	                                 not rcx	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x40007e1	      0xc6440dfe00	             mov byte [rbp + rcx - 2], 0	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x40007e6	      0x498b442408	                mov rax, qword [r12 + 8]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x40007eb	        0x488b7008	                mov rsi, qword [rax + 8]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x40007ef	      0xba00000000	                              mov edx, 0	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x40007f4	          0x4889ef	                            mov rdi, rbp	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x40007f7	      0xb800000000	                              mov eax, 0	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x40007fc	      0xe800000000	                          call 0x4000801	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000801	          0x4889c3	                            mov rbx, rax	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000804	          0x4889ef	                            mov rdi, rbp	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x4000807	      0xe800000000	                          call 0x400080c	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x400080c	          0x4d85f6	                           test r14, r14	       310	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	IF_5
0x400080f	            0x7408	                            je 0x4000819	       310	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	IF_5
0x4000811	          0x4c89f7	                            mov rdi, r14	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x4000814	      0xe800000000	                          call 0x4000819	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x4000819	          0x803b00	                       cmp byte [rbx], 0	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x400081c	            0x7431	                            je 0x400084f	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x400081e	          0x4d89ec	                            mov r12, r13	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000821	          0x4989de	                            mov r14, rbx	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000824	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400082b	          0x4889df	                            mov rdi, rbx	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400082e	      0xb800000000	                              mov eax, 0	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x4000833	            0xf2ae	              repne scasb al, byte [rdi]	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x4000835	          0x48f7d1	                                 not rcx	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x4000838	      0x807c0bfe5c	         cmp byte [rbx + rcx - 2], 0x5c 	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400083d	            0x7513	                           jne 0x4000852	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400083f	      0x4d8d6c2408	                      lea r13, [r12 + 8]	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000844	          0x4d39ef	                            cmp r15, r13	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000847	     0xf8775ffffff	                            ja 0x40007c2	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x400084d	            0xeb03	                           jmp 0x4000852	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x400084f	          0x4d89ec	                            mov r12, r13	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000852	     0xfbfb424aa00	           movsx esi, word [rsp + 0xaa] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x400085a	     0xfb6bc24a800	           movzx edi, byte [rsp + 0xa8] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x4000862	          0x4889d9	                            mov rcx, rbx	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x4000865	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x400086d	      0xe80cf8ffff	                      call sym.save_stab	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x4000872	     0xfbf8c24aa00	           movsx ecx, word [rsp + 0xaa] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x400087a	     0xfb69424a800	           movzx edx, byte [rsp + 0xa8] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000882	          0x4989d9	                             mov r9, rbx	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000885	    0x4c8b84249000	              mov r8, qword [rsp + 0x90]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x400088d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000892	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000897	      0xe800000000	                          call 0x400089c	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x400089c	            0x85c0	                           test eax, eax	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x400089e	            0x750c	                           jne 0x40008ac	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008a0	      0xe871f8ffff	                   call sym.stab_context	       321	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_14
0x40008a5	      0xe896f7ffff	               call sym.free_saved_stabs	       322	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_15
0x40008aa	            0xeb14	                           jmp 0x40008c0	       322	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_15
0x40008ac	      0xbb01000000	                              mov ebx, 1	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008b1	        0x4983c408	                              add r12, 8	       274	rddbg.c	FUNCTION_3	FOR_1
0x40008b5	          0x4d39e7	                            cmp r15, r12	       274	rddbg.c	FUNCTION_3	FOR_1
0x40008b8	     0xf877ffeffff	                            ja 0x400073d	       274	rddbg.c	FUNCTION_3	FOR_1
0x40008be	            0xeb0a	                           jmp 0x40008ca	       274	rddbg.c	FUNCTION_3	FOR_1
0x40008c0	      0xb800000000	                              mov eax, 0	        63	rddbg.c	FUNCTION_1	IF_3	IF_4
0x40008c5	      0xe9b6000000	                           jmp 0x4000980	        63	rddbg.c	FUNCTION_1	IF_3	IF_4
0x40008ca	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	        63	rddbg.c	FUNCTION_1	IF_3	IF_4
0x40008cf	      0xe86cf7ffff	               call sym.free_saved_stabs	       332	rddbg.c	FUNCTION_3	CALL_16
0x40008d4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       334	rddbg.c	FUNCTION_3	IF_7
0x40008d9	          0x4885c0	                           test rax, rax	       334	rddbg.c	FUNCTION_3	IF_7
0x40008dc	            0x7415	                            je 0x40008f3	       334	rddbg.c	FUNCTION_3	IF_7
0x40008de	          0x4889c6	                            mov rsi, rax	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008e1	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008e6	      0xe800000000	                          call 0x40008eb	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008eb	            0x85c0	                           test eax, eax	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40008ed	     0xf8481000000	                            je 0x4000974	        61	rddbg.c	FUNCTION_1	IF_3	IF_4	CALL_4
0x40008f3	            0x85db	                           test ebx, ebx	        68	rddbg.c	FUNCTION_1	IF_5
0x40008f5	     0xf85b9000000	                           jne 0x40009b4	        68	rddbg.c	FUNCTION_1	IF_5
0x40008fb	        0x498b4708	                mov rax, qword [r15 + 8]	        69	rddbg.c	FUNCTION_1	IF_5	CALL_5
0x40008ff	        0x83780802	                  cmp dword [rax + 8], 2	        70	rddbg.c	FUNCTION_1	IF_5
0x4000903	     0xf859d000000	                           jne 0x40009a6	        70	rddbg.c	FUNCTION_1	IF_5
0x4000909	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	        70	rddbg.c	FUNCTION_1	IF_5
0x4000911	          0x4885c0	                           test rax, rax	        70	rddbg.c	FUNCTION_1	IF_5
0x4000914	     0xf8e8c000000	                           jle 0x40009a6	        70	rddbg.c	FUNCTION_1	IF_5
0x400091a	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x400091f	          0x4889c2	                            mov rdx, rax	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000922	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x400092a	          0x4c89ff	                            mov rdi, r15	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x400092d	      0xe800000000	                          call 0x4000932	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000932	            0x85c0	                           test eax, eax	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000934	            0x757e	                           jne 0x40009b4	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000936	            0xeb43	                           jmp 0x400097b	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000938	          0x498b1f	                    mov rbx, qword [r15]	        81	rddbg.c	FUNCTION_1	IF_7	CALL_9
0x400093b	      0xba05000000	                              mov edx, 5	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000940	      0xbe00000000	                              mov esi, 0	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000945	      0xbf00000000	                              mov edi, 0	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400094a	      0xe800000000	                          call 0x400094f	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400094f	          0x4889de	                            mov rsi, rbx	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000952	          0x4889c7	                            mov rdi, rax	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000955	      0xb800000000	                              mov eax, 0	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400095a	      0xe800000000	                          call 0x400095f	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400095f	      0xb800000000	                              mov eax, 0	        82	rddbg.c	FUNCTION_1	IF_7
0x4000964	            0xeb1a	                           jmp 0x4000980	        82	rddbg.c	FUNCTION_1	IF_7
0x4000966	      0xb800000000	                              mov eax, 0	        53	rddbg.c	FUNCTION_1	IF_1
0x400096b	            0xeb13	                           jmp 0x4000980	        53	rddbg.c	FUNCTION_1	IF_1
0x400096d	      0xb800000000	                              mov eax, 0	        57	rddbg.c	FUNCTION_1	IF_2
0x4000972	            0xeb0c	                           jmp 0x4000980	        57	rddbg.c	FUNCTION_1	IF_2
0x4000974	      0xb800000000	                              mov eax, 0	        63	rddbg.c	FUNCTION_1	IF_3	IF_4
0x4000979	            0xeb05	                           jmp 0x4000980	        63	rddbg.c	FUNCTION_1	IF_3	IF_4
0x400097b	      0xb800000000	                              mov eax, 0	        73	rddbg.c	FUNCTION_1	IF_5	IF_6
0x4000980	    0x488b9424b800	            mov rdx, qword [rsp + 0xb8] 	        86	rddbg.c	FUNCTION_1
0x4000988	    0x644833142528	                xor rdx, qword fs:[0x28]	        86	rddbg.c	FUNCTION_1
0x4000991	            0x742d	                            je 0x40009c0	        86	rddbg.c	FUNCTION_1
0x4000993	            0xeb26	                           jmp 0x40009bb	        86	rddbg.c	FUNCTION_1
0x4000995	      0xb800000000	                              mov eax, 0	        57	rddbg.c	FUNCTION_1	IF_2
0x400099a	            0xebe4	                           jmp 0x4000980	        57	rddbg.c	FUNCTION_1	IF_2
0x400099c	      0xe89ff6ffff	               call sym.free_saved_stabs	       332	rddbg.c	FUNCTION_3	CALL_16
0x40009a1	      0xe94dffffff	                           jmp 0x40008f3	       332	rddbg.c	FUNCTION_3	CALL_16
0x40009a6	      0xb800000000	                              mov eax, 0	        82	rddbg.c	FUNCTION_1	IF_7
0x40009ab	      0x837c247c00	               cmp dword [rsp + 0x7c], 0	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x40009b0	            0x75ce	                           jne 0x4000980	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x40009b2	            0xeb84	                           jmp 0x4000938	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x40009b4	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        85	rddbg.c	FUNCTION_1
0x40009b9	            0xebc5	                           jmp 0x4000980	        85	rddbg.c	FUNCTION_1
0x40009bb	      0xe800000000	                          call 0x40009c0	        86	rddbg.c	FUNCTION_1
0x40009c0	    0x4881c4c80000	                           add rsp, 0xc8	        86	rddbg.c	FUNCTION_1
0x40009c7	              0x5b	                                 pop rbx	        86	rddbg.c	FUNCTION_1
0x40009c8	              0x5d	                                 pop rbp	        86	rddbg.c	FUNCTION_1
0x40009c9	            0x415c	                                 pop r12	        86	rddbg.c	FUNCTION_1
0x40009cb	            0x415d	                                 pop r13	        86	rddbg.c	FUNCTION_1
0x40009cd	            0x415e	                                 pop r14	        86	rddbg.c	FUNCTION_1
0x40009cf	            0x415f	                                 pop r15	        86	rddbg.c	FUNCTION_1
0x40009d1	              0xc3	                                     ret	        86	rddbg.c	FUNCTION_1
stab_context	DO,1:WHILE,0:SWITCH,0:IF,4:ELSE,2:functions,0:CALL,3:FOR,0	84
0x4000116	            0x4154	                                push r12	       376	rddbg.c	FUNCTION_5
0x4000118	              0x55	                                push rbp	       376	rddbg.c	FUNCTION_5
0x4000119	              0x53	                                push rbx	       376	rddbg.c	FUNCTION_5
0x400011a	      0xba05000000	                              mov edx, 5	       379	rddbg.c	FUNCTION_5	CALL_1
0x400011f	      0xbe00000000	                              mov esi, 0	       379	rddbg.c	FUNCTION_5	CALL_1
0x4000124	      0xbf00000000	                              mov edi, 0	       379	rddbg.c	FUNCTION_5	CALL_1
0x4000129	      0xe800000000	                          call 0x400012e	       379	rddbg.c	FUNCTION_5	CALL_1
0x400012e	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x4000131	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000136	    0x488b3d000000	            mov rdi, qword [0x0400013d] 	        97	stdio2.h	CALL_14
0x400013d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000142	      0xe800000000	                          call 0x4000147	        97	stdio2.h	CALL_14
0x4000147	    0x488b0d000000	            mov rcx, qword [0x0400014e] 	        97	stdio2.h	CALL_14
0x400014e	      0xba1e000000	                           mov edx, 0x1e	        97	stdio2.h	CALL_14
0x4000153	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000158	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x400015d	      0xe800000000	                          call 0x4000162	        97	stdio2.h	CALL_14
0x4000162	    0x448b25000000	           mov r12d, dword [0x04000169] 	       382	rddbg.c	FUNCTION_5
0x4000169	          0x4963c4	                        movsxd rax, r12d	       387	rddbg.c	FUNCTION_5	DO_1
0x400016c	        0x488d1c40	                  lea rbx, [rax + rax*2]	       387	rddbg.c	FUNCTION_5	DO_1
0x4000170	    0x488d2cdd0000	                        lea rbp, [rbx*8]	       387	rddbg.c	FUNCTION_5	DO_1
0x4000178	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x400017d	     0xf84eb000000	                            je 0x400026e	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000183	    0x8b3cdd000000	                  mov edi, dword [rbx*8]	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_2
0x400018a	      0xe800000000	                          call 0x400018f	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_2
0x400018f	          0x4885c0	                           test rax, rax	       393	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_2
0x4000192	            0x7420	                            je 0x40001b4	       393	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_2
0x4000194	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_14
0x4000197	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x400019c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40001a1	    0x488b3d000000	            mov rdi, qword [0x040001a8] 	        97	stdio2.h	CALL_14
0x40001a8	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x40001ad	      0xe800000000	                          call 0x40001b2	        97	stdio2.h	CALL_14
0x40001b2	            0xeb43	                           jmp 0x40001f7	        97	stdio2.h	CALL_14
0x40001b4	    0x8b0cdd000000	                  mov ecx, dword [rbx*8]	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x40001bb	            0x85c9	                           test ecx, ecx	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x40001bd	            0x751d	                           jne 0x40001dc	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x40001bf	    0x488b0d000000	            mov rcx, qword [0x040001c6] 	        97	stdio2.h	CALL_14
0x40001c6	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_14
0x40001cb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40001d0	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x40001d5	      0xe800000000	                          call 0x40001da	        97	stdio2.h	CALL_14
0x40001da	            0xeb1b	                           jmp 0x40001f7	        97	stdio2.h	CALL_14
0x40001dc	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40001e1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40001e6	    0x488b3d000000	            mov rdi, qword [0x040001ed] 	        97	stdio2.h	CALL_14
0x40001ed	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x40001f2	      0xe800000000	                          call 0x40001f7	        97	stdio2.h	CALL_14
0x40001f7	          0x8b4d04	                mov ecx, dword [rbp + 4]	        97	stdio2.h	CALL_14
0x40001fa	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40001ff	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000204	    0x488b3d000000	            mov rdi, qword [0x0400020b] 	        97	stdio2.h	CALL_14
0x400020b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000210	      0xe800000000	                          call 0x4000215	        97	stdio2.h	CALL_14
0x4000215	        0x488b4d08	                mov rcx, qword [rbp + 8]	        97	stdio2.h	CALL_14
0x4000219	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x400021e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000223	    0x488b3d000000	            mov rdi, qword [0x0400022a] 	        97	stdio2.h	CALL_14
0x400022a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x400022f	      0xe800000000	                          call 0x4000234	        97	stdio2.h	CALL_14
0x4000234	    0x833cdd000000	                    cmp dword [rbx*8], 0	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x400023c	            0x741f	                            je 0x400025d	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x400023e	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        97	stdio2.h	CALL_14
0x4000242	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000247	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400024c	    0x488b3d000000	            mov rdi, qword [0x04000253] 	        97	stdio2.h	CALL_14
0x4000253	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000258	      0xe800000000	                          call 0x400025d	        97	stdio2.h	CALL_14
0x400025d	    0x488b35000000	            mov rsi, qword [0x04000264] 	        97	stdio2.h	CALL_14
0x4000264	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_14
0x4000269	      0xe800000000	                          call 0x400026e	        97	stdio2.h	CALL_14
0x400026e	      0x418d442401	                      lea eax, [r12 + 1]	       405	rddbg.c	FUNCTION_5	DO_1
0x4000273	              0x99	                                     cdq	       405	rddbg.c	FUNCTION_5	DO_1
0x4000274	          0xc1ea1c	                           shr edx, 0x1c	       405	rddbg.c	FUNCTION_5	DO_1
0x4000277	             0x1d0	                            add eax, edx	       405	rddbg.c	FUNCTION_5	DO_1
0x4000279	          0x83e00f	                            and eax, 0xf	       405	rddbg.c	FUNCTION_5	DO_1
0x400027c	            0x29d0	                            sub eax, edx	       405	rddbg.c	FUNCTION_5	DO_1
0x400027e	          0x4189c4	                           mov r12d, eax	       405	rddbg.c	FUNCTION_5	DO_1
0x4000281	    0x3b0500000000	            cmp eax, dword [0x04000287] 	       407	rddbg.c	FUNCTION_5
0x4000287	     0xf85dcfeffff	                           jne 0x4000169	       407	rddbg.c	FUNCTION_5
0x400028d	              0x5b	                                 pop rbx	       408	rddbg.c	FUNCTION_5
0x400028e	              0x5d	                                 pop rbp	       408	rddbg.c	FUNCTION_5
0x400028f	            0x415c	                                 pop r12	       408	rddbg.c	FUNCTION_5
0x4000291	              0xc3	                                     ret	       408	rddbg.c	FUNCTION_5
free_saved_stabs	DO,0:WHILE,0:SWITCH,0:IF,1:ELSE,0:functions,0:CALL,1:FOR,1	18
0x4000040	              0x55	                                push rbp	       414	rddbg.c	FUNCTION_6
0x4000041	              0x53	                                push rbx	       414	rddbg.c	FUNCTION_6
0x4000042	        0x4883ec08	                              sub rsp, 8	       414	rddbg.c	FUNCTION_6
0x4000046	      0xbb00000000	                              mov ebx, 0	       414	rddbg.c	FUNCTION_6
0x400004b	      0xbd00000000	                              mov ebp, 0	       414	rddbg.c	FUNCTION_6
0x4000050	          0x488b3b	                    mov rdi, qword [rbx]	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000053	          0x4885ff	                           test rdi, rdi	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000056	            0x740c	                            je 0x4000064	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000058	      0xe800000000	                          call 0x400005d	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400005d	    0x48c703000000	                      mov qword [rbx], 0	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000064	        0x4883c318	                           add rbx, 0x18	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000068	          0x4839eb	                            cmp rbx, rbp	       417	rddbg.c	FUNCTION_6	FOR_1
0x400006b	            0x75e3	                           jne 0x4000050	       417	rddbg.c	FUNCTION_6	FOR_1
0x400006d	    0xc70500000000	               mov dword [0x04000077], 0	       426	rddbg.c	FUNCTION_6
0x4000077	        0x4883c408	                              add rsp, 8	       427	rddbg.c	FUNCTION_6
0x400007b	              0x5b	                                 pop rbx	       427	rddbg.c	FUNCTION_6
0x400007c	              0x5d	                                 pop rbp	       427	rddbg.c	FUNCTION_6
0x400007d	              0xc3	                                     ret	       427	rddbg.c	FUNCTION_6
save_stab	DO,0:WHILE,0:SWITCH,0:IF,1:ELSE,0:functions,0:CALL,2:FOR,0	44
0x400007e	            0x4157	                                push r15	       362	rddbg.c	FUNCTION_4
0x4000080	            0x4156	                                push r14	       362	rddbg.c	FUNCTION_4
0x4000082	            0x4155	                                push r13	       362	rddbg.c	FUNCTION_4
0x4000084	            0x4154	                                push r12	       362	rddbg.c	FUNCTION_4
0x4000086	              0x55	                                push rbp	       362	rddbg.c	FUNCTION_4
0x4000087	              0x53	                                push rbx	       362	rddbg.c	FUNCTION_4
0x4000088	        0x4883ec08	                              sub rsp, 8	       362	rddbg.c	FUNCTION_4
0x400008c	          0x4189fe	                           mov r14d, edi	       362	rddbg.c	FUNCTION_4
0x400008f	          0x4189f5	                           mov r13d, esi	       362	rddbg.c	FUNCTION_4
0x4000092	          0x4989d4	                            mov r12, rdx	       362	rddbg.c	FUNCTION_4
0x4000095	          0x4889cd	                            mov rbp, rcx	       362	rddbg.c	FUNCTION_4
0x4000098	    0x8b1d00000000	            mov ebx, dword [0x0400009e] 	       363	rddbg.c	FUNCTION_4	IF_1
0x400009e	          0x4863c3	                         movsxd rax, ebx	       363	rddbg.c	FUNCTION_4	IF_1
0x40000a1	        0x488d0440	                  lea rax, [rax + rax*2]	       363	rddbg.c	FUNCTION_4	IF_1
0x40000a5	    0x488b3cc50000	                  mov rdi, qword [rax*8]	       363	rddbg.c	FUNCTION_4	IF_1
0x40000ad	          0x4885ff	                           test rdi, rdi	       363	rddbg.c	FUNCTION_4	IF_1
0x40000b0	            0x7405	                            je 0x40000b7	       363	rddbg.c	FUNCTION_4	IF_1
0x40000b2	      0xe800000000	                          call 0x40000b7	       364	rddbg.c	FUNCTION_4	CALL_1
0x40000b7	          0x4863db	                         movsxd rbx, ebx	       365	rddbg.c	FUNCTION_4
0x40000ba	        0x4c8d3c1b	                    lea r15, [rbx + rbx]	       365	rddbg.c	FUNCTION_4
0x40000be	        0x498d041f	                    lea rax, [r15 + rbx]	       365	rddbg.c	FUNCTION_4
0x40000c2	    0x448934c50000	                 mov dword [rax*8], r14d	       365	rddbg.c	FUNCTION_4
0x40000ca	    0x44892cc50000	                 mov dword [rax*8], r13d	       366	rddbg.c	FUNCTION_4
0x40000d2	    0x4c8924c50000	                  mov qword [rax*8], r12	       367	rddbg.c	FUNCTION_4
0x40000da	          0x4889ef	                            mov rdi, rbp	       368	rddbg.c	FUNCTION_4	CALL_2
0x40000dd	      0xe800000000	                          call 0x40000e2	       368	rddbg.c	FUNCTION_4	CALL_2
0x40000e2	          0x4c01fb	                            add rbx, r15	       368	rddbg.c	FUNCTION_4	CALL_2
0x40000e5	    0x488904dd0000	                  mov qword [rbx*8], rax	       368	rddbg.c	FUNCTION_4	CALL_2
0x40000ed	    0x8b0500000000	            mov eax, dword [0x040000f3] 	       369	rddbg.c	FUNCTION_4
0x40000f3	          0x83c001	                              add eax, 1	       369	rddbg.c	FUNCTION_4
0x40000f6	              0x99	                                     cdq	       369	rddbg.c	FUNCTION_4
0x40000f7	          0xc1ea1c	                           shr edx, 0x1c	       369	rddbg.c	FUNCTION_4
0x40000fa	             0x1d0	                            add eax, edx	       369	rddbg.c	FUNCTION_4
0x40000fc	          0x83e00f	                            and eax, 0xf	       369	rddbg.c	FUNCTION_4
0x40000ff	            0x29d0	                            sub eax, edx	       369	rddbg.c	FUNCTION_4
0x4000101	    0x890500000000	            mov dword [0x04000107], eax 	       369	rddbg.c	FUNCTION_4
0x4000107	        0x4883c408	                              add rsp, 8	       370	rddbg.c	FUNCTION_4
0x400010b	              0x5b	                                 pop rbx	       370	rddbg.c	FUNCTION_4
0x400010c	              0x5d	                                 pop rbp	       370	rddbg.c	FUNCTION_4
0x400010d	            0x415c	                                 pop r12	       370	rddbg.c	FUNCTION_4
0x400010f	            0x415d	                                 pop r13	       370	rddbg.c	FUNCTION_4
0x4000111	            0x415e	                                 pop r14	       370	rddbg.c	FUNCTION_4
0x4000113	            0x415f	                                 pop r15	       370	rddbg.c	FUNCTION_4
0x4000115	              0xc3	                                     ret	       370	rddbg.c	FUNCTION_4
