thread_fsm_should_notify_stop	DO,0:FOR,0:ELSE,0:IF,1:functions,0:WHILE,0:CALL,1:SWITCH,0	8
0x4000130	          0x488b07	                    mov rax, qword [rdi]	       106	thread-fsm.c	FUNCTION_9	IF_1
0x4000133	        0x488b4028	            mov rax, qword [rax + 0x28] 	       106	thread-fsm.c	FUNCTION_9	IF_1
0x4000137	          0x4885c0	                           test rax, rax	       106	thread-fsm.c	FUNCTION_9	IF_1
0x400013a	            0x7404	                            je 0x4000140	       106	thread-fsm.c	FUNCTION_9	IF_1
0x400013c	            0xffe0	                                 jmp rax	       107	thread-fsm.c	FUNCTION_9	CALL_1
0x400013e	            0x6690	                                     nop	       107	thread-fsm.c	FUNCTION_9	CALL_1
0x4000140	      0xb801000000	                              mov eax, 1	       109	thread-fsm.c	FUNCTION_9
0x4000145	              0xc3	                                     ret	       109	thread-fsm.c	FUNCTION_9
thread_fsm_return_value	DO,0:FOR,0:ELSE,0:IF,1:functions,0:WHILE,0:CALL,1:SWITCH,0	8
0x40000b0	          0x488b07	                    mov rax, qword [rdi]	        68	thread-fsm.c	FUNCTION_5	IF_1
0x40000b3	        0x488b4018	            mov rax, qword [rax + 0x18] 	        68	thread-fsm.c	FUNCTION_5	IF_1
0x40000b7	          0x4885c0	                           test rax, rax	        68	thread-fsm.c	FUNCTION_5	IF_1
0x40000ba	            0x7404	                            je 0x40000c0	        68	thread-fsm.c	FUNCTION_5	IF_1
0x40000bc	            0xffe0	                                 jmp rax	        69	thread-fsm.c	FUNCTION_5	CALL_1
0x40000be	            0x6690	                                     nop	        69	thread-fsm.c	FUNCTION_5	CALL_1
0x40000c0	            0x31c0	                            xor eax, eax	        71	thread-fsm.c	FUNCTION_5
0x40000c2	              0xc3	                                     ret	        71	thread-fsm.c	FUNCTION_5
thread_fsm_set_finished	DO,0:FOR,0:ELSE,0:IF,0:functions,0:WHILE,0:CALL,0:SWITCH,0	2
0x40000d0	    0xc74708010000	                  mov dword [rdi + 8], 1	        78	thread-fsm.c	FUNCTION_6
0x40000d7	              0xc3	                                     ret	        78	thread-fsm.c	FUNCTION_6
thread_fsm_ctor	DO,0:FOR,0:ELSE,0:IF,0:functions,0:WHILE,0:CALL,0:SWITCH,0	4
0x4000040	        0x48895710	            mov qword [rdi + 0x10], rdx 	        28	thread-fsm.c	FUNCTION_1
0x4000044	    0xc74708000000	                  mov dword [rdi + 8], 0	        29	thread-fsm.c	FUNCTION_1
0x400004b	          0x488937	                    mov qword [rdi], rsi	        30	thread-fsm.c	FUNCTION_1
0x400004e	              0xc3	                                     ret	        30	thread-fsm.c	FUNCTION_1
thread_fsm_should_stop	DO,0:FOR,0:ELSE,0:IF,0:functions,0:WHILE,0:CALL,1:SWITCH,0	3
0x40000a0	          0x488b07	                    mov rax, qword [rdi]	        60	thread-fsm.c	FUNCTION_4	CALL_1
0x40000a3	        0x488b4010	            mov rax, qword [rax + 0x10] 	        60	thread-fsm.c	FUNCTION_4	CALL_1
0x40000a7	            0xffe0	                                 jmp rax	        60	thread-fsm.c	FUNCTION_4	CALL_1
thread_fsm_async_reply_reason	DO,0:FOR,0:ELSE,0:IF,0:functions,0:WHILE,0:CALL,3:SWITCH,0	16
0x40000f0	          0x8b5708	                mov edx, dword [rdi + 8]	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x40000f3	            0x85d2	                           test edx, edx	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x40000f5	            0x7409	                            je 0x4000100	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x40000f7	          0x488b07	                    mov rax, qword [rdi]	        98	thread-fsm.c	FUNCTION_8	CALL_3
0x40000fa	        0x488b4020	            mov rax, qword [rax + 0x20] 	        98	thread-fsm.c	FUNCTION_8	CALL_3
0x40000fe	            0xffe0	                                 jmp rax	        98	thread-fsm.c	FUNCTION_8	CALL_3
0x4000100	              0x50	                                push rax	        93	thread-fsm.c	FUNCTION_8
0x4000101	      0xbf00000000	                              mov edi, 0	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x4000106	      0xe800000000	                          call 0x400010b	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x400010b	    0x41b800000000	                              mov r8d, 0	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x4000111	          0x4889c2	                            mov rdx, rax	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x4000114	      0xb900000000	                              mov ecx, 0	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x4000119	      0xbe60000000	                           mov esi, 0x60	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x400011e	      0xbf00000000	                              mov edi, 0	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x4000123	            0x31c0	                            xor eax, eax	        96	thread-fsm.c	FUNCTION_8	CALL_2
0x4000125	      0xe800000000	                          call 0x400012a	        96	thread-fsm.c	FUNCTION_8	CALL_2
thread_fsm_delete	DO,0:FOR,0:ELSE,0:IF,2:functions,0:WHILE,0:CALL,2:SWITCH,0	14
0x4000050	          0x4885ff	                           test rdi, rdi	        38	thread-fsm.c	FUNCTION_2	IF_1
0x4000053	            0x741b	                            je 0x4000070	        38	thread-fsm.c	FUNCTION_2	IF_1
0x4000055	              0x53	                                push rbx	        37	thread-fsm.c	FUNCTION_2
0x4000056	          0x488b07	                    mov rax, qword [rdi]	        40	thread-fsm.c	FUNCTION_2	IF_1	IF_2
0x4000059	          0x4889fb	                            mov rbx, rdi	        40	thread-fsm.c	FUNCTION_2	IF_1	IF_2
0x400005c	          0x488b00	                    mov rax, qword [rax]	        40	thread-fsm.c	FUNCTION_2	IF_1	IF_2
0x400005f	          0x4885c0	                           test rax, rax	        40	thread-fsm.c	FUNCTION_2	IF_1	IF_2
0x4000062	            0x7402	                            je 0x4000066	        40	thread-fsm.c	FUNCTION_2	IF_1	IF_2
0x4000064	            0xffd0	                                call rax	        41	thread-fsm.c	FUNCTION_2	IF_1	CALL_1
0x4000066	          0x4889df	                            mov rdi, rbx	        60	common-utils.h	FUNCTION_10
0x4000069	              0x5b	                                 pop rbx	        44	thread-fsm.c	FUNCTION_2
0x400006a	      0xe900000000	                           jmp 0x400006f	        60	common-utils.h	FUNCTION_10
0x400006f	              0x90	                                     nop	        60	common-utils.h	FUNCTION_10
0x4000070	            0xf3c3	                                     ret	        60	common-utils.h	FUNCTION_10
thread_fsm_clean_up	DO,0:FOR,0:ELSE,0:IF,1:functions,0:WHILE,0:CALL,1:SWITCH,0	7
0x4000080	          0x488b07	                    mov rax, qword [rdi]	        51	thread-fsm.c	FUNCTION_3	IF_1
0x4000083	        0x488b4008	                mov rax, qword [rax + 8]	        51	thread-fsm.c	FUNCTION_3	IF_1
0x4000087	          0x4885c0	                           test rax, rax	        51	thread-fsm.c	FUNCTION_3	IF_1
0x400008a	            0x7404	                            je 0x4000090	        51	thread-fsm.c	FUNCTION_3	IF_1
0x400008c	            0xffe0	                                 jmp rax	        52	thread-fsm.c	FUNCTION_3	CALL_1
0x400008e	            0x6690	                                     nop	        52	thread-fsm.c	FUNCTION_3	CALL_1
0x4000090	            0xf3c3	                                     ret	        52	thread-fsm.c	FUNCTION_3	CALL_1
