fibheap_consolidate	functions,0:ELSE,0:FOR,1:IF,3:SWITCH,0:CALL,6:WHILE,2:DO,0	104
0x40000cf	            0x4155	                                push r13	       357	fibheap.c	FUNCTION_19
0x40000d1	            0x4154	                                push r12	       357	fibheap.c	FUNCTION_19
0x40000d3	              0x55	                                push rbp	       357	fibheap.c	FUNCTION_19
0x40000d4	              0x53	                                push rbx	       357	fibheap.c	FUNCTION_19
0x40000d5	    0x4881ec180200	                          sub rsp, 0x218	       357	fibheap.c	FUNCTION_19
0x40000dc	          0x4889fd	                            mov rbp, rdi	       357	fibheap.c	FUNCTION_19
0x40000df	    0x64488b042528	                mov rax, qword fs:[0x28]	       357	fibheap.c	FUNCTION_19
0x40000e8	    0x488984240802	            mov qword [rsp + 0x208], rax	       357	fibheap.c	FUNCTION_19
0x40000f0	            0x31c0	                            xor eax, eax	       357	fibheap.c	FUNCTION_19
0x40000f2	      0xb941000000	                           mov ecx, 0x41	        90	string3.h	FUNCTION_28	CALL_6
0x40000f7	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_28	CALL_6
0x40000fa	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_28	CALL_6
0x40000fd	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000101	          0x4885db	                           test rbx, rbx	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000104	     0xf84df000000	                            je 0x40001e9	       370	fibheap.c	FUNCTION_19	WHILE_1
0x400010a	        0x48395b10	            cmp qword [rbx + 0x10], rbx 	       348	fibheap.c	FUNCTION_18	IF_1
0x400010e	            0x750a	                           jne 0x400011a	       348	fibheap.c	FUNCTION_18	IF_1
0x4000110	    0x48c745100000	               mov qword [rbp + 0x10], 0	       349	fibheap.c	FUNCTION_18	IF_1
0x4000118	            0xeb0c	                           jmp 0x4000126	       349	fibheap.c	FUNCTION_18	IF_1
0x400011a	          0x4889df	                            mov rdi, rbx	       351	fibheap.c	FUNCTION_18	CALL_1
0x400011d	      0xe863ffffff	                 call sym.fibnode_remove	       351	fibheap.c	FUNCTION_18	CALL_1
0x4000122	        0x48894510	            mov qword [rbp + 0x10], rax 	       351	fibheap.c	FUNCTION_18	CALL_1
0x4000126	          0x8b7330	            mov esi, dword [rbx + 0x30] 	       374	fibheap.c	FUNCTION_19	WHILE_1
0x4000129	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       374	fibheap.c	FUNCTION_19	WHILE_1
0x400012f	          0x4863c6	                         movsxd rax, esi	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000132	        0x488b04c4	            mov rax, qword [rsp + rax*8]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000136	          0x4885c0	                           test rax, rax	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000139	     0xf8496000000	                            je 0x40001d5	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400013f	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x4000143	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x4000147	          0x4839d1	                            cmp rcx, rdx	        78	fibheap.c	FUNCTION_3	IF_1
0x400014a	            0x7c0b	                            jl 0x4000157	        78	fibheap.c	FUNCTION_3	IF_1
0x400014c	            0x7e09	                           jle 0x4000157	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x400014e	          0x4889c2	                            mov rdx, rax	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x4000151	          0x4889d8	                            mov rax, rbx	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x4000154	          0x4889d3	                            mov rbx, rdx	       378	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2	IF_1	CALL_3
0x4000157	        0x488b5308	                mov rdx, qword [rbx + 8]	       406	fibheap.c	FUNCTION_20	IF_1
0x400015b	          0x4885d2	                           test rdx, rdx	       406	fibheap.c	FUNCTION_20	IF_1
0x400015e	            0x7506	                           jne 0x4000166	       406	fibheap.c	FUNCTION_20	IF_1
0x4000160	        0x48894308	                mov qword [rbx + 8], rax	       407	fibheap.c	FUNCTION_20	IF_1
0x4000164	            0xeb33	                           jmp 0x4000199	       407	fibheap.c	FUNCTION_20	IF_1
0x4000166	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       409	fibheap.c	FUNCTION_20	ELSE_1
0x400016a	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x400016e	          0x4839d1	                            cmp rcx, rdx	       449	fibheap.c	FUNCTION_23	IF_1
0x4000171	            0x7512	                           jne 0x4000185	       449	fibheap.c	FUNCTION_23	IF_1
0x4000173	        0x48894118	             mov qword [rcx + 0x18], rax	       451	fibheap.c	FUNCTION_23	IF_1
0x4000177	        0x48894110	             mov qword [rcx + 0x10], rax	       452	fibheap.c	FUNCTION_23	IF_1
0x400017b	        0x48894818	             mov qword [rax + 0x18], rcx	       453	fibheap.c	FUNCTION_23	IF_1
0x400017f	        0x48894810	             mov qword [rax + 0x10], rcx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000183	            0xeb14	                           jmp 0x4000199	       454	fibheap.c	FUNCTION_23	IF_1
0x4000185	        0x48894818	             mov qword [rax + 0x18], rcx	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000189	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x400018d	        0x48894110	             mov qword [rcx + 0x10], rax	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000191	        0x48894218	             mov qword [rdx + 0x18], rax	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000195	        0x48895010	             mov qword [rax + 0x10], rdx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x4000199	          0x488918	                    mov qword [rax], rbx	       410	fibheap.c	FUNCTION_20
0x400019c	          0x8b5330	            mov edx, dword [rbx + 0x30] 	       411	fibheap.c	FUNCTION_20
0x400019f	          0x8d4a01	                      lea ecx, [rdx + 1]	       411	fibheap.c	FUNCTION_20
0x40001a2	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	       411	fibheap.c	FUNCTION_20
0x40001a8	    0x81e200000080	                     and edx, 0x80000000	       411	fibheap.c	FUNCTION_20
0x40001ae	             0x9ca	                             or edx, ecx	       411	fibheap.c	FUNCTION_20
0x40001b0	          0x895330	             mov dword [rbx + 0x30], edx	       411	fibheap.c	FUNCTION_20
0x40001b3	        0x8060337f	             and byte [rax + 0x33], 0x7f	       412	fibheap.c	FUNCTION_20
0x40001b7	          0x4863c6	                         movsxd rax, esi	       386	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001ba	    0x48c704c40000	              mov qword [rsp + rax*8], 0	       386	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001c2	          0x83c601	                              add esi, 1	       387	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001c5	          0x4863c6	                         movsxd rax, esi	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001c8	        0x488b04c4	            mov rax, qword [rsp + rax*8]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001cc	          0x4885c0	                           test rax, rax	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001cf	     0xf856affffff	                           jne 0x400013f	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001d5	          0x4863f6	                         movsxd rsi, esi	       389	fibheap.c	FUNCTION_19	WHILE_1
0x40001d8	        0x48891cf4	            mov qword [rsp + rsi*8], rbx	       389	fibheap.c	FUNCTION_19	WHILE_1
0x40001dc	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40001e0	          0x4885db	                           test rbx, rbx	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40001e3	     0xf8521ffffff	                           jne 0x400010a	       370	fibheap.c	FUNCTION_19	WHILE_1
0x40001e9	    0x48c745080000	                  mov qword [rbp + 8], 0	       391	fibheap.c	FUNCTION_19
0x40001f1	          0x4889e3	                            mov rbx, rsp	       391	fibheap.c	FUNCTION_19
0x40001f4	    0x4c8dac240802	                  lea r13, [rsp + 0x208]	       391	fibheap.c	FUNCTION_19
0x40001fc	          0x4c8b23	                    mov r12, qword [rbx]	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x40001ff	          0x4d85e4	                           test r12, r12	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x4000202	            0x7423	                            je 0x4000227	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x4000204	          0x4c89e6	                            mov rsi, r12	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x4000207	          0x4889ef	                            mov rdi, rbp	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x400020a	      0xe831feffff	               call sym.fibheap_ins_root	       395	fibheap.c	FUNCTION_19	FOR_1	IF_2	CALL_5
0x400020f	        0x488b4508	                mov rax, qword [rbp + 8]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000213	          0x4885c0	                           test rax, rax	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000216	            0x740b	                            je 0x4000223	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x4000218	        0x488b4020	            mov rax, qword [rax + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x400021c	      0x4939442420	            cmp qword [r12 + 0x20], rax 	        78	fibheap.c	FUNCTION_3	IF_1
0x4000221	            0x7d04	                           jge 0x4000227	        78	fibheap.c	FUNCTION_3	IF_1
0x4000223	        0x4c896508	                mov qword [rbp + 8], r12	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x4000227	        0x4883c308	                              add rbx, 8	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x400022b	          0x4c39eb	                            cmp rbx, r13	       392	fibheap.c	FUNCTION_19	FOR_1
0x400022e	            0x75cc	                           jne 0x40001fc	       392	fibheap.c	FUNCTION_19	FOR_1
0x4000230	    0x488b84240802	           mov rax, qword [rsp + 0x208] 	       399	fibheap.c	FUNCTION_19
0x4000238	    0x644833042528	                xor rax, qword fs:[0x28]	       399	fibheap.c	FUNCTION_19
0x4000241	            0x7405	                            je 0x4000248	       399	fibheap.c	FUNCTION_19
0x4000243	      0xe800000000	                          call 0x4000248	       399	fibheap.c	FUNCTION_19
0x4000248	    0x4881c4180200	                          add rsp, 0x218	       399	fibheap.c	FUNCTION_19
0x400024f	              0x5b	                                 pop rbx	       399	fibheap.c	FUNCTION_19
0x4000250	              0x5d	                                 pop rbp	       399	fibheap.c	FUNCTION_19
0x4000251	            0x415c	                                 pop r12	       399	fibheap.c	FUNCTION_19
0x4000253	            0x415d	                                 pop r13	       399	fibheap.c	FUNCTION_19
0x4000255	              0xc3	                                     ret	       399	fibheap.c	FUNCTION_19
fibheap_delete	functions,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,3:WHILE,1:DO,0	14
0x40005ec	              0x53	                                push rbx	       275	fibheap.c	FUNCTION_14
0x40005ed	          0x4889fb	                            mov rbx, rdi	       275	fibheap.c	FUNCTION_14
0x40005f0	      0x48837f0800	                  cmp qword [rdi + 8], 0	       276	fibheap.c	FUNCTION_14	WHILE_1
0x40005f5	            0x7417	                            je 0x400060e	       276	fibheap.c	FUNCTION_14	WHILE_1
0x40005f7	          0x4889df	                            mov rdi, rbx	       277	fibheap.c	FUNCTION_14	CALL_2
0x40005fa	      0xe857fcffff	          call sym.fibheap_extr_min_node	       277	fibheap.c	FUNCTION_14	CALL_2
0x40005ff	          0x4889c7	                            mov rdi, rax	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000602	      0xe800000000	                          call 0x4000607	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000607	      0x48837b0800	                  cmp qword [rbx + 8], 0	       276	fibheap.c	FUNCTION_14	WHILE_1
0x400060c	            0x75e9	                           jne 0x40005f7	       276	fibheap.c	FUNCTION_14	WHILE_1
0x400060e	          0x4889df	                            mov rdi, rbx	       279	fibheap.c	FUNCTION_14	CALL_3
0x4000611	      0xe800000000	                          call 0x4000616	       279	fibheap.c	FUNCTION_14	CALL_3
0x4000616	              0x5b	                                 pop rbx	       280	fibheap.c	FUNCTION_14
0x4000617	              0xc3	                                     ret	       280	fibheap.c	FUNCTION_14
fibheap_insert	functions,0:ELSE,0:FOR,0:IF,1:SWITCH,0:CALL,2:WHILE,0:DO,0	34
0x400030d	            0x4155	                                push r13	        99	fibheap.c	FUNCTION_5
0x400030f	            0x4154	                                push r12	        99	fibheap.c	FUNCTION_5
0x4000311	              0x55	                                push rbp	        99	fibheap.c	FUNCTION_5
0x4000312	              0x53	                                push rbx	        99	fibheap.c	FUNCTION_5
0x4000313	        0x4883ec08	                              sub rsp, 8	        99	fibheap.c	FUNCTION_5
0x4000317	          0x4889fd	                            mov rbp, rdi	        99	fibheap.c	FUNCTION_5
0x400031a	          0x4989f4	                            mov r12, rsi	        99	fibheap.c	FUNCTION_5
0x400031d	          0x4989d5	                            mov r13, rdx	        99	fibheap.c	FUNCTION_5
0x4000320	      0xbe38000000	                           mov esi, 0x38	        68	fibheap.c	FUNCTION_2	CALL_1
0x4000325	      0xbf01000000	                              mov edi, 1	        68	fibheap.c	FUNCTION_2	CALL_1
0x400032a	      0xe800000000	                          call 0x400032f	        68	fibheap.c	FUNCTION_2	CALL_1
0x400032f	          0x4889c3	                            mov rbx, rax	        68	fibheap.c	FUNCTION_2	CALL_1
0x4000332	        0x48894010	             mov qword [rax + 0x10], rax	        69	fibheap.c	FUNCTION_2
0x4000336	        0x48894018	             mov qword [rax + 0x18], rax	        70	fibheap.c	FUNCTION_2
0x400033a	        0x4c896828	             mov qword [rax + 0x28], r13	       106	fibheap.c	FUNCTION_5
0x400033e	        0x4c896020	             mov qword [rax + 0x20], r12	       107	fibheap.c	FUNCTION_5
0x4000342	          0x4889c6	                            mov rsi, rax	       110	fibheap.c	FUNCTION_5	CALL_2
0x4000345	          0x4889ef	                            mov rdi, rbp	       110	fibheap.c	FUNCTION_5	CALL_2
0x4000348	      0xe8f3fcffff	               call sym.fibheap_ins_root	       110	fibheap.c	FUNCTION_5	CALL_2
0x400034d	        0x488b4508	                mov rax, qword [rbp + 8]	       114	fibheap.c	FUNCTION_5	IF_1
0x4000351	          0x4885c0	                           test rax, rax	       114	fibheap.c	FUNCTION_5	IF_1
0x4000354	            0x740a	                            je 0x4000360	       114	fibheap.c	FUNCTION_5	IF_1
0x4000356	        0x488b4020	            mov rax, qword [rax + 0x20] 	       114	fibheap.c	FUNCTION_5	IF_1
0x400035a	        0x48394320	            cmp qword [rbx + 0x20], rax 	       114	fibheap.c	FUNCTION_5	IF_1
0x400035e	            0x7d04	                           jge 0x4000364	       114	fibheap.c	FUNCTION_5	IF_1
0x4000360	        0x48895d08	                mov qword [rbp + 8], rbx	       115	fibheap.c	FUNCTION_5	IF_1
0x4000364	      0x4883450001	                      add qword [rbp], 1	       117	fibheap.c	FUNCTION_5
0x4000369	          0x4889d8	                            mov rax, rbx	       120	fibheap.c	FUNCTION_5
0x400036c	        0x4883c408	                              add rsp, 8	       120	fibheap.c	FUNCTION_5
0x4000370	              0x5b	                                 pop rbx	       120	fibheap.c	FUNCTION_5
0x4000371	              0x5d	                                 pop rbp	       120	fibheap.c	FUNCTION_5
0x4000372	            0x415c	                                 pop r12	       120	fibheap.c	FUNCTION_5
0x4000374	            0x415d	                                 pop r13	       120	fibheap.c	FUNCTION_5
0x4000376	              0xc3	                                     ret	       120	fibheap.c	FUNCTION_5
fibheap_ins_root	functions,0:ELSE,0:FOR,0:IF,1:SWITCH,0:CALL,1:WHILE,0:DO,0	21
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x4000044	          0x4885c0	                           test rax, rax	       331	fibheap.c	FUNCTION_17	IF_1
0x4000047	            0x750d	                           jne 0x4000056	       331	fibheap.c	FUNCTION_17	IF_1
0x4000049	        0x48897710	             mov qword [rdi + 0x10], rsi	       333	fibheap.c	FUNCTION_17	IF_1
0x400004d	        0x48897610	             mov qword [rsi + 0x10], rsi	       334	fibheap.c	FUNCTION_17	IF_1
0x4000051	        0x48897618	             mov qword [rsi + 0x18], rsi	       335	fibheap.c	FUNCTION_17	IF_1
0x4000055	              0xc3	                                     ret	       336	fibheap.c	FUNCTION_17	IF_1
0x4000056	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x400005a	          0x4839d0	                            cmp rax, rdx	       449	fibheap.c	FUNCTION_23	IF_1
0x400005d	            0x7511	                           jne 0x4000070	       449	fibheap.c	FUNCTION_23	IF_1
0x400005f	        0x48897018	             mov qword [rax + 0x18], rsi	       451	fibheap.c	FUNCTION_23	IF_1
0x4000063	        0x48897010	             mov qword [rax + 0x10], rsi	       452	fibheap.c	FUNCTION_23	IF_1
0x4000067	        0x48894618	             mov qword [rsi + 0x18], rax	       453	fibheap.c	FUNCTION_23	IF_1
0x400006b	        0x48894610	             mov qword [rsi + 0x10], rax	       454	fibheap.c	FUNCTION_23	IF_1
0x400006f	              0xc3	                                     ret	       454	fibheap.c	FUNCTION_23	IF_1
0x4000070	        0x48895618	             mov qword [rsi + 0x18], rdx	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000074	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000078	        0x48897210	             mov qword [rdx + 0x10], rsi	       459	fibheap.c	FUNCTION_23	ELSE_1
0x400007c	        0x48897018	             mov qword [rax + 0x18], rsi	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000080	        0x48894610	             mov qword [rsi + 0x10], rax	       461	fibheap.c	FUNCTION_23	ELSE_1
0x4000084	              0xc3	                                     ret	       461	fibheap.c	FUNCTION_23	ELSE_1
fibheap_min	functions,0:ELSE,0:FOR,0:IF,1:SWITCH,0:CALL,0:WHILE,0:DO,0	7
0x4000377	        0x488b4708	                mov rax, qword [rdi + 8]	       127	fibheap.c	FUNCTION_6	IF_1
0x400037b	          0x4885c0	                           test rax, rax	       127	fibheap.c	FUNCTION_6	IF_1
0x400037e	            0x7405	                            je 0x4000385	       127	fibheap.c	FUNCTION_6	IF_1
0x4000380	        0x488b4028	            mov rax, qword [rax + 0x28] 	       129	fibheap.c	FUNCTION_6
0x4000384	              0xc3	                                     ret	       129	fibheap.c	FUNCTION_6
0x4000385	      0xb800000000	                              mov eax, 0	       128	fibheap.c	FUNCTION_6	IF_1
0x400038a	              0xc3	                                     ret	       130	fibheap.c	FUNCTION_6
fibheap_replace_key	functions,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,1:WHILE,0:DO,0	7
0x4000586	              0x53	                                push rbx	       248	fibheap.c	FUNCTION_12
0x4000587	        0x488b5e20	            mov rbx, qword [rsi + 0x20] 	       249	fibheap.c	FUNCTION_12
0x400058b	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	       250	fibheap.c	FUNCTION_12	CALL_1
0x400058f	      0xe800000000	                          call 0x4000594	       250	fibheap.c	FUNCTION_12	CALL_1
0x4000594	          0x4863c3	                         movsxd rax, ebx	       251	fibheap.c	FUNCTION_12
0x4000597	              0x5b	                                 pop rbx	       252	fibheap.c	FUNCTION_12
0x4000598	              0xc3	                                     ret	       252	fibheap.c	FUNCTION_12
fibheap_replace_key_data	functions,0:ELSE,0:FOR,0:IF,4:SWITCH,0:CALL,5:WHILE,0:DO,0	87
0x4000448	            0x4156	                                push r14	       200	fibheap.c	FUNCTION_10
0x400044a	            0x4155	                                push r13	       200	fibheap.c	FUNCTION_10
0x400044c	            0x4154	                                push r12	       200	fibheap.c	FUNCTION_10
0x400044e	              0x55	                                push rbp	       200	fibheap.c	FUNCTION_10
0x400044f	              0x53	                                push rbx	       200	fibheap.c	FUNCTION_10
0x4000450	        0x4c8b4620	              mov r8, qword [rsi + 0x20]	        78	fibheap.c	FUNCTION_3	IF_1
0x4000454	          0x4c39c2	                             cmp rdx, r8	        78	fibheap.c	FUNCTION_3	IF_1
0x4000457	            0x7c0b	                            jl 0x4000464	        78	fibheap.c	FUNCTION_3	IF_1
0x4000459	      0xb800000000	                              mov eax, 0	       209	fibheap.c	FUNCTION_10	IF_1
0x400045e	     0xf8f0b010000	                            jg 0x400056f	       208	fibheap.c	FUNCTION_10	IF_1	CALL_1
0x4000464	        0x4c8b6628	            mov r12, qword [rsi + 0x28] 	       211	fibheap.c	FUNCTION_10
0x4000468	        0x48894e28	             mov qword [rsi + 0x28], rcx	       213	fibheap.c	FUNCTION_10
0x400046c	        0x48895620	             mov qword [rsi + 0x20], rdx	       214	fibheap.c	FUNCTION_10
0x4000470	          0x4c39c2	                             cmp rdx, r8	       220	fibheap.c	FUNCTION_10	IF_2
0x4000473	            0x7516	                           jne 0x400048b	       220	fibheap.c	FUNCTION_10	IF_2
0x4000475	          0x4c89e0	                            mov rax, r12	       221	fibheap.c	FUNCTION_10	IF_2
0x4000478	    0x48b900000000	          movabs rcx, 0x8000000000000000	       220	fibheap.c	FUNCTION_10	IF_2
0x4000482	          0x4939c8	                             cmp r8, rcx	       220	fibheap.c	FUNCTION_10	IF_2
0x4000485	     0xf85e4000000	                           jne 0x400056f	       220	fibheap.c	FUNCTION_10	IF_2
0x400048b	          0x4889f3	                            mov rbx, rsi	       220	fibheap.c	FUNCTION_10	IF_2
0x400048e	          0x4989fe	                            mov r14, rdi	       220	fibheap.c	FUNCTION_10	IF_2
0x4000491	          0x488b2e	                    mov rbp, qword [rsi]	       215	fibheap.c	FUNCTION_10
0x4000494	          0x4885ed	                           test rbp, rbp	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000497	     0xf84b3000000	                            je 0x4000550	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x400049d	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x40004a1	          0x4839c2	                            cmp rdx, rax	        78	fibheap.c	FUNCTION_3	IF_1
0x40004a4	            0x7c06	                            jl 0x40004ac	        78	fibheap.c	FUNCTION_3	IF_1
0x40004a6	     0xf8fa4000000	                            jg 0x4000550	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x40004ac	          0x4889df	                            mov rdi, rbx	       419	fibheap.c	FUNCTION_21	CALL_1
0x40004af	      0xe8d1fbffff	                 call sym.fibnode_remove	       419	fibheap.c	FUNCTION_21	CALL_1
0x40004b4	          0x8b4530	            mov eax, dword [rbp + 0x30] 	       420	fibheap.c	FUNCTION_21
0x40004b7	    0x8d90ffffff7f	             lea edx, [rax + 0x7fffffff]	       420	fibheap.c	FUNCTION_21
0x40004bd	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x40004c3	      0x2500000080	                     and eax, 0x80000000	       420	fibheap.c	FUNCTION_21
0x40004c8	             0x9d0	                             or eax, edx	       420	fibheap.c	FUNCTION_21
0x40004ca	          0x894530	            mov dword [rbp + 0x30], eax 	       420	fibheap.c	FUNCTION_21
0x40004cd	          0x4889de	                            mov rsi, rbx	       421	fibheap.c	FUNCTION_21	CALL_2
0x40004d0	          0x4c89f7	                            mov rdi, r14	       421	fibheap.c	FUNCTION_21	CALL_2
0x40004d3	      0xe868fbffff	               call sym.fibheap_ins_root	       421	fibheap.c	FUNCTION_21	CALL_2
0x40004d8	    0x48c703000000	                      mov qword [rbx], 0	       422	fibheap.c	FUNCTION_21
0x40004df	        0x8063337f	             and byte [rbx + 0x33], 0x7f	       423	fibheap.c	FUNCTION_21
0x40004e3	        0x4c8b6d00	                    mov r13, qword [rbp]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x40004e7	          0x4d85ed	                           test r13, r13	       431	fibheap.c	FUNCTION_22	WHILE_1
0x40004ea	            0x7464	                            je 0x4000550	       431	fibheap.c	FUNCTION_22	WHILE_1
0x40004ec	        0x807d3300	                cmp byte [rbp + 0x33], 0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40004f0	            0x781b	                            js 0x400050d	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40004f2	            0xeb0c	                           jmp 0x4000500	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40004f4	          0x4c89ed	                            mov rbp, r13	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40004f7	      0x41807d3300	                cmp byte [r13 + 0x33], 0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40004fc	            0x780c	                            js 0x400050a	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40004fe	            0xeb03	                           jmp 0x4000503	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000500	          0x4989ed	                            mov r13, rbp	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000503	      0x41804d3380	              or byte [r13 + 0x33], 0x80	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000508	            0xeb46	                           jmp 0x4000550	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x400050a	          0x4989c5	                            mov r13, rax	       431	fibheap.c	FUNCTION_22	WHILE_1
0x400050d	          0x4889ef	                            mov rdi, rbp	       419	fibheap.c	FUNCTION_21	CALL_1
0x4000510	      0xe870fbffff	                 call sym.fibnode_remove	       419	fibheap.c	FUNCTION_21	CALL_1
0x4000515	        0x418b4530	            mov eax, dword [r13 + 0x30] 	       420	fibheap.c	FUNCTION_21
0x4000519	    0x8d90ffffff7f	             lea edx, [rax + 0x7fffffff]	       420	fibheap.c	FUNCTION_21
0x400051f	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000525	      0x2500000080	                     and eax, 0x80000000	       420	fibheap.c	FUNCTION_21
0x400052a	             0x9d0	                             or eax, edx	       420	fibheap.c	FUNCTION_21
0x400052c	        0x41894530	             mov dword [r13 + 0x30], eax	       420	fibheap.c	FUNCTION_21
0x4000530	          0x4889ee	                            mov rsi, rbp	       421	fibheap.c	FUNCTION_21	CALL_2
0x4000533	          0x4c89f7	                            mov rdi, r14	       421	fibheap.c	FUNCTION_21	CALL_2
0x4000536	      0xe805fbffff	               call sym.fibheap_ins_root	       421	fibheap.c	FUNCTION_21	CALL_2
0x400053b	    0x48c745000000	                      mov qword [rbp], 0	       422	fibheap.c	FUNCTION_21
0x4000543	        0x8065337f	             and byte [rbp + 0x33], 0x7f	       423	fibheap.c	FUNCTION_21
0x4000547	        0x498b4500	                    mov rax, qword [r13]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x400054b	          0x4885c0	                           test rax, rax	       431	fibheap.c	FUNCTION_22	WHILE_1
0x400054e	            0x75a4	                           jne 0x40004f4	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000550	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x4000554	        0x498b4608	                mov rax, qword [r14 + 8]	        78	fibheap.c	FUNCTION_3	IF_1
0x4000558	        0x488b4020	            mov rax, qword [rax + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x400055c	          0x4839c2	                            cmp rdx, rax	        78	fibheap.c	FUNCTION_3	IF_1
0x400055f	            0x7c02	                            jl 0x4000563	        78	fibheap.c	FUNCTION_3	IF_1
0x4000561	            0x7f09	                            jg 0x400056c	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x4000563	        0x49895e08	                mov qword [r14 + 8], rbx	       233	fibheap.c	FUNCTION_10	IF_4
0x4000567	          0x4c89e0	                            mov rax, r12	       235	fibheap.c	FUNCTION_10
0x400056a	            0xeb03	                           jmp 0x400056f	       235	fibheap.c	FUNCTION_10
0x400056c	          0x4c89e0	                            mov rax, r12	       235	fibheap.c	FUNCTION_10
0x400056f	              0x5b	                                 pop rbx	       236	fibheap.c	FUNCTION_10
0x4000570	              0x5d	                                 pop rbp	       236	fibheap.c	FUNCTION_10
0x4000571	            0x415c	                                 pop r12	       236	fibheap.c	FUNCTION_10
0x4000573	            0x415d	                                 pop r13	       236	fibheap.c	FUNCTION_10
0x4000575	            0x415e	                                 pop r14	       236	fibheap.c	FUNCTION_10
0x4000577	              0xc3	                                     ret	       236	fibheap.c	FUNCTION_10
fibheap_empty	functions,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,0:WHILE,0:DO,0	4
0x4000618	        0x48833f00	                      cmp qword [rdi], 0	       286	fibheap.c	FUNCTION_15
0x400061c	           0xf94c0	                                 sete al	       286	fibheap.c	FUNCTION_15
0x400061f	           0xfb6c0	                           movzx eax, al	       286	fibheap.c	FUNCTION_15
0x4000622	              0xc3	                                     ret	       287	fibheap.c	FUNCTION_15
fibheap_extract_min	functions,0:ELSE,0:FOR,0:IF,1:SWITCH,0:CALL,2:WHILE,0:DO,0	12
0x4000423	              0x53	                                push rbx	       179	fibheap.c	FUNCTION_9
0x4000424	      0x48837f0800	                  cmp qword [rdi + 8], 0	       184	fibheap.c	FUNCTION_9	IF_1
0x4000429	            0x7413	                            je 0x400043e	       184	fibheap.c	FUNCTION_9	IF_1
0x400042b	      0xe826feffff	          call sym.fibheap_extr_min_node	       188	fibheap.c	FUNCTION_9	IF_1	CALL_1
0x4000430	        0x488b5828	            mov rbx, qword [rax + 0x28] 	       189	fibheap.c	FUNCTION_9	IF_1
0x4000434	          0x4889c7	                            mov rdi, rax	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x4000437	      0xe800000000	                          call 0x400043c	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x400043c	            0xeb05	                           jmp 0x4000443	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x400043e	      0xbb00000000	                              mov ebx, 0	       181	fibheap.c	FUNCTION_9
0x4000443	          0x4889d8	                            mov rax, rbx	       194	fibheap.c	FUNCTION_9
0x4000446	              0x5b	                                 pop rbx	       194	fibheap.c	FUNCTION_9
0x4000447	              0xc3	                                     ret	       194	fibheap.c	FUNCTION_9
fibheap_delete_node	functions,0:ELSE,0:FOR,0:IF,1:SWITCH,0:CALL,3:WHILE,0:DO,0	23
0x4000599	            0x4154	                                push r12	       257	fibheap.c	FUNCTION_13
0x400059b	              0x55	                                push rbp	       257	fibheap.c	FUNCTION_13
0x400059c	              0x53	                                push rbx	       257	fibheap.c	FUNCTION_13
0x400059d	          0x4889fd	                            mov rbp, rdi	       257	fibheap.c	FUNCTION_13
0x40005a0	          0x4889f3	                            mov rbx, rsi	       257	fibheap.c	FUNCTION_13
0x40005a3	        0x4c8b6628	            mov r12, qword [rsi + 0x28] 	       258	fibheap.c	FUNCTION_13
0x40005a7	    0x48ba00000000	          movabs rdx, 0x8000000000000000	       261	fibheap.c	FUNCTION_13	CALL_1
0x40005b1	      0xe800000000	                          call 0x40005b6	       261	fibheap.c	FUNCTION_13	CALL_1
0x40005b6	        0x483b5d08	                cmp rbx, qword [rbp + 8]	       262	fibheap.c	FUNCTION_13	IF_1
0x40005ba	            0x7420	                            je 0x40005dc	       262	fibheap.c	FUNCTION_13	IF_1
0x40005bc	    0x488b0d000000	            mov rcx, qword [0x040005c3] 	        97	stdio2.h	CALL_24
0x40005c3	      0xba20000000	                           mov edx, 0x20	        97	stdio2.h	CALL_24
0x40005c8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_24
0x40005cd	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_24
0x40005d2	      0xe800000000	                          call 0x40005d7	        97	stdio2.h	CALL_24
0x40005d7	      0xe800000000	                          call 0x40005dc	       265	fibheap.c	FUNCTION_13	IF_1	CALL_2
0x40005dc	          0x4889ef	                            mov rdi, rbp	       267	fibheap.c	FUNCTION_13	CALL_3
0x40005df	      0xe800000000	                          call 0x40005e4	       267	fibheap.c	FUNCTION_13	CALL_3
0x40005e4	          0x4c89e0	                            mov rax, r12	       270	fibheap.c	FUNCTION_13
0x40005e7	              0x5b	                                 pop rbx	       270	fibheap.c	FUNCTION_13
0x40005e8	              0x5d	                                 pop rbp	       270	fibheap.c	FUNCTION_13
0x40005e9	            0x415c	                                 pop r12	       270	fibheap.c	FUNCTION_13
0x40005eb	              0xc3	                                     ret	       270	fibheap.c	FUNCTION_13
fibheap_new	functions,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,1:WHILE,0:DO,0	6
0x40002f5	        0x4883ec08	                              sub rsp, 8	        58	fibheap.c	FUNCTION_1
0x40002f9	      0xbe18000000	                           mov esi, 0x18	        59	fibheap.c	FUNCTION_1	CALL_1
0x40002fe	      0xbf01000000	                              mov edi, 1	        59	fibheap.c	FUNCTION_1	CALL_1
0x4000303	      0xe800000000	                          call 0x4000308	        59	fibheap.c	FUNCTION_1	CALL_1
0x4000308	        0x4883c408	                              add rsp, 8	        60	fibheap.c	FUNCTION_1
0x400030c	              0xc3	                                     ret	        60	fibheap.c	FUNCTION_1
fibheap_union	functions,0:ELSE,0:FOR,0:IF,3:SWITCH,0:CALL,4:WHILE,0:DO,0	41
0x400039f	              0x55	                                push rbp	       145	fibheap.c	FUNCTION_8
0x40003a0	              0x53	                                push rbx	       145	fibheap.c	FUNCTION_8
0x40003a1	        0x4883ec08	                              sub rsp, 8	       145	fibheap.c	FUNCTION_8
0x40003a5	          0x4889fb	                            mov rbx, rdi	       145	fibheap.c	FUNCTION_8
0x40003a8	          0x4889f5	                            mov rbp, rsi	       145	fibheap.c	FUNCTION_8
0x40003ab	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       149	fibheap.c	FUNCTION_8	IF_1
0x40003af	          0x4885c0	                           test rax, rax	       149	fibheap.c	FUNCTION_8	IF_1
0x40003b2	            0x750a	                           jne 0x40003be	       149	fibheap.c	FUNCTION_8	IF_1
0x40003b4	      0xe800000000	                          call 0x40003b9	       151	fibheap.c	FUNCTION_8	IF_1	CALL_1
0x40003b9	          0x4889e8	                            mov rax, rbp	       152	fibheap.c	FUNCTION_8	IF_1
0x40003bc	            0xeb5e	                           jmp 0x400041c	       152	fibheap.c	FUNCTION_8	IF_1
0x40003be	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	       154	fibheap.c	FUNCTION_8	IF_2
0x40003c2	          0x4885d2	                           test rdx, rdx	       154	fibheap.c	FUNCTION_8	IF_2
0x40003c5	            0x750d	                           jne 0x40003d4	       154	fibheap.c	FUNCTION_8	IF_2
0x40003c7	          0x4889f7	                            mov rdi, rsi	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x40003ca	      0xe800000000	                          call 0x40003cf	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x40003cf	          0x4889d8	                            mov rax, rbx	       157	fibheap.c	FUNCTION_8	IF_2
0x40003d2	            0xeb48	                           jmp 0x400041c	       157	fibheap.c	FUNCTION_8	IF_2
0x40003d4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       161	fibheap.c	FUNCTION_8
0x40003d8	        0x48895118	             mov qword [rcx + 0x18], rdx	       161	fibheap.c	FUNCTION_8
0x40003dc	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       162	fibheap.c	FUNCTION_8
0x40003e0	        0x48894118	             mov qword [rcx + 0x18], rax	       162	fibheap.c	FUNCTION_8
0x40003e4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       163	fibheap.c	FUNCTION_8
0x40003e8	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	       164	fibheap.c	FUNCTION_8
0x40003ec	        0x48897010	             mov qword [rax + 0x10], rsi	       164	fibheap.c	FUNCTION_8
0x40003f0	        0x48894a10	             mov qword [rdx + 0x10], rcx	       165	fibheap.c	FUNCTION_8
0x40003f4	        0x488b4500	                    mov rax, qword [rbp]	       166	fibheap.c	FUNCTION_8
0x40003f8	          0x480107	                    add qword [rdi], rax	       166	fibheap.c	FUNCTION_8
0x40003fb	        0x488b4508	                mov rax, qword [rbp + 8]	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x40003ff	        0x488b5708	                mov rdx, qword [rdi + 8]	        78	fibheap.c	FUNCTION_3	IF_1
0x4000403	        0x488b7a20	            mov rdi, qword [rdx + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x4000407	        0x48397820	            cmp qword [rax + 0x20], rdi 	        78	fibheap.c	FUNCTION_3	IF_1
0x400040b	            0x7d04	                           jge 0x4000411	        78	fibheap.c	FUNCTION_3	IF_1
0x400040d	        0x48894308	                mov qword [rbx + 8], rax	       170	fibheap.c	FUNCTION_8	IF_3
0x4000411	          0x4889ef	                            mov rdi, rbp	       172	fibheap.c	FUNCTION_8	CALL_4
0x4000414	      0xe800000000	                          call 0x4000419	       172	fibheap.c	FUNCTION_8	CALL_4
0x4000419	          0x4889d8	                            mov rax, rbx	       173	fibheap.c	FUNCTION_8
0x400041c	        0x4883c408	                              add rsp, 8	       174	fibheap.c	FUNCTION_8
0x4000420	              0x5b	                                 pop rbx	       174	fibheap.c	FUNCTION_8
0x4000421	              0x5d	                                 pop rbp	       174	fibheap.c	FUNCTION_8
0x4000422	              0xc3	                                     ret	       174	fibheap.c	FUNCTION_8
fibnode_remove	functions,0:ELSE,1:FOR,0:IF,2:SWITCH,0:CALL,0:WHILE,0:DO,0	20
0x4000085	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       470	fibheap.c	FUNCTION_24	IF_1
0x4000089	          0x4839c7	                            cmp rdi, rax	       470	fibheap.c	FUNCTION_24	IF_1
0x400008c	      0xba00000000	                              mov edx, 0	       471	fibheap.c	FUNCTION_24	IF_1
0x4000091	        0x480f44c2	                          cmove rax, rdx	       471	fibheap.c	FUNCTION_24	IF_1
0x4000095	          0x488b17	                    mov rdx, qword [rdi]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000098	          0x4885d2	                           test rdx, rdx	       475	fibheap.c	FUNCTION_24	IF_2
0x400009b	            0x740a	                            je 0x40000a7	       475	fibheap.c	FUNCTION_24	IF_2
0x400009d	        0x483b7a08	                cmp rdi, qword [rdx + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x40000a1	            0x7504	                           jne 0x40000a7	       475	fibheap.c	FUNCTION_24	IF_2
0x40000a3	        0x48894208	                mov qword [rdx + 8], rax	       476	fibheap.c	FUNCTION_24	IF_2
0x40000a7	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       478	fibheap.c	FUNCTION_24
0x40000ab	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       478	fibheap.c	FUNCTION_24
0x40000af	        0x48894a10	             mov qword [rdx + 0x10], rcx	       478	fibheap.c	FUNCTION_24
0x40000b3	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       479	fibheap.c	FUNCTION_24
0x40000b7	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	       479	fibheap.c	FUNCTION_24
0x40000bb	        0x48894a18	             mov qword [rdx + 0x18], rcx	       479	fibheap.c	FUNCTION_24
0x40000bf	    0x48c707000000	                      mov qword [rdi], 0	       481	fibheap.c	FUNCTION_24
0x40000c6	        0x48897f10	             mov qword [rdi + 0x10], rdi	       482	fibheap.c	FUNCTION_24
0x40000ca	        0x48897f18	             mov qword [rdi + 0x18], rdi	       483	fibheap.c	FUNCTION_24
0x40000ce	              0xc3	                                     ret	       486	fibheap.c	FUNCTION_24
fibheap_replace_data	functions,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,1:WHILE,0:DO,0	4
0x4000578	          0x4889d1	                            mov rcx, rdx	       242	fibheap.c	FUNCTION_11	CALL_1
0x400057b	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	       242	fibheap.c	FUNCTION_11	CALL_1
0x400057f	      0xe800000000	                          call 0x4000584	       242	fibheap.c	FUNCTION_11	CALL_1
0x4000584	            0xf3c3	                                     ret	       243	fibheap.c	FUNCTION_11
fibheap_min_key	functions,0:ELSE,0:FOR,0:IF,1:SWITCH,0:CALL,0:WHILE,0:DO,0	7
0x400038b	        0x488b4708	                mov rax, qword [rdi + 8]	       137	fibheap.c	FUNCTION_7	IF_1
0x400038f	          0x4885c0	                           test rax, rax	       137	fibheap.c	FUNCTION_7	IF_1
0x4000392	            0x7405	                            je 0x4000399	       137	fibheap.c	FUNCTION_7	IF_1
0x4000394	        0x488b4020	            mov rax, qword [rax + 0x20] 	       139	fibheap.c	FUNCTION_7
0x4000398	              0xc3	                                     ret	       139	fibheap.c	FUNCTION_7
0x4000399	      0xb800000000	                              mov eax, 0	       138	fibheap.c	FUNCTION_7	IF_1
0x400039e	              0xc3	                                     ret	       140	fibheap.c	FUNCTION_7
fibheap_extr_min_node	functions,0:ELSE,1:FOR,1:IF,2:SWITCH,0:CALL,3:WHILE,0:DO,0	48
0x4000256	            0x4155	                                push r13	       292	fibheap.c	FUNCTION_16
0x4000258	            0x4154	                                push r12	       292	fibheap.c	FUNCTION_16
0x400025a	              0x55	                                push rbp	       292	fibheap.c	FUNCTION_16
0x400025b	              0x53	                                push rbx	       292	fibheap.c	FUNCTION_16
0x400025c	        0x4883ec08	                              sub rsp, 8	       292	fibheap.c	FUNCTION_16
0x4000260	          0x4989fc	                            mov r12, rdi	       292	fibheap.c	FUNCTION_16
0x4000263	        0x4c8b6f08	                mov r13, qword [rdi + 8]	       293	fibheap.c	FUNCTION_16
0x4000267	        0x498b6d08	                mov rbp, qword [r13 + 8]	       298	fibheap.c	FUNCTION_16	FOR_1
0x400026b	          0x4889ee	                            mov rsi, rbp	       298	fibheap.c	FUNCTION_16	FOR_1
0x400026e	          0x4885ed	                           test rbp, rbp	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000271	            0x750c	                           jne 0x400027f	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000273	            0xeb27	                           jmp 0x400029c	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000275	          0x4885ed	                           test rbp, rbp	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000278	        0x480f44eb	                          cmove rbp, rbx	       298	fibheap.c	FUNCTION_16	FOR_1
0x400027c	          0x4889de	                            mov rsi, rbx	       298	fibheap.c	FUNCTION_16	FOR_1
0x400027f	        0x488b5e18	            mov rbx, qword [rsi + 0x18] 	       302	fibheap.c	FUNCTION_16	FOR_1
0x4000283	    0x48c706000000	                      mov qword [rsi], 0	       303	fibheap.c	FUNCTION_16	FOR_1
0x400028a	          0x4c89e7	                            mov rdi, r12	       304	fibheap.c	FUNCTION_16	FOR_1	CALL_1
0x400028d	      0xe8aefdffff	               call sym.fibheap_ins_root	       304	fibheap.c	FUNCTION_16	FOR_1	CALL_1
0x4000292	          0x4839dd	                            cmp rbp, rbx	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000295	            0x7405	                            je 0x400029c	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000297	          0x4885db	                           test rbx, rbx	       298	fibheap.c	FUNCTION_16	FOR_1
0x400029a	            0x75d9	                           jne 0x4000275	       298	fibheap.c	FUNCTION_16	FOR_1
0x400029c	        0x4d3b6d10	            cmp r13, qword [r13 + 0x10] 	       348	fibheap.c	FUNCTION_18	IF_1
0x40002a0	            0x750b	                           jne 0x40002ad	       348	fibheap.c	FUNCTION_18	IF_1
0x40002a2	    0x49c744241000	               mov qword [r12 + 0x10], 0	       349	fibheap.c	FUNCTION_18	IF_1
0x40002ab	            0xeb0d	                           jmp 0x40002ba	       349	fibheap.c	FUNCTION_18	IF_1
0x40002ad	          0x4c89ef	                            mov rdi, r13	       351	fibheap.c	FUNCTION_18	CALL_1
0x40002b0	      0xe8d0fdffff	                 call sym.fibnode_remove	       351	fibheap.c	FUNCTION_18	CALL_1
0x40002b5	      0x4989442410	             mov qword [r12 + 0x10], rax	       351	fibheap.c	FUNCTION_18	CALL_1
0x40002ba	        0x498b0424	                    mov rax, qword [r12]	       309	fibheap.c	FUNCTION_16
0x40002be	        0x4883e801	                              sub rax, 1	       309	fibheap.c	FUNCTION_16
0x40002c2	        0x49890424	                    mov qword [r12], rax	       309	fibheap.c	FUNCTION_16
0x40002c6	          0x4885c0	                           test rax, rax	       312	fibheap.c	FUNCTION_16	IF_2
0x40002c9	            0x750b	                           jne 0x40002d6	       312	fibheap.c	FUNCTION_16	IF_2
0x40002cb	    0x49c744240800	                  mov qword [r12 + 8], 0	       313	fibheap.c	FUNCTION_16	IF_2
0x40002d4	            0xeb11	                           jmp 0x40002e7	       313	fibheap.c	FUNCTION_16	IF_2
0x40002d6	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       318	fibheap.c	FUNCTION_16	ELSE_1
0x40002da	      0x4989442408	                mov qword [r12 + 8], rax	       318	fibheap.c	FUNCTION_16	ELSE_1
0x40002df	          0x4c89e7	                            mov rdi, r12	       319	fibheap.c	FUNCTION_16	ELSE_1	CALL_3
0x40002e2	      0xe8e8fdffff	            call sym.fibheap_consolidate	       319	fibheap.c	FUNCTION_16	ELSE_1	CALL_3
0x40002e7	          0x4c89e8	                            mov rax, r13	       323	fibheap.c	FUNCTION_16
0x40002ea	        0x4883c408	                              add rsp, 8	       323	fibheap.c	FUNCTION_16
0x40002ee	              0x5b	                                 pop rbx	       323	fibheap.c	FUNCTION_16
0x40002ef	              0x5d	                                 pop rbp	       323	fibheap.c	FUNCTION_16
0x40002f0	            0x415c	                                 pop r12	       323	fibheap.c	FUNCTION_16
0x40002f2	            0x415d	                                 pop r13	       323	fibheap.c	FUNCTION_16
0x40002f4	              0xc3	                                     ret	       323	fibheap.c	FUNCTION_16
