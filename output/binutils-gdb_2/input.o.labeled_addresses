_rl_input_queued	CALL,3:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0:WHILE,0	14
0x40002b0	              0x55	                                push rbp	       355	input.c	FUNCTION_10
0x40002b1	              0x53	                                push rbx	       355	input.c	FUNCTION_10
0x40002b2	        0x4883ec08	                              sub rsp, 8	       355	input.c	FUNCTION_10
0x40002b6	      0xe800000000	                          call 0x40002bb	       358	input.c	FUNCTION_10	CALL_1
0x40002bb	            0x89c5	                            mov ebp, eax	       358	input.c	FUNCTION_10	CALL_1
0x40002bd	      0xe800000000	                          call 0x40002c2	       359	input.c	FUNCTION_10	CALL_2
0x40002c2	            0x89c3	                            mov ebx, eax	       359	input.c	FUNCTION_10	CALL_2
0x40002c4	            0x89ef	                            mov edi, ebp	       360	input.c	FUNCTION_10	CALL_3
0x40002c6	      0xe800000000	                          call 0x40002cb	       360	input.c	FUNCTION_10	CALL_3
0x40002cb	            0x89d8	                            mov eax, ebx	       362	input.c	FUNCTION_10
0x40002cd	        0x4883c408	                              add rsp, 8	       362	input.c	FUNCTION_10
0x40002d1	              0x5b	                                 pop rbx	       362	input.c	FUNCTION_10
0x40002d2	              0x5d	                                 pop rbp	       362	input.c	FUNCTION_10
0x40002d3	              0xc3	                                     ret	       362	input.c	FUNCTION_10
_rl_unget_char	CALL,1:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,2:WHILE,0	15
0x400016b	              0x53	                                push rbx	       176	input.c	FUNCTION_5
0x400016c	            0x89fb	                            mov ebx, edi	       176	input.c	FUNCTION_5
0x400016e	      0xe8cdfeffff	                  call sym.ibuffer_space	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x4000173	            0x85c0	                           test eax, eax	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x4000175	            0x7424	                            je 0x400019b	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x4000177	    0x8b0500000000	            mov eax, dword [0x0400017d] 	       180	input.c	FUNCTION_5	IF_1	IF_2
0x400017d	          0x83e801	                              sub eax, 1	       180	input.c	FUNCTION_5	IF_1	IF_2
0x4000180	      0xbaff010000	                          mov edx, 0x1ff	       179	input.c	FUNCTION_5	IF_1
0x4000185	           0xf48c2	                          cmovs eax, edx	       179	input.c	FUNCTION_5	IF_1
0x4000188	    0x890500000000	            mov dword [0x0400018e], eax 	       179	input.c	FUNCTION_5	IF_1
0x400018e	            0x4898	                                    cdqe	       182	input.c	FUNCTION_5	IF_1
0x4000190	    0x889800000000	                      mov byte [rax], bl	       182	input.c	FUNCTION_5	IF_1
0x4000196	      0xb801000000	                              mov eax, 1	       183	input.c	FUNCTION_5	IF_1
0x400019b	              0x5b	                                 pop rbx	       186	input.c	FUNCTION_5
0x400019c	              0xc3	                                     ret	       186	input.c	FUNCTION_5
rl_execute_next	CALL,1:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0:WHILE,0	4
0x400065b	    0x893d00000000	            mov dword [0x04000661], edi 	       419	input.c	FUNCTION_13
0x4000661	    0x810d00000000	          or dword [0x0400066b], 0x20000	       420	input.c	FUNCTION_13	CALL_1
0x400066b	      0xb800000000	                              mov eax, 0	       422	input.c	FUNCTION_13
0x4000670	              0xc3	                                     ret	       422	input.c	FUNCTION_13
_rl_insert_typein	CALL,5:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,1:WHILE,1	44
0x40002d4	              0x55	                                push rbp	       367	input.c	FUNCTION_11
0x40002d5	              0x53	                                push rbx	       367	input.c	FUNCTION_11
0x40002d6	        0x4883ec18	                           sub rsp, 0x18	       367	input.c	FUNCTION_11
0x40002da	            0x89fb	                            mov ebx, edi	       367	input.c	FUNCTION_11
0x40002dc	    0x64488b042528	                mov rax, qword fs:[0x28]	       367	input.c	FUNCTION_11
0x40002e5	      0x4889442408	                mov qword [rsp + 8], rax	       367	input.c	FUNCTION_11
0x40002ea	            0x31c0	                            xor eax, eax	       367	input.c	FUNCTION_11
0x40002ec	    0xc74424040000	                  mov dword [rsp + 4], 0	       371	input.c	FUNCTION_11
0x40002f4	      0xbf00020000	                          mov edi, 0x200	       372	input.c	FUNCTION_11	CALL_1
0x40002f9	      0xe800000000	                          call 0x40002fe	       372	input.c	FUNCTION_11	CALL_1
0x40002fe	          0x4889c5	                            mov rbp, rax	       372	input.c	FUNCTION_11	CALL_1
0x4000301	            0x8818	                      mov byte [rax], bl	       373	input.c	FUNCTION_11
0x4000303	      0xbb01000000	                              mov ebx, 1	       373	input.c	FUNCTION_11
0x4000308	            0xeb0b	                           jmp 0x4000315	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400030a	          0x4863c3	                         movsxd rax, ebx	       378	input.c	FUNCTION_11	WHILE_1
0x400030d	      0x40887c0500	               mov byte [rbp + rax], dil	       378	input.c	FUNCTION_11	WHILE_1
0x4000312	          0x8d5b01	                      lea ebx, [rbx + 1]	       378	input.c	FUNCTION_11	WHILE_1
0x4000315	      0x488d7c2404	                      lea rdi, [rsp + 4]	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400031a	      0xe842fdffff	                    call sym.rl_get_char	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400031f	            0x85c0	                           test eax, eax	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000321	            0x7426	                            je 0x4000349	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000323	        0x8b7c2404	                mov edi, dword [rsp + 4]	       376	input.c	FUNCTION_11	WHILE_1
0x4000327	          0x4863c7	                         movsxd rax, edi	       376	input.c	FUNCTION_11	WHILE_1
0x400032a	        0x48c1e004	                              shl rax, 4	       376	input.c	FUNCTION_11	WHILE_1
0x400032e	    0x480305000000	             add rax, qword [0x04000335]	       376	input.c	FUNCTION_11	WHILE_1
0x4000335	          0x803800	                       cmp byte [rax], 0	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000338	            0x750a	                           jne 0x4000344	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400033a	    0x488178080000	                  cmp qword [rax + 8], 0	       376	input.c	FUNCTION_11	WHILE_1
0x4000342	            0x74c6	                            je 0x400030a	       376	input.c	FUNCTION_11	WHILE_1
0x4000344	      0xe800000000	                          call 0x4000349	       381	input.c	FUNCTION_11	CALL_3
0x4000349	          0x4863db	                         movsxd rbx, ebx	       383	input.c	FUNCTION_11
0x400034c	      0xc6441d0000	                 mov byte [rbp + rbx], 0	       383	input.c	FUNCTION_11
0x4000351	          0x4889ef	                            mov rdi, rbp	       384	input.c	FUNCTION_11	CALL_4
0x4000354	      0xe800000000	                          call 0x4000359	       384	input.c	FUNCTION_11	CALL_4
0x4000359	          0x4889ef	                            mov rdi, rbp	       385	input.c	FUNCTION_11	CALL_5
0x400035c	      0xe800000000	                          call 0x4000361	       385	input.c	FUNCTION_11	CALL_5
0x4000361	      0x488b442408	                mov rax, qword [rsp + 8]	       386	input.c	FUNCTION_11
0x4000366	    0x644833042528	                xor rax, qword fs:[0x28]	       386	input.c	FUNCTION_11
0x400036f	            0x7405	                            je 0x4000376	       386	input.c	FUNCTION_11
0x4000371	      0xe800000000	                          call 0x4000376	       386	input.c	FUNCTION_11
0x4000376	        0x4883c418	                           add rsp, 0x18	       386	input.c	FUNCTION_11
0x400037a	              0x5b	                                 pop rbx	       386	input.c	FUNCTION_11
0x400037b	              0x5d	                                 pop rbp	       386	input.c	FUNCTION_11
0x400037c	              0xc3	                                     ret	       386	input.c	FUNCTION_11
rl_stuff_char	CALL,2:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,4:WHILE,0	21
0x400037d	              0x53	                                push rbx	       393	input.c	FUNCTION_12
0x400037e	            0x89fb	                            mov ebx, edi	       393	input.c	FUNCTION_12
0x4000380	      0xe8bbfcffff	                  call sym.ibuffer_space	       394	input.c	FUNCTION_12	IF_1	CALL_1
0x4000385	            0x85c0	                           test eax, eax	       394	input.c	FUNCTION_12	IF_1	CALL_1
0x4000387	            0x744c	                            je 0x40003d5	       394	input.c	FUNCTION_12	IF_1	CALL_1
0x4000389	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       397	input.c	FUNCTION_12	IF_2
0x400038c	            0x7519	                           jne 0x40003a7	       397	input.c	FUNCTION_12	IF_2
0x400038e	    0xc70500000000	     mov dword [0x04000398], 0xffffffff 	       400	input.c	FUNCTION_12	IF_2
0x4000398	    0x810d00000000	          or dword [0x040003a2], 0x20000	       401	input.c	FUNCTION_12	IF_2	CALL_2
0x40003a2	      0xbb0a000000	                            mov ebx, 0xa	       399	input.c	FUNCTION_12	IF_2
0x40003a7	    0x8b0500000000	            mov eax, dword [0x040003ad] 	       403	input.c	FUNCTION_12
0x40003ad	          0x8d5001	                      lea edx, [rax + 1]	       403	input.c	FUNCTION_12
0x40003b0	    0x891500000000	            mov dword [0x040003b6], edx 	       403	input.c	FUNCTION_12
0x40003b6	            0x4898	                                    cdqe	       403	input.c	FUNCTION_12
0x40003b8	    0x889800000000	                      mov byte [rax], bl	       403	input.c	FUNCTION_12
0x40003be	      0xb801000000	                              mov eax, 1	       411	input.c	FUNCTION_12
0x40003c3	    0x81faff010000	                          cmp edx, 0x1ff	       407	input.c	FUNCTION_12	IF_3	IF_4
0x40003c9	            0x7e0a	                           jle 0x40003d5	       407	input.c	FUNCTION_12	IF_3	IF_4
0x40003cb	    0xc70500000000	               mov dword [0x040003d5], 0	       409	input.c	FUNCTION_12	IF_3	IF_4
0x40003d5	              0x5b	                                 pop rbx	       412	input.c	FUNCTION_12
0x40003d6	              0xc3	                                     ret	       412	input.c	FUNCTION_12
rl_clear_pending_input	CALL,1:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0:WHILE,0	4
0x4000671	    0xc70500000000	               mov dword [0x0400067b], 0	       428	input.c	FUNCTION_14
0x400067b	    0x812500000000	      and dword [0x04000685], 0xfffdffff	       429	input.c	FUNCTION_14	CALL_1
0x4000685	      0xb800000000	                              mov eax, 0	       431	input.c	FUNCTION_14
0x400068a	              0xc3	                                     ret	       431	input.c	FUNCTION_14
ibuffer_space	CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,1:DO,0:IF,1:WHILE,0	10
0x4000040	    0x8b1500000000	            mov edx, dword [0x04000046] 	       143	input.c	FUNCTION_3	IF_1
0x4000046	    0x8b0d00000000	            mov ecx, dword [0x0400004c] 	       143	input.c	FUNCTION_3	IF_1
0x400004c	            0x89d0	                            mov eax, edx	       146	input.c	FUNCTION_3	ELSE_1
0x400004e	            0x29c8	                            sub eax, ecx	       146	input.c	FUNCTION_3	ELSE_1
0x4000050	    0x8d80ff010000	                  lea eax, [rax + 0x1ff]	       146	input.c	FUNCTION_3	ELSE_1
0x4000056	            0x39ca	                            cmp edx, ecx	       143	input.c	FUNCTION_3	IF_1
0x4000058	            0x7e05	                           jle 0x400005f	       143	input.c	FUNCTION_3	IF_1
0x400005a	            0x29ca	                            sub edx, ecx	       144	input.c	FUNCTION_3	IF_1
0x400005c	          0x8d42ff	                      lea eax, [rdx - 1]	       144	input.c	FUNCTION_3	IF_1
0x400005f	            0xf3c3	                                     ret	       147	input.c	FUNCTION_3
rl_read_key	CALL,7:SWITCH,0:FOR,0:functions,0:ELSE,2:DO,0:IF,7:WHILE,1	59
0x400068b	        0x4883ec18	                           sub rsp, 0x18	       442	input.c	FUNCTION_15
0x400068f	    0x64488b042528	                mov rax, qword fs:[0x28]	       442	input.c	FUNCTION_15
0x4000698	      0x4889442408	                mov qword [rsp + 8], rax	       442	input.c	FUNCTION_15
0x400069d	            0x31c0	                            xor eax, eax	       442	input.c	FUNCTION_15
0x400069f	    0x830500000000	               add dword [0x040006a6], 1	       445	input.c	FUNCTION_15
0x40006a6	    0x8b0500000000	            mov eax, dword [0x040006ac] 	       447	input.c	FUNCTION_15	IF_1
0x40006ac	            0x85c0	                           test eax, eax	       447	input.c	FUNCTION_15	IF_1
0x40006ae	            0x740e	                            je 0x40006be	       447	input.c	FUNCTION_15	IF_1
0x40006b0	        0x89442404	                mov dword [rsp + 4], eax	       449	input.c	FUNCTION_15	IF_1
0x40006b4	      0xe800000000	                          call 0x40006b9	       450	input.c	FUNCTION_15	IF_1	CALL_1
0x40006b9	      0xe9a7000000	                           jmp 0x4000765	       450	input.c	FUNCTION_15	IF_1	CALL_1
0x40006be	      0xe800000000	                          call 0x40006c3	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x40006c3	        0x89442404	                mov dword [rsp + 4], eax	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x40006c7	            0x85c0	                           test eax, eax	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x40006c9	     0xf85a1000000	                           jne 0x4000770	       455	input.c	FUNCTION_15	ELSE_1	IF_2	CALL_2
0x40006cf	    0x48833d000000	               cmp qword [0x040006d7], 0	       459	input.c	FUNCTION_15	ELSE_1	IF_3
0x40006d7	            0x7458	                            je 0x4000731	       459	input.c	FUNCTION_15	ELSE_1	IF_3
0x40006d9	      0xe8f9fcffff	                  call sym.rl_gather_tyi	       463	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4	CALL_3
0x40006de	            0x85c0	                           test eax, eax	       463	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4	CALL_3
0x40006e0	            0x7911	                           jns 0x40006f3	       463	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4	CALL_3
0x40006e2	    0xc70500000000	               mov dword [0x040006ec], 1	       465	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4
0x40006ec	      0xb80a000000	                            mov eax, 0xa	       466	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4
0x40006f1	            0xeb7d	                           jmp 0x4000770	       466	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_4
0x40006f3	    0x8b0500000000	            mov eax, dword [0x040006f9] 	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x40006f9	            0x85c0	                           test eax, eax	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x40006fb	            0x740b	                            je 0x4000708	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x40006fd	    0x8b3d00000000	            mov edi, dword [0x04000703] 	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x4000703	      0xe800000000	                          call 0x4000708	       468	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	CALL_4
0x4000708	      0x488d7c2404	                      lea rdi, [rsp + 4]	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x400070d	      0xe84ff9ffff	                    call sym.rl_get_char	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x4000712	            0x85c0	                           test eax, eax	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x4000714	            0x754f	                           jne 0x4000765	       469	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_5	CALL_5
0x4000716	    0x833d00000000	               cmp dword [0x0400071d], 0	       471	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_6
0x400071d	            0x754c	                           jne 0x400076b	       471	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_6
0x400071f	    0xff1500000000	                 call qword [0x04000725]	       473	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x4000725	    0x48833d000000	               cmp qword [0x0400072d], 0	       461	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x400072d	            0x75aa	                           jne 0x40006d9	       461	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x400072f	            0xeb34	                           jmp 0x4000765	       461	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1
0x4000731	      0x488d7c2404	                      lea rdi, [rsp + 4]	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x4000736	      0xe826f9ffff	                    call sym.rl_get_char	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x400073b	            0x85c0	                           test eax, eax	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x400073d	            0x7511	                           jne 0x4000750	       478	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7	CALL_6
0x400073f	    0x488b3d000000	            mov rdi, qword [0x04000746] 	       479	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7
0x4000746	    0xff1500000000	                 call qword [0x0400074c]	       479	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7
0x400074c	        0x89442404	                mov dword [rsp + 4], eax	       479	input.c	FUNCTION_15	ELSE_1	ELSE_2	IF_7
0x4000750	    0x8b0500000000	            mov eax, dword [0x04000756] 	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x4000756	            0x85c0	                           test eax, eax	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x4000758	            0x740b	                            je 0x4000765	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x400075a	    0x8b3d00000000	            mov edi, dword [0x04000760] 	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x4000760	      0xe800000000	                          call 0x4000765	       480	input.c	FUNCTION_15	ELSE_1	ELSE_2	CALL_7
0x4000765	        0x8b442404	                mov eax, dword [rsp + 4]	       484	input.c	FUNCTION_15
0x4000769	            0xeb05	                           jmp 0x4000770	       484	input.c	FUNCTION_15
0x400076b	      0xb80a000000	                            mov eax, 0xa	       472	input.c	FUNCTION_15	ELSE_1	IF_3	WHILE_1	IF_6
0x4000770	      0x488b542408	                mov rdx, qword [rsp + 8]	       485	input.c	FUNCTION_15
0x4000775	    0x644833142528	                xor rdx, qword fs:[0x28]	       485	input.c	FUNCTION_15
0x400077e	            0x7405	                            je 0x4000785	       485	input.c	FUNCTION_15
0x4000780	      0xe800000000	                          call 0x4000785	       485	input.c	FUNCTION_15
0x4000785	        0x4883c418	                           add rsp, 0x18	       485	input.c	FUNCTION_15
0x4000789	              0xc3	                                     ret	       485	input.c	FUNCTION_15
rl_set_keyboard_input_timeout	CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,1:WHILE,0	5
0x40001b0	    0x8b0500000000	            mov eax, dword [0x040001b6] 	       301	input.c	FUNCTION_8
0x40001b6	            0x85ff	                           test edi, edi	       302	input.c	FUNCTION_8	IF_1
0x40001b8	            0x7806	                            js 0x40001c0	       302	input.c	FUNCTION_8	IF_1
0x40001ba	    0x893d00000000	            mov dword [0x040001c0], edi 	       303	input.c	FUNCTION_8	IF_1
0x40001c0	            0xf3c3	                                     ret	       305	input.c	FUNCTION_8
_rl_input_available	CALL,8:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,2:WHILE,0	62
0x40001c2	            0x4156	                                push r14	       315	input.c	FUNCTION_9
0x40001c4	            0x4155	                                push r13	       315	input.c	FUNCTION_9
0x40001c6	            0x4154	                                push r12	       315	input.c	FUNCTION_9
0x40001c8	              0x55	                                push rbp	       315	input.c	FUNCTION_9
0x40001c9	              0x53	                                push rbx	       315	input.c	FUNCTION_9
0x40001ca	    0x4881ec200100	                          sub rsp, 0x120	       315	input.c	FUNCTION_9
0x40001d1	    0x64488b042528	                mov rax, qword fs:[0x28]	       315	input.c	FUNCTION_9
0x40001da	    0x488984241801	            mov qword [rsp + 0x118], rax	       315	input.c	FUNCTION_9
0x40001e2	            0x31c0	                            xor eax, eax	       315	input.c	FUNCTION_9
0x40001e4	    0x488b3d000000	            mov rdi, qword [0x040001eb] 	       325	input.c	FUNCTION_9	CALL_1
0x40001eb	      0xe800000000	                          call 0x40001f0	       325	input.c	FUNCTION_9	CALL_1
0x40001f0	            0x89c3	                            mov ebx, eax	       325	input.c	FUNCTION_9	CALL_1
0x40001f2	      0xb800000000	                              mov eax, 0	       328	input.c	FUNCTION_9	CALL_2
0x40001f7	      0xba10000000	                           mov edx, 0x10	       328	input.c	FUNCTION_9	CALL_2
0x40001fc	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	       328	input.c	FUNCTION_9	CALL_2
0x4000201	          0x4889d1	                            mov rcx, rdx	       328	input.c	FUNCTION_9	CALL_2
0x4000204	          0x4889ef	                            mov rdi, rbp	       328	input.c	FUNCTION_9	CALL_2
0x4000207	              0xfc	                                     cld	       328	input.c	FUNCTION_9	CALL_2
0x4000208	          0xf348ab	              rep stosq qword [rdi], rax	       328	input.c	FUNCTION_9	CALL_2
0x400020b	    0x4c8da4249000	                   lea r12, [rsp + 0x90]	       329	input.c	FUNCTION_9	CALL_3
0x4000213	          0x4889d1	                            mov rcx, rdx	       329	input.c	FUNCTION_9	CALL_3
0x4000216	          0x4c89e7	                            mov rdi, r12	       329	input.c	FUNCTION_9	CALL_3
0x4000219	              0xfc	                                     cld	       329	input.c	FUNCTION_9	CALL_3
0x400021a	          0xf348ab	              rep stosq qword [rdi], rax	       329	input.c	FUNCTION_9	CALL_3
0x400021d	          0x4c63eb	                         movsxd r13, ebx	       330	input.c	FUNCTION_9	CALL_4
0x4000220	          0x4c89ef	                            mov rdi, r13	       330	input.c	FUNCTION_9	CALL_4
0x4000223	      0xe800000000	                          call 0x4000228	       330	input.c	FUNCTION_9	CALL_4
0x4000228	            0x89da	                            mov edx, ebx	       330	input.c	FUNCTION_9	CALL_4
0x400022a	          0xc1fa1f	                           sar edx, 0x1f	       330	input.c	FUNCTION_9	CALL_4
0x400022d	          0xc1ea1a	                           shr edx, 0x1a	       330	input.c	FUNCTION_9	CALL_4
0x4000230	          0x8d0c13	                    lea ecx, [rbx + rdx]	       330	input.c	FUNCTION_9	CALL_4
0x4000233	          0x83e13f	                           and ecx, 0x3f	       330	input.c	FUNCTION_9	CALL_4
0x4000236	            0x29d1	                            sub ecx, edx	       330	input.c	FUNCTION_9	CALL_4
0x4000238	    0x41be01000000	                             mov r14d, 1	       330	input.c	FUNCTION_9	CALL_4
0x400023e	          0x49d3e6	                             shl r14, cl	       330	input.c	FUNCTION_9	CALL_4
0x4000241	      0x4c0974c410	      or qword [rsp + rax*8 + 0x10], r14	       330	input.c	FUNCTION_9	CALL_4
0x4000246	          0x4c89ef	                            mov rdi, r13	       331	input.c	FUNCTION_9	CALL_5
0x4000249	      0xe800000000	                          call 0x400024e	       331	input.c	FUNCTION_9	CALL_5
0x400024e	    0x4c09b4c49000	      or qword [rsp + rax*8 + 0x90], r14	       331	input.c	FUNCTION_9	CALL_5
0x4000256	    0x48c704240000	                      mov qword [rsp], 0	       332	input.c	FUNCTION_9
0x400025e	    0x486305000000	         movsxd rax, dword [0x04000265] 	       333	input.c	FUNCTION_9
0x4000265	      0x4889442408	                mov qword [rsp + 8], rax	       333	input.c	FUNCTION_9
0x400026a	          0x8d7b01	                      lea edi, [rbx + 1]	       334	input.c	FUNCTION_9	CALL_6
0x400026d	          0x4989e0	                             mov r8, rsp	       334	input.c	FUNCTION_9	CALL_6
0x4000270	          0x4c89e1	                            mov rcx, r12	       334	input.c	FUNCTION_9	CALL_6
0x4000273	      0xba00000000	                              mov edx, 0	       334	input.c	FUNCTION_9	CALL_6
0x4000278	          0x4889ee	                            mov rsi, rbp	       334	input.c	FUNCTION_9	CALL_6
0x400027b	      0xe800000000	                          call 0x4000280	       334	input.c	FUNCTION_9	CALL_6
0x4000280	            0x85c0	                           test eax, eax	       334	input.c	FUNCTION_9	CALL_6
0x4000282	           0xf9fc0	                                 setg al	       334	input.c	FUNCTION_9	CALL_6
0x4000285	    0x488bb4241801	           mov rsi, qword [rsp + 0x118] 	       350	input.c	FUNCTION_9
0x400028d	    0x644833342528	                xor rsi, qword fs:[0x28]	       350	input.c	FUNCTION_9
0x4000296	            0x7405	                            je 0x400029d	       350	input.c	FUNCTION_9
0x4000298	      0xe800000000	                          call 0x400029d	       350	input.c	FUNCTION_9
0x400029d	           0xfb6c0	                           movzx eax, al	       350	input.c	FUNCTION_9
0x40002a0	    0x4881c4200100	                          add rsp, 0x120	       350	input.c	FUNCTION_9
0x40002a7	              0x5b	                                 pop rbx	       350	input.c	FUNCTION_9
0x40002a8	              0x5d	                                 pop rbp	       350	input.c	FUNCTION_9
0x40002a9	            0x415c	                                 pop r12	       350	input.c	FUNCTION_9
0x40002ab	            0x415d	                                 pop r13	       350	input.c	FUNCTION_9
0x40002ad	            0x415e	                                 pop r14	       350	input.c	FUNCTION_9
0x40002af	              0xc3	                                     ret	       350	input.c	FUNCTION_9
_rl_pushed_input_available	CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0:WHILE,0	5
0x400019d	    0x8b0500000000	            mov eax, dword [0x040001a3] 	       191	input.c	FUNCTION_6
0x40001a3	    0x390500000000	            cmp dword [0x040001a9], eax 	       191	input.c	FUNCTION_6
0x40001a9	           0xf95c0	                                setne al	       191	input.c	FUNCTION_6
0x40001ac	           0xfb6c0	                           movzx eax, al	       191	input.c	FUNCTION_6
0x40001af	              0xc3	                                     ret	       192	input.c	FUNCTION_6
_rl_any_typein	CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,0:WHILE,0	5
0x4000158	    0x8b0500000000	            mov eax, dword [0x0400015e] 	       135	input.c	FUNCTION_2
0x400015e	    0x390500000000	            cmp dword [0x04000164], eax 	       135	input.c	FUNCTION_2
0x4000164	           0xf95c0	                                setne al	       135	input.c	FUNCTION_2
0x4000167	           0xfb6c0	                           movzx eax, al	       135	input.c	FUNCTION_2
0x400016a	              0xc3	                                     ret	       136	input.c	FUNCTION_2
rl_get_char	CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,0:DO,0:IF,3:WHILE,0	15
0x4000061	    0x8b0500000000	            mov eax, dword [0x04000067] 	       156	input.c	FUNCTION_4	IF_1
0x4000067	    0x390500000000	            cmp dword [0x0400006d], eax 	       156	input.c	FUNCTION_4	IF_1
0x400006d	            0x742c	                            je 0x400009b	       156	input.c	FUNCTION_4	IF_1
0x400006f	          0x8d5001	                      lea edx, [rax + 1]	       159	input.c	FUNCTION_4
0x4000072	    0x891500000000	            mov dword [0x04000078], edx 	       159	input.c	FUNCTION_4
0x4000078	            0x4898	                                    cdqe	       159	input.c	FUNCTION_4
0x400007a	     0xfb680000000	                   movzx eax, byte [rax]	       159	input.c	FUNCTION_4
0x4000081	            0x8907	                    mov dword [rdi], eax	       159	input.c	FUNCTION_4
0x4000083	      0xb801000000	                              mov eax, 1	       167	input.c	FUNCTION_4
0x4000088	    0x81faff010000	                          cmp edx, 0x1ff	       163	input.c	FUNCTION_4	IF_2	IF_3
0x400008e	            0x7e10	                           jle 0x40000a0	       163	input.c	FUNCTION_4	IF_2	IF_3
0x4000090	    0xc70500000000	               mov dword [0x0400009a], 0	       165	input.c	FUNCTION_4	IF_2	IF_3
0x400009a	              0xc3	                                     ret	       165	input.c	FUNCTION_4	IF_2	IF_3
0x400009b	      0xb800000000	                              mov eax, 0	       157	input.c	FUNCTION_4	IF_1
0x40000a0	            0xf3c3	                                     ret	       168	input.c	FUNCTION_4
