dlang_parse_integer	CALL,16:functions,0:ELSE,4:WHILE,2:DO,0:IF,7:SWITCH,2:FOR,1	186
0x4000533	            0x4154	                                push r12	       938	d-demangle.c	FUNCTION_20
0x4000535	              0x55	                                push rbp	       938	d-demangle.c	FUNCTION_20
0x4000536	              0x53	                                push rbx	       938	d-demangle.c	FUNCTION_20
0x4000537	        0x4883ec30	                           sub rsp, 0x30	       938	d-demangle.c	FUNCTION_20
0x400053b	          0x4889fd	                            mov rbp, rdi	       938	d-demangle.c	FUNCTION_20
0x400053e	          0x4889f7	                            mov rdi, rsi	       938	d-demangle.c	FUNCTION_20
0x4000541	          0x4189d4	                           mov r12d, edx	       938	d-demangle.c	FUNCTION_20
0x4000544	    0x64488b042528	                mov rax, qword fs:[0x28]	       938	d-demangle.c	FUNCTION_20
0x400054d	      0x4889442428	             mov qword [rsp + 0x28], rax	       938	d-demangle.c	FUNCTION_20
0x4000552	            0x31c0	                            xor eax, eax	       938	d-demangle.c	FUNCTION_20
0x4000554	            0x89d0	                            mov eax, edx	       939	d-demangle.c	FUNCTION_20	IF_1
0x4000556	          0x83e0fd	                     and eax, 0xfffffffd	       939	d-demangle.c	FUNCTION_20	IF_1
0x4000559	            0x3c75	                            cmp al, 0x75	       939	d-demangle.c	FUNCTION_20	IF_1
0x400055b	            0x7409	                            je 0x4000566	       939	d-demangle.c	FUNCTION_20	IF_1
0x400055d	          0x80fa61	                            cmp dl, 0x61	       939	d-demangle.c	FUNCTION_20	IF_1
0x4000560	     0xf8585010000	                           jne 0x40006eb	       939	d-demangle.c	FUNCTION_20	IF_1
0x4000566	      0x488d742408	                      lea rsi, [rsp + 8]	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x400056b	      0xe805fbffff	                   call sym.dlang_number	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4000570	          0x4889c3	                            mov rbx, rax	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4000573	      0xb800000000	                              mov eax, 0	       949	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4000578	          0x4885db	                           test rbx, rbx	       948	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x400057b	     0xf843a020000	                            je 0x40007bb	       948	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4000581	      0xbe00000000	                              mov esi, 0	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x4000586	          0x4889ef	                            mov rdi, rbp	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x4000589	      0xe866fcffff	                  call sym.string_append	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x400058e	        0x4180fc61	                          cmp r12b, 0x61	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000592	            0x752a	                           jne 0x40005be	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000594	      0x488b442408	                mov rax, qword [rsp + 8]	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000599	        0x488d50e0	                   lea rdx, [rax - 0x20]	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400059d	        0x4883fa5e	                           cmp rdx, 0x5e	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x40005a1	            0x771b	                            ja 0x40005be	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x40005a3	        0x88442407	                  mov byte [rsp + 7], al	       956	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x40005a7	      0xba01000000	                              mov edx, 1	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x40005ac	      0x488d742407	                      lea rsi, [rsp + 7]	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x40005b1	          0x4889ef	                            mov rdi, rbp	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x40005b4	      0xe847ffffff	                 call sym.string_appendn	       957	d-demangle.c	FUNCTION_20	IF_1	IF_3	CALL_3
0x40005b9	      0xe918010000	                           jmp 0x40006d6	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x40005be	        0x4180fc75	                          cmp r12b, 0x75	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005c2	            0x7423	                            je 0x40005e7	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005c4	        0x4180fc77	                          cmp r12b, 0x77	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005c8	            0x7434	                            je 0x40005fe	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005ca	        0x4180fc61	                          cmp r12b, 0x61	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005ce	            0x7545	                           jne 0x4000615	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005d0	      0xbe00000000	                              mov esi, 0	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x40005d5	          0x4889ef	                            mov rdi, rbp	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x40005d8	      0xe817fcffff	                  call sym.string_append	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x40005dd	      0xbe02000000	                              mov esi, 2	       966	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005e2	      0xe9e6010000	                           jmp 0x40007cd	       967	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005e7	      0xbe00000000	                              mov esi, 0	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x40005ec	          0x4889ef	                            mov rdi, rbp	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x40005ef	      0xe800fcffff	                  call sym.string_append	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x40005f4	      0xbe04000000	                              mov esi, 4	       970	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005f9	      0xe9cf010000	                           jmp 0x40007cd	       971	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005fe	      0xbe00000000	                              mov esi, 0	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x4000603	          0x4889ef	                            mov rdi, rbp	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x4000606	      0xe8e9fbffff	                  call sym.string_append	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x400060b	      0xbe08000000	                              mov esi, 8	       974	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4000610	      0xe9b8010000	                           jmp 0x40007cd	       975	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4000615	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400061a	          0x4885c9	                           test rcx, rcx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400061d	     0xf8e95000000	                           jle 0x40006b8	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000623	      0xbe00000000	                              mov esi, 0	       944	d-demangle.c	FUNCTION_20	IF_1
0x4000628	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       944	d-demangle.c	FUNCTION_20	IF_1
0x400062d	      0xbf09000000	                              mov edi, 9	       944	d-demangle.c	FUNCTION_20	IF_1
0x4000632	          0x4889c8	                            mov rax, rcx	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000635	        0x48c1f83f	                           sar rax, 0x3f	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000639	        0x48c1e83c	                           shr rax, 0x3c	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400063d	        0x488d1401	                    lea rdx, [rcx + rax]	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000641	          0x83e20f	                            and edx, 0xf	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000644	          0x4829c2	                            sub rdx, rax	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000647	          0x83fa09	                              cmp edx, 9	       982	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x400064a	            0x7f0c	                            jg 0x4000658	       982	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x400064c	          0x4189f9	                            mov r9d, edi	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x400064f	          0x83c230	                           add edx, 0x30	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4000652	        0x41885009	                   mov byte [r8 + 9], dl	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4000656	            0xeb0a	                           jmp 0x4000662	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4000658	          0x4189f9	                            mov r9d, edi	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x400065b	          0x83c257	                           add edx, 0x57	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x400065e	        0x41885009	                   mov byte [r8 + 9], dl	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4000662	        0x488d410f	                    lea rax, [rcx + 0xf]	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000666	          0x4885c9	                           test rcx, rcx	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000669	        0x480f49c1	                         cmovns rax, rcx	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400066d	        0x48c1f804	                              sar rax, 4	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000671	          0x4889c1	                            mov rcx, rax	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000674	          0x83ee01	                              sub esi, 1	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000677	          0x83ef01	                              sub edi, 1	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400067a	        0x4983e801	                               sub r8, 1	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400067e	          0x4885c0	                           test rax, rax	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000681	            0x7faf	                            jg 0x4000632	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000683	      0x4889442408	                mov qword [rsp + 8], rax	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000688	            0x85f6	                           test esi, esi	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400068a	            0x7e32	                           jle 0x40006be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400068c	          0x4489c8	                            mov eax, r9d	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400068f	          0x83e801	                              sub eax, 1	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000692	          0x4863d0	                         movsxd rdx, eax	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000695	      0xc644141030	      mov byte [rsp + rdx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400069a	          0x8d1406	                    lea edx, [rsi + rax]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400069d	          0x4429ca	                            sub edx, r9d	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006a0	            0x85d2	                           test edx, edx	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006a2	            0x7feb	                            jg 0x400068f	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006a4	        0x4183e901	                              sub r9d, 1	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006a8	          0x83ee01	                              sub esi, 1	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006ab	      0xb800000000	                              mov eax, 0	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006b0	           0xf48f0	                          cmovs esi, eax	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006b3	          0x4129f1	                            sub r9d, esi	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006b6	            0xeb06	                           jmp 0x40006be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40006b8	    0x41b90a000000	                            mov r9d, 0xa	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40006be	      0xba0a000000	                            mov edx, 0xa	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x40006c3	          0x4429ca	                            sub edx, r9d	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x40006c6	          0x4d63c9	                          movsxd r9, r9d	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x40006c9	      0x4a8d740c10	              lea rsi, [rsp + r9 + 0x10]	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x40006ce	          0x4889ef	                            mov rdi, rbp	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x40006d1	      0xe82afeffff	                 call sym.string_appendn	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x40006d6	      0xbe00000000	                              mov esi, 0	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x40006db	          0x4889ef	                            mov rdi, rbp	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x40006de	      0xe811fbffff	                  call sym.string_append	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x40006e3	          0x4889d8	                            mov rax, rbx	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x40006e6	      0xe9d0000000	                           jmp 0x40007bb	       940	d-demangle.c	FUNCTION_20	IF_1
0x40006eb	          0x80fa62	                            cmp dl, 0x62	       998	d-demangle.c	FUNCTION_20	ELSE_3	IF_5
0x40006ee	            0x7540	                           jne 0x4000730	       998	d-demangle.c	FUNCTION_20	ELSE_3	IF_5
0x40006f0	      0x488d742408	                      lea rsi, [rsp + 8]	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x40006f5	      0xe87bf9ffff	                   call sym.dlang_number	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x40006fa	          0x4889c3	                            mov rbx, rax	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x40006fd	          0x4885c0	                           test rax, rax	      1004	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x4000700	            0x750a	                           jne 0x400070c	      1004	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x4000702	      0xb800000000	                              mov eax, 0	      1005	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x4000707	      0xe9af000000	                           jmp 0x40007bb	      1005	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x400070c	    0x48837c240800	                  cmp qword [rsp + 8], 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000712	      0xbe00000000	                              mov esi, 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000717	      0xb800000000	                              mov eax, 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x400071c	        0x480f45f0	                         cmovne rsi, rax	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000720	          0x4889ef	                            mov rdi, rbp	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000723	      0xe8ccfaffff	                  call sym.string_append	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000728	          0x4889d8	                            mov rax, rbx	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x400072b	      0xe98b000000	                           jmp 0x40007bb	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x4000730	           0xfb606	                   movzx eax, byte [rsi]	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4000733	    0xf68400000000	                test byte [rax + rax], 4	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x400073b	            0x7474	                            je 0x40007b1	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x400073d	          0x4889f3	                            mov rbx, rsi	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4000740	      0xba00000000	                              mov edx, 0	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4000745	        0x4883c201	                              add rdx, 1	      1020	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4000749	        0x4883c301	                              add rbx, 1	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x400074d	           0xfb603	                   movzx eax, byte [rbx]	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4000750	    0xf68400000000	                test byte [rax + rax], 4	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4000758	            0x75eb	                           jne 0x4000745	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x400075a	          0x4889fe	                            mov rsi, rdi	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x400075d	          0x4889ef	                            mov rdi, rbp	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4000760	      0xe89bfdffff	                 call sym.string_appendn	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x4000765	        0x4183ec68	                          sub r12d, 0x68	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4000769	        0x4180fc0c	                           cmp r12b, 0xc	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x400076d	            0x7749	                            ja 0x40007b8	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x400076f	        0x450fb6e4	                        movzx r12d, r12b	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4000773	    0x42ff24e50000	                       jmp qword [r12*8]	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x400077b	      0xbe00000000	                              mov esi, 0	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x4000780	          0x4889ef	                            mov rdi, rbp	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x4000783	      0xe86cfaffff	                  call sym.string_append	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x4000788	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x400078b	            0xeb2e	                           jmp 0x40007bb	      1032	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x400078d	      0xbe00000000	                              mov esi, 0	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x4000792	          0x4889ef	                            mov rdi, rbp	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x4000795	      0xe85afaffff	                  call sym.string_append	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x400079a	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x400079d	            0xeb1c	                           jmp 0x40007bb	      1035	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x400079f	      0xbe00000000	                              mov esi, 0	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x40007a4	          0x4889ef	                            mov rdi, rbp	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x40007a7	      0xe848faffff	                  call sym.string_append	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x40007ac	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x40007af	            0xeb0a	                           jmp 0x40007bb	      1038	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40007b1	      0xb800000000	                              mov eax, 0	      1016	d-demangle.c	FUNCTION_20	ELSE_4	IF_7
0x40007b6	            0xeb03	                           jmp 0x40007bb	      1016	d-demangle.c	FUNCTION_20	ELSE_4	IF_7
0x40007b8	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x40007bb	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1043	d-demangle.c	FUNCTION_20
0x40007c0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1043	d-demangle.c	FUNCTION_20
0x40007c9	            0x7420	                            je 0x40007eb	      1043	d-demangle.c	FUNCTION_20
0x40007cb	            0xeb19	                           jmp 0x40007e6	      1043	d-demangle.c	FUNCTION_20
0x40007cd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40007d2	    0x41b90a000000	                            mov r9d, 0xa	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40007d8	          0x4885c9	                           test rcx, rcx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40007db	     0xf8eabfeffff	                           jle 0x400068c	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40007e1	      0xe942feffff	                           jmp 0x4000628	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40007e6	      0xe800000000	                          call 0x40007eb	      1043	d-demangle.c	FUNCTION_20
0x40007eb	        0x4883c430	                           add rsp, 0x30	      1043	d-demangle.c	FUNCTION_20
0x40007ef	              0x5b	                                 pop rbx	      1043	d-demangle.c	FUNCTION_20
0x40007f0	              0x5d	                                 pop rbp	      1043	d-demangle.c	FUNCTION_20
0x40007f1	            0x415c	                                 pop r12	      1043	d-demangle.c	FUNCTION_20
0x40007f3	              0xc3	                                     ret	      1043	d-demangle.c	FUNCTION_20
string_setlength	CALL,1:functions,0:ELSE,0:WHILE,0:DO,0:IF,1:SWITCH,0:FOR,0	13
0x4000057	              0x55	                                push rbp	       110	d-demangle.c	FUNCTION_5
0x4000058	              0x53	                                push rbx	       110	d-demangle.c	FUNCTION_5
0x4000059	          0x4889fd	                            mov rbp, rdi	       110	d-demangle.c	FUNCTION_5
0x400005c	            0x89f3	                            mov ebx, esi	       110	d-demangle.c	FUNCTION_5
0x400005e	      0xe8ddffffff	                  call sym.string_length	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4000063	            0x39c3	                            cmp ebx, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4000065	            0x790b	                           jns 0x4000072	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4000067	          0x4863db	                         movsxd rbx, ebx	       113	d-demangle.c	FUNCTION_5	IF_1
0x400006a	        0x48035d00	                    add rbx, qword [rbp]	       113	d-demangle.c	FUNCTION_5	IF_1
0x400006e	        0x48895d08	                mov qword [rbp + 8], rbx	       113	d-demangle.c	FUNCTION_5	IF_1
0x4000072	              0x5b	                                 pop rbx	       115	d-demangle.c	FUNCTION_5
0x4000073	              0x5d	                                 pop rbp	       115	d-demangle.c	FUNCTION_5
0x4000074	              0xc3	                                     ret	       115	d-demangle.c	FUNCTION_5
dlang_parse_qualified	CALL,15:functions,0:ELSE,0:WHILE,1:DO,1:IF,4:SWITCH,0:FOR,0	95
0x4001d4b	            0x4157	                                push r15	      1414	d-demangle.c	FUNCTION_28
0x4001d4d	            0x4156	                                push r14	      1414	d-demangle.c	FUNCTION_28
0x4001d4f	            0x4155	                                push r13	      1414	d-demangle.c	FUNCTION_28
0x4001d51	            0x4154	                                push r12	      1414	d-demangle.c	FUNCTION_28
0x4001d53	              0x55	                                push rbp	      1414	d-demangle.c	FUNCTION_28
0x4001d54	              0x53	                                push rbx	      1414	d-demangle.c	FUNCTION_28
0x4001d55	        0x4883ec08	                              sub rsp, 8	      1414	d-demangle.c	FUNCTION_28
0x4001d59	          0x4889fd	                            mov rbp, rdi	      1414	d-demangle.c	FUNCTION_28
0x4001d5c	          0x4889f3	                            mov rbx, rsi	      1414	d-demangle.c	FUNCTION_28
0x4001d5f	          0x4189d7	                           mov r15d, edx	      1414	d-demangle.c	FUNCTION_28
0x4001d62	    0x41bc01000000	                             mov r12d, 1	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4001d68	            0xeb19	                           jmp 0x4001d83	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4001d6a	          0x4c89eb	                            mov rbx, r13	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4001d6d	          0x4d85e4	                           test r12, r12	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x4001d70	            0x740d	                            je 0x4001d7f	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x4001d72	      0xbe00000000	                              mov esi, 0	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x4001d77	          0x4889ef	                            mov rdi, rbp	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x4001d7a	      0xe875e4ffff	                  call sym.string_append	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x4001d7f	        0x4983c401	                              add r12, 1	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x4001d83	          0x803b30	                    cmp byte [rbx], 0x30	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4001d86	            0x7509	                           jne 0x4001d91	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4001d88	        0x4883c301	                              add rbx, 1	      1435	d-demangle.c	FUNCTION_28	DO_1
0x4001d8c	          0x803b30	                    cmp byte [rbx], 0x30	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4001d8f	            0x74f7	                            je 0x4001d88	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4001d91	          0x4489fa	                           mov edx, r15d	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4001d94	          0x4889de	                            mov rsi, rbx	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4001d97	          0x4889ef	                            mov rdi, rbp	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4001d9a	      0xe89ef9ffff	               call sym.dlang_identifier	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4001d9f	          0x4889c3	                            mov rbx, rax	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4001da2	          0x4885c0	                           test rax, rax	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001da5	     0xf84dd000000	                            je 0x4001e88	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001dab	          0x80384d	                    cmp byte [rax], 0x4d	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001dae	     0xf8486000000	                            je 0x4001e3a	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001db4	          0x4889c7	                            mov rdi, rax	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001db7	      0xe876e3ffff	        call sym.dlang_call_convention_p	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001dbc	            0x85c0	                           test eax, eax	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001dbe	     0xf85a0000000	                           jne 0x4001e64	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001dc4	      0xe9ae000000	                           jmp 0x4001e77	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001dc9	          0x4c89ee	                            mov rsi, r13	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x4001dcc	          0x4889ef	                            mov rdi, rbp	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x4001dcf	      0xe816e5ffff	          call sym.dlang_call_convention	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x4001dd4	          0x4889c6	                            mov rsi, rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001dd7	          0x4889ef	                            mov rdi, rbp	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001dda	      0xe8a3e5ffff	               call sym.dlang_attributes	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001ddf	          0x4989c5	                            mov r13, rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001de2	          0x4489f6	                           mov esi, r14d	      1465	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_9
0x4001de5	          0x4889ef	                            mov rdi, rbp	      1465	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_9
0x4001de8	      0xe86ae2ffff	               call sym.string_setlength	      1465	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_9
0x4001ded	      0xbe00000000	                              mov esi, 0	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4001df2	          0x4889ef	                            mov rdi, rbp	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4001df5	      0xe8fae3ffff	                  call sym.string_append	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4001dfa	          0x4c89ee	                            mov rsi, r13	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4001dfd	          0x4889ef	                            mov rdi, rbp	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4001e00	      0xe8f5f7ffff	            call sym.dlang_function_args	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4001e05	          0x4989c5	                            mov r13, rax	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4001e08	      0xbe00000000	                              mov esi, 0	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x4001e0d	          0x4889ef	                            mov rdi, rbp	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x4001e10	      0xe8dfe3ffff	                  call sym.string_append	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x4001e15	          0x4d85ed	                           test r13, r13	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001e18	            0x7413	                            je 0x4001e2d	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001e1a	      0x410fb64500	                   movzx eax, byte [r13]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001e1f	    0xf68400000000	                test byte [rax + rax], 4	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001e27	     0xf853dffffff	                           jne 0x4001d6a	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001e2d	          0x4489f6	                           mov esi, r14d	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x4001e30	          0x4889ef	                            mov rdi, rbp	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x4001e33	      0xe81fe2ffff	               call sym.string_setlength	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x4001e38	            0xeb3d	                           jmp 0x4001e77	      1475	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_14
0x4001e3a	          0x4889ef	                            mov rdi, rbp	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x4001e3d	      0xe8fee1ffff	                  call sym.string_length	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x4001e42	          0x4189c6	                           mov r14d, eax	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x4001e45	        0x488d7301	                      lea rsi, [rbx + 1]	      1451	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3
0x4001e49	          0x4889ef	                            mov rdi, rbp	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4001e4c	      0xe8eae3ffff	           call sym.dlang_type_modifiers	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4001e51	          0x4989c5	                            mov r13, rax	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4001e54	          0x4489f6	                           mov esi, r14d	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x4001e57	          0x4889ef	                            mov rdi, rbp	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x4001e5a	      0xe8f8e1ffff	               call sym.string_setlength	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x4001e5f	      0xe965ffffff	                           jmp 0x4001dc9	      1453	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_6
0x4001e64	          0x4889ef	                            mov rdi, rbp	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x4001e67	      0xe8d4e1ffff	                  call sym.string_length	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x4001e6c	          0x4189c6	                           mov r14d, eax	      1446	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_4
0x4001e6f	          0x4989dd	                            mov r13, rbx	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4001e72	      0xe952ffffff	                           jmp 0x4001dc9	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4001e77	           0xfb603	                   movzx eax, byte [rbx]	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x4001e7a	    0xf68400000000	                test byte [rax + rax], 4	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x4001e82	     0xf85e5feffff	                           jne 0x4001d6d	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x4001e88	          0x4889d8	                            mov rax, rbx	      1482	d-demangle.c	FUNCTION_28
0x4001e8b	        0x4883c408	                              add rsp, 8	      1482	d-demangle.c	FUNCTION_28
0x4001e8f	              0x5b	                                 pop rbx	      1482	d-demangle.c	FUNCTION_28
0x4001e90	              0x5d	                                 pop rbp	      1482	d-demangle.c	FUNCTION_28
0x4001e91	            0x415c	                                 pop r12	      1482	d-demangle.c	FUNCTION_28
0x4001e93	            0x415d	                                 pop r13	      1482	d-demangle.c	FUNCTION_28
0x4001e95	            0x415e	                                 pop r14	      1482	d-demangle.c	FUNCTION_28
0x4001e97	            0x415f	                                 pop r15	      1482	d-demangle.c	FUNCTION_28
0x4001e99	              0xc3	                                     ret	      1482	d-demangle.c	FUNCTION_28
dlang_parse_real	CALL,17:functions,0:ELSE,2:WHILE,2:DO,0:IF,7:SWITCH,0:FOR,0	108
0x40007f4	            0x4154	                                push r12	      1049	d-demangle.c	FUNCTION_21
0x40007f6	              0x55	                                push rbp	      1049	d-demangle.c	FUNCTION_21
0x40007f7	              0x53	                                push rbx	      1049	d-demangle.c	FUNCTION_21
0x40007f8	          0x4989fc	                            mov r12, rdi	      1049	d-demangle.c	FUNCTION_21
0x40007fb	          0x4889f5	                            mov rbp, rsi	      1049	d-demangle.c	FUNCTION_21
0x40007fe	      0xbf00000000	                              mov edi, 0	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000803	      0xb903000000	                              mov ecx, 3	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000808	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x400080a	           0xf97c2	                                 seta dl	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x400080d	           0xf92c0	                                 setb al	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000810	            0x38c2	                              cmp dl, al	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000812	            0x7516	                           jne 0x400082a	      1051	d-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4000814	      0xbe00000000	                              mov esi, 0	      1053	d-demangle.c	FUNCTION_21	IF_1	CALL_2
0x4000819	          0x4c89e7	                            mov rdi, r12	      1053	d-demangle.c	FUNCTION_21	IF_1	CALL_2
0x400081c	      0xe8d3f9ffff	                  call sym.string_append	      1053	d-demangle.c	FUNCTION_21	IF_1	CALL_2
0x4000821	        0x488d4503	                      lea rax, [rbp + 3]	      1055	d-demangle.c	FUNCTION_21	IF_1
0x4000825	      0xe959010000	                           jmp 0x4000983	      1055	d-demangle.c	FUNCTION_21	IF_1
0x400082a	      0xbf00000000	                              mov edi, 0	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x400082f	      0xb903000000	                              mov ecx, 3	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4000834	          0x4889ee	                            mov rsi, rbp	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4000837	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4000839	           0xf97c2	                                 seta dl	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x400083c	           0xf92c0	                                 setb al	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x400083f	            0x38c2	                              cmp dl, al	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4000841	            0x7516	                           jne 0x4000859	      1057	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x4000843	      0xbe00000000	                              mov esi, 0	      1059	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_4
0x4000848	          0x4c89e7	                            mov rdi, r12	      1059	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_4
0x400084b	      0xe8a4f9ffff	                  call sym.string_append	      1059	d-demangle.c	FUNCTION_21	ELSE_1	IF_2	CALL_4
0x4000850	        0x488d4503	                      lea rax, [rbp + 3]	      1061	d-demangle.c	FUNCTION_21	ELSE_1	IF_2
0x4000854	      0xe92a010000	                           jmp 0x4000983	      1061	d-demangle.c	FUNCTION_21	ELSE_1	IF_2
0x4000859	      0xbf00000000	                              mov edi, 0	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x400085e	      0xb904000000	                              mov ecx, 4	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4000863	          0x4889ee	                            mov rsi, rbp	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4000866	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4000868	           0xf97c2	                                 seta dl	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x400086b	           0xf92c0	                                 setb al	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x400086e	            0x38c2	                              cmp dl, al	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4000870	            0x7516	                           jne 0x4000888	      1063	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_5
0x4000872	      0xbe00000000	                              mov esi, 0	      1065	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_6
0x4000877	          0x4c89e7	                            mov rdi, r12	      1065	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_6
0x400087a	      0xe875f9ffff	                  call sym.string_append	      1065	d-demangle.c	FUNCTION_21	ELSE_2	IF_3	CALL_6
0x400087f	        0x488d4504	                      lea rax, [rbp + 4]	      1067	d-demangle.c	FUNCTION_21	ELSE_2	IF_3
0x4000883	      0xe9fb000000	                           jmp 0x4000983	      1067	d-demangle.c	FUNCTION_21	ELSE_2	IF_3
0x4000888	        0x807d004e	                    cmp byte [rbp], 0x4e	      1071	d-demangle.c	FUNCTION_21	IF_4
0x400088c	            0x7511	                           jne 0x400089f	      1071	d-demangle.c	FUNCTION_21	IF_4
0x400088e	      0xbe00000000	                              mov esi, 0	      1073	d-demangle.c	FUNCTION_21	IF_4	CALL_7
0x4000893	          0x4c89e7	                            mov rdi, r12	      1073	d-demangle.c	FUNCTION_21	IF_4	CALL_7
0x4000896	      0xe859f9ffff	                  call sym.string_append	      1073	d-demangle.c	FUNCTION_21	IF_4	CALL_7
0x400089b	        0x4883c501	                              add rbp, 1	      1074	d-demangle.c	FUNCTION_21	IF_4
0x400089f	         0xfb65500	                   movzx edx, byte [rbp]	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x40008a3	      0xb800000000	                              mov eax, 0	      1078	d-demangle.c	FUNCTION_21	IF_5
0x40008a8	    0xf68412000000	                test byte [rdx + rdx], 1	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x40008b0	     0xf84cd000000	                            je 0x4000983	      1077	d-demangle.c	FUNCTION_21	IF_5	CALL_8
0x40008b6	      0xbe00000000	                              mov esi, 0	      1080	d-demangle.c	FUNCTION_21	CALL_9
0x40008bb	          0x4c89e7	                            mov rdi, r12	      1080	d-demangle.c	FUNCTION_21	CALL_9
0x40008be	      0xe831f9ffff	                  call sym.string_append	      1080	d-demangle.c	FUNCTION_21	CALL_9
0x40008c3	      0xba01000000	                              mov edx, 1	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x40008c8	          0x4889ee	                            mov rsi, rbp	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x40008cb	          0x4c89e7	                            mov rdi, r12	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x40008ce	      0xe82dfcffff	                 call sym.string_appendn	      1081	d-demangle.c	FUNCTION_21	CALL_10
0x40008d3	      0xbe00000000	                              mov esi, 0	      1082	d-demangle.c	FUNCTION_21	CALL_11
0x40008d8	          0x4c89e7	                            mov rdi, r12	      1082	d-demangle.c	FUNCTION_21	CALL_11
0x40008db	      0xe814f9ffff	                  call sym.string_append	      1082	d-demangle.c	FUNCTION_21	CALL_11
0x40008e0	        0x488d5d01	                      lea rbx, [rbp + 1]	      1083	d-demangle.c	FUNCTION_21
0x40008e4	         0xfb65501	               movzx edx, byte [rbp + 1]	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x40008e8	           0xfb6c2	                           movzx eax, dl	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x40008eb	    0xf68400000000	                test byte [rax + rax], 1	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x40008f3	            0x7424	                            je 0x4000919	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x40008f5	      0xba01000000	                              mov edx, 1	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x40008fa	          0x4889de	                            mov rsi, rbx	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x40008fd	          0x4c89e7	                            mov rdi, r12	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x4000900	      0xe8fbfbffff	                 call sym.string_appendn	      1088	d-demangle.c	FUNCTION_21	WHILE_1	CALL_13
0x4000905	        0x4883c301	                              add rbx, 1	      1089	d-demangle.c	FUNCTION_21	WHILE_1
0x4000909	           0xfb613	                   movzx edx, byte [rbx]	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x400090c	           0xfb6c2	                           movzx eax, dl	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x400090f	    0xf68400000000	                test byte [rax + rax], 1	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4000917	            0x75dc	                           jne 0x40008f5	      1086	d-demangle.c	FUNCTION_21	WHILE_1	CALL_12
0x4000919	      0xb800000000	                              mov eax, 0	      1094	d-demangle.c	FUNCTION_21	IF_6
0x400091e	          0x80fa50	                            cmp dl, 0x50	      1093	d-demangle.c	FUNCTION_21	IF_6
0x4000921	            0x7560	                           jne 0x4000983	      1093	d-demangle.c	FUNCTION_21	IF_6
0x4000923	      0xbe00000000	                              mov esi, 0	      1096	d-demangle.c	FUNCTION_21	CALL_14
0x4000928	          0x4c89e7	                            mov rdi, r12	      1096	d-demangle.c	FUNCTION_21	CALL_14
0x400092b	      0xe8c4f8ffff	                  call sym.string_append	      1096	d-demangle.c	FUNCTION_21	CALL_14
0x4000930	        0x488d6b01	                      lea rbp, [rbx + 1]	      1097	d-demangle.c	FUNCTION_21
0x4000934	        0x807b014e	                cmp byte [rbx + 1], 0x4e	      1099	d-demangle.c	FUNCTION_21	IF_7
0x4000938	            0x7511	                           jne 0x400094b	      1099	d-demangle.c	FUNCTION_21	IF_7
0x400093a	      0xbe00000000	                              mov esi, 0	      1101	d-demangle.c	FUNCTION_21	IF_7	CALL_15
0x400093f	          0x4c89e7	                            mov rdi, r12	      1101	d-demangle.c	FUNCTION_21	IF_7	CALL_15
0x4000942	      0xe8adf8ffff	                  call sym.string_append	      1101	d-demangle.c	FUNCTION_21	IF_7	CALL_15
0x4000947	        0x488d6b02	                      lea rbp, [rbx + 2]	      1102	d-demangle.c	FUNCTION_21	IF_7
0x400094b	         0xfb64500	                   movzx eax, byte [rbp]	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x400094f	    0xf68400000000	                test byte [rax + rax], 4	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4000957	            0x7427	                            je 0x4000980	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4000959	      0xba01000000	                              mov edx, 1	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x400095e	          0x4889ee	                            mov rsi, rbp	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4000961	          0x4c89e7	                            mov rdi, r12	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4000964	      0xe897fbffff	                 call sym.string_appendn	      1107	d-demangle.c	FUNCTION_21	WHILE_2	CALL_17
0x4000969	        0x4883c501	                              add rbp, 1	      1108	d-demangle.c	FUNCTION_21	WHILE_2
0x400096d	         0xfb64500	                   movzx eax, byte [rbp]	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4000971	    0xf68400000000	                test byte [rax + rax], 4	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4000979	            0x75de	                           jne 0x4000959	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x400097b	          0x4889e8	                            mov rax, rbp	      1108	d-demangle.c	FUNCTION_21	WHILE_2
0x400097e	            0xeb03	                           jmp 0x4000983	      1108	d-demangle.c	FUNCTION_21	WHILE_2
0x4000980	          0x4889e8	                            mov rax, rbp	      1105	d-demangle.c	FUNCTION_21	WHILE_2	CALL_16
0x4000983	              0x5b	                                 pop rbx	      1112	d-demangle.c	FUNCTION_21
0x4000984	              0x5d	                                 pop rbp	      1112	d-demangle.c	FUNCTION_21
0x4000985	            0x415c	                                 pop r12	      1112	d-demangle.c	FUNCTION_21
0x4000987	              0xc3	                                     ret	      1112	d-demangle.c	FUNCTION_21
dlang_identifier	CALL,36:functions,0:ELSE,5:WHILE,0:DO,0:IF,16:SWITCH,1:FOR,1	401
0x400173d	            0x4157	                                push r15	       786	d-demangle.c	FUNCTION_19
0x400173f	            0x4156	                                push r14	       786	d-demangle.c	FUNCTION_19
0x4001741	            0x4155	                                push r13	       786	d-demangle.c	FUNCTION_19
0x4001743	            0x4154	                                push r12	       786	d-demangle.c	FUNCTION_19
0x4001745	              0x55	                                push rbp	       786	d-demangle.c	FUNCTION_19
0x4001746	              0x53	                                push rbx	       786	d-demangle.c	FUNCTION_19
0x4001747	        0x4883ec48	                           sub rsp, 0x48	       786	d-demangle.c	FUNCTION_19
0x400174b	          0x4989fe	                            mov r14, rdi	       786	d-demangle.c	FUNCTION_19
0x400174e	          0x4889f7	                            mov rdi, rsi	       786	d-demangle.c	FUNCTION_19
0x4001751	            0x89d5	                            mov ebp, edx	       786	d-demangle.c	FUNCTION_19
0x4001753	    0x64488b042528	                mov rax, qword fs:[0x28]	       786	d-demangle.c	FUNCTION_19
0x400175c	      0x4889442438	             mov qword [rsp + 0x38], rax	       786	d-demangle.c	FUNCTION_19
0x4001761	            0x31c0	                            xor eax, eax	       786	d-demangle.c	FUNCTION_19
0x4001763	      0x488d742418	                   lea rsi, [rsp + 0x18]	       788	d-demangle.c	FUNCTION_19	CALL_1
0x4001768	      0xe808e9ffff	                   call sym.dlang_number	       788	d-demangle.c	FUNCTION_19	CALL_1
0x400176d	          0x4885c0	                           test rax, rax	       790	d-demangle.c	FUNCTION_19	IF_1
0x4001770	     0xf8402050000	                            je 0x4001c78	       790	d-demangle.c	FUNCTION_19	IF_1
0x4001776	          0x4989c4	                            mov r12, rax	       790	d-demangle.c	FUNCTION_19	IF_1
0x4001779	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       790	d-demangle.c	FUNCTION_19	IF_1
0x400177e	          0x4885db	                           test rbx, rbx	       790	d-demangle.c	FUNCTION_19	IF_1
0x4001781	     0xf84f8040000	                            je 0x4001c7f	       790	d-demangle.c	FUNCTION_19	IF_1
0x4001787	          0x83fd04	                              cmp ebp, 4	       796	d-demangle.c	FUNCTION_19	IF_2
0x400178a	     0xf85ca000000	                           jne 0x400185a	       796	d-demangle.c	FUNCTION_19	IF_2
0x4001790	          0x4c89f7	                            mov rdi, r14	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x4001793	      0xe8a8e8ffff	                  call sym.string_length	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x4001798	        0x8944240c	              mov dword [rsp + 0xc], eax	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x400179c	          0x4c89e0	                            mov rax, r12	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x400179f	          0x4d89e5	                            mov r13, r12	       800	d-demangle.c	FUNCTION_19	IF_2	CALL_2
0x40017a2	    0x49bf67666666	          movabs r15, 0x6666666666666667	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40017ac	            0xeb16	                           jmp 0x40017c4	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40017ae	          0x4989c5	                            mov r13, rax	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40017b1	          0x4885ed	                           test rbp, rbp	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40017b4	            0x750e	                           jne 0x40017c4	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40017b6	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       811	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40017bb	          0x4d89e5	                            mov r13, r12	       811	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40017be	    0x41bc00000000	                             mov r12d, 0	       813	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40017c4	           0xfb610	                   movzx edx, byte [rax]	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40017c7	    0xf68412000000	                test byte [rdx + rdx], 4	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40017cf	            0x7412	                            je 0x40017e3	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40017d1	      0xba03000000	                              mov edx, 3	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40017d6	          0x4889c6	                            mov rsi, rax	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40017d9	          0x4c89f7	                            mov rdi, r14	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40017dc	      0xe86a050000	          call sym.dlang_parse_qualified	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40017e1	            0xeb29	                           jmp 0x400180c	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40017e3	      0xbf00000000	                              mov edi, 0	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40017e8	      0xb902000000	                              mov ecx, 2	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40017ed	          0x4889c6	                            mov rsi, rax	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40017f0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40017f2	           0xf97c1	                                 seta cl	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40017f5	           0xf92c2	                                 setb dl	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40017f8	            0x38d1	                              cmp cl, dl	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40017fa	            0x7510	                           jne 0x400180c	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40017fc	      0xba01000000	                              mov edx, 1	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001801	          0x4889c6	                            mov rsi, rax	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001804	          0x4c89f7	                            mov rdi, r14	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001807	      0xe88e060000	             call sym.dlang_parse_mangle	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x400180c	          0x4885c0	                           test rax, rax	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400180f	            0x740f	                            je 0x4001820	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001811	          0x4889c2	                            mov rdx, rax	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001814	          0x4c29ea	                            sub rdx, r13	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001817	          0x4839d3	                            cmp rbx, rdx	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400181a	     0xf8466040000	                            je 0x4001c86	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001820	          0x4889d8	                            mov rax, rbx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001823	          0x49f7ef	                                imul r15	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001826	        0x48c1fa02	                              sar rdx, 2	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400182a	        0x48c1fb3f	                           sar rbx, 0x3f	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400182e	          0x4829da	                            sub rdx, rbx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001831	          0x4889d5	                            mov rbp, rdx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001834	          0x4889d3	                            mov rbx, rdx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001837	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       829	d-demangle.c	FUNCTION_19	IF_2	FOR_1	CALL_7
0x400183b	          0x4c89f7	                            mov rdi, r14	       829	d-demangle.c	FUNCTION_19	IF_2	FOR_1	CALL_7
0x400183e	      0xe814e8ffff	               call sym.string_setlength	       829	d-demangle.c	FUNCTION_19	IF_2	FOR_1	CALL_7
0x4001843	        0x498d45ff	                      lea rax, [r13 - 1]	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001847	          0x4d85e4	                           test r12, r12	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400184a	     0xf855effffff	                           jne 0x40017ae	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001850	      0xbd00000000	                              mov ebp, 0	       833	d-demangle.c	FUNCTION_19	IF_2
0x4001855	      0xe93d040000	                           jmp 0x4001c97	       833	d-demangle.c	FUNCTION_19	IF_2
0x400185a	      0xb800000000	                              mov eax, 0	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x400185f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4001866	          0x4c89e7	                            mov rdi, r12	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4001869	            0xf2ae	              repne scasb al, byte [rdi]	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x400186b	          0x4889c8	                            mov rax, rcx	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x400186e	          0x48f7d0	                                 not rax	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4001871	        0x4883e801	                              sub rax, 1	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4001875	          0x4889da	                            mov rdx, rbx	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4001878	          0x4839d8	                            cmp rax, rbx	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x400187b	     0xf820a040000	                            jb 0x4001c8b	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4001881	        0x4883fb04	                              cmp rbx, 4	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001885	     0xf8e4e040000	                           jle 0x4001cd9	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400188b	      0x41803c245f	                    cmp byte [r12], 0x5f	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001890	     0xf8598010000	                           jne 0x4001a2e	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4001896	    0x41807c24015f	                cmp byte [r12 + 1], 0x5f	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400189c	     0xf858c010000	                           jne 0x4001a2e	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x40018a2	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x40018a8	          0x83e854	                           sub eax, 0x54	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x40018ab	            0x3c01	                               cmp al, 1	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x40018ad	     0xf877b010000	                            ja 0x4001a2e	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x40018b3	    0x410fb6442403	               movzx eax, byte [r12 + 3]	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40018b9	           0xfb6d0	                           movzx edx, al	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40018bc	    0xf68412000000	                test byte [rdx + rdx], 4	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40018c4	     0xf84c8030000	                            je 0x4001c92	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40018ca	            0x3c30	                            cmp al, 0x30	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40018cc	     0xf84c0030000	                            je 0x4001c92	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40018d2	      0x498d742403	                      lea rsi, [r12 + 3]	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x40018d7	      0xba03000000	                              mov edx, 3	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x40018dc	          0x4c89f7	                            mov rdi, r14	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x40018df	      0xe859feffff	               call sym.dlang_identifier	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x40018e4	          0x4889c5	                            mov rbp, rax	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x40018e7	      0xbe00000000	                              mov esi, 0	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x40018ec	          0x4c89f7	                            mov rdi, r14	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x40018ef	      0xe800e9ffff	                  call sym.string_append	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x40018f4	          0x4885ed	                           test rbp, rbp	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40018f7	     0xf84c8030000	                            je 0x4001cc5	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40018fd	         0xfb64500	                   movzx eax, byte [rbp]	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001901	            0x84c0	                             test al, al	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001903	     0xf84aa030000	                            je 0x4001cb3	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001909	    0x41bd00000000	                             mov r13d, 0	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x400190f	            0x3c5a	                            cmp al, 0x5a	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4001911	            0x7509	                           jne 0x400191c	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4001913	        0x4883c501	                              add rbp, 1	      1521	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4001917	      0xe9e5000000	                           jmp 0x4001a01	      1521	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x400191c	          0x4d85ed	                           test r13, r13	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x400191f	            0x740d	                            je 0x400192e	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x4001921	      0xbe00000000	                              mov esi, 0	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4001926	          0x4c89f7	                            mov rdi, r14	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4001929	      0xe8c6e8ffff	                  call sym.string_append	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x400192e	        0x807d0048	                    cmp byte [rbp], 0x48	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4001932	           0xf94c0	                                 sete al	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4001935	           0xfb6c0	                           movzx eax, al	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4001938	          0x4801c5	                            add rbp, rax	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x400193b	         0xfb64500	                   movzx eax, byte [rbp]	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x400193f	            0x3c54	                            cmp al, 0x54	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001941	            0x7422	                            je 0x4001965	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001943	            0x3c56	                            cmp al, 0x56	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001945	            0x742f	                            je 0x4001976	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001947	            0x3c53	                            cmp al, 0x53	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001949	     0xf85ad000000	                           jne 0x40019fc	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x400194f	        0x488d7501	                      lea rsi, [rbp + 1]	      1534	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001953	      0xba04000000	                              mov edx, 4	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4001958	          0x4c89f7	                            mov rdi, r14	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x400195b	      0xe8ddfdffff	               call sym.dlang_identifier	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4001960	          0x4889c5	                            mov rbp, rax	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4001963	            0xeb79	                           jmp 0x40019de	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4001965	        0x488d7501	                      lea rsi, [rbp + 1]	      1538	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001969	          0x4c89f7	                            mov rdi, r14	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x400196c	      0xe87bf6ffff	                     call sym.dlang_type	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4001971	          0x4889c5	                            mov rbp, rax	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4001974	            0xeb68	                           jmp 0x40019de	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4001976	        0x488d7501	                      lea rsi, [rbp + 1]	      1547	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x400197a	         0xfb66d01	               movzx ebp, byte [rbp + 1]	      1548	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x400197e	    0x48c744243000	               mov qword [rsp + 0x30], 0	        95	d-demangle.c	FUNCTION_3
0x4001987	    0x48c744242800	               mov qword [rsp + 0x28], 0	        95	d-demangle.c	FUNCTION_3
0x4001990	    0x48c744242000	               mov qword [rsp + 0x20], 0	        95	d-demangle.c	FUNCTION_3
0x4001999	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x400199e	      0xe849f6ffff	                     call sym.dlang_type	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x40019a3	          0x4989c7	                            mov r15, rax	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x40019a6	      0xbe01000000	                              mov esi, 1	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x40019ab	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x40019b0	      0xe8c7e7ffff	                    call sym.string_need	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x40019b5	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1555	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40019ba	          0xc60000	                       mov byte [rax], 0	      1555	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40019bd	        0x400fbecd	                          movsx ecx, bpl	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x40019c1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x40019c6	          0x4c89fe	                            mov rsi, r15	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x40019c9	          0x4c89f7	                            mov rdi, r14	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x40019cc	      0xe8b7efffff	                    call sym.dlang_value	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x40019d1	          0x4889c5	                            mov rbp, rax	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x40019d4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1558	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_8
0x40019d9	      0xe874e7ffff	                  call sym.string_delete	      1558	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_8
0x40019de	          0x4885ed	                           test rbp, rbp	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40019e1	     0xf84de020000	                            je 0x4001cc5	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40019e7	         0xfb64500	                   movzx eax, byte [rbp]	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40019eb	        0x4983c501	                              add r13, 1	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40019ef	            0x84c0	                             test al, al	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40019f1	     0xf8518ffffff	                           jne 0x400190f	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40019f7	      0xe9b7020000	                           jmp 0x4001cb3	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40019fc	      0xbd00000000	                              mov ebp, 0	      1563	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001a01	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001a06	          0x4c89f7	                            mov rdi, r14	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001a09	      0xe8e6e7ffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001a0e	          0x4885ed	                           test rbp, rbp	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4001a11	     0xf8480020000	                            je 0x4001c97	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4001a17	          0x4889e8	                            mov rax, rbp	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4001a1a	          0x4c29e0	                            sub rax, r12	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4001a1d	          0x4839c3	                            cmp rbx, rax	      1605	d-demangle.c	FUNCTION_31	IF_2
0x4001a20	      0xb800000000	                              mov eax, 0	      1605	d-demangle.c	FUNCTION_31	IF_2
0x4001a25	        0x480f45e8	                         cmovne rbp, rax	      1605	d-demangle.c	FUNCTION_31	IF_2
0x4001a29	      0xe969020000	                           jmp 0x4001c97	      1605	d-demangle.c	FUNCTION_31	IF_2
0x4001a2e	        0x488d43fa	                      lea rax, [rbx - 6]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a32	        0x4883f806	                              cmp rax, 6	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a36	     0xf8725020000	                            ja 0x4001c61	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a3c	    0xff24c5000000	                       jmp qword [rax*8]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001a43	        0x4883fa06	                              cmp rdx, 6	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a47	            0x761f	                           jbe 0x4001a68	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a49	      0xbf00000000	                              mov edi, 0	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a4e	      0xb907000000	                              mov ecx, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a53	          0x4c89e6	                            mov rsi, r12	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a56	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a58	           0xf97c2	                                 seta dl	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a5b	           0xf92c0	                                 setb al	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a5e	            0x38c2	                              cmp dl, al	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a60	     0xf8588020000	                           jne 0x4001cee	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a66	            0xeb28	                           jmp 0x4001a90	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a68	        0x4883fa07	                              cmp rdx, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a6c	      0xb907000000	                              mov ecx, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a71	        0x480f4eca	                         cmovle rcx, rdx	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a75	      0xbf00000000	                              mov edi, 0	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a7a	          0x4839c9	                            cmp rcx, rcx	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a7d	          0x4c89e6	                            mov rsi, r12	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a80	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a82	           0xf97c1	                                 seta cl	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a85	           0xf92c0	                                 setb al	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a88	            0x38c1	                              cmp cl, al	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a8a	     0xf857d020000	                           jne 0x4001d0d	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001a90	      0xbe00000000	                              mov esi, 0	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x4001a95	          0x4c89f7	                            mov rdi, r14	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x4001a98	      0xe857e7ffff	                  call sym.string_append	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x4001a9d	          0x4c89e5	                            mov rbp, r12	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x4001aa0	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x4001aa5	      0xe9ed010000	                           jmp 0x4001c97	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x4001aaa	            0x84c0	                             test al, al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001aac	            0x741a	                            je 0x4001ac8	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001aae	      0xbe00000000	                              mov esi, 0	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x4001ab3	          0x4c89f7	                            mov rdi, r14	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x4001ab6	      0xe839e7ffff	                  call sym.string_append	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x4001abb	          0x4c89e5	                            mov rbp, r12	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x4001abe	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x4001ac3	      0xe9cf010000	                           jmp 0x4001c97	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x4001ac8	      0xbf00000000	                              mov edi, 0	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001acd	      0xb907000000	                              mov ecx, 7	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001ad2	          0x4c89e6	                            mov rsi, r12	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001ad5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001ad7	           0xf97c2	                                 seta dl	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001ada	           0xf92c0	                                 setb al	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001add	            0x38c2	                              cmp dl, al	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001adf	            0x752d	                           jne 0x4001b0e	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001ae1	      0xbe00000000	                              mov esi, 0	       867	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_15
0x4001ae6	          0x4c89f7	                            mov rdi, r14	       867	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_15
0x4001ae9	      0xe883e9ffff	                 call sym.string_prepend	       867	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_15
0x4001aee	          0x4c89f7	                            mov rdi, r14	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001af1	      0xe84ae5ffff	                  call sym.string_length	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001af6	          0x8d70ff	                      lea esi, [rax - 1]	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001af9	          0x4c89f7	                            mov rdi, r14	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001afc	      0xe856e5ffff	               call sym.string_setlength	       868	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_17
0x4001b01	          0x4c89e5	                            mov rbp, r12	       870	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11
0x4001b04	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       870	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11
0x4001b09	      0xe989010000	                           jmp 0x4001c97	       870	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11
0x4001b0e	      0xbf00000000	                              mov edi, 0	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001b13	      0xb907000000	                              mov ecx, 7	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001b18	          0x4c89e6	                            mov rsi, r12	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001b1b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001b1d	           0xf97c2	                                 seta dl	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001b20	           0xf92c0	                                 setb al	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001b23	            0x38c2	                              cmp dl, al	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001b25	     0xf8536010000	                           jne 0x4001c61	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001b2b	      0xbe00000000	                              mov esi, 0	       875	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_19
0x4001b30	          0x4c89f7	                            mov rdi, r14	       875	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_19
0x4001b33	      0xe839e9ffff	                 call sym.string_prepend	       875	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_19
0x4001b38	          0x4c89f7	                            mov rdi, r14	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x4001b3b	      0xe800e5ffff	                  call sym.string_length	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x4001b40	          0x8d70ff	                      lea esi, [rax - 1]	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x4001b43	          0x4c89f7	                            mov rdi, r14	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x4001b46	      0xe80ce5ffff	               call sym.string_setlength	       876	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_21
0x4001b4b	          0x4c89e5	                            mov rbp, r12	       878	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12
0x4001b4e	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       878	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12
0x4001b53	      0xe93f010000	                           jmp 0x4001c97	       878	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12
0x4001b58	      0xbf00000000	                              mov edi, 0	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x4001b5d	      0xb908000000	                              mov ecx, 8	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x4001b62	          0x4c89e6	                            mov rsi, r12	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x4001b65	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x4001b67	           0xf97c2	                                 seta dl	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x4001b6a	           0xf92c0	                                 setb al	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x4001b6d	            0x38c2	                              cmp dl, al	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x4001b6f	     0xf85ec000000	                           jne 0x4001c61	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x4001b75	      0xbe00000000	                              mov esi, 0	       886	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_23
0x4001b7a	          0x4c89f7	                            mov rdi, r14	       886	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_23
0x4001b7d	      0xe8efe8ffff	                 call sym.string_prepend	       886	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_23
0x4001b82	          0x4c89f7	                            mov rdi, r14	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001b85	      0xe8b6e4ffff	                  call sym.string_length	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001b8a	          0x8d70ff	                      lea esi, [rax - 1]	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001b8d	          0x4c89f7	                            mov rdi, r14	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001b90	      0xe8c2e4ffff	               call sym.string_setlength	       887	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_25
0x4001b95	          0x4c89e5	                            mov rbp, r12	       889	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13
0x4001b98	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       889	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13
0x4001b9d	      0xe9f5000000	                           jmp 0x4001c97	       889	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13
0x4001ba2	      0xbf00000000	                              mov edi, 0	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001ba7	      0xb90d000000	                            mov ecx, 0xd	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001bac	          0x4c89e6	                            mov rsi, r12	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001baf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001bb1	           0xf97c2	                                 seta dl	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001bb4	           0xf92c0	                                 setb al	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001bb7	            0x38c2	                              cmp dl, al	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001bb9	     0xf85a2000000	                           jne 0x4001c61	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001bbf	      0xbe00000000	                              mov esi, 0	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x4001bc4	          0x4c89f7	                            mov rdi, r14	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x4001bc7	      0xe828e6ffff	                  call sym.string_append	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x4001bcc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001bd1	      0x498d6c0403	                lea rbp, [r12 + rax + 3]	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001bd6	      0xe9bc000000	                           jmp 0x4001c97	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001bdb	      0xbf00000000	                              mov edi, 0	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001be0	      0xb90c000000	                            mov ecx, 0xc	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001be5	          0x4c89e6	                            mov rsi, r12	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001be8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001bea	           0xf97c2	                                 seta dl	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001bed	           0xf92c0	                                 setb al	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001bf0	            0x38c2	                              cmp dl, al	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001bf2	            0x756d	                           jne 0x4001c61	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001bf4	      0xbe00000000	                              mov esi, 0	       907	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_29
0x4001bf9	          0x4c89f7	                            mov rdi, r14	       907	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_29
0x4001bfc	      0xe870e8ffff	                 call sym.string_prepend	       907	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_29
0x4001c01	          0x4c89f7	                            mov rdi, r14	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x4001c04	      0xe837e4ffff	                  call sym.string_length	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x4001c09	          0x8d70ff	                      lea esi, [rax - 1]	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x4001c0c	          0x4c89f7	                            mov rdi, r14	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x4001c0f	      0xe843e4ffff	               call sym.string_setlength	       908	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_31
0x4001c14	          0x4c89e5	                            mov rbp, r12	       910	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15
0x4001c17	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       910	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15
0x4001c1c	            0xeb79	                           jmp 0x4001c97	       910	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15
0x4001c1e	      0xbf00000000	                              mov edi, 0	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001c23	      0xb90d000000	                            mov ecx, 0xd	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001c28	          0x4c89e6	                            mov rsi, r12	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001c2b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001c2d	           0xf97c2	                                 seta dl	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001c30	           0xf92c0	                                 setb al	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001c33	            0x38c2	                              cmp dl, al	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001c35	            0x752a	                           jne 0x4001c61	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001c37	      0xbe00000000	                              mov esi, 0	       918	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_33
0x4001c3c	          0x4c89f7	                            mov rdi, r14	       918	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_33
0x4001c3f	      0xe82de8ffff	                 call sym.string_prepend	       918	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_33
0x4001c44	          0x4c89f7	                            mov rdi, r14	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001c47	      0xe8f4e3ffff	                  call sym.string_length	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001c4c	          0x8d70ff	                      lea esi, [rax - 1]	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001c4f	          0x4c89f7	                            mov rdi, r14	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001c52	      0xe800e4ffff	               call sym.string_setlength	       919	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_35
0x4001c57	          0x4c89e5	                            mov rbp, r12	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4001c5a	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4001c5f	            0xeb36	                           jmp 0x4001c97	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4001c61	            0x89da	                            mov edx, ebx	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001c63	          0x4c89e6	                            mov rsi, r12	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001c66	          0x4c89f7	                            mov rdi, r14	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001c69	      0xe892e8ffff	                 call sym.string_appendn	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001c6e	          0x4c89e5	                            mov rbp, r12	       930	d-demangle.c	FUNCTION_19
0x4001c71	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       930	d-demangle.c	FUNCTION_19
0x4001c76	            0xeb1f	                           jmp 0x4001c97	       930	d-demangle.c	FUNCTION_19
0x4001c78	      0xbd00000000	                              mov ebp, 0	       791	d-demangle.c	FUNCTION_19	IF_1
0x4001c7d	            0xeb18	                           jmp 0x4001c97	       791	d-demangle.c	FUNCTION_19	IF_1
0x4001c7f	      0xbd00000000	                              mov ebp, 0	       791	d-demangle.c	FUNCTION_19	IF_1
0x4001c84	            0xeb11	                           jmp 0x4001c97	       791	d-demangle.c	FUNCTION_19	IF_1
0x4001c86	          0x4889c5	                            mov rbp, rax	       791	d-demangle.c	FUNCTION_19	IF_1
0x4001c89	            0xeb0c	                           jmp 0x4001c97	       791	d-demangle.c	FUNCTION_19	IF_1
0x4001c8b	      0xbd00000000	                              mov ebp, 0	       838	d-demangle.c	FUNCTION_19	ELSE_2	IF_7
0x4001c90	            0xeb05	                           jmp 0x4001c97	       838	d-demangle.c	FUNCTION_19	ELSE_2	IF_7
0x4001c92	      0xbd00000000	                              mov ebp, 0	      1591	d-demangle.c	FUNCTION_31	IF_1
0x4001c97	          0x4889e8	                            mov rax, rbp	       931	d-demangle.c	FUNCTION_19
0x4001c9a	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       931	d-demangle.c	FUNCTION_19
0x4001c9f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       931	d-demangle.c	FUNCTION_19
0x4001ca8	     0xf848e000000	                            je 0x4001d3c	       931	d-demangle.c	FUNCTION_19
0x4001cae	      0xe984000000	                           jmp 0x4001d37	       931	d-demangle.c	FUNCTION_19
0x4001cb3	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001cb8	          0x4c89f7	                            mov rdi, r14	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001cbb	      0xe834e5ffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001cc0	      0xe952fdffff	                           jmp 0x4001a17	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001cc5	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001cca	          0x4c89f7	                            mov rdi, r14	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001ccd	      0xe822e5ffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001cd2	      0xbd00000000	                              mov ebp, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001cd7	            0xebbe	                           jmp 0x4001c97	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001cd9	        0x488d43fa	                      lea rax, [rbx - 6]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001cdd	        0x4883f806	                              cmp rax, 6	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001ce1	     0xf877affffff	                            ja 0x4001c61	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001ce7	    0xff24c5000000	                       jmp qword [rax*8]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4001cee	      0xbf00000000	                              mov edi, 0	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001cf3	      0xb907000000	                              mov ecx, 7	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001cf8	          0x4c89e6	                            mov rsi, r12	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001cfb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001cfd	           0xf97c2	                                 seta dl	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d00	           0xf92c0	                                 setb al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d03	            0x38c2	                              cmp dl, al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d05	           0xf94c0	                                 sete al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d08	      0xe99dfdffff	                           jmp 0x4001aaa	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d0d	        0x4883fa07	                              cmp rdx, 7	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d11	      0xb907000000	                              mov ecx, 7	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d16	        0x480f4eca	                         cmovle rcx, rdx	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d1a	      0xbf00000000	                              mov edi, 0	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d1f	          0x4839c9	                            cmp rcx, rcx	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d22	          0x4c89e6	                            mov rsi, r12	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d25	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d27	           0xf97c2	                                 seta dl	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d2a	           0xf92c0	                                 setb al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d2d	            0x38c2	                              cmp dl, al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d2f	           0xf94c0	                                 sete al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d32	      0xe973fdffff	                           jmp 0x4001aaa	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001d37	      0xe800000000	                          call 0x4001d3c	       931	d-demangle.c	FUNCTION_19
0x4001d3c	        0x4883c448	                           add rsp, 0x48	       931	d-demangle.c	FUNCTION_19
0x4001d40	              0x5b	                                 pop rbx	       931	d-demangle.c	FUNCTION_19
0x4001d41	              0x5d	                                 pop rbp	       931	d-demangle.c	FUNCTION_19
0x4001d42	            0x415c	                                 pop r12	       931	d-demangle.c	FUNCTION_19
0x4001d44	            0x415d	                                 pop r13	       931	d-demangle.c	FUNCTION_19
0x4001d46	            0x415e	                                 pop r14	       931	d-demangle.c	FUNCTION_19
0x4001d48	            0x415f	                                 pop r15	       931	d-demangle.c	FUNCTION_19
0x4001d4a	              0xc3	                                     ret	       931	d-demangle.c	FUNCTION_19
string_append	CALL,3:functions,0:ELSE,0:WHILE,0:DO,0:IF,0:SWITCH,0:FOR,0	24
0x40001f4	            0x4154	                                push r12	       119	d-demangle.c	FUNCTION_6
0x40001f6	              0x55	                                push rbp	       119	d-demangle.c	FUNCTION_6
0x40001f7	              0x53	                                push rbx	       119	d-demangle.c	FUNCTION_6
0x40001f8	          0x4889fd	                            mov rbp, rdi	       119	d-demangle.c	FUNCTION_6
0x40001fb	          0x4989f4	                            mov r12, rsi	       119	d-demangle.c	FUNCTION_6
0x40001fe	      0xb800000000	                              mov eax, 0	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4000203	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       120	d-demangle.c	FUNCTION_6	CALL_1
0x400020a	          0x4889f7	                            mov rdi, rsi	       120	d-demangle.c	FUNCTION_6	CALL_1
0x400020d	            0xf2ae	              repne scasb al, byte [rdi]	       120	d-demangle.c	FUNCTION_6	CALL_1
0x400020f	          0x48f7d1	                                 not rcx	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4000212	        0x488d59ff	                      lea rbx, [rcx - 1]	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4000216	            0x89de	                            mov esi, ebx	       121	d-demangle.c	FUNCTION_6	CALL_2
0x4000218	          0x4889ef	                            mov rdi, rbp	       121	d-demangle.c	FUNCTION_6	CALL_2
0x400021b	      0xe85cffffff	                    call sym.string_need	       121	d-demangle.c	FUNCTION_6	CALL_2
0x4000220	          0x4863db	                         movsxd rbx, ebx	       122	d-demangle.c	FUNCTION_6	CALL_3
0x4000223	        0x488b7d08	                mov rdi, qword [rbp + 8]	        53	string3.h	FUNCTION_33	CALL_3
0x4000227	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_33	CALL_3
0x400022a	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_33	CALL_3
0x400022d	      0xe800000000	                          call 0x4000232	        53	string3.h	FUNCTION_33	CALL_3
0x4000232	        0x48015d08	                add qword [rbp + 8], rbx	       123	d-demangle.c	FUNCTION_6
0x4000236	              0x5b	                                 pop rbx	       124	d-demangle.c	FUNCTION_6
0x4000237	              0x5d	                                 pop rbp	       124	d-demangle.c	FUNCTION_6
0x4000238	            0x415c	                                 pop r12	       124	d-demangle.c	FUNCTION_6
0x400023a	              0xc3	                                     ret	       124	d-demangle.c	FUNCTION_6
dlang_value	CALL,13:functions,0:ELSE,1:WHILE,0:DO,0:IF,3:SWITCH,1:FOR,0	327
0x4000988	            0x4155	                                push r13	      1258	d-demangle.c	FUNCTION_26
0x400098a	            0x4154	                                push r12	      1258	d-demangle.c	FUNCTION_26
0x400098c	              0x55	                                push rbp	      1258	d-demangle.c	FUNCTION_26
0x400098d	              0x53	                                push rbx	      1258	d-demangle.c	FUNCTION_26
0x400098e	        0x4883ec28	                           sub rsp, 0x28	      1258	d-demangle.c	FUNCTION_26
0x4000992	    0x64488b042528	                mov rax, qword fs:[0x28]	      1258	d-demangle.c	FUNCTION_26
0x400099b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1258	d-demangle.c	FUNCTION_26
0x40009a0	            0x31c0	                            xor eax, eax	      1258	d-demangle.c	FUNCTION_26
0x40009a2	          0x4885f6	                           test rsi, rsi	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009a5	     0xf84a5040000	                            je 0x4000e50	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009ab	          0x4889fd	                            mov rbp, rdi	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009ae	          0x4989d5	                            mov r13, rdx	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009b1	          0x4189cc	                           mov r12d, ecx	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009b4	           0xfb616	                   movzx edx, byte [rsi]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009b7	            0x84d2	                             test dl, dl	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009b9	     0xf8498040000	                            je 0x4000e57	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009bf	          0x8d42d0	                   lea eax, [rdx - 0x30]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009c2	            0x3c47	                            cmp al, 0x47	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009c4	     0xf8794040000	                            ja 0x4000e5e	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009ca	           0xfb6c0	                           movzx eax, al	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009cd	    0xff24c5000000	                       jmp qword [rax*8]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009d4	        0x488d5e01	                      lea rbx, [rsi + 1]	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009d8	      0xbe00000000	                              mov esi, 0	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x40009dd	      0xe812f8ffff	                  call sym.string_append	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x40009e2	          0x4889d8	                            mov rax, rbx	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009e5	      0xe980040000	                           jmp 0x4000e6a	      1268	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009ea	        0x488d5e01	                      lea rbx, [rsi + 1]	      1272	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009ee	      0xbe00000000	                              mov esi, 0	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x40009f3	      0xe8fcf7ffff	                  call sym.string_append	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x40009f8	        0x410fbed4	                         movsx edx, r12b	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x40009fc	          0x4889de	                            mov rsi, rbx	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x40009ff	          0x4889ef	                            mov rdi, rbp	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4000a02	      0xe82cfbffff	            call sym.dlang_parse_integer	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4000a07	      0xe95e040000	                           jmp 0x4000e6a	      1275	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a0c	        0x4883c601	                              add rsi, 1	      1278	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a10	        0x410fbed4	                         movsx edx, r12b	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4000a14	          0x4889ef	                            mov rdi, rbp	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4000a17	      0xe817fbffff	            call sym.dlang_parse_integer	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4000a1c	      0xe949040000	                           jmp 0x4000e6a	      1287	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a21	        0x4883c601	                              add rsi, 1	      1291	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a25	      0xe8cafdffff	               call sym.dlang_parse_real	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4000a2a	      0xe93b040000	                           jmp 0x4000e6a	      1293	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a2f	        0x4883c601	                              add rsi, 1	      1297	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a33	      0xe8bcfdffff	               call sym.dlang_parse_real	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4000a38	          0x4889c3	                            mov rbx, rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4000a3b	      0xbe00000000	                              mov esi, 0	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4000a40	          0x4889ef	                            mov rdi, rbp	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4000a43	      0xe8acf7ffff	                  call sym.string_append	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4000a48	          0x4885db	                           test rbx, rbx	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000a4b	     0xf8414040000	                            je 0x4000e65	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000a51	      0xb800000000	                              mov eax, 0	      1301	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000a56	          0x803b63	                    cmp byte [rbx], 0x63	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000a59	     0xf850b040000	                           jne 0x4000e6a	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000a5f	        0x488d7301	                      lea rsi, [rbx + 1]	      1302	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a63	          0x4889ef	                            mov rdi, rbp	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000a66	      0xe889fdffff	               call sym.dlang_parse_real	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000a6b	          0x4889c3	                            mov rbx, rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000a6e	      0xbe00000000	                              mov esi, 0	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4000a73	          0x4889ef	                            mov rdi, rbp	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4000a76	      0xe879f7ffff	                  call sym.string_append	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4000a7b	          0x4889d8	                            mov rax, rbx	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000a7e	      0xe9e7030000	                           jmp 0x4000e6a	      1305	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a83	        0x8854240e	                mov byte [rsp + 0xe], dl	      1119	d-demangle.c	FUNCTION_22
0x4000a87	        0x488d7e01	                      lea rdi, [rsi + 1]	      1122	d-demangle.c	FUNCTION_22
0x4000a8b	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4000a90	      0xe8e0f5ffff	                   call sym.dlang_number	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4000a95	          0x4889c3	                            mov rbx, rax	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4000a98	          0x4885c0	                           test rax, rax	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000a9b	     0xf84e1010000	                            je 0x4000c82	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000aa1	      0xb800000000	                              mov eax, 0	      1125	d-demangle.c	FUNCTION_22	IF_1
0x4000aa6	          0x803b5f	                    cmp byte [rbx], 0x5f	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000aa9	     0xf85bb030000	                           jne 0x4000e6a	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000aaf	        0x4883c301	                              add rbx, 1	      1127	d-demangle.c	FUNCTION_22
0x4000ab3	      0xbe00000000	                              mov esi, 0	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4000ab8	          0x4889ef	                            mov rdi, rbp	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4000abb	      0xe834f7ffff	                  call sym.string_append	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4000ac0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000ac5	        0x488d50ff	                      lea rdx, [rax - 1]	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000ac9	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000ace	          0x4885c0	                           test rax, rax	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000ad1	     0xf8473010000	                            je 0x4000c4a	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000ad7	            0xeb03	                           jmp 0x4000adc	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000ad9	          0x4c89e3	                            mov rbx, r12	       249	d-demangle.c	FUNCTION_11
0x4000adc	          0x4885db	                           test rbx, rbx	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000adf	     0xf8491000000	                            je 0x4000b76	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000ae5	           0xfb603	                   movzx eax, byte [rbx]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000ae8	           0xfb6d0	                           movzx edx, al	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000aeb	     0xfb78c120000	             movzx ecx, word [rdx + rdx]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000af3	          0xf6c501	                              test ch, 1	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000af6	            0x747e	                            je 0x4000b76	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000af8	         0xfb65301	               movzx edx, byte [rbx + 1]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000afc	           0xfb6f2	                           movzx esi, dl	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000aff	     0xfb7b4360000	             movzx esi, word [rsi + rsi]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000b07	      0x66f7c60001	                          test si, 0x100	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000b0c	            0x7468	                            je 0x4000b76	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000b0e	          0xf6c104	                              test cl, 4	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000b11	            0x7519	                           jne 0x4000b2c	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000b13	      0x6681e18000	                            and cx, 0x80	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000b18	        0x6683f901	                               cmp cx, 1	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000b1c	            0x19c9	                            sbb ecx, ecx	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000b1e	          0x83e120	                           and ecx, 0x20	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000b21	            0x29c8	                            sub eax, ecx	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000b23	          0x83e837	                           sub eax, 0x37	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000b26	        0x8844240f	                mov byte [rsp + 0xf], al	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000b2a	            0xeb07	                           jmp 0x4000b33	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000b2c	          0x83e830	                           sub eax, 0x30	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x4000b2f	        0x8844240f	                mov byte [rsp + 0xf], al	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x4000b33	        0x40f6c604	                             test sil, 4	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x4000b37	            0x7523	                           jne 0x4000b5c	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x4000b39	       0xfbe44240f	            movsx eax, byte [rsp + 0xf] 	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b3e	          0xc1e004	                              shl eax, 4	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b41	      0x6681e68000	                            and si, 0x80	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b46	        0x6683fe01	                               cmp si, 1	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b4a	            0x19c9	                            sbb ecx, ecx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b4c	          0x83e120	                           and ecx, 0x20	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b4f	            0x29ca	                            sub edx, ecx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b51	          0x83ea37	                           sub edx, 0x37	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b54	             0x9c2	                             or edx, eax	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b56	        0x8854240f	                mov byte [rsp + 0xf], dl	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b5a	            0xeb11	                           jmp 0x4000b6d	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000b5c	       0xfbe44240f	            movsx eax, byte [rsp + 0xf] 	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000b61	          0xc1e004	                              shl eax, 4	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000b64	          0x83ea30	                           sub edx, 0x30	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000b67	             0x9c2	                             or edx, eax	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000b69	        0x8854240f	                mov byte [rsp + 0xf], dl	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000b6d	          0x4989dc	                            mov r12, rbx	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000b70	        0x4983c402	                              add r12, 2	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000b74	            0x750a	                           jne 0x4000b80	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000b76	      0xb800000000	                              mov eax, 0	      1135	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000b7b	      0xe9ea020000	                           jmp 0x4000e6a	      1135	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000b80	       0xfb654240f	            movzx edx, byte [rsp + 0xf] 	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000b85	          0x8d42f7	                      lea eax, [rdx - 9]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000b88	            0x3c17	                            cmp al, 0x17	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000b8a	            0x7767	                            ja 0x4000bf3	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000b8c	           0xfb6c0	                           movzx eax, al	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000b8f	    0xff24c5000000	                       jmp qword [rax*8]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000b96	      0xbe00000000	                              mov esi, 0	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4000b9b	          0x4889ef	                            mov rdi, rbp	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4000b9e	      0xe851f6ffff	                  call sym.string_append	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4000ba3	      0xe989000000	                           jmp 0x4000c31	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4000ba8	      0xbe00000000	                              mov esi, 0	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000bad	          0x4889ef	                            mov rdi, rbp	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000bb0	      0xe83ff6ffff	                  call sym.string_append	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000bb5	            0xeb7a	                           jmp 0x4000c31	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000bb7	      0xbe00000000	                              mov esi, 0	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000bbc	          0x4889ef	                            mov rdi, rbp	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000bbf	      0xe830f6ffff	                  call sym.string_append	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000bc4	            0xeb6b	                           jmp 0x4000c31	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000bc6	      0xbe00000000	                              mov esi, 0	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000bcb	          0x4889ef	                            mov rdi, rbp	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000bce	      0xe821f6ffff	                  call sym.string_append	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000bd3	            0xeb5c	                           jmp 0x4000c31	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000bd5	      0xbe00000000	                              mov esi, 0	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000bda	          0x4889ef	                            mov rdi, rbp	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000bdd	      0xe812f6ffff	                  call sym.string_append	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000be2	            0xeb4d	                           jmp 0x4000c31	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000be4	      0xbe00000000	                              mov esi, 0	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000be9	          0x4889ef	                            mov rdi, rbp	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000bec	      0xe803f6ffff	                  call sym.string_append	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000bf1	            0xeb3e	                           jmp 0x4000c31	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000bf3	           0xfb6d2	                           movzx edx, dl	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000bf6	    0xf68412000000	            test byte [rdx + rdx], 0x10 	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000bfe	            0x7414	                            je 0x4000c14	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000c00	      0xba01000000	                              mov edx, 1	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4000c05	      0x488d74240f	                    lea rsi, [rsp + 0xf]	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4000c0a	          0x4889ef	                            mov rdi, rbp	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4000c0d	      0xe8eef8ffff	                 call sym.string_appendn	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4000c12	            0xeb1d	                           jmp 0x4000c31	      1161	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_11
0x4000c14	      0xbe00000000	                              mov esi, 0	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000c19	          0x4889ef	                            mov rdi, rbp	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000c1c	      0xe8d3f5ffff	                  call sym.string_append	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000c21	      0xba02000000	                              mov edx, 2	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x4000c26	          0x4889de	                            mov rsi, rbx	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x4000c29	          0x4889ef	                            mov rdi, rbp	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x4000c2c	      0xe8cff8ffff	                 call sym.string_appendn	      1165	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_13
0x4000c31	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000c36	        0x488d50ff	                      lea rdx, [rax - 1]	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000c3a	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000c3f	          0x4885c0	                           test rax, rax	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000c42	     0xf8591feffff	                           jne 0x4000ad9	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000c48	            0xeb03	                           jmp 0x4000c4d	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000c4a	          0x4989dc	                            mov r12, rbx	      1127	d-demangle.c	FUNCTION_22
0x4000c4d	      0xbe00000000	                              mov esi, 0	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x4000c52	          0x4889ef	                            mov rdi, rbp	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x4000c55	      0xe89af5ffff	                  call sym.string_append	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x4000c5a	          0x4c89e0	                            mov rax, r12	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000c5d	      0x807c240e61	              cmp byte [rsp + 0xe], 0x61	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000c62	     0xf8402020000	                            je 0x4000e6a	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000c68	      0xba01000000	                              mov edx, 1	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x4000c6d	      0x488d74240e	                    lea rsi, [rsp + 0xe]	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x4000c72	          0x4889ef	                            mov rdi, rbp	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x4000c75	      0xe886f8ffff	                 call sym.string_appendn	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x4000c7a	          0x4c89e0	                            mov rax, r12	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x4000c7d	      0xe9e8010000	                           jmp 0x4000e6a	      1174	d-demangle.c	FUNCTION_22	CALL_15
0x4000c82	      0xb800000000	                              mov eax, 0	      1125	d-demangle.c	FUNCTION_22	IF_1
0x4000c87	      0xe9de010000	                           jmp 0x4000e6a	      1125	d-demangle.c	FUNCTION_22	IF_1
0x4000c8c	        0x488d7e01	                      lea rdi, [rsi + 1]	      1316	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000c90	          0x80f948	                            cmp cl, 0x48	      1317	d-demangle.c	FUNCTION_26	SWITCH_1	IF_3
0x4000c93	     0xf85a9000000	                           jne 0x4000d42	      1317	d-demangle.c	FUNCTION_26	SWITCH_1	IF_3
0x4000c99	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x4000c9e	      0xe8d2f3ffff	                   call sym.dlang_number	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x4000ca3	          0x4889c3	                            mov rbx, rax	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x4000ca6	          0x4885c0	                           test rax, rax	      1210	d-demangle.c	FUNCTION_24	IF_1
0x4000ca9	     0xf8489000000	                            je 0x4000d38	      1210	d-demangle.c	FUNCTION_24	IF_1
0x4000caf	      0xbe00000000	                              mov esi, 0	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000cb4	          0x4889ef	                            mov rdi, rbp	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000cb7	      0xe838f5ffff	                  call sym.string_append	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000cbc	            0xeb52	                           jmp 0x4000d10	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000cbe	      0xb900000000	                              mov ecx, 0	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000cc3	      0xba00000000	                              mov edx, 0	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000cc8	          0x4889de	                            mov rsi, rbx	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000ccb	          0x4889ef	                            mov rdi, rbp	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000cce	      0xe8b5fcffff	                    call sym.dlang_value	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000cd3	          0x4889c3	                            mov rbx, rax	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000cd6	      0xbe00000000	                              mov esi, 0	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4000cdb	          0x4889ef	                            mov rdi, rbp	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4000cde	      0xe811f5ffff	                  call sym.string_append	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4000ce3	      0xb900000000	                              mov ecx, 0	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000ce8	      0xba00000000	                              mov edx, 0	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000ced	          0x4889de	                            mov rsi, rbx	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000cf0	          0x4889ef	                            mov rdi, rbp	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000cf3	      0xe890fcffff	                    call sym.dlang_value	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000cf8	          0x4889c3	                            mov rbx, rax	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000cfb	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4000d01	            0x740d	                            je 0x4000d10	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4000d03	      0xbe00000000	                              mov esi, 0	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4000d08	          0x4889ef	                            mov rdi, rbp	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4000d0b	      0xe8e4f4ffff	                  call sym.string_append	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4000d10	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000d15	        0x488d50ff	                      lea rdx, [rax - 1]	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000d19	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000d1e	          0x4885c0	                           test rax, rax	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000d21	            0x759b	                           jne 0x4000cbe	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000d23	      0xbe00000000	                              mov esi, 0	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x4000d28	          0x4889ef	                            mov rdi, rbp	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x4000d2b	      0xe8c4f4ffff	                  call sym.string_append	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x4000d30	          0x4889d8	                            mov rax, rbx	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x4000d33	      0xe932010000	                           jmp 0x4000e6a	      1224	d-demangle.c	FUNCTION_24	CALL_7
0x4000d38	      0xb800000000	                              mov eax, 0	      1211	d-demangle.c	FUNCTION_24	IF_1
0x4000d3d	      0xe928010000	                           jmp 0x4000e6a	      1211	d-demangle.c	FUNCTION_24	IF_1
0x4000d42	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x4000d47	      0xe829f3ffff	                   call sym.dlang_number	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x4000d4c	          0x4889c3	                            mov rbx, rax	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x4000d4f	          0x4885c0	                           test rax, rax	      1187	d-demangle.c	FUNCTION_23	IF_1
0x4000d52	            0x7464	                            je 0x4000db8	      1187	d-demangle.c	FUNCTION_23	IF_1
0x4000d54	      0xbe00000000	                              mov esi, 0	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000d59	          0x4889ef	                            mov rdi, rbp	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000d5c	      0xe893f4ffff	                  call sym.string_append	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000d61	            0xeb2d	                           jmp 0x4000d90	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000d63	      0xb900000000	                              mov ecx, 0	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000d68	      0xba00000000	                              mov edx, 0	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000d6d	          0x4889de	                            mov rsi, rbx	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000d70	          0x4889ef	                            mov rdi, rbp	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000d73	      0xe810fcffff	                    call sym.dlang_value	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000d78	          0x4889c3	                            mov rbx, rax	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000d7b	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4000d81	            0x740d	                            je 0x4000d90	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4000d83	      0xbe00000000	                              mov esi, 0	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000d88	          0x4889ef	                            mov rdi, rbp	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000d8b	      0xe864f4ffff	                  call sym.string_append	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000d90	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000d95	        0x488d50ff	                      lea rdx, [rax - 1]	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000d99	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000d9e	          0x4885c0	                           test rax, rax	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000da1	            0x75c0	                           jne 0x4000d63	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000da3	      0xbe00000000	                              mov esi, 0	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000da8	          0x4889ef	                            mov rdi, rbp	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000dab	      0xe844f4ffff	                  call sym.string_append	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000db0	          0x4889d8	                            mov rax, rbx	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000db3	      0xe9b2000000	                           jmp 0x4000e6a	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000db8	      0xb800000000	                              mov eax, 0	      1188	d-demangle.c	FUNCTION_23	IF_1
0x4000dbd	      0xe9a8000000	                           jmp 0x4000e6a	      1188	d-demangle.c	FUNCTION_23	IF_1
0x4000dc2	        0x488d7e01	                      lea rdi, [rsi + 1]	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000dc6	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000dcb	      0xe8a5f2ffff	                   call sym.dlang_number	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000dd0	          0x4889c3	                            mov rbx, rax	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000dd3	          0x4885c0	                           test rax, rax	      1236	d-demangle.c	FUNCTION_25	IF_1
0x4000dd6	            0x7471	                            je 0x4000e49	      1236	d-demangle.c	FUNCTION_25	IF_1
0x4000dd8	          0x4d85ed	                           test r13, r13	      1239	d-demangle.c	FUNCTION_25	IF_2
0x4000ddb	            0x740b	                            je 0x4000de8	      1239	d-demangle.c	FUNCTION_25	IF_2
0x4000ddd	          0x4c89ee	                            mov rsi, r13	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x4000de0	          0x4889ef	                            mov rdi, rbp	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x4000de3	      0xe80cf4ffff	                  call sym.string_append	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x4000de8	      0xbe00000000	                              mov esi, 0	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000ded	          0x4889ef	                            mov rdi, rbp	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000df0	      0xe8fff3ffff	                  call sym.string_append	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000df5	            0xeb2d	                           jmp 0x4000e24	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000df7	      0xb900000000	                              mov ecx, 0	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000dfc	      0xba00000000	                              mov edx, 0	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000e01	          0x4889de	                            mov rsi, rbx	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000e04	          0x4889ef	                            mov rdi, rbp	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000e07	      0xe87cfbffff	                    call sym.dlang_value	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000e0c	          0x4889c3	                            mov rbx, rax	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000e0f	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4000e15	            0x740d	                            je 0x4000e24	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4000e17	      0xbe00000000	                              mov esi, 0	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000e1c	          0x4889ef	                            mov rdi, rbp	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000e1f	      0xe8d0f3ffff	                  call sym.string_append	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000e24	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000e29	        0x488d50ff	                      lea rdx, [rax - 1]	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000e2d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000e32	          0x4885c0	                           test rax, rax	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000e35	            0x75c0	                           jne 0x4000df7	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000e37	      0xbe00000000	                              mov esi, 0	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000e3c	          0x4889ef	                            mov rdi, rbp	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000e3f	      0xe8b0f3ffff	                  call sym.string_append	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000e44	          0x4889d8	                            mov rax, rbx	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000e47	            0xeb21	                           jmp 0x4000e6a	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000e49	      0xb800000000	                              mov eax, 0	      1237	d-demangle.c	FUNCTION_25	IF_1
0x4000e4e	            0xeb1a	                           jmp 0x4000e6a	      1327	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000e50	      0xb800000000	                              mov eax, 0	      1260	d-demangle.c	FUNCTION_26	IF_1
0x4000e55	            0xeb13	                           jmp 0x4000e6a	      1260	d-demangle.c	FUNCTION_26	IF_1
0x4000e57	      0xb800000000	                              mov eax, 0	      1260	d-demangle.c	FUNCTION_26	IF_1
0x4000e5c	            0xeb0c	                           jmp 0x4000e6a	      1260	d-demangle.c	FUNCTION_26	IF_1
0x4000e5e	      0xb800000000	                              mov eax, 0	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000e63	            0xeb05	                           jmp 0x4000e6a	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000e65	      0xb800000000	                              mov eax, 0	      1301	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000e6a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1334	d-demangle.c	FUNCTION_26
0x4000e6f	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1334	d-demangle.c	FUNCTION_26
0x4000e78	            0x7405	                            je 0x4000e7f	      1334	d-demangle.c	FUNCTION_26
0x4000e7a	      0xe800000000	                          call 0x4000e7f	      1334	d-demangle.c	FUNCTION_26
0x4000e7f	        0x4883c428	                           add rsp, 0x28	      1334	d-demangle.c	FUNCTION_26
0x4000e83	              0x5b	                                 pop rbx	      1334	d-demangle.c	FUNCTION_26
0x4000e84	              0x5d	                                 pop rbp	      1334	d-demangle.c	FUNCTION_26
0x4000e85	            0x415c	                                 pop r12	      1334	d-demangle.c	FUNCTION_26
0x4000e87	            0x415d	                                 pop r13	      1334	d-demangle.c	FUNCTION_26
0x4000e89	              0xc3	                                     ret	      1334	d-demangle.c	FUNCTION_26
string_delete	CALL,1:functions,0:ELSE,0:WHILE,0:DO,0:IF,1:SWITCH,0:FOR,0	11
0x4000152	              0x53	                                push rbx	        84	d-demangle.c	FUNCTION_2
0x4000153	          0x4889fb	                            mov rbx, rdi	        84	d-demangle.c	FUNCTION_2
0x4000156	          0x488b3f	                    mov rdi, qword [rdi]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4000159	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x400015c	            0x741c	                            je 0x400017a	        85	d-demangle.c	FUNCTION_2	IF_1
0x400015e	      0xe800000000	                          call 0x4000163	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000163	    0x48c743080000	                  mov qword [rbx + 8], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x400016b	    0x48c743100000	               mov qword [rbx + 0x10], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4000173	    0x48c703000000	                      mov qword [rbx], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x400017a	              0x5b	                                 pop rbx	        90	d-demangle.c	FUNCTION_2
0x400017b	              0xc3	                                     ret	        90	d-demangle.c	FUNCTION_2
dlang_type	CALL,69:functions,0:ELSE,2:WHILE,1:DO,0:IF,4:SWITCH,2:FOR,0	382
0x4000fec	            0x4155	                                push r13	       532	d-demangle.c	FUNCTION_18
0x4000fee	            0x4154	                                push r12	       532	d-demangle.c	FUNCTION_18
0x4000ff0	              0x55	                                push rbp	       532	d-demangle.c	FUNCTION_18
0x4000ff1	              0x53	                                push rbx	       532	d-demangle.c	FUNCTION_18
0x4000ff2	        0x4883ec28	                           sub rsp, 0x28	       532	d-demangle.c	FUNCTION_18
0x4000ff6	    0x64488b042528	                mov rax, qword fs:[0x28]	       532	d-demangle.c	FUNCTION_18
0x4000fff	      0x4889442418	             mov qword [rsp + 0x18], rax	       532	d-demangle.c	FUNCTION_18
0x4001004	            0x31c0	                            xor eax, eax	       532	d-demangle.c	FUNCTION_18
0x4001006	          0x4885f6	                           test rsi, rsi	       533	d-demangle.c	FUNCTION_18	IF_1
0x4001009	     0xf84b1050000	                            je 0x40015c0	       533	d-demangle.c	FUNCTION_18	IF_1
0x400100f	          0x4889fd	                            mov rbp, rdi	       533	d-demangle.c	FUNCTION_18	IF_1
0x4001012	          0x4889f3	                            mov rbx, rsi	       533	d-demangle.c	FUNCTION_18	IF_1
0x4001015	           0xfb606	                   movzx eax, byte [rsi]	       533	d-demangle.c	FUNCTION_18	IF_1
0x4001018	            0x84c0	                             test al, al	       533	d-demangle.c	FUNCTION_18	IF_1
0x400101a	     0xf84a7050000	                            je 0x40015c7	       533	d-demangle.c	FUNCTION_18	IF_1
0x4001020	          0x83e841	                           sub eax, 0x41	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001023	            0x3c39	                            cmp al, 0x39	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001025	     0xf87a3050000	                            ja 0x40015ce	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x400102b	           0xfb6c0	                           movzx eax, al	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x400102e	    0xff24c5000000	                       jmp qword [rax*8]	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001035	        0x4883c301	                              add rbx, 1	       539	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001039	      0xbe00000000	                              mov esi, 0	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x400103e	      0xe8b1f1ffff	                  call sym.string_append	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x4001043	          0x4889de	                            mov rsi, rbx	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4001046	          0x4889ef	                            mov rdi, rbp	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4001049	      0xe89effffff	                     call sym.dlang_type	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x400104e	          0x4889c3	                            mov rbx, rax	       541	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_2
0x4001051	      0xbe00000000	                              mov esi, 0	       542	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_3
0x4001056	          0x4889ef	                            mov rdi, rbp	       542	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_3
0x4001059	      0xe896f1ffff	                  call sym.string_append	       542	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_3
0x400105e	          0x4889d8	                            mov rax, rbx	       543	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001061	      0xe974050000	                           jmp 0x40015da	       543	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001066	        0x4883c301	                              add rbx, 1	       545	d-demangle.c	FUNCTION_18	SWITCH_1
0x400106a	      0xbe00000000	                              mov esi, 0	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x400106f	      0xe880f1ffff	                  call sym.string_append	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x4001074	          0x4889de	                            mov rsi, rbx	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x4001077	          0x4889ef	                            mov rdi, rbp	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x400107a	      0xe86dffffff	                     call sym.dlang_type	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x400107f	          0x4889c3	                            mov rbx, rax	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x4001082	      0xbe00000000	                              mov esi, 0	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x4001087	          0x4889ef	                            mov rdi, rbp	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x400108a	      0xe865f1ffff	                  call sym.string_append	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x400108f	          0x4889d8	                            mov rax, rbx	       549	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001092	      0xe943050000	                           jmp 0x40015da	       549	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001097	        0x4883c301	                              add rbx, 1	       551	d-demangle.c	FUNCTION_18	SWITCH_1
0x400109b	      0xbe00000000	                              mov esi, 0	       552	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_7
0x40010a0	      0xe84ff1ffff	                  call sym.string_append	       552	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_7
0x40010a5	          0x4889de	                            mov rsi, rbx	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x40010a8	          0x4889ef	                            mov rdi, rbp	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x40010ab	      0xe83cffffff	                     call sym.dlang_type	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x40010b0	          0x4889c3	                            mov rbx, rax	       553	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_8
0x40010b3	      0xbe00000000	                              mov esi, 0	       554	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_9
0x40010b8	          0x4889ef	                            mov rdi, rbp	       554	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_9
0x40010bb	      0xe834f1ffff	                  call sym.string_append	       554	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_9
0x40010c0	          0x4889d8	                            mov rax, rbx	       555	d-demangle.c	FUNCTION_18	SWITCH_1
0x40010c3	      0xe912050000	                           jmp 0x40015da	       555	d-demangle.c	FUNCTION_18	SWITCH_1
0x40010c8	         0xfb65601	               movzx edx, byte [rsi + 1]	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x40010cc	          0x80fa67	                            cmp dl, 0x67	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x40010cf	            0x7531	                           jne 0x4001102	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x40010d1	        0x4883c302	                              add rbx, 2	       560	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x40010d5	      0xbe00000000	                              mov esi, 0	       561	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_10
0x40010da	      0xe815f1ffff	                  call sym.string_append	       561	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_10
0x40010df	          0x4889de	                            mov rsi, rbx	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x40010e2	          0x4889ef	                            mov rdi, rbp	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x40010e5	      0xe802ffffff	                     call sym.dlang_type	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x40010ea	          0x4889c3	                            mov rbx, rax	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x40010ed	      0xbe00000000	                              mov esi, 0	       563	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_12
0x40010f2	          0x4889ef	                            mov rdi, rbp	       563	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_12
0x40010f5	      0xe8faf0ffff	                  call sym.string_append	       563	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_12
0x40010fa	          0x4889d8	                            mov rax, rbx	       564	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x40010fd	      0xe9d8040000	                           jmp 0x40015da	       564	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4001102	      0xb800000000	                              mov eax, 0	       575	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_2
0x4001107	          0x80fa68	                            cmp dl, 0x68	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x400110a	     0xf85ca040000	                           jne 0x40015da	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4001110	        0x4883c302	                              add rbx, 2	       568	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4001114	      0xbe00000000	                              mov esi, 0	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x4001119	      0xe8d6f0ffff	                  call sym.string_append	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x400111e	          0x4889de	                            mov rsi, rbx	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4001121	          0x4889ef	                            mov rdi, rbp	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4001124	      0xe8c3feffff	                     call sym.dlang_type	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4001129	          0x4889c3	                            mov rbx, rax	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x400112c	      0xbe00000000	                              mov esi, 0	       571	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_15
0x4001131	          0x4889ef	                            mov rdi, rbp	       571	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_15
0x4001134	      0xe8bbf0ffff	                  call sym.string_append	       571	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_15
0x4001139	          0x4889d8	                            mov rax, rbx	       572	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x400113c	      0xe999040000	                           jmp 0x40015da	       572	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4001141	        0x488d7601	                      lea rsi, [rsi + 1]	       577	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001145	      0xe8a2feffff	                     call sym.dlang_type	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x400114a	          0x4889c3	                            mov rbx, rax	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x400114d	      0xbe00000000	                              mov esi, 0	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x4001152	          0x4889ef	                            mov rdi, rbp	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x4001155	      0xe89af0ffff	                  call sym.string_append	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x400115a	          0x4889d8	                            mov rax, rbx	       580	d-demangle.c	FUNCTION_18	SWITCH_1
0x400115d	      0xe978040000	                           jmp 0x40015da	       580	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001162	        0x4c8d6e01	                      lea r13, [rsi + 1]	       585	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001166	         0xfb64601	               movzx eax, byte [rsi + 1]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x400116a	    0xf68400000000	                test byte [rax + rax], 4	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001172	            0x741c	                            je 0x4001190	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001174	          0x4c89ee	                            mov rsi, r13	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001177	          0x4989f4	                            mov r12, rsi	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x400117a	          0x4929dc	                            sub r12, rbx	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x400117d	        0x4883c601	                              add rsi, 1	       591	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1
0x4001181	           0xfb606	                   movzx eax, byte [rsi]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001184	    0xf68400000000	                test byte [rax + rax], 4	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x400118c	            0x75e9	                           jne 0x4001177	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x400118e	            0xeb09	                           jmp 0x4001199	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001190	          0x4c89ee	                            mov rsi, r13	       585	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001193	    0x41bc00000000	                             mov r12d, 0	       584	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001199	          0x4889ef	                            mov rdi, rbp	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x400119c	      0xe84bfeffff	                     call sym.dlang_type	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x40011a1	          0x4889c3	                            mov rbx, rax	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x40011a4	      0xbe00000000	                              mov esi, 0	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x40011a9	          0x4889ef	                            mov rdi, rbp	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x40011ac	      0xe843f0ffff	                  call sym.string_append	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x40011b1	          0x4489e2	                           mov edx, r12d	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x40011b4	          0x4c89ee	                            mov rsi, r13	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x40011b7	          0x4889ef	                            mov rdi, rbp	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x40011ba	      0xe841f3ffff	                 call sym.string_appendn	       595	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_21
0x40011bf	      0xbe00000000	                              mov esi, 0	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x40011c4	          0x4889ef	                            mov rdi, rbp	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x40011c7	      0xe828f0ffff	                  call sym.string_append	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x40011cc	          0x4889d8	                            mov rax, rbx	       597	d-demangle.c	FUNCTION_18	SWITCH_1
0x40011cf	      0xe906040000	                           jmp 0x40015da	       597	d-demangle.c	FUNCTION_18	SWITCH_1
0x40011d4	        0x488d7601	                      lea rsi, [rsi + 1]	       603	d-demangle.c	FUNCTION_18	SWITCH_1
0x40011d8	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x40011e1	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x40011ea	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x40011f2	          0x4889e7	                            mov rdi, rsp	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x40011f5	      0xe8f2fdffff	                     call sym.dlang_type	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x40011fa	          0x4889c3	                            mov rbx, rax	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x40011fd	          0x4889e7	                            mov rdi, rsp	       607	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_25
0x4001200	      0xe83beeffff	                  call sym.string_length	       607	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_25
0x4001205	          0x4189c4	                           mov r12d, eax	       607	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_25
0x4001208	          0x4889de	                            mov rsi, rbx	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x400120b	          0x4889ef	                            mov rdi, rbp	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x400120e	      0xe8d9fdffff	                     call sym.dlang_type	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001213	          0x4889c3	                            mov rbx, rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001216	      0xbe00000000	                              mov esi, 0	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x400121b	          0x4889ef	                            mov rdi, rbp	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x400121e	      0xe8d1efffff	                  call sym.string_append	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001223	          0x4489e2	                           mov edx, r12d	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x4001226	        0x488b3424	                    mov rsi, qword [rsp]	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x400122a	          0x4889ef	                            mov rdi, rbp	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x400122d	      0xe8cef2ffff	                 call sym.string_appendn	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x4001232	      0xbe00000000	                              mov esi, 0	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x4001237	          0x4889ef	                            mov rdi, rbp	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x400123a	      0xe8b5efffff	                  call sym.string_append	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x400123f	          0x4889e7	                            mov rdi, rsp	       614	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_30
0x4001242	      0xe80befffff	                  call sym.string_delete	       614	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_30
0x4001247	          0x4889d8	                            mov rax, rbx	       615	d-demangle.c	FUNCTION_18	SWITCH_1
0x400124a	      0xe98b030000	                           jmp 0x40015da	       615	d-demangle.c	FUNCTION_18	SWITCH_1
0x400124f	        0x4883c301	                              add rbx, 1	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001253	          0x4889df	                            mov rdi, rbx	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x4001256	      0xe8d7eeffff	        call sym.dlang_call_convention_p	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x400125b	            0x85c0	                           test eax, eax	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x400125d	            0x7523	                           jne 0x4001282	       619	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_31
0x400125f	          0x4889de	                            mov rsi, rbx	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001262	          0x4889ef	                            mov rdi, rbp	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001265	      0xe882fdffff	                     call sym.dlang_type	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x400126a	          0x4889c3	                            mov rbx, rax	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x400126d	      0xbe00000000	                              mov esi, 0	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x4001272	          0x4889ef	                            mov rdi, rbp	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x4001275	      0xe87aefffff	                  call sym.string_append	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x400127a	          0x4889d8	                            mov rax, rbx	       623	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4
0x400127d	      0xe958030000	                           jmp 0x40015da	       623	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4
0x4001282	          0x4889de	                            mov rsi, rbx	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001285	          0x4889ef	                            mov rdi, rbp	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001288	      0xe8fdfbffff	            call sym.dlang_function_type	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x400128d	          0x4889c3	                            mov rbx, rax	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001290	      0xbe00000000	                              mov esi, 0	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x4001295	          0x4889ef	                            mov rdi, rbp	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x4001298	      0xe857efffff	                  call sym.string_append	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x400129d	          0x4889d8	                            mov rax, rbx	       635	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012a0	      0xe935030000	                           jmp 0x40015da	       635	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012a5	        0x488d7601	                      lea rsi, [rsi + 1]	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40012a9	      0xba02000000	                              mov edx, 2	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40012ae	      0xe8980a0000	          call sym.dlang_parse_qualified	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40012b3	      0xe922030000	                           jmp 0x40015da	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40012b8	        0x488d7601	                      lea rsi, [rsi + 1]	       647	d-demangle.c	FUNCTION_18	SWITCH_1
0x40012bc	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x40012c5	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x40012ce	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x40012d6	          0x4889e7	                            mov rdi, rsp	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x40012d9	      0xe85defffff	           call sym.dlang_type_modifiers	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x40012de	          0x4889c3	                            mov rbx, rax	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x40012e1	          0x4889e7	                            mov rdi, rsp	       651	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_39
0x40012e4	      0xe857edffff	                  call sym.string_length	       651	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_39
0x40012e9	          0x4189c4	                           mov r12d, eax	       651	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_39
0x40012ec	          0x4889de	                            mov rsi, rbx	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40012ef	          0x4889ef	                            mov rdi, rbp	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40012f2	      0xe893fbffff	            call sym.dlang_function_type	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40012f7	          0x4889c3	                            mov rbx, rax	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40012fa	      0xbe00000000	                              mov esi, 0	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x40012ff	          0x4889ef	                            mov rdi, rbp	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x4001302	      0xe8edeeffff	                  call sym.string_append	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x4001307	          0x4489e2	                           mov edx, r12d	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x400130a	        0x488b3424	                    mov rsi, qword [rsp]	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x400130e	          0x4889ef	                            mov rdi, rbp	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x4001311	      0xe8eaf1ffff	                 call sym.string_appendn	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x4001316	          0x4889e7	                            mov rdi, rsp	       657	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_43
0x4001319	      0xe834eeffff	                  call sym.string_delete	       657	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_43
0x400131e	          0x4889d8	                            mov rax, rbx	       658	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001321	      0xe9b4020000	                           jmp 0x40015da	       658	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001326	        0x488d7e01	                      lea rdi, [rsi + 1]	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x400132a	          0x4889e6	                            mov rsi, rsp	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x400132d	      0xe843edffff	                   call sym.dlang_number	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4001332	          0x4889c3	                            mov rbx, rax	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4001335	          0x4885c0	                           test rax, rax	      1492	d-demangle.c	FUNCTION_29	IF_1
0x4001338	            0x7457	                            je 0x4001391	      1492	d-demangle.c	FUNCTION_29	IF_1
0x400133a	      0xbe00000000	                              mov esi, 0	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x400133f	          0x4889ef	                            mov rdi, rbp	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4001342	      0xe8adeeffff	                  call sym.string_append	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4001347	            0xeb22	                           jmp 0x400136b	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4001349	          0x4889de	                            mov rsi, rbx	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x400134c	          0x4889ef	                            mov rdi, rbp	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x400134f	      0xe898fcffff	                     call sym.dlang_type	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4001354	          0x4889c3	                            mov rbx, rax	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4001357	      0x48833c2400	                      cmp qword [rsp], 0	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x400135c	            0x740d	                            je 0x400136b	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x400135e	      0xbe00000000	                              mov esi, 0	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4001363	          0x4889ef	                            mov rdi, rbp	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4001366	      0xe889eeffff	                  call sym.string_append	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x400136b	        0x488b0424	                    mov rax, qword [rsp]	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x400136f	        0x488d50ff	                      lea rdx, [rax - 1]	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4001373	        0x48891424	                    mov qword [rsp], rdx	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4001377	          0x4885c0	                           test rax, rax	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x400137a	            0x75cd	                           jne 0x4001349	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x400137c	      0xbe00000000	                              mov esi, 0	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x4001381	          0x4889ef	                            mov rdi, rbp	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x4001384	      0xe86beeffff	                  call sym.string_append	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x4001389	          0x4889d8	                            mov rax, rbx	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x400138c	      0xe949020000	                           jmp 0x40015da	      1504	d-demangle.c	FUNCTION_29	CALL_5
0x4001391	      0xb800000000	                              mov eax, 0	      1493	d-demangle.c	FUNCTION_29	IF_1
0x4001396	      0xe93f020000	                           jmp 0x40015da	       662	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_44
0x400139b	        0x4883c301	                              add rbx, 1	       666	d-demangle.c	FUNCTION_18	SWITCH_1
0x400139f	      0xbe00000000	                              mov esi, 0	       667	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_45
0x40013a4	      0xe84beeffff	                  call sym.string_append	       667	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_45
0x40013a9	          0x4889d8	                            mov rax, rbx	       668	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013ac	      0xe929020000	                           jmp 0x40015da	       668	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013b1	        0x4883c301	                              add rbx, 1	       670	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013b5	      0xbe00000000	                              mov esi, 0	       671	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_46
0x40013ba	      0xe835eeffff	                  call sym.string_append	       671	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_46
0x40013bf	          0x4889d8	                            mov rax, rbx	       672	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013c2	      0xe913020000	                           jmp 0x40015da	       672	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013c7	        0x4883c301	                              add rbx, 1	       674	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013cb	      0xbe00000000	                              mov esi, 0	       675	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_47
0x40013d0	      0xe81feeffff	                  call sym.string_append	       675	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_47
0x40013d5	          0x4889d8	                            mov rax, rbx	       676	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013d8	      0xe9fd010000	                           jmp 0x40015da	       676	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013dd	        0x4883c301	                              add rbx, 1	       678	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013e1	      0xbe00000000	                              mov esi, 0	       679	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_48
0x40013e6	      0xe809eeffff	                  call sym.string_append	       679	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_48
0x40013eb	          0x4889d8	                            mov rax, rbx	       680	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013ee	      0xe9e7010000	                           jmp 0x40015da	       680	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013f3	        0x4883c301	                              add rbx, 1	       682	d-demangle.c	FUNCTION_18	SWITCH_1
0x40013f7	      0xbe00000000	                              mov esi, 0	       683	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_49
0x40013fc	      0xe8f3edffff	                  call sym.string_append	       683	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_49
0x4001401	          0x4889d8	                            mov rax, rbx	       684	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001404	      0xe9d1010000	                           jmp 0x40015da	       684	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001409	        0x4883c301	                              add rbx, 1	       686	d-demangle.c	FUNCTION_18	SWITCH_1
0x400140d	      0xbe00000000	                              mov esi, 0	       687	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_50
0x4001412	      0xe8ddedffff	                  call sym.string_append	       687	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_50
0x4001417	          0x4889d8	                            mov rax, rbx	       688	d-demangle.c	FUNCTION_18	SWITCH_1
0x400141a	      0xe9bb010000	                           jmp 0x40015da	       688	d-demangle.c	FUNCTION_18	SWITCH_1
0x400141f	        0x4883c301	                              add rbx, 1	       690	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001423	      0xbe00000000	                              mov esi, 0	       691	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_51
0x4001428	      0xe8c7edffff	                  call sym.string_append	       691	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_51
0x400142d	          0x4889d8	                            mov rax, rbx	       692	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001430	      0xe9a5010000	                           jmp 0x40015da	       692	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001435	        0x4883c301	                              add rbx, 1	       694	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001439	      0xbe00000000	                              mov esi, 0	       695	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_52
0x400143e	      0xe8b1edffff	                  call sym.string_append	       695	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_52
0x4001443	          0x4889d8	                            mov rax, rbx	       696	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001446	      0xe98f010000	                           jmp 0x40015da	       696	d-demangle.c	FUNCTION_18	SWITCH_1
0x400144b	        0x4883c301	                              add rbx, 1	       698	d-demangle.c	FUNCTION_18	SWITCH_1
0x400144f	      0xbe00000000	                              mov esi, 0	       699	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_53
0x4001454	      0xe89bedffff	                  call sym.string_append	       699	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_53
0x4001459	          0x4889d8	                            mov rax, rbx	       700	d-demangle.c	FUNCTION_18	SWITCH_1
0x400145c	      0xe979010000	                           jmp 0x40015da	       700	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001461	        0x4883c301	                              add rbx, 1	       702	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001465	      0xbe00000000	                              mov esi, 0	       703	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_54
0x400146a	      0xe885edffff	                  call sym.string_append	       703	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_54
0x400146f	          0x4889d8	                            mov rax, rbx	       704	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001472	      0xe963010000	                           jmp 0x40015da	       704	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001477	        0x4883c301	                              add rbx, 1	       706	d-demangle.c	FUNCTION_18	SWITCH_1
0x400147b	      0xbe00000000	                              mov esi, 0	       707	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_55
0x4001480	      0xe86fedffff	                  call sym.string_append	       707	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_55
0x4001485	          0x4889d8	                            mov rax, rbx	       708	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001488	      0xe94d010000	                           jmp 0x40015da	       708	d-demangle.c	FUNCTION_18	SWITCH_1
0x400148d	        0x4883c301	                              add rbx, 1	       710	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001491	      0xbe00000000	                              mov esi, 0	       711	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_56
0x4001496	      0xe859edffff	                  call sym.string_append	       711	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_56
0x400149b	          0x4889d8	                            mov rax, rbx	       712	d-demangle.c	FUNCTION_18	SWITCH_1
0x400149e	      0xe937010000	                           jmp 0x40015da	       712	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014a3	        0x4883c301	                              add rbx, 1	       714	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014a7	      0xbe00000000	                              mov esi, 0	       715	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_57
0x40014ac	      0xe843edffff	                  call sym.string_append	       715	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_57
0x40014b1	          0x4889d8	                            mov rax, rbx	       716	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014b4	      0xe921010000	                           jmp 0x40015da	       716	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014b9	        0x4883c301	                              add rbx, 1	       720	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014bd	      0xbe00000000	                              mov esi, 0	       721	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_58
0x40014c2	      0xe82dedffff	                  call sym.string_append	       721	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_58
0x40014c7	          0x4889d8	                            mov rax, rbx	       722	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014ca	      0xe90b010000	                           jmp 0x40015da	       722	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014cf	        0x4883c301	                              add rbx, 1	       724	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014d3	      0xbe00000000	                              mov esi, 0	       725	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_59
0x40014d8	      0xe817edffff	                  call sym.string_append	       725	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_59
0x40014dd	          0x4889d8	                            mov rax, rbx	       726	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014e0	      0xe9f5000000	                           jmp 0x40015da	       726	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014e5	        0x4883c301	                              add rbx, 1	       728	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014e9	      0xbe00000000	                              mov esi, 0	       729	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_60
0x40014ee	      0xe801edffff	                  call sym.string_append	       729	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_60
0x40014f3	          0x4889d8	                            mov rax, rbx	       730	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014f6	      0xe9df000000	                           jmp 0x40015da	       730	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014fb	        0x4883c301	                              add rbx, 1	       732	d-demangle.c	FUNCTION_18	SWITCH_1
0x40014ff	      0xbe00000000	                              mov esi, 0	       733	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_61
0x4001504	      0xe8ebecffff	                  call sym.string_append	       733	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_61
0x4001509	          0x4889d8	                            mov rax, rbx	       734	d-demangle.c	FUNCTION_18	SWITCH_1
0x400150c	      0xe9c9000000	                           jmp 0x40015da	       734	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001511	        0x4883c301	                              add rbx, 1	       736	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001515	      0xbe00000000	                              mov esi, 0	       737	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_62
0x400151a	      0xe8d5ecffff	                  call sym.string_append	       737	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_62
0x400151f	          0x4889d8	                            mov rax, rbx	       738	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001522	      0xe9b3000000	                           jmp 0x40015da	       738	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001527	        0x4883c301	                              add rbx, 1	       740	d-demangle.c	FUNCTION_18	SWITCH_1
0x400152b	      0xbe00000000	                              mov esi, 0	       741	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_63
0x4001530	      0xe8bfecffff	                  call sym.string_append	       741	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_63
0x4001535	          0x4889d8	                            mov rax, rbx	       742	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001538	      0xe99d000000	                           jmp 0x40015da	       742	d-demangle.c	FUNCTION_18	SWITCH_1
0x400153d	        0x4883c301	                              add rbx, 1	       746	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001541	      0xbe00000000	                              mov esi, 0	       747	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_64
0x4001546	      0xe8a9ecffff	                  call sym.string_append	       747	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_64
0x400154b	          0x4889d8	                            mov rax, rbx	       748	d-demangle.c	FUNCTION_18	SWITCH_1
0x400154e	      0xe987000000	                           jmp 0x40015da	       748	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001553	        0x4883c301	                              add rbx, 1	       750	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001557	      0xbe00000000	                              mov esi, 0	       751	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_65
0x400155c	      0xe893ecffff	                  call sym.string_append	       751	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_65
0x4001561	          0x4889d8	                            mov rax, rbx	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001564	            0xeb74	                           jmp 0x40015da	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001566	        0x4883c301	                              add rbx, 1	       754	d-demangle.c	FUNCTION_18	SWITCH_1
0x400156a	      0xbe00000000	                              mov esi, 0	       755	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_66
0x400156f	      0xe880ecffff	                  call sym.string_append	       755	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_66
0x4001574	          0x4889d8	                            mov rax, rbx	       756	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001577	            0xeb61	                           jmp 0x40015da	       756	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001579	        0x4883c301	                              add rbx, 1	       758	d-demangle.c	FUNCTION_18	SWITCH_1
0x400157d	      0xbe00000000	                              mov esi, 0	       759	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_67
0x4001582	      0xe86decffff	                  call sym.string_append	       759	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_67
0x4001587	          0x4889d8	                            mov rax, rbx	       760	d-demangle.c	FUNCTION_18	SWITCH_1
0x400158a	            0xeb4e	                           jmp 0x40015da	       760	d-demangle.c	FUNCTION_18	SWITCH_1
0x400158c	         0xfb64601	               movzx eax, byte [rsi + 1]	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001590	            0x3c69	                            cmp al, 0x69	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001592	            0x7406	                            je 0x400159a	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001594	            0x3c6b	                            cmp al, 0x6b	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001596	            0x7415	                            je 0x40015ad	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001598	            0xeb3b	                           jmp 0x40015d5	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x400159a	        0x4883c302	                              add rbx, 2	       766	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x400159e	      0xbe00000000	                              mov esi, 0	       767	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_68
0x40015a3	      0xe84cecffff	                  call sym.string_append	       767	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_68
0x40015a8	          0x4889d8	                            mov rax, rbx	       768	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40015ab	            0xeb2d	                           jmp 0x40015da	       768	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40015ad	        0x4883c302	                              add rbx, 2	       770	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40015b1	      0xbe00000000	                              mov esi, 0	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x40015b6	      0xe839ecffff	                  call sym.string_append	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x40015bb	          0x4889d8	                            mov rax, rbx	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40015be	            0xeb1a	                           jmp 0x40015da	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40015c0	      0xb800000000	                              mov eax, 0	       534	d-demangle.c	FUNCTION_18	IF_1
0x40015c5	            0xeb13	                           jmp 0x40015da	       534	d-demangle.c	FUNCTION_18	IF_1
0x40015c7	      0xb800000000	                              mov eax, 0	       534	d-demangle.c	FUNCTION_18	IF_1
0x40015cc	            0xeb0c	                           jmp 0x40015da	       534	d-demangle.c	FUNCTION_18	IF_1
0x40015ce	      0xb800000000	                              mov eax, 0	       777	d-demangle.c	FUNCTION_18	SWITCH_1
0x40015d3	            0xeb05	                           jmp 0x40015da	       777	d-demangle.c	FUNCTION_18	SWITCH_1
0x40015d5	      0xb800000000	                              mov eax, 0	       774	d-demangle.c	FUNCTION_18	SWITCH_1
0x40015da	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       779	d-demangle.c	FUNCTION_18
0x40015df	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       779	d-demangle.c	FUNCTION_18
0x40015e8	            0x7405	                            je 0x40015ef	       779	d-demangle.c	FUNCTION_18
0x40015ea	      0xe800000000	                          call 0x40015ef	       779	d-demangle.c	FUNCTION_18
0x40015ef	        0x4883c428	                           add rsp, 0x28	       779	d-demangle.c	FUNCTION_18
0x40015f3	              0x5b	                                 pop rbx	       779	d-demangle.c	FUNCTION_18
0x40015f4	              0x5d	                                 pop rbp	       779	d-demangle.c	FUNCTION_18
0x40015f5	            0x415c	                                 pop r12	       779	d-demangle.c	FUNCTION_18
0x40015f7	            0x415d	                                 pop r13	       779	d-demangle.c	FUNCTION_18
0x40015f9	              0xc3	                                     ret	       779	d-demangle.c	FUNCTION_18
string_length	CALL,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,1:SWITCH,0:FOR,0	8
0x4000040	        0x488b4f08	                mov rcx, qword [rdi + 8]	       101	d-demangle.c	FUNCTION_4	IF_1
0x4000044	          0x488b17	                    mov rdx, qword [rdi]	       101	d-demangle.c	FUNCTION_4	IF_1
0x4000047	            0x89c8	                            mov eax, ecx	       105	d-demangle.c	FUNCTION_4
0x4000049	            0x29d0	                            sub eax, edx	       105	d-demangle.c	FUNCTION_4
0x400004b	          0x4839d1	                            cmp rcx, rdx	       105	d-demangle.c	FUNCTION_4
0x400004e	      0xba00000000	                              mov edx, 0	       105	d-demangle.c	FUNCTION_4
0x4000053	           0xf44c2	                          cmove eax, edx	       105	d-demangle.c	FUNCTION_4
0x4000056	              0xc3	                                     ret	       106	d-demangle.c	FUNCTION_4
string_need	CALL,2:functions,0:ELSE,1:WHILE,0:DO,0:IF,3:SWITCH,0:FOR,0	40
0x400017c	            0x4154	                                push r12	        59	d-demangle.c	FUNCTION_1
0x400017e	              0x55	                                push rbp	        59	d-demangle.c	FUNCTION_1
0x400017f	              0x53	                                push rbx	        59	d-demangle.c	FUNCTION_1
0x4000180	          0x4889fd	                            mov rbp, rdi	        59	d-demangle.c	FUNCTION_1
0x4000183	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000186	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000189	            0x7528	                           jne 0x40001b3	        62	d-demangle.c	FUNCTION_1	IF_1
0x400018b	          0x83fe1f	                           cmp esi, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400018e	      0xb820000000	                           mov eax, 0x20	        66	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4000193	           0xf4ef0	                         cmovle esi, eax	        66	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4000196	          0x4863de	                         movsxd rbx, esi	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000199	          0x4889df	                            mov rdi, rbx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400019c	      0xe800000000	                          call 0x40001a1	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40001a1	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40001a5	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40001a9	        0x488d3418	                    lea rsi, [rax + rbx]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40001ad	        0x48897510	            mov qword [rbp + 0x10], rsi 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40001b1	            0xeb3c	                           jmp 0x40001ef	        69	d-demangle.c	FUNCTION_1	IF_1
0x40001b3	        0x4c8b6508	                mov r12, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001b7	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001bb	          0x4c29e0	                            sub rax, r12	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001be	          0x4863d6	                         movsxd rdx, esi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001c1	          0x4839d0	                            cmp rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001c4	            0x7d29	                           jge 0x40001ef	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001c6	          0x4929fc	                            sub r12, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001c9	        0x428d1c26	                    lea ebx, [rsi + r12]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001cd	             0x1db	                            add ebx, ebx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40001cf	          0x4863db	                         movsxd rbx, ebx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40001d2	          0x4889de	                            mov rsi, rbx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40001d5	      0xe800000000	                          call 0x40001da	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40001da	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40001de	          0x4d63e4	                        movsxd r12, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001e1	          0x4901c4	                            add r12, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001e4	        0x4c896508	                mov qword [rbp + 8], r12	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001e8	          0x4801c3	                            add rbx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001eb	        0x48895d10	            mov qword [rbp + 0x10], rbx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40001ef	              0x5b	                                 pop rbx	        80	d-demangle.c	FUNCTION_1
0x40001f0	              0x5d	                                 pop rbp	        80	d-demangle.c	FUNCTION_1
0x40001f1	            0x415c	                                 pop r12	        80	d-demangle.c	FUNCTION_1
0x40001f3	              0xc3	                                     ret	        80	d-demangle.c	FUNCTION_1
dlang_parse_mangle	CALL,17:functions,0:ELSE,1:WHILE,0:DO,0:IF,6:SWITCH,0:FOR,0	106
0x4001e9a	            0x4155	                                push r13	      1341	d-demangle.c	FUNCTION_27
0x4001e9c	            0x4154	                                push r12	      1341	d-demangle.c	FUNCTION_27
0x4001e9e	              0x55	                                push rbp	      1341	d-demangle.c	FUNCTION_27
0x4001e9f	              0x53	                                push rbx	      1341	d-demangle.c	FUNCTION_27
0x4001ea0	        0x4883ec28	                           sub rsp, 0x28	      1341	d-demangle.c	FUNCTION_27
0x4001ea4	          0x4889fd	                            mov rbp, rdi	      1341	d-demangle.c	FUNCTION_27
0x4001ea7	          0x4189d4	                           mov r12d, edx	      1341	d-demangle.c	FUNCTION_27
0x4001eaa	    0x64488b042528	                mov rax, qword fs:[0x28]	      1341	d-demangle.c	FUNCTION_27
0x4001eb3	      0x4889442418	             mov qword [rsp + 0x18], rax	      1341	d-demangle.c	FUNCTION_27
0x4001eb8	            0x31c0	                            xor eax, eax	      1341	d-demangle.c	FUNCTION_27
0x4001eba	        0x4883c602	                              add rsi, 2	      1352	d-demangle.c	FUNCTION_27
0x4001ebe	      0xba00000000	                              mov edx, 0	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x4001ec3	      0xe883feffff	          call sym.dlang_parse_qualified	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x4001ec8	          0x4889c3	                            mov rbx, rax	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x4001ecb	          0x4885c0	                           test rax, rax	      1356	d-demangle.c	FUNCTION_27	IF_1
0x4001ece	     0xf8426010000	                            je 0x4001ffa	      1356	d-demangle.c	FUNCTION_27	IF_1
0x4001ed4	           0xfb600	                   movzx eax, byte [rax]	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x4001ed7	            0x3c5a	                            cmp al, 0x5a	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x4001ed9	            0x7509	                           jne 0x4001ee4	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x4001edb	        0x4883c301	                              add rbx, 1	      1360	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x4001edf	      0xe9dd000000	                           jmp 0x4001fc1	      1360	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x4001ee4	            0x3c4d	                            cmp al, 0x4d	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x4001ee6	           0xf94c0	                                 sete al	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x4001ee9	           0xfb6c0	                           movzx eax, al	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x4001eec	          0x4801c3	                            add rbx, rax	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x4001eef	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4001ef8	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x4001f01	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x4001f09	          0x4889de	                            mov rsi, rbx	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x4001f0c	          0x4889e7	                            mov rdi, rsp	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x4001f0f	      0xe827e3ffff	           call sym.dlang_type_modifiers	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x4001f14	          0x4889c3	                            mov rbx, rax	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x4001f17	          0x4885c0	                           test rax, rax	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4001f1a	            0x7479	                            je 0x4001f95	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4001f1c	          0x4889c7	                            mov rdi, rax	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4001f1f	      0xe80ee2ffff	        call sym.dlang_call_convention_p	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4001f24	            0x85c0	                           test eax, eax	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4001f26	            0x746d	                            je 0x4001f95	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4001f28	          0x4889ef	                            mov rdi, rbp	      1377	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_5
0x4001f2b	      0xe810e1ffff	                  call sym.string_length	      1377	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_5
0x4001f30	          0x4189c5	                           mov r13d, eax	      1377	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_5
0x4001f33	          0x4889de	                            mov rsi, rbx	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4001f36	          0x4889ef	                            mov rdi, rbp	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4001f39	      0xe8ace3ffff	          call sym.dlang_call_convention	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4001f3e	          0x4889c6	                            mov rsi, rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4001f41	          0x4889ef	                            mov rdi, rbp	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4001f44	      0xe839e4ffff	               call sym.dlang_attributes	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4001f49	          0x4889c3	                            mov rbx, rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4001f4c	          0x4489ee	                           mov esi, r13d	      1380	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_8
0x4001f4f	          0x4889ef	                            mov rdi, rbp	      1380	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_8
0x4001f52	      0xe800e1ffff	               call sym.string_setlength	      1380	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_8
0x4001f57	      0xbe00000000	                              mov esi, 0	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x4001f5c	          0x4889ef	                            mov rdi, rbp	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x4001f5f	      0xe890e2ffff	                  call sym.string_append	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x4001f64	          0x4889de	                            mov rsi, rbx	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4001f67	          0x4889ef	                            mov rdi, rbp	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4001f6a	      0xe88bf6ffff	            call sym.dlang_function_args	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4001f6f	          0x4889c3	                            mov rbx, rax	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4001f72	      0xbe00000000	                              mov esi, 0	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x4001f77	          0x4889ef	                            mov rdi, rbp	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x4001f7a	      0xe875e2ffff	                  call sym.string_append	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x4001f7f	          0x4889e7	                            mov rdi, rsp	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x4001f82	      0xe8b9e0ffff	                  call sym.string_length	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x4001f87	            0x89c2	                            mov edx, eax	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x4001f89	        0x488b3424	                    mov rsi, qword [rsp]	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x4001f8d	          0x4889ef	                            mov rdi, rbp	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x4001f90	      0xe86be5ffff	                 call sym.string_appendn	      1387	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_13
0x4001f95	          0x4889ef	                            mov rdi, rbp	      1391	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_14
0x4001f98	      0xe8a3e0ffff	                  call sym.string_length	      1391	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_14
0x4001f9d	          0x4189c5	                           mov r13d, eax	      1391	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_14
0x4001fa0	          0x4889de	                            mov rsi, rbx	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4001fa3	          0x4889ef	                            mov rdi, rbp	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4001fa6	      0xe841f0ffff	                     call sym.dlang_type	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4001fab	          0x4889c3	                            mov rbx, rax	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4001fae	          0x4489ee	                           mov esi, r13d	      1393	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_16
0x4001fb1	          0x4889ef	                            mov rdi, rbp	      1393	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_16
0x4001fb4	      0xe89ee0ffff	               call sym.string_setlength	      1393	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_16
0x4001fb9	          0x4889e7	                            mov rdi, rsp	      1395	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_17
0x4001fbc	      0xe891e1ffff	                  call sym.string_delete	      1395	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_17
0x4001fc1	          0x4585e4	                         test r12d, r12d	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4001fc4	            0x750a	                           jne 0x4001fd0	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4001fc6	          0x4885db	                           test rbx, rbx	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fc9	            0x740a	                            je 0x4001fd5	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fcb	          0x803b00	                       cmp byte [rbx], 0	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fce	            0x750c	                           jne 0x4001fdc	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fd0	          0x4889d8	                            mov rax, rbx	      1406	d-demangle.c	FUNCTION_27
0x4001fd3	            0xeb13	                           jmp 0x4001fe8	      1406	d-demangle.c	FUNCTION_27
0x4001fd5	      0xb800000000	                              mov eax, 0	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fda	            0xeb0c	                           jmp 0x4001fe8	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fdc	      0xb800000000	                              mov eax, 0	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fe1	            0xeb05	                           jmp 0x4001fe8	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fe3	      0xb800000000	                              mov eax, 0	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4001fe8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1407	d-demangle.c	FUNCTION_27
0x4001fed	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1407	d-demangle.c	FUNCTION_27
0x4001ff6	            0x740e	                            je 0x4002006	      1407	d-demangle.c	FUNCTION_27
0x4001ff8	            0xeb07	                           jmp 0x4002001	      1407	d-demangle.c	FUNCTION_27
0x4001ffa	          0x4585e4	                         test r12d, r12d	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4001ffd	            0x75d1	                           jne 0x4001fd0	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4001fff	            0xebe2	                           jmp 0x4001fe3	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002001	      0xe800000000	                          call 0x4002006	      1407	d-demangle.c	FUNCTION_27
0x4002006	        0x4883c428	                           add rsp, 0x28	      1407	d-demangle.c	FUNCTION_27
0x400200a	              0x5b	                                 pop rbx	      1407	d-demangle.c	FUNCTION_27
0x400200b	              0x5d	                                 pop rbp	      1407	d-demangle.c	FUNCTION_27
0x400200c	            0x415c	                                 pop r12	      1407	d-demangle.c	FUNCTION_27
0x400200e	            0x415d	                                 pop r13	      1407	d-demangle.c	FUNCTION_27
0x4002010	              0xc3	                                     ret	      1407	d-demangle.c	FUNCTION_27
string_prepend	CALL,2:functions,0:ELSE,0:WHILE,0:DO,0:IF,1:SWITCH,0:FOR,0	46
0x4000471	          0x4885f6	                           test rsi, rsi	       157	d-demangle.c	FUNCTION_9	IF_1
0x4000474	     0xf8484000000	                            je 0x40004fe	       157	d-demangle.c	FUNCTION_9	IF_1
0x400047a	            0x4155	                                push r13	       156	d-demangle.c	FUNCTION_9
0x400047c	            0x4154	                                push r12	       156	d-demangle.c	FUNCTION_9
0x400047e	              0x55	                                push rbp	       156	d-demangle.c	FUNCTION_9
0x400047f	              0x53	                                push rbx	       156	d-demangle.c	FUNCTION_9
0x4000480	        0x4883ec08	                              sub rsp, 8	       156	d-demangle.c	FUNCTION_9
0x4000484	          0x4989fc	                            mov r12, rdi	       156	d-demangle.c	FUNCTION_9
0x4000487	          0x803e00	                       cmp byte [rsi], 0	       157	d-demangle.c	FUNCTION_9	IF_1
0x400048a	            0x7468	                            je 0x40004f4	       157	d-demangle.c	FUNCTION_9	IF_1
0x400048c	      0xb800000000	                              mov eax, 0	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x4000491	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x4000498	          0x4889f7	                            mov rdi, rsi	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x400049b	            0xf2ae	              repne scasb al, byte [rdi]	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x400049d	          0x4889cb	                            mov rbx, rcx	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40004a0	          0x48f7d3	                                 not rbx	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40004a3	        0x488d5bff	                      lea rbx, [rbx - 1]	       159	d-demangle.c	FUNCTION_9	IF_1	CALL_2
0x40004a7	            0x85db	                           test ebx, ebx	       142	d-demangle.c	FUNCTION_8	IF_1
0x40004a9	            0x7449	                            je 0x40004f4	       142	d-demangle.c	FUNCTION_8	IF_1
0x40004ab	          0x4889f5	                            mov rbp, rsi	       142	d-demangle.c	FUNCTION_8	IF_1
0x40004ae	            0x89de	                            mov esi, ebx	       144	d-demangle.c	FUNCTION_8	IF_1	CALL_1
0x40004b0	          0x4c89e7	                            mov rdi, r12	       144	d-demangle.c	FUNCTION_8	IF_1	CALL_1
0x40004b3	      0xe8c4fcffff	                    call sym.string_need	       144	d-demangle.c	FUNCTION_8	IF_1	CALL_1
0x40004b8	      0x498b442408	                mov rax, qword [r12 + 8]	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004bd	        0x4883e801	                              sub rax, 1	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004c1	        0x498b3c24	                    mov rdi, qword [r12]	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004c5	          0x4839f8	                            cmp rax, rdi	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004c8	            0x7217	                            jb 0x40004e1	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004ca	          0x4c63eb	                         movsxd r13, ebx	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004cd	           0xfb610	                   movzx edx, byte [rax]	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004d0	        0x42881428	                mov byte [rax + r13], dl	       147	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004d4	        0x4883e801	                              sub rax, 1	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004d8	        0x498b3c24	                    mov rdi, qword [r12]	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004dc	          0x4839f8	                            cmp rax, rdi	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004df	            0x73ec	                           jae 0x40004cd	       145	d-demangle.c	FUNCTION_8	IF_1	FOR_1
0x40004e1	          0x4863db	                         movsxd rbx, ebx	       149	d-demangle.c	FUNCTION_8	IF_1	CALL_2
0x40004e4	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_33	CALL_3
0x40004e7	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_33	CALL_3
0x40004ea	      0xe800000000	                          call 0x40004ef	        53	string3.h	FUNCTION_33	CALL_3
0x40004ef	      0x49015c2408	                add qword [r12 + 8], rbx	       150	d-demangle.c	FUNCTION_8	IF_1
0x40004f4	        0x4883c408	                              add rsp, 8	       161	d-demangle.c	FUNCTION_9
0x40004f8	              0x5b	                                 pop rbx	       161	d-demangle.c	FUNCTION_9
0x40004f9	              0x5d	                                 pop rbp	       161	d-demangle.c	FUNCTION_9
0x40004fa	            0x415c	                                 pop r12	       161	d-demangle.c	FUNCTION_9
0x40004fc	            0x415d	                                 pop r13	       161	d-demangle.c	FUNCTION_9
0x40004fe	            0xf3c3	                                     ret	       161	d-demangle.c	FUNCTION_9
dlang_attributes	CALL,9:functions,0:ELSE,0:WHILE,1:DO,0:IF,1:SWITCH,1:FOR,0	65
0x4000382	          0x4885f6	                           test rsi, rsi	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000385	     0xf84ce000000	                            je 0x4000459	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x400038b	          0x803e00	                       cmp byte [rsi], 0	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x400038e	     0xf84cb000000	                            je 0x400045f	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000394	              0x55	                                push rbp	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000395	              0x53	                                push rbx	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000396	        0x4883ec08	                              sub rsp, 8	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x400039a	          0x4889fd	                            mov rbp, rdi	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x400039d	        0x488d5e02	                      lea rbx, [rsi + 2]	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x40003a1	      0xe9a3000000	                           jmp 0x4000449	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x40003a6	         0xfb64bff	               movzx ecx, byte [rbx - 1]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003aa	          0x8d519f	                   lea edx, [rcx - 0x61]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003ad	          0x80fa0b	                             cmp dl, 0xb	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003b0	     0xf87af000000	                            ja 0x4000465	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003b6	           0xfb6d2	                           movzx edx, dl	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003b9	    0xff24d5000000	                       jmp qword [rdx*8]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003c0	      0xbe00000000	                              mov esi, 0	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x40003c5	          0x4889ef	                            mov rdi, rbp	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x40003c8	      0xe827feffff	                  call sym.string_append	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x40003cd	            0xeb76	                           jmp 0x4000445	       364	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003cf	      0xbe00000000	                              mov esi, 0	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x40003d4	          0x4889ef	                            mov rdi, rbp	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x40003d7	      0xe818feffff	                  call sym.string_append	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x40003dc	            0xeb67	                           jmp 0x4000445	       368	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003de	      0xbe00000000	                              mov esi, 0	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x40003e3	          0x4889ef	                            mov rdi, rbp	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x40003e6	      0xe809feffff	                  call sym.string_append	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x40003eb	            0xeb58	                           jmp 0x4000445	       372	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003ed	      0xbe00000000	                              mov esi, 0	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x40003f2	          0x4889ef	                            mov rdi, rbp	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x40003f5	      0xe8fafdffff	                  call sym.string_append	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x40003fa	            0xeb49	                           jmp 0x4000445	       376	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003fc	      0xbe00000000	                              mov esi, 0	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x4000401	          0x4889ef	                            mov rdi, rbp	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x4000404	      0xe8ebfdffff	                  call sym.string_append	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x4000409	            0xeb3a	                           jmp 0x4000445	       380	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400040b	      0xbe00000000	                              mov esi, 0	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x4000410	          0x4889ef	                            mov rdi, rbp	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x4000413	      0xe8dcfdffff	                  call sym.string_append	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x4000418	            0xeb2b	                           jmp 0x4000445	       384	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400041a	      0xbe00000000	                              mov esi, 0	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x400041f	          0x4889ef	                            mov rdi, rbp	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x4000422	      0xe8cdfdffff	                  call sym.string_append	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x4000427	            0xeb1c	                           jmp 0x4000445	       398	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000429	      0xbe00000000	                              mov esi, 0	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x400042e	          0x4889ef	                            mov rdi, rbp	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000431	      0xe8befdffff	                  call sym.string_append	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000436	            0xeb0d	                           jmp 0x4000445	       402	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000438	      0xbe00000000	                              mov esi, 0	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x400043d	          0x4889ef	                            mov rdi, rbp	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x4000440	      0xe8affdffff	                  call sym.string_append	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x4000445	        0x4883c302	                              add rbx, 2	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x4000449	        0x488d43fe	                      lea rax, [rbx - 2]	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x400044d	        0x807bfe4e	                cmp byte [rbx - 2], 0x4e	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x4000451	     0xf844fffffff	                            je 0x40003a6	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x4000457	            0xeb11	                           jmp 0x400046a	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x4000459	      0xb800000000	                              mov eax, 0	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x400045e	              0xc3	                                     ret	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x400045f	      0xb800000000	                              mov eax, 0	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000464	              0xc3	                                     ret	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000465	      0xb800000000	                              mov eax, 0	       409	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400046a	        0x4883c408	                              add rsp, 8	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x400046e	              0x5b	                                 pop rbx	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x400046f	              0x5d	                                 pop rbp	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000470	              0xc3	                                     ret	       415	d-demangle.c	ELSE_1	FUNCTION_15
dlang_function_type	CALL,18:functions,0:ELSE,0:WHILE,0:DO,0:IF,1:SWITCH,0:FOR,0	80
0x4000e8a	            0x4155	                                push r13	       421	d-demangle.c	FUNCTION_16
0x4000e8c	            0x4154	                                push r12	       421	d-demangle.c	FUNCTION_16
0x4000e8e	              0x55	                                push rbp	       421	d-demangle.c	FUNCTION_16
0x4000e8f	              0x53	                                push rbx	       421	d-demangle.c	FUNCTION_16
0x4000e90	        0x4883ec68	                           sub rsp, 0x68	       421	d-demangle.c	FUNCTION_16
0x4000e94	    0x64488b042528	                mov rax, qword fs:[0x28]	       421	d-demangle.c	FUNCTION_16
0x4000e9d	      0x4889442458	             mov qword [rsp + 0x58], rax	       421	d-demangle.c	FUNCTION_16
0x4000ea2	            0x31c0	                            xor eax, eax	       421	d-demangle.c	FUNCTION_16
0x4000ea4	          0x4885f6	                           test rsi, rsi	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000ea7	     0xf841a010000	                            je 0x4000fc7	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000ead	          0x4889fb	                            mov rbx, rdi	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000eb0	          0x803e00	                       cmp byte [rsi], 0	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000eb3	     0xf8413010000	                            je 0x4000fcc	       425	d-demangle.c	FUNCTION_16	IF_1
0x4000eb9	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4000ec2	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x4000ecb	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x4000ed3	    0x48c744243000	               mov qword [rsp + 0x30], 0	        95	d-demangle.c	FUNCTION_3
0x4000edc	    0x48c744242800	               mov qword [rsp + 0x28], 0	        95	d-demangle.c	FUNCTION_3
0x4000ee5	    0x48c744242000	               mov qword [rsp + 0x20], 0	        95	d-demangle.c	FUNCTION_3
0x4000eee	    0x48c744245000	               mov qword [rsp + 0x50], 0	        95	d-demangle.c	FUNCTION_3
0x4000ef7	    0x48c744244800	               mov qword [rsp + 0x48], 0	        95	d-demangle.c	FUNCTION_3
0x4000f00	    0x48c744244000	               mov qword [rsp + 0x40], 0	        95	d-demangle.c	FUNCTION_3
0x4000f09	      0xe8dcf3ffff	          call sym.dlang_call_convention	       439	d-demangle.c	FUNCTION_16	CALL_4
0x4000f0e	          0x4889c6	                            mov rsi, rax	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000f11	          0x4889e7	                            mov rdi, rsp	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000f14	      0xe869f4ffff	               call sym.dlang_attributes	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000f19	          0x4889c5	                            mov rbp, rax	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4000f1c	          0x4889e7	                            mov rdi, rsp	       443	d-demangle.c	FUNCTION_16	CALL_6
0x4000f1f	      0xe81cf1ffff	                  call sym.string_length	       443	d-demangle.c	FUNCTION_16	CALL_6
0x4000f24	          0x4189c4	                           mov r12d, eax	       443	d-demangle.c	FUNCTION_16	CALL_6
0x4000f27	          0x4889ee	                            mov rsi, rbp	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000f2a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000f2f	      0xe8c6060000	            call sym.dlang_function_args	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000f34	          0x4889c5	                            mov rbp, rax	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4000f37	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       447	d-demangle.c	FUNCTION_16	CALL_8
0x4000f3c	      0xe8fff0ffff	                  call sym.string_length	       447	d-demangle.c	FUNCTION_16	CALL_8
0x4000f41	          0x4189c5	                           mov r13d, eax	       447	d-demangle.c	FUNCTION_16	CALL_8
0x4000f44	          0x4889ee	                            mov rsi, rbp	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000f47	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000f4c	      0xe89b000000	                     call sym.dlang_type	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000f51	          0x4889c5	                            mov rbp, rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4000f54	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       451	d-demangle.c	FUNCTION_16	CALL_10
0x4000f59	      0xe8e2f0ffff	                  call sym.string_length	       451	d-demangle.c	FUNCTION_16	CALL_10
0x4000f5e	            0x89c2	                            mov edx, eax	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000f60	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000f65	          0x4889df	                            mov rdi, rbx	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000f68	      0xe893f5ffff	                 call sym.string_appendn	       454	d-demangle.c	FUNCTION_16	CALL_11
0x4000f6d	      0xbe00000000	                              mov esi, 0	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4000f72	          0x4889df	                            mov rdi, rbx	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4000f75	      0xe87af2ffff	                  call sym.string_append	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4000f7a	          0x4489ea	                           mov edx, r13d	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000f7d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000f82	          0x4889df	                            mov rdi, rbx	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000f85	      0xe876f5ffff	                 call sym.string_appendn	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4000f8a	      0xbe00000000	                              mov esi, 0	       457	d-demangle.c	FUNCTION_16	CALL_14
0x4000f8f	          0x4889df	                            mov rdi, rbx	       457	d-demangle.c	FUNCTION_16	CALL_14
0x4000f92	      0xe85df2ffff	                  call sym.string_append	       457	d-demangle.c	FUNCTION_16	CALL_14
0x4000f97	          0x4489e2	                           mov edx, r12d	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000f9a	        0x488b3424	                    mov rsi, qword [rsp]	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000f9e	          0x4889df	                            mov rdi, rbx	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000fa1	      0xe85af5ffff	                 call sym.string_appendn	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4000fa6	          0x4889e7	                            mov rdi, rsp	       460	d-demangle.c	FUNCTION_16	CALL_16
0x4000fa9	      0xe8a4f1ffff	                  call sym.string_delete	       460	d-demangle.c	FUNCTION_16	CALL_16
0x4000fae	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       461	d-demangle.c	FUNCTION_16	CALL_17
0x4000fb3	      0xe89af1ffff	                  call sym.string_delete	       461	d-demangle.c	FUNCTION_16	CALL_17
0x4000fb8	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       462	d-demangle.c	FUNCTION_16	CALL_18
0x4000fbd	      0xe890f1ffff	                  call sym.string_delete	       462	d-demangle.c	FUNCTION_16	CALL_18
0x4000fc2	          0x4889e8	                            mov rax, rbp	       463	d-demangle.c	FUNCTION_16
0x4000fc5	            0xeb05	                           jmp 0x4000fcc	       463	d-demangle.c	FUNCTION_16
0x4000fc7	      0xb800000000	                              mov eax, 0	       426	d-demangle.c	FUNCTION_16	IF_1
0x4000fcc	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       464	d-demangle.c	FUNCTION_16
0x4000fd1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       464	d-demangle.c	FUNCTION_16
0x4000fda	            0x7405	                            je 0x4000fe1	       464	d-demangle.c	FUNCTION_16
0x4000fdc	      0xe800000000	                          call 0x4000fe1	       464	d-demangle.c	FUNCTION_16
0x4000fe1	        0x4883c468	                           add rsp, 0x68	       464	d-demangle.c	FUNCTION_16
0x4000fe5	              0x5b	                                 pop rbx	       464	d-demangle.c	FUNCTION_16
0x4000fe6	              0x5d	                                 pop rbp	       464	d-demangle.c	FUNCTION_16
0x4000fe7	            0x415c	                                 pop r12	       464	d-demangle.c	FUNCTION_16
0x4000fe9	            0x415d	                                 pop r13	       464	d-demangle.c	FUNCTION_16
0x4000feb	              0xc3	                                     ret	       464	d-demangle.c	FUNCTION_16
dlang_type_modifiers	CALL,6:functions,0:ELSE,1:WHILE,0:DO,0:IF,2:SWITCH,1:FOR,0	56
0x400023b	          0x4885f6	                           test rsi, rsi	       315	d-demangle.c	FUNCTION_14	IF_1
0x400023e	     0xf8490000000	                            je 0x40002d4	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000244	           0xfb606	                   movzx eax, byte [rsi]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000247	            0x84c0	                             test al, al	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000249	     0xf848b000000	                            je 0x40002da	       315	d-demangle.c	FUNCTION_14	IF_1
0x400024f	              0x55	                                push rbp	       314	d-demangle.c	FUNCTION_14
0x4000250	              0x53	                                push rbx	       314	d-demangle.c	FUNCTION_14
0x4000251	        0x4883ec08	                              sub rsp, 8	       314	d-demangle.c	FUNCTION_14
0x4000255	          0x4889f3	                            mov rbx, rsi	       314	d-demangle.c	FUNCTION_14
0x4000258	          0x4889fd	                            mov rbp, rdi	       314	d-demangle.c	FUNCTION_14
0x400025b	            0x3c4f	                            cmp al, 0x4f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400025d	            0x743a	                            je 0x4000299	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400025f	            0x3c4f	                            cmp al, 0x4f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000261	            0x7f06	                            jg 0x4000269	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000263	            0x3c4e	                            cmp al, 0x4e	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000265	            0x744a	                            je 0x40002b1	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000267	            0xeb77	                           jmp 0x40002e0	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000269	            0x3c78	                            cmp al, 0x78	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400026b	            0x7406	                            je 0x4000273	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400026d	            0x3c79	                            cmp al, 0x79	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400026f	            0x7415	                            je 0x4000286	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000271	            0xeb6d	                           jmp 0x40002e0	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000273	        0x4883c301	                              add rbx, 1	       321	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000277	      0xbe00000000	                              mov esi, 0	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x400027c	      0xe873ffffff	                  call sym.string_append	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x4000281	          0x4889d8	                            mov rax, rbx	       323	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000284	            0xeb5d	                           jmp 0x40002e3	       323	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000286	        0x4883c301	                              add rbx, 1	       325	d-demangle.c	FUNCTION_14	SWITCH_1
0x400028a	      0xbe00000000	                              mov esi, 0	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x400028f	      0xe860ffffff	                  call sym.string_append	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x4000294	          0x4889d8	                            mov rax, rbx	       327	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000297	            0xeb4a	                           jmp 0x40002e3	       327	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000299	      0xbe00000000	                              mov esi, 0	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x400029e	      0xe851ffffff	                  call sym.string_append	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x40002a3	        0x488d7301	                      lea rsi, [rbx + 1]	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x40002a7	          0x4889ef	                            mov rdi, rbp	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x40002aa	      0xe88cffffff	           call sym.dlang_type_modifiers	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x40002af	            0xeb32	                           jmp 0x40002e3	       331	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_4
0x40002b1	      0xb800000000	                              mov eax, 0	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x40002b6	        0x807e0167	                cmp byte [rsi + 1], 0x67	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x40002ba	            0x7527	                           jne 0x40002e3	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x40002bc	      0xbe00000000	                              mov esi, 0	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x40002c1	      0xe82effffff	                  call sym.string_append	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x40002c6	        0x488d7302	                      lea rsi, [rbx + 2]	       336	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x40002ca	          0x4889ef	                            mov rdi, rbp	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x40002cd	      0xe869ffffff	           call sym.dlang_type_modifiers	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x40002d2	            0xeb0f	                           jmp 0x40002e3	       338	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_6
0x40002d4	      0xb800000000	                              mov eax, 0	       316	d-demangle.c	FUNCTION_14	IF_1
0x40002d9	              0xc3	                                     ret	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40002da	      0xb800000000	                              mov eax, 0	       316	d-demangle.c	FUNCTION_14	IF_1
0x40002df	              0xc3	                                     ret	       316	d-demangle.c	FUNCTION_14	IF_1
0x40002e0	          0x4889d8	                            mov rax, rbx	       344	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x40002e3	        0x4883c408	                              add rsp, 8	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40002e7	              0x5b	                                 pop rbx	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40002e8	              0x5d	                                 pop rbp	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40002e9	              0xc3	                                     ret	       346	d-demangle.c	FUNCTION_14	ELSE_1
dlang_demangle	CALL,8:functions,0:ELSE,1:WHILE,0:DO,0:IF,5:SWITCH,0:FOR,0	62
0x4002011	        0x4883ec28	                           sub rsp, 0x28	      1615	d-demangle.c	FUNCTION_32
0x4002015	    0x64488b042528	                mov rax, qword fs:[0x28]	      1615	d-demangle.c	FUNCTION_32
0x400201e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1615	d-demangle.c	FUNCTION_32
0x4002023	            0x31c0	                            xor eax, eax	      1615	d-demangle.c	FUNCTION_32
0x4002025	          0x4885ff	                           test rdi, rdi	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002028	     0xf84af000000	                            je 0x40020dd	      1619	d-demangle.c	FUNCTION_32	IF_1
0x400202e	          0x4989f8	                             mov r8, rdi	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002031	          0x803f00	                       cmp byte [rdi], 0	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002034	     0xf84aa000000	                            je 0x40020e4	      1619	d-demangle.c	FUNCTION_32	IF_1
0x400203a	      0xbf00000000	                              mov edi, 0	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x400203f	      0xb902000000	                              mov ecx, 2	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002044	          0x4c89c6	                             mov rsi, r8	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002047	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002049	           0xf97c1	                                 seta cl	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x400204c	           0xf92c2	                                 setb dl	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x400204f	            0x38d1	                              cmp cl, dl	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002051	     0xf8599000000	                           jne 0x40020f0	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002057	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4002060	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x4002069	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x4002071	      0xbf00000000	                              mov edi, 0	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002076	      0xb907000000	                              mov ecx, 7	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x400207b	          0x4c89c6	                             mov rsi, r8	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x400207e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002080	           0xf97c2	                                 seta dl	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002083	           0xf92c0	                                 setb al	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002086	            0x38c2	                              cmp dl, al	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002088	            0x750f	                           jne 0x4002099	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x400208a	      0xbe00000000	                              mov esi, 0	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x400208f	          0x4889e7	                            mov rdi, rsp	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002092	      0xe85de1ffff	                  call sym.string_append	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002097	            0xeb1d	                           jmp 0x40020b6	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002099	      0xba00000000	                              mov edx, 0	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x400209e	          0x4c89c6	                             mov rsi, r8	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x40020a1	          0x4889e7	                            mov rdi, rsp	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x40020a4	      0xe8f1fdffff	             call sym.dlang_parse_mangle	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x40020a9	          0x4885c0	                           test rax, rax	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x40020ac	            0x7508	                           jne 0x40020b6	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x40020ae	          0x4889e7	                            mov rdi, rsp	      1634	d-demangle.c	FUNCTION_32	ELSE_1	CALL_6
0x40020b1	      0xe89ce0ffff	                  call sym.string_delete	      1634	d-demangle.c	FUNCTION_32	ELSE_1	CALL_6
0x40020b6	          0x4889e7	                            mov rdi, rsp	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x40020b9	      0xe882dfffff	                  call sym.string_length	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x40020be	            0x85c0	                           test eax, eax	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x40020c0	            0x7e29	                           jle 0x40020eb	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x40020c2	      0xbe01000000	                              mov esi, 1	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x40020c7	          0x4889e7	                            mov rdi, rsp	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x40020ca	      0xe8ade0ffff	                    call sym.string_need	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x40020cf	      0x488b442408	                mov rax, qword [rsp + 8]	      1640	d-demangle.c	FUNCTION_32	IF_5
0x40020d4	          0xc60000	                       mov byte [rax], 0	      1640	d-demangle.c	FUNCTION_32	IF_5
0x40020d7	        0x488b0424	                    mov rax, qword [rsp]	      1641	d-demangle.c	FUNCTION_32	IF_5
0x40020db	            0xeb13	                           jmp 0x40020f0	      1641	d-demangle.c	FUNCTION_32	IF_5
0x40020dd	      0xb800000000	                              mov eax, 0	      1620	d-demangle.c	FUNCTION_32	IF_1
0x40020e2	            0xeb0c	                           jmp 0x40020f0	      1620	d-demangle.c	FUNCTION_32	IF_1
0x40020e4	      0xb800000000	                              mov eax, 0	      1620	d-demangle.c	FUNCTION_32	IF_1
0x40020e9	            0xeb05	                           jmp 0x40020f0	      1620	d-demangle.c	FUNCTION_32	IF_1
0x40020eb	      0xb800000000	                              mov eax, 0	      1617	d-demangle.c	FUNCTION_32
0x40020f0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1645	d-demangle.c	FUNCTION_32
0x40020f5	    0x644833142528	                xor rdx, qword fs:[0x28]	      1645	d-demangle.c	FUNCTION_32
0x40020fe	            0x7405	                            je 0x4002105	      1645	d-demangle.c	FUNCTION_32
0x4002100	      0xe800000000	                          call 0x4002105	      1645	d-demangle.c	FUNCTION_32
0x4002105	        0x4883c428	                           add rsp, 0x28	      1645	d-demangle.c	FUNCTION_32
0x4002109	              0xc3	                                     ret	      1645	d-demangle.c	FUNCTION_32
string_appendn	CALL,2:functions,0:ELSE,0:WHILE,0:DO,0:IF,1:SWITCH,0:FOR,0	20
0x4000500	            0x85d2	                           test edx, edx	       129	d-demangle.c	FUNCTION_7	IF_1
0x4000502	            0x742d	                            je 0x4000531	       129	d-demangle.c	FUNCTION_7	IF_1
0x4000504	            0x4154	                                push r12	       128	d-demangle.c	FUNCTION_7
0x4000506	              0x55	                                push rbp	       128	d-demangle.c	FUNCTION_7
0x4000507	              0x53	                                push rbx	       128	d-demangle.c	FUNCTION_7
0x4000508	            0x89d3	                            mov ebx, edx	       128	d-demangle.c	FUNCTION_7
0x400050a	          0x4989f4	                            mov r12, rsi	       128	d-demangle.c	FUNCTION_7
0x400050d	          0x4889fd	                            mov rbp, rdi	       128	d-demangle.c	FUNCTION_7
0x4000510	            0x89d6	                            mov esi, edx	       131	d-demangle.c	FUNCTION_7	IF_1	CALL_1
0x4000512	      0xe865fcffff	                    call sym.string_need	       131	d-demangle.c	FUNCTION_7	IF_1	CALL_1
0x4000517	          0x4863db	                         movsxd rbx, ebx	       132	d-demangle.c	FUNCTION_7	IF_1	CALL_2
0x400051a	        0x488b7d08	                mov rdi, qword [rbp + 8]	        53	string3.h	FUNCTION_33	CALL_3
0x400051e	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_33	CALL_3
0x4000521	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_33	CALL_3
0x4000524	      0xe800000000	                          call 0x4000529	        53	string3.h	FUNCTION_33	CALL_3
0x4000529	        0x48015d08	                add qword [rbp + 8], rbx	       133	d-demangle.c	FUNCTION_7	IF_1
0x400052d	              0x5b	                                 pop rbx	       135	d-demangle.c	FUNCTION_7
0x400052e	              0x5d	                                 pop rbp	       135	d-demangle.c	FUNCTION_7
0x400052f	            0x415c	                                 pop r12	       135	d-demangle.c	FUNCTION_7
0x4000531	            0xf3c3	                                     ret	       135	d-demangle.c	FUNCTION_7
dlang_number	CALL,2:functions,0:ELSE,0:WHILE,1:DO,0:IF,3:SWITCH,0:FOR,0	51
0x4000075	          0x4885ff	                           test rdi, rdi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000078	     0xf849c000000	                            je 0x400011a	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400007e	           0xfb607	                   movzx eax, byte [rdi]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000081	    0xf68400000000	                test byte [rax + rax], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000089	     0xf8491000000	                            je 0x4000120	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400008f	    0x48c706000000	                      mov qword [rsi], 0	       205	d-demangle.c	FUNCTION_10
0x4000096	           0xfb607	                   movzx eax, byte [rdi]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4000099	           0xfb6d0	                           movzx edx, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x400009c	    0x41b900000000	                              mov r9d, 0	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40000a2	    0x49b867666666	           movabs r8, 0x6666666666666667	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000ac	    0xf68412000000	                test byte [rdx + rdx], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40000b4	            0x752f	                           jne 0x40000e5	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40000b6	            0xeb50	                           jmp 0x4000108	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40000b8	        0x488d0c92	                  lea rcx, [rdx + rdx*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x40000bc	          0x4801c9	                            add rcx, rcx	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x40000bf	          0x4989c9	                             mov r9, rcx	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x40000c2	          0x48890e	                    mov qword [rsi], rcx	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x40000c5	          0x4889c8	                            mov rax, rcx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000c8	          0x49f7e8	                                 imul r8	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000cb	        0x48c1fa02	                              sar rdx, 2	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000cf	          0x4889c8	                            mov rax, rcx	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000d2	        0x48c1f83f	                           sar rax, 0x3f	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000d6	          0x4829c2	                            sub rdx, rax	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000d9	        0x488d0492	                  lea rax, [rdx + rdx*4]	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000dd	          0x4801c0	                            add rax, rax	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000e0	          0x4839c1	                            cmp rcx, rax	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000e3	            0x7541	                           jne 0x4000126	       213	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x40000e5	           0xfbe17	                   movsx edx, byte [rdi]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40000e8	          0x83ea30	                           sub edx, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40000eb	          0x4863d2	                         movsxd rdx, edx	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40000ee	          0x4c01ca	                             add rdx, r9	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40000f1	          0x488916	                    mov qword [rsi], rdx	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40000f4	        0x4883c701	                              add rdi, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x40000f8	           0xfb607	                   movzx eax, byte [rdi]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40000fb	           0xfb6c8	                           movzx ecx, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40000fe	    0xf68409000000	                test byte [rcx + rcx], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4000106	            0x75b0	                           jne 0x40000b8	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4000108	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x400010a	            0x7420	                            je 0x400012c	       220	d-demangle.c	FUNCTION_10	IF_3
0x400010c	        0x48833e00	                      cmp qword [rsi], 0	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000110	      0xb800000000	                              mov eax, 0	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000115	        0x480f49c7	                         cmovns rax, rdi	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000119	              0xc3	                                     ret	       220	d-demangle.c	FUNCTION_10	IF_3
0x400011a	      0xb800000000	                              mov eax, 0	       203	d-demangle.c	FUNCTION_10	IF_1
0x400011f	              0xc3	                                     ret	       203	d-demangle.c	FUNCTION_10	IF_1
0x4000120	      0xb800000000	                              mov eax, 0	       203	d-demangle.c	FUNCTION_10	IF_1
0x4000125	              0xc3	                                     ret	       203	d-demangle.c	FUNCTION_10	IF_1
0x4000126	      0xb800000000	                              mov eax, 0	       214	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x400012b	              0xc3	                                     ret	       214	d-demangle.c	FUNCTION_10	WHILE_1	IF_2
0x400012c	      0xb800000000	                              mov eax, 0	       221	d-demangle.c	FUNCTION_10	IF_3
0x4000131	              0xc3	                                     ret	       224	d-demangle.c	FUNCTION_10
dlang_call_convention_p	CALL,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,0:SWITCH,1:FOR,0	10
0x4000132	           0xfb607	                   movzx eax, byte [rdi]	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x4000135	          0x83e846	                           sub eax, 0x46	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x4000138	            0x3c13	                            cmp al, 0x13	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x400013a	            0x770a	                            ja 0x4000146	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x400013c	           0xfb6c0	                           movzx eax, al	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x400013f	    0xff24c5000000	                       jmp qword [rax*8]	       259	d-demangle.c	FUNCTION_12	SWITCH_1
0x4000146	      0xb800000000	                              mov eax, 0	       266	d-demangle.c	FUNCTION_12	SWITCH_1
0x400014b	              0xc3	                                     ret	       266	d-demangle.c	FUNCTION_12	SWITCH_1
0x400014c	      0xb801000000	                              mov eax, 1	       263	d-demangle.c	FUNCTION_12	SWITCH_1
0x4000151	              0xc3	                                     ret	       268	d-demangle.c	FUNCTION_12
dlang_call_convention	CALL,5:functions,0:ELSE,0:WHILE,0:DO,0:IF,1:SWITCH,1:FOR,0	45
0x40002ea	              0x53	                                push rbx	       274	d-demangle.c	FUNCTION_13
0x40002eb	          0x4885f6	                           test rsi, rsi	       275	d-demangle.c	FUNCTION_13	IF_1
0x40002ee	            0x747d	                            je 0x400036d	       275	d-demangle.c	FUNCTION_13	IF_1
0x40002f0	           0xfb606	                   movzx eax, byte [rsi]	       275	d-demangle.c	FUNCTION_13	IF_1
0x40002f3	            0x84c0	                             test al, al	       275	d-demangle.c	FUNCTION_13	IF_1
0x40002f5	            0x747d	                            je 0x4000374	       275	d-demangle.c	FUNCTION_13	IF_1
0x40002f7	          0x83e846	                           sub eax, 0x46	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002fa	            0x3c13	                            cmp al, 0x13	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002fc	            0x777d	                            ja 0x400037b	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002fe	           0xfb6c0	                           movzx eax, al	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000301	    0xff24c5000000	                       jmp qword [rax*8]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000308	        0x488d4601	                      lea rax, [rsi + 1]	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x400030c	            0xeb72	                           jmp 0x4000380	       282	d-demangle.c	FUNCTION_13	SWITCH_1
0x400030e	        0x488d5e01	                      lea rbx, [rsi + 1]	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000312	      0xbe00000000	                              mov esi, 0	       285	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_1
0x4000317	      0xe8d8feffff	                  call sym.string_append	       285	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_1
0x400031c	          0x4889d8	                            mov rax, rbx	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x400031f	            0xeb5f	                           jmp 0x4000380	       286	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000321	        0x488d5e01	                      lea rbx, [rsi + 1]	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000325	      0xbe00000000	                              mov esi, 0	       289	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_2
0x400032a	      0xe8c5feffff	                  call sym.string_append	       289	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_2
0x400032f	          0x4889d8	                            mov rax, rbx	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000332	            0xeb4c	                           jmp 0x4000380	       290	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000334	        0x488d5e01	                      lea rbx, [rsi + 1]	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000338	      0xbe00000000	                              mov esi, 0	       293	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_3
0x400033d	      0xe8b2feffff	                  call sym.string_append	       293	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_3
0x4000342	          0x4889d8	                            mov rax, rbx	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000345	            0xeb39	                           jmp 0x4000380	       294	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000347	        0x488d5e01	                      lea rbx, [rsi + 1]	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x400034b	      0xbe00000000	                              mov esi, 0	       297	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_4
0x4000350	      0xe89ffeffff	                  call sym.string_append	       297	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_4
0x4000355	          0x4889d8	                            mov rax, rbx	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000358	            0xeb26	                           jmp 0x4000380	       298	d-demangle.c	FUNCTION_13	SWITCH_1
0x400035a	        0x488d5e01	                      lea rbx, [rsi + 1]	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x400035e	      0xbe00000000	                              mov esi, 0	       301	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000363	      0xe88cfeffff	                  call sym.string_append	       301	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000368	          0x4889d8	                            mov rax, rbx	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x400036b	            0xeb13	                           jmp 0x4000380	       302	d-demangle.c	FUNCTION_13	SWITCH_1
0x400036d	      0xb800000000	                              mov eax, 0	       276	d-demangle.c	FUNCTION_13	IF_1
0x4000372	            0xeb0c	                           jmp 0x4000380	       276	d-demangle.c	FUNCTION_13	IF_1
0x4000374	      0xb800000000	                              mov eax, 0	       276	d-demangle.c	FUNCTION_13	IF_1
0x4000379	            0xeb05	                           jmp 0x4000380	       276	d-demangle.c	FUNCTION_13	IF_1
0x400037b	      0xb800000000	                              mov eax, 0	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000380	              0x5b	                                 pop rbx	       308	d-demangle.c	FUNCTION_13
0x4000381	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
dlang_function_args	CALL,10:functions,0:ELSE,0:WHILE,1:DO,0:IF,4:SWITCH,2:FOR,0	97
0x40015fa	          0x4885f6	                           test rsi, rsi	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x40015fd	     0xf8425010000	                            je 0x4001728	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001603	            0x4154	                                push r12	       470	d-demangle.c	FUNCTION_17
0x4001605	              0x55	                                push rbp	       470	d-demangle.c	FUNCTION_17
0x4001606	              0x53	                                push rbx	       470	d-demangle.c	FUNCTION_17
0x4001607	          0x4889fd	                            mov rbp, rdi	       470	d-demangle.c	FUNCTION_17
0x400160a	          0x4889f3	                            mov rbx, rsi	       470	d-demangle.c	FUNCTION_17
0x400160d	           0xfb606	                   movzx eax, byte [rsi]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001610	            0x84c0	                             test al, al	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001612	     0xf8416010000	                            je 0x400172e	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001618	    0x41bc00000000	                             mov r12d, 0	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x400161e	            0x3c59	                            cmp al, 0x59	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001620	            0x7421	                            je 0x4001643	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001622	            0x3c5a	                            cmp al, 0x5a	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001624	            0x7448	                            je 0x400166e	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001626	            0x3c58	                            cmp al, 0x58	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001628	            0x754d	                           jne 0x4001677	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400162a	        0x4883c301	                              add rbx, 1	       478	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400162e	      0xbe00000000	                              mov esi, 0	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4001633	          0x4889ef	                            mov rdi, rbp	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4001636	      0xe8b9ebffff	                  call sym.string_append	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400163b	          0x4889d8	                            mov rax, rbx	       480	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400163e	      0xe9f5000000	                           jmp 0x4001738	       480	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001643	        0x4883c301	                              add rbx, 1	       482	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001647	          0x4d85e4	                           test r12, r12	       483	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x400164a	            0x740d	                            je 0x4001659	       483	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x400164c	      0xbe00000000	                              mov esi, 0	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4001651	          0x4889ef	                            mov rdi, rbp	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4001654	      0xe89bebffff	                  call sym.string_append	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4001659	      0xbe00000000	                              mov esi, 0	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x400165e	          0x4889ef	                            mov rdi, rbp	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4001661	      0xe88eebffff	                  call sym.string_append	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4001666	          0x4889d8	                            mov rax, rbx	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001669	      0xe9ca000000	                           jmp 0x4001738	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400166e	        0x488d4301	                      lea rax, [rbx + 1]	       489	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001672	      0xe9c1000000	                           jmp 0x4001738	       489	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001677	          0x4d85e4	                           test r12, r12	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x400167a	            0x740d	                            je 0x4001689	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x400167c	      0xbe00000000	                              mov esi, 0	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4001681	          0x4889ef	                            mov rdi, rbp	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4001684	      0xe86bebffff	                  call sym.string_append	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4001689	          0x803b4d	                    cmp byte [rbx], 0x4d	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x400168c	            0x7511	                           jne 0x400169f	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x400168e	        0x4883c301	                              add rbx, 1	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4001692	      0xbe00000000	                              mov esi, 0	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4001697	          0x4889ef	                            mov rdi, rbp	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x400169a	      0xe855ebffff	                  call sym.string_append	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x400169f	          0x803b4e	                    cmp byte [rbx], 0x4e	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x40016a2	            0x7517	                           jne 0x40016bb	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x40016a4	        0x807b016b	                cmp byte [rbx + 1], 0x6b	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x40016a8	            0x7557	                           jne 0x4001701	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x40016aa	        0x4883c302	                              add rbx, 2	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x40016ae	      0xbe00000000	                              mov esi, 0	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x40016b3	          0x4889ef	                            mov rdi, rbp	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x40016b6	      0xe839ebffff	                  call sym.string_append	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x40016bb	           0xfb603	                   movzx eax, byte [rbx]	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016be	            0x3c4b	                            cmp al, 0x4b	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016c0	            0x741b	                            je 0x40016dd	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016c2	            0x3c4c	                            cmp al, 0x4c	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016c4	            0x742a	                            je 0x40016f0	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016c6	            0x3c4a	                            cmp al, 0x4a	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016c8	            0x7537	                           jne 0x4001701	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016ca	        0x4883c301	                              add rbx, 1	       510	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016ce	      0xbe00000000	                              mov esi, 0	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x40016d3	          0x4889ef	                            mov rdi, rbp	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x40016d6	      0xe819ebffff	                  call sym.string_append	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x40016db	            0xeb24	                           jmp 0x4001701	       512	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016dd	        0x4883c301	                              add rbx, 1	       514	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016e1	      0xbe00000000	                              mov esi, 0	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x40016e6	          0x4889ef	                            mov rdi, rbp	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x40016e9	      0xe806ebffff	                  call sym.string_append	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x40016ee	            0xeb11	                           jmp 0x4001701	       516	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016f0	        0x4883c301	                              add rbx, 1	       518	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40016f4	      0xbe00000000	                              mov esi, 0	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x40016f9	          0x4889ef	                            mov rdi, rbp	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x40016fc	      0xe8f3eaffff	                  call sym.string_append	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x4001701	          0x4889de	                            mov rsi, rbx	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001704	          0x4889ef	                            mov rdi, rbp	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001707	      0xe8e0f8ffff	                     call sym.dlang_type	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x400170c	          0x4889c3	                            mov rbx, rax	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x400170f	          0x4885c0	                           test rax, rax	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001712	            0x741f	                            je 0x4001733	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001714	           0xfb600	                   movzx eax, byte [rax]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001717	        0x4983c401	                              add r12, 1	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x400171b	            0x84c0	                             test al, al	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x400171d	     0xf85fbfeffff	                           jne 0x400161e	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001723	          0x4889d8	                            mov rax, rbx	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001726	            0xeb10	                           jmp 0x4001738	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001728	      0xb800000000	                              mov eax, 0	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x400172d	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
0x400172e	          0x4889f0	                            mov rax, rsi	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001731	            0xeb05	                           jmp 0x4001738	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001733	      0xb800000000	                              mov eax, 0	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001738	              0x5b	                                 pop rbx	       526	d-demangle.c	FUNCTION_17
0x4001739	              0x5d	                                 pop rbp	       526	d-demangle.c	FUNCTION_17
0x400173a	            0x415c	                                 pop r12	       526	d-demangle.c	FUNCTION_17
0x400173c	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
