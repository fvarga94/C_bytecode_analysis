alpha_find_call	functions,0:IF,5:WHILE,0:SWITCH,1:DO,0:ELSE,0:CALL,16:FOR,1	152
0x4000040	            0x4157	                                push r15	        94	alpha.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        94	alpha.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	        94	alpha.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	        94	alpha.c	FUNCTION_1
0x4000048	              0x55	                                push rbp	        94	alpha.c	FUNCTION_1
0x4000049	              0x53	                                push rbx	        94	alpha.c	FUNCTION_1
0x400004a	        0x4883ec08	                              sub rsp, 8	        94	alpha.c	FUNCTION_1
0x400004e	          0x4989ff	                            mov r15, rdi	        94	alpha.c	FUNCTION_1
0x4000051	          0x4889f3	                            mov rbx, rsi	        94	alpha.c	FUNCTION_1
0x4000054	          0x4989d4	                            mov r12, rdx	        94	alpha.c	FUNCTION_1
0x4000057	    0x48833d000000	               cmp qword [0x0400005f], 0	        99	alpha.c	FUNCTION_1	IF_1
0x400005f	            0x7540	                           jne 0x40000a1	        99	alpha.c	FUNCTION_1	IF_1
0x4000061	      0xbf00000000	                              mov edi, 0	       101	alpha.c	FUNCTION_1	IF_1	CALL_1
0x4000066	      0xe800000000	                          call 0x400006b	       101	alpha.c	FUNCTION_1	IF_1	CALL_1
0x400006b	      0xba05000000	                              mov edx, 5	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x4000070	      0xbe00000000	                              mov esi, 0	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x4000075	      0xbf00000000	                              mov edi, 0	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x400007a	      0xe800000000	                          call 0x400007f	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x400007f	    0x488905000000	            mov qword [0x04000086], rax 	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x4000086	    0xf20f10050000	         movsd xmm0, qword [0x0400008e] 	       103	alpha.c	FUNCTION_1	IF_1
0x400008e	    0xf20f11050000	         movsd qword [0x04000096], xmm0 	       103	alpha.c	FUNCTION_1	IF_1
0x4000096	    0x48c705000000	               mov qword [0x040000a1], 0	       104	alpha.c	FUNCTION_1	IF_1
0x40000a1	    0xf60500000000	               test byte [0x040000a8], 1	       107	alpha.c	FUNCTION_1	CALL_4
0x40000a8	            0x7433	                            je 0x40000dd	       107	alpha.c	FUNCTION_1	CALL_4
0x40000aa	        0x498b6f10	            mov rbp, qword [r15 + 0x10] 	       107	alpha.c	FUNCTION_1	CALL_4
0x40000ae	      0xba05000000	                              mov edx, 5	       107	alpha.c	FUNCTION_1	CALL_4
0x40000b3	      0xbe00000000	                              mov esi, 0	       107	alpha.c	FUNCTION_1	CALL_4
0x40000b8	      0xbf00000000	                              mov edi, 0	       107	alpha.c	FUNCTION_1	CALL_4
0x40000bd	      0xe800000000	                          call 0x40000c2	       107	alpha.c	FUNCTION_1	CALL_4
0x40000c2	          0x4d89e0	                             mov r8, r12	       104	stdio2.h	CALL_13
0x40000c5	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_13
0x40000c8	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_13
0x40000cb	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_13
0x40000ce	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x40000d3	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_13
0x40000d8	      0xe800000000	                          call 0x40000dd	       104	stdio2.h	CALL_13
0x40000dd	        0x4883c303	                              add rbx, 3	       110	alpha.c	FUNCTION_1	FOR_1
0x40000e1	        0x4883e3fc	             and rbx, 0xfffffffffffffffc	       110	alpha.c	FUNCTION_1	FOR_1
0x40000e5	          0x4939dc	                            cmp r12, rbx	       110	alpha.c	FUNCTION_1	FOR_1
0x40000e8	     0xf86b8010000	                           jbe 0x40002a6	       110	alpha.c	FUNCTION_1	FOR_1
0x40000ee	    0x488b05000000	            mov rax, qword [0x040000f5] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x40000f5	          0x4889df	                            mov rdi, rbx	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x40000f8	        0x482b7828	             sub rdi, qword [rax + 0x28]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x40000fc	    0x48033d000000	             add rdi, qword [0x04000103]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x4000103	    0x488b05000000	            mov rax, qword [0x0400010a] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x400010a	        0x488b4008	                mov rax, qword [rax + 8]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x400010e	          0xff5038	                 call qword [rax + 0x38]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x4000111	          0x4889c5	                            mov rbp, rax	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x4000114	      0x25000000fc	                     and eax, 0xfc000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000119	      0x3d00000068	                     cmp eax, 0x68000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400011e	            0x740c	                            je 0x400012c	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000120	      0x3d000000d0	                     cmp eax, 0xd0000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000125	            0x747d	                            je 0x40001a4	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000127	      0xe955010000	                           jmp 0x4000281	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400012c	            0x89e8	                            mov eax, ebp	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x400012e	      0x2500400000	                         and eax, 0x4000	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000133	      0x3d00400000	                         cmp eax, 0x4000	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000138	     0xf8543010000	                           jne 0x4000281	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x400013e	    0xf60500000000	               test byte [0x04000145], 1	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000145	            0x7446	                            je 0x400018d	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000147	    0x81e500c00000	                         and ebp, 0xc000	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x400014d	    0x81fd00400000	                         cmp ebp, 0x4000	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000153	      0xbd00000000	                              mov ebp, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000158	      0xb800000000	                              mov eax, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x400015d	        0x480f44e8	                          cmove rbp, rax	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000161	      0xba05000000	                              mov edx, 5	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000166	      0xbe00000000	                              mov esi, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x400016b	      0xbf00000000	                              mov edi, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000170	      0xe800000000	                          call 0x4000175	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000175	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_13
0x4000178	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_13
0x400017b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_13
0x400017e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x4000183	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_13
0x4000188	      0xe800000000	                          call 0x400018d	       104	stdio2.h	CALL_13
0x400018d	      0xba00000000	                              mov edx, 0	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x4000192	      0xbe00000000	                              mov esi, 0	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x4000197	          0x4c89ff	                            mov rdi, r15	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x400019a	      0xe800000000	                          call 0x400019f	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x400019f	      0xe9dd000000	                           jmp 0x4000281	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x40001a4	    0xf60500000000	               test byte [0x040001ab], 1	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x40001ab	            0x7429	                            je 0x40001d6	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x40001ad	      0xba05000000	                              mov edx, 5	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x40001b2	      0xbe00000000	                              mov esi, 0	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x40001b7	      0xbf00000000	                              mov edi, 0	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x40001bc	      0xe800000000	                          call 0x40001c1	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x40001c1	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_13
0x40001c4	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_13
0x40001c7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x40001cc	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_13
0x40001d1	      0xe800000000	                          call 0x40001d6	       104	stdio2.h	CALL_13
0x40001d6	    0x81e5ffff1f00	                       and ebp, 0x1fffff	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40001dc	    0x4881f5000010	                       xor rbp, 0x100000	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40001e3	          0x4801dd	                            add rbp, rbx	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40001e6	    0x4c8dad0400f0	                lea r13, [rbp - 0xffffc]	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40001ed	          0x4489ef	                           mov edi, r13d	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40001f0	      0xe800000000	                          call 0x40001f5	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40001f5	            0x85c0	                           test eax, eax	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40001f7	            0x7475	                            je 0x400026e	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40001f9	          0x4c89ee	                            mov rsi, r13	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x40001fc	      0xbf00000000	                              mov edi, 0	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x4000201	      0xe800000000	                          call 0x4000206	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x4000206	          0x4989c6	                            mov r14, rax	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x4000209	          0x4885c0	                           test rax, rax	       151	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4
0x400020c	            0x7460	                            je 0x400026e	       151	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4
0x400020e	    0xf60500000000	               test byte [0x04000215], 1	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_13
0x4000215	            0x7479	                            je 0x4000290	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_13
0x4000217	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       104	stdio2.h	CALL_13
0x400021b	          0x4c8b00	                     mov r8, qword [rax]	       104	stdio2.h	CALL_13
0x400021e	          0x4c89ea	                            mov rdx, r13	       104	stdio2.h	CALL_13
0x4000221	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_13
0x4000226	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x400022b	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_13
0x4000230	      0xe800000000	                          call 0x4000235	       104	stdio2.h	CALL_13
0x4000235	          0x498b06	                    mov rax, qword [r14]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000238	          0x4939c5	                            cmp r13, rax	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400023b	            0x740c	                            je 0x4000249	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400023d	    0x4881ed040010	                       sub rbp, 0x100004	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000244	          0x4839e8	                            cmp rax, rbp	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000247	            0x7525	                           jne 0x400026e	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000249	    0xf60500000000	               test byte [0x04000250], 1	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_14
0x4000250	            0x740a	                            je 0x400025c	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_14
0x4000252	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_13
0x4000257	      0xe800000000	                          call 0x400025c	       104	stdio2.h	CALL_13
0x400025c	      0xba00000000	                              mov edx, 0	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x4000261	          0x4c89f6	                            mov rsi, r14	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x4000264	          0x4c89ff	                            mov rdi, r15	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x4000267	      0xe800000000	                          call 0x400026c	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x400026c	            0xeb13	                           jmp 0x4000281	       162	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400026e	    0xf60500000000	               test byte [0x04000275], 1	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_16
0x4000275	            0x740a	                            je 0x4000281	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_16
0x4000277	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_13
0x400027c	      0xe800000000	                          call 0x4000281	       104	stdio2.h	CALL_13
0x4000281	        0x4883c304	                              add rbx, 4	       110	alpha.c	FUNCTION_1	FOR_1
0x4000285	          0x4939dc	                            cmp r12, rbx	       110	alpha.c	FUNCTION_1	FOR_1
0x4000288	     0xf8760feffff	                            ja 0x40000ee	       110	alpha.c	FUNCTION_1	FOR_1
0x400028e	            0xeb16	                           jmp 0x40002a6	       110	alpha.c	FUNCTION_1	FOR_1
0x4000290	          0x488b00	                    mov rax, qword [rax]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000293	          0x4939c5	                            cmp r13, rax	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000296	            0x74c4	                            je 0x400025c	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000298	    0x4881ed040010	                       sub rbp, 0x100004	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400029f	          0x4839c5	                            cmp rbp, rax	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002a2	            0x75ca	                           jne 0x400026e	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002a4	            0xebb6	                           jmp 0x400025c	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002a6	        0x4883c408	                              add rsp, 8	       176	alpha.c	FUNCTION_1
0x40002aa	              0x5b	                                 pop rbx	       176	alpha.c	FUNCTION_1
0x40002ab	              0x5d	                                 pop rbp	       176	alpha.c	FUNCTION_1
0x40002ac	            0x415c	                                 pop r12	       176	alpha.c	FUNCTION_1
0x40002ae	            0x415d	                                 pop r13	       176	alpha.c	FUNCTION_1
0x40002b0	            0x415e	                                 pop r14	       176	alpha.c	FUNCTION_1
0x40002b2	            0x415f	                                 pop r15	       176	alpha.c	FUNCTION_1
0x40002b4	              0xc3	                                     ret	       176	alpha.c	FUNCTION_1
