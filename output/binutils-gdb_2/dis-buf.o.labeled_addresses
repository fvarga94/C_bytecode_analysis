generic_symbol_at_address	IF,0:FOR,0:WHILE,0:functions,0:ELSE,0:SWITCH,0:CALL,0:DO,0	2
0x40001e0	      0xb801000000	                              mov eax, 1	        97	dis-buf.c	FUNCTION_4
0x40001e5	              0xc3	                                     ret	        97	dis-buf.c	FUNCTION_4
perror_memory	IF,1:FOR,0:WHILE,0:functions,0:ELSE,1:SWITCH,0:CALL,5:DO,0	48
0x40000cf	            0x4154	                                push r12	        58	dis-buf.c	FUNCTION_2
0x40000d1	              0x55	                                push rbp	        58	dis-buf.c	FUNCTION_2
0x40000d2	              0x53	                                push rbx	        58	dis-buf.c	FUNCTION_2
0x40000d3	        0x4883ec30	                           sub rsp, 0x30	        58	dis-buf.c	FUNCTION_2
0x40000d7	          0x4889d3	                            mov rbx, rdx	        58	dis-buf.c	FUNCTION_2
0x40000da	    0x64488b042528	                mov rax, qword fs:[0x28]	        58	dis-buf.c	FUNCTION_2
0x40000e3	      0x4889442428	             mov qword [rsp + 0x28], rax	        58	dis-buf.c	FUNCTION_2
0x40000e8	            0x31c0	                            xor eax, eax	        58	dis-buf.c	FUNCTION_2
0x40000ea	          0x83ff05	                              cmp edi, 5	        59	dis-buf.c	FUNCTION_2	IF_1
0x40000ed	            0x742c	                            je 0x400011b	        59	dis-buf.c	FUNCTION_2	IF_1
0x40000ef	            0x89fd	                            mov ebp, edi	        59	dis-buf.c	FUNCTION_2	IF_1
0x40000f1	          0x4c8b22	                    mov r12, qword [rdx]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40000f4	      0xba05000000	                              mov edx, 5	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40000f9	      0xbe00000000	                              mov esi, 0	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40000fe	      0xbf00000000	                              mov edi, 0	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000103	      0xe800000000	                          call 0x4000108	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000108	        0x488b7b08	                mov rdi, qword [rbx + 8]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x400010c	            0x89ea	                            mov edx, ebp	        61	dis-buf.c	FUNCTION_2	CALL_2
0x400010e	          0x4889c6	                            mov rsi, rax	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000111	      0xb800000000	                              mov eax, 0	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000116	          0x41ffd4	                                call r12	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000119	            0xeb47	                           jmp 0x4000162	        61	dis-buf.c	FUNCTION_2	CALL_2
0x400011b	          0x4989f0	                             mov r8, rsi	        33	stdio2.h	FUNCTION_6	CALL_1
0x400011e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_6	CALL_1
0x4000123	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_6	CALL_1
0x4000128	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_6	CALL_1
0x400012d	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_6	CALL_1
0x4000130	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_6	CALL_1
0x4000135	      0xe800000000	                          call 0x400013a	        33	stdio2.h	FUNCTION_6	CALL_1
0x400013a	          0x488b2b	                    mov rbp, qword [rbx]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x400013d	      0xba05000000	                              mov edx, 5	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x4000142	      0xbe00000000	                              mov esi, 0	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x4000147	      0xbf00000000	                              mov edi, 0	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x400014c	      0xe800000000	                          call 0x4000151	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x4000151	        0x488b7b08	                mov rdi, qword [rbx + 8]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000155	          0x4889e2	                            mov rdx, rsp	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000158	          0x4889c6	                            mov rsi, rax	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x400015b	      0xb800000000	                              mov eax, 0	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000160	            0xffd5	                                call rbp	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000162	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        72	dis-buf.c	FUNCTION_2
0x4000167	    0x644833042528	                xor rax, qword fs:[0x28]	        72	dis-buf.c	FUNCTION_2
0x4000170	            0x7405	                            je 0x4000177	        72	dis-buf.c	FUNCTION_2
0x4000172	      0xe800000000	                          call 0x4000177	        72	dis-buf.c	FUNCTION_2
0x4000177	        0x4883c430	                           add rsp, 0x30	        72	dis-buf.c	FUNCTION_2
0x400017b	              0x5b	                                 pop rbx	        72	dis-buf.c	FUNCTION_2
0x400017c	              0x5d	                                 pop rbp	        72	dis-buf.c	FUNCTION_2
0x400017d	            0x415c	                                 pop r12	        72	dis-buf.c	FUNCTION_2
0x400017f	              0xc3	                                     ret	        72	dis-buf.c	FUNCTION_2
generic_print_address	IF,0:FOR,0:WHILE,0:functions,0:ELSE,0:SWITCH,0:CALL,1:DO,0	24
0x4000180	              0x53	                                push rbx	        83	dis-buf.c	FUNCTION_3
0x4000181	        0x4883ec30	                           sub rsp, 0x30	        83	dis-buf.c	FUNCTION_3
0x4000185	          0x4989f8	                             mov r8, rdi	        83	dis-buf.c	FUNCTION_3
0x4000188	          0x4889f3	                            mov rbx, rsi	        83	dis-buf.c	FUNCTION_3
0x400018b	    0x64488b042528	                mov rax, qword fs:[0x28]	        83	dis-buf.c	FUNCTION_3
0x4000194	      0x4889442428	             mov qword [rsp + 0x28], rax	        83	dis-buf.c	FUNCTION_3
0x4000199	            0x31c0	                            xor eax, eax	        83	dis-buf.c	FUNCTION_3
0x400019b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_6	CALL_1
0x40001a0	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_6	CALL_1
0x40001a5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_6	CALL_1
0x40001aa	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_6	CALL_1
0x40001ad	      0xe800000000	                          call 0x40001b2	        33	stdio2.h	FUNCTION_6	CALL_1
0x40001b2	        0x488b7b08	                mov rdi, qword [rbx + 8]	        87	dis-buf.c	FUNCTION_3
0x40001b6	          0x4889e2	                            mov rdx, rsp	        87	dis-buf.c	FUNCTION_3
0x40001b9	      0xbe00000000	                              mov esi, 0	        87	dis-buf.c	FUNCTION_3
0x40001be	      0xb800000000	                              mov eax, 0	        87	dis-buf.c	FUNCTION_3
0x40001c3	            0xff13	                        call qword [rbx]	        87	dis-buf.c	FUNCTION_3
0x40001c5	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        88	dis-buf.c	FUNCTION_3
0x40001ca	    0x644833042528	                xor rax, qword fs:[0x28]	        88	dis-buf.c	FUNCTION_3
0x40001d3	            0x7405	                            je 0x40001da	        88	dis-buf.c	FUNCTION_3
0x40001d5	      0xe800000000	                          call 0x40001da	        88	dis-buf.c	FUNCTION_3
0x40001da	        0x4883c430	                           add rsp, 0x30	        88	dis-buf.c	FUNCTION_3
0x40001de	              0x5b	                                 pop rbx	        88	dis-buf.c	FUNCTION_3
0x40001df	              0xc3	                                     ret	        88	dis-buf.c	FUNCTION_3
generic_symbol_is_valid	IF,0:FOR,0:WHILE,0:functions,0:ELSE,0:SWITCH,0:CALL,0:DO,0	2
0x40001e6	      0xb801000000	                              mov eax, 1	       106	dis-buf.c	FUNCTION_5
0x40001eb	              0xc3	                                     ret	       106	dis-buf.c	FUNCTION_5
buffer_read_memory	IF,1:FOR,0:WHILE,0:functions,0:ELSE,0:SWITCH,0:CALL,1:DO,0	42
0x4000040	              0x53	                                push rbx	        33	dis-buf.c	FUNCTION_1
0x4000041	            0x89d3	                            mov ebx, edx	        33	dis-buf.c	FUNCTION_1
0x4000043	    0x448b89bc0000	            mov r9d, dword [rcx + 0xbc] 	        34	dis-buf.c	FUNCTION_1
0x400004a	          0x4589c8	                            mov r8d, r9d	        36	dis-buf.c	FUNCTION_1
0x400004d	    0x488b81a80000	            mov rax, qword [rcx + 0xa8] 	        36	dis-buf.c	FUNCTION_1
0x4000054	      0xba00000000	                              mov edx, 0	        36	dis-buf.c	FUNCTION_1
0x4000059	          0x49f7f0	                                  div r8	        36	dis-buf.c	FUNCTION_1
0x400005c	          0x4989c3	                            mov r11, rax	        36	dis-buf.c	FUNCTION_1
0x400005f	    0x488b81a00000	            mov rax, qword [rcx + 0xa0] 	        37	dis-buf.c	FUNCTION_1
0x4000066	          0x4989fa	                            mov r10, rdi	        37	dis-buf.c	FUNCTION_1
0x4000069	          0x4929c2	                            sub r10, rax	        37	dis-buf.c	FUNCTION_1
0x400006c	          0x4d39d3	                            cmp r11, r10	        40	dis-buf.c	FUNCTION_1	IF_1
0x400006f	            0x7257	                            jb 0x40000c8	        40	dis-buf.c	FUNCTION_1	IF_1
0x4000071	          0x4839f8	                            cmp rax, rdi	        40	dis-buf.c	FUNCTION_1	IF_1
0x4000074	            0x7752	                            ja 0x40000c8	        40	dis-buf.c	FUNCTION_1	IF_1
0x4000076	            0x89d8	                            mov eax, ebx	        35	dis-buf.c	FUNCTION_1
0x4000078	      0xba00000000	                              mov edx, 0	        35	dis-buf.c	FUNCTION_1
0x400007d	          0x41f7f1	                                 div r9d	        35	dis-buf.c	FUNCTION_1
0x4000080	            0x89c2	                            mov edx, eax	        35	dis-buf.c	FUNCTION_1
0x4000082	        0x4e8d0c12	                     lea r9, [rdx + r10]	        41	dis-buf.c	FUNCTION_1	IF_1
0x4000086	      0xb805000000	                              mov eax, 5	        45	dis-buf.c	FUNCTION_1	IF_1
0x400008b	          0x4d39cb	                             cmp r11, r9	        41	dis-buf.c	FUNCTION_1	IF_1
0x400008e	            0x723d	                            jb 0x40000cd	        41	dis-buf.c	FUNCTION_1	IF_1
0x4000090	    0x4c8b89f00000	              mov r9, qword [rcx + 0xf0]	        42	dis-buf.c	FUNCTION_1	IF_1
0x4000097	          0x4d85c9	                             test r9, r9	        42	dis-buf.c	FUNCTION_1	IF_1
0x400009a	            0x740d	                            je 0x40000a9	        42	dis-buf.c	FUNCTION_1	IF_1
0x400009c	          0x4c39cf	                             cmp rdi, r9	        42	dis-buf.c	FUNCTION_1	IF_1
0x400009f	            0x732c	                           jae 0x40000cd	        42	dis-buf.c	FUNCTION_1	IF_1
0x40000a1	          0x4801fa	                            add rdx, rdi	        43	dis-buf.c	FUNCTION_1	IF_1
0x40000a4	          0x4939d1	                             cmp r9, rdx	        43	dis-buf.c	FUNCTION_1	IF_1
0x40000a7	            0x7224	                            jb 0x40000cd	        43	dis-buf.c	FUNCTION_1	IF_1
0x40000a9	          0x4889f7	                            mov rdi, rsi	        43	dis-buf.c	FUNCTION_1	IF_1
0x40000ac	            0x89da	                            mov edx, ebx	        53	string3.h	FUNCTION_23	CALL_3
0x40000ae	        0x4d0fafc2	                            imul r8, r10	        53	string3.h	FUNCTION_23	CALL_3
0x40000b2	          0x4c89c6	                             mov rsi, r8	        53	string3.h	FUNCTION_23	CALL_3
0x40000b5	    0x4803b1980000	             add rsi, qword [rcx + 0x98]	        53	string3.h	FUNCTION_23	CALL_3
0x40000bc	      0xe800000000	                          call 0x40000c1	        53	string3.h	FUNCTION_23	CALL_3
0x40000c1	      0xb800000000	                              mov eax, 0	        48	dis-buf.c	FUNCTION_1
0x40000c6	            0xeb05	                           jmp 0x40000cd	        48	dis-buf.c	FUNCTION_1
0x40000c8	      0xb805000000	                              mov eax, 5	        45	dis-buf.c	FUNCTION_1	IF_1
0x40000cd	              0x5b	                                 pop rbx	        49	dis-buf.c	FUNCTION_1
0x40000ce	              0xc3	                                     ret	        49	dis-buf.c	FUNCTION_1
