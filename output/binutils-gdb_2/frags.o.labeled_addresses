frag_grow	DO,0:CALL,9:ELSE,1:IF,4:functions,0:WHILE,1:SWITCH,0:FOR,0	46
0x4000390	    0x488b15000000	            mov rdx, qword [0x04000397] 	        99	frags.c	FUNCTION_6	IF_1	CALL_1
0x4000397	        0x488b4250	            mov rax, qword [rdx + 0x50] 	        99	frags.c	FUNCTION_6	IF_1	CALL_1
0x400039b	        0x482b4248	             sub rax, qword [rdx + 0x48]	        99	frags.c	FUNCTION_6	IF_1	CALL_1
0x400039f	          0x4839f8	                            cmp rax, rdi	        99	frags.c	FUNCTION_6	IF_1	CALL_1
0x40003a2	     0xf83a8000000	                           jae 0x4000450	        99	frags.c	FUNCTION_6	IF_1	CALL_1
0x40003a8	              0x55	                                push rbp	        98	frags.c	FUNCTION_6
0x40003a9	              0x53	                                push rbx	        98	frags.c	FUNCTION_6
0x40003aa	        0x4883ec08	                              sub rsp, 8	        98	frags.c	FUNCTION_6
0x40003ae	          0x4889fb	                            mov rbx, rdi	        98	frags.c	FUNCTION_6
0x40003b1	        0x488d0c3f	                    lea rcx, [rdi + rdi]	       108	frags.c	FUNCTION_6	IF_1	IF_2
0x40003b5	    0x488d87000001	                lea rax, [rdi + 0x10000]	       108	frags.c	FUNCTION_6	IF_1	IF_2
0x40003bc	    0x4881ffffff00	                         cmp rdi, 0xffff	       108	frags.c	FUNCTION_6	IF_1	IF_2
0x40003c3	        0x480f46c1	                         cmovbe rax, rcx	       108	frags.c	FUNCTION_6	IF_1	IF_2
0x40003c7	        0x4883c07c	                           add rax, 0x7c	       111	frags.c	FUNCTION_6	IF_1
0x40003cb	          0x4839c7	                            cmp rdi, rax	       114	frags.c	FUNCTION_6	IF_1	IF_3
0x40003ce	            0x762d	                           jbe 0x40003fd	       114	frags.c	FUNCTION_6	IF_1	IF_3
0x40003d0	    0x41b805000000	                              mov r8d, 5	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003d6	          0x4889f9	                            mov rcx, rdi	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003d9	      0xba00000000	                              mov edx, 0	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003de	      0xbe00000000	                              mov esi, 0	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003e3	      0xbf00000000	                              mov edi, 0	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003e8	      0xe800000000	                          call 0x40003ed	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003ed	          0x4889de	                            mov rsi, rbx	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003f0	          0x4889c7	                            mov rdi, rax	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003f3	      0xb800000000	                              mov eax, 0	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003f8	      0xe800000000	                          call 0x40003fd	       115	frags.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003fd	        0x488b6a30	            mov rbp, qword [rdx + 0x30] 	       122	frags.c	FUNCTION_6	IF_1	CALL_4
0x4000401	          0x4839e8	                            cmp rax, rbp	       123	frags.c	FUNCTION_6	IF_1	IF_4
0x4000404	            0x7604	                           jbe 0x400040a	       123	frags.c	FUNCTION_6	IF_1	IF_4
0x4000406	        0x48894230	             mov qword [rdx + 0x30], rax	       124	frags.c	FUNCTION_6	IF_1	CALL_5
0x400040a	    0x488b05000000	            mov rax, qword [0x04000411] 	       131	frags.c	FUNCTION_6	IF_1	WHILE_1	CALL_7
0x4000411	    0xc7405c010000	               mov dword [rax + 0x5c], 1	       291	frags.c	FUNCTION_12
0x4000418	    0x48c740200000	               mov qword [rax + 0x20], 0	       292	frags.c	FUNCTION_12
0x4000420	    0x48c740180000	               mov qword [rax + 0x18], 0	       293	frags.c	FUNCTION_12
0x4000428	      0xbf00000000	                              mov edi, 0	       132	frags.c	FUNCTION_6	IF_1	WHILE_1	CALL_8
0x400042d	      0xe800000000	                          call 0x4000432	       132	frags.c	FUNCTION_6	IF_1	WHILE_1	CALL_8
0x4000432	    0x488b15000000	            mov rdx, qword [0x04000439] 	       126	frags.c	FUNCTION_6	IF_1	WHILE_1	CALL_6
0x4000439	        0x488b4250	            mov rax, qword [rdx + 0x50] 	       126	frags.c	FUNCTION_6	IF_1	WHILE_1	CALL_6
0x400043d	        0x482b4248	             sub rax, qword [rdx + 0x48]	       126	frags.c	FUNCTION_6	IF_1	WHILE_1	CALL_6
0x4000441	          0x4839c3	                            cmp rbx, rax	       126	frags.c	FUNCTION_6	IF_1	WHILE_1	CALL_6
0x4000444	            0x77c4	                            ja 0x400040a	       126	frags.c	FUNCTION_6	IF_1	WHILE_1	CALL_6
0x4000446	        0x48896a30	             mov qword [rdx + 0x30], rbp	       136	frags.c	FUNCTION_6	IF_1	CALL_9
0x400044a	        0x4883c408	                              add rsp, 8	       138	frags.c	FUNCTION_6
0x400044e	              0x5b	                                 pop rbx	       138	frags.c	FUNCTION_6
0x400044f	              0x5d	                                 pop rbp	       138	frags.c	FUNCTION_6
0x4000450	            0xf3c3	                                     ret	       138	frags.c	FUNCTION_6
frag_new	DO,0:CALL,10:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	83
0x400023f	            0x4154	                                push r12	       161	frags.c	FUNCTION_7
0x4000241	              0x55	                                push rbp	       161	frags.c	FUNCTION_7
0x4000242	              0x53	                                push rbx	       161	frags.c	FUNCTION_7
0x4000243	    0x488b1d000000	            mov rbx, qword [0x0400024a] 	       165	frags.c	FUNCTION_7	CALL_1
0x400024a	        0x488b6b08	                mov rbp, qword [rbx + 8]	       165	frags.c	FUNCTION_7	CALL_1
0x400024e	    0x483b2d000000	            cmp rbp, qword [0x04000255] 	       165	frags.c	FUNCTION_7	CALL_1
0x4000255	            0x7414	                            je 0x400026b	       165	frags.c	FUNCTION_7	CALL_1
0x4000257	      0xba00000000	                              mov edx, 0	       165	frags.c	FUNCTION_7	CALL_1
0x400025c	      0xbea5000000	                           mov esi, 0xa5	       165	frags.c	FUNCTION_7	CALL_1
0x4000261	      0xbf00000000	                              mov edi, 0	       165	frags.c	FUNCTION_7	CALL_1
0x4000266	      0xe800000000	                          call 0x400026b	       165	frags.c	FUNCTION_7	CALL_1
0x400026b	          0x4989fc	                            mov r12, rdi	       165	frags.c	FUNCTION_7	CALL_1
0x400026e	      0xe800000000	                          call 0x4000273	       168	frags.c	FUNCTION_7	CALL_2
0x4000273	          0x4c29e0	                            sub rax, r12	       168	frags.c	FUNCTION_7	CALL_2
0x4000276	        0x48894510	            mov qword [rbp + 0x10], rax 	       168	frags.c	FUNCTION_7	CALL_2
0x400027a	        0x837d5c00	               cmp dword [rbp + 0x5c], 0	       170	frags.c	FUNCTION_7	CALL_3
0x400027e	            0x7514	                           jne 0x4000294	       170	frags.c	FUNCTION_7	CALL_3
0x4000280	      0xba00000000	                              mov edx, 0	       170	frags.c	FUNCTION_7	CALL_3
0x4000285	      0xbeaa000000	                           mov esi, 0xaa	       170	frags.c	FUNCTION_7	CALL_3
0x400028a	      0xbf00000000	                              mov edi, 0	       170	frags.c	FUNCTION_7	CALL_3
0x400028f	      0xe800000000	                          call 0x4000294	       170	frags.c	FUNCTION_7	CALL_3
0x4000294	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       174	frags.c	FUNCTION_7	CALL_4
0x4000298	        0x48394340	            cmp qword [rbx + 0x40], rax 	       174	frags.c	FUNCTION_7	CALL_4
0x400029c	            0x7507	                           jne 0x40002a5	       174	frags.c	FUNCTION_7	CALL_4
0x400029e	    0x808b80000000	                 or byte [rbx + 0x80], 2	       174	frags.c	FUNCTION_7	CALL_4
0x40002a5	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	       174	frags.c	FUNCTION_7	CALL_4
0x40002a9	          0x4801d0	                            add rax, rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002ac	          0x48f7d2	                                 not rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002af	          0x4821d0	                            and rax, rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002b2	        0x48894348	             mov qword [rbx + 0x48], rax	       174	frags.c	FUNCTION_7	CALL_4
0x40002b6	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       174	frags.c	FUNCTION_7	CALL_4
0x40002ba	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	       174	frags.c	FUNCTION_7	CALL_4
0x40002be	          0x4829d0	                            sub rax, rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002c1	          0x4889ce	                            mov rsi, rcx	       174	frags.c	FUNCTION_7	CALL_4
0x40002c4	          0x4829d6	                            sub rsi, rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002c7	          0x4839f0	                            cmp rax, rsi	       174	frags.c	FUNCTION_7	CALL_4
0x40002ca	            0x7604	                           jbe 0x40002d0	       174	frags.c	FUNCTION_7	CALL_4
0x40002cc	        0x48894b48	             mov qword [rbx + 0x48], rcx	       174	frags.c	FUNCTION_7	CALL_4
0x40002d0	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       174	frags.c	FUNCTION_7	CALL_4
0x40002d4	        0x48894340	             mov qword [rbx + 0x40], rax	       174	frags.c	FUNCTION_7	CALL_4
0x40002d8	          0x4885db	                           test rbx, rbx	       176	frags.c	FUNCTION_7	CALL_5
0x40002db	            0x7514	                           jne 0x40002f1	       176	frags.c	FUNCTION_7	CALL_5
0x40002dd	      0xba00000000	                              mov edx, 0	       176	frags.c	FUNCTION_7	CALL_5
0x40002e2	      0xbeb0000000	                           mov esi, 0xb0	       176	frags.c	FUNCTION_7	CALL_5
0x40002e7	      0xbf00000000	                              mov edi, 0	       176	frags.c	FUNCTION_7	CALL_5
0x40002ec	      0xe800000000	                          call 0x40002f1	       176	frags.c	FUNCTION_7	CALL_5
0x40002f1	        0x488b4308	                mov rax, qword [rbx + 8]	       177	frags.c	FUNCTION_7
0x40002f5	          0x4885c0	                           test rax, rax	       178	frags.c	FUNCTION_7	CALL_6
0x40002f8	            0x7514	                           jne 0x400030e	       178	frags.c	FUNCTION_7	CALL_6
0x40002fa	      0xba00000000	                              mov edx, 0	       178	frags.c	FUNCTION_7	CALL_6
0x40002ff	      0xbeb2000000	                           mov esi, 0xb2	       178	frags.c	FUNCTION_7	CALL_6
0x4000304	      0xbf00000000	                              mov edi, 0	       178	frags.c	FUNCTION_7	CALL_6
0x4000309	      0xe800000000	                          call 0x400030e	       178	frags.c	FUNCTION_7	CALL_6
0x400030e	          0x4839c5	                            cmp rbp, rax	       179	frags.c	FUNCTION_7	CALL_7
0x4000311	            0x7414	                            je 0x4000327	       179	frags.c	FUNCTION_7	CALL_7
0x4000313	      0xba00000000	                              mov edx, 0	       179	frags.c	FUNCTION_7	CALL_7
0x4000318	      0xbeb3000000	                           mov esi, 0xb3	       179	frags.c	FUNCTION_7	CALL_7
0x400031d	      0xbf00000000	                              mov edi, 0	       179	frags.c	FUNCTION_7	CALL_7
0x4000322	      0xe800000000	                          call 0x4000327	       179	frags.c	FUNCTION_7	CALL_7
0x4000327	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       180	frags.c	FUNCTION_7	CALL_8
0x400032b	      0xe800000000	                          call 0x4000330	       180	frags.c	FUNCTION_7	CALL_8
0x4000330	          0x4989c4	                            mov r12, rax	       180	frags.c	FUNCTION_7	CALL_8
0x4000333	    0x488905000000	            mov qword [0x0400033a], rax 	       180	frags.c	FUNCTION_7	CALL_8
0x400033a	        0x488d7848	                   lea rdi, [rax + 0x48]	       182	frags.c	FUNCTION_7	CALL_9
0x400033e	      0xe800000000	                          call 0x4000343	       182	frags.c	FUNCTION_7	CALL_9
0x4000343	      0x4989442440	             mov qword [r12 + 0x40], rax	       182	frags.c	FUNCTION_7	CALL_9
0x4000348	    0x488b05000000	            mov rax, qword [0x0400034f] 	       188	frags.c	FUNCTION_7
0x400034f	        0x48894538	            mov qword [rbp + 0x38], rax 	       188	frags.c	FUNCTION_7
0x4000353	        0x48894308	                mov qword [rbx + 8], rax	       189	frags.c	FUNCTION_7
0x4000357	    0x488b15000000	            mov rdx, qword [0x0400035e] 	       194	frags.c	FUNCTION_7
0x400035e	        0x48895050	             mov qword [rax + 0x50], rdx	       194	frags.c	FUNCTION_7
0x4000362	    0x488b15000000	            mov rdx, qword [0x04000369] 	       198	frags.c	FUNCTION_7	CALL_10
0x4000369	        0x483b4208	                cmp rax, qword [rdx + 8]	       198	frags.c	FUNCTION_7	CALL_10
0x400036d	            0x7414	                            je 0x4000383	       198	frags.c	FUNCTION_7	CALL_10
0x400036f	      0xba00000000	                              mov edx, 0	       198	frags.c	FUNCTION_7	CALL_10
0x4000374	      0xbec6000000	                           mov esi, 0xc6	       198	frags.c	FUNCTION_7	CALL_10
0x4000379	      0xbf00000000	                              mov edi, 0	       198	frags.c	FUNCTION_7	CALL_10
0x400037e	      0xe800000000	                          call 0x4000383	       198	frags.c	FUNCTION_7	CALL_10
0x4000383	    0x48c740380000	               mov qword [rax + 0x38], 0	       200	frags.c	FUNCTION_7
0x400038b	              0x5b	                                 pop rbx	       201	frags.c	FUNCTION_7
0x400038c	              0x5d	                                 pop rbp	       201	frags.c	FUNCTION_7
0x400038d	            0x415c	                                 pop r12	       201	frags.c	FUNCTION_7
0x400038f	              0xc3	                                     ret	       201	frags.c	FUNCTION_7
frag_now_fix_octets	DO,0:CALL,1:ELSE,0:IF,1:functions,0:WHILE,0:SWITCH,0:FOR,0	10
0x4000210	    0x48813d000000	               cmp qword [0x0400021b], 0	       386	frags.c	FUNCTION_17	IF_1
0x400021b	            0x7508	                           jne 0x4000225	       386	frags.c	FUNCTION_17	IF_1
0x400021d	    0x488b05000000	            mov rax, qword [0x04000224] 	       387	frags.c	FUNCTION_17	IF_1
0x4000224	              0xc3	                                     ret	       387	frags.c	FUNCTION_17	IF_1
0x4000225	    0x488b05000000	            mov rax, qword [0x0400022c] 	       390	frags.c	FUNCTION_17
0x400022c	        0x488d507c	                   lea rdx, [rax + 0x7c]	       390	frags.c	FUNCTION_17
0x4000230	    0x488b05000000	            mov rax, qword [0x04000237] 	       389	frags.c	FUNCTION_17	CALL_1
0x4000237	        0x488b4048	            mov rax, qword [rax + 0x48] 	       389	frags.c	FUNCTION_17	CALL_1
0x400023b	          0x4829d0	                            sub rax, rdx	       389	frags.c	FUNCTION_17	CALL_1
0x400023e	              0xc3	                                     ret	       391	frags.c	FUNCTION_17
frag_var	DO,0:CALL,4:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	37
0x40004f1	            0x4157	                                push r15	       259	frags.c	FUNCTION_10
0x40004f3	            0x4156	                                push r14	       259	frags.c	FUNCTION_10
0x40004f5	            0x4155	                                push r13	       259	frags.c	FUNCTION_10
0x40004f7	            0x4154	                                push r12	       259	frags.c	FUNCTION_10
0x40004f9	              0x55	                                push rbp	       259	frags.c	FUNCTION_10
0x40004fa	              0x53	                                push rbx	       259	frags.c	FUNCTION_10
0x40004fb	        0x4883ec18	                           sub rsp, 0x18	       259	frags.c	FUNCTION_10
0x40004ff	        0x897c240c	              mov dword [rsp + 0xc], edi	       259	frags.c	FUNCTION_10
0x4000503	          0x4889f3	                            mov rbx, rsi	       259	frags.c	FUNCTION_10
0x4000506	          0x4989d4	                            mov r12, rdx	       259	frags.c	FUNCTION_10
0x4000509	          0x4189cd	                           mov r13d, ecx	       259	frags.c	FUNCTION_10
0x400050c	          0x4d89c6	                             mov r14, r8	       259	frags.c	FUNCTION_10
0x400050f	          0x4d89cf	                             mov r15, r9	       259	frags.c	FUNCTION_10
0x4000512	          0x4889f7	                            mov rdi, rsi	       262	frags.c	FUNCTION_10	CALL_1
0x4000515	      0xe800000000	                          call 0x400051a	       262	frags.c	FUNCTION_10	CALL_1
0x400051a	    0x488b05000000	            mov rax, qword [0x04000521] 	       263	frags.c	FUNCTION_10	CALL_2
0x4000521	        0x488b6848	            mov rbp, qword [rax + 0x48] 	       263	frags.c	FUNCTION_10	CALL_2
0x4000525	      0x488d541d00	                    lea rdx, [rbp + rbx]	       264	frags.c	FUNCTION_10	CALL_3
0x400052a	        0x48895048	             mov qword [rax + 0x48], rdx	       264	frags.c	FUNCTION_10	CALL_3
0x400052e	        0x4883ec08	                              sub rsp, 8	       265	frags.c	FUNCTION_10	CALL_4
0x4000532	        0xff742458	                 push qword [rsp + 0x58]	       265	frags.c	FUNCTION_10	CALL_4
0x4000536	          0x4d89f9	                             mov r9, r15	       265	frags.c	FUNCTION_10	CALL_4
0x4000539	          0x4d89f0	                             mov r8, r14	       265	frags.c	FUNCTION_10	CALL_4
0x400053c	          0x4489e9	                           mov ecx, r13d	       265	frags.c	FUNCTION_10	CALL_4
0x400053f	          0x4c89e2	                            mov rdx, r12	       265	frags.c	FUNCTION_10	CALL_4
0x4000542	          0x4889de	                            mov rsi, rbx	       265	frags.c	FUNCTION_10	CALL_4
0x4000545	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	       265	frags.c	FUNCTION_10	CALL_4
0x4000549	      0xe834ffffff	                  call sym.frag_var_init	       265	frags.c	FUNCTION_10	CALL_4
0x400054e	          0x4889e8	                            mov rax, rbp	       267	frags.c	FUNCTION_10
0x4000551	        0x4883c428	                           add rsp, 0x28	       267	frags.c	FUNCTION_10
0x4000555	              0x5b	                                 pop rbx	       267	frags.c	FUNCTION_10
0x4000556	              0x5d	                                 pop rbp	       267	frags.c	FUNCTION_10
0x4000557	            0x415c	                                 pop r12	       267	frags.c	FUNCTION_10
0x4000559	            0x415d	                                 pop r13	       267	frags.c	FUNCTION_10
0x400055b	            0x415e	                                 pop r14	       267	frags.c	FUNCTION_10
0x400055d	            0x415f	                                 pop r15	       267	frags.c	FUNCTION_10
0x400055f	              0xc3	                                     ret	       267	frags.c	FUNCTION_10
frag_more	DO,0:CALL,4:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	13
0x4000452	              0x53	                                push rbx	       211	frags.c	FUNCTION_8
0x4000453	          0x4889fb	                            mov rbx, rdi	       211	frags.c	FUNCTION_8
0x4000456	    0x488b05000000	            mov rax, qword [0x0400045d] 	       214	frags.c	FUNCTION_8	CALL_1
0x400045d	        0x488d7830	                   lea rdi, [rax + 0x30]	       214	frags.c	FUNCTION_8	CALL_1
0x4000461	      0xe8dafbffff	               call sym.frag_alloc_check	       214	frags.c	FUNCTION_8	CALL_1
0x4000466	          0x4889df	                            mov rdi, rbx	       215	frags.c	FUNCTION_8	CALL_2
0x4000469	      0xe800000000	                          call 0x400046e	       215	frags.c	FUNCTION_8	CALL_2
0x400046e	    0x488b15000000	            mov rdx, qword [0x04000475] 	       216	frags.c	FUNCTION_8	CALL_3
0x4000475	        0x488b4248	            mov rax, qword [rdx + 0x48] 	       216	frags.c	FUNCTION_8	CALL_3
0x4000479	          0x4801c3	                            add rbx, rax	       217	frags.c	FUNCTION_8	CALL_4
0x400047c	        0x48895a48	             mov qword [rdx + 0x48], rbx	       217	frags.c	FUNCTION_8	CALL_4
0x4000480	              0x5b	                                 pop rbx	       219	frags.c	FUNCTION_8
0x4000481	              0xc3	                                     ret	       219	frags.c	FUNCTION_8
clear_frag_count	DO,0:CALL,0:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	2
0x40000be	    0xc70500000000	               mov dword [0x040000c8], 0	        39	frags.c	FUNCTION_2
0x40000c8	              0xc3	                                     ret	        39	frags.c	FUNCTION_2
frag_var_init	DO,0:CALL,3:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	29
0x4000482	              0x55	                                push rbp	       228	frags.c	FUNCTION_9
0x4000483	              0x53	                                push rbx	       228	frags.c	FUNCTION_9
0x4000484	        0x4883ec08	                              sub rsp, 8	       228	frags.c	FUNCTION_9
0x4000488	          0x4889f5	                            mov rbp, rsi	       228	frags.c	FUNCTION_9
0x400048b	    0x488b1d000000	            mov rbx, qword [0x04000492] 	       229	frags.c	FUNCTION_9
0x4000492	        0x48895318	             mov qword [rbx + 0x18], rdx	       229	frags.c	FUNCTION_9
0x4000496	          0x897b5c	             mov dword [rbx + 0x5c], edi	       230	frags.c	FUNCTION_9
0x4000499	          0x894b60	             mov dword [rbx + 0x60], ecx	       231	frags.c	FUNCTION_9
0x400049c	        0x4c894328	              mov qword [rbx + 0x28], r8	       232	frags.c	FUNCTION_9
0x40004a0	        0x4c894b20	              mov qword [rbx + 0x20], r9	       233	frags.c	FUNCTION_9
0x40004a4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       234	frags.c	FUNCTION_9
0x40004a9	        0x48894330	             mov qword [rbx + 0x30], rax	       234	frags.c	FUNCTION_9
0x40004ad	    0x8b0500000000	            mov eax, dword [0x040004b3] 	       241	frags.c	FUNCTION_9	CALL_1
0x40004b3	          0x894364	             mov dword [rbx + 0x64], eax	       241	frags.c	FUNCTION_9	CALL_1
0x40004b6	    0x488b05000000	            mov rax, qword [0x040004bd] 	       241	frags.c	FUNCTION_9	CALL_1
0x40004bd	    0x488b15000000	            mov rdx, qword [0x040004c4] 	       241	frags.c	FUNCTION_9	CALL_1
0x40004c4	        0x48894368	             mov qword [rbx + 0x68], rax	       241	frags.c	FUNCTION_9	CALL_1
0x40004c8	        0x48895370	             mov qword [rbx + 0x70], rdx	       241	frags.c	FUNCTION_9	CALL_1
0x40004cc	    0x8b0500000000	            mov eax, dword [0x040004d2] 	       241	frags.c	FUNCTION_9	CALL_1
0x40004d2	          0x894378	             mov dword [rbx + 0x78], eax	       241	frags.c	FUNCTION_9	CALL_1
0x40004d5	        0x488d7b48	                   lea rdi, [rbx + 0x48]	       243	frags.c	FUNCTION_9	CALL_2
0x40004d9	      0xe800000000	                          call 0x40004de	       243	frags.c	FUNCTION_9	CALL_2
0x40004de	        0x48894340	             mov qword [rbx + 0x40], rax	       243	frags.c	FUNCTION_9	CALL_2
0x40004e2	          0x4889ef	                            mov rdi, rbp	       245	frags.c	FUNCTION_9	CALL_3
0x40004e5	      0xe800000000	                          call 0x40004ea	       245	frags.c	FUNCTION_9	CALL_3
0x40004ea	        0x4883c408	                              add rsp, 8	       246	frags.c	FUNCTION_9
0x40004ee	              0x5b	                                 pop rbx	       246	frags.c	FUNCTION_9
0x40004ef	              0x5d	                                 pop rbp	       246	frags.c	FUNCTION_9
0x40004f0	              0xc3	                                     ret	       246	frags.c	FUNCTION_9
frag_align_code	DO,0:CALL,1:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	12
0x400060e	        0x4883ec10	                           sub rsp, 0x10	       374	frags.c	FUNCTION_16
0x4000612	            0x89f1	                            mov ecx, esi	       374	frags.c	FUNCTION_16
0x4000614	            0x6a00	                                  push 0	       377	frags.c	FUNCTION_16	CALL_1
0x4000616	          0x4c63cf	                          movsxd r9, edi	       377	frags.c	FUNCTION_16	CALL_1
0x4000619	    0x41b800000000	                              mov r8d, 0	       377	frags.c	FUNCTION_16	CALL_1
0x400061f	      0xba01000000	                              mov edx, 1	       377	frags.c	FUNCTION_16	CALL_1
0x4000624	      0xbeff0f0000	                          mov esi, 0xfff	       377	frags.c	FUNCTION_16	CALL_1
0x4000629	      0xbf03000000	                              mov edi, 3	       377	frags.c	FUNCTION_16	CALL_1
0x400062e	      0xe800000000	                          call 0x4000633	       377	frags.c	FUNCTION_16	CALL_1
0x4000633	          0xc60090	                    mov byte [rax], 0x90	       380	frags.c	FUNCTION_16
0x4000636	        0x4883c418	                           add rsp, 0x18	       381	frags.c	FUNCTION_16
0x400063a	              0xc3	                                     ret	       381	frags.c	FUNCTION_16
frag_offset_fixed_p	DO,0:CALL,0:ELSE,0:IF,5:functions,0:WHILE,2:SWITCH,0:FOR,0	42
0x40006ee	          0x4c8b0f	                     mov r9, qword [rdi]	       423	frags.c	FUNCTION_20
0x40006f1	          0x4c2b0e	                     sub r9, qword [rsi]	       423	frags.c	FUNCTION_20
0x40006f4	          0x4d89c8	                              mov r8, r9	       423	frags.c	FUNCTION_20
0x40006f7	          0x4889f8	                            mov rax, rdi	       423	frags.c	FUNCTION_20
0x40006fa	          0x4839f7	                            cmp rdi, rsi	       424	frags.c	FUNCTION_20	IF_1
0x40006fd	            0x7530	                           jne 0x400072f	       424	frags.c	FUNCTION_20	IF_1
0x40006ff	          0x4c890a	                     mov qword [rdx], r9	       426	frags.c	FUNCTION_20	IF_1
0x4000702	      0xb801000000	                              mov eax, 1	       427	frags.c	FUNCTION_20	IF_1
0x4000707	              0xc3	                                     ret	       427	frags.c	FUNCTION_20	IF_1
0x4000708	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       434	frags.c	FUNCTION_20	WHILE_1
0x400070c	      0x480faf4818	            imul rcx, qword [rax + 0x18]	       434	frags.c	FUNCTION_20	WHILE_1
0x4000711	        0x48034810	             add rcx, qword [rax + 0x10]	       434	frags.c	FUNCTION_20	WHILE_1
0x4000715	          0x4901c8	                             add r8, rcx	       434	frags.c	FUNCTION_20	WHILE_1
0x4000718	        0x488b4038	            mov rax, qword [rax + 0x38] 	       435	frags.c	FUNCTION_20	WHILE_1
0x400071c	          0x4885c0	                           test rax, rax	       436	frags.c	FUNCTION_20	WHILE_1	IF_2
0x400071f	            0x743d	                            je 0x400075e	       436	frags.c	FUNCTION_20	WHILE_1	IF_2
0x4000721	          0x4839c6	                            cmp rsi, rax	       438	frags.c	FUNCTION_20	WHILE_1	IF_3
0x4000724	            0x7509	                           jne 0x400072f	       438	frags.c	FUNCTION_20	WHILE_1	IF_3
0x4000726	          0x4c8902	                     mov qword [rdx], r8	       440	frags.c	FUNCTION_20	WHILE_1	IF_3
0x4000729	      0xb801000000	                              mov eax, 1	       441	frags.c	FUNCTION_20	WHILE_1	IF_3
0x400072e	              0xc3	                                     ret	       441	frags.c	FUNCTION_20	WHILE_1	IF_3
0x400072f	        0x83785c01	               cmp dword [rax + 0x5c], 1	       432	frags.c	FUNCTION_20	WHILE_1
0x4000733	            0x74d3	                            je 0x4000708	       432	frags.c	FUNCTION_20	WHILE_1
0x4000735	            0xeb27	                           jmp 0x400075e	       432	frags.c	FUNCTION_20	WHILE_1
0x4000737	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       450	frags.c	FUNCTION_20	WHILE_2
0x400073b	      0x480faf4618	            imul rax, qword [rsi + 0x18]	       450	frags.c	FUNCTION_20	WHILE_2
0x4000740	        0x48034610	             add rax, qword [rsi + 0x10]	       450	frags.c	FUNCTION_20	WHILE_2
0x4000744	          0x4929c1	                             sub r9, rax	       450	frags.c	FUNCTION_20	WHILE_2
0x4000747	        0x488b7638	            mov rsi, qword [rsi + 0x38] 	       451	frags.c	FUNCTION_20	WHILE_2
0x400074b	          0x4885f6	                           test rsi, rsi	       452	frags.c	FUNCTION_20	WHILE_2	IF_4
0x400074e	            0x741a	                            je 0x400076a	       452	frags.c	FUNCTION_20	WHILE_2	IF_4
0x4000750	          0x4839f7	                            cmp rdi, rsi	       454	frags.c	FUNCTION_20	WHILE_2	IF_5
0x4000753	            0x7509	                           jne 0x400075e	       454	frags.c	FUNCTION_20	WHILE_2	IF_5
0x4000755	          0x4c890a	                     mov qword [rdx], r9	       456	frags.c	FUNCTION_20	WHILE_2	IF_5
0x4000758	      0xb801000000	                              mov eax, 1	       457	frags.c	FUNCTION_20	WHILE_2	IF_5
0x400075d	              0xc3	                                     ret	       457	frags.c	FUNCTION_20	WHILE_2	IF_5
0x400075e	        0x837e5c01	               cmp dword [rsi + 0x5c], 1	       448	frags.c	FUNCTION_20	WHILE_2
0x4000762	            0x74d3	                            je 0x4000737	       448	frags.c	FUNCTION_20	WHILE_2
0x4000764	      0xb800000000	                              mov eax, 0	       461	frags.c	FUNCTION_20
0x4000769	              0xc3	                                     ret	       461	frags.c	FUNCTION_20
0x400076a	      0xb800000000	                              mov eax, 0	       461	frags.c	FUNCTION_20
0x400076f	              0xc3	                                     ret	       462	frags.c	FUNCTION_20
frag_now_fix	DO,0:CALL,1:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	2
0x400065d	      0xe800000000	                          call 0x4000662	       396	frags.c	FUNCTION_18	CALL_1
0x4000662	            0xf3c3	                                     ret	       397	frags.c	FUNCTION_18
frag_align	DO,0:CALL,1:ELSE,1:IF,2:functions,0:WHILE,0:SWITCH,0:FOR,0	33
0x4000560	    0x48813d000000	               cmp qword [0x0400056b], 0	       314	frags.c	FUNCTION_14	IF_1
0x400056b	            0x7537	                           jne 0x40005a4	       314	frags.c	FUNCTION_14	IF_1
0x400056d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       319	frags.c	FUNCTION_14	IF_1
0x4000574	            0x89f9	                            mov ecx, edi	       319	frags.c	FUNCTION_14	IF_1
0x4000576	          0x48d3e0	                             shl rax, cl	       319	frags.c	FUNCTION_14	IF_1
0x4000579	    0x488b35000000	            mov rsi, qword [0x04000580] 	       320	frags.c	FUNCTION_14	IF_1
0x4000580	        0x488d4eff	                      lea rcx, [rsi - 1]	       320	frags.c	FUNCTION_14	IF_1
0x4000584	          0x4829c1	                            sub rcx, rax	       320	frags.c	FUNCTION_14	IF_1
0x4000587	          0x4821c8	                            and rax, rcx	       320	frags.c	FUNCTION_14	IF_1
0x400058a	            0x85d2	                           test edx, edx	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x400058c	            0x740e	                            je 0x400059c	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x400058e	          0x4889c1	                            mov rcx, rax	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x4000591	          0x4829f1	                            sub rcx, rsi	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x4000594	          0x4863d2	                         movsxd rdx, edx	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x4000597	          0x4839d1	                            cmp rcx, rdx	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x400059a	            0x7737	                            ja 0x40005d3	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x400059c	    0x488905000000	            mov qword [0x040005a3], rax 	       322	frags.c	FUNCTION_14	IF_1	IF_2
0x40005a3	              0xc3	                                     ret	       322	frags.c	FUNCTION_14	IF_1	IF_2
0x40005a4	              0x53	                                push rbx	       313	frags.c	FUNCTION_14
0x40005a5	            0x89d1	                            mov ecx, edx	       313	frags.c	FUNCTION_14
0x40005a7	            0x89f3	                            mov ebx, esi	       313	frags.c	FUNCTION_14
0x40005a9	        0x4883ec08	                              sub rsp, 8	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005ad	            0x6a00	                                  push 0	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005af	          0x4c63cf	                          movsxd r9, edi	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005b2	    0x41b800000000	                              mov r8d, 0	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005b8	      0xba01000000	                              mov edx, 1	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005bd	      0xbe01000000	                              mov esi, 1	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005c2	      0xbf02000000	                              mov edi, 2	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005c7	      0xe800000000	                          call 0x40005cc	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005cc	            0x8818	                      mov byte [rax], bl	       330	frags.c	FUNCTION_14	ELSE_1
0x40005ce	        0x4883c410	                           add rsp, 0x10	       330	frags.c	FUNCTION_14	ELSE_1
0x40005d2	              0x5b	                                 pop rbx	       332	frags.c	FUNCTION_14
0x40005d3	            0xf3c3	                                     ret	       332	frags.c	FUNCTION_14
frag_init	DO,0:CALL,0:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	3
0x40000c9	    0xc70500000000	               mov dword [0x040000d3], 1	        47	frags.c	FUNCTION_3
0x40000d3	    0xc70500000000	               mov dword [0x040000dd], 1	        48	frags.c	FUNCTION_3
0x40000dd	              0xc3	                                     ret	        48	frags.c	FUNCTION_3
frag_room	DO,0:CALL,1:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	4
0x4000200	    0x488b15000000	            mov rdx, qword [0x04000207] 	       301	frags.c	FUNCTION_13	CALL_1
0x4000207	        0x488b4250	            mov rax, qword [rdx + 0x50] 	       301	frags.c	FUNCTION_13	CALL_1
0x400020b	        0x482b4248	             sub rax, qword [rdx + 0x48]	       301	frags.c	FUNCTION_13	CALL_1
0x400020f	              0xc3	                                     ret	       302	frags.c	FUNCTION_13
frag_alloc_check	DO,0:CALL,5:ELSE,0:IF,2:functions,0:WHILE,0:SWITCH,0:FOR,0	25
0x4000040	        0x4883ec08	                              sub rsp, 8	        57	frags.c	FUNCTION_4
0x4000044	        0x48833f00	                      cmp qword [rdi], 0	        58	frags.c	FUNCTION_4	IF_1
0x4000048	            0x7532	                           jne 0x400007c	        58	frags.c	FUNCTION_4	IF_1
0x400004a	      0xba05000000	                              mov edx, 5	        60	frags.c	FUNCTION_4	IF_1	CALL_2
0x400004f	      0xbe00000000	                              mov esi, 0	        60	frags.c	FUNCTION_4	IF_1	CALL_2
0x4000054	      0xbf00000000	                              mov edi, 0	        60	frags.c	FUNCTION_4	IF_1	CALL_2
0x4000059	      0xe800000000	                          call 0x400005e	        60	frags.c	FUNCTION_4	IF_1	CALL_2
0x400005e	          0x4889c7	                            mov rdi, rax	        60	frags.c	FUNCTION_4	IF_1	CALL_2
0x4000061	      0xb800000000	                              mov eax, 0	        60	frags.c	FUNCTION_4	IF_1	CALL_2
0x4000066	      0xe800000000	                          call 0x400006b	        60	frags.c	FUNCTION_4	IF_1	CALL_2
0x400006b	      0xbe00000000	                              mov esi, 0	        61	frags.c	FUNCTION_4	IF_1	CALL_3
0x4000070	    0x488b3d000000	            mov rdi, qword [0x04000077] 	        61	frags.c	FUNCTION_4	IF_1	CALL_3
0x4000077	      0xe800000000	                          call 0x400007c	        61	frags.c	FUNCTION_4	IF_1	CALL_3
0x400007c	    0x48833d000000	               cmp qword [0x04000084], 0	        64	frags.c	FUNCTION_4	IF_2
0x4000084	            0x742c	                            je 0x40000b2	        64	frags.c	FUNCTION_4	IF_2
0x4000086	      0xba05000000	                              mov edx, 5	        66	frags.c	FUNCTION_4	IF_2	CALL_5
0x400008b	      0xbe00000000	                              mov esi, 0	        66	frags.c	FUNCTION_4	IF_2	CALL_5
0x4000090	      0xbf00000000	                              mov edi, 0	        66	frags.c	FUNCTION_4	IF_2	CALL_5
0x4000095	      0xe800000000	                          call 0x400009a	        66	frags.c	FUNCTION_4	IF_2	CALL_5
0x400009a	          0x4889c7	                            mov rdi, rax	        66	frags.c	FUNCTION_4	IF_2	CALL_5
0x400009d	      0xb800000000	                              mov eax, 0	        66	frags.c	FUNCTION_4	IF_2	CALL_5
0x40000a2	      0xe800000000	                          call 0x40000a7	        66	frags.c	FUNCTION_4	IF_2	CALL_5
0x40000a7	    0x48c705000000	               mov qword [0x040000b2], 0	        67	frags.c	FUNCTION_4	IF_2
0x40000b2	        0x4883c408	                              add rsp, 8	        69	frags.c	FUNCTION_4
0x40000b6	              0xc3	                                     ret	        69	frags.c	FUNCTION_4
get_frag_count	DO,0:CALL,0:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	2
0x40000b7	    0x8b0500000000	            mov eax, dword [0x040000bd] 	        34	frags.c	FUNCTION_1
0x40000bd	              0xc3	                                     ret	        34	frags.c	FUNCTION_1
frag_append_1_char	DO,0:CALL,5:ELSE,0:IF,1:functions,0:WHILE,0:SWITCH,0:FOR,0	33
0x4000664	              0x55	                                push rbp	       401	frags.c	FUNCTION_19
0x4000665	              0x53	                                push rbx	       401	frags.c	FUNCTION_19
0x4000666	        0x4883ec08	                              sub rsp, 8	       401	frags.c	FUNCTION_19
0x400066a	            0x89fd	                            mov ebp, edi	       401	frags.c	FUNCTION_19
0x400066c	    0x488b05000000	            mov rax, qword [0x04000673] 	       402	frags.c	FUNCTION_19	CALL_1
0x4000673	        0x488d7830	                   lea rdi, [rax + 0x30]	       402	frags.c	FUNCTION_19	CALL_1
0x4000677	      0xe8c4f9ffff	               call sym.frag_alloc_check	       402	frags.c	FUNCTION_19	CALL_1
0x400067c	    0x488b15000000	            mov rdx, qword [0x04000683] 	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x4000683	        0x488b4250	            mov rax, qword [rdx + 0x50] 	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x4000687	        0x482b4248	             sub rax, qword [rdx + 0x48]	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x400068b	        0x4883f801	                              cmp rax, 1	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x400068f	            0x7728	                            ja 0x40006b9	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x4000691	    0x488b05000000	            mov rax, qword [0x04000698] 	       405	frags.c	FUNCTION_19	IF_1	CALL_3
0x4000698	    0xc7405c010000	               mov dword [rax + 0x5c], 1	       291	frags.c	FUNCTION_12
0x400069f	    0x48c740200000	               mov qword [rax + 0x20], 0	       292	frags.c	FUNCTION_12
0x40006a7	    0x48c740180000	               mov qword [rax + 0x18], 0	       293	frags.c	FUNCTION_12
0x40006af	      0xbf00000000	                              mov edi, 0	       406	frags.c	FUNCTION_19	IF_1	CALL_4
0x40006b4	      0xe800000000	                          call 0x40006b9	       406	frags.c	FUNCTION_19	IF_1	CALL_4
0x40006b9	    0x488b1d000000	            mov rbx, qword [0x040006c0] 	       408	frags.c	FUNCTION_19	CALL_5
0x40006c0	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       408	frags.c	FUNCTION_19	CALL_5
0x40006c4	        0x48394350	            cmp qword [rbx + 0x50], rax 	       408	frags.c	FUNCTION_19	CALL_5
0x40006c8	            0x750e	                           jne 0x40006d8	       408	frags.c	FUNCTION_19	CALL_5
0x40006ca	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       408	frags.c	FUNCTION_19	CALL_5
0x40006ce	      0xbe01000000	                              mov esi, 1	       408	frags.c	FUNCTION_19	CALL_5
0x40006d3	      0xe800000000	                          call 0x40006d8	       408	frags.c	FUNCTION_19	CALL_5
0x40006d8	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       408	frags.c	FUNCTION_19	CALL_5
0x40006dc	        0x488d5001	                      lea rdx, [rax + 1]	       408	frags.c	FUNCTION_19	CALL_5
0x40006e0	        0x48895348	             mov qword [rbx + 0x48], rdx	       408	frags.c	FUNCTION_19	CALL_5
0x40006e4	          0x408828	                     mov byte [rax], bpl	       408	frags.c	FUNCTION_19	CALL_5
0x40006e7	        0x4883c408	                              add rsp, 8	       409	frags.c	FUNCTION_19
0x40006eb	              0x5b	                                 pop rbx	       409	frags.c	FUNCTION_19
0x40006ec	              0x5d	                                 pop rbp	       409	frags.c	FUNCTION_19
0x40006ed	              0xc3	                                     ret	       409	frags.c	FUNCTION_19
frag_alloc	DO,0:CALL,6:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	75
0x40000de	              0x55	                                push rbp	        77	frags.c	FUNCTION_5
0x40000df	              0x53	                                push rbx	        77	frags.c	FUNCTION_5
0x40000e0	        0x4883ec08	                              sub rsp, 8	        77	frags.c	FUNCTION_5
0x40000e4	          0x4889fb	                            mov rbx, rdi	        77	frags.c	FUNCTION_5
0x40000e7	        0x488b4f20	            mov rcx, qword [rdi + 0x20] 	        81	frags.c	FUNCTION_5	CALL_1
0x40000eb	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        81	frags.c	FUNCTION_5	CALL_1
0x40000ef	        0x483b4710	            cmp rax, qword [rdi + 0x10] 	        81	frags.c	FUNCTION_5	CALL_1
0x40000f3	            0x7504	                           jne 0x40000f9	        81	frags.c	FUNCTION_5	CALL_1
0x40000f5	        0x804f5002	                 or byte [rdi + 0x50], 2	        81	frags.c	FUNCTION_5	CALL_1
0x40000f9	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	        81	frags.c	FUNCTION_5	CALL_1
0x40000fd	        0x488d1428	                    lea rdx, [rax + rbp]	        81	frags.c	FUNCTION_5	CALL_1
0x4000101	          0x4889e8	                            mov rax, rbp	        81	frags.c	FUNCTION_5	CALL_1
0x4000104	          0x48f7d0	                                 not rax	        81	frags.c	FUNCTION_5	CALL_1
0x4000107	          0x4821d0	                            and rax, rdx	        81	frags.c	FUNCTION_5	CALL_1
0x400010a	        0x48894318	             mov qword [rbx + 0x18], rax	        81	frags.c	FUNCTION_5	CALL_1
0x400010e	        0x488b5308	                mov rdx, qword [rbx + 8]	        81	frags.c	FUNCTION_5	CALL_1
0x4000112	          0x4889c6	                            mov rsi, rax	        81	frags.c	FUNCTION_5	CALL_1
0x4000115	          0x4829d6	                            sub rsi, rdx	        81	frags.c	FUNCTION_5	CALL_1
0x4000118	          0x4889cf	                            mov rdi, rcx	        81	frags.c	FUNCTION_5	CALL_1
0x400011b	          0x4829d7	                            sub rdi, rdx	        81	frags.c	FUNCTION_5	CALL_1
0x400011e	          0x4839fe	                            cmp rsi, rdi	        81	frags.c	FUNCTION_5	CALL_1
0x4000121	            0x7612	                           jbe 0x4000135	        81	frags.c	FUNCTION_5	CALL_1
0x4000123	        0x48894b18	             mov qword [rbx + 0x18], rcx	        81	frags.c	FUNCTION_5	CALL_1
0x4000127	        0x48894b10	             mov qword [rbx + 0x10], rcx	        81	frags.c	FUNCTION_5	CALL_1
0x400012b	    0x48c743300000	               mov qword [rbx + 0x30], 0	        83	frags.c	FUNCTION_5	CALL_3
0x4000133	            0xeb15	                           jmp 0x400014a	        83	frags.c	FUNCTION_5	CALL_3
0x4000135	        0x48894310	             mov qword [rbx + 0x10], rax	        81	frags.c	FUNCTION_5	CALL_1
0x4000139	    0x48c743300000	               mov qword [rbx + 0x30], 0	        83	frags.c	FUNCTION_5	CALL_3
0x4000141	          0x4829c1	                            sub rcx, rax	        84	frags.c	FUNCTION_5	CALL_4
0x4000144	        0x4883f97b	                           cmp rcx, 0x7b	        84	frags.c	FUNCTION_5	CALL_4
0x4000148	            0x770d	                            ja 0x4000157	        84	frags.c	FUNCTION_5	CALL_4
0x400014a	      0xbe7c000000	                           mov esi, 0x7c	        84	frags.c	FUNCTION_5	CALL_4
0x400014f	          0x4889df	                            mov rdi, rbx	        84	frags.c	FUNCTION_5	CALL_4
0x4000152	      0xe800000000	                          call 0x4000157	        84	frags.c	FUNCTION_5	CALL_4
0x4000157	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        84	frags.c	FUNCTION_5	CALL_4
0x400015b	        0x4883c07c	                           add rax, 0x7c	        84	frags.c	FUNCTION_5	CALL_4
0x400015f	        0x48894318	             mov qword [rbx + 0x18], rax	        84	frags.c	FUNCTION_5	CALL_4
0x4000163	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	        84	frags.c	FUNCTION_5	CALL_4
0x4000167	          0x4839f0	                            cmp rax, rsi	        84	frags.c	FUNCTION_5	CALL_4
0x400016a	            0x7504	                           jne 0x4000170	        84	frags.c	FUNCTION_5	CALL_4
0x400016c	        0x804b5002	                 or byte [rbx + 0x50], 2	        84	frags.c	FUNCTION_5	CALL_4
0x4000170	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	        84	frags.c	FUNCTION_5	CALL_4
0x4000174	          0x4801d0	                            add rax, rdx	        84	frags.c	FUNCTION_5	CALL_4
0x4000177	          0x48f7d2	                                 not rdx	        84	frags.c	FUNCTION_5	CALL_4
0x400017a	          0x4821d0	                            and rax, rdx	        84	frags.c	FUNCTION_5	CALL_4
0x400017d	        0x48894318	             mov qword [rbx + 0x18], rax	        84	frags.c	FUNCTION_5	CALL_4
0x4000181	        0x488b5308	                mov rdx, qword [rbx + 8]	        84	frags.c	FUNCTION_5	CALL_4
0x4000185	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	        84	frags.c	FUNCTION_5	CALL_4
0x4000189	          0x4829d0	                            sub rax, rdx	        84	frags.c	FUNCTION_5	CALL_4
0x400018c	          0x4889cf	                            mov rdi, rcx	        84	frags.c	FUNCTION_5	CALL_4
0x400018f	          0x4829d7	                            sub rdi, rdx	        84	frags.c	FUNCTION_5	CALL_4
0x4000192	          0x4839f8	                            cmp rax, rdi	        84	frags.c	FUNCTION_5	CALL_4
0x4000195	            0x7604	                           jbe 0x400019b	        84	frags.c	FUNCTION_5	CALL_4
0x4000197	        0x48894b18	             mov qword [rbx + 0x18], rcx	        84	frags.c	FUNCTION_5	CALL_4
0x400019b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        84	frags.c	FUNCTION_5	CALL_4
0x400019f	        0x48894310	             mov qword [rbx + 0x10], rax	        84	frags.c	FUNCTION_5	CALL_4
0x40001a3	          0x4863ed	                         movsxd rbp, ebp	        85	frags.c	FUNCTION_5	CALL_5
0x40001a6	        0x48896b30	             mov qword [rbx + 0x30], rbp	        85	frags.c	FUNCTION_5	CALL_5
0x40001aa	    0x48c706000000	                      mov qword [rsi], 0	        90	string3.h	FUNCTION_24	CALL_6
0x40001b1	    0x48c746740000	               mov qword [rsi + 0x74], 0	        90	string3.h	FUNCTION_24	CALL_6
0x40001b9	        0x488d7e08	                      lea rdi, [rsi + 8]	        90	string3.h	FUNCTION_24	CALL_6
0x40001bd	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_24	CALL_6
0x40001c1	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_24	CALL_6
0x40001c4	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_24	CALL_6
0x40001c7	          0x83c17c	                           add ecx, 0x7c	        90	string3.h	FUNCTION_24	CALL_6
0x40001ca	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_24	CALL_6
0x40001cd	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_24	CALL_6
0x40001cf	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_24	CALL_6
0x40001d4	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_24	CALL_6
0x40001d7	    0x830500000000	               add dword [0x040001de], 1	        87	frags.c	FUNCTION_5
0x40001de	          0x4889f0	                            mov rax, rsi	        89	frags.c	FUNCTION_5
0x40001e1	        0x4883c408	                              add rsp, 8	        89	frags.c	FUNCTION_5
0x40001e5	              0x5b	                                 pop rbx	        89	frags.c	FUNCTION_5
0x40001e6	              0x5d	                                 pop rbp	        89	frags.c	FUNCTION_5
0x40001e7	              0xc3	                                     ret	        89	frags.c	FUNCTION_5
frag_variant	DO,0:CALL,2:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	10
0x400063b	              0x53	                                push rbx	       277	frags.c	FUNCTION_11
0x400063c	    0x488b05000000	            mov rax, qword [0x04000643] 	       280	frags.c	FUNCTION_11	CALL_1
0x4000643	        0x488b5848	            mov rbx, qword [rax + 0x48] 	       280	frags.c	FUNCTION_11	CALL_1
0x4000647	        0x4883ec08	                              sub rsp, 8	       281	frags.c	FUNCTION_11	CALL_2
0x400064b	        0xff742418	                 push qword [rsp + 0x18]	       281	frags.c	FUNCTION_11	CALL_2
0x400064f	      0xe82efeffff	                  call sym.frag_var_init	       281	frags.c	FUNCTION_11	CALL_2
0x4000654	        0x4883c410	                           add rsp, 0x10	       283	frags.c	FUNCTION_11
0x4000658	          0x4889d8	                            mov rax, rbx	       284	frags.c	FUNCTION_11
0x400065b	              0x5b	                                 pop rbx	       284	frags.c	FUNCTION_11
0x400065c	              0xc3	                                     ret	       284	frags.c	FUNCTION_11
frag_align_pattern	DO,0:CALL,2:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0	19
0x40005d5	              0x55	                                push rbp	       344	frags.c	FUNCTION_15
0x40005d6	              0x53	                                push rbx	       344	frags.c	FUNCTION_15
0x40005d7	        0x4883ec10	                           sub rsp, 0x10	       344	frags.c	FUNCTION_15
0x40005db	          0x4889f5	                            mov rbp, rsi	       344	frags.c	FUNCTION_15
0x40005de	          0x4889d3	                            mov rbx, rdx	       344	frags.c	FUNCTION_15
0x40005e1	            0x6a00	                                  push 0	       347	frags.c	FUNCTION_15	CALL_1
0x40005e3	          0x4c63cf	                          movsxd r9, edi	       347	frags.c	FUNCTION_15	CALL_1
0x40005e6	    0x41b800000000	                              mov r8d, 0	       347	frags.c	FUNCTION_15	CALL_1
0x40005ec	          0x4889d6	                            mov rsi, rdx	       347	frags.c	FUNCTION_15	CALL_1
0x40005ef	      0xbf02000000	                              mov edi, 2	       347	frags.c	FUNCTION_15	CALL_1
0x40005f4	      0xe800000000	                          call 0x40005f9	       347	frags.c	FUNCTION_15	CALL_1
0x40005f9	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_21	CALL_3
0x40005fc	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_21	CALL_3
0x40005ff	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_21	CALL_3
0x4000602	      0xe800000000	                          call 0x4000607	        53	string3.h	FUNCTION_21	CALL_3
0x4000607	        0x4883c418	                           add rsp, 0x18	       350	frags.c	FUNCTION_15
0x400060b	              0x5b	                                 pop rbx	       350	frags.c	FUNCTION_15
0x400060c	              0x5d	                                 pop rbp	       350	frags.c	FUNCTION_15
0x400060d	              0xc3	                                     ret	       350	frags.c	FUNCTION_15
