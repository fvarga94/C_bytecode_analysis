rust_is_mangled	IF,3:CALL,3:WHILE,0:SWITCH,0:functions,0:ELSE,0:FOR,0:DO,0	239
0x40000a5	            0x4154	                                push r12	       123	rust-demangle.c	FUNCTION_1
0x40000a7	              0x55	                                push rbp	       123	rust-demangle.c	FUNCTION_1
0x40000a8	              0x53	                                push rbx	       123	rust-demangle.c	FUNCTION_1
0x40000a9	        0x4883ec20	                           sub rsp, 0x20	       123	rust-demangle.c	FUNCTION_1
0x40000ad	    0x64488b042528	                mov rax, qword fs:[0x28]	       123	rust-demangle.c	FUNCTION_1
0x40000b6	      0x4889442418	             mov qword [rsp + 0x18], rax	       123	rust-demangle.c	FUNCTION_1
0x40000bb	            0x31c0	                            xor eax, eax	       123	rust-demangle.c	FUNCTION_1
0x40000bd	          0x4885ff	                           test rdi, rdi	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000c0	     0xf84f2020000	                            je 0x40003b8	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000c6	          0x4889fb	                            mov rbx, rdi	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000c9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       129	rust-demangle.c	FUNCTION_1	CALL_1
0x40000d0	            0xf2ae	              repne scasb al, byte [rdi]	       129	rust-demangle.c	FUNCTION_1	CALL_1
0x40000d2	          0x4889ce	                            mov rsi, rcx	       129	rust-demangle.c	FUNCTION_1	CALL_1
0x40000d5	          0x48f7d6	                                 not rsi	       129	rust-demangle.c	FUNCTION_1	CALL_1
0x40000d8	          0x4889f1	                            mov rcx, rsi	       129	rust-demangle.c	FUNCTION_1	CALL_1
0x40000db	        0x4883e901	                              sub rcx, 1	       129	rust-demangle.c	FUNCTION_1	CALL_1
0x40000df	      0xbd00000000	                              mov ebp, 0	       132	rust-demangle.c	FUNCTION_1	IF_2
0x40000e4	        0x4883f913	                           cmp rcx, 0x13	       130	rust-demangle.c	FUNCTION_1	IF_2
0x40000e8	     0xf86da020000	                           jbe 0x40003c8	       130	rust-demangle.c	FUNCTION_1	IF_2
0x40000ee	      0x4c8d640bed	             lea r12, [rbx + rcx - 0x13]	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40000f3	      0xbf00000000	                              mov edi, 0	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40000f8	      0xb903000000	                              mov ecx, 3	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40000fd	          0x4c89e6	                            mov rsi, r12	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000100	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000102	        0x400f97c5	                                seta bpl	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000106	           0xf92c0	                                 setb al	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000109	            0x29c5	                            sub ebp, eax	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400010b	        0x400fbeed	                          movsx ebp, bpl	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400010f	            0x85ed	                           test ebp, ebp	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000111	     0xf85d7020000	                           jne 0x40003ee	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000117	      0x498d542403	                      lea rdx, [r12 + 3]	       155	rust-demangle.c	FUNCTION_2
0x400011c	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_9	CALL_6
0x4000124	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_9	CALL_6
0x400012d	      0x498d742413	                   lea rsi, [r12 + 0x13]	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000132	          0x4839f2	                            cmp rdx, rsi	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000135	     0xf83a1020000	                           jae 0x40003dc	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x400013b	           0xfb602	                   movzx eax, byte [rdx]	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x400013e	          0x8d48d0	                   lea ecx, [rax - 0x30]	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000141	          0x80f909	                               cmp cl, 9	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000144	            0x770e	                            ja 0x4000154	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000146	           0xfbec0	                           movsx eax, al	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000149	          0x83e830	                           sub eax, 0x30	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x400014c	            0x4898	                                    cdqe	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x400014e	        0xc6040401	                 mov byte [rsp + rax], 1	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000152	            0xeb18	                           jmp 0x400016c	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000154	          0x8d489f	                   lea ecx, [rax - 0x61]	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000157	          0x80f905	                               cmp cl, 5	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400015a	     0xf878e020000	                            ja 0x40003ee	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000160	           0xfbec0	                           movsx eax, al	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000163	          0x83e857	                           sub eax, 0x57	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000166	            0x4898	                                    cdqe	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000168	        0xc6040401	                 mov byte [rsp + rax], 1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400016c	        0x4883c201	                              add rdx, 1	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000170	          0x4839d6	                            cmp rsi, rdx	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000173	            0x75c6	                           jne 0x400013b	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000175	      0xe962020000	                           jmp 0x40003dc	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x400017a	          0x803801	                       cmp byte [rax], 1	       170	rust-demangle.c	FUNCTION_2	FOR_2	IF_4
0x400017d	          0x83daff	             sbb edx, 0xffffffffffffffff	       170	rust-demangle.c	FUNCTION_2	FOR_2	IF_4
0x4000180	        0x4883c001	                              add rax, 1	       170	rust-demangle.c	FUNCTION_2	FOR_2	IF_4
0x4000184	          0x4839c8	                            cmp rax, rcx	       168	rust-demangle.c	FUNCTION_2	FOR_2
0x4000187	            0x75f1	                           jne 0x400017a	       168	rust-demangle.c	FUNCTION_2	FOR_2
0x4000189	          0x83ea05	                              sub edx, 5	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x400018c	          0x83fa0a	                            cmp edx, 0xa	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x400018f	     0xf8733020000	                            ja 0x40003c8	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x4000195	          0x4c39e3	                            cmp rbx, r12	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x4000198	     0xf8321020000	                           jae 0x40003bf	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x400019e	           0xfb603	                   movzx eax, byte [rbx]	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001a1	          0x83e824	                           sub eax, 0x24	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001a4	            0x3c56	                            cmp al, 0x56	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001a6	     0xf871c020000	                            ja 0x40003c8	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001ac	           0xfb6c0	                           movzx eax, al	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001af	    0xff24c5000000	                       jmp qword [rax*8]	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001b6	      0xbf00000000	                              mov edi, 0	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x40001bb	      0xb903000000	                              mov ecx, 3	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x40001c0	          0x4889de	                            mov rsi, rbx	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x40001c3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x40001c5	           0xf97c2	                                 seta dl	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x40001c8	           0xf92c0	                                 setb al	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x40001cb	            0x38c2	                              cmp dl, al	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x40001cd	            0x7509	                           jne 0x40001d8	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x40001cf	        0x4883c303	                              add rbx, 3	       185	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1
0x40001d3	      0xe9d0010000	                           jmp 0x40003a8	       185	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1
0x40001d8	      0xbf00000000	                              mov edi, 0	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x40001dd	      0xb904000000	                              mov ecx, 4	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x40001e2	          0x4889de	                            mov rsi, rbx	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x40001e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x40001e7	           0xf97c2	                                 seta dl	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x40001ea	           0xf92c0	                                 setb al	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x40001ed	            0x38c2	                              cmp dl, al	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x40001ef	     0xf8496000000	                            je 0x400028b	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x40001f5	      0xbf00000000	                              mov edi, 0	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x40001fa	      0xb904000000	                              mov ecx, 4	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x40001ff	          0x4889de	                            mov rsi, rbx	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x4000202	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x4000204	           0xf97c2	                                 seta dl	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x4000207	           0xf92c0	                                 setb al	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400020a	            0x38c2	                              cmp dl, al	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400020c	            0x747d	                            je 0x400028b	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400020e	      0xbf00000000	                              mov edi, 0	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000213	      0xb904000000	                              mov ecx, 4	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000218	          0x4889de	                            mov rsi, rbx	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x400021b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x400021d	           0xf97c2	                                 seta dl	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000220	           0xf92c0	                                 setb al	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000223	            0x38c2	                              cmp dl, al	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000225	            0x7464	                            je 0x400028b	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x4000227	      0xbf00000000	                              mov edi, 0	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x400022c	      0xb904000000	                              mov ecx, 4	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x4000231	          0x4889de	                            mov rsi, rbx	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x4000234	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x4000236	           0xf97c2	                                 seta dl	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x4000239	           0xf92c0	                                 setb al	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x400023c	            0x38c2	                              cmp dl, al	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x400023e	            0x744b	                            je 0x400028b	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x4000240	      0xbf00000000	                              mov edi, 0	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000245	      0xb904000000	                              mov ecx, 4	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x400024a	          0x4889de	                            mov rsi, rbx	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x400024d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x400024f	           0xf97c2	                                 seta dl	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000252	           0xf92c0	                                 setb al	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000255	            0x38c2	                              cmp dl, al	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000257	            0x7432	                            je 0x400028b	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x4000259	      0xbf00000000	                              mov edi, 0	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x400025e	      0xb904000000	                              mov ecx, 4	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x4000263	          0x4889de	                            mov rsi, rbx	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x4000266	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x4000268	           0xf97c2	                                 seta dl	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x400026b	           0xf92c0	                                 setb al	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x400026e	            0x38c2	                              cmp dl, al	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x4000270	            0x7419	                            je 0x400028b	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x4000272	      0xbf00000000	                              mov edi, 0	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x4000277	      0xb904000000	                              mov ecx, 4	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x400027c	          0x4889de	                            mov rsi, rbx	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x400027f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x4000281	           0xf97c2	                                 seta dl	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x4000284	           0xf92c0	                                 setb al	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x4000287	            0x38c2	                              cmp dl, al	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x4000289	            0x7509	                           jne 0x4000294	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x400028b	        0x4883c304	                              add rbx, 4	       193	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400028f	      0xe914010000	                           jmp 0x40003a8	       193	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4000294	      0xba05000000	                              mov edx, 5	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x4000299	      0xbe00000000	                              mov esi, 0	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x400029e	          0x4889df	                            mov rdi, rbx	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002a1	      0xe800000000	                          call 0x40002a6	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002a6	            0x85c0	                           test eax, eax	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002a8	     0xf84d2000000	                            je 0x4000380	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x40002ae	      0xba05000000	                              mov edx, 5	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002b3	      0xbe00000000	                              mov esi, 0	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002b8	          0x4889df	                            mov rdi, rbx	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002bb	      0xe800000000	                          call 0x40002c0	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002c0	            0x85c0	                           test eax, eax	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002c2	     0xf84b8000000	                            je 0x4000380	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x40002c8	      0xba05000000	                              mov edx, 5	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002cd	      0xbe00000000	                              mov esi, 0	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002d2	          0x4889df	                            mov rdi, rbx	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002d5	      0xe800000000	                          call 0x40002da	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002da	            0x85c0	                           test eax, eax	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002dc	     0xf849e000000	                            je 0x4000380	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x40002e2	      0xba05000000	                              mov edx, 5	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x40002e7	      0xbe00000000	                              mov esi, 0	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x40002ec	          0x4889df	                            mov rdi, rbx	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x40002ef	      0xe800000000	                          call 0x40002f4	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x40002f4	            0x85c0	                           test eax, eax	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x40002f6	     0xf8484000000	                            je 0x4000380	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x40002fc	      0xba05000000	                              mov edx, 5	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000301	      0xbe00000000	                              mov esi, 0	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000306	          0x4889df	                            mov rdi, rbx	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000309	      0xe800000000	                          call 0x400030e	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x400030e	            0x85c0	                           test eax, eax	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000310	            0x746e	                            je 0x4000380	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000312	      0xba05000000	                              mov edx, 5	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000317	      0xbe00000000	                              mov esi, 0	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x400031c	          0x4889df	                            mov rdi, rbx	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x400031f	      0xe800000000	                          call 0x4000324	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000324	            0x85c0	                           test eax, eax	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000326	            0x7458	                            je 0x4000380	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000328	      0xba05000000	                              mov edx, 5	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x400032d	      0xbe00000000	                              mov esi, 0	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x4000332	          0x4889df	                            mov rdi, rbx	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x4000335	      0xe800000000	                          call 0x400033a	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x400033a	            0x85c0	                           test eax, eax	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x400033c	            0x7442	                            je 0x4000380	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x400033e	      0xba05000000	                              mov edx, 5	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000343	      0xbe00000000	                              mov esi, 0	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000348	          0x4889df	                            mov rdi, rbx	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x400034b	      0xe800000000	                          call 0x4000350	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000350	            0x85c0	                           test eax, eax	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000352	            0x742c	                            je 0x4000380	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x4000354	      0xba05000000	                              mov edx, 5	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000359	      0xbe00000000	                              mov esi, 0	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x400035e	          0x4889df	                            mov rdi, rbx	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000361	      0xe800000000	                          call 0x4000366	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000366	            0x85c0	                           test eax, eax	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x4000368	            0x7416	                            je 0x4000380	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x400036a	      0xba05000000	                              mov edx, 5	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x400036f	      0xbe00000000	                              mov esi, 0	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x4000374	          0x4889df	                            mov rdi, rbx	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x4000377	      0xe800000000	                          call 0x400037c	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x400037c	            0x85c0	                           test eax, eax	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x400037e	            0x7548	                           jne 0x40003c8	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x4000380	        0x4883c305	                              add rbx, 5	       204	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3
0x4000384	            0xeb22	                           jmp 0x40003a8	       204	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3
0x4000386	      0xbf00000000	                              mov edi, 0	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x400038b	      0xb903000000	                              mov ecx, 3	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x4000390	          0x4889de	                            mov rsi, rbx	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x4000393	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x4000395	           0xf97c0	                                 seta al	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x4000398	           0xf92c2	                                 setb dl	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x400039b	            0x29d0	                            sub eax, edx	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x400039d	           0xfbec0	                           movsx eax, al	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x40003a0	            0x85c0	                           test eax, eax	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x40003a2	            0x7422	                            je 0x40003c6	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x40003a4	        0x4883c301	                              add rbx, 1	       227	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003a8	          0x4939dc	                            cmp r12, rbx	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x40003ab	     0xf87edfdffff	                            ja 0x400019e	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x40003b1	      0xbd01000000	                              mov ebp, 1	       233	rust-demangle.c	FUNCTION_3
0x40003b6	            0xeb10	                           jmp 0x40003c8	       233	rust-demangle.c	FUNCTION_3
0x40003b8	      0xbd00000000	                              mov ebp, 0	       127	rust-demangle.c	FUNCTION_1	IF_1
0x40003bd	            0xeb09	                           jmp 0x40003c8	       127	rust-demangle.c	FUNCTION_1	IF_1
0x40003bf	      0xbd01000000	                              mov ebp, 1	       233	rust-demangle.c	FUNCTION_3
0x40003c4	            0xeb02	                           jmp 0x40003c8	       233	rust-demangle.c	FUNCTION_3
0x40003c6	            0x89c5	                            mov ebp, eax	       211	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4
0x40003c8	            0x89e8	                            mov eax, ebp	       139	rust-demangle.c	FUNCTION_1
0x40003ca	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       139	rust-demangle.c	FUNCTION_1
0x40003cf	    0x644833342528	                xor rsi, qword fs:[0x28]	       139	rust-demangle.c	FUNCTION_1
0x40003d8	            0x7420	                            je 0x40003fa	       139	rust-demangle.c	FUNCTION_1
0x40003da	            0xeb19	                           jmp 0x40003f5	       139	rust-demangle.c	FUNCTION_1
0x40003dc	          0x4889e0	                            mov rax, rsp	       139	rust-demangle.c	FUNCTION_1
0x40003df	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       139	rust-demangle.c	FUNCTION_1
0x40003e4	      0xba00000000	                              mov edx, 0	       123	rust-demangle.c	FUNCTION_1
0x40003e9	      0xe98cfdffff	                           jmp 0x400017a	       123	rust-demangle.c	FUNCTION_1
0x40003ee	      0xbd00000000	                              mov ebp, 0	       136	rust-demangle.c	FUNCTION_1	IF_3
0x40003f3	            0xebd3	                           jmp 0x40003c8	       136	rust-demangle.c	FUNCTION_1	IF_3
0x40003f5	      0xe800000000	                          call 0x40003fa	       139	rust-demangle.c	FUNCTION_1
0x40003fa	        0x4883c420	                           add rsp, 0x20	       139	rust-demangle.c	FUNCTION_1
0x40003fe	              0x5b	                                 pop rbx	       139	rust-demangle.c	FUNCTION_1
0x40003ff	              0x5d	                                 pop rbp	       139	rust-demangle.c	FUNCTION_1
0x4000400	            0x415c	                                 pop r12	       139	rust-demangle.c	FUNCTION_1
0x4000402	              0xc3	                                     ret	       139	rust-demangle.c	FUNCTION_1
unescape	IF,1:CALL,2:WHILE,0:SWITCH,0:functions,0:ELSE,0:FOR,0:DO,0	33
0x4000040	            0x4155	                                push r13	       336	rust-demangle.c	FUNCTION_5
0x4000042	            0x4154	                                push r12	       336	rust-demangle.c	FUNCTION_5
0x4000044	              0x55	                                push rbp	       336	rust-demangle.c	FUNCTION_5
0x4000045	              0x53	                                push rbx	       336	rust-demangle.c	FUNCTION_5
0x4000046	        0x4883ec08	                              sub rsp, 8	       336	rust-demangle.c	FUNCTION_5
0x400004a	          0x4889fd	                            mov rbp, rdi	       336	rust-demangle.c	FUNCTION_5
0x400004d	          0x4989f4	                            mov r12, rsi	       336	rust-demangle.c	FUNCTION_5
0x4000050	          0x4889d6	                            mov rsi, rdx	       336	rust-demangle.c	FUNCTION_5
0x4000053	          0x4189cd	                           mov r13d, ecx	       336	rust-demangle.c	FUNCTION_5
0x4000056	      0xb800000000	                              mov eax, 0	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x400005b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x4000062	          0x4889d7	                            mov rdi, rdx	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x4000065	            0xf2ae	              repne scasb al, byte [rdi]	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x4000067	          0x48f7d1	                                 not rcx	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x400006a	        0x488d59ff	                      lea rbx, [rcx - 1]	       337	rust-demangle.c	FUNCTION_5	CALL_1
0x400006e	          0x4889da	                            mov rdx, rbx	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000071	        0x488b7d00	                    mov rdi, qword [rbp]	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000075	      0xe800000000	                          call 0x400007a	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400007a	      0xba00000000	                              mov edx, 0	       340	rust-demangle.c	FUNCTION_5	IF_1
0x400007f	            0x85c0	                           test eax, eax	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000081	            0x7515	                           jne 0x4000098	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000083	        0x498b0424	                    mov rax, qword [r12]	       342	rust-demangle.c	FUNCTION_5
0x4000087	          0x448828	                    mov byte [rax], r13b	       342	rust-demangle.c	FUNCTION_5
0x400008a	        0x48015d00	                    add qword [rbp], rbx	       344	rust-demangle.c	FUNCTION_5
0x400008e	      0x4983042401	                      add qword [r12], 1	       345	rust-demangle.c	FUNCTION_5
0x4000093	      0xba01000000	                              mov edx, 1	       347	rust-demangle.c	FUNCTION_5
0x4000098	            0x89d0	                            mov eax, edx	       348	rust-demangle.c	FUNCTION_5
0x400009a	        0x4883c408	                              add rsp, 8	       348	rust-demangle.c	FUNCTION_5
0x400009e	              0x5b	                                 pop rbx	       348	rust-demangle.c	FUNCTION_5
0x400009f	              0x5d	                                 pop rbp	       348	rust-demangle.c	FUNCTION_5
0x40000a0	            0x415c	                                 pop r12	       348	rust-demangle.c	FUNCTION_5
0x40000a2	            0x415d	                                 pop r13	       348	rust-demangle.c	FUNCTION_5
0x40000a4	              0xc3	                                     ret	       348	rust-demangle.c	FUNCTION_5
rust_demangle_sym	IF,4:CALL,19:WHILE,1:SWITCH,1:functions,0:ELSE,2:FOR,0:DO,0	210
0x4000403	              0x55	                                push rbp	       244	rust-demangle.c	FUNCTION_4
0x4000404	              0x53	                                push rbx	       244	rust-demangle.c	FUNCTION_4
0x4000405	        0x4883ec28	                           sub rsp, 0x28	       244	rust-demangle.c	FUNCTION_4
0x4000409	    0x64488b042528	                mov rax, qword fs:[0x28]	       244	rust-demangle.c	FUNCTION_4
0x4000412	      0x4889442418	             mov qword [rsp + 0x18], rax	       244	rust-demangle.c	FUNCTION_4
0x4000417	            0x31c0	                            xor eax, eax	       244	rust-demangle.c	FUNCTION_4
0x4000419	          0x4885ff	                           test rdi, rdi	       249	rust-demangle.c	FUNCTION_4	IF_1
0x400041c	     0xf8460030000	                            je 0x4000782	       249	rust-demangle.c	FUNCTION_4	IF_1
0x4000422	          0x4889fb	                            mov rbx, rdi	       249	rust-demangle.c	FUNCTION_4	IF_1
0x4000425	      0x48897c2408	                mov qword [rsp + 8], rdi	       252	rust-demangle.c	FUNCTION_4
0x400042a	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       253	rust-demangle.c	FUNCTION_4
0x400042f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x4000436	            0xf2ae	              repne scasb al, byte [rdi]	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x4000438	          0x4889ce	                            mov rsi, rcx	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x400043b	          0x48f7d6	                                 not rsi	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x400043e	      0x488d6c33ec	             lea rbp, [rbx + rsi - 0x14]	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x4000443	      0xe911030000	                           jmp 0x4000759	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x4000448	           0xfb602	                   movzx eax, byte [rdx]	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400044b	          0x83e824	                           sub eax, 0x24	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400044e	            0x3c56	                            cmp al, 0x56	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000450	     0xf8713030000	                            ja 0x4000769	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000456	           0xfb6c0	                           movzx eax, al	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000459	    0xff24c5000000	                       jmp qword [rax*8]	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000460	      0xb92c000000	                           mov ecx, 0x2c	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x4000465	      0xba00000000	                              mov edx, 0	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x400046a	      0x488d742410	                   lea rsi, [rsp + 0x10]	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x400046f	      0x488d7c2408	                      lea rdi, [rsp + 8]	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x4000474	      0xe8c7fbffff	                       call sym.unescape	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x4000479	            0x85c0	                           test eax, eax	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x400047b	     0xf85d8020000	                           jne 0x4000759	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x4000481	      0xb940000000	                           mov ecx, 0x40	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x4000486	      0xba00000000	                              mov edx, 0	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x400048b	      0x488d742410	                   lea rsi, [rsp + 0x10]	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x4000490	      0x488d7c2408	                      lea rdi, [rsp + 8]	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x4000495	      0xe8a6fbffff	                       call sym.unescape	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x400049a	            0x85c0	                           test eax, eax	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x400049c	     0xf85b7020000	                           jne 0x4000759	       261	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_3
0x40004a2	      0xb92a000000	                           mov ecx, 0x2a	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004a7	      0xba00000000	                              mov edx, 0	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004ac	      0x488d742410	                   lea rsi, [rsp + 0x10]	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004b1	      0x488d7c2408	                      lea rdi, [rsp + 8]	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004b6	      0xe885fbffff	                       call sym.unescape	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004bb	            0x85c0	                           test eax, eax	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004bd	     0xf8596020000	                           jne 0x4000759	       262	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_4
0x40004c3	      0xb926000000	                           mov ecx, 0x26	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x40004c8	      0xba00000000	                              mov edx, 0	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x40004cd	      0x488d742410	                   lea rsi, [rsp + 0x10]	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x40004d2	      0x488d7c2408	                      lea rdi, [rsp + 8]	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x40004d7	      0xe864fbffff	                       call sym.unescape	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x40004dc	            0x85c0	                           test eax, eax	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x40004de	     0xf8575020000	                           jne 0x4000759	       263	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_5
0x40004e4	      0xb93c000000	                           mov ecx, 0x3c	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x40004e9	      0xba00000000	                              mov edx, 0	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x40004ee	      0x488d742410	                   lea rsi, [rsp + 0x10]	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x40004f3	      0x488d7c2408	                      lea rdi, [rsp + 8]	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x40004f8	      0xe843fbffff	                       call sym.unescape	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x40004fd	            0x85c0	                           test eax, eax	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x40004ff	     0xf8554020000	                           jne 0x4000759	       264	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_6
0x4000505	      0xb93e000000	                           mov ecx, 0x3e	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x400050a	      0xba00000000	                              mov edx, 0	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x400050f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000514	      0x488d7c2408	                      lea rdi, [rsp + 8]	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000519	      0xe822fbffff	                       call sym.unescape	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x400051e	            0x85c0	                           test eax, eax	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000520	     0xf8533020000	                           jne 0x4000759	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000526	      0xb928000000	                           mov ecx, 0x28	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x400052b	      0xba00000000	                              mov edx, 0	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000530	      0x488d742410	                   lea rsi, [rsp + 0x10]	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000535	      0x488d7c2408	                      lea rdi, [rsp + 8]	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x400053a	      0xe801fbffff	                       call sym.unescape	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x400053f	            0x85c0	                           test eax, eax	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000541	     0xf8512020000	                           jne 0x4000759	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000547	      0xb929000000	                           mov ecx, 0x29	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x400054c	      0xba00000000	                              mov edx, 0	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000551	      0x488d742410	                   lea rsi, [rsp + 0x10]	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000556	      0x488d7c2408	                      lea rdi, [rsp + 8]	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x400055b	      0xe8e0faffff	                       call sym.unescape	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000560	            0x85c0	                           test eax, eax	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000562	     0xf85f1010000	                           jne 0x4000759	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000568	      0xb920000000	                           mov ecx, 0x20	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x400056d	      0xba00000000	                              mov edx, 0	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000572	      0x488d742410	                   lea rsi, [rsp + 0x10]	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000577	      0x488d7c2408	                      lea rdi, [rsp + 8]	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x400057c	      0xe8bffaffff	                       call sym.unescape	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000581	            0x85c0	                           test eax, eax	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000583	     0xf85d0010000	                           jne 0x4000759	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000589	      0xb922000000	                           mov ecx, 0x22	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x400058e	      0xba00000000	                              mov edx, 0	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x4000593	      0x488d742410	                   lea rsi, [rsp + 0x10]	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x4000598	      0x488d7c2408	                      lea rdi, [rsp + 8]	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x400059d	      0xe89efaffff	                       call sym.unescape	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005a2	            0x85c0	                           test eax, eax	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005a4	     0xf85af010000	                           jne 0x4000759	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005aa	      0xb927000000	                           mov ecx, 0x27	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005af	      0xba00000000	                              mov edx, 0	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005b4	      0x488d742410	                   lea rsi, [rsp + 0x10]	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005b9	      0x488d7c2408	                      lea rdi, [rsp + 8]	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005be	      0xe87dfaffff	                       call sym.unescape	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005c3	            0x85c0	                           test eax, eax	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005c5	     0xf858e010000	                           jne 0x4000759	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005cb	      0xb92b000000	                           mov ecx, 0x2b	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005d0	      0xba00000000	                              mov edx, 0	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005d5	      0x488d742410	                   lea rsi, [rsp + 0x10]	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005da	      0x488d7c2408	                      lea rdi, [rsp + 8]	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005df	      0xe85cfaffff	                       call sym.unescape	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005e4	            0x85c0	                           test eax, eax	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005e6	     0xf856d010000	                           jne 0x4000759	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005ec	      0xb93b000000	                           mov ecx, 0x3b	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x40005f1	      0xba00000000	                              mov edx, 0	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x40005f6	      0x488d742410	                   lea rsi, [rsp + 0x10]	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x40005fb	      0x488d7c2408	                      lea rdi, [rsp + 8]	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000600	      0xe83bfaffff	                       call sym.unescape	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000605	            0x85c0	                           test eax, eax	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000607	     0xf854c010000	                           jne 0x4000759	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x400060d	      0xb95b000000	                           mov ecx, 0x5b	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000612	      0xba00000000	                              mov edx, 0	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000617	      0x488d742410	                   lea rsi, [rsp + 0x10]	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x400061c	      0x488d7c2408	                      lea rdi, [rsp + 8]	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000621	      0xe81afaffff	                       call sym.unescape	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000626	            0x85c0	                           test eax, eax	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000628	     0xf852b010000	                           jne 0x4000759	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x400062e	      0xb95d000000	                           mov ecx, 0x5d	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000633	      0xba00000000	                              mov edx, 0	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000638	      0x488d742410	                   lea rsi, [rsp + 0x10]	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x400063d	      0x488d7c2408	                      lea rdi, [rsp + 8]	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000642	      0xe8f9f9ffff	                       call sym.unescape	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000647	            0x85c0	                           test eax, eax	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000649	     0xf850a010000	                           jne 0x4000759	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x400064f	      0xb97b000000	                           mov ecx, 0x7b	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000654	      0xba00000000	                              mov edx, 0	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000659	      0x488d742410	                   lea rsi, [rsp + 0x10]	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x400065e	      0x488d7c2408	                      lea rdi, [rsp + 8]	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000663	      0xe8d8f9ffff	                       call sym.unescape	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000668	            0x85c0	                           test eax, eax	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x400066a	     0xf85e9000000	                           jne 0x4000759	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000670	      0xb97d000000	                           mov ecx, 0x7d	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x4000675	      0xba00000000	                              mov edx, 0	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x400067a	      0x488d742410	                   lea rsi, [rsp + 0x10]	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x400067f	      0x488d7c2408	                      lea rdi, [rsp + 8]	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x4000684	      0xe8b7f9ffff	                       call sym.unescape	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x4000689	            0x85c0	                           test eax, eax	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x400068b	     0xf85c8000000	                           jne 0x4000759	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x4000691	      0xb97e000000	                           mov ecx, 0x7e	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x4000696	      0xba00000000	                              mov edx, 0	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x400069b	      0x488d742410	                   lea rsi, [rsp + 0x10]	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006a0	      0x488d7c2408	                      lea rdi, [rsp + 8]	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006a5	      0xe896f9ffff	                       call sym.unescape	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006aa	            0x85c0	                           test eax, eax	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006ac	     0xf85a7000000	                           jne 0x4000759	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006b2	      0xe9b2000000	                           jmp 0x4000769	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006b7	          0x4839d3	                            cmp rbx, rdx	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006ba	            0x7406	                            je 0x40006c2	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006bc	        0x807aff3a	                cmp byte [rdx - 1], 0x3a	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006c0	            0x7514	                           jne 0x40006d6	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006c2	        0x807a0124	                cmp byte [rdx + 1], 0x24	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006c6	            0x750e	                           jne 0x40006d6	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006c8	        0x4883c201	                              add rdx, 1	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006cc	      0x4889542408	                mov qword [rsp + 8], rdx	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006d1	      0xe983000000	                           jmp 0x4000759	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x40006d6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       290	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1
0x40006db	        0x488d4801	                      lea rcx, [rax + 1]	       290	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1
0x40006df	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       290	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1
0x40006e4	        0x488d4a01	                      lea rcx, [rdx + 1]	       290	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1
0x40006e8	      0x48894c2408	                mov qword [rsp + 8], rcx	       290	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1
0x40006ed	           0xfb612	                   movzx edx, byte [rdx]	       290	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1
0x40006f0	            0x8810	                      mov byte [rax], dl	       290	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1
0x40006f2	            0xeb65	                           jmp 0x4000759	       290	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1
0x40006f4	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       293	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40006f8	            0x752a	                           jne 0x4000724	       293	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40006fa	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40006ff	        0x488d5001	                      lea rdx, [rax + 1]	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000703	      0x4889542410	             mov qword [rsp + 0x10], rdx	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000708	          0xc6003a	                    mov byte [rax], 0x3a	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400070b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000710	        0x488d5001	                      lea rdx, [rax + 1]	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000714	      0x4889542410	             mov qword [rsp + 0x10], rdx	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000719	          0xc6003a	                    mov byte [rax], 0x3a	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400071c	    0x488344240802	                  add qword [rsp + 8], 2	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000722	            0xeb35	                           jmp 0x4000759	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000724	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       303	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x4000729	        0x488d5001	                      lea rdx, [rax + 1]	       303	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x400072d	      0x4889542410	             mov qword [rsp + 0x10], rdx	       303	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x4000732	          0xc6002d	                    mov byte [rax], 0x2d	       303	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x4000735	    0x488344240801	                  add qword [rsp + 8], 1	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x400073b	            0xeb1c	                           jmp 0x4000759	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x400073d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000742	        0x488d4801	                      lea rcx, [rax + 1]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000746	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400074b	        0x488d4a01	                      lea rcx, [rdx + 1]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400074f	      0x48894c2408	                mov qword [rsp + 8], rcx	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000754	           0xfb612	                   movzx edx, byte [rdx]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000757	            0x8810	                      mov byte [rax], dl	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000759	      0x488b542408	                mov rdx, qword [rsp + 8]	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x400075e	          0x4839d5	                            cmp rbp, rdx	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x4000761	     0xf87e1fcffff	                            ja 0x4000448	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x4000767	            0xeb11	                           jmp 0x400077a	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x4000769	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       329	rust-demangle.c	FUNCTION_4
0x400076e	        0x488d5001	                      lea rdx, [rax + 1]	       329	rust-demangle.c	FUNCTION_4
0x4000772	      0x4889542410	             mov qword [rsp + 0x10], rdx	       329	rust-demangle.c	FUNCTION_4
0x4000777	          0xc6003f	                    mov byte [rax], 0x3f	       329	rust-demangle.c	FUNCTION_4
0x400077a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       331	rust-demangle.c	FUNCTION_4
0x400077f	          0xc60000	                       mov byte [rax], 0	       331	rust-demangle.c	FUNCTION_4
0x4000782	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       332	rust-demangle.c	FUNCTION_4
0x4000787	    0x644833042528	                xor rax, qword fs:[0x28]	       332	rust-demangle.c	FUNCTION_4
0x4000790	            0x7405	                            je 0x4000797	       332	rust-demangle.c	FUNCTION_4
0x4000792	      0xe800000000	                          call 0x4000797	       332	rust-demangle.c	FUNCTION_4
0x4000797	        0x4883c428	                           add rsp, 0x28	       332	rust-demangle.c	FUNCTION_4
0x400079b	              0x5b	                                 pop rbx	       332	rust-demangle.c	FUNCTION_4
0x400079c	              0x5d	                                 pop rbp	       332	rust-demangle.c	FUNCTION_4
0x400079d	              0xc3	                                     ret	       332	rust-demangle.c	FUNCTION_4
