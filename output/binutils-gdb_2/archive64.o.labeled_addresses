_bfd_archive_64_bit_slurp_armap	FOR,1:SWITCH,0:functions,0:DO,0:WHILE,0:ELSE,0:IF,14:CALL,27	189
0x4000040	            0x4157	                                push r15	        39	archive64.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        39	archive64.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	        39	archive64.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	        39	archive64.c	FUNCTION_1
0x4000048	              0x55	                                push rbp	        39	archive64.c	FUNCTION_1
0x4000049	              0x53	                                push rbx	        39	archive64.c	FUNCTION_1
0x400004a	        0x4883ec58	                           sub rsp, 0x58	        39	archive64.c	FUNCTION_1
0x400004e	          0x4889fb	                            mov rbx, rdi	        39	archive64.c	FUNCTION_1
0x4000051	    0x64488b042528	                mov rax, qword fs:[0x28]	        39	archive64.c	FUNCTION_1
0x400005a	      0x4889442448	             mov qword [rsp + 0x48], rax	        39	archive64.c	FUNCTION_1
0x400005f	            0x31c0	                            xor eax, eax	        39	archive64.c	FUNCTION_1
0x4000061	    0x4c8ba7f80000	            mov r12, qword [rdi + 0xf8] 	        40	archive64.c	FUNCTION_1	CALL_1
0x4000068	    0x49c744241800	               mov qword [r12 + 0x18], 0	        51	archive64.c	FUNCTION_1
0x4000071	          0x4889fa	                            mov rdx, rdi	        54	archive64.c	FUNCTION_1	CALL_2
0x4000074	      0xbe10000000	                           mov esi, 0x10	        54	archive64.c	FUNCTION_1	CALL_2
0x4000079	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        54	archive64.c	FUNCTION_1	CALL_2
0x400007e	      0xe800000000	                          call 0x4000083	        54	archive64.c	FUNCTION_1	CALL_2
0x4000083	      0xbd01000000	                              mov ebp, 1	        56	archive64.c	FUNCTION_1	IF_1
0x4000088	          0x4885c0	                           test rax, rax	        55	archive64.c	FUNCTION_1	IF_1
0x400008b	     0xf8467020000	                            je 0x40002f8	        55	archive64.c	FUNCTION_1	IF_1
0x4000091	      0xbd00000000	                              mov ebp, 0	        58	archive64.c	FUNCTION_1	IF_2
0x4000096	        0x4883f810	                           cmp rax, 0x10	        57	archive64.c	FUNCTION_1	IF_2
0x400009a	     0xf8558020000	                           jne 0x40002f8	        57	archive64.c	FUNCTION_1	IF_2
0x40000a0	      0xba01000000	                              mov edx, 1	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000a5	    0x48c7c6f0ffff	             mov rsi, 0xfffffffffffffff0	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000ac	          0x4889df	                            mov rdi, rbx	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000af	      0xe800000000	                          call 0x40000b4	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000b4	            0x85c0	                           test eax, eax	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000b6	     0xf853c020000	                           jne 0x40002f8	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000bc	      0x488d742430	                   lea rsi, [rsp + 0x30]	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000c1	      0xbf00000000	                              mov edi, 0	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000c6	      0xb910000000	                           mov ecx, 0x10	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000cb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000cd	           0xf97c2	                                 seta dl	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000d0	           0xf92c0	                                 setb al	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000d3	            0x38c2	                              cmp dl, al	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000d5	            0x750f	                           jne 0x40000e6	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000d7	          0x4889df	                            mov rdi, rbx	        65	archive64.c	FUNCTION_1	CALL_5
0x40000da	      0xe800000000	                          call 0x40000df	        65	archive64.c	FUNCTION_1	CALL_5
0x40000df	            0x89c5	                            mov ebp, eax	        65	archive64.c	FUNCTION_1	CALL_5
0x40000e1	      0xe912020000	                           jmp 0x40002f8	        65	archive64.c	FUNCTION_1	CALL_5
0x40000e6	      0x488d742430	                   lea rsi, [rsp + 0x30]	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000eb	      0xbf00000000	                              mov edi, 0	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000f0	      0xb910000000	                           mov ecx, 0x10	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000f5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000f7	        0x400f97c5	                                seta bpl	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000fb	           0xf92c0	                                 setb al	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000fe	            0x29c5	                            sub ebp, eax	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000100	        0x400fbeed	                          movsx ebp, bpl	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000104	            0x85ed	                           test ebp, ebp	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000106	            0x740e	                            je 0x4000116	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000108	        0x8063477f	             and byte [rbx + 0x47], 0x7f	        69	archive64.c	FUNCTION_1	IF_5	CALL_7
0x400010c	      0xbd01000000	                              mov ebp, 1	        70	archive64.c	FUNCTION_1	IF_5
0x4000111	      0xe9e2010000	                           jmp 0x40002f8	        70	archive64.c	FUNCTION_1	IF_5
0x4000116	        0x488b4308	                mov rax, qword [rbx + 8]	        73	archive64.c	FUNCTION_1	CALL_8
0x400011a	          0x4889df	                            mov rdi, rbx	        73	archive64.c	FUNCTION_1	CALL_8
0x400011d	    0xff90c0010000	                call qword [rax + 0x1c0]	        73	archive64.c	FUNCTION_1	CALL_8
0x4000123	          0x4885c0	                           test rax, rax	        74	archive64.c	FUNCTION_1	IF_6
0x4000126	     0xf84cc010000	                            je 0x40002f8	        74	archive64.c	FUNCTION_1	IF_6
0x400012c	        0x4c8b7808	                mov r15, qword [rax + 8]	        76	archive64.c	FUNCTION_1
0x4000130	          0x4889c7	                            mov rdi, rax	        77	archive64.c	FUNCTION_1	CALL_9
0x4000133	      0xe800000000	                          call 0x4000138	        77	archive64.c	FUNCTION_1	CALL_9
0x4000138	          0x4889da	                            mov rdx, rbx	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x400013b	      0xbe08000000	                              mov esi, 8	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x4000140	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x4000145	      0xe800000000	                          call 0x400014a	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x400014a	        0x4883f808	                              cmp rax, 8	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x400014e	            0x741d	                            je 0x400016d	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x4000150	      0xe800000000	                          call 0x4000155	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x4000155	          0x83f801	                              cmp eax, 1	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x4000158	     0xf849a010000	                            je 0x40002f8	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x400015e	      0xbf0a000000	                            mov edi, 0xa	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x4000163	      0xe800000000	                          call 0x4000168	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x4000168	      0xe98b010000	                           jmp 0x40002f8	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x400016d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        86	archive64.c	FUNCTION_1	CALL_13
0x4000172	      0xe800000000	                          call 0x4000177	        86	archive64.c	FUNCTION_1	CALL_13
0x4000177	          0x4989c5	                            mov r13, rax	        86	archive64.c	FUNCTION_1	CALL_13
0x400017a	    0x4c8d34c50000	                        lea r14, [rax*8]	        87	archive64.c	FUNCTION_1
0x4000182	        0x4983ef08	                              sub r15, 8	        87	archive64.c	FUNCTION_1
0x4000186	          0x4d29f7	                            sub r15, r14	        87	archive64.c	FUNCTION_1
0x4000189	          0x4c89f8	                            mov rax, r15	        87	archive64.c	FUNCTION_1
0x400018c	        0x4c893c24	                    mov qword [rsp], r15	        87	archive64.c	FUNCTION_1
0x4000190	          0x4d89ef	                            mov r15, r13	        89	archive64.c	FUNCTION_1
0x4000193	        0x49c1e704	                              shl r15, 4	        89	archive64.c	FUNCTION_1
0x4000197	      0x4a8d743801	                lea rsi, [rax + r15 + 1]	        92	archive64.c	FUNCTION_1
0x400019c	          0x4d39fd	                            cmp r13, r15	        93	archive64.c	FUNCTION_1	IF_9
0x400019f	           0xf97c2	                                 seta dl	        93	archive64.c	FUNCTION_1	IF_9
0x40001a2	          0x4d39f5	                            cmp r13, r14	        93	archive64.c	FUNCTION_1	IF_9
0x40001a5	           0xf97c0	                                 seta al	        93	archive64.c	FUNCTION_1	IF_9
0x40001a8	             0x8c2	                               or dl, al	        93	archive64.c	FUNCTION_1	IF_9
0x40001aa	            0x7505	                           jne 0x40001b1	        93	archive64.c	FUNCTION_1	IF_9
0x40001ac	          0x4939f5	                            cmp r13, rsi	        93	archive64.c	FUNCTION_1	IF_9
0x40001af	            0x760f	                           jbe 0x40001c0	        93	archive64.c	FUNCTION_1	IF_9
0x40001b1	      0xbf0a000000	                            mov edi, 0xa	        95	archive64.c	FUNCTION_1	IF_9	CALL_14
0x40001b6	      0xe800000000	                          call 0x40001bb	        95	archive64.c	FUNCTION_1	IF_9	CALL_14
0x40001bb	      0xe938010000	                           jmp 0x40002f8	        96	archive64.c	FUNCTION_1	IF_9
0x40001c0	          0x4889df	                            mov rdi, rbx	        98	archive64.c	FUNCTION_1	CALL_15
0x40001c3	      0xe800000000	                          call 0x40001c8	        98	archive64.c	FUNCTION_1	CALL_15
0x40001c8	      0x4889442410	             mov qword [rsp + 0x10], rax	        98	archive64.c	FUNCTION_1	CALL_15
0x40001cd	      0x4989442418	             mov qword [r12 + 0x18], rax	        98	archive64.c	FUNCTION_1	CALL_15
0x40001d2	          0x4885c0	                           test rax, rax	        99	archive64.c	FUNCTION_1	IF_10
0x40001d5	     0xf841d010000	                            je 0x40002f8	        99	archive64.c	FUNCTION_1	IF_10
0x40001db	          0x4901c7	                            add r15, rax	       102	archive64.c	FUNCTION_1
0x40001de	        0x488b0424	                    mov rax, qword [rsp]	       103	archive64.c	FUNCTION_1
0x40001e2	          0x4c01f8	                            add rax, r15	       103	archive64.c	FUNCTION_1
0x40001e5	      0x4889442418	             mov qword [rsp + 0x18], rax	       103	archive64.c	FUNCTION_1
0x40001ea	          0xc60000	                       mov byte [rax], 0	       103	archive64.c	FUNCTION_1
0x40001ed	          0x4c89f6	                            mov rsi, r14	       106	archive64.c	FUNCTION_1	CALL_16
0x40001f0	          0x4889df	                            mov rdi, rbx	       106	archive64.c	FUNCTION_1	CALL_16
0x40001f3	      0xe800000000	                          call 0x40001f8	       106	archive64.c	FUNCTION_1	CALL_16
0x40001f8	      0x4889442408	                mov qword [rsp + 8], rax	       106	archive64.c	FUNCTION_1	CALL_16
0x40001fd	          0x4885c0	                           test rax, rax	       107	archive64.c	FUNCTION_1	IF_11
0x4000200	     0xf84e5000000	                            je 0x40002eb	       107	archive64.c	FUNCTION_1	IF_11
0x4000206	          0x4889da	                            mov rdx, rbx	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000209	          0x4c89f6	                            mov rsi, r14	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x400020c	          0x4889c7	                            mov rdi, rax	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x400020f	      0xe800000000	                          call 0x4000214	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000214	          0x4939c6	                            cmp r14, rax	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000217	            0x7517	                           jne 0x4000230	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000219	          0x4889da	                            mov rdx, rbx	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x400021c	        0x4c8b3424	                    mov r14, qword [rsp]	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000220	          0x4c89f6	                            mov rsi, r14	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000223	          0x4c89ff	                            mov rdi, r15	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000226	      0xe800000000	                          call 0x400022b	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x400022b	          0x4939c6	                            cmp r14, rax	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x400022e	            0x7460	                            je 0x4000290	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000230	      0xe800000000	                          call 0x4000235	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x4000235	          0x83f801	                              cmp eax, 1	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x4000238	     0xf84a0000000	                            je 0x40002de	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x400023e	      0xbf0a000000	                            mov edi, 0xa	       114	archive64.c	FUNCTION_1	IF_12	CALL_20
0x4000243	      0xe800000000	                          call 0x4000248	       114	archive64.c	FUNCTION_1	IF_12	CALL_20
0x4000248	      0xe991000000	                           jmp 0x40002de	       114	archive64.c	FUNCTION_1	IF_12	CALL_20
0x400024d	      0x488b442408	                mov rax, qword [rsp + 8]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000252	        0x488d3ce8	                  lea rdi, [rax + rbp*8]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000256	      0xe800000000	                          call 0x400025b	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x400025b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000260	        0x48894108	                mov qword [rcx + 8], rax	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000264	          0x4c8939	                    mov qword [rcx], r15	       121	archive64.c	FUNCTION_1	FOR_1
0x4000267	      0x4c3b7c2418	            cmp r15, qword [rsp + 0x18] 	       122	archive64.c	FUNCTION_1	FOR_1	IF_14
0x400026c	            0x7316	                           jae 0x4000284	       122	archive64.c	FUNCTION_1	FOR_1	IF_14
0x400026e	      0xb800000000	                              mov eax, 0	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x4000273	          0x4c89f1	                            mov rcx, r14	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x4000276	          0x4c89ff	                            mov rdi, r15	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x4000279	            0xf2ae	              repne scasb al, byte [rdi]	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x400027b	          0x4889c8	                            mov rax, rcx	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x400027e	          0x48f7d0	                                 not rax	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x4000281	          0x4901c7	                            add r15, rax	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x4000284	    0x488344241010	            add qword [rsp + 0x10], 0x10	       124	archive64.c	FUNCTION_1	FOR_1
0x400028a	        0x4883c501	                              add rbp, 1	       118	archive64.c	FUNCTION_1	FOR_1
0x400028e	            0xeb0c	                           jmp 0x400029c	       118	archive64.c	FUNCTION_1	FOR_1
0x4000290	      0xbd00000000	                              mov ebp, 0	       118	archive64.c	FUNCTION_1	FOR_1
0x4000295	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x400029c	          0x4c39ed	                            cmp rbp, r13	       118	archive64.c	FUNCTION_1	FOR_1
0x400029f	            0x75ac	                           jne 0x400024d	       118	archive64.c	FUNCTION_1	FOR_1
0x40002a1	        0x41c60700	                       mov byte [r15], 0	       126	archive64.c	FUNCTION_1
0x40002a5	      0x4d896c2420	             mov qword [r12 + 0x20], r13	       128	archive64.c	FUNCTION_1
0x40002aa	          0x4889df	                            mov rdi, rbx	       129	archive64.c	FUNCTION_1	CALL_23
0x40002ad	      0xe800000000	                          call 0x40002b2	       129	archive64.c	FUNCTION_1	CALL_23
0x40002b2	          0x4889c1	                            mov rcx, rax	       129	archive64.c	FUNCTION_1	CALL_23
0x40002b5	      0xbe02000000	                              mov esi, 2	       131	archive64.c	FUNCTION_1
0x40002ba	            0x4899	                                     cqo	       131	archive64.c	FUNCTION_1
0x40002bc	          0x48f7fe	                                idiv rsi	       131	archive64.c	FUNCTION_1
0x40002bf	          0x4801d1	                            add rcx, rdx	       131	archive64.c	FUNCTION_1
0x40002c2	        0x49890c24	                    mov qword [r12], rcx	       131	archive64.c	FUNCTION_1
0x40002c6	        0x804b4780	              or byte [rbx + 0x47], 0x80	       133	archive64.c	FUNCTION_1	CALL_24
0x40002ca	      0x488b742408	                mov rsi, qword [rsp + 8]	       134	archive64.c	FUNCTION_1	CALL_25
0x40002cf	          0x4889df	                            mov rdi, rbx	       134	archive64.c	FUNCTION_1	CALL_25
0x40002d2	      0xe800000000	                          call 0x40002d7	       134	archive64.c	FUNCTION_1	CALL_25
0x40002d7	      0xbd01000000	                              mov ebp, 1	       136	archive64.c	FUNCTION_1
0x40002dc	            0xeb1a	                           jmp 0x40002f8	       136	archive64.c	FUNCTION_1
0x40002de	      0x488b742408	                mov rsi, qword [rsp + 8]	       139	archive64.c	FUNCTION_1	CALL_26
0x40002e3	          0x4889df	                            mov rdi, rbx	       139	archive64.c	FUNCTION_1	CALL_26
0x40002e6	      0xe800000000	                          call 0x40002eb	       139	archive64.c	FUNCTION_1	CALL_26
0x40002eb	      0x498b742418	            mov rsi, qword [r12 + 0x18] 	       141	archive64.c	FUNCTION_1	CALL_27
0x40002f0	          0x4889df	                            mov rdi, rbx	       141	archive64.c	FUNCTION_1	CALL_27
0x40002f3	      0xe800000000	                          call 0x40002f8	       141	archive64.c	FUNCTION_1	CALL_27
0x40002f8	            0x89e8	                            mov eax, ebp	       143	archive64.c	FUNCTION_1
0x40002fa	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       143	archive64.c	FUNCTION_1
0x40002ff	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       143	archive64.c	FUNCTION_1
0x4000308	            0x7405	                            je 0x400030f	       143	archive64.c	FUNCTION_1
0x400030a	      0xe800000000	                          call 0x400030f	       143	archive64.c	FUNCTION_1
0x400030f	        0x4883c458	                           add rsp, 0x58	       143	archive64.c	FUNCTION_1
0x4000313	              0x5b	                                 pop rbx	       143	archive64.c	FUNCTION_1
0x4000314	              0x5d	                                 pop rbp	       143	archive64.c	FUNCTION_1
0x4000315	            0x415c	                                 pop r12	       143	archive64.c	FUNCTION_1
0x4000317	            0x415d	                                 pop r13	       143	archive64.c	FUNCTION_1
0x4000319	            0x415e	                                 pop r14	       143	archive64.c	FUNCTION_1
0x400031b	            0x415f	                                 pop r15	       143	archive64.c	FUNCTION_1
0x400031d	              0xc3	                                     ret	       143	archive64.c	FUNCTION_1
_bfd_archive_64_bit_write_armap	FOR,3:SWITCH,0:functions,0:DO,0:WHILE,1:ELSE,0:IF,7:CALL,21	186
0x400031e	            0x4157	                                push r15	       155	archive64.c	FUNCTION_2
0x4000320	            0x4156	                                push r14	       155	archive64.c	FUNCTION_2
0x4000322	            0x4155	                                push r13	       155	archive64.c	FUNCTION_2
0x4000324	            0x4154	                                push r12	       155	archive64.c	FUNCTION_2
0x4000326	              0x55	                                push rbp	       155	archive64.c	FUNCTION_2
0x4000327	              0x53	                                push rbx	       155	archive64.c	FUNCTION_2
0x4000328	        0x4883ec68	                           sub rsp, 0x68	       155	archive64.c	FUNCTION_2
0x400032c	          0x4989fd	                            mov r13, rdi	       155	archive64.c	FUNCTION_2
0x400032f	            0x89f5	                            mov ebp, esi	       155	archive64.c	FUNCTION_2
0x4000331	        0x48891424	                    mov qword [rsp], rdx	       155	archive64.c	FUNCTION_2
0x4000335	          0x4189cc	                           mov r12d, ecx	       155	archive64.c	FUNCTION_2
0x4000338	    0x64488b042528	                mov rax, qword fs:[0x28]	       155	archive64.c	FUNCTION_2
0x4000341	      0x4889442458	             mov qword [rsp + 0x58], rax	       155	archive64.c	FUNCTION_2
0x4000346	            0x31c0	                            xor eax, eax	       155	archive64.c	FUNCTION_2
0x4000348	      0x458d74c808	              lea r14d, [r8 + rcx*8 + 8]	       158	archive64.c	FUNCTION_2
0x400034d	        0x418d5e07	                      lea ebx, [r14 + 7]	       166	archive64.c	FUNCTION_2	CALL_1
0x4000351	          0x83e3f8	                     and ebx, 0xfffffff8	       166	archive64.c	FUNCTION_2	CALL_1
0x4000354	    0x48b820202020	          movabs rax, 0x2020202020202020	        90	string3.h	FUNCTION_6	CALL_6
0x400035e	      0x4889442410	             mov qword [rsp + 0x10], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000363	      0x4889442418	             mov qword [rsp + 0x18], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000368	      0x4889442420	             mov qword [rsp + 0x20], rax	        90	string3.h	FUNCTION_6	CALL_6
0x400036d	      0x4889442428	             mov qword [rsp + 0x28], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000372	      0x4889442430	             mov qword [rsp + 0x30], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000377	      0x4889442438	             mov qword [rsp + 0x38], rax	        90	string3.h	FUNCTION_6	CALL_6
0x400037c	      0x4889442440	             mov qword [rsp + 0x40], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000381	    0xc74424482020	     mov dword [rsp + 0x48], 0x20202020 	        90	string3.h	FUNCTION_6	CALL_6
0x4000389	    0xc74424102f53	     mov dword [rsp + 0x10], 0x4d59532f 	        53	string3.h	FUNCTION_3	CALL_3
0x4000391	    0x66c744241436	          mov word [rsp + 0x14], 0x3436 	        53	string3.h	FUNCTION_3	CALL_3
0x4000398	      0xc64424162f	            mov byte [rsp + 0x16], 0x2f 	        53	string3.h	FUNCTION_3	CALL_3
0x400039d	            0x89da	                            mov edx, ebx	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x400039f	      0xbe0a000000	                            mov esi, 0xa	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40003a4	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40003a9	      0xe800000000	                          call 0x40003ae	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40003ae	            0x85c0	                           test eax, eax	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40003b0	     0xf8432020000	                            je 0x40005e8	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40003b6	      0xbf00000000	                              mov edi, 0	       179	archive64.c	FUNCTION_2	CALL_6
0x40003bb	      0xe800000000	                          call 0x40003c0	       179	archive64.c	FUNCTION_2	CALL_6
0x40003c0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       179	archive64.c	FUNCTION_2	CALL_6
0x40003c5	          0x4889c1	                            mov rcx, rax	       179	archive64.c	FUNCTION_2	CALL_6
0x40003c8	      0xba00000000	                              mov edx, 0	       179	archive64.c	FUNCTION_2	CALL_6
0x40003cd	      0xbe0c000000	                            mov esi, 0xc	       179	archive64.c	FUNCTION_2	CALL_6
0x40003d2	      0xe800000000	                          call 0x40003d7	       179	archive64.c	FUNCTION_2	CALL_6
0x40003d7	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	       182	archive64.c	FUNCTION_2	CALL_8
0x40003dc	      0xb900000000	                              mov ecx, 0	       182	archive64.c	FUNCTION_2	CALL_8
0x40003e1	      0xba00000000	                              mov edx, 0	       182	archive64.c	FUNCTION_2	CALL_8
0x40003e6	      0xbe06000000	                              mov esi, 6	       182	archive64.c	FUNCTION_2	CALL_8
0x40003eb	      0xe800000000	                          call 0x40003f0	       182	archive64.c	FUNCTION_2	CALL_8
0x40003f0	      0x488d7c2432	                   lea rdi, [rsp + 0x32]	       183	archive64.c	FUNCTION_2	CALL_9
0x40003f5	      0xb900000000	                              mov ecx, 0	       183	archive64.c	FUNCTION_2	CALL_9
0x40003fa	      0xba00000000	                              mov edx, 0	       183	archive64.c	FUNCTION_2	CALL_9
0x40003ff	      0xbe06000000	                              mov esi, 6	       183	archive64.c	FUNCTION_2	CALL_9
0x4000404	      0xe800000000	                          call 0x4000409	       183	archive64.c	FUNCTION_2	CALL_9
0x4000409	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       184	archive64.c	FUNCTION_2	CALL_10
0x400040e	      0xb900000000	                              mov ecx, 0	       184	archive64.c	FUNCTION_2	CALL_10
0x4000413	      0xba00000000	                              mov edx, 0	       184	archive64.c	FUNCTION_2	CALL_10
0x4000418	      0xbe08000000	                              mov esi, 8	       184	archive64.c	FUNCTION_2	CALL_10
0x400041d	      0xe800000000	                          call 0x4000422	       184	archive64.c	FUNCTION_2	CALL_10
0x4000422	    0x66c744244a60	           mov word [rsp + 0x4a], 0xa60 	       184	archive64.c	FUNCTION_2	CALL_10
0x4000429	          0x4c89ea	                            mov rdx, r13	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400042c	      0xbe3c000000	                           mov esi, 0x3c	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000431	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000436	      0xe800000000	                          call 0x400043b	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400043b	          0x4889c2	                            mov rdx, rax	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400043e	      0xb800000000	                              mov eax, 0	       191	archive64.c	FUNCTION_2	IF_2
0x4000443	        0x4883fa3c	                           cmp rdx, 0x3c	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000447	     0xf859b010000	                           jne 0x40005e8	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400044d	          0x4489e7	                           mov edi, r12d	       193	archive64.c	FUNCTION_2	CALL_13
0x4000450	      0x488d742450	                   lea rsi, [rsp + 0x50]	       193	archive64.c	FUNCTION_2	CALL_13
0x4000455	      0xe800000000	                          call 0x400045a	       193	archive64.c	FUNCTION_2	CALL_13
0x400045a	          0x4c89ea	                            mov rdx, r13	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x400045d	      0xbe08000000	                              mov esi, 8	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x4000462	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x4000467	      0xe800000000	                          call 0x400046c	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x400046c	          0x4889c2	                            mov rdx, rax	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x400046f	      0xb800000000	                              mov eax, 0	       195	archive64.c	FUNCTION_2	IF_3
0x4000474	        0x4883fa08	                              cmp rdx, 8	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x4000478	     0xf856a010000	                           jne 0x40005e8	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x400047e	    0x4d8bbde00000	            mov r15, qword [r13 + 0xe0] 	       203	archive64.c	FUNCTION_2	FOR_1
0x4000485	          0x4d85ff	                           test r15, r15	       203	archive64.c	FUNCTION_2	FOR_1
0x4000488	     0xf84c8000000	                            je 0x4000556	       203	archive64.c	FUNCTION_2	FOR_1
0x400048e	          0x4585e4	                         test r12d, r12d	       203	archive64.c	FUNCTION_2	FOR_1
0x4000491	     0xf84bf000000	                            je 0x4000556	       203	archive64.c	FUNCTION_2	FOR_1
0x4000497	          0x8d042b	                    lea eax, [rbx + rbp]	       170	archive64.c	FUNCTION_2
0x400049a	        0x4883c044	                           add rax, 0x44	       170	archive64.c	FUNCTION_2
0x400049e	      0x4889442408	                mov qword [rsp + 8], rax	       170	archive64.c	FUNCTION_2
0x40004a3	      0xbd00000000	                              mov ebp, 0	       170	archive64.c	FUNCTION_2
0x40004a8	      0xe98b000000	                           jmp 0x4000538	       170	archive64.c	FUNCTION_2
0x40004ad	            0x89d5	                            mov ebp, edx	       170	archive64.c	FUNCTION_2
0x40004af	      0x488d742450	                   lea rsi, [rsp + 0x50]	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40004b4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40004b9	      0xe800000000	                          call 0x40004be	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40004be	          0x4c89ea	                            mov rdx, r13	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x40004c1	      0xbe08000000	                              mov esi, 8	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x40004c6	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x40004cb	      0xe800000000	                          call 0x40004d0	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x40004d0	        0x4883f808	                              cmp rax, 8	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x40004d4	     0xf85f4000000	                           jne 0x40005ce	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x40004da	          0x4139ec	                           cmp r12d, ebp	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004dd	            0x7414	                            je 0x40004f3	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004df	          0x8d5501	                      lea edx, [rbp + 1]	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004e2	            0x89e8	                            mov eax, ebp	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004e4	        0x488d0440	                  lea rax, [rax + rax*2]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004e8	        0x488b0c24	                    mov rcx, qword [rsp]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004ec	      0x4c397cc108	       cmp qword [rcx + rax*8 + 8], r15 	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004f1	            0x74ba	                            je 0x40004ad	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004f3	      0x488b542408	                mov rdx, qword [rsp + 8]	       220	archive64.c	FUNCTION_2	FOR_1
0x40004f8	        0x4883c23c	                           add rdx, 0x3c	       220	archive64.c	FUNCTION_2	FOR_1
0x40004fc	      0x41f6454801	               test byte [r13 + 0x48], 1	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x4000501	            0x750b	                           jne 0x400050e	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x4000503	    0x498b87c80000	            mov rax, qword [r15 + 0xc8] 	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x400050a	        0x48035008	                add rdx, qword [rax + 8]	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x400050e	          0x4889d1	                            mov rcx, rdx	       224	archive64.c	FUNCTION_2	FOR_1
0x4000511	        0x48c1e93f	                           shr rcx, 0x3f	       224	archive64.c	FUNCTION_2	FOR_1
0x4000515	        0x488d040a	                    lea rax, [rdx + rcx]	       224	archive64.c	FUNCTION_2	FOR_1
0x4000519	          0x83e001	                              and eax, 1	       224	archive64.c	FUNCTION_2	FOR_1
0x400051c	          0x4829c8	                            sub rax, rcx	       224	archive64.c	FUNCTION_2	FOR_1
0x400051f	          0x4801d0	                            add rax, rdx	       224	archive64.c	FUNCTION_2	FOR_1
0x4000522	      0x4889442408	                mov qword [rsp + 8], rax	       224	archive64.c	FUNCTION_2	FOR_1
0x4000527	    0x4d8bbfd80000	            mov r15, qword [r15 + 0xd8] 	       205	archive64.c	FUNCTION_2	FOR_1
0x400052e	          0x4d85ff	                           test r15, r15	       203	archive64.c	FUNCTION_2	FOR_1
0x4000531	            0x7423	                            je 0x4000556	       203	archive64.c	FUNCTION_2	FOR_1
0x4000533	          0x4139ec	                           cmp r12d, ebp	       203	archive64.c	FUNCTION_2	FOR_1
0x4000536	            0x761e	                           jbe 0x4000556	       203	archive64.c	FUNCTION_2	FOR_1
0x4000538	          0x4139ec	                           cmp r12d, ebp	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400053b	            0x76b6	                           jbe 0x40004f3	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400053d	            0x89e8	                            mov eax, ebp	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400053f	        0x488d0440	                  lea rax, [rax + rax*2]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000543	        0x488b0c24	                    mov rcx, qword [rsp]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000547	      0x4c397cc108	       cmp qword [rcx + rax*8 + 8], r15 	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400054c	            0x75a5	                           jne 0x40004f3	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x400054e	          0x83c501	                              add ebp, 1	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000551	      0xe959ffffff	                           jmp 0x40004af	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x4000556	          0x4585e4	                         test r12d, r12d	       228	archive64.c	FUNCTION_2	FOR_3
0x4000559	            0x744f	                            je 0x40005aa	       228	archive64.c	FUNCTION_2	FOR_3
0x400055b	        0x488b0c24	                    mov rcx, qword [rsp]	       228	archive64.c	FUNCTION_2	FOR_3
0x400055f	          0x4889cd	                            mov rbp, rcx	       228	archive64.c	FUNCTION_2	FOR_3
0x4000562	      0x418d4424ff	                      lea eax, [r12 - 1]	       228	archive64.c	FUNCTION_2	FOR_3
0x4000567	      0x488d444003	              lea rax, [rax + rax*2 + 3]	       228	archive64.c	FUNCTION_2	FOR_3
0x400056c	        0x4c8d3cc1	                  lea r15, [rcx + rax*8]	       228	archive64.c	FUNCTION_2	FOR_3
0x4000570	        0x488b4500	                    mov rax, qword [rbp]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x4000574	          0x4c8b00	                     mov r8, qword [rax]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x4000577	      0xb800000000	                              mov eax, 0	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x400057c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x4000583	          0x4c89c7	                             mov rdi, r8	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x4000586	            0xf2ae	              repne scasb al, byte [rdi]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x4000588	          0x48f7d1	                                 not rcx	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x400058b	          0x4989cc	                            mov r12, rcx	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x400058e	          0x4c89ea	                            mov rdx, r13	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000591	          0x4889ce	                            mov rsi, rcx	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000594	          0x4c89c7	                             mov rdi, r8	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x4000597	      0xe800000000	                          call 0x400059c	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400059c	          0x4939c4	                            cmp r12, rax	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x400059f	            0x7534	                           jne 0x40005d5	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005a1	        0x4883c518	                           add rbp, 0x18	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005a5	          0x4939ef	                            cmp r15, rbp	       228	archive64.c	FUNCTION_2	FOR_3
0x40005a8	            0x75c6	                           jne 0x4000570	       228	archive64.c	FUNCTION_2	FOR_3
0x40005aa	          0x4429f3	                           sub ebx, r14d	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005ad	            0x742d	                            je 0x40005dc	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005af	          0x4c89ea	                            mov rdx, r13	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005b2	      0xbe01000000	                              mov esi, 1	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005b7	      0xbf00000000	                              mov edi, 0	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005bc	      0xe800000000	                          call 0x40005c1	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005c1	        0x4883f801	                              cmp rax, 1	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005c5	            0x751c	                           jne 0x40005e3	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005c7	          0x83eb01	                              sub ebx, 1	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005ca	            0x75e3	                           jne 0x40005af	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005cc	            0xeb1a	                           jmp 0x40005e8	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005ce	      0xb800000000	                              mov eax, 0	       216	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4
0x40005d3	            0xeb13	                           jmp 0x40005e8	       216	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4
0x40005d5	      0xb800000000	                              mov eax, 0	       233	archive64.c	FUNCTION_2	FOR_3	IF_6
0x40005da	            0xeb0c	                           jmp 0x40005e8	       233	archive64.c	FUNCTION_2	FOR_3	IF_6
0x40005dc	      0xb801000000	                              mov eax, 1	       245	archive64.c	FUNCTION_2
0x40005e1	            0xeb05	                           jmp 0x40005e8	       245	archive64.c	FUNCTION_2
0x40005e3	      0xb800000000	                              mov eax, 0	       241	archive64.c	FUNCTION_2	WHILE_1	IF_7
0x40005e8	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	       246	archive64.c	FUNCTION_2
0x40005ed	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       246	archive64.c	FUNCTION_2
0x40005f6	            0x7405	                            je 0x40005fd	       246	archive64.c	FUNCTION_2
0x40005f8	      0xe800000000	                          call 0x40005fd	       246	archive64.c	FUNCTION_2
0x40005fd	        0x4883c468	                           add rsp, 0x68	       246	archive64.c	FUNCTION_2
0x4000601	              0x5b	                                 pop rbx	       246	archive64.c	FUNCTION_2
0x4000602	              0x5d	                                 pop rbp	       246	archive64.c	FUNCTION_2
0x4000603	            0x415c	                                 pop r12	       246	archive64.c	FUNCTION_2
0x4000605	            0x415d	                                 pop r13	       246	archive64.c	FUNCTION_2
0x4000607	            0x415e	                                 pop r14	       246	archive64.c	FUNCTION_2
0x4000609	            0x415f	                                 pop r15	       246	archive64.c	FUNCTION_2
0x400060b	              0xc3	                                     ret	       246	archive64.c	FUNCTION_2
