rl_initialize_funmap	CALL,1:FOR,1:DO,0:WHILE,0:SWITCH,0:ELSE,0:IF,1:functions,0	21
0x40000dd	    0x833d00000000	               cmp dword [0x040000e4], 0	       227	funmap.c	FUNCTION_1	IF_1
0x40000e4	            0x7543	                           jne 0x4000129	       227	funmap.c	FUNCTION_1	IF_1
0x40000e6	              0x55	                                push rbp	       224	funmap.c	FUNCTION_1
0x40000e7	              0x53	                                push rbx	       224	funmap.c	FUNCTION_1
0x40000e8	        0x4883ec08	                              sub rsp, 8	       224	funmap.c	FUNCTION_1
0x40000ec	      0xbb00000000	                              mov ebx, 0	       224	funmap.c	FUNCTION_1
0x40000f1	      0xbf00000000	                              mov edi, 0	       227	funmap.c	FUNCTION_1	IF_1
0x40000f6	      0xbd00000000	                              mov ebp, 0	       227	funmap.c	FUNCTION_1	IF_1
0x40000fb	          0x488b33	                    mov rsi, qword [rbx]	       231	funmap.c	FUNCTION_1	CALL_1
0x40000fe	      0xe800000000	                          call 0x4000103	       231	funmap.c	FUNCTION_1	CALL_1
0x4000103	          0x83c501	                              add ebp, 1	       230	funmap.c	FUNCTION_1	FOR_1
0x4000106	        0x4883c310	                           add rbx, 0x10	       230	funmap.c	FUNCTION_1	FOR_1
0x400010a	        0x488b7bf8	                mov rdi, qword [rbx - 8]	       230	funmap.c	FUNCTION_1	FOR_1
0x400010e	          0x4885ff	                           test rdi, rdi	       230	funmap.c	FUNCTION_1	FOR_1
0x4000111	            0x75e8	                           jne 0x40000fb	       230	funmap.c	FUNCTION_1	FOR_1
0x4000113	    0xc70500000000	               mov dword [0x0400011d], 1	       233	funmap.c	FUNCTION_1
0x400011d	    0x892d00000000	            mov dword [0x04000123], ebp 	       234	funmap.c	FUNCTION_1
0x4000123	        0x4883c408	                              add rsp, 8	       235	funmap.c	FUNCTION_1
0x4000127	              0x5b	                                 pop rbx	       235	funmap.c	FUNCTION_1
0x4000128	              0x5d	                                 pop rbp	       235	funmap.c	FUNCTION_1
0x4000129	            0xf3c3	                                     ret	       235	funmap.c	FUNCTION_1
rl_funmap_names	CALL,3:FOR,1:DO,0:WHILE,0:SWITCH,0:ELSE,0:IF,1:functions,0	49
0x400012b	            0x4156	                                push r14	       242	funmap.c	FUNCTION_2
0x400012d	            0x4155	                                push r13	       242	funmap.c	FUNCTION_2
0x400012f	            0x4154	                                push r12	       242	funmap.c	FUNCTION_2
0x4000131	              0x55	                                push rbp	       242	funmap.c	FUNCTION_2
0x4000132	              0x53	                                push rbx	       242	funmap.c	FUNCTION_2
0x4000133	      0xe800000000	                          call 0x4000138	       247	funmap.c	FUNCTION_2	CALL_1
0x4000138	    0x488b05000000	            mov rax, qword [0x0400013f] 	       249	funmap.c	FUNCTION_2	FOR_1
0x400013f	        0x48833800	                      cmp qword [rax], 0	       249	funmap.c	FUNCTION_2	FOR_1
0x4000143	            0x7474	                            je 0x40001b9	       249	funmap.c	FUNCTION_2	FOR_1
0x4000145	    0x41bc00000000	                             mov r12d, 0	       249	funmap.c	FUNCTION_2	FOR_1
0x400014b	      0xbb00000000	                              mov ebx, 0	       249	funmap.c	FUNCTION_2	FOR_1
0x4000150	      0xbd00000000	                              mov ebp, 0	       249	funmap.c	FUNCTION_2	FOR_1
0x4000155	    0x41be00000000	                             mov r14d, 0	       249	funmap.c	FUNCTION_2	FOR_1
0x400015b	    0x41bd00000000	                             mov r13d, 0	       249	funmap.c	FUNCTION_2	FOR_1
0x4000161	          0x8d4502	                      lea eax, [rbp + 2]	       251	funmap.c	FUNCTION_2	FOR_1	IF_1
0x4000164	          0x4439f0	                           cmp eax, r14d	       251	funmap.c	FUNCTION_2	FOR_1	IF_1
0x4000167	            0x7e16	                           jle 0x400017f	       251	funmap.c	FUNCTION_2	FOR_1	IF_1
0x4000169	        0x4183c614	                          add r14d, 0x14	       253	funmap.c	FUNCTION_2	FOR_1	IF_1
0x400016d	          0x4963f6	                        movsxd rsi, r14d	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000170	        0x48c1e603	                              shl rsi, 3	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000174	          0x4c89ef	                            mov rdi, r13	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000177	      0xe800000000	                          call 0x400017c	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x400017c	          0x4989c5	                            mov r13, rax	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x400017f	    0x488b05000000	            mov rax, qword [0x04000186] 	       257	funmap.c	FUNCTION_2	FOR_1
0x4000186	        0x4a8b0420	              mov rax, qword [rax + r12]	       257	funmap.c	FUNCTION_2	FOR_1
0x400018a	          0x488b00	                    mov rax, qword [rax]	       257	funmap.c	FUNCTION_2	FOR_1
0x400018d	      0x4b89442500	              mov qword [r13 + r12], rax	       257	funmap.c	FUNCTION_2	FOR_1
0x4000192	    0x49c744dd0800	          mov qword [r13 + rbx*8 + 8], 0	       258	funmap.c	FUNCTION_2	FOR_1
0x400019b	          0x83c501	                              add ebp, 1	       249	funmap.c	FUNCTION_2	FOR_1
0x400019e	          0x4863dd	                         movsxd rbx, ebp	       249	funmap.c	FUNCTION_2	FOR_1
0x40001a1	    0x4c8d24dd0000	                        lea r12, [rbx*8]	       249	funmap.c	FUNCTION_2	FOR_1
0x40001a9	    0x488b05000000	            mov rax, qword [0x040001b0] 	       249	funmap.c	FUNCTION_2	FOR_1
0x40001b0	      0x48833cd800	              cmp qword [rax + rbx*8], 0	       249	funmap.c	FUNCTION_2	FOR_1
0x40001b5	            0x75aa	                           jne 0x4000161	       249	funmap.c	FUNCTION_2	FOR_1
0x40001b7	            0xeb0b	                           jmp 0x40001c4	       249	funmap.c	FUNCTION_2	FOR_1
0x40001b9	      0xbb00000000	                              mov ebx, 0	       249	funmap.c	FUNCTION_2	FOR_1
0x40001be	    0x41bd00000000	                             mov r13d, 0	       249	funmap.c	FUNCTION_2	FOR_1
0x40001c4	      0xb900000000	                              mov ecx, 0	       261	funmap.c	FUNCTION_2	CALL_3
0x40001c9	      0xba08000000	                              mov edx, 8	       261	funmap.c	FUNCTION_2	CALL_3
0x40001ce	          0x4889de	                            mov rsi, rbx	       261	funmap.c	FUNCTION_2	CALL_3
0x40001d1	          0x4c89ef	                            mov rdi, r13	       261	funmap.c	FUNCTION_2	CALL_3
0x40001d4	      0xe800000000	                          call 0x40001d9	       261	funmap.c	FUNCTION_2	CALL_3
0x40001d9	          0x4c89e8	                            mov rax, r13	       263	funmap.c	FUNCTION_2
0x40001dc	              0x5b	                                 pop rbx	       263	funmap.c	FUNCTION_2
0x40001dd	              0x5d	                                 pop rbp	       263	funmap.c	FUNCTION_2
0x40001de	            0x415c	                                 pop r12	       263	funmap.c	FUNCTION_2
0x40001e0	            0x415d	                                 pop r13	       263	funmap.c	FUNCTION_2
0x40001e2	            0x415e	                                 pop r14	       263	funmap.c	FUNCTION_2
0x40001e4	              0xc3	                                     ret	       263	funmap.c	FUNCTION_2
