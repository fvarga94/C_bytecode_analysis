_bfd_elf_section_offset	functions,0:CALL,5:FOR,0:WHILE,0:SWITCH,1:IF,1:DO,0:ELSE,0	42
0x40141c0	      0x440fb74224	           movzx r8d, word [rdx + 0x24] 	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40141c5	          0x4989d1	                             mov r9, rdx	     11332	elf.c	FUNCTION_198
0x40141c8	      0x6641c1e807	                              shr r8w, 7	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40141cd	        0x4183e007	                              and r8d, 7	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40141d1	        0x4180f801	                              cmp r8b, 1	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40141d5	            0x7461	                            je 0x4014238	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40141d7	        0x4180f803	                              cmp r8b, 3	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40141db	            0x7453	                            je 0x4014230	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40141dd	              0x55	                                push rbp	     11332	elf.c	FUNCTION_198
0x40141de	              0x53	                                push rbx	     11332	elf.c	FUNCTION_198
0x40141df	          0x4889cb	                            mov rbx, rcx	     11332	elf.c	FUNCTION_198
0x40141e2	        0x4883ec08	                              sub rsp, 8	     11332	elf.c	FUNCTION_198
0x40141e6	        0xf6422304	               test byte [rdx + 0x23], 4	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x40141ea	            0x7438	                            je 0x4014224	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x40141ec	        0x488b4708	                mov rax, qword [rdi + 8]	     11345	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_4
0x40141f0	        0x488b6a38	            mov rbp, qword [rdx + 0x38] 	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x40141f4	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x40141fb	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x4014202	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4014206	          0xc0e803	                               shr al, 3	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4014209	           0xfb6c0	                           movzx eax, al	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401420c	          0x4829c5	                            sub rbp, rax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401420f	      0xe800000000	                          call 0x4014214	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4014214	            0x31d2	                            xor edx, edx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4014216	            0x89c1	                            mov ecx, eax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4014218	          0x4889e8	                            mov rax, rbp	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401421b	          0x48f7f1	                                 div rcx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401421e	          0x4829d8	                            sub rax, rbx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4014221	          0x4889c3	                            mov rbx, rax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4014224	        0x4883c408	                              add rsp, 8	     11354	elf.c	FUNCTION_198
0x4014228	          0x4889d8	                            mov rax, rbx	     11354	elf.c	FUNCTION_198
0x401422b	              0x5b	                                 pop rbx	     11354	elf.c	FUNCTION_198
0x401422c	              0x5d	                                 pop rbp	     11354	elf.c	FUNCTION_198
0x401422d	              0xc3	                                     ret	     11354	elf.c	FUNCTION_198
0x401422e	            0x6690	                                     nop	     11354	elf.c	FUNCTION_198
0x4014230	      0xe900000000	                           jmp 0x4014235	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x4014235	           0xf1f00	                         nop dword [rax]	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x4014238	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401423f	          0x4c89cf	                             mov rdi, r9	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x4014242	          0x4889ca	                            mov rdx, rcx	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x4014245	    0x488bb0d80000	            mov rsi, qword [rax + 0xd8] 	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x401424c	      0xe900000000	                           jmp 0x4014251	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
_bfd_elf_print_private_bfd_data	functions,0:CALL,35:FOR,6:WHILE,0:SWITCH,1:IF,18:DO,0:ELSE,1	737
0x400f0f0	            0x4157	                                push r15	      1610	elf.c	FUNCTION_33
0x400f0f2	            0x4156	                                push r14	      1610	elf.c	FUNCTION_33
0x400f0f4	            0x4155	                                push r13	      1610	elf.c	FUNCTION_33
0x400f0f6	            0x4154	                                push r12	      1610	elf.c	FUNCTION_33
0x400f0f8	              0x55	                                push rbp	      1610	elf.c	FUNCTION_33
0x400f0f9	              0x53	                                push rbx	      1610	elf.c	FUNCTION_33
0x400f0fa	          0x4889fd	                            mov rbp, rdi	      1610	elf.c	FUNCTION_33
0x400f0fd	          0x4889f3	                            mov rbx, rsi	      1610	elf.c	FUNCTION_33
0x400f100	        0x4883ec68	                           sub rsp, 0x68	      1610	elf.c	FUNCTION_33
0x400f104	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	elf.c	FUNCTION_33
0x400f10d	      0x4889442458	             mov qword [rsp + 0x58], rax	      1610	elf.c	FUNCTION_33
0x400f112	            0x31c0	                            xor eax, eax	      1610	elf.c	FUNCTION_33
0x400f114	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1616	elf.c	FUNCTION_33	CALL_1
0x400f11b	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1614	elf.c	FUNCTION_33
0x400f124	        0x4c8b6060	            mov r12, qword [rax + 0x60] 	      1616	elf.c	FUNCTION_33	CALL_1
0x400f128	          0x4d85e4	                           test r12, r12	      1617	elf.c	FUNCTION_33	IF_1
0x400f12b	     0xf84b7020000	                            je 0x400f3e8	      1617	elf.c	FUNCTION_33	IF_1
0x400f131	      0xba05000000	                              mov edx, 5	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400f136	      0xbe00000000	                              mov esi, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400f13b	      0xbf00000000	                              mov edi, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400f140	      0xe800000000	                          call 0x400f145	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400f145	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f14a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_63
0x400f14d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f150	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f152	      0xe800000000	                          call 0x400f157	        97	stdio2.h	CALL_63
0x400f157	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1622	elf.c	FUNCTION_33	IF_1	CALL_3
0x400f15e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1622	elf.c	FUNCTION_33	IF_1	CALL_3
0x400f161	            0x85c0	                           test eax, eax	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f163	     0xf847f020000	                            je 0x400f3e8	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f169	        0x448d68ff	                     lea r13d, [rax - 1]	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f16d	        0x4983c501	                              add r13, 1	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f171	        0x49c1e506	                              shl r13, 6	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f175	          0x4d01e5	                            add r13, r12	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f178	      0xe989010000	                           jmp 0x400f306	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f17d	           0xf1f00	                         nop dword [rax]	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f180	        0x4183f802	                              cmp r8d, 2	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f184	     0xf8406030000	                            je 0x400f490	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f18a	     0xf8730020000	                            ja 0x400f3c0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f190	          0x4585c0	                           test r8d, r8d	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f193	      0xb900000000	                              mov ecx, 0	      1590	elf.c	FUNCTION_32	SWITCH_1
0x400f198	            0x7416	                            je 0x400f1b0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f19a	        0x4183f801	                              cmp r8d, 1	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f19e	      0xb900000000	                              mov ecx, 0	      1591	elf.c	FUNCTION_32	SWITCH_1
0x400f1a3	     0xf859e010000	                           jne 0x400f347	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f1a9	     0xf1f80000000	                         nop dword [rax]	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f1b0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400f1b5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f1ba	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f1bd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f1bf	      0xe800000000	                          call 0x400f1c4	        97	stdio2.h	CALL_63
0x400f1c4	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400f1c9	          0x4889de	                            mov rsi, rbx	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400f1cc	          0x4889ef	                            mov rdi, rbp	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400f1cf	      0xe800000000	                          call 0x400f1d4	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400f1d4	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_63
0x400f1d7	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_63
0x400f1dc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f1e1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x400f1e6	      0xe800000000	                          call 0x400f1eb	        97	stdio2.h	CALL_63
0x400f1eb	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400f1f0	          0x4889de	                            mov rsi, rbx	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400f1f3	          0x4889ef	                            mov rdi, rbp	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400f1f6	      0xe800000000	                          call 0x400f1fb	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400f1fb	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_63
0x400f1fe	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_63
0x400f203	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f208	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x400f20d	      0xe800000000	                          call 0x400f212	        97	stdio2.h	CALL_63
0x400f212	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400f217	          0x4889de	                            mov rsi, rbx	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400f21a	          0x4889ef	                            mov rdi, rbp	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400f21d	      0xe800000000	                          call 0x400f222	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400f222	      0x498b7c2438	            mov rdi, qword [r12 + 0x38] 	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x400f227	      0xe800000000	                          call 0x400f22c	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x400f22c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400f231	            0x89c1	                            mov ecx, eax	        97	stdio2.h	CALL_63
0x400f233	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f238	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f23b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f23d	      0xe800000000	                          call 0x400f242	        97	stdio2.h	CALL_63
0x400f242	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_63
0x400f245	      0xba12000000	                           mov edx, 0x12	        97	stdio2.h	CALL_63
0x400f24a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f24f	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x400f254	      0xe800000000	                          call 0x400f259	        97	stdio2.h	CALL_63
0x400f259	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400f25e	          0x4889de	                            mov rsi, rbx	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400f261	          0x4889ef	                            mov rdi, rbp	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400f264	      0xe800000000	                          call 0x400f269	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400f269	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_63
0x400f26c	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_63
0x400f271	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f276	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x400f27b	      0xe800000000	                          call 0x400f280	        97	stdio2.h	CALL_63
0x400f280	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400f285	          0x4889de	                            mov rsi, rbx	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400f288	          0x4889ef	                            mov rdi, rbp	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400f28b	      0xe800000000	                          call 0x400f290	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400f290	      0x498b442408	                mov rax, qword [r12 + 8]	      1647	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f295	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f298	          0x4889c2	                            mov rdx, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f29b	          0x83e201	                              and edx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f29e	        0x4883fa01	                              cmp rdx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2a2	          0x4889c2	                            mov rdx, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2a5	            0x19f6	                            sbb esi, esi	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2a7	          0x83e202	                              and edx, 2	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2aa	          0x83e6b5	                     and esi, 0xffffffb5	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2ad	        0x4883fa01	                              cmp rdx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2b1	            0x19d2	                            sbb edx, edx	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2b3	          0x83e004	                              and eax, 4	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2b6	        0x448d4e78	                   lea r9d, [rsi + 0x78]	        97	stdio2.h	CALL_63
0x400f2ba	          0x83e2b6	                     and edx, 0xffffffb6	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2bd	        0x4883f801	                              cmp rax, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2c1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f2c6	            0x19c9	                            sbb ecx, ecx	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2c8	        0x448d4277	                   lea r8d, [rdx + 0x77]	        97	stdio2.h	CALL_63
0x400f2cc	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f2ce	          0x83e1bb	                     and ecx, 0xffffffbb	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2d1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400f2d6	          0x83c172	                           add ecx, 0x72	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2d9	      0xe800000000	                          call 0x400f2de	        97	stdio2.h	CALL_63
0x400f2de	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400f2e3	          0x83e1f8	                     and ecx, 0xfffffff8	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400f2e6	     0xf8584000000	                           jne 0x400f370	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400f2ec	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_63
0x400f2ef	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_63
0x400f2f4	        0x4983c440	                           add r12, 0x40	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f2f8	      0xe800000000	                          call 0x400f2fd	        97	stdio2.h	CALL_63
0x400f2fd	          0x4d39ec	                            cmp r12, r13	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f300	     0xf84e2000000	                            je 0x400f3e8	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400f306	        0x4d8b0424	                     mov r8, qword [r12]	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_4
0x400f30a	        0x4183f805	                              cmp r8d, 5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f30e	     0xf845c010000	                            je 0x400f470	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f314	     0xf8666feffff	                           jbe 0x400f180	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f31a	    0x4181f850e574	                     cmp r8d, 0x6474e550	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f321	     0xf8459010000	                            je 0x400f480	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f327	            0x7767	                            ja 0x400f390	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f329	        0x4183f806	                              cmp r8d, 6	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f32d	      0xb900000000	                              mov ecx, 0	      1596	elf.c	FUNCTION_32	SWITCH_1
0x400f332	     0xf8478feffff	                            je 0x400f1b0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f338	        0x4183f807	                              cmp r8d, 7	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f33c	      0xb900000000	                              mov ecx, 0	      1597	elf.c	FUNCTION_32	SWITCH_1
0x400f341	     0xf8469feffff	                            je 0x400f1b0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f347	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400f34c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400f351	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_204	CALL_1
0x400f356	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400f35b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x400f35d	      0xe800000000	                          call 0x400f362	        33	stdio2.h	FUNCTION_204	CALL_1
0x400f362	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400f367	      0xe944feffff	                           jmp 0x400f1b0	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400f36c	         0xf1f4000	                         nop dword [rax]	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400f370	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400f375	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f37a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f37d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f37f	      0xe800000000	                          call 0x400f384	        97	stdio2.h	CALL_63
0x400f384	      0xe963ffffff	                           jmp 0x400f2ec	        97	stdio2.h	CALL_63
0x400f389	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_63
0x400f390	    0x4181f851e574	                     cmp r8d, 0x6474e551	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f397	      0xb900000000	                              mov ecx, 0	      1599	elf.c	FUNCTION_32	SWITCH_1
0x400f39c	     0xf840efeffff	                            je 0x400f1b0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3a2	    0x4181f852e574	                     cmp r8d, 0x6474e552	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3a9	      0xb900000000	                              mov ecx, 0	      1600	elf.c	FUNCTION_32	SWITCH_1
0x400f3ae	     0xf84fcfdffff	                            je 0x400f1b0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3b4	            0xeb91	                           jmp 0x400f347	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3c0	        0x4183f803	                              cmp r8d, 3	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3c4	      0xb900000000	                              mov ecx, 0	      1593	elf.c	FUNCTION_32	SWITCH_1
0x400f3c9	     0xf84e1fdffff	                            je 0x400f1b0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3cf	        0x4183f804	                              cmp r8d, 4	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3d3	      0xb900000000	                              mov ecx, 0	      1594	elf.c	FUNCTION_32	SWITCH_1
0x400f3d8	     0xf84d2fdffff	                            je 0x400f1b0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3de	      0xe964ffffff	                           jmp 0x400f347	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3e3	       0xf1f440000	                   nop dword [rax + rax]	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400f3e8	      0xbe00000000	                              mov esi, 0	      1654	elf.c	FUNCTION_33	CALL_11
0x400f3ed	          0x4889ef	                            mov rdi, rbp	      1654	elf.c	FUNCTION_33	CALL_11
0x400f3f0	      0xe800000000	                          call 0x400f3f5	      1654	elf.c	FUNCTION_33	CALL_11
0x400f3f5	          0x4885c0	                           test rax, rax	      1655	elf.c	FUNCTION_33	IF_4
0x400f3f8	          0x4989c7	                            mov r15, rax	      1654	elf.c	FUNCTION_33	CALL_11
0x400f3fb	     0xf84e9020000	                            je 0x400f6ea	      1655	elf.c	FUNCTION_33	IF_4
0x400f401	      0xba05000000	                              mov edx, 5	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400f406	      0xbe00000000	                              mov esi, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400f40b	      0xbf00000000	                              mov edi, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400f410	      0xe800000000	                          call 0x400f415	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400f415	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f41a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_63
0x400f41d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f420	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f422	      0xe800000000	                          call 0x400f427	        97	stdio2.h	CALL_63
0x400f427	      0x488d542428	                   lea rdx, [rsp + 0x28]	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400f42c	          0x4c89fe	                            mov rsi, r15	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400f42f	          0x4889ef	                            mov rdi, rbp	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400f432	      0xe800000000	                          call 0x400f437	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400f437	            0x85c0	                           test eax, eax	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400f439	            0x7565	                           jne 0x400f4a0	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400f43b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400f440	          0x4885ff	                           test rdi, rdi	      1846	elf.c	FUNCTION_33	IF_18
0x400f443	            0x7405	                            je 0x400f44a	      1846	elf.c	FUNCTION_33	IF_18
0x400f445	      0xe800000000	                          call 0x400f44a	      1847	elf.c	FUNCTION_33	CALL_35
0x400f44a	            0x31c0	                            xor eax, eax	      1848	elf.c	FUNCTION_33
0x400f44c	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	      1849	elf.c	FUNCTION_33
0x400f451	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1849	elf.c	FUNCTION_33
0x400f45a	     0xf85cc090000	                           jne 0x400fe2c	      1849	elf.c	FUNCTION_33
0x400f460	        0x4883c468	                           add rsp, 0x68	      1849	elf.c	FUNCTION_33
0x400f464	              0x5b	                                 pop rbx	      1849	elf.c	FUNCTION_33
0x400f465	              0x5d	                                 pop rbp	      1849	elf.c	FUNCTION_33
0x400f466	            0x415c	                                 pop r12	      1849	elf.c	FUNCTION_33
0x400f468	            0x415d	                                 pop r13	      1849	elf.c	FUNCTION_33
0x400f46a	            0x415e	                                 pop r14	      1849	elf.c	FUNCTION_33
0x400f46c	            0x415f	                                 pop r15	      1849	elf.c	FUNCTION_33
0x400f46e	              0xc3	                                     ret	      1849	elf.c	FUNCTION_33
0x400f46f	              0x90	                                     nop	      1849	elf.c	FUNCTION_33
0x400f470	      0xb900000000	                              mov ecx, 0	      1595	elf.c	FUNCTION_32	SWITCH_1
0x400f475	      0xe936fdffff	                           jmp 0x400f1b0	      1595	elf.c	FUNCTION_32	SWITCH_1
0x400f47a	    0x660f1f440000	                    nop word [rax + rax]	      1595	elf.c	FUNCTION_32	SWITCH_1
0x400f480	      0xb900000000	                              mov ecx, 0	      1598	elf.c	FUNCTION_32	SWITCH_1
0x400f485	      0xe926fdffff	                           jmp 0x400f1b0	      1598	elf.c	FUNCTION_32	SWITCH_1
0x400f48a	    0x660f1f440000	                    nop word [rax + rax]	      1598	elf.c	FUNCTION_32	SWITCH_1
0x400f490	      0xb900000000	                              mov ecx, 0	      1592	elf.c	FUNCTION_32	SWITCH_1
0x400f495	      0xe916fdffff	                           jmp 0x400f1b0	      1592	elf.c	FUNCTION_32	SWITCH_1
0x400f49a	    0x660f1f440000	                    nop word [rax + rax]	      1592	elf.c	FUNCTION_32	SWITCH_1
0x400f4a0	    0x498b87e00000	            mov rax, qword [r15 + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400f4a7	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400f4aa	            0x740a	                            je 0x400f4b6	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400f4ac	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400f4b2	            0x85c0	                           test eax, eax	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400f4b4	            0x7570	                           jne 0x400f526	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400f4b6	    0x4981ff000000	                              cmp r15, 0	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400f4bd	     0xf849a080000	                            je 0x400fd5d	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400f4c3	      0x41f6472110	           test byte [r15 + 0x21], 0x10 	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400f4c8	     0xf8522060000	                           jne 0x400faf0	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400f4ce	    0x4981ff000000	                              cmp r15, 0	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400f4d5	     0xf8440090000	                            je 0x400fe1b	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400f4db	        0x488b4508	                mov rax, qword [rbp + 8]	      6470	elf.c	FUNCTION_78	CALL_7
0x400f4df	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400f4e6	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x400f4ed	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x400f4f0	            0x741c	                            je 0x400f50e	      6471	elf.c	FUNCTION_78	IF_5
0x400f4f2	      0x488d742430	                   lea rsi, [rsp + 0x30]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400f4f7	    0xc7442430fffe	     mov dword [rsp + 0x30], 0xfffffeff 	      6473	elf.c	FUNCTION_78	IF_5
0x400f4ff	          0x4889ef	                            mov rdi, rbp	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400f502	          0x4889f2	                            mov rdx, rsi	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400f505	          0x4c89fe	                            mov rsi, r15	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400f508	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400f50a	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400f50c	            0x7514	                           jne 0x400f522	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400f50e	      0xbf0f000000	                            mov edi, 0xf	      6480	elf.c	FUNCTION_78	CALL_8
0x400f513	      0xe800000000	                          call 0x400f518	      6480	elf.c	FUNCTION_78	CALL_8
0x400f518	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6480	elf.c	FUNCTION_78	CALL_8
0x400f51d	      0xe91effffff	                           jmp 0x400f440	      6480	elf.c	FUNCTION_78	CALL_8
0x400f522	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x400f526	      0x3dfffeffff	                     cmp eax, 0xfffffeff	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400f52b	     0xf840affffff	                            je 0x400f43b	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400f531	        0x488b5508	                mov rdx, qword [rbp + 8]	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400f535	    0x488d0cc50000	                        lea rcx, [rax*8]	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400f53d	    0x4c8baa680300	           mov r13, qword [rdx + 0x368] 	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400f544	    0x498b95000300	           mov rdx, qword [r13 + 0x300] 	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400f54b	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400f54f	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      1676	elf.c	FUNCTION_33	IF_4
0x400f554	      0x440fb67206	              movzx r14d, byte [rdx + 6]	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400f559	          0x4939c6	                            cmp r14, rax	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400f55c	     0xf8750040000	                            ja 0x400f9b2	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400f562	          0x4c29f0	                            sub rax, r14	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f565	          0x4c01e0	                            add rax, r12	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f568	      0x4889442410	             mov qword [rsp + 0x10], rax	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f56d	     0xf82b1080000	                            jb 0x400fe24	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f573	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f57a	        0x4c8b7a50	            mov r15, qword [rdx + 0x50] 	      1674	elf.c	FUNCTION_33	IF_4	CALL_17
0x400f57e	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f582	        0x488b0408	              mov rax, qword [rax + rcx]	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f586	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f589	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f58d	      0x488d442430	                   lea rax, [rsp + 0x30]	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f592	      0x4889442408	                mov qword [rsp + 8], rax	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f597	          0x4889c2	                            mov rdx, rax	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f59a	      0xe9b7000000	                           jmp 0x400f656	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f59f	              0x90	                                     nop	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400f5a0	        0x4883ff0e	                            cmp rdi, 0xe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5a4	     0xf84ef070000	                            je 0x400fd99	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5aa	     0xf87c0020000	                            ja 0x400f870	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5b0	        0x4883ff07	                              cmp rdi, 7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5b4	     0xf8411080000	                            je 0x400fdcb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5ba	     0xf8788030000	                            ja 0x400f948	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5c0	        0x4883ff03	                              cmp rdi, 3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5c4	     0xf84f7070000	                            je 0x400fdc1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5ca	     0xf86f8060000	                           jbe 0x400fcc8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5d0	        0x4883ff05	                              cmp rdi, 5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5d4	      0xb900000000	                              mov ecx, 0	      1714	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5d9	            0x7415	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5db	      0xb900000000	                              mov ecx, 0	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5e0	      0xb800000000	                              mov eax, 0	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5e5	        0x480f47c8	                          cmova rcx, rax	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5e9	     0xf1f80000000	                         nop dword [rax]	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f5f0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400f5f5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f5fa	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f5fd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f5ff	      0xe800000000	                          call 0x400f604	        97	stdio2.h	CALL_63
0x400f604	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_63
0x400f609	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f60e	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x400f613	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_63
0x400f616	      0xe800000000	                          call 0x400f61b	        97	stdio2.h	CALL_63
0x400f61b	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400f620	          0x4889de	                            mov rsi, rbx	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400f623	          0x4889ef	                            mov rdi, rbp	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400f626	      0xe800000000	                          call 0x400f62b	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400f62b	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_63
0x400f62e	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_63
0x400f633	          0x4d01f4	                            add r12, r14	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f636	      0xe800000000	                          call 0x400f63b	        97	stdio2.h	CALL_63
0x400f63b	      0x4c3b642410	            cmp r12, qword [rsp + 0x10] 	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f640	     0xf8791000000	                            ja 0x400f6d7	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f646	        0x488b4508	                mov rax, qword [rbp + 8]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f64a	      0x488b542408	                mov rdx, qword [rsp + 8]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f64f	    0x4c8ba8680300	           mov r13, qword [rax + 0x368] 	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f656	          0x4889ef	                            mov rdi, rbp	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f659	          0x4c89e6	                            mov rsi, r12	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f65c	          0x41ffd7	                                call r15	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400f65f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400f664	          0x4885ff	                           test rdi, rdi	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400f667	            0x746e	                            je 0x400f6d7	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400f669	        0x4883ff1d	                           cmp rdi, 0x1d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f66d	     0xf8430070000	                            je 0x400fda3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f673	     0xf8627ffffff	                           jbe 0x400f5a0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f679	    0x4881fffcfeff	                     cmp rdi, 0x6ffffefc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f680	     0xf8431070000	                            je 0x400fdb7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f686	     0xf8794010000	                            ja 0x400f820	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f68c	    0x4881fffbfdff	                     cmp rdi, 0x6ffffdfb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f693	     0xf8414070000	                            je 0x400fdad	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f699	     0xf8661020000	                           jbe 0x400f900	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f69f	    0x4881fffffdff	                     cmp rdi, 0x6ffffdff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6a6	     0xf8465070000	                            je 0x400fe11	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6ac	     0xf8701050000	                            ja 0x400fbb3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6b2	    0x4881fffdfdff	                     cmp rdi, 0x6ffffdfd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6b9	      0xb900000000	                              mov ecx, 0	      1747	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6be	     0xf842cffffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6c4	      0xb900000000	                              mov ecx, 0	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6c9	      0xb800000000	                              mov eax, 0	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6ce	        0x480f47c8	                          cmova rcx, rax	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6d2	      0xe919ffffff	                           jmp 0x400f5f0	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6d7	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f6dc	      0xe800000000	                          call 0x400f6e1	      1789	elf.c	FUNCTION_33	IF_4	CALL_22
0x400f6e1	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1790	elf.c	FUNCTION_33	IF_4
0x400f6ea	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400f6f1	    0x8b90840c0000	           mov edx, dword [rax + 0xc84] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400f6f7	            0x85d2	                           test edx, edx	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400f6f9	     0xf8409010000	                            je 0x400f808	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400f6ff	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400f707	     0xf84ad020000	                            je 0x400f9ba	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400f70d	    0x8b88880c0000	           mov ecx, dword [rax + 0xc88] 	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400f713	            0x85c9	                           test ecx, ecx	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400f715	     0xf84c8020000	                            je 0x400f9e3	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400f71b	    0x4883b8500300	              cmp qword [rax + 0x350], 0	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400f723	     0xf8491020000	                            je 0x400f9ba	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400f729	            0x85d2	                           test edx, edx	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400f72b	     0xf85b2020000	                           jne 0x400f9e3	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400f731	      0xba05000000	                              mov edx, 5	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400f736	      0xbe00000000	                              mov esi, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400f73b	      0xbf00000000	                              mov edi, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400f740	      0xe800000000	                          call 0x400f745	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400f745	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f74a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_63
0x400f74d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f750	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f752	      0xe800000000	                          call 0x400f757	        97	stdio2.h	CALL_63
0x400f757	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f75e	    0x4c8ba8500300	           mov r13, qword [rax + 0x350] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f765	          0x4d85ed	                           test r13, r13	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f768	     0xf84a8000000	                            je 0x400f816	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f76e	    0x41bc00000000	                             mov r12d, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400f774	         0xf1f4000	                         nop dword [rax]	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400f778	        0x498b6d28	            mov rbp, qword [r13 + 0x28] 	      1835	elf.c	FUNCTION_33	IF_17	FOR_5
0x400f77c	      0xba05000000	                              mov edx, 5	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400f781	      0xbe00000000	                              mov esi, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400f786	      0xbf00000000	                              mov edi, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400f78b	          0x4885ed	                           test rbp, rbp	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400f78e	        0x490f44ec	                          cmove rbp, r12	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400f792	      0xe800000000	                          call 0x400f797	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400f797	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_63
0x400f79a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_63
0x400f79d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f7a2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f7a4	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f7a7	      0xe800000000	                          call 0x400f7ac	        97	stdio2.h	CALL_63
0x400f7ac	        0x498b6d30	            mov rbp, qword [r13 + 0x30] 	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7b0	          0x4885ed	                           test rbp, rbp	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7b3	            0x7441	                            je 0x400f7f6	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7b5	           0xf1f00	                         nop dword [rax]	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7b8	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1839	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7bc	      0x440fb74508	               movzx r8d, word [rbp + 8]	        97	stdio2.h	CALL_63
0x400f7c1	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400f7c4	      0x440fb74d0a	            movzx r9d, word [rbp + 0xa] 	        97	stdio2.h	CALL_63
0x400f7c9	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_63
0x400f7cd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400f7d2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f7d7	          0x4885c0	                           test rax, rax	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7da	        0x490f44c4	                          cmove rax, r12	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7de	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_63
0x400f7e2	              0x50	                                push rax	        97	stdio2.h	CALL_63
0x400f7e3	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400f7e5	      0xe800000000	                          call 0x400f7ea	        97	stdio2.h	CALL_63
0x400f7ea	        0x488b6d28	            mov rbp, qword [rbp + 0x28] 	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7ee	              0x5f	                                 pop rdi	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7ef	            0x4158	                                  pop r8	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7f1	          0x4885ed	                           test rbp, rbp	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7f4	            0x75c2	                           jne 0x400f7b8	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400f7f6	        0x4d8b6d38	            mov r13, qword [r13 + 0x38] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f7fa	          0x4d85ed	                           test r13, r13	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f7fd	     0xf8575ffffff	                           jne 0x400f778	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f803	            0xeb11	                           jmp 0x400f816	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f805	           0xf1f00	                         nop dword [rax]	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400f808	    0x8bb0880c0000	           mov esi, dword [rax + 0xc88] 	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400f80e	            0x85f6	                           test esi, esi	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400f810	     0xf8505ffffff	                           jne 0x400f71b	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400f816	      0xb801000000	                              mov eax, 1	      1843	elf.c	FUNCTION_33
0x400f81b	      0xe92cfcffff	                           jmp 0x400f44c	      1843	elf.c	FUNCTION_33
0x400f820	    0x4881fffbffff	                     cmp rdi, 0x6ffffffb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f827	     0xf84da050000	                            je 0x400fe07	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f82d	     0xf8685000000	                           jbe 0x400f8b8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f833	    0x4881ffffffff	                     cmp rdi, 0x6fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f83a	     0xf84bd050000	                            je 0x400fdfd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f840	     0xf870a030000	                            ja 0x400fb50	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f846	    0x4881fffdffff	                     cmp rdi, 0x6ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f84d	      0xb900000000	                              mov ecx, 0	      1761	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f852	     0xf8498fdffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f858	      0xb900000000	                              mov ecx, 0	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f85d	      0xb800000000	                              mov eax, 0	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f862	        0x480f47c8	                          cmova rcx, rax	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f866	      0xe985fdffff	                           jmp 0x400f5f0	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f86b	       0xf1f440000	                   nop dword [rax + rax]	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f870	        0x4883ff15	                           cmp rdi, 0x15	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f874	     0xf8479050000	                            je 0x400fdf3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f87a	     0xf8600010000	                           jbe 0x400f980	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f880	        0x4883ff19	                           cmp rdi, 0x19	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f884	     0xf845f050000	                            je 0x400fde9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f88a	     0xf8798030000	                            ja 0x400fc28	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f890	        0x4883ff17	                           cmp rdi, 0x17	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f894	      0xb900000000	                              mov ecx, 0	      1732	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f899	     0xf8451fdffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f89f	      0xb900000000	                              mov ecx, 0	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8a4	      0xb800000000	                              mov eax, 0	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8a9	        0x480f47c8	                          cmova rcx, rax	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8ad	      0xe93efdffff	                           jmp 0x400f5f0	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8b2	    0x660f1f440000	                    nop word [rax + rax]	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8b8	    0x4881fffffeff	                     cmp rdi, 0x6ffffeff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8bf	     0xf841a050000	                            je 0x400fddf	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8c5	     0xf86a5030000	                           jbe 0x400fc70	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8cb	    0x4881fff9ffff	                     cmp rdi, 0x6ffffff9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8d2	      0xb900000000	                              mov ecx, 0	      1756	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8d7	     0xf8413fdffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8dd	      0xb900000000	                              mov ecx, 0	      1757	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8e2	     0xf8708fdffff	                            ja 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8e8	    0x4881fff0ffff	                     cmp rdi, 0x6ffffff0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8ef	      0xb900000000	                              mov ecx, 0	      1759	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8f4	     0xf84f6fcffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8fa	      0xe9d9020000	                           jmp 0x400fbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f8ff	              0x90	                                     nop	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f900	        0x4883ff21	                           cmp rdi, 0x21	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f904	     0xf84cb040000	                            je 0x400fdd5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f90a	     0xf86d8030000	                           jbe 0x400fce8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f910	    0x4881fff9fdff	                     cmp rdi, 0x6ffffdf9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f917	      0xb900000000	                              mov ecx, 0	      1743	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f91c	     0xf84cefcffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f922	      0xb900000000	                              mov ecx, 0	      1744	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f927	     0xf87c3fcffff	                            ja 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f92d	    0x4881fff8fdff	                     cmp rdi, 0x6ffffdf8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f934	      0xb900000000	                              mov ecx, 0	      1742	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f939	     0xf84b1fcffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f93f	      0xe994020000	                           jmp 0x400fbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f944	         0xf1f4000	                         nop dword [rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f948	        0x4883ff0a	                            cmp rdi, 0xa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f94c	     0xf841f040000	                            je 0x400fd71	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f952	     0xf8648030000	                           jbe 0x400fca0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f958	        0x4883ff0c	                            cmp rdi, 0xc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f95c	      0xb900000000	                              mov ecx, 0	      1721	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f961	     0xf8489fcffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f967	      0xb900000000	                              mov ecx, 0	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f96c	      0xb800000000	                              mov eax, 0	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f971	        0x480f47c8	                          cmova rcx, rax	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f975	      0xe976fcffff	                           jmp 0x400f5f0	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f97a	    0x660f1f440000	                    nop word [rax + rax]	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f980	        0x4883ff11	                           cmp rdi, 0x11	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f984	     0xf84fb030000	                            je 0x400fd85	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f98a	     0xf86ba020000	                           jbe 0x400fc4a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f990	        0x4883ff13	                           cmp rdi, 0x13	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f994	      0xb900000000	                              mov ecx, 0	      1728	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f999	     0xf8451fcffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f99f	      0xb900000000	                              mov ecx, 0	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f9a4	      0xb800000000	                              mov eax, 0	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f9a9	        0x480f47c8	                          cmova rcx, rax	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f9ad	      0xe93efcffff	                           jmp 0x400f5f0	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400f9b2	          0x4c89e7	                            mov rdi, r12	      1676	elf.c	FUNCTION_33	IF_4
0x400f9b5	      0xe986faffff	                           jmp 0x400f440	      1676	elf.c	FUNCTION_33	IF_4
0x400f9ba	            0x31f6	                            xor esi, esi	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400f9bc	          0x4889ef	                            mov rdi, rbp	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400f9bf	      0xe800000000	                          call 0x400f9c4	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400f9c4	            0x85c0	                           test eax, eax	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400f9c6	     0xf847efaffff	                            je 0x400f44a	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400f9cc	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400f9d3	    0x448ba0840c00	          mov r12d, dword [rax + 0xc84] 	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400f9da	          0x4585e4	                         test r12d, r12d	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400f9dd	     0xf84f8000000	                            je 0x400fadb	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400f9e3	      0xba05000000	                              mov edx, 5	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400f9e8	      0xbe00000000	                              mov esi, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400f9ed	      0xbf00000000	                              mov edi, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400f9f2	      0xe800000000	                          call 0x400f9f7	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400f9f7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400f9fc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_63
0x400f9ff	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400fa02	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400fa04	      0xe800000000	                          call 0x400fa09	        97	stdio2.h	CALL_63
0x400fa09	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400fa10	    0x4c8ba8480300	           mov r13, qword [rax + 0x348] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400fa17	          0x4d85ed	                           test r13, r13	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400fa1a	     0xf84bb000000	                            je 0x400fadb	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400fa20	    0x41be00000000	                             mov r14d, 0	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400fa26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400fa30	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      1809	elf.c	FUNCTION_33	IF_15	FOR_3
0x400fa34	      0x410fb74d04	               movzx ecx, word [r13 + 4]	        97	stdio2.h	CALL_63
0x400fa39	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400fa3e	      0x450fb74502	               movzx r8d, word [r13 + 2]	        97	stdio2.h	CALL_63
0x400fa43	        0x4d8b4d08	                 mov r9, qword [r13 + 8]	        97	stdio2.h	CALL_63
0x400fa47	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400fa4c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400fa4f	          0x4885c0	                           test rax, rax	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400fa52	        0x490f44c6	                          cmove rax, r14	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400fa56	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_63
0x400fa5a	              0x50	                                push rax	        97	stdio2.h	CALL_63
0x400fa5b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400fa5d	      0xe800000000	                          call 0x400fa62	        97	stdio2.h	CALL_63
0x400fa62	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400fa66	            0x415a	                                 pop r10	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400fa68	            0x415b	                                 pop r11	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400fa6a	          0x4885c0	                           test rax, rax	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400fa6d	            0x7458	                            je 0x400fac7	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400fa6f	      0x4883781800	               cmp qword [rax + 0x18], 0	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400fa74	            0x7451	                            je 0x400fac7	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400fa76	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_63
0x400fa79	      0xbf09000000	                              mov edi, 9	        97	stdio2.h	CALL_63
0x400fa7e	      0xe800000000	                          call 0x400fa83	        97	stdio2.h	CALL_63
0x400fa83	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400fa87	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400fa8b	          0x4d85e4	                           test r12, r12	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400fa8e	            0x742a	                            je 0x400faba	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400fa90	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	      1819	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400fa95	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400fa9a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400fa9f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400faa2	          0x4885c9	                           test rcx, rcx	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400faa5	        0x490f44ce	                          cmove rcx, r14	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400faa9	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400faab	      0xe800000000	                          call 0x400fab0	        97	stdio2.h	CALL_63
0x400fab0	      0x4d8b642418	            mov r12, qword [r12 + 0x18] 	      1817	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400fab5	          0x4d85e4	                           test r12, r12	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400fab8	            0x75d6	                           jne 0x400fa90	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400faba	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_63
0x400fabd	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_63
0x400fac2	      0xe800000000	                          call 0x400fac7	        97	stdio2.h	CALL_63
0x400fac7	        0x4d8b6d30	            mov r13, qword [r13 + 0x30] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400facb	          0x4d85ed	                           test r13, r13	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400face	     0xf855cffffff	                           jne 0x400fa30	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400fad4	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400fadb	    0x448b88880c00	           mov r9d, dword [rax + 0xc88] 	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400fae2	          0x4585c9	                           test r9d, r9d	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400fae5	     0xf842bfdffff	                            je 0x400f816	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400faeb	      0xe941fcffff	                           jmp 0x400f731	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400faf0	    0x48b990ffffff	                 movabs rcx, 0x7ffffff90	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400fafa	      0xbaf2ffffff	                     mov edx, 0xfffffff2	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400faff	        0x488b4508	                mov rax, qword [rbp + 8]	      6470	elf.c	FUNCTION_78	CALL_7
0x400fb03	    0x4c8ba8680300	           mov r13, qword [rax + 0x368] 	      6470	elf.c	FUNCTION_78	CALL_7
0x400fb0a	    0x498b85b80000	            mov rax, qword [r13 + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x400fb11	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x400fb14	     0xf842afaffff	                            je 0x400f544	      6471	elf.c	FUNCTION_78	IF_5
0x400fb1a	      0x488d742430	                   lea rsi, [rsp + 0x30]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb1f	      0x48894c2408	                mov qword [rsp + 8], rcx	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb24	        0x89542430	             mov dword [rsp + 0x30], edx	      6473	elf.c	FUNCTION_78	IF_5
0x400fb28	          0x4889ef	                            mov rdi, rbp	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb2b	          0x4889f2	                            mov rdx, rsi	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb2e	          0x4c89fe	                            mov rsi, r15	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb31	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb33	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb35	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb3a	     0xf85e2f9ffff	                           jne 0x400f522	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb40	        0x488b4508	                mov rax, qword [rbp + 8]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb44	    0x4c8ba8680300	           mov r13, qword [rax + 0x368] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb4b	      0xe9f4f9ffff	                           jmp 0x400f544	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400fb50	    0x4881fffeffff	                     cmp rdi, 0x7ffffffe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fb57	     0xf841e020000	                            je 0x400fd7b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fb5d	    0x4881ffffffff	                     cmp rdi, 0x7fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fb64	     0xf84b0010000	                            je 0x400fd1a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fb6a	    0x4881fffdffff	                     cmp rdi, 0x7ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fb71	            0x7565	                           jne 0x400fbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fb73	      0xb900000000	                              mov ecx, 0	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fb78	     0xf1f84000000	                   nop dword [rax + rax]	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fb80	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400fb85	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x400fb88	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x400fb8a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x400fb8f	      0xe800000000	                          call 0x400fb94	        97	stdio2.h	CALL_63
0x400fb94	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1779	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1
0x400fb99	      0xbf00000000	                              mov edi, 0	       331	elf.c	FUNCTION_17	IF_1
0x400fb9e	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x400fba0	     0xf859a010000	                           jne 0x400fd40	       330	elf.c	FUNCTION_17	IF_1
0x400fba6	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_63
0x400fba9	      0xe800000000	                          call 0x400fbae	        97	stdio2.h	CALL_63
0x400fbae	      0xe978faffff	                           jmp 0x400f62b	        97	stdio2.h	CALL_63
0x400fbb3	    0x4881fffafeff	                     cmp rdi, 0x6ffffefa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fbba	     0xf84cf010000	                            je 0x400fd8f	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fbc0	     0xf875e010000	                            ja 0x400fd24	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fbc6	    0x4881fff5feff	                     cmp rdi, 0x6ffffef5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fbcd	      0xb900000000	                              mov ecx, 0	      1767	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fbd2	     0xf8418faffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fbd8	    0x498b85d00100	           mov rax, qword [r13 + 0x1d0] 	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400fbdf	      0xb900000000	                              mov ecx, 0	      1686	elf.c	FUNCTION_33	IF_4	FOR_2
0x400fbe4	          0x4885c0	                           test rax, rax	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400fbe7	            0x7405	                            je 0x400fbee	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400fbe9	            0xffd0	                                call rax	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400fbeb	          0x4889c1	                            mov rcx, rax	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400fbee	          0x803900	                       cmp byte [rcx], 0	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_19
0x400fbf1	     0xf85f9f9ffff	                           jne 0x400f5f0	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_19
0x400fbf7	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400fbfc	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400fc01	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400fc06	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_204	CALL_1
0x400fc0b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400fc10	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x400fc12	      0xe800000000	                          call 0x400fc17	        33	stdio2.h	FUNCTION_204	CALL_1
0x400fc17	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x400fc1c	      0xe9cff9ffff	                           jmp 0x400f5f0	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x400fc21	     0xf1f80000000	                         nop dword [rax]	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x400fc28	        0x4883ff1b	                           cmp rdi, 0x1b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc2c	      0xb900000000	                              mov ecx, 0	      1736	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc31	     0xf84b9f9ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc37	      0xb900000000	                              mov ecx, 0	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc3c	      0xb800000000	                              mov eax, 0	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc41	        0x480f47c8	                          cmova rcx, rax	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc45	      0xe9a6f9ffff	                           jmp 0x400f5f0	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc4a	        0x4883ff0f	                            cmp rdi, 0xf	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc4e	     0xf84da000000	                            je 0x400fd2e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc54	        0x4883ff10	                           cmp rdi, 0x10	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc58	      0xb900000000	                              mov ecx, 0	      1725	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc5d	     0xf848df9ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc63	      0xe970ffffff	                           jmp 0x400fbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc68	     0xf1f84000000	                   nop dword [rax + rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc70	    0x4881fffdfeff	                     cmp rdi, 0x6ffffefd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc77	      0xb900000000	                              mov ecx, 0	      1753	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc7c	     0xf846ef9ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc82	    0x4881fffefeff	                     cmp rdi, 0x6ffffefe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc89	      0xb900000000	                              mov ecx, 0	      1754	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc8e	     0xf845cf9ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc94	      0xe93fffffff	                           jmp 0x400fbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fc99	     0xf1f80000000	                         nop dword [rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fca0	        0x4883ff08	                              cmp rdi, 8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fca4	      0xb900000000	                              mov ecx, 0	      1717	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fca9	     0xf8441f9ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcaf	        0x4883ff09	                              cmp rdi, 9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcb3	      0xb900000000	                              mov ecx, 0	      1718	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcb8	     0xf8432f9ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcbe	      0xe915ffffff	                           jmp 0x400fbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcc3	       0xf1f440000	                   nop dword [rax + rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcc8	        0x4883ff01	                              cmp rdi, 1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fccc	            0x7442	                            je 0x400fd10	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcce	        0x4883ff02	                              cmp rdi, 2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcd2	      0xb900000000	                              mov ecx, 0	      1711	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcd7	     0xf8413f9ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcdd	      0xe9f6feffff	                           jmp 0x400fbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fce2	    0x660f1f440000	                    nop word [rax + rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fce8	        0x4883ff1e	                           cmp rdi, 0x1e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcec	      0xb900000000	                              mov ecx, 0	      1739	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcf1	     0xf84f9f8ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcf7	        0x4883ff20	                           cmp rdi, 0x20	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fcfb	      0xb900000000	                              mov ecx, 0	      1740	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd00	     0xf84eaf8ffff	                            je 0x400f5f0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd06	      0xe9cdfeffff	                           jmp 0x400fbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd0b	       0xf1f440000	                   nop dword [rax + rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd10	      0xb900000000	                              mov ecx, 0	      1710	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd15	      0xe966feffff	                           jmp 0x400fb80	      1710	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd1a	      0xb900000000	                              mov ecx, 0	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd1f	      0xe95cfeffff	                           jmp 0x400fb80	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd24	      0xb900000000	                              mov ecx, 0	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd29	      0xe952feffff	                           jmp 0x400fb80	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd2e	      0xb900000000	                              mov ecx, 0	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd33	      0xe948feffff	                           jmp 0x400fb80	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd38	     0xf1f84000000	                   nop dword [rax + rax]	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd40	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd44	          0x4889ef	                            mov rdi, rbp	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd47	      0xe8141dffff	call sym.bfd_elf_string_from_elf_section.part.20	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd4c	          0x4885c0	                           test rax, rax	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400fd4f	          0x4889c7	                            mov rdi, rax	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400fd52	     0xf854efeffff	                           jne 0x400fba6	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400fd58	      0xe9def6ffff	                           jmp 0x400f43b	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400fd5d	    0x48b988ffffff	                 movabs rcx, 0x7ffffff88	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400fd67	      0xbaf1ffffff	                     mov edx, 0xfffffff1	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400fd6c	      0xe98efdffff	                           jmp 0x400faff	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400fd71	      0xb900000000	                              mov ecx, 0	      1719	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd76	      0xe975f8ffff	                           jmp 0x400f5f0	      1719	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd7b	      0xb900000000	                              mov ecx, 0	      1765	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd80	      0xe96bf8ffff	                           jmp 0x400f5f0	      1765	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd85	      0xb900000000	                              mov ecx, 0	      1726	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd8a	      0xe961f8ffff	                           jmp 0x400f5f0	      1726	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd8f	      0xb900000000	                              mov ecx, 0	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd94	      0xe9e7fdffff	                           jmp 0x400fb80	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd99	      0xb900000000	                              mov ecx, 0	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fd9e	      0xe9ddfdffff	                           jmp 0x400fb80	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fda3	      0xb900000000	                              mov ecx, 0	      1738	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fda8	      0xe9d3fdffff	                           jmp 0x400fb80	      1738	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdad	      0xb900000000	                              mov ecx, 0	      1745	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdb2	      0xe939f8ffff	                           jmp 0x400f5f0	      1745	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdb7	      0xb900000000	                              mov ecx, 0	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdbc	      0xe9bffdffff	                           jmp 0x400fb80	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdc1	      0xb900000000	                              mov ecx, 0	      1712	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdc6	      0xe925f8ffff	                           jmp 0x400f5f0	      1712	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdcb	      0xb900000000	                              mov ecx, 0	      1716	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdd0	      0xe91bf8ffff	                           jmp 0x400f5f0	      1716	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdd5	      0xb900000000	                              mov ecx, 0	      1741	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdda	      0xe911f8ffff	                           jmp 0x400f5f0	      1741	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fddf	      0xb900000000	                              mov ecx, 0	      1755	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fde4	      0xe907f8ffff	                           jmp 0x400f5f0	      1755	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fde9	      0xb900000000	                              mov ecx, 0	      1734	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdee	      0xe9fdf7ffff	                           jmp 0x400f5f0	      1734	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdf3	      0xb900000000	                              mov ecx, 0	      1730	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdf8	      0xe9f3f7ffff	                           jmp 0x400f5f0	      1730	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fdfd	      0xb900000000	                              mov ecx, 0	      1763	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fe02	      0xe9e9f7ffff	                           jmp 0x400f5f0	      1763	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fe07	      0xb900000000	                              mov ecx, 0	      1758	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fe0c	      0xe9dff7ffff	                           jmp 0x400f5f0	      1758	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fe11	      0xb900000000	                              mov ecx, 0	      1749	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fe16	      0xe9d5f7ffff	                           jmp 0x400f5f0	      1749	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400fe1b	            0x31c9	                            xor ecx, ecx	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400fe1d	            0x31d2	                            xor edx, edx	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400fe1f	      0xe9dbfcffff	                           jmp 0x400faff	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400fe24	          0x4c89e7	                            mov rdi, r12	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400fe27	      0xe9b0f8ffff	                           jmp 0x400f6dc	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400fe2c	      0xe800000000	                          call 0x400fe31	      1849	elf.c	FUNCTION_33
elfcore_write_register_note	functions,0:CALL,44:FOR,0:WHILE,0:SWITCH,0:IF,22:DO,0:ELSE,0	257
0x4013c20	          0x4889c8	                            mov rax, rcx	     11034	elf.c	FUNCTION_190
0x4013c23	        0x4883ec08	                              sub rsp, 8	     11034	elf.c	FUNCTION_190
0x4013c27	          0x4989fa	                            mov r10, rdi	     11034	elf.c	FUNCTION_190
0x4013c2a	          0x4989f3	                            mov r11, rsi	     11034	elf.c	FUNCTION_190
0x4013c2d	      0xbf00000000	                              mov edi, 0	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4013c32	      0xb906000000	                              mov ecx, 6	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4013c37	          0x4889c6	                            mov rsi, rax	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4013c3a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4013c3c	     0xf8416020000	                            je 0x4013e58	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4013c42	      0xbf00000000	                              mov edi, 0	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4013c47	      0xb909000000	                              mov ecx, 9	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4013c4c	          0x4889c6	                            mov rsi, rax	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4013c4f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4013c51	     0xf8441020000	                            je 0x4013e98	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4013c57	      0xbf00000000	                              mov edi, 0	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4013c5c	      0xb90c000000	                            mov ecx, 0xc	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4013c61	          0x4889c6	                            mov rsi, rax	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4013c64	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4013c66	            0x7548	                           jne 0x4013cb0	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4013c68	        0x498b4208	                mov rax, qword [r10 + 8]	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4013c6c	      0xb900000000	                              mov ecx, 0	     10788	elf.c	FUNCTION_170	ELSE_1
0x4013c71	          0x4c89de	                            mov rsi, r11	     10789	elf.c	FUNCTION_170	CALL_2
0x4013c74	          0x4c89d7	                            mov rdi, r10	     10789	elf.c	FUNCTION_170	CALL_2
0x4013c77	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4013c7e	        0x83780c09	                cmp dword [rax + 0xc], 9	     10788	elf.c	FUNCTION_170	ELSE_1
0x4013c82	      0xb800000000	                              mov eax, 0	     10788	elf.c	FUNCTION_170	ELSE_1
0x4013c87	        0x480f44c8	                          cmove rcx, rax	     10788	elf.c	FUNCTION_170	ELSE_1
0x4013c8b	        0x4883ec08	                              sub rsp, 8	     10789	elf.c	FUNCTION_170	CALL_2
0x4013c8f	            0x4151	                                 push r9	     10789	elf.c	FUNCTION_170	CALL_2
0x4013c91	          0x4d89c1	                              mov r9, r8	     10789	elf.c	FUNCTION_170	CALL_2
0x4013c94	    0x41b802020000	                          mov r8d, 0x202	     10789	elf.c	FUNCTION_170	CALL_2
0x4013c9a	      0xe800000000	                          call 0x4013c9f	     10789	elf.c	FUNCTION_170	CALL_2
0x4013c9f	              0x5a	                                 pop rdx	     11040	elf.c	FUNCTION_190	CALL_6
0x4013ca0	              0x59	                                 pop rcx	     11040	elf.c	FUNCTION_190	CALL_6
0x4013ca1	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013ca5	              0xc3	                                     ret	     11080	elf.c	FUNCTION_190
0x4013ca6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11080	elf.c	FUNCTION_190
0x4013cb0	      0xbf00000000	                              mov edi, 0	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4013cb5	      0xb90d000000	                            mov ecx, 0xd	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4013cba	          0x4889c6	                            mov rsi, rax	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4013cbd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4013cbf	     0xf84eb010000	                            je 0x4013eb0	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4013cc5	      0xbf00000000	                              mov edi, 0	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4013cca	      0xb90d000000	                            mov ecx, 0xd	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4013ccf	          0x4889c6	                            mov rsi, rax	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4013cd2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4013cd4	     0xf84a6010000	                            je 0x4013e80	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4013cda	      0xbf00000000	                              mov edi, 0	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4013cdf	      0xb914000000	                           mov ecx, 0x14	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4013ce4	          0x4889c6	                            mov rsi, rax	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4013ce7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4013ce9	     0xf84f1010000	                            je 0x4013ee0	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4013cef	      0xbf00000000	                              mov edi, 0	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4013cf4	      0xb910000000	                           mov ecx, 0x10	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4013cf9	          0x4889c6	                            mov rsi, rax	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4013cfc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4013cfe	     0xf84f4010000	                            je 0x4013ef8	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4013d04	      0xbf00000000	                              mov edi, 0	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4013d09	      0xb911000000	                           mov ecx, 0x11	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4013d0e	          0x4889c6	                            mov rsi, rax	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4013d11	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4013d13	     0xf84f7010000	                            je 0x4013f10	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4013d19	      0xbf00000000	                              mov edi, 0	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4013d1e	      0xb912000000	                           mov ecx, 0x12	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4013d23	          0x4889c6	                            mov rsi, rax	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4013d26	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4013d28	     0xf84fa010000	                            je 0x4013f28	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4013d2e	      0xbf00000000	                              mov edi, 0	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4013d33	      0xb90f000000	                            mov ecx, 0xf	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4013d38	          0x4889c6	                            mov rsi, rax	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4013d3b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4013d3d	     0xf84fd010000	                            je 0x4013f40	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4013d43	      0xbf00000000	                              mov edi, 0	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4013d48	      0xb911000000	                           mov ecx, 0x11	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4013d4d	          0x4889c6	                            mov rsi, rax	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4013d50	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4013d52	     0xf8470010000	                            je 0x4013ec8	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4013d58	      0xbf00000000	                              mov edi, 0	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4013d5d	      0xb915000000	                           mov ecx, 0x15	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4013d62	          0x4889c6	                            mov rsi, rax	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4013d65	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4013d67	     0xf84eb010000	                            je 0x4013f58	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4013d6d	      0xbf00000000	                              mov edi, 0	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4013d72	      0xb916000000	                           mov ecx, 0x16	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4013d77	          0x4889c6	                            mov rsi, rax	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4013d7a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4013d7c	     0xf84ea010000	                            je 0x4013f6c	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4013d82	      0xbf00000000	                              mov edi, 0	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4013d87	      0xb90e000000	                            mov ecx, 0xe	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4013d8c	          0x4889c6	                            mov rsi, rax	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4013d8f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4013d91	     0xf84e9010000	                            je 0x4013f80	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4013d97	      0xbf00000000	                              mov edi, 0	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4013d9c	      0xb913000000	                           mov ecx, 0x13	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4013da1	          0x4889c6	                            mov rsi, rax	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4013da4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4013da6	     0xf84e8010000	                            je 0x4013f94	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4013dac	      0xbf00000000	                              mov edi, 0	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4013db1	      0xb914000000	                           mov ecx, 0x14	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4013db6	          0x4889c6	                            mov rsi, rax	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4013db9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4013dbb	     0xf84e7010000	                            je 0x4013fa8	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4013dc1	      0xbf00000000	                              mov edi, 0	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4013dc6	      0xb910000000	                           mov ecx, 0x10	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4013dcb	          0x4889c6	                            mov rsi, rax	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4013dce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4013dd0	     0xf84e6010000	                            je 0x4013fbc	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4013dd6	      0xbf00000000	                              mov edi, 0	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4013ddb	      0xb910000000	                           mov ecx, 0x10	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4013de0	          0x4889c6	                            mov rsi, rax	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4013de3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4013de5	     0xf84e5010000	                            je 0x4013fd0	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4013deb	      0xbf00000000	                              mov edi, 0	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4013df0	      0xb90d000000	                            mov ecx, 0xd	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4013df5	          0x4889c6	                            mov rsi, rax	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4013df8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4013dfa	     0xf84e4010000	                            je 0x4013fe4	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4013e00	      0xbf00000000	                              mov edi, 0	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4013e05	      0xb90f000000	                            mov ecx, 0xf	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4013e0a	          0x4889c6	                            mov rsi, rax	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4013e0d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4013e0f	     0xf84e3010000	                            je 0x4013ff8	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4013e15	      0xbf00000000	                              mov edi, 0	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4013e1a	      0xb914000000	                           mov ecx, 0x14	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4013e1f	          0x4889c6	                            mov rsi, rax	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4013e22	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4013e24	     0xf84e2010000	                            je 0x401400c	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4013e2a	      0xbf00000000	                              mov edi, 0	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4013e2f	      0xb914000000	                           mov ecx, 0x14	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4013e34	          0x4889c6	                            mov rsi, rax	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4013e37	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4013e39	     0xf85e1010000	                           jne 0x4014020	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4013e3f	      0xb903040000	                          mov ecx, 0x403	     11023	elf.c	FUNCTION_189	CALL_1
0x4013e44	          0x4c89de	                            mov rsi, r11	     11023	elf.c	FUNCTION_189	CALL_1
0x4013e47	          0x4c89d7	                            mov rdi, r10	     11023	elf.c	FUNCTION_189	CALL_1
0x4013e4a	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013e4e	      0xe90ddbfeff	 jmp sym.elfcore_write_note.constprop.30	     11023	elf.c	FUNCTION_189	CALL_1
0x4013e53	       0xf1f440000	                   nop dword [rax + rax]	     11023	elf.c	FUNCTION_189	CALL_1
0x4013e58	        0x4883ec08	                              sub rsp, 8	     10764	elf.c	FUNCTION_168	CALL_1
0x4013e5c	          0x4c89de	                            mov rsi, r11	     10764	elf.c	FUNCTION_168	CALL_1
0x4013e5f	          0x4c89d7	                            mov rdi, r10	     10764	elf.c	FUNCTION_168	CALL_1
0x4013e62	            0x4151	                                 push r9	     10764	elf.c	FUNCTION_168	CALL_1
0x4013e64	      0xb900000000	                              mov ecx, 0	     10764	elf.c	FUNCTION_168	CALL_1
0x4013e69	          0x4d89c1	                              mov r9, r8	     10764	elf.c	FUNCTION_168	CALL_1
0x4013e6c	    0x41b802000000	                              mov r8d, 2	     10764	elf.c	FUNCTION_168	CALL_1
0x4013e72	      0xe800000000	                          call 0x4013e77	     10764	elf.c	FUNCTION_168	CALL_1
0x4013e77	              0x5e	                                 pop rsi	     11036	elf.c	FUNCTION_190	CALL_2
0x4013e78	              0x5f	                                 pop rdi	     11036	elf.c	FUNCTION_190	CALL_2
0x4013e79	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013e7d	              0xc3	                                     ret	     11080	elf.c	FUNCTION_190
0x4013e7e	            0x6690	                                     nop	     11080	elf.c	FUNCTION_190
0x4013e80	      0xb902010000	                          mov ecx, 0x102	     10813	elf.c	FUNCTION_172	CALL_1
0x4013e85	          0x4c89de	                            mov rsi, r11	     10813	elf.c	FUNCTION_172	CALL_1
0x4013e88	          0x4c89d7	                            mov rdi, r10	     10813	elf.c	FUNCTION_172	CALL_1
0x4013e8b	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013e8f	      0xe9ccdafeff	 jmp sym.elfcore_write_note.constprop.30	     10813	elf.c	FUNCTION_172	CALL_1
0x4013e94	         0xf1f4000	                         nop dword [rax]	     10813	elf.c	FUNCTION_172	CALL_1
0x4013e98	      0xb97f2be646	                     mov ecx, 0x46e62b7f	     10776	elf.c	FUNCTION_169	CALL_1
0x4013e9d	          0x4c89de	                            mov rsi, r11	     10776	elf.c	FUNCTION_169	CALL_1
0x4013ea0	          0x4c89d7	                            mov rdi, r10	     10776	elf.c	FUNCTION_169	CALL_1
0x4013ea3	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013ea7	      0xe9b4dafeff	 jmp sym.elfcore_write_note.constprop.30	     10776	elf.c	FUNCTION_169	CALL_1
0x4013eac	         0xf1f4000	                         nop dword [rax]	     10776	elf.c	FUNCTION_169	CALL_1
0x4013eb0	      0xb900010000	                          mov ecx, 0x100	     10801	elf.c	FUNCTION_171	CALL_1
0x4013eb5	          0x4c89de	                            mov rsi, r11	     10801	elf.c	FUNCTION_171	CALL_1
0x4013eb8	          0x4c89d7	                            mov rdi, r10	     10801	elf.c	FUNCTION_171	CALL_1
0x4013ebb	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013ebf	      0xe99cdafeff	 jmp sym.elfcore_write_note.constprop.30	     10801	elf.c	FUNCTION_171	CALL_1
0x4013ec4	         0xf1f4000	                         nop dword [rax]	     10801	elf.c	FUNCTION_171	CALL_1
0x4013ec8	      0xb905030000	                          mov ecx, 0x305	     10886	elf.c	FUNCTION_178	CALL_1
0x4013ecd	          0x4c89de	                            mov rsi, r11	     10886	elf.c	FUNCTION_178	CALL_1
0x4013ed0	          0x4c89d7	                            mov rdi, r10	     10886	elf.c	FUNCTION_178	CALL_1
0x4013ed3	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013ed7	      0xe984dafeff	 jmp sym.elfcore_write_note.constprop.30	     10886	elf.c	FUNCTION_178	CALL_1
0x4013edc	         0xf1f4000	                         nop dword [rax]	     10886	elf.c	FUNCTION_178	CALL_1
0x4013ee0	      0xb900030000	                          mov ecx, 0x300	     10825	elf.c	FUNCTION_173	CALL_1
0x4013ee5	          0x4c89de	                            mov rsi, r11	     10825	elf.c	FUNCTION_173	CALL_1
0x4013ee8	          0x4c89d7	                            mov rdi, r10	     10825	elf.c	FUNCTION_173	CALL_1
0x4013eeb	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013eef	      0xe96cdafeff	 jmp sym.elfcore_write_note.constprop.30	     10825	elf.c	FUNCTION_173	CALL_1
0x4013ef4	         0xf1f4000	                         nop dword [rax]	     10825	elf.c	FUNCTION_173	CALL_1
0x4013ef8	      0xb901030000	                          mov ecx, 0x301	     10838	elf.c	FUNCTION_174	CALL_1
0x4013efd	          0x4c89de	                            mov rsi, r11	     10838	elf.c	FUNCTION_174	CALL_1
0x4013f00	          0x4c89d7	                            mov rdi, r10	     10838	elf.c	FUNCTION_174	CALL_1
0x4013f03	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013f07	      0xe954dafeff	 jmp sym.elfcore_write_note.constprop.30	     10838	elf.c	FUNCTION_174	CALL_1
0x4013f0c	         0xf1f4000	                         nop dword [rax]	     10838	elf.c	FUNCTION_174	CALL_1
0x4013f10	      0xb902030000	                          mov ecx, 0x302	     10850	elf.c	FUNCTION_175	CALL_1
0x4013f15	          0x4c89de	                            mov rsi, r11	     10850	elf.c	FUNCTION_175	CALL_1
0x4013f18	          0x4c89d7	                            mov rdi, r10	     10850	elf.c	FUNCTION_175	CALL_1
0x4013f1b	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013f1f	      0xe93cdafeff	 jmp sym.elfcore_write_note.constprop.30	     10850	elf.c	FUNCTION_175	CALL_1
0x4013f24	         0xf1f4000	                         nop dword [rax]	     10850	elf.c	FUNCTION_175	CALL_1
0x4013f28	      0xb903030000	                          mov ecx, 0x303	     10862	elf.c	FUNCTION_176	CALL_1
0x4013f2d	          0x4c89de	                            mov rsi, r11	     10862	elf.c	FUNCTION_176	CALL_1
0x4013f30	          0x4c89d7	                            mov rdi, r10	     10862	elf.c	FUNCTION_176	CALL_1
0x4013f33	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013f37	      0xe924dafeff	 jmp sym.elfcore_write_note.constprop.30	     10862	elf.c	FUNCTION_176	CALL_1
0x4013f3c	         0xf1f4000	                         nop dword [rax]	     10862	elf.c	FUNCTION_176	CALL_1
0x4013f40	      0xb904030000	                          mov ecx, 0x304	     10874	elf.c	FUNCTION_177	CALL_1
0x4013f45	          0x4c89de	                            mov rsi, r11	     10874	elf.c	FUNCTION_177	CALL_1
0x4013f48	          0x4c89d7	                            mov rdi, r10	     10874	elf.c	FUNCTION_177	CALL_1
0x4013f4b	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013f4f	      0xe90cdafeff	 jmp sym.elfcore_write_note.constprop.30	     10874	elf.c	FUNCTION_177	CALL_1
0x4013f54	         0xf1f4000	                         nop dword [rax]	     10874	elf.c	FUNCTION_177	CALL_1
0x4013f58	      0xb906030000	                          mov ecx, 0x306	     10898	elf.c	FUNCTION_179	CALL_1
0x4013f5d	          0x4c89de	                            mov rsi, r11	     10898	elf.c	FUNCTION_179	CALL_1
0x4013f60	          0x4c89d7	                            mov rdi, r10	     10898	elf.c	FUNCTION_179	CALL_1
0x4013f63	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013f67	      0xe9f4d9feff	 jmp sym.elfcore_write_note.constprop.30	     10898	elf.c	FUNCTION_179	CALL_1
0x4013f6c	      0xb907030000	                          mov ecx, 0x307	     10911	elf.c	FUNCTION_180	CALL_1
0x4013f71	          0x4c89de	                            mov rsi, r11	     10911	elf.c	FUNCTION_180	CALL_1
0x4013f74	          0x4c89d7	                            mov rdi, r10	     10911	elf.c	FUNCTION_180	CALL_1
0x4013f77	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013f7b	      0xe9e0d9feff	 jmp sym.elfcore_write_note.constprop.30	     10911	elf.c	FUNCTION_180	CALL_1
0x4013f80	      0xb908030000	                          mov ecx, 0x308	     10924	elf.c	FUNCTION_181	CALL_1
0x4013f85	          0x4c89de	                            mov rsi, r11	     10924	elf.c	FUNCTION_181	CALL_1
0x4013f88	          0x4c89d7	                            mov rdi, r10	     10924	elf.c	FUNCTION_181	CALL_1
0x4013f8b	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013f8f	      0xe9ccd9feff	 jmp sym.elfcore_write_note.constprop.30	     10924	elf.c	FUNCTION_181	CALL_1
0x4013f94	      0xb909030000	                          mov ecx, 0x309	     10936	elf.c	FUNCTION_182	CALL_1
0x4013f99	          0x4c89de	                            mov rsi, r11	     10936	elf.c	FUNCTION_182	CALL_1
0x4013f9c	          0x4c89d7	                            mov rdi, r10	     10936	elf.c	FUNCTION_182	CALL_1
0x4013f9f	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013fa3	      0xe9b8d9feff	 jmp sym.elfcore_write_note.constprop.30	     10936	elf.c	FUNCTION_182	CALL_1
0x4013fa8	      0xb90a030000	                          mov ecx, 0x30a	     10948	elf.c	FUNCTION_183	CALL_1
0x4013fad	          0x4c89de	                            mov rsi, r11	     10948	elf.c	FUNCTION_183	CALL_1
0x4013fb0	          0x4c89d7	                            mov rdi, r10	     10948	elf.c	FUNCTION_183	CALL_1
0x4013fb3	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013fb7	      0xe9a4d9feff	 jmp sym.elfcore_write_note.constprop.30	     10948	elf.c	FUNCTION_183	CALL_1
0x4013fbc	      0xb90b030000	                          mov ecx, 0x30b	     10961	elf.c	FUNCTION_184	CALL_1
0x4013fc1	          0x4c89de	                            mov rsi, r11	     10961	elf.c	FUNCTION_184	CALL_1
0x4013fc4	          0x4c89d7	                            mov rdi, r10	     10961	elf.c	FUNCTION_184	CALL_1
0x4013fc7	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013fcb	      0xe990d9feff	 jmp sym.elfcore_write_note.constprop.30	     10961	elf.c	FUNCTION_184	CALL_1
0x4013fd0	      0xb90c030000	                          mov ecx, 0x30c	     10974	elf.c	FUNCTION_185	CALL_1
0x4013fd5	          0x4c89de	                            mov rsi, r11	     10974	elf.c	FUNCTION_185	CALL_1
0x4013fd8	          0x4c89d7	                            mov rdi, r10	     10974	elf.c	FUNCTION_185	CALL_1
0x4013fdb	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013fdf	      0xe97cd9feff	 jmp sym.elfcore_write_note.constprop.30	     10974	elf.c	FUNCTION_185	CALL_1
0x4013fe4	      0xb900040000	                          mov ecx, 0x400	     10987	elf.c	FUNCTION_186	CALL_1
0x4013fe9	          0x4c89de	                            mov rsi, r11	     10987	elf.c	FUNCTION_186	CALL_1
0x4013fec	          0x4c89d7	                            mov rdi, r10	     10987	elf.c	FUNCTION_186	CALL_1
0x4013fef	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4013ff3	      0xe968d9feff	 jmp sym.elfcore_write_note.constprop.30	     10987	elf.c	FUNCTION_186	CALL_1
0x4013ff8	      0xb901040000	                          mov ecx, 0x401	     10999	elf.c	FUNCTION_187	CALL_1
0x4013ffd	          0x4c89de	                            mov rsi, r11	     10999	elf.c	FUNCTION_187	CALL_1
0x4014000	          0x4c89d7	                            mov rdi, r10	     10999	elf.c	FUNCTION_187	CALL_1
0x4014003	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4014007	      0xe954d9feff	 jmp sym.elfcore_write_note.constprop.30	     10999	elf.c	FUNCTION_187	CALL_1
0x401400c	      0xb902040000	                          mov ecx, 0x402	     11011	elf.c	FUNCTION_188	CALL_1
0x4014011	          0x4c89de	                            mov rsi, r11	     11011	elf.c	FUNCTION_188	CALL_1
0x4014014	          0x4c89d7	                            mov rdi, r10	     11011	elf.c	FUNCTION_188	CALL_1
0x4014017	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x401401b	      0xe940d9feff	 jmp sym.elfcore_write_note.constprop.30	     11011	elf.c	FUNCTION_188	CALL_1
0x4014020	            0x31c0	                            xor eax, eax	     11079	elf.c	FUNCTION_190
0x4014022	      0xe97afcffff	                           jmp 0x4013ca1	     11079	elf.c	FUNCTION_190
_bfd_elf_symbol_from_bfd_symbol	functions,0:CALL,8:FOR,0:WHILE,0:SWITCH,0:IF,4:DO,0:ELSE,0	56
0x400bd00	              0x55	                                push rbp	      6490	elf.c	FUNCTION_79
0x400bd01	              0x53	                                push rbx	      6490	elf.c	FUNCTION_79
0x400bd02	        0x4883ec08	                              sub rsp, 8	      6490	elf.c	FUNCTION_79
0x400bd06	          0x488b16	                    mov rdx, qword [rsi]	      6491	elf.c	FUNCTION_79
0x400bd09	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      6500	elf.c	FUNCTION_79	IF_1
0x400bd0d	          0x4885c0	                           test rax, rax	      6500	elf.c	FUNCTION_79	IF_1
0x400bd10	     0xf85a2000000	                           jne 0x400bdb8	      6500	elf.c	FUNCTION_79	IF_1
0x400bd16	        0xf6421901	               test byte [rdx + 0x19], 1	      6501	elf.c	FUNCTION_79	IF_1
0x400bd1a	            0x7424	                            je 0x400bd40	      6501	elf.c	FUNCTION_79	IF_1
0x400bd1c	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      6502	elf.c	FUNCTION_79	IF_1
0x400bd20	          0x4885c0	                           test rax, rax	      6502	elf.c	FUNCTION_79	IF_1
0x400bd23	            0x741b	                            je 0x400bd40	      6502	elf.c	FUNCTION_79	IF_1
0x400bd25	    0x4839b8f00000	            cmp qword [rax + 0xf0], rdi 	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400bd2c	            0x745a	                            je 0x400bd88	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400bd2e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400bd32	          0x4885c0	                           test rax, rax	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400bd35	            0x7409	                            je 0x400bd40	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400bd37	    0x483bb8f00000	            cmp rdi, qword [rax + 0xf0] 	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x400bd3e	            0x7448	                            je 0x400bd88	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x400bd40	        0x488b6a08	                mov rbp, qword [rdx + 8]	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400bd44	          0x4889fb	                            mov rbx, rdi	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400bd47	      0xba05000000	                              mov edx, 5	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x400bd4c	      0xbe00000000	                              mov esi, 0	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x400bd51	      0xbf00000000	                              mov edi, 0	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x400bd56	      0xe800000000	                          call 0x400bd5b	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x400bd5b	          0x4889ea	                            mov rdx, rbp	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400bd5e	          0x4889de	                            mov rsi, rbx	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400bd61	          0x4889c7	                            mov rdi, rax	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400bd64	            0x31c0	                            xor eax, eax	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400bd66	      0xe800000000	                          call 0x400bd6b	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400bd6b	      0xbf07000000	                              mov edi, 7	      6526	elf.c	FUNCTION_79	IF_4	CALL_7
0x400bd70	      0xe800000000	                          call 0x400bd75	      6526	elf.c	FUNCTION_79	IF_4	CALL_7
0x400bd75	        0x4883c408	                              add rsp, 8	      6540	elf.c	FUNCTION_79
0x400bd79	      0xb8ffffffff	                     mov eax, 0xffffffff	      6527	elf.c	FUNCTION_79	IF_4
0x400bd7e	              0x5b	                                 pop rbx	      6540	elf.c	FUNCTION_79
0x400bd7f	              0x5d	                                 pop rbp	      6540	elf.c	FUNCTION_79
0x400bd80	              0xc3	                                     ret	      6540	elf.c	FUNCTION_79
0x400bd81	     0xf1f80000000	                         nop dword [rax]	      6540	elf.c	FUNCTION_79
0x400bd88	    0x488b8ff80000	            mov rcx, qword [rdi + 0xf8] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400bd8f	        0x4863400c	          movsxd rax, dword [rax + 0xc] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400bd93	    0x488b89980c00	           mov rcx, qword [rcx + 0xc98] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400bd9a	          0x3b4148	            cmp eax, dword [rcx + 0x48] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400bd9d	            0x7da1	                           jge 0x400bd40	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400bd9f	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x400bda3	        0x488b04c1	            mov rax, qword [rcx + rax*8]	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x400bda7	          0x4885c0	                           test rax, rax	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x400bdaa	            0x7494	                            je 0x400bd40	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x400bdac	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x400bdb0	        0x48894228	             mov qword [rdx + 0x28], rax	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x400bdb4	         0xf1f4000	                         nop dword [rax]	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x400bdb8	            0x85c0	                           test eax, eax	      6518	elf.c	FUNCTION_79	IF_4
0x400bdba	            0x7484	                            je 0x400bd40	      6518	elf.c	FUNCTION_79	IF_4
0x400bdbc	        0x4883c408	                              add rsp, 8	      6540	elf.c	FUNCTION_79
0x400bdc0	              0x5b	                                 pop rbx	      6540	elf.c	FUNCTION_79
0x400bdc1	              0x5d	                                 pop rbp	      6540	elf.c	FUNCTION_79
0x400bdc2	              0xc3	                                     ret	      6540	elf.c	FUNCTION_79
_bfd_elf_swap_verdef_out	functions,0:CALL,7:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	38
0x4002d00	            0x4154	                                push r12	        86	elf.c	FUNCTION_2
0x4002d02	              0x55	                                push rbp	        86	elf.c	FUNCTION_2
0x4002d03	          0x4889fd	                            mov rbp, rdi	        86	elf.c	FUNCTION_2
0x4002d06	              0x53	                                push rbx	        86	elf.c	FUNCTION_2
0x4002d07	        0x488b4508	                mov rax, qword [rbp + 8]	        87	elf.c	FUNCTION_2	CALL_1
0x4002d0b	          0x4889d3	                            mov rbx, rdx	        86	elf.c	FUNCTION_2
0x4002d0e	           0xfb73e	                   movzx edi, word [rsi]	        87	elf.c	FUNCTION_2	CALL_1
0x4002d11	          0x4989f4	                            mov r12, rsi	        86	elf.c	FUNCTION_2
0x4002d14	          0x4889d6	                            mov rsi, rdx	        87	elf.c	FUNCTION_2	CALL_1
0x4002d17	    0xff90a8000000	                 call qword [rax + 0xa8]	        87	elf.c	FUNCTION_2	CALL_1
0x4002d1d	        0x488b4508	                mov rax, qword [rbp + 8]	        88	elf.c	FUNCTION_2	CALL_2
0x4002d21	    0x410fb77c2402	               movzx edi, word [r12 + 2]	        88	elf.c	FUNCTION_2	CALL_2
0x4002d27	        0x488d7302	                      lea rsi, [rbx + 2]	        88	elf.c	FUNCTION_2	CALL_2
0x4002d2b	    0xff90a8000000	                 call qword [rax + 0xa8]	        88	elf.c	FUNCTION_2	CALL_2
0x4002d31	        0x488b4508	                mov rax, qword [rbp + 8]	        89	elf.c	FUNCTION_2	CALL_3
0x4002d35	    0x410fb77c2404	               movzx edi, word [r12 + 4]	        89	elf.c	FUNCTION_2	CALL_3
0x4002d3b	        0x488d7304	                      lea rsi, [rbx + 4]	        89	elf.c	FUNCTION_2	CALL_3
0x4002d3f	    0xff90a8000000	                 call qword [rax + 0xa8]	        89	elf.c	FUNCTION_2	CALL_3
0x4002d45	        0x488b4508	                mov rax, qword [rbp + 8]	        90	elf.c	FUNCTION_2	CALL_4
0x4002d49	    0x410fb77c2406	               movzx edi, word [r12 + 6]	        90	elf.c	FUNCTION_2	CALL_4
0x4002d4f	        0x488d7306	                      lea rsi, [rbx + 6]	        90	elf.c	FUNCTION_2	CALL_4
0x4002d53	    0xff90a8000000	                 call qword [rax + 0xa8]	        90	elf.c	FUNCTION_2	CALL_4
0x4002d59	        0x488b4508	                mov rax, qword [rbp + 8]	        91	elf.c	FUNCTION_2	CALL_5
0x4002d5d	        0x488d7308	                      lea rsi, [rbx + 8]	        91	elf.c	FUNCTION_2	CALL_5
0x4002d61	      0x498b7c2408	                mov rdi, qword [r12 + 8]	        91	elf.c	FUNCTION_2	CALL_5
0x4002d66	    0xff9090000000	                 call qword [rax + 0x90]	        91	elf.c	FUNCTION_2	CALL_5
0x4002d6c	        0x488b4508	                mov rax, qword [rbp + 8]	        92	elf.c	FUNCTION_2	CALL_6
0x4002d70	        0x488d730c	                    lea rsi, [rbx + 0xc]	        92	elf.c	FUNCTION_2	CALL_6
0x4002d74	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	        92	elf.c	FUNCTION_2	CALL_6
0x4002d79	    0xff9090000000	                 call qword [rax + 0x90]	        92	elf.c	FUNCTION_2	CALL_6
0x4002d7f	        0x488b4508	                mov rax, qword [rbp + 8]	        93	elf.c	FUNCTION_2	CALL_7
0x4002d83	        0x488d7310	                   lea rsi, [rbx + 0x10]	        93	elf.c	FUNCTION_2	CALL_7
0x4002d87	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	        93	elf.c	FUNCTION_2	CALL_7
0x4002d8c	              0x5b	                                 pop rbx	        94	elf.c	FUNCTION_2
0x4002d8d	              0x5d	                                 pop rbp	        94	elf.c	FUNCTION_2
0x4002d8e	            0x415c	                                 pop r12	        94	elf.c	FUNCTION_2
0x4002d90	    0x488b80900000	            mov rax, qword [rax + 0x90] 	        93	elf.c	FUNCTION_2	CALL_7
0x4002d97	            0xffe0	                                 jmp rax	        93	elf.c	FUNCTION_2	CALL_7
_bfd_elf_validate_reloc	functions,0:CALL,5:FOR,0:WHILE,0:SWITCH,2:IF,5:DO,0:ELSE,3	103
0x4010360	          0x488b06	                    mov rax, qword [rsi]	      8897	elf.c	FUNCTION_109	IF_1
0x4010363	        0x488b4f08	                mov rcx, qword [rdi + 8]	      8897	elf.c	FUNCTION_109	IF_1
0x4010367	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x401036a	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x401036d	        0x48394808	                cmp qword [rax + 8], rcx	      8897	elf.c	FUNCTION_109	IF_1
0x4010371	     0xf8479010000	                            je 0x40104f0	      8897	elf.c	FUNCTION_109	IF_1
0x4010377	              0x55	                                push rbp	      8894	elf.c	FUNCTION_109
0x4010378	              0x53	                                push rbx	      8894	elf.c	FUNCTION_109
0x4010379	          0x4889fd	                            mov rbp, rdi	      8894	elf.c	FUNCTION_109
0x401037c	          0x4889f3	                            mov rbx, rsi	      8894	elf.c	FUNCTION_109
0x401037f	        0x4883ec08	                              sub rsp, 8	      8894	elf.c	FUNCTION_109
0x4010383	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x4010387	          0x8b5010	            mov edx, dword [rax + 0x10] 	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x401038a	          0x8b480c	              mov ecx, dword [rax + 0xc]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401038d	            0x85d2	                           test edx, edx	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x401038f	          0x8d51f8	                      lea edx, [rcx - 8]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4010392	            0x740c	                            je 0x40103a0	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x4010394	          0x83fa38	                           cmp edx, 0x38	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4010397	            0x7730	                            ja 0x40103c9	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4010399	    0xff24d5000000	                       jmp qword [rdx*8]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40103a0	          0x83fa38	                           cmp edx, 0x38	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40103a3	            0x7724	                            ja 0x40103c9	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40103a5	    0xff24d5000000	                       jmp qword [rdx*8]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40103ac	         0xf1f4000	                         nop dword [rax]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40103b0	      0xbe06000000	                              mov esi, 6	      8949	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40103b5	           0xf1f00	                         nop dword [rax]	      8949	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40103b8	          0x4889ef	                            mov rdi, rbp	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x40103bb	      0xe800000000	                          call 0x40103c0	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x40103c0	          0x4885c0	                           test rax, rax	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x40103c3	            0x756f	                           jne 0x4010434	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x40103c5	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x40103c9	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      8980	elf.c	FUNCTION_109	CALL_4
0x40103cd	      0xba05000000	                              mov edx, 5	      8980	elf.c	FUNCTION_109	CALL_4
0x40103d2	      0xbe00000000	                              mov esi, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x40103d7	      0xbf00000000	                              mov edi, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x40103dc	      0xe800000000	                          call 0x40103e1	      8980	elf.c	FUNCTION_109	CALL_4
0x40103e1	          0x4889da	                            mov rdx, rbx	      8980	elf.c	FUNCTION_109	CALL_4
0x40103e4	          0x4889ee	                            mov rsi, rbp	      8980	elf.c	FUNCTION_109	CALL_4
0x40103e7	          0x4889c7	                            mov rdi, rax	      8980	elf.c	FUNCTION_109	CALL_4
0x40103ea	            0x31c0	                            xor eax, eax	      8980	elf.c	FUNCTION_109	CALL_4
0x40103ec	      0xe800000000	                          call 0x40103f1	      8980	elf.c	FUNCTION_109	CALL_4
0x40103f1	      0xbf11000000	                           mov edi, 0x11	      8982	elf.c	FUNCTION_109	CALL_5
0x40103f6	      0xe800000000	                          call 0x40103fb	      8982	elf.c	FUNCTION_109	CALL_5
0x40103fb	        0x4883c408	                              add rsp, 8	      8984	elf.c	FUNCTION_109
0x40103ff	            0x31c0	                            xor eax, eax	      8983	elf.c	FUNCTION_109
0x4010401	              0x5b	                                 pop rbx	      8984	elf.c	FUNCTION_109
0x4010402	              0x5d	                                 pop rbp	      8984	elf.c	FUNCTION_109
0x4010403	              0xc3	                                     ret	      8984	elf.c	FUNCTION_109
0x4010404	         0xf1f4000	                         nop dword [rax]	      8984	elf.c	FUNCTION_109
0x4010408	      0xbe0c000000	                            mov esi, 0xc	      8913	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401040d	           0xf1f00	                         nop dword [rax]	      8913	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4010410	          0x4889ef	                            mov rdi, rbp	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x4010413	      0xe800000000	                          call 0x4010418	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x4010418	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x401041c	          0x8b5048	            mov edx, dword [rax + 0x48] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x401041f	          0x395148	            cmp dword [rcx + 0x48], edx 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4010422	            0x7410	                            je 0x4010434	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4010424	            0x85d2	                           test edx, edx	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x4010426	        0x488b5308	                mov rdx, qword [rbx + 8]	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x401042a	     0xf84b0000000	                            je 0x40104e0	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x4010430	        0x48015310	            add qword [rbx + 0x10], rdx 	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x4010434	        0x48894318	             mov qword [rbx + 0x18], rax	      8971	elf.c	FUNCTION_109	IF_1	IF_5
0x4010438	        0x4883c408	                              add rsp, 8	      8984	elf.c	FUNCTION_109
0x401043c	      0xb801000000	                              mov eax, 1	      8976	elf.c	FUNCTION_109
0x4010441	              0x5b	                                 pop rbx	      8984	elf.c	FUNCTION_109
0x4010442	              0x5d	                                 pop rbp	      8984	elf.c	FUNCTION_109
0x4010443	              0xc3	                                     ret	      8984	elf.c	FUNCTION_109
0x4010444	         0xf1f4000	                         nop dword [rax]	      8984	elf.c	FUNCTION_109
0x4010448	      0xbe0d000000	                            mov esi, 0xd	      8910	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401044d	            0xebc1	                           jmp 0x4010410	      8910	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x401044f	              0x90	                                     nop	      8910	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x4010450	      0xbe01000000	                              mov esi, 1	      8961	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010455	      0xe95effffff	                           jmp 0x40103b8	      8962	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401045a	    0x660f1f440000	                    nop word [rax + rax]	      8962	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010460	      0xbe02000000	                              mov esi, 2	      8958	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010465	      0xe94effffff	                           jmp 0x40103b8	      8959	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401046a	    0x660f1f440000	                    nop word [rax + rax]	      8959	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010470	      0xbe03000000	                              mov esi, 3	      8955	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010475	      0xe93effffff	                           jmp 0x40103b8	      8956	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401047a	    0x660f1f440000	                    nop word [rax + rax]	      8956	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010480	      0xbe05000000	                              mov esi, 5	      8952	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010485	      0xe92effffff	                           jmp 0x40103b8	      8953	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401048a	    0x660f1f440000	                    nop word [rax + rax]	      8953	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010490	      0xbe07000000	                              mov esi, 7	      8946	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x4010495	      0xe91effffff	                           jmp 0x40103b8	      8946	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x401049a	    0x660f1f440000	                    nop word [rax + rax]	      8946	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x40104a0	      0xbe08000000	                              mov esi, 8	      8925	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104a5	      0xe966ffffff	                           jmp 0x4010410	      8926	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104aa	    0x660f1f440000	                    nop word [rax + rax]	      8926	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104b0	      0xbe09000000	                              mov esi, 9	      8922	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104b5	      0xe956ffffff	                           jmp 0x4010410	      8923	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104ba	    0x660f1f440000	                    nop word [rax + rax]	      8923	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104c0	      0xbe0a000000	                            mov esi, 0xa	      8919	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104c5	      0xe946ffffff	                           jmp 0x4010410	      8920	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104ca	    0x660f1f440000	                    nop word [rax + rax]	      8920	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104d0	      0xbe0b000000	                            mov esi, 0xb	      8916	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104d5	      0xe936ffffff	                           jmp 0x4010410	      8917	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104da	    0x660f1f440000	                    nop word [rax + rax]	      8917	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x40104e0	        0x48295310	             sub qword [rbx + 0x10], rdx	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40104e4	      0xe94bffffff	                           jmp 0x4010434	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40104e9	     0xf1f80000000	                         nop dword [rax]	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x40104f0	      0xb801000000	                              mov eax, 1	      8976	elf.c	FUNCTION_109
0x40104f5	              0xc3	                                     ret	      8976	elf.c	FUNCTION_109
_bfd_elf_slurp_version_tables	functions,0:CALL,53:FOR,5:WHILE,0:SWITCH,0:IF,46:DO,0:ELSE,5	574
0x400e690	            0x4157	                                push r15	      8282	elf.c	FUNCTION_97
0x400e692	            0x4156	                                push r14	      8282	elf.c	FUNCTION_97
0x400e694	            0x4155	                                push r13	      8282	elf.c	FUNCTION_97
0x400e696	            0x4154	                                push r12	      8282	elf.c	FUNCTION_97
0x400e698	          0x4189f4	                           mov r12d, esi	      8282	elf.c	FUNCTION_97
0x400e69b	              0x55	                                push rbp	      8282	elf.c	FUNCTION_97
0x400e69c	              0x53	                                push rbx	      8282	elf.c	FUNCTION_97
0x400e69d	          0x4889fb	                            mov rbx, rdi	      8282	elf.c	FUNCTION_97
0x400e6a0	    0x4881eca80000	                           sub rsp, 0xa8	      8282	elf.c	FUNCTION_97
0x400e6a7	    0x4c8baff80000	            mov r13, qword [rdi + 0xf8] 	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400e6ae	    0x64488b042528	                mov rax, qword fs:[0x28]	      8282	elf.c	FUNCTION_97
0x400e6b7	    0x488984249800	             mov qword [rsp + 0x98], rax	      8282	elf.c	FUNCTION_97
0x400e6bf	            0x31c0	                            xor eax, eax	      8282	elf.c	FUNCTION_97
0x400e6c1	    0x458b9d880c00	          mov r11d, dword [r13 + 0xc88] 	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400e6c8	          0x4585db	                         test r11d, r11d	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400e6cb	     0xf84af000000	                            je 0x400e780	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400e6d1	    0x418b85740200	           mov eax, dword [r13 + 0x274] 	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400e6d8	            0x85c0	                           test eax, eax	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400e6da	            0x7417	                            je 0x400e6f3	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400e6dc	    0x498bbd680200	           mov rdi, qword [r13 + 0x268] 	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400e6e3	          0x4889fa	                            mov rdx, rdi	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400e6e6	        0x48c1ea04	                              shr rdx, 4	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400e6ea	          0x4839d0	                            cmp rax, rdx	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400e6ed	     0xf86fd010000	                           jbe 0x400e8f0	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400e6f3	          0x4531ff	                          xor r15d, r15d	      8283	elf.c	FUNCTION_97
0x400e6f6	      0xba05000000	                              mov edx, 5	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400e6fb	      0xbe00000000	                              mov esi, 0	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400e700	      0xbf00000000	                              mov edi, 0	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400e705	      0xe800000000	                          call 0x400e70a	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400e70a	          0x4889de	                            mov rsi, rbx	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400e70d	          0x4889c7	                            mov rdi, rax	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400e710	            0x31c0	                            xor eax, eax	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400e712	      0xe800000000	                          call 0x400e717	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400e717	      0xbf11000000	                           mov edi, 0x11	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400e71c	      0xe800000000	                          call 0x400e721	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400e721	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400e728	    0x48c780500300	              mov qword [rax + 0x350], 0	      8304	elf.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x400e733	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x400e73a	    0xc78044030000	              mov dword [rax + 0x344], 0	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x400e744	          0x4d85ff	                           test r15, r15	      8616	elf.c	FUNCTION_97	IF_46
0x400e747	            0x7408	                            je 0x400e751	      8616	elf.c	FUNCTION_97	IF_46
0x400e749	          0x4c89ff	                            mov rdi, r15	      8617	elf.c	FUNCTION_97	CALL_53
0x400e74c	      0xe800000000	                          call 0x400e751	      8617	elf.c	FUNCTION_97	CALL_53
0x400e751	            0x31c0	                            xor eax, eax	      8618	elf.c	FUNCTION_97
0x400e753	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	      8619	elf.c	FUNCTION_97
0x400e75b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8619	elf.c	FUNCTION_97
0x400e764	     0xf851a090000	                           jne 0x400f084	      8619	elf.c	FUNCTION_97
0x400e76a	    0x4881c4a80000	                           add rsp, 0xa8	      8619	elf.c	FUNCTION_97
0x400e771	              0x5b	                                 pop rbx	      8619	elf.c	FUNCTION_97
0x400e772	              0x5d	                                 pop rbp	      8619	elf.c	FUNCTION_97
0x400e773	            0x415c	                                 pop r12	      8619	elf.c	FUNCTION_97
0x400e775	            0x415d	                                 pop r13	      8619	elf.c	FUNCTION_97
0x400e777	            0x415e	                                 pop r14	      8619	elf.c	FUNCTION_97
0x400e779	            0x415f	                                 pop r15	      8619	elf.c	FUNCTION_97
0x400e77b	              0xc3	                                     ret	      8619	elf.c	FUNCTION_97
0x400e77c	         0xf1f4000	                         nop dword [rax]	      8619	elf.c	FUNCTION_97
0x400e780	          0x4531f6	                          xor r14d, r14d	      8284	elf.c	FUNCTION_97
0x400e783	    0x458b8d840c00	           mov r9d, dword [r13 + 0xc84] 	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400e78a	          0x4585c9	                           test r9d, r9d	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400e78d	            0x7479	                            je 0x400e808	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400e78f	    0x458b85c40200	           mov r8d, dword [r13 + 0x2c4] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400e796	          0x4585c0	                           test r8d, r8d	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400e799	            0x7411	                            je 0x400e7ac	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400e79b	    0x498bbdb80200	           mov rdi, qword [r13 + 0x2b8] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400e7a2	        0x4883ff13	                           cmp rdi, 0x13	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400e7a6	     0xf8724010000	                            ja 0x400e8d0	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400e7ac	          0x4531ff	                          xor r15d, r15d	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400e7af	      0xba05000000	                              mov edx, 5	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400e7b4	      0xbe00000000	                              mov esi, 0	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400e7b9	      0xbf00000000	                              mov edi, 0	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400e7be	      0xe800000000	                          call 0x400e7c3	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400e7c3	          0x4889de	                            mov rsi, rbx	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400e7c6	          0x4889c7	                            mov rdi, rax	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400e7c9	            0x31c0	                            xor eax, eax	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400e7cb	      0xe800000000	                          call 0x400e7d0	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400e7d0	      0xbf11000000	                           mov edi, 0x11	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400e7d5	      0xe800000000	                          call 0x400e7da	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400e7da	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400e7e1	    0x48c780480300	              mov qword [rax + 0x348], 0	      8431	elf.c	FUNCTION_97	IF_18	IF_19	CALL_28
0x400e7ec	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400e7f3	    0xc78040030000	              mov dword [rax + 0x340], 0	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400e7fd	      0xe942ffffff	                           jmp 0x400e744	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400e802	    0x660f1f440000	                    nop word [rax + rax]	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400e808	          0x4585e4	                         test r12d, r12d	      8570	elf.c	FUNCTION_97	ELSE_4	IF_40
0x400e80b	     0xf84b3000000	                            je 0x400e8c4	      8570	elf.c	FUNCTION_97	ELSE_4	IF_40
0x400e811	        0x4183fe02	                             cmp r14d, 2	      8572	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x400e815	     0xf8655020000	                           jbe 0x400ea70	      8572	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x400e81b	        0x418d7601	                      lea esi, [r14 + 1]	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400e81f	          0x4989f6	                            mov r14, rsi	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400e822	      0xba48000000	                           mov edx, 0x48	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400e827	          0x4889df	                            mov rdi, rbx	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400e82a	      0xe800000000	                          call 0x400e82f	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400e82f	    0x498985480300	            mov qword [r13 + 0x348], rax	      8577	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_46
0x400e836	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400e83d	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400e845	     0xf8406ffffff	                            je 0x400e751	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400e84b	    0x4489b0400300	           mov dword [rax + 0x340], r14d	      8582	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_49
0x400e852	    0x488b8bf80000	            mov rcx, qword [rbx + 0xf8] 	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400e859	        0x418d46ff	                      lea eax, [r14 - 1]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400e85d	          0x4889df	                            mov rdi, rbx	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400e860	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400e864	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400e86b	      0xb901000000	                              mov ecx, 1	      8596	elf.c	FUNCTION_97	IF_43
0x400e870	        0x488d2cd0	                  lea rbp, [rax + rdx*8]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400e874	            0x31d2	                            xor edx, edx	      8594	elf.c	FUNCTION_97	IF_43
0x400e876	      0xb801000000	                              mov eax, 1	      8593	elf.c	FUNCTION_97	IF_43
0x400e87b	        0x66894500	                      mov word [rbp], ax	      8593	elf.c	FUNCTION_97	IF_43
0x400e87f	        0x66895502	                  mov word [rbp + 2], dx	      8594	elf.c	FUNCTION_97	IF_43
0x400e883	      0x6644897504	                mov word [rbp + 4], r14w	      8595	elf.c	FUNCTION_97	IF_43
0x400e888	        0x66894d06	                  mov word [rbp + 6], cx	      8596	elf.c	FUNCTION_97	IF_43
0x400e88c	        0x48895d20	            mov qword [rbp + 0x20], rbx 	      8598	elf.c	FUNCTION_97	IF_43
0x400e890	      0xe800000000	                          call 0x400e895	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400e895	          0x4885c0	                           test rax, rax	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x400e898	        0x48894528	            mov qword [rbp + 0x28], rax 	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400e89c	            0x7443	                            je 0x400e8e1	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x400e89e	    0x48c745300000	               mov qword [rbp + 0x30], 0	      8603	elf.c	FUNCTION_97	IF_43
0x400e8a6	      0xbe20000000	                           mov esi, 0x20	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400e8ab	          0x4889df	                            mov rdi, rbx	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400e8ae	      0xe800000000	                          call 0x400e8b3	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400e8b3	          0x4885c0	                           test rax, rax	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x400e8b6	        0x48894538	            mov qword [rbp + 0x38], rax 	      8604	elf.c	FUNCTION_97	IF_43
0x400e8ba	            0x7425	                            je 0x400e8e1	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x400e8bc	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	      8610	elf.c	FUNCTION_97	IF_43
0x400e8c0	        0x48895010	             mov qword [rax + 0x10], rdx	      8610	elf.c	FUNCTION_97	IF_43
0x400e8c4	      0xb801000000	                              mov eax, 1	      8613	elf.c	FUNCTION_97
0x400e8c9	      0xe985feffff	                           jmp 0x400e753	      8613	elf.c	FUNCTION_97
0x400e8ce	            0x6690	                                     nop	      8613	elf.c	FUNCTION_97
0x400e8d0	      0xe800000000	                          call 0x400e8d5	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x400e8d5	          0x4885c0	                           test rax, rax	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400e8d8	          0x4989c7	                            mov r15, rax	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x400e8db	     0xf859f010000	                           jne 0x400ea80	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400e8e1	          0x4531ff	                          xor r15d, r15d	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400e8e4	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400e8eb	      0xe9f1feffff	                           jmp 0x400e7e1	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400e8f0	      0xe800000000	                          call 0x400e8f5	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x400e8f5	          0x4885c0	                           test rax, rax	      8310	elf.c	FUNCTION_97	IF_1	IF_3
0x400e8f8	          0x4989c7	                            mov r15, rax	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x400e8fb	     0xf8420feffff	                            je 0x400e721	      8310	elf.c	FUNCTION_97	IF_1	IF_3
0x400e901	    0x498bb5600200	           mov rsi, qword [r13 + 0x260] 	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400e908	            0x31d2	                            xor edx, edx	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400e90a	          0x4889df	                            mov rdi, rbx	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400e90d	      0xe800000000	                          call 0x400e912	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400e912	            0x85c0	                           test eax, eax	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400e914	     0xf8507feffff	                           jne 0x400e721	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400e91a	    0x498bb5680200	           mov rsi, qword [r13 + 0x268] 	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400e921	          0x4889da	                            mov rdx, rbx	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400e924	          0x4c89ff	                            mov rdi, r15	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400e927	      0xe800000000	                          call 0x400e92c	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400e92c	    0x493b85680200	           cmp rax, qword [r13 + 0x268] 	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400e933	     0xf85e8fdffff	                           jne 0x400e721	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400e939	    0x418bb5740200	           mov esi, dword [r13 + 0x274] 	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400e940	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x400e947	      0xba40000000	                           mov edx, 0x40	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400e94c	          0x4889df	                            mov rdi, rbx	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400e94f	      0xe800000000	                          call 0x400e954	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400e954	    0x488985500300	           mov qword [rbp + 0x350], rax 	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x400e95b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400e962	    0x488b88500300	           mov rcx, qword [rax + 0x350] 	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400e969	          0x4885c9	                           test rcx, rcx	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400e96c	     0xf84b6fdffff	                            je 0x400e728	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400e972	    0x498b95680200	           mov rdx, qword [r13 + 0x268] 	      8325	elf.c	FUNCTION_97	IF_1
0x400e979	    0x458b95740200	          mov r10d, dword [r13 + 0x274] 	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e980	      0x498d7417f0	             lea rsi, [r15 + rdx - 0x10]	      8325	elf.c	FUNCTION_97	IF_1
0x400e985	          0x4585d2	                         test r10d, r10d	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e988	      0x4889742408	                mov qword [rsp + 8], rsi	      8325	elf.c	FUNCTION_97	IF_1
0x400e98d	     0xf842e070000	                            je 0x400f0c1	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e993	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e998	      0x4c897c2420	             mov qword [rsp + 0x20], r15	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e99d	          0x4531f6	                          xor r14d, r14d	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e9a0	    0xc74424280000	               mov dword [rsp + 0x28], 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e9a8	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e9ad	          0x4989cd	                            mov r13, rcx	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e9b0	      0x4489642438	            mov dword [rsp + 0x38], r12d	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400e9b5	        0x488b4308	                mov rax, qword [rbx + 8]	       125	elf.c	FUNCTION_5	CALL_1
0x400e9b9	          0x4c89ff	                            mov rdi, r15	       125	elf.c	FUNCTION_5	CALL_1
0x400e9bc	    0xff9098000000	                 call qword [rax + 0x98]	       125	elf.c	FUNCTION_5	CALL_1
0x400e9c2	      0x6641894500	                      mov word [r13], ax	       125	elf.c	FUNCTION_5	CALL_1
0x400e9c7	        0x488b4308	                mov rax, qword [rbx + 8]	       126	elf.c	FUNCTION_5	CALL_2
0x400e9cb	        0x498d7f02	                      lea rdi, [r15 + 2]	       126	elf.c	FUNCTION_5	CALL_2
0x400e9cf	    0xff9098000000	                 call qword [rax + 0x98]	       126	elf.c	FUNCTION_5	CALL_2
0x400e9d5	      0x6641894502	                  mov word [r13 + 2], ax	       126	elf.c	FUNCTION_5	CALL_2
0x400e9da	        0x488b4308	                mov rax, qword [rbx + 8]	       127	elf.c	FUNCTION_5	CALL_3
0x400e9de	        0x498d7f04	                      lea rdi, [r15 + 4]	       127	elf.c	FUNCTION_5	CALL_3
0x400e9e2	    0xff9080000000	                 call qword [rax + 0x80]	       127	elf.c	FUNCTION_5	CALL_3
0x400e9e8	        0x49894508	                mov qword [r13 + 8], rax	       127	elf.c	FUNCTION_5	CALL_3
0x400e9ec	        0x488b4308	                mov rax, qword [rbx + 8]	       128	elf.c	FUNCTION_5	CALL_4
0x400e9f0	        0x498d7f08	                      lea rdi, [r15 + 8]	       128	elf.c	FUNCTION_5	CALL_4
0x400e9f4	    0xff9080000000	                 call qword [rax + 0x80]	       128	elf.c	FUNCTION_5	CALL_4
0x400e9fa	        0x49894510	             mov qword [r13 + 0x10], rax	       128	elf.c	FUNCTION_5	CALL_4
0x400e9fe	        0x488b4308	                mov rax, qword [rbx + 8]	       129	elf.c	FUNCTION_5	CALL_5
0x400ea02	        0x498d7f0c	                    lea rdi, [r15 + 0xc]	       129	elf.c	FUNCTION_5	CALL_5
0x400ea06	    0xff9080000000	                 call qword [rax + 0x80]	       129	elf.c	FUNCTION_5	CALL_5
0x400ea0c	        0x498b5508	                mov rdx, qword [r13 + 8]	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x400ea10	        0x49894518	             mov qword [r13 + 0x18], rax	       129	elf.c	FUNCTION_5	CALL_5
0x400ea14	        0x49895d20	             mov qword [r13 + 0x20], rbx	      8336	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ea18	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x400ea1a	     0xf85f5020000	                           jne 0x400ed15	       330	elf.c	FUNCTION_17	IF_1
0x400ea20	    0x49c745280000	               mov qword [r13 + 0x28], 0	      8338	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ea28	      0x410fb74502	               movzx eax, word [r13 + 2]	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400ea2d	          0x6685c0	                             test ax, ax	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400ea30	     0xf850a030000	                           jne 0x400ed40	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400ea36	      0x488b442408	                mov rax, qword [rsp + 8]	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea3b	      0x482b442420	             sub rax, qword [rsp + 0x20]	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea40	        0x49394510	            cmp qword [r13 + 0x10], rax 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea44	    0x49c745300000	               mov qword [r13 + 0x30], 0	      8345	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400ea4c	      0x4889442430	             mov qword [rsp + 0x30], rax	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea51	     0xf8604010000	                           jbe 0x400eb5b	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea57	    0x660f1f840000	                    nop word [rax + rax]	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea60	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea65	      0xe98cfcffff	                           jmp 0x400e6f6	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea6a	    0x660f1f440000	                    nop word [rax + rax]	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea70	      0xbe03000000	                              mov esi, 3	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ea75	    0x41be03000000	                             mov r14d, 3	      8573	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x400ea7b	      0xe9a2fdffff	                           jmp 0x400e822	      8573	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x400ea80	    0x498bb5b00200	           mov rsi, qword [r13 + 0x2b0] 	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ea87	            0x31d2	                            xor edx, edx	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ea89	          0x4889df	                            mov rdi, rbx	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ea8c	      0xe800000000	                          call 0x400ea91	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ea91	            0x85c0	                           test eax, eax	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ea93	     0xf8541fdffff	                           jne 0x400e7da	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ea99	    0x498bb5b80200	           mov rsi, qword [r13 + 0x2b8] 	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400eaa0	          0x4889da	                            mov rdx, rbx	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400eaa3	          0x4c89ff	                            mov rdi, r15	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400eaa6	      0xe800000000	                          call 0x400eaab	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400eaab	    0x493b85b80200	           cmp rax, qword [r13 + 0x2b8] 	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400eab2	      0x4889442410	             mov qword [rsp + 0x10], rax	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400eab7	     0xf851dfdffff	                           jne 0x400e7da	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400eabd	    0x418bbdc40200	           mov edi, dword [r13 + 0x2c4] 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eac4	      0x498d4407ec	             lea rax, [r15 + rax - 0x14]	      8445	elf.c	FUNCTION_97	IF_18
0x400eac9	      0x4889442408	                mov qword [rsp + 8], rax	      8445	elf.c	FUNCTION_97	IF_18
0x400eace	            0x85ff	                           test edi, edi	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ead0	     0xf84bf050000	                            je 0x400f095	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ead6	      0x488d442450	                   lea rax, [rsp + 0x50]	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eadb	          0x4c89f9	                            mov rcx, r15	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eade	          0x4531db	                          xor r11d, r11d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eae1	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eae6	      0x4489742420	            mov dword [rsp + 0x20], r14d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eaeb	            0x31ed	                            xor ebp, ebp	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eaed	      0x4489642428	            mov dword [rsp + 0x28], r12d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eaf2	          0x4589df	                          mov r15d, r11d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eaf5	          0x4989cc	                            mov r12, rcx	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eaf8	          0x4989c6	                            mov r14, rax	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eafb	            0xeb36	                           jmp 0x400eb33	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eafd	           0xf1f00	                         nop dword [rax]	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eb00	           0xfb7c0	                           movzx eax, ax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400eb03	            0x39c5	                            cmp ebp, eax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400eb05	           0xf42e8	                          cmovb ebp, eax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400eb08	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400eb0d	          0x4885c0	                           test rax, rax	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400eb10	     0xf8496000000	                            je 0x400ebac	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400eb16	      0x488b542408	                mov rdx, qword [rsp + 8]	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400eb1b	          0x4c29e2	                            sub rdx, r12	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400eb1e	          0x4839d0	                            cmp rax, rdx	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400eb21	            0x7729	                            ja 0x400eb4c	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400eb23	          0x4901c4	                            add r12, rax	      8471	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eb26	        0x4183c701	                             add r15d, 1	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eb2a	    0x4539bdc40200	          cmp dword [r13 + 0x2c4], r15d 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eb31	            0x7679	                           jbe 0x400ebac	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400eb33	          0x4c89f2	                            mov rdx, r14	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400eb36	          0x4c89e6	                            mov rsi, r12	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400eb39	          0x4889df	                            mov rdi, rbx	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400eb3c	      0xe800000000	                          call 0x400eb41	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400eb41	       0xfb7442454	           movzx eax, word [rsp + 0x54] 	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400eb46	        0x6625ff7f	                          and ax, 0x7fff	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400eb4a	            0x75b4	                           jne 0x400eb00	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400eb4c	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400eb51	      0xe959fcffff	                           jmp 0x400e7af	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400eb56	      0x6645896502	                mov word [r13 + 2], r12w	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400eb5b	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400eb5f	    0x49c745380000	               mov qword [r13 + 0x38], 0	      8392	elf.c	FUNCTION_97	IF_1	FOR_1
0x400eb67	          0x4885c0	                           test rax, rax	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400eb6a	     0xf8461050000	                            je 0x400f0d1	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400eb70	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400eb75	      0x8344242801	               add dword [rsp + 0x28], 1	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400eb7a	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400eb7e	    0x3b8e74020000	           cmp ecx, dword [rsi + 0x274] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400eb84	     0xf83b6030000	                           jae 0x400ef40	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400eb8a	        0x4983c540	                           add r13, 0x40	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400eb8e	      0x483b442430	            cmp rax, qword [rsp + 0x30] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400eb93	        0x4d896df8	                mov qword [r13 - 8], r13	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400eb97	     0xf87c3feffff	                            ja 0x400ea60	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400eb9d	      0x4801442420	            add qword [rsp + 0x20], rax 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400eba2	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400eba7	      0xe909feffff	                           jmp 0x400e9b5	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ebac	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ebb1	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ebb6	      0x448b642428	           mov r12d, dword [rsp + 0x28] 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ebbb	          0x4585e4	                         test r12d, r12d	      8475	elf.c	FUNCTION_97	IF_18	IF_26
0x400ebbe	            0x7410	                            je 0x400ebd0	      8475	elf.c	FUNCTION_97	IF_18	IF_26
0x400ebc0	          0x4139ee	                           cmp r14d, ebp	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400ebc3	     0xf86c0040000	                           jbe 0x400f089	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400ebc9	        0x4183c601	                             add r14d, 1	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400ebcd	          0x4489f5	                           mov ebp, r14d	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400ebd0	    0x488b8bf80000	            mov rcx, qword [rbx + 0xf8] 	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400ebd7	            0x89e8	                            mov eax, ebp	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400ebd9	      0xba48000000	                           mov edx, 0x48	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400ebde	          0x4889c6	                            mov rsi, rax	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400ebe1	          0x4889df	                            mov rdi, rbx	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400ebe4	      0x4889442448	             mov qword [rsp + 0x48], rax	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400ebe9	      0x48894c2408	                mov qword [rsp + 8], rcx	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400ebee	      0xe800000000	                          call 0x400ebf3	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400ebf3	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400ebf8	    0x488981480300	            mov qword [rcx + 0x348], rax	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400ebff	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400ec06	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400ec0e	     0xf84cdfbffff	                            je 0x400e7e1	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400ec14	    0x89a840030000	            mov dword [rax + 0x340], ebp	      8488	elf.c	FUNCTION_97	IF_18	CALL_38
0x400ec1a	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400ec21	    0x418bb5c40200	           mov esi, dword [r13 + 0x2c4] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ec28	    0x488b80480300	           mov rax, qword [rax + 0x348] 	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400ec2f	            0x85f6	                           test esi, esi	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ec31	      0x4889442428	             mov qword [rsp + 0x28], rax	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400ec36	     0xf84e5020000	                            je 0x400ef21	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ec3c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8447	elf.c	FUNCTION_97	IF_18
0x400ec41	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      8447	elf.c	FUNCTION_97	IF_18
0x400ec46	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400ec4b	    0xc74424200000	               mov dword [rsp + 0x20], 0	      8447	elf.c	FUNCTION_97	IF_18
0x400ec53	      0x4489742440	            mov dword [rsp + 0x40], r14d	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400ec58	      0x4489642444	            mov dword [rsp + 0x44], r12d	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400ec5d	      0x498d4407f8	                lea rax, [r15 + rax - 8]	      8447	elf.c	FUNCTION_97	IF_18
0x400ec62	          0x4989df	                            mov r15, rbx	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400ec65	          0x4c89eb	                            mov rbx, r13	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400ec68	      0x4889442408	                mov qword [rsp + 8], rax	      8447	elf.c	FUNCTION_97	IF_18
0x400ec6d	      0x488d442450	                   lea rax, [rsp + 0x50]	      8447	elf.c	FUNCTION_97	IF_18
0x400ec72	      0x4889442438	             mov qword [rsp + 0x38], rax	      8447	elf.c	FUNCTION_97	IF_18
0x400ec77	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400ec7c	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400ec81	          0x4c89ff	                            mov rdi, r15	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400ec84	          0x4889ea	                            mov rdx, rbp	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400ec87	          0x4c89e6	                            mov rsi, r12	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400ec8a	      0xe800000000	                          call 0x400ec8f	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400ec8f	       0xfb7442454	           movzx eax, word [rsp + 0x54] 	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400ec94	        0x6625ff7f	                          and ax, 0x7fff	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400ec98	            0x746e	                            je 0x400ed08	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400ec9a	           0xfb7c0	                           movzx eax, ax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ec9d	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400eca2	        0x488d04c0	                  lea rax, [rax + rax*8]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400eca6	    0x488d04c5b8ff	                 lea rax, [rax*8 - 0x48]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ecae	          0x4901c6	                            add r14, rax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ecb1	      0x4889442430	             mov qword [rsp + 0x30], rax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ecb6	        0x488b4500	                    mov rax, qword [rbp]	        53	string3.h	FUNCTION_221	CALL_3
0x400ecba	          0x498906	                    mov qword [r14], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400ecbd	        0x488b4508	                mov rax, qword [rbp + 8]	        53	string3.h	FUNCTION_221	CALL_3
0x400ecc1	        0x49894608	                mov qword [r14 + 8], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400ecc5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        53	string3.h	FUNCTION_221	CALL_3
0x400ecc9	        0x49894610	             mov qword [r14 + 0x10], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400eccd	        0x488b4518	            mov rax, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_221	CALL_3
0x400ecd1	        0x4d897e20	             mov qword [r14 + 0x20], r15	      8506	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ecd5	        0x49894618	             mov qword [r14 + 0x18], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400ecd9	      0x410fb74606	               movzx eax, word [r14 + 6]	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400ecde	          0x6685c0	                             test ax, ax	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400ece1	     0xf8593020000	                           jne 0x400ef7a	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400ece7	      0x488b442408	                mov rax, qword [rsp + 8]	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ecec	    0x49c746380000	               mov qword [r14 + 0x38], 0	      8509	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400ecf4	          0x4c29e0	                            sub rax, r12	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ecf7	        0x493b4610	            cmp rax, qword [r14 + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ecfb	     0xf839d010000	                           jae 0x400ee9e	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed01	     0xf1f80000000	                         nop dword [rax]	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed08	          0x4c89fb	                            mov rbx, r15	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed0b	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed10	      0xe99afaffff	                           jmp 0x400e7af	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed15	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed1a	          0x4889df	                            mov rdi, rbx	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed1d	    0x8bb070020000	           mov esi, dword [rax + 0x270] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed23	      0xe8382dffff	call sym.bfd_elf_string_from_elf_section.part.20	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ed28	          0x4885c0	                           test rax, rax	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400ed2b	        0x49894528	             mov qword [r13 + 0x28], rax	      8338	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ed2f	     0xf85f3fcffff	                           jne 0x400ea28	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400ed35	      0xe926fdffff	                           jmp 0x400ea60	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400ed3a	    0x660f1f440000	                    nop word [rax + rax]	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400ed40	           0xfb7f0	                           movzx esi, ax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400ed43	      0xba30000000	                           mov edx, 0x30	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400ed48	          0x4889df	                            mov rdi, rbx	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400ed4b	      0xe800000000	                          call 0x400ed50	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400ed50	          0x4885c0	                           test rax, rax	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x400ed53	          0x4989c7	                            mov r15, rax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400ed56	        0x49894530	             mov qword [r13 + 0x30], rax	      8348	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1
0x400ed5a	     0xf8450030000	                            je 0x400f0b0	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x400ed60	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ed65	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ed6a	        0x498b6d10	            mov rbp, qword [r13 + 0x10] 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ed6e	          0x4829c1	                            sub rcx, rax	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ed71	          0x4839cd	                            cmp rbp, rcx	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ed74	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ed79	     0xf87e1fcffff	                            ja 0x400ea60	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400ed7f	          0x4801c5	                            add rbp, rax	      8359	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ed82	    0x6641837d0200	                   cmp word [r13 + 2], 0	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ed88	     0xf84cdfdffff	                            je 0x400eb5b	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ed8e	          0x4531e4	                          xor r12d, r12d	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ed91	     0xf1f80000000	                         nop dword [rax]	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ed98	        0x488b4308	                mov rax, qword [rbx + 8]	       153	elf.c	FUNCTION_7	CALL_1
0x400ed9c	          0x4889ef	                            mov rdi, rbp	       153	elf.c	FUNCTION_7	CALL_1
0x400ed9f	    0xff9080000000	                 call qword [rax + 0x80]	       153	elf.c	FUNCTION_7	CALL_1
0x400eda5	          0x498907	                    mov qword [r15], rax	       153	elf.c	FUNCTION_7	CALL_1
0x400eda8	        0x488b4308	                mov rax, qword [rbx + 8]	       154	elf.c	FUNCTION_7	CALL_2
0x400edac	        0x488d7d04	                      lea rdi, [rbp + 4]	       154	elf.c	FUNCTION_7	CALL_2
0x400edb0	    0xff9098000000	                 call qword [rax + 0x98]	       154	elf.c	FUNCTION_7	CALL_2
0x400edb6	      0x6641894708	                  mov word [r15 + 8], ax	       154	elf.c	FUNCTION_7	CALL_2
0x400edbb	        0x488b4308	                mov rax, qword [rbx + 8]	       155	elf.c	FUNCTION_7	CALL_3
0x400edbf	        0x488d7d06	                      lea rdi, [rbp + 6]	       155	elf.c	FUNCTION_7	CALL_3
0x400edc3	    0xff9098000000	                 call qword [rax + 0x98]	       155	elf.c	FUNCTION_7	CALL_3
0x400edc9	      0x664189470a	                mov word [r15 + 0xa], ax	       155	elf.c	FUNCTION_7	CALL_3
0x400edce	        0x488b4308	                mov rax, qword [rbx + 8]	       156	elf.c	FUNCTION_7	CALL_4
0x400edd2	        0x488d7d08	                      lea rdi, [rbp + 8]	       156	elf.c	FUNCTION_7	CALL_4
0x400edd6	    0xff9080000000	                 call qword [rax + 0x80]	       156	elf.c	FUNCTION_7	CALL_4
0x400eddc	        0x49894710	             mov qword [r15 + 0x10], rax	       156	elf.c	FUNCTION_7	CALL_4
0x400ede0	        0x488b4308	                mov rax, qword [rbx + 8]	       157	elf.c	FUNCTION_7	CALL_5
0x400ede4	        0x488d7d0c	                    lea rdi, [rbp + 0xc]	       157	elf.c	FUNCTION_7	CALL_5
0x400ede8	    0xff9080000000	                 call qword [rax + 0x80]	       157	elf.c	FUNCTION_7	CALL_5
0x400edee	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x400edf2	        0x49894718	             mov qword [r15 + 0x18], rax	       157	elf.c	FUNCTION_7	CALL_5
0x400edf6	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x400edf8	            0x7576	                           jne 0x400ee70	       330	elf.c	FUNCTION_17	IF_1
0x400edfa	    0x49c747200000	               mov qword [r15 + 0x20], 0	      8366	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ee02	      0x410fb7570a	            movzx edx, word [r15 + 0xa] 	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x400ee07	    0x49c747280000	               mov qword [r15 + 0x28], 0	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ee0f	          0x4139d6	                           cmp r14d, edx	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ee12	        0x440f42f2	                         cmovb r14d, edx	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ee16	        0x4183c401	                             add r12d, 1	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400ee1a	          0x4885c0	                           test rax, rax	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400ee1d	     0xf8433fdffff	                            je 0x400eb56	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400ee23	      0x410fb75502	               movzx edx, word [r13 + 2]	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400ee28	          0x4139d4	                           cmp r12d, edx	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400ee2b	            0x7323	                           jae 0x400ee50	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400ee2d	      0x488b542408	                mov rdx, qword [rsp + 8]	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee32	        0x4983c730	                           add r15, 0x30	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400ee36	        0x4d897ff8	                mov qword [r15 - 8], r15	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400ee3a	          0x4829ea	                            sub rdx, rbp	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee3d	          0x4839d0	                            cmp rax, rdx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee40	     0xf871afcffff	                            ja 0x400ea60	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee46	          0x4801c5	                            add rbp, rax	      8388	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ee49	      0xe94affffff	                           jmp 0x400ed98	      8388	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ee4e	            0x6690	                                     nop	      8388	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ee50	      0x488b542408	                mov rdx, qword [rsp + 8]	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee55	          0x4829ea	                            sub rdx, rbp	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee58	          0x4839d0	                            cmp rax, rdx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee5b	     0xf87fffbffff	                            ja 0x400ea60	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee61	      0xe9f5fcffff	                           jmp 0x400eb5b	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee70	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee75	          0x4889df	                            mov rdi, rbx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee78	    0x8bb070020000	           mov esi, dword [rax + 0x270] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee7e	      0xe8dd2bffff	call sym.bfd_elf_string_from_elf_section.part.20	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400ee83	          0x4885c0	                           test rax, rax	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400ee86	        0x49894720	             mov qword [r15 + 0x20], rax	      8366	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400ee8a	     0xf84d0fbffff	                            je 0x400ea60	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400ee90	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400ee94	      0xe969ffffff	                           jmp 0x400ee02	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400ee99	      0x6645896606	                mov word [r14 + 6], r12w	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400ee9e	    0x6641837e0600	                   cmp word [r14 + 6], 0	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400eea4	    0x49c746280000	               mov qword [r14 + 0x28], 0	      8553	elf.c	FUNCTION_97	IF_18	FOR_4
0x400eeac	            0x740c	                            je 0x400eeba	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400eeae	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400eeb2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400eeb6	        0x49894628	             mov qword [r14 + 0x28], rax	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400eeba	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400eebe	    0x49c746300000	               mov qword [r14 + 0x30], 0	      8557	elf.c	FUNCTION_97	IF_18	FOR_4
0x400eec6	          0x4885d2	                           test rdx, rdx	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400eec9	            0x7444	                            je 0x400ef0f	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400eecb	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eed0	    0x48b9398ee338	          movabs rcx, 0x8e38e38e38e38e39	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eeda	        0x48c1f803	                              sar rax, 3	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eede	        0x480fafc1	                           imul rax, rcx	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eee2	        0x4883c001	                              add rax, 1	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eee6	      0x4839442448	            cmp qword [rsp + 0x48], rax 	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eeeb	            0x7608	                           jbe 0x400eef5	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eeed	        0x498d4648	                   lea rax, [r14 + 0x48]	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eef1	        0x49894630	             mov qword [r14 + 0x30], rax	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400eef5	      0x8344242001	               add dword [rsp + 0x20], 1	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400eefa	      0x4801542418	            add qword [rsp + 0x18], rdx 	      8563	elf.c	FUNCTION_97	IF_18	FOR_4
0x400eeff	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ef03	    0x3983c4020000	           cmp dword [rbx + 0x2c4], eax 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ef09	     0xf8768fdffff	                            ja 0x400ec77	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ef0f	          0x4c89fb	                            mov rbx, r15	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ef12	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ef17	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ef1c	      0x448b642444	           mov r12d, dword [rsp + 0x44] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400ef21	          0x4c89ff	                            mov rdi, r15	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x400ef24	      0xe800000000	                          call 0x400ef29	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x400ef29	          0x4585e4	                         test r12d, r12d	      8586	elf.c	FUNCTION_97	IF_43
0x400ef2c	     0xf8492f9ffff	                            je 0x400e8c4	      8586	elf.c	FUNCTION_97	IF_43
0x400ef32	      0xe91bf9ffff	                           jmp 0x400e852	      8586	elf.c	FUNCTION_97	IF_43
0x400ef37	    0x660f1f840000	                    nop word [rax + rax]	      8586	elf.c	FUNCTION_97	IF_43
0x400ef40	      0x483b442430	            cmp rax, qword [rsp + 0x30] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400ef45	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400ef4a	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400ef4f	     0xf87a1f7ffff	                            ja 0x400e6f6	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400ef55	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400ef5c	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x400ef60	          0x4c89ff	                            mov rdi, r15	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400ef63	    0x898844030000	            mov dword [rax + 0x344], ecx	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x400ef69	      0xe800000000	                          call 0x400ef6e	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400ef6e	    0x4c8babf80000	            mov r13, qword [rbx + 0xf8] 	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400ef75	      0xe909f8ffff	                           jmp 0x400e783	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400ef7a	           0xfb7f0	                           movzx esi, ax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400ef7d	      0xba20000000	                           mov edx, 0x20	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400ef82	          0x4c89ff	                            mov rdi, r15	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400ef85	      0xe800000000	                          call 0x400ef8a	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400ef8a	          0x4885c0	                           test rax, rax	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x400ef8d	          0x4989c5	                            mov r13, rax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400ef90	        0x49894638	             mov qword [r14 + 0x38], rax	      8512	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3
0x400ef94	     0xf8402010000	                            je 0x400f09c	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x400ef9a	      0x488b442408	                mov rax, qword [rsp + 8]	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400ef9f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400efa4	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400efa8	          0x4829c8	                            sub rax, rcx	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400efab	          0x4839c5	                            cmp rbp, rax	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400efae	     0xf8754fdffff	                            ja 0x400ed08	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400efb4	          0x4801cd	                            add rbp, rcx	      8523	elf.c	FUNCTION_97	IF_18	FOR_4
0x400efb7	    0x6641837e0600	                   cmp word [r14 + 6], 0	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400efbd	     0xf84dbfeffff	                            je 0x400ee9e	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400efc3	          0x4531e4	                          xor r12d, r12d	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400efc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400efd0	        0x498b4708	                mov rax, qword [r15 + 8]	       103	elf.c	FUNCTION_3	CALL_1
0x400efd4	          0x4889ef	                            mov rdi, rbp	       103	elf.c	FUNCTION_3	CALL_1
0x400efd7	    0xff9080000000	                 call qword [rax + 0x80]	       103	elf.c	FUNCTION_3	CALL_1
0x400efdd	        0x49894500	                    mov qword [r13], rax	       103	elf.c	FUNCTION_3	CALL_1
0x400efe1	        0x498b4708	                mov rax, qword [r15 + 8]	       104	elf.c	FUNCTION_3	CALL_2
0x400efe5	        0x488d7d04	                      lea rdi, [rbp + 4]	       104	elf.c	FUNCTION_3	CALL_2
0x400efe9	    0xff9080000000	                 call qword [rax + 0x80]	       104	elf.c	FUNCTION_3	CALL_2
0x400efef	        0x498b5500	                    mov rdx, qword [r13]	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x400eff3	        0x49894508	                mov qword [r13 + 8], rax	       104	elf.c	FUNCTION_3	CALL_2
0x400eff7	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x400eff9	            0x7565	                           jne 0x400f060	       330	elf.c	FUNCTION_17	IF_1
0x400effb	    0x49c745100000	               mov qword [r13 + 0x10], 0	      8530	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400f003	        0x4183c401	                             add r12d, 1	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400f007	          0x4885c0	                           test rax, rax	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400f00a	    0x49c745180000	               mov qword [r13 + 0x18], 0	      8536	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400f012	     0xf8481feffff	                            je 0x400ee99	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400f018	      0x410fb75606	               movzx edx, word [r14 + 6]	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400f01d	          0x4139d4	                           cmp r12d, edx	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400f020	            0x731e	                           jae 0x400f040	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400f022	      0x488b542408	                mov rdx, qword [rsp + 8]	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f027	        0x4983c520	                           add r13, 0x20	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400f02b	        0x4d896df8	                mov qword [r13 - 8], r13	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400f02f	          0x4829ea	                            sub rdx, rbp	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f032	          0x4839d0	                            cmp rax, rdx	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f035	     0xf87cdfcffff	                            ja 0x400ed08	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f03b	          0x4801c5	                            add rbp, rax	      8549	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400f03e	            0xeb90	                           jmp 0x400efd0	      8549	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400f040	      0x488b542408	                mov rdx, qword [rsp + 8]	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f045	          0x4829ea	                            sub rdx, rbp	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f048	          0x4839d0	                            cmp rax, rdx	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f04b	     0xf87b7fcffff	                            ja 0x400ed08	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f051	      0xe948feffff	                           jmp 0x400ee9e	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f056	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f060	    0x8bb3c0020000	           mov esi, dword [rbx + 0x2c0] 	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f066	          0x4c89ff	                            mov rdi, r15	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f069	      0xe8f229ffff	call sym.bfd_elf_string_from_elf_section.part.20	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400f06e	          0x4885c0	                           test rax, rax	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400f071	        0x49894510	             mov qword [r13 + 0x10], rax	      8530	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400f075	     0xf848dfcffff	                            je 0x400ed08	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400f07b	        0x498b4508	                mov rax, qword [r13 + 8]	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400f07f	      0xe97fffffff	                           jmp 0x400f003	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400f084	      0xe800000000	                          call 0x400f089	      8619	elf.c	FUNCTION_97
0x400f089	        0x448d7501	                     lea r14d, [rbp + 1]	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400f08d	          0x4489f5	                           mov ebp, r14d	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400f090	      0xe93bfbffff	                           jmp 0x400ebd0	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400f095	            0x31ed	                            xor ebp, ebp	      8454	elf.c	FUNCTION_97	IF_18
0x400f097	      0xe91ffbffff	                           jmp 0x400ebbb	      8454	elf.c	FUNCTION_97	IF_18
0x400f09c	          0x4c89fb	                            mov rbx, r15	      8454	elf.c	FUNCTION_97	IF_18
0x400f09f	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8454	elf.c	FUNCTION_97	IF_18
0x400f0a4	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8454	elf.c	FUNCTION_97	IF_18
0x400f0ab	      0xe931f7ffff	                           jmp 0x400e7e1	      8454	elf.c	FUNCTION_97	IF_18
0x400f0b0	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8454	elf.c	FUNCTION_97	IF_18
0x400f0b5	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8454	elf.c	FUNCTION_97	IF_18
0x400f0bc	      0xe967f6ffff	                           jmp 0x400e728	      8454	elf.c	FUNCTION_97	IF_18
0x400f0c1	    0xc74424280000	               mov dword [rsp + 0x28], 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400f0c9	          0x4531f6	                          xor r14d, r14d	      8284	elf.c	FUNCTION_97
0x400f0cc	      0xe98bfeffff	                           jmp 0x400ef5c	      8284	elf.c	FUNCTION_97
0x400f0d1	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8284	elf.c	FUNCTION_97
0x400f0d6	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      8284	elf.c	FUNCTION_97
0x400f0db	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8284	elf.c	FUNCTION_97
0x400f0e2	      0xe975feffff	                           jmp 0x400ef5c	      8284	elf.c	FUNCTION_97
_bfd_elf_set_arch_mach	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	15
0x400ff60	        0x488b4708	                mov rax, qword [rdi + 8]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400ff64	            0x85f6	                           test esi, esi	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400ff66	        0x410f95c0	                               setne r8b	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400ff6a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400ff71	            0x8b00	                    mov eax, dword [rax]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400ff73	            0x39f0	                            cmp eax, esi	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400ff75	           0xf95c1	                                setne cl	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400ff78	          0x4184c8	                            test r8b, cl	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400ff7b	            0x740b	                            je 0x400ff88	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400ff7d	            0x85c0	                           test eax, eax	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400ff7f	            0x7407	                            je 0x400ff88	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400ff81	            0x31c0	                            xor eax, eax	      8732	elf.c	FUNCTION_102
0x400ff83	              0xc3	                                     ret	      8732	elf.c	FUNCTION_102
0x400ff84	         0xf1f4000	                         nop dword [rax]	      8732	elf.c	FUNCTION_102
0x400ff88	      0xe900000000	                           jmp 0x400ff8d	      8731	elf.c	FUNCTION_102	CALL_3
_bfd_elf_canonicalize_dynamic_symtab	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	12
0x400e300	        0x488b4708	                mov rax, qword [rdi + 8]	      8193	elf.c	FUNCTION_94	CALL_1
0x400e304	              0x53	                                push rbx	      8192	elf.c	FUNCTION_94
0x400e305	      0xba01000000	                              mov edx, 1	      8194	elf.c	FUNCTION_94	CALL_2
0x400e30a	          0x4889fb	                            mov rbx, rdi	      8192	elf.c	FUNCTION_94
0x400e30d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8194	elf.c	FUNCTION_94	CALL_2
0x400e314	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8194	elf.c	FUNCTION_94	CALL_2
0x400e31b	          0xff5048	                 call qword [rax + 0x48]	      8194	elf.c	FUNCTION_94	CALL_2
0x400e31e	          0x4885c0	                           test rax, rax	      8196	elf.c	FUNCTION_94	IF_1
0x400e321	            0x7806	                            js 0x400e329	      8196	elf.c	FUNCTION_94	IF_1
0x400e323	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	      8197	elf.c	FUNCTION_94	CALL_3
0x400e329	              0x5b	                                 pop rbx	      8199	elf.c	FUNCTION_94
0x400e32a	              0xc3	                                     ret	      8199	elf.c	FUNCTION_94
bfd_elf_is_group_section	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	5
0x4003e10	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	       963	elf.c	FUNCTION_23	CALL_1
0x4003e17	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       963	elf.c	FUNCTION_23	CALL_1
0x4003e1f	           0xf95c0	                                setne al	       963	elf.c	FUNCTION_23	CALL_1
0x4003e22	           0xfb6c0	                           movzx eax, al	       963	elf.c	FUNCTION_23	CALL_1
0x4003e25	              0xc3	                                     ret	       964	elf.c	FUNCTION_23
elf_sort_sections	functions,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:IF,10:DO,0:ELSE,4	55
0x4000040	          0x488b0f	                    mov rcx, qword [rdi]	      5114	elf.c	FUNCTION_66
0x4000043	          0x488b16	                    mov rdx, qword [rsi]	      5115	elf.c	FUNCTION_66
0x4000046	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      5120	elf.c	FUNCTION_66	IF_1
0x400004a	        0x48394130	            cmp qword [rcx + 0x30], rax 	      5120	elf.c	FUNCTION_66	IF_1
0x400004e	     0xf829c000000	                            jb 0x40000f0	      5120	elf.c	FUNCTION_66	IF_1
0x4000054	      0xb801000000	                              mov eax, 1	      5123	elf.c	FUNCTION_66	ELSE_1	IF_2
0x4000059	            0x774c	                            ja 0x40000a7	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400005b	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      5127	elf.c	FUNCTION_66	IF_3
0x400005f	        0x48397128	            cmp qword [rcx + 0x28], rsi 	      5127	elf.c	FUNCTION_66	IF_3
0x4000063	     0xf8287000000	                            jb 0x40000f0	      5127	elf.c	FUNCTION_66	IF_3
0x4000069	            0x773c	                            ja 0x40000a7	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400006b	          0x8b7920	            mov edi, dword [rcx + 0x20] 	      5136	elf.c	FUNCTION_66	IF_5
0x400006e	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x4000071	    0xf7c702040000	                         test edi, 0x402	      5136	elf.c	FUNCTION_66	IF_5
0x4000077	            0x7437	                            je 0x40000b0	      5136	elf.c	FUNCTION_66	IF_5
0x4000079	    0xf7c602040000	                         test esi, 0x402	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400007f	            0x746f	                            je 0x40000f0	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x4000081	          0x83e702	                              and edi, 2	      5156	elf.c	FUNCTION_66
0x4000084	            0x744a	                            je 0x40000d0	      5156	elf.c	FUNCTION_66
0x4000086	          0x83e602	                              and esi, 2	      5157	elf.c	FUNCTION_66
0x4000089	        0x488b7938	            mov rdi, qword [rcx + 0x38] 	      5156	elf.c	FUNCTION_66
0x400008d	            0x7471	                            je 0x4000100	      5157	elf.c	FUNCTION_66
0x400008f	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      5157	elf.c	FUNCTION_66
0x4000093	      0xb8ffffffff	                     mov eax, 0xffffffff	      5121	elf.c	FUNCTION_66	IF_1
0x4000098	          0x4839f7	                            cmp rdi, rsi	      5159	elf.c	FUNCTION_66	IF_9
0x400009b	            0x7267	                            jb 0x4000104	      5159	elf.c	FUNCTION_66	IF_9
0x400009d	          0x4839f7	                            cmp rdi, rsi	      5161	elf.c	FUNCTION_66	IF_10
0x40000a0	      0xb801000000	                              mov eax, 1	      5123	elf.c	FUNCTION_66	ELSE_1	IF_2
0x40000a5	            0x763a	                           jbe 0x40000e1	      5161	elf.c	FUNCTION_66	IF_10
0x40000a7	            0xf3c3	                                     ret	      5165	elf.c	FUNCTION_66
0x40000a9	     0xf1f80000000	                         nop dword [rax]	      5165	elf.c	FUNCTION_66
0x40000b0	    0xf7c602040000	                         test esi, 0x402	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x40000b6	            0x75ef	                           jne 0x40000a7	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x40000b8	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x40000be	    0x448b82d80000	            mov r8d, dword [rdx + 0xd8] 	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x40000c5	          0x4439c0	                            cmp eax, r8d	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x40000c8	            0x74b7	                            je 0x4000081	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x40000ca	          0x4429c0	                            sub eax, r8d	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x40000cd	              0xc3	                                     ret	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x40000ce	            0x6690	                                     nop	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x40000d0	          0x83e602	                              and esi, 2	      5157	elf.c	FUNCTION_66
0x40000d3	            0x740c	                            je 0x40000e1	      5157	elf.c	FUNCTION_66
0x40000d5	      0x48837a3800	               cmp qword [rdx + 0x38], 0	      5159	elf.c	FUNCTION_66	IF_9
0x40000da	      0xb8ffffffff	                     mov eax, 0xffffffff	      5121	elf.c	FUNCTION_66	IF_1
0x40000df	            0x75c6	                           jne 0x40000a7	      5159	elf.c	FUNCTION_66	IF_9
0x40000e1	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      5164	elf.c	FUNCTION_66
0x40000e7	    0x2b82d8000000	             sub eax, dword [rdx + 0xd8]	      5164	elf.c	FUNCTION_66
0x40000ed	              0xc3	                                     ret	      5164	elf.c	FUNCTION_66
0x40000ee	            0x6690	                                     nop	      5164	elf.c	FUNCTION_66
0x40000f0	      0xb8ffffffff	                     mov eax, 0xffffffff	      5121	elf.c	FUNCTION_66	IF_1
0x40000f5	              0xc3	                                     ret	      5121	elf.c	FUNCTION_66	IF_1
0x40000f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5121	elf.c	FUNCTION_66	IF_1
0x4000100	            0x31f6	                            xor esi, esi	      5157	elf.c	FUNCTION_66
0x4000102	            0xeb99	                           jmp 0x400009d	      5157	elf.c	FUNCTION_66
0x4000104	            0xf3c3	                                     ret	      5157	elf.c	FUNCTION_66
elf_fake_sections	functions,0:CALL,27:FOR,0:WHILE,0:SWITCH,1:IF,38:DO,0:ELSE,9	454
0x4001f80	          0x8b4208	                mov eax, dword [rdx + 8]	      3147	elf.c	FUNCTION_48	IF_1
0x4001f83	            0x85c0	                           test eax, eax	      3147	elf.c	FUNCTION_48	IF_1
0x4001f85	     0xf85ab010000	                           jne 0x4002136	      3147	elf.c	FUNCTION_48	IF_1
0x4001f8b	            0x4157	                                push r15	      3138	elf.c	FUNCTION_48
0x4001f8d	            0x4156	                                push r14	      3138	elf.c	FUNCTION_48
0x4001f8f	            0x4155	                                push r13	      3138	elf.c	FUNCTION_48
0x4001f91	            0x4154	                                push r12	      3138	elf.c	FUNCTION_48
0x4001f93	          0x4989fd	                            mov r13, rdi	      3138	elf.c	FUNCTION_48
0x4001f96	              0x55	                                push rbp	      3138	elf.c	FUNCTION_48
0x4001f97	              0x53	                                push rbx	      3138	elf.c	FUNCTION_48
0x4001f98	          0x4989d4	                            mov r12, rdx	      3138	elf.c	FUNCTION_48
0x4001f9b	          0x4889f5	                            mov rbp, rsi	      3138	elf.c	FUNCTION_48
0x4001f9e	        0x4883ec18	                           sub rsp, 0x18	      3138	elf.c	FUNCTION_48
0x4001fa2	        0x488b4708	                mov rax, qword [rdi + 8]	      3140	elf.c	FUNCTION_48	CALL_1
0x4001fa6	    0x488b9ee00000	            mov rbx, qword [rsi + 0xe0] 	      3141	elf.c	FUNCTION_48	CALL_2
0x4001fad	          0x4c8b3e	                    mov r15, qword [rsi]	      3144	elf.c	FUNCTION_48
0x4001fb0	    0x4c8bb0680300	           mov r14, qword [rax + 0x368] 	      3140	elf.c	FUNCTION_48	CALL_1
0x4001fb7	          0x488b02	                    mov rax, qword [rdx]	      3156	elf.c	FUNCTION_48	IF_2
0x4001fba	          0x4885c0	                           test rax, rax	      3156	elf.c	FUNCTION_48	IF_2
0x4001fbd	     0xf8445020000	                            je 0x4002208	      3156	elf.c	FUNCTION_48	IF_2
0x4001fc3	        0xf6400c01	                test byte [rax + 0xc], 1	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4001fc7	            0x7417	                            je 0x4001fe0	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4001fc9	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4001fcc	          0xf6c420	                           test ah, 0x20	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4001fcf	            0x740f	                            je 0x4001fe0	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4001fd1	      0x41807f0164	                cmp byte [r15 + 1], 0x64	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4001fd6	     0xf846c050000	                            je 0x4002548	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4001fdc	         0xf1f4000	                         nop dword [rax]	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4001fe0	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001fe7	            0x31d2	                            xor edx, edx	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001fe9	          0x4c89fe	                            mov rsi, r15	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001fec	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001ff3	        0x488b7808	                mov rdi, qword [rax + 8]	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001ff7	      0xe800000000	                          call 0x4001ffc	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001ffc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4001fff	            0x8903	                    mov dword [rbx], eax	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4002001	     0xf8418010000	                            je 0x400211f	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4002007	          0x4531c9	                            xor r9d, r9d	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x400200a	    0x48b801000000	                 movabs rax, 0x100000001	      3227	elf.c	FUNCTION_48	IF_12
0x4002014	        0x48234520	             and rax, qword [rbp + 0x20]	      3226	elf.c	FUNCTION_48	IF_12
0x4002018	            0x7404	                            je 0x400201e	      3226	elf.c	FUNCTION_48	IF_12
0x400201a	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      3228	elf.c	FUNCTION_48	IF_12
0x400201e	        0x448b4570	            mov r8d, dword [rbp + 0x70] 	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4002022	        0x48894310	             mov qword [rbx + 0x10], rax	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4002026	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3233	elf.c	FUNCTION_48	ELSE_4
0x400202a	    0x48c743180000	               mov qword [rbx + 0x18], 0	      3232	elf.c	FUNCTION_48	ELSE_4
0x4002032	    0xc74328000000	               mov dword [rbx + 0x28], 0	      3234	elf.c	FUNCTION_48	ELSE_4
0x4002039	        0x4183f83e	                           cmp r8d, 0x3e	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x400203d	        0x48894320	             mov qword [rbx + 0x20], rax	      3233	elf.c	FUNCTION_48	ELSE_4
0x4002041	     0xf87a9000000	                            ja 0x40020f0	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4002047	          0x4489c1	                            mov ecx, r8d	      3245	elf.c	FUNCTION_48
0x400204a	      0xb801000000	                              mov eax, 1	      3245	elf.c	FUNCTION_48
0x400204f	        0x48896b40	             mov qword [rbx + 0x40], rbp	      3249	elf.c	FUNCTION_48
0x4002053	          0x48d3e0	                             shl rax, cl	      3245	elf.c	FUNCTION_48
0x4002056	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3250	elf.c	FUNCTION_48
0x400205e	        0x48894330	             mov qword [rbx + 0x30], rax	      3245	elf.c	FUNCTION_48
0x4002062	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3254	elf.c	FUNCTION_48	IF_14
0x4002065	            0x89c1	                            mov ecx, eax	      3254	elf.c	FUNCTION_48	IF_14
0x4002067	    0x81e100000002	                      and ecx, 0x2000000	      3254	elf.c	FUNCTION_48	IF_14
0x400206d	     0xf85cd000000	                           jne 0x4002140	      3254	elf.c	FUNCTION_48	IF_14
0x4002073	            0x89c2	                            mov edx, eax	      3122	elf.c	FUNCTION_47	IF_1
0x4002075	    0x81e203010000	                          and edx, 0x103	      3122	elf.c	FUNCTION_47	IF_1
0x400207b	          0x83fa01	                              cmp edx, 1	      3122	elf.c	FUNCTION_47	IF_1
0x400207e	          0x8b5304	                mov edx, dword [rbx + 4]	      3259	elf.c	FUNCTION_48	IF_15
0x4002081	     0xf8469010000	                            je 0x40021f0	      3122	elf.c	FUNCTION_47	IF_1
0x4002087	            0x85d2	                           test edx, edx	      3259	elf.c	FUNCTION_48	IF_15
0x4002089	     0xf8468060000	                            je 0x40026f7	      3259	elf.c	FUNCTION_48	IF_15
0x400208f	          0x83fa08	                              cmp edx, 8	      3262	elf.c	FUNCTION_48	ELSE_6	IF_16
0x4002092	     0xf85b9000000	                           jne 0x4002151	      3262	elf.c	FUNCTION_48	ELSE_6	IF_16
0x4002098	            0x89c1	                            mov ecx, eax	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400209a	          0x83e101	                              and ecx, 1	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400209d	     0xf8416020000	                            je 0x40022b9	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020a3	      0xba05000000	                              mov edx, 5	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40020a8	      0xbe00000000	                              mov esi, 0	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40020ad	      0xbf00000000	                              mov edi, 0	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40020b2	        0x44890c24	                    mov dword [rsp], r9d	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40020b6	      0xe800000000	                          call 0x40020bb	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x40020bb	          0x4889ee	                            mov rsi, rbp	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40020be	          0x4889c7	                            mov rdi, rax	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40020c1	            0x31c0	                            xor eax, eax	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40020c3	      0xe800000000	                          call 0x40020c8	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x40020c8	    0xc74304010000	                  mov dword [rbx + 4], 1	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020cf	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020d2	        0x448b0c24	                    mov r9d, dword [rsp]	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020d6	            0x89c1	                            mov ecx, eax	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020d8	            0x89c2	                            mov edx, eax	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020da	    0x81e100000002	                      and ecx, 0x2000000	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020e0	          0x83e201	                              and edx, 1	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020e3	      0xe9c8010000	                           jmp 0x40022b0	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020e8	     0xf1f84000000	                   nop dword [rax + rax]	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40020f0	      0xba05000000	                              mov edx, 5	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40020f5	      0xbe00000000	                              mov esi, 0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40020fa	      0xbf00000000	                              mov edi, 0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40020ff	        0x44890424	                    mov dword [rsp], r8d	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x4002103	      0xe800000000	                          call 0x4002108	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x4002108	        0x448b0424	                    mov r8d, dword [rsp]	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x400210c	          0x4889c7	                            mov rdi, rax	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x400210f	          0x4889e9	                            mov rcx, rbp	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4002112	          0x4c89ee	                            mov rsi, r13	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4002115	            0x31c0	                            xor eax, eax	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x4002117	          0x4489c2	                            mov edx, r8d	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x400211a	      0xe800000000	                          call 0x400211f	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x400211f	    0x41c744240801	                  mov dword [r12 + 8], 1	      3242	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4002128	        0x4883c418	                           add rsp, 0x18	      3441	elf.c	FUNCTION_48
0x400212c	              0x5b	                                 pop rbx	      3441	elf.c	FUNCTION_48
0x400212d	              0x5d	                                 pop rbp	      3441	elf.c	FUNCTION_48
0x400212e	            0x415c	                                 pop r12	      3441	elf.c	FUNCTION_48
0x4002130	            0x415d	                                 pop r13	      3441	elf.c	FUNCTION_48
0x4002132	            0x415e	                                 pop r14	      3441	elf.c	FUNCTION_48
0x4002134	            0x415f	                                 pop r15	      3441	elf.c	FUNCTION_48
0x4002136	            0xf3c3	                                     ret	      3441	elf.c	FUNCTION_48
0x4002138	     0xf1f84000000	                   nop dword [rax + rax]	      3441	elf.c	FUNCTION_48
0x4002140	          0x8b5304	                mov edx, dword [rbx + 4]	      3259	elf.c	FUNCTION_48	IF_15
0x4002143	      0xbe11000000	                           mov esi, 0x11	      3255	elf.c	FUNCTION_48	IF_14
0x4002148	            0x85d2	                           test edx, edx	      3259	elf.c	FUNCTION_48	IF_15
0x400214a	            0x7505	                           jne 0x4002151	      3259	elf.c	FUNCTION_48	IF_15
0x400214c	          0x897304	                mov dword [rbx + 4], esi	      3260	elf.c	FUNCTION_48	IF_15
0x400214f	            0x89f2	                            mov edx, esi	      3260	elf.c	FUNCTION_48	IF_15
0x4002151	          0x83fa10	                           cmp edx, 0x10	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002154	            0x774a	                            ja 0x40021a0	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002156	          0x83fa0e	                            cmp edx, 0xe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002159	     0xf8361040000	                           jae 0x40025c0	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400215f	          0x83fa06	                              cmp edx, 6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002162	     0xf8448030000	                            je 0x40024b0	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002168	     0xf8712010000	                            ja 0x4002280	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400216e	          0x83fa04	                              cmp edx, 4	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002171	     0xf8401030000	                            je 0x4002478	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002177	          0x83fa05	                              cmp edx, 5	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400217a	     0xf85bb030000	                           jne 0x400253b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002180	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4002187	            0x89c2	                            mov edx, eax	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4002189	          0x83e201	                              and edx, 1	      3292	elf.c	FUNCTION_48	SWITCH_1
0x400218c	         0xfb67608	               movzx esi, byte [rsi + 8]	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4002190	        0x48897338	             mov qword [rbx + 0x38], rsi	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4002194	      0xe917010000	                           jmp 0x40022b0	      3293	elf.c	FUNCTION_48	SWITCH_1
0x4002199	     0xf1f80000000	                         nop dword [rax]	      3293	elf.c	FUNCTION_48	SWITCH_1
0x40021a0	    0x81fafdffff6f	                     cmp edx, 0x6ffffffd	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40021a6	     0xf8424030000	                            je 0x40024d0	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40021ac	     0xf875e020000	                            ja 0x4002410	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40021b2	          0x83fa11	                           cmp edx, 0x11	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40021b5	     0xf8445030000	                            je 0x4002500	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40021bb	    0x81faf6ffff6f	                     cmp edx, 0x6ffffff6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40021c1	     0xf8574030000	                           jne 0x400253b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40021c7	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40021ce	            0x89c2	                            mov edx, eax	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40021d0	          0x83e201	                              and edx, 1	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40021d3	        0x807e0a40	              cmp byte [rsi + 0xa], 0x40	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40021d7	        0x400f95c6	                               setne sil	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40021db	        0x400fb6f6	                          movzx esi, sil	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40021df	        0x48c1e602	                              shl rsi, 2	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40021e3	        0x48897338	             mov qword [rbx + 0x38], rsi	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40021e7	      0xe9c4000000	                           jmp 0x40022b0	      3347	elf.c	FUNCTION_48	SWITCH_1
0x40021ec	         0xf1f4000	                         nop dword [rax]	      3347	elf.c	FUNCTION_48	SWITCH_1
0x40021f0	            0x85d2	                           test edx, edx	      3259	elf.c	FUNCTION_48	IF_15
0x40021f2	     0xf8559ffffff	                           jne 0x4002151	      3259	elf.c	FUNCTION_48	IF_15
0x40021f8	      0xbe08000000	                              mov esi, 8	      3259	elf.c	FUNCTION_48	IF_15
0x40021fd	      0xe94affffff	                           jmp 0x400214c	      3259	elf.c	FUNCTION_48	IF_15
0x4002202	    0x660f1f440000	                    nop word [rax + rax]	      3259	elf.c	FUNCTION_48	IF_15
0x4002208	        0xf6462310	           test byte [rsi + 0x23], 0x10 	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x400220c	     0xf84cefdffff	                            je 0x4001fe0	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x4002212	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4002215	          0xc1e805	                              shr eax, 5	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4002218	      0xa900800200	                       test eax, 0x28000	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x400221d	     0xf84c5030000	                            je 0x40025e8	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4002223	      0x41807f017a	                cmp byte [r15 + 1], 0x7a	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4002228	     0xf85b2fdffff	                           jne 0x4001fe0	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x400222e	          0x4c89ff	                            mov rdi, r15	       982	elf.c	FUNCTION_25	CALL_1
0x4002231	      0xe800000000	                          call 0x4002236	       982	elf.c	FUNCTION_25	CALL_1
0x4002236	          0x4c89ef	                            mov rdi, r13	       983	elf.c	FUNCTION_25	CALL_2
0x4002239	            0x89c6	                            mov esi, eax	       983	elf.c	FUNCTION_25	CALL_2
0x400223b	      0x4889442408	                mov qword [rsp + 8], rax	       983	elf.c	FUNCTION_25	CALL_2
0x4002240	      0xe800000000	                          call 0x4002245	       983	elf.c	FUNCTION_25	CALL_2
0x4002245	          0x4885c0	                           test rax, rax	       984	elf.c	FUNCTION_25	IF_1
0x4002248	     0xf84d1feffff	                            je 0x400211f	       984	elf.c	FUNCTION_25	IF_1
0x400224e	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_221	CALL_3
0x4002253	        0x498d7702	                      lea rsi, [r15 + 2]	        53	string3.h	FUNCTION_221	CALL_3
0x4002257	        0x488d7801	                      lea rdi, [rax + 1]	        53	string3.h	FUNCTION_221	CALL_3
0x400225b	          0xc6002e	                    mov byte [rax], 0x2e	       986	elf.c	FUNCTION_25
0x400225e	        0x48890424	                    mov qword [rsp], rax	        53	string3.h	FUNCTION_221	CALL_3
0x4002262	          0x83ea01	                              sub edx, 1	        53	string3.h	FUNCTION_221	CALL_3
0x4002265	      0xe800000000	                          call 0x400226a	        53	string3.h	FUNCTION_221	CALL_3
0x400226a	        0x488b0c24	                    mov rcx, qword [rsp]	        53	string3.h	FUNCTION_221	CALL_3
0x400226e	          0x4989cf	                            mov r15, rcx	        53	string3.h	FUNCTION_221	CALL_3
0x4002271	      0xe96afdffff	                           jmp 0x4001fe0	        53	string3.h	FUNCTION_221	CALL_3
0x4002276	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        53	string3.h	FUNCTION_221	CALL_3
0x4002280	          0x83fa09	                              cmp edx, 9	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002283	     0xf84b7010000	                            je 0x4002440	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002289	          0x83fa0b	                            cmp edx, 0xb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400228c	     0xf85a9020000	                           jne 0x400253b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002292	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3296	elf.c	FUNCTION_48	SWITCH_1
0x4002299	            0x89c2	                            mov edx, eax	      3296	elf.c	FUNCTION_48	SWITCH_1
0x400229b	          0x83e201	                              and edx, 1	      3296	elf.c	FUNCTION_48	SWITCH_1
0x400229e	         0xfb67605	               movzx esi, byte [rsi + 5]	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40022a2	        0x48897338	             mov qword [rbx + 0x38], rsi	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40022a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3296	elf.c	FUNCTION_48	SWITCH_1
0x40022b0	            0x85d2	                           test edx, edx	      3350	elf.c	FUNCTION_48	IF_21
0x40022b2	            0x7405	                            je 0x40022b9	      3350	elf.c	FUNCTION_48	IF_21
0x40022b4	      0x48834b0802	                   or qword [rbx + 8], 2	      3351	elf.c	FUNCTION_48	IF_21
0x40022b9	            0xa808	                              test al, 8	      3352	elf.c	FUNCTION_48	IF_22
0x40022bb	            0x7505	                           jne 0x40022c2	      3352	elf.c	FUNCTION_48	IF_22
0x40022bd	      0x48834b0801	                   or qword [rbx + 8], 1	      3353	elf.c	FUNCTION_48	IF_22
0x40022c2	            0xa810	                           test al, 0x10	      3354	elf.c	FUNCTION_48	IF_23
0x40022c4	            0x7405	                            je 0x40022cb	      3354	elf.c	FUNCTION_48	IF_23
0x40022c6	      0x48834b0804	                   or qword [rbx + 8], 4	      3355	elf.c	FUNCTION_48	IF_23
0x40022cb	      0xa900008000	                      test eax, 0x800000	      3356	elf.c	FUNCTION_48	IF_24
0x40022d0	            0x740f	                            je 0x40022e1	      3356	elf.c	FUNCTION_48	IF_24
0x40022d2	    0x8bbdc4000000	            mov edi, dword [rbp + 0xc4] 	      3359	elf.c	FUNCTION_48	IF_24
0x40022d8	      0x48834b0810	                or qword [rbx + 8], 0x10	      3358	elf.c	FUNCTION_48	IF_24
0x40022dd	        0x48897b38	             mov qword [rbx + 0x38], rdi	      3359	elf.c	FUNCTION_48	IF_24
0x40022e1	      0xa900000001	                     test eax, 0x1000000	      3361	elf.c	FUNCTION_48	IF_25
0x40022e6	            0x7405	                            je 0x40022ed	      3361	elf.c	FUNCTION_48	IF_25
0x40022e8	      0x48834b0820	                or qword [rbx + 8], 0x20	      3362	elf.c	FUNCTION_48	IF_25
0x40022ed	            0x85c9	                           test ecx, ecx	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40022ef	            0x7519	                           jne 0x400230a	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40022f1	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40022f8	    0x4883bab00000	               cmp qword [rdx + 0xb0], 0	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x4002300	            0x7408	                            je 0x400230a	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x4002302	    0x48814b080002	               or qword [rbx + 8], 0x200	      3364	elf.c	FUNCTION_48	IF_26
0x400230a	          0xf6c404	                              test ah, 4	      3365	elf.c	FUNCTION_48	IF_27
0x400230d	            0x7441	                            je 0x4002350	      3365	elf.c	FUNCTION_48	IF_27
0x400230f	    0x48814b080004	               or qword [rbx + 8], 0x400	      3367	elf.c	FUNCTION_48	IF_27
0x4002317	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x400231c	            0x7532	                           jne 0x4002350	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x400231e	          0xf6c401	                              test ah, 1	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x4002321	            0x752d	                           jne 0x4002350	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x4002323	    0x488b8d100100	           mov rcx, qword [rbp + 0x110] 	      3371	elf.c	FUNCTION_48	IF_27	IF_28
0x400232a	    0x48c743200000	               mov qword [rbx + 0x20], 0	      3373	elf.c	FUNCTION_48	IF_27	IF_28
0x4002332	          0x4885c9	                           test rcx, rcx	      3374	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4002335	            0x7419	                            je 0x4002350	      3374	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4002337	        0x488b5118	            mov rdx, qword [rcx + 0x18] 	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x400233b	        0x48035110	             add rdx, qword [rcx + 0x10]	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x400233f	          0x4885d2	                           test rdx, rdx	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4002342	        0x48895320	             mov qword [rbx + 0x20], rdx	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4002346	            0x7408	                            je 0x4002350	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4002348	    0xc74304080000	                  mov dword [rbx + 4], 8	      3378	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x400234f	              0x90	                                     nop	      3378	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4002350	            0x89c2	                            mov edx, eax	      3382	elf.c	FUNCTION_48	IF_31
0x4002352	    0x81e200800002	                      and edx, 0x2008000	      3382	elf.c	FUNCTION_48	IF_31
0x4002358	    0x81fa00800000	                         cmp edx, 0x8000	      3382	elf.c	FUNCTION_48	IF_31
0x400235e	     0xf844c020000	                            je 0x40025b0	      3382	elf.c	FUNCTION_48	IF_31
0x4002364	            0xa804	                              test al, 4	      3389	elf.c	FUNCTION_48	IF_32
0x4002366	            0x7460	                            je 0x40023c8	      3389	elf.c	FUNCTION_48	IF_32
0x4002368	        0x498b0424	                    mov rax, qword [r12]	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x400236c	          0x4885c0	                           test rax, rax	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x400236f	     0xf84fb010000	                            je 0x4002570	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x4002375	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x4002378	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x400237b	            0x89cf	                            mov edi, ecx	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x400237d	             0x1d7	                            add edi, edx	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x400237f	     0xf84eb010000	                            je 0x4002570	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x4002385	           0xfb630	                   movzx esi, byte [rax]	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4002388	          0x83e603	                              and esi, 3	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400238b	        0x4080fe02	                              cmp sil, 2	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400238f	            0x740a	                            je 0x400239b	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4002391	        0xf6400308	                  test byte [rax + 3], 8	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x4002395	     0xf84d5010000	                            je 0x4002570	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x400239b	            0x85c9	                           test ecx, ecx	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400239d	            0x740b	                            je 0x40023aa	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400239f	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x40023a4	     0xf8406030000	                            je 0x40026b0	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x40023aa	            0x85d2	                           test edx, edx	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40023ac	            0x741a	                            je 0x40023c8	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40023ae	      0x48837b7000	               cmp qword [rbx + 0x70], 0	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40023b3	        0x488d7370	                   lea rsi, [rbx + 0x70]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40023b7	          0x4589c8	                            mov r8d, r9d	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40023ba	      0xb901000000	                              mov ecx, 1	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40023bf	     0xf84c9010000	                            je 0x400258e	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40023c5	           0xf1f00	                         nop dword [rax]	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40023c8	    0x498b86b00000	            mov rax, qword [r14 + 0xb0] 	      3428	elf.c	FUNCTION_48	IF_37
0x40023cf	        0x448b7b04	               mov r15d, dword [rbx + 4]	      3427	elf.c	FUNCTION_48
0x40023d3	          0x4885c0	                           test rax, rax	      3428	elf.c	FUNCTION_48	IF_37
0x40023d6	            0x7413	                            je 0x40023eb	      3428	elf.c	FUNCTION_48	IF_37
0x40023d8	          0x4889ea	                            mov rdx, rbp	      3429	elf.c	FUNCTION_48	IF_37
0x40023db	          0x4889de	                            mov rsi, rbx	      3429	elf.c	FUNCTION_48	IF_37
0x40023de	          0x4c89ef	                            mov rdi, r13	      3429	elf.c	FUNCTION_48	IF_37
0x40023e1	            0xffd0	                                call rax	      3429	elf.c	FUNCTION_48	IF_37
0x40023e3	            0x85c0	                           test eax, eax	      3429	elf.c	FUNCTION_48	IF_37
0x40023e5	     0xf8434fdffff	                            je 0x400211f	      3429	elf.c	FUNCTION_48	IF_37
0x40023eb	        0x4183ff08	                             cmp r15d, 8	      3435	elf.c	FUNCTION_48	IF_38
0x40023ef	     0xf8533fdffff	                           jne 0x4002128	      3435	elf.c	FUNCTION_48	IF_38
0x40023f5	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3435	elf.c	FUNCTION_48	IF_38
0x40023fa	     0xf8428fdffff	                            je 0x4002128	      3435	elf.c	FUNCTION_48	IF_38
0x4002400	    0xc74304080000	                  mov dword [rbx + 4], 8	      3439	elf.c	FUNCTION_48	IF_38
0x4002407	      0xe91cfdffff	                           jmp 0x4002128	      3439	elf.c	FUNCTION_48	IF_38
0x400240c	         0xf1f4000	                         nop dword [rax]	      3439	elf.c	FUNCTION_48	IF_38
0x4002410	    0x81fafeffff6f	                     cmp edx, 0x6ffffffe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002416	     0xf84fc000000	                            je 0x4002518	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400241c	    0x81faffffff6f	                     cmp edx, 0x6fffffff	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002422	     0xf8513010000	                           jne 0x400253b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4002428	            0x89c2	                            mov edx, eax	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400242a	    0x48c743380200	               mov qword [rbx + 0x38], 2	      3314	elf.c	FUNCTION_48	SWITCH_1
0x4002432	          0x83e201	                              and edx, 1	      3314	elf.c	FUNCTION_48	SWITCH_1
0x4002435	      0xe976feffff	                           jmp 0x40022b0	      3315	elf.c	FUNCTION_48	SWITCH_1
0x400243a	    0x660f1f440000	                    nop word [rax + rax]	      3315	elf.c	FUNCTION_48	SWITCH_1
0x4002440	        0x498b7508	                mov rsi, qword [r13 + 8]	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4002444	            0x89c2	                            mov edx, eax	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4002446	          0x83e201	                              and edx, 1	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4002449	    0x488bb6680300	           mov rsi, qword [rsi + 0x368] 	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4002450	    0xf68688030000	              test byte [rsi + 0x388], 4	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4002457	     0xf8453feffff	                            je 0x40022b0	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x400245d	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4002464	         0xfb67603	               movzx esi, byte [rsi + 3]	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4002468	        0x48897338	             mov qword [rbx + 0x38], rsi	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x400246c	      0xe93ffeffff	                           jmp 0x40022b0	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4002471	     0xf1f80000000	                         nop dword [rax]	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4002478	        0x498b7508	                mov rsi, qword [r13 + 8]	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x400247c	            0x89c2	                            mov edx, eax	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x400247e	          0x83e201	                              and edx, 1	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4002481	    0x488bb6680300	           mov rsi, qword [rsi + 0x368] 	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4002488	    0xf68688030000	              test byte [rsi + 0x388], 8	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x400248f	     0xf841bfeffff	                            je 0x40022b0	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4002495	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x400249c	         0xfb67604	               movzx esi, byte [rsi + 4]	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x40024a0	        0x48897338	             mov qword [rbx + 0x38], rsi	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x40024a4	      0xe907feffff	                           jmp 0x40022b0	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x40024a9	     0xf1f80000000	                         nop dword [rax]	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x40024b0	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3300	elf.c	FUNCTION_48	SWITCH_1
0x40024b7	            0x89c2	                            mov edx, eax	      3300	elf.c	FUNCTION_48	SWITCH_1
0x40024b9	          0x83e201	                              and edx, 1	      3300	elf.c	FUNCTION_48	SWITCH_1
0x40024bc	         0xfb67606	               movzx esi, byte [rsi + 6]	      3300	elf.c	FUNCTION_48	SWITCH_1
0x40024c0	        0x48897338	             mov qword [rbx + 0x38], rsi	      3300	elf.c	FUNCTION_48	SWITCH_1
0x40024c4	      0xe9e7fdffff	                           jmp 0x40022b0	      3301	elf.c	FUNCTION_48	SWITCH_1
0x40024c9	     0xf1f80000000	                         nop dword [rax]	      3301	elf.c	FUNCTION_48	SWITCH_1
0x40024d0	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40024d3	    0x48c743380000	               mov qword [rbx + 0x38], 0	      3318	elf.c	FUNCTION_48	SWITCH_1
0x40024db	            0x85d2	                           test edx, edx	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40024dd	     0xf85a5010000	                           jne 0x4002688	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40024e3	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40024ea	    0x8b9240030000	           mov edx, dword [rdx + 0x340] 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40024f0	          0x89532c	             mov dword [rbx + 0x2c], edx	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40024f3	            0x89c2	                            mov edx, eax	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40024f5	          0x83e201	                              and edx, 1	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40024f8	      0xe9b3fdffff	                           jmp 0x40022b0	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40024fd	           0xf1f00	                         nop dword [rax]	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x4002500	            0x89c2	                            mov edx, eax	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x4002502	    0x48c743380400	               mov qword [rbx + 0x38], 4	      3342	elf.c	FUNCTION_48	SWITCH_1
0x400250a	          0x83e201	                              and edx, 1	      3342	elf.c	FUNCTION_48	SWITCH_1
0x400250d	      0xe99efdffff	                           jmp 0x40022b0	      3343	elf.c	FUNCTION_48	SWITCH_1
0x4002512	    0x660f1f440000	                    nop word [rax + rax]	      3343	elf.c	FUNCTION_48	SWITCH_1
0x4002518	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x400251b	    0x48c743380000	               mov qword [rbx + 0x38], 0	      3330	elf.c	FUNCTION_48	SWITCH_1
0x4002523	            0x85d2	                           test edx, edx	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x4002525	     0xf8525010000	                           jne 0x4002650	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x400252b	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4002532	    0x8b9244030000	           mov edx, dword [rdx + 0x344] 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4002538	          0x89532c	             mov dword [rbx + 0x2c], edx	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x400253b	            0x89c2	                            mov edx, eax	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x400253d	          0x83e201	                              and edx, 1	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4002540	      0xe96bfdffff	                           jmp 0x40022b0	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4002545	           0xf1f00	                         nop dword [rax]	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4002548	      0x41807f065f	                cmp byte [r15 + 6], 0x5f	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x400254d	     0xf858dfaffff	                           jne 0x4001fe0	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x4002553	       0xd00000008	                    or eax, section_end.	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4002558	    0x41b901000000	                              mov r9d, 1	      3171	elf.c	FUNCTION_48	IF_2	IF_3
0x400255e	          0x894620	             mov dword [rsi + 0x20], eax	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4002561	    0xc703ffffffff	            mov dword [rbx], 0xffffffff 	      3211	elf.c	FUNCTION_48	IF_10
0x4002567	      0xe99efaffff	                           jmp 0x400200a	      3211	elf.c	FUNCTION_48	IF_10
0x400256c	         0xf1f4000	                         nop dword [rax]	      3211	elf.c	FUNCTION_48	IF_10
0x4002570	         0xfb65525	           movzx edx, byte [rbp + 0x25] 	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4002574	        0x488d7370	                   lea rsi, [rbx + 0x70]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4002578	        0x488d4358	                   lea rax, [rbx + 0x58]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x400257c	          0x4589c8	                            mov r8d, r9d	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x400257f	            0x89d1	                            mov ecx, edx	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4002581	          0xc0e902	                               shr cl, 2	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4002584	          0x83e101	                              and ecx, 1	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4002587	          0x83e204	                              and edx, 4	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x400258a	        0x480f44f0	                          cmove rsi, rax	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x400258e	          0x4c89fa	                            mov rdx, r15	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4002591	          0x4c89ef	                            mov rdi, r13	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4002594	      0xe827f8ffff	call sym._bfd_elf_init_reloc_shdr.isra.18	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4002599	            0x85c0	                           test eax, eax	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x400259b	     0xf8527feffff	                           jne 0x40023c8	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40025a1	      0xe979fbffff	                           jmp 0x400211f	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40025a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40025b0	      0xba00000080	                     mov edx, 0x80000000	      3383	elf.c	FUNCTION_48	IF_31
0x40025b5	        0x48095308	                 or qword [rbx + 8], rdx	      3383	elf.c	FUNCTION_48	IF_31
0x40025b9	      0xe9a6fdffff	                           jmp 0x4002364	      3383	elf.c	FUNCTION_48	IF_31
0x40025be	            0x6690	                                     nop	      3383	elf.c	FUNCTION_48	IF_31
0x40025c0	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40025c7	            0x89c2	                            mov edx, eax	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40025c9	          0x83e201	                              and edx, 1	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40025cc	         0xfb6760a	            movzx esi, byte [rsi + 0xa] 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40025d0	        0x40c0ee03	                              shr sil, 3	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40025d4	        0x400fb6f6	                          movzx esi, sil	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40025d8	        0x48897338	             mov qword [rbx + 0x38], rsi	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40025dc	      0xe9cffcffff	                           jmp 0x40022b0	      3289	elf.c	FUNCTION_48	SWITCH_1
0x40025e1	     0xf1f80000000	                         nop dword [rax]	      3289	elf.c	FUNCTION_48	SWITCH_1
0x40025e8	         0xfb64624	           movzx eax, byte [rsi + 0x24] 	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x40025ec	          0x83e030	                           and eax, 0x30	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x40025ef	            0x3c10	                            cmp al, 0x10	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x40025f1	     0xf85e9f9ffff	                           jne 0x4001fe0	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x40025f7	          0x4c89ff	                            mov rdi, r15	       969	elf.c	FUNCTION_24	CALL_1
0x40025fa	      0xe800000000	                          call 0x40025ff	       969	elf.c	FUNCTION_24	CALL_1
0x40025ff	          0x8d7002	                      lea esi, [rax + 2]	       970	elf.c	FUNCTION_24	CALL_2
0x4002602	          0x4c89ef	                            mov rdi, r13	       970	elf.c	FUNCTION_24	CALL_2
0x4002605	      0x4889442408	                mov qword [rsp + 8], rax	       970	elf.c	FUNCTION_24	CALL_2
0x400260a	      0xe800000000	                          call 0x400260f	       970	elf.c	FUNCTION_24	CALL_2
0x400260f	          0x4885c0	                           test rax, rax	       971	elf.c	FUNCTION_24	IF_1
0x4002612	     0xf8407fbffff	                            je 0x400211f	       971	elf.c	FUNCTION_24	IF_1
0x4002618	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_221	CALL_3
0x400261d	        0x488d7802	                      lea rdi, [rax + 2]	        53	string3.h	FUNCTION_221	CALL_3
0x4002621	        0x498d7701	                      lea rsi, [r15 + 1]	        53	string3.h	FUNCTION_221	CALL_3
0x4002625	          0xc6002e	                    mov byte [rax], 0x2e	       973	elf.c	FUNCTION_24
0x4002628	        0xc640017a	                mov byte [rax + 1], 0x7a	       974	elf.c	FUNCTION_24
0x400262c	        0x48890424	                    mov qword [rsp], rax	        53	string3.h	FUNCTION_221	CALL_3
0x4002630	            0x89d2	                            mov edx, edx	        53	string3.h	FUNCTION_221	CALL_3
0x4002632	      0xe800000000	                          call 0x4002637	        53	string3.h	FUNCTION_221	CALL_3
0x4002637	      0x41807f017a	                cmp byte [r15 + 1], 0x7a	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x400263c	        0x488b0c24	                    mov rcx, qword [rsp]	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4002640	     0xf8496000000	                            je 0x40026dc	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4002646	          0x4989cf	                            mov r15, rcx	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4002649	      0xe992f9ffff	                           jmp 0x4001fe0	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x400264e	            0x6690	                                     nop	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4002650	    0x498bb5f80000	            mov rsi, qword [r13 + 0xf8] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4002657	    0x8bb644030000	           mov esi, dword [rsi + 0x344] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400265d	            0x85f6	                           test esi, esi	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400265f	     0xf84d6feffff	                            je 0x400253b	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4002665	            0x39f2	                            cmp edx, esi	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4002667	     0xf84cefeffff	                            je 0x400253b	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400266d	        0x44890c24	                    mov dword [rsp], r9d	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4002671	      0xbe0a0d0000	                          mov esi, 0xd0a	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4002676	      0xbf00000000	                              mov edi, 0	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400267b	      0xe800000000	                          call 0x4002680	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4002680	      0xe94afaffff	                           jmp 0x40020cf	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4002685	           0xf1f00	                         nop dword [rax]	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4002688	    0x498bb5f80000	            mov rsi, qword [r13 + 0xf8] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x400268f	    0x8bb640030000	           mov esi, dword [rsi + 0x340] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4002695	            0x85f6	                           test esi, esi	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4002697	     0xf849efeffff	                            je 0x400253b	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x400269d	            0x39f2	                            cmp edx, esi	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x400269f	     0xf8496feffff	                            je 0x400253b	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40026a5	        0x44890c24	                    mov dword [rsp], r9d	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40026a9	      0xbefe0c0000	                          mov esi, 0xcfe	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40026ae	            0xebc6	                           jmp 0x4002676	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40026b0	        0x488d7358	                   lea rsi, [rbx + 0x58]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026b4	            0x31c9	                            xor ecx, ecx	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026b6	          0x4589c8	                            mov r8d, r9d	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026b9	          0x4c89fa	                            mov rdx, r15	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026bc	          0x4c89ef	                            mov rdi, r13	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026bf	        0x44890c24	                    mov dword [rsp], r9d	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026c3	      0xe8f8f6ffff	call sym._bfd_elf_init_reloc_shdr.isra.18	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026c8	            0x85c0	                           test eax, eax	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026ca	     0xf844ffaffff	                            je 0x400211f	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026d0	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026d3	        0x448b0c24	                    mov r9d, dword [rsp]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026d7	      0xe9cefcffff	                           jmp 0x40023aa	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x40026dc	      0xbe850c0000	                          mov esi, 0xc85	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x40026e1	      0xbf00000000	                              mov edi, 0	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x40026e6	      0xe800000000	                          call 0x40026eb	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x40026eb	        0x488b0c24	                    mov rcx, qword [rsp]	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x40026ef	          0x4989cf	                            mov r15, rcx	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x40026f2	      0xe9e9f8ffff	                           jmp 0x4001fe0	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x40026f7	      0xbe01000000	                              mov esi, 1	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x40026fc	      0xe94bfaffff	                           jmp 0x400214c	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
_bfd_elf_copy_private_symbol_data	functions,0:CALL,11:FOR,0:WHILE,0:SWITCH,0:IF,7:DO,0:ELSE,4	70
0x400de50	        0x488b4708	                mov rax, qword [rdi + 8]	      7713	elf.c	FUNCTION_87	IF_1	CALL_1
0x400de54	        0x83780805	                  cmp dword [rax + 8], 5	      7713	elf.c	FUNCTION_87	IF_1	CALL_1
0x400de58	            0x7406	                            je 0x400de60	      7713	elf.c	FUNCTION_87	IF_1	CALL_1
0x400de5a	      0xb801000000	                              mov eax, 1	      7742	elf.c	FUNCTION_87
0x400de5f	              0xc3	                                     ret	      7742	elf.c	FUNCTION_87
0x400de60	        0x488b4208	                mov rax, qword [rdx + 8]	      7714	elf.c	FUNCTION_87	IF_1	CALL_2
0x400de64	        0x83780805	                  cmp dword [rax + 8], 5	      7714	elf.c	FUNCTION_87	IF_1	CALL_2
0x400de68	            0x75f0	                           jne 0x400de5a	      7714	elf.c	FUNCTION_87	IF_1	CALL_2
0x400de6a	          0x488b06	                    mov rax, qword [rsi]	      7717	elf.c	FUNCTION_87	CALL_3
0x400de6d	          0x4885c0	                           test rax, rax	      7717	elf.c	FUNCTION_87	CALL_3
0x400de70	            0x740e	                            je 0x400de80	      7717	elf.c	FUNCTION_87	CALL_3
0x400de72	        0x488b5008	                mov rdx, qword [rax + 8]	      7717	elf.c	FUNCTION_87	CALL_3
0x400de76	        0x837a0805	                  cmp dword [rdx + 8], 5	      7717	elf.c	FUNCTION_87	CALL_3
0x400de7a	     0xf8490000000	                            je 0x400df10	      7717	elf.c	FUNCTION_87	CALL_3
0x400de80	          0x488b01	                    mov rax, qword [rcx]	      7718	elf.c	FUNCTION_87	CALL_4
0x400de83	          0x4885c0	                           test rax, rax	      7718	elf.c	FUNCTION_87	CALL_4
0x400de86	            0x74d2	                            je 0x400de5a	      7718	elf.c	FUNCTION_87	CALL_4
0x400de88	            0x31f6	                            xor esi, esi	      7718	elf.c	FUNCTION_87	CALL_4
0x400de8a	        0x488b5008	                mov rdx, qword [rax + 8]	      7718	elf.c	FUNCTION_87	CALL_4
0x400de8e	        0x837a0805	                  cmp dword [rdx + 8], 5	      7718	elf.c	FUNCTION_87	CALL_4
0x400de92	            0x75c6	                           jne 0x400de5a	      7718	elf.c	FUNCTION_87	CALL_4
0x400de94	    0x4883b8f80000	               cmp qword [rax + 0xf8], 0	      7718	elf.c	FUNCTION_87	CALL_4
0x400de9c	            0x74bc	                            je 0x400de5a	      7718	elf.c	FUNCTION_87	CALL_4
0x400de9e	          0x4885f6	                           test rsi, rsi	      7720	elf.c	FUNCTION_87	IF_2
0x400dea1	            0x74b7	                            je 0x400de5a	      7720	elf.c	FUNCTION_87	IF_2
0x400dea3	          0x4885c9	                           test rcx, rcx	      7722	elf.c	FUNCTION_87	IF_2
0x400dea6	          0x8b464c	            mov eax, dword [rsi + 0x4c] 	      7721	elf.c	FUNCTION_87	IF_2
0x400dea9	            0x74af	                            je 0x400de5a	      7722	elf.c	FUNCTION_87	IF_2
0x400deab	            0x85c0	                           test eax, eax	      7722	elf.c	FUNCTION_87	IF_2
0x400dead	            0x74ab	                            je 0x400de5a	      7722	elf.c	FUNCTION_87	IF_2
0x400deaf	    0x48817e200000	               cmp qword [rsi + 0x20], 0	      7723	elf.c	FUNCTION_87	IF_2	CALL_5
0x400deb7	            0x75a1	                           jne 0x400de5a	      7723	elf.c	FUNCTION_87	IF_2	CALL_5
0x400deb9	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_6
0x400dec0	    0x3b82780c0000	           cmp eax, dword [rdx + 0xc78] 	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_6
0x400dec6	            0x7467	                            je 0x400df2f	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_6
0x400dec8	    0x3b827c0c0000	           cmp eax, dword [rdx + 0xc7c] 	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_7
0x400dece	            0x7466	                            je 0x400df36	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_7
0x400ded0	    0x488bb2980c00	           mov rsi, qword [rdx + 0xc98] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_8
0x400ded7	          0x3b4650	            cmp eax, dword [rsi + 0x50] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_8
0x400deda	            0x7461	                            je 0x400df3d	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_8
0x400dedc	          0x3b464c	            cmp eax, dword [rsi + 0x4c] 	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_9
0x400dedf	            0x7463	                            je 0x400df44	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_9
0x400dee1	    0x488b92e80200	           mov rdx, qword [rdx + 0x2e8] 	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_11
0x400dee8	          0x4885d2	                           test rdx, rdx	      6045	elf.c	FUNCTION_72	FOR_1
0x400deeb	            0x750c	                           jne 0x400def9	      6045	elf.c	FUNCTION_72	FOR_1
0x400deed	            0xeb19	                           jmp 0x400df08	      6045	elf.c	FUNCTION_72	FOR_1
0x400deef	              0x90	                                     nop	      6045	elf.c	FUNCTION_72	FOR_1
0x400def0	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      6045	elf.c	FUNCTION_72	FOR_1
0x400def4	          0x4885d2	                           test rdx, rdx	      6045	elf.c	FUNCTION_72	FOR_1
0x400def7	            0x740f	                            je 0x400df08	      6045	elf.c	FUNCTION_72	FOR_1
0x400def9	          0x3b4250	            cmp eax, dword [rdx + 0x50] 	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400defc	            0x75f2	                           jne 0x400def0	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400defe	      0xb844ffffff	                     mov eax, 0xffffff44	      7737	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7
0x400df03	       0xf1f440000	                   nop dword [rax + rax]	      7737	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7
0x400df08	          0x89414c	             mov dword [rcx + 0x4c], eax	      7738	elf.c	FUNCTION_87	IF_2
0x400df0b	      0xe94affffff	                           jmp 0x400de5a	      7738	elf.c	FUNCTION_87	IF_2
0x400df10	    0x4883b8f80000	               cmp qword [rax + 0xf8], 0	      7717	elf.c	FUNCTION_87	CALL_3
0x400df18	     0xf8462ffffff	                            je 0x400de80	      7717	elf.c	FUNCTION_87	CALL_3
0x400df1e	          0x488b01	                    mov rax, qword [rcx]	      7718	elf.c	FUNCTION_87	CALL_4
0x400df21	          0x4885c0	                           test rax, rax	      7718	elf.c	FUNCTION_87	CALL_4
0x400df24	     0xf8430ffffff	                            je 0x400de5a	      7718	elf.c	FUNCTION_87	CALL_4
0x400df2a	      0xe95bffffff	                           jmp 0x400de8a	      7718	elf.c	FUNCTION_87	CALL_4
0x400df2f	      0xb840ffffff	                     mov eax, 0xffffff40	      7729	elf.c	FUNCTION_87	IF_2	IF_3
0x400df34	            0xebd2	                           jmp 0x400df08	      7729	elf.c	FUNCTION_87	IF_2	IF_3
0x400df36	      0xb841ffffff	                     mov eax, 0xffffff41	      7731	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4
0x400df3b	            0xebcb	                           jmp 0x400df08	      7731	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4
0x400df3d	      0xb842ffffff	                     mov eax, 0xffffff42	      7733	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5
0x400df42	            0xebc4	                           jmp 0x400df08	      7733	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5
0x400df44	      0xb843ffffff	                     mov eax, 0xffffff43	      7735	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6
0x400df49	            0xebbd	                           jmp 0x400df08	      7735	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6
bfd_elf_gnu_hash	functions,0:CALL,0:FOR,0:WHILE,1:SWITCH,0:IF,0:DO,0:ELSE,0	16
0x4003080	           0xfb617	                   movzx edx, byte [rdi]	       229	elf.c	FUNCTION_12	WHILE_1
0x4003083	        0x488d4f01	                      lea rcx, [rdi + 1]	       229	elf.c	FUNCTION_12	WHILE_1
0x4003087	      0xb805150000	                         mov eax, 0x1505	       229	elf.c	FUNCTION_12	WHILE_1
0x400308c	            0x84d2	                             test dl, dl	       229	elf.c	FUNCTION_12	WHILE_1
0x400308e	            0x741c	                            je 0x40030ac	       229	elf.c	FUNCTION_12	WHILE_1
0x4003090	          0x4889c6	                            mov rsi, rax	       229	elf.c	FUNCTION_12	WHILE_1
0x4003093	        0x4883c101	                              add rcx, 1	       229	elf.c	FUNCTION_12	WHILE_1
0x4003097	        0x48c1e605	                              shl rsi, 5	       229	elf.c	FUNCTION_12	WHILE_1
0x400309b	          0x4801f2	                            add rdx, rsi	       229	elf.c	FUNCTION_12	WHILE_1
0x400309e	          0x4801d0	                            add rax, rdx	       230	elf.c	FUNCTION_12	WHILE_1
0x40030a1	         0xfb651ff	               movzx edx, byte [rcx - 1]	       229	elf.c	FUNCTION_12	WHILE_1
0x40030a5	            0x84d2	                             test dl, dl	       229	elf.c	FUNCTION_12	WHILE_1
0x40030a7	            0x75e7	                           jne 0x4003090	       229	elf.c	FUNCTION_12	WHILE_1
0x40030a9	            0x89c0	                            mov eax, eax	       229	elf.c	FUNCTION_12	WHILE_1
0x40030ab	              0xc3	                                     ret	       229	elf.c	FUNCTION_12	WHILE_1
0x40030ac	            0xf3c3	                                     ret	       232	elf.c	FUNCTION_12
elf_parse_notes	functions,0:CALL,14:FOR,1:WHILE,1:SWITCH,1:IF,11:DO,0:ELSE,1	239
0x4001210	            0x4157	                                push r15	     11085	elf.c	FUNCTION_191
0x4001212	            0x4156	                                push r14	     11085	elf.c	FUNCTION_191
0x4001214	          0x4989f7	                            mov r15, rsi	     11085	elf.c	FUNCTION_191
0x4001217	            0x4155	                                push r13	     11085	elf.c	FUNCTION_191
0x4001219	            0x4154	                                push r12	     11085	elf.c	FUNCTION_191
0x400121b	          0x4989fe	                            mov r14, rdi	     11085	elf.c	FUNCTION_191
0x400121e	              0x55	                                push rbp	     11085	elf.c	FUNCTION_191
0x400121f	              0x53	                                push rbx	     11085	elf.c	FUNCTION_191
0x4001220	          0x4889d3	                            mov rbx, rdx	     11085	elf.c	FUNCTION_191
0x4001223	    0x4881ecf80000	                           sub rsp, 0xf8	     11085	elf.c	FUNCTION_191
0x400122a	    0x64488b042528	                mov rax, qword fs:[0x28]	     11085	elf.c	FUNCTION_191
0x4001233	    0x48898424e800	             mov qword [rsp + 0xe8], rax	     11085	elf.c	FUNCTION_191
0x400123b	            0x31c0	                            xor eax, eax	     11085	elf.c	FUNCTION_191
0x400123d	        0x4983f803	                               cmp r8, 3	     11092	elf.c	FUNCTION_191	IF_1
0x4001241	        0x48890c24	                    mov qword [rsp], rcx	     11085	elf.c	FUNCTION_191
0x4001245	            0x7639	                           jbe 0x4001280	     11092	elf.c	FUNCTION_191	IF_1
0x4001247	        0x498d50fc	                       lea rdx, [r8 - 4]	     11094	elf.c	FUNCTION_191	IF_2
0x400124b	          0x4d89c5	                             mov r13, r8	     11094	elf.c	FUNCTION_191	IF_2
0x400124e	    0x48f7c2fbffff	            test rdx, 0xfffffffffffffffb	     11094	elf.c	FUNCTION_191	IF_2
0x4001255	            0x742f	                            je 0x4001286	     11094	elf.c	FUNCTION_191	IF_2
0x4001257	    0x488b9c24e800	            mov rbx, qword [rsp + 0xe8] 	     11180	elf.c	FUNCTION_191
0x400125f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     11180	elf.c	FUNCTION_191
0x4001268	     0xf858e030000	                           jne 0x40015fc	     11180	elf.c	FUNCTION_191
0x400126e	    0x4881c4f80000	                           add rsp, 0xf8	     11180	elf.c	FUNCTION_191
0x4001275	              0x5b	                                 pop rbx	     11180	elf.c	FUNCTION_191
0x4001276	              0x5d	                                 pop rbp	     11180	elf.c	FUNCTION_191
0x4001277	            0x415c	                                 pop r12	     11180	elf.c	FUNCTION_191
0x4001279	            0x415d	                                 pop r13	     11180	elf.c	FUNCTION_191
0x400127b	            0x415e	                                 pop r14	     11180	elf.c	FUNCTION_191
0x400127d	            0x415f	                                 pop r15	     11180	elf.c	FUNCTION_191
0x400127f	              0xc3	                                     ret	     11180	elf.c	FUNCTION_191
0x4001280	    0x41bd04000000	                             mov r13d, 4	     11093	elf.c	FUNCTION_191	IF_1
0x4001286	        0x498d041f	                    lea rax, [r15 + rbx]	     11098	elf.c	FUNCTION_191	WHILE_1
0x400128a	          0x4939c7	                            cmp r15, rax	     11098	elf.c	FUNCTION_191	WHILE_1
0x400128d	      0x4889442408	                mov qword [rsp + 8], rax	     11098	elf.c	FUNCTION_191	WHILE_1
0x4001292	     0xf83d8010000	                           jae 0x4001470	     11098	elf.c	FUNCTION_191	WHILE_1
0x4001298	        0x4883fb0b	                            cmp rbx, 0xb	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x400129c	          0x4c89fd	                            mov rbp, r15	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x400129f	     0xf86bb010000	                           jbe 0x4001460	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x40012a5	        0x498d45ff	                      lea rax, [r13 - 1]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x40012a9	          0x4d89ec	                            mov r12, r13	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x40012ac	          0x49f7dc	                                 neg r12	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x40012af	      0x4889442410	             mov qword [rsp + 0x10], rax	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x40012b4	        0x498b4608	                mov rax, qword [r14 + 8]	     11106	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x40012b8	        0x498d7f08	                      lea rdi, [r15 + 8]	     11106	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x40012bc	    0xff9080000000	                 call qword [rax + 0x80]	     11106	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x40012c2	      0x4889442430	             mov qword [rsp + 0x30], rax	     11106	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x40012c7	        0x498b4608	                mov rax, qword [r14 + 8]	     11108	elf.c	FUNCTION_191	WHILE_1	CALL_2
0x40012cb	          0x4c89ff	                            mov rdi, r15	     11108	elf.c	FUNCTION_191	WHILE_1	CALL_2
0x40012ce	    0xff9080000000	                 call qword [rax + 0x80]	     11108	elf.c	FUNCTION_191	WHILE_1	CALL_2
0x40012d4	        0x498d570c	                    lea rdx, [r15 + 0xc]	     11109	elf.c	FUNCTION_191	WHILE_1
0x40012d8	          0x4889ee	                            mov rsi, rbp	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x40012db	      0x4889442420	             mov qword [rsp + 0x20], rax	     11108	elf.c	FUNCTION_191	WHILE_1	CALL_2
0x40012e0	          0x4829d6	                            sub rsi, rdx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x40012e3	      0x4889542438	             mov qword [rsp + 0x38], rdx	     11109	elf.c	FUNCTION_191	WHILE_1
0x40012e8	          0x4889f2	                            mov rdx, rsi	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x40012eb	          0x4801da	                            add rdx, rbx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x40012ee	          0x4839d0	                            cmp rax, rdx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x40012f1	     0xf8769010000	                            ja 0x4001460	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x40012f7	        0x498b4608	                mov rax, qword [r14 + 8]	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x40012fb	        0x498d7f04	                      lea rdi, [r15 + 4]	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x40012ff	    0xff9080000000	                 call qword [rax + 0x80]	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x4001305	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x400130a	      0x4889442428	             mov qword [rsp + 0x28], rax	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x400130f	      0x4b8d542b0b	              lea rdx, [r11 + r13 + 0xb]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4001314	          0x4c21e2	                            and rdx, r12	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4001317	        0x498d3417	                    lea rsi, [r15 + rdx]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x400131b	          0x4889f1	                            mov rcx, rsi	     11115	elf.c	FUNCTION_191	WHILE_1
0x400131e	      0x4889742440	             mov qword [rsp + 0x40], rsi	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4001323	          0x4829e9	                            sub rcx, rbp	     11115	elf.c	FUNCTION_191	WHILE_1
0x4001326	        0x48030c24	                    add rcx, qword [rsp]	     11115	elf.c	FUNCTION_191	WHILE_1
0x400132a	          0x4885c0	                           test rax, rax	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x400132d	      0x48894c2448	             mov qword [rsp + 0x48], rcx	     11115	elf.c	FUNCTION_191	WHILE_1
0x4001332	            0x741d	                            je 0x4001351	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4001334	      0x483b742408	                cmp rsi, qword [rsp + 8]	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4001339	     0xf8321010000	                           jae 0x4001460	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x400133f	          0x4889e9	                            mov rcx, rbp	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4001342	          0x4829f1	                            sub rcx, rsi	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4001345	          0x4801d9	                            add rcx, rbx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4001348	          0x4839c8	                            cmp rax, rcx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x400134b	     0xf870f010000	                            ja 0x4001460	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4001351	      0x410fb64e44	           movzx ecx, byte [r14 + 0x44] 	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4001356	          0x83e107	                              and ecx, 7	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4001359	          0x80f901	                               cmp cl, 1	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x400135c	     0xf841e010000	                            je 0x4001480	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4001362	          0x80f903	                               cmp cl, 3	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4001365	     0xf8505010000	                           jne 0x4001470	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x400136b	        0x4983fb03	                              cmp r11, 3	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x400136f	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4001374	      0xbe00000000	                              mov esi, 0	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4001379	      0xb912000000	                           mov ecx, 0x12	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x400137e	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4001381	     0xf8679010000	                           jbe 0x4001500	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4001387	      0x488b442438	            mov rax, qword [rsp + 0x38] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x400138c	      0xbf00000000	                              mov edi, 0	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4001391	      0xb904000000	                              mov ecx, 4	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4001396	          0x4889c6	                            mov rsi, rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4001399	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x400139b	     0xf8433020000	                            je 0x40015d4	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013a1	      0xbf00000000	                              mov edi, 0	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013a6	      0xb903000000	                              mov ecx, 3	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013ab	          0x4889c6	                            mov rsi, rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013ae	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013b0	     0xf8428020000	                            je 0x40015de	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013b6	        0x4983fb06	                              cmp r11, 6	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x40013ba	     0xf8641020000	                           jbe 0x4001601	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x40013c0	      0xbf00000000	                              mov edi, 0	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013c5	      0xb907000000	                              mov ecx, 7	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013ca	          0x4889c6	                            mov rsi, rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013cd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013cf	     0xf8413020000	                            je 0x40015e8	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013d5	        0x4983fb0a	                            cmp r11, 0xa	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x40013d9	            0x7615	                           jbe 0x40013f0	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x40013db	      0xbf00000000	                              mov edi, 0	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013e0	      0xb90b000000	                            mov ecx, 0xb	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013e5	          0x4889c6	                            mov rsi, rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013e8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013ea	     0xf8402020000	                            je 0x40015f2	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013f0	          0x4889c6	                            mov rsi, rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013f3	      0xbf00000000	                              mov edi, 0	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013f8	      0xb907000000	                              mov ecx, 7	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x40013fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40013ff	           0xf94c0	                                 sete al	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4001402	           0xfb6c0	                           movzx eax, al	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4001405	        0x488d0440	                  lea rax, [rax + rax*2]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4001409	      0x488d742420	                   lea rsi, [rsp + 0x20]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x400140e	          0x4c89f7	                            mov rdi, r14	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4001411	        0xff54c460	        call qword [rsp + rax*8 + 0x60] 	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4001415	            0x85c0	                           test eax, eax	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4001417	     0xf843afeffff	                            je 0x4001257	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x400141d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4001422	      0x498d54050b	              lea rdx, [r13 + rax + 0xb]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4001427	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x400142c	          0x4c21e2	                            and rdx, r12	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x400142f	      0x4803542410	             add rdx, qword [rsp + 0x10]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4001434	          0x4801d0	                            add rax, rdx	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4001437	          0x4c21e0	                            and rax, r12	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x400143a	          0x4901c7	                            add r15, rax	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x400143d	      0x4c3b7c2408	                cmp r15, qword [rsp + 8]	     11098	elf.c	FUNCTION_191	WHILE_1
0x4001442	            0x732c	                           jae 0x4001470	     11098	elf.c	FUNCTION_191	WHILE_1
0x4001444	          0x4889e8	                            mov rax, rbp	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001447	          0x4c29f8	                            sub rax, r15	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x400144a	          0x4801d8	                            add rax, rbx	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x400144d	        0x4883f80b	                            cmp rax, 0xb	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001451	     0xf875dfeffff	                            ja 0x40012b4	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001457	    0x660f1f840000	                    nop word [rax + rax]	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001460	            0x31c0	                            xor eax, eax	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4001462	      0xe9f0fdffff	                           jmp 0x4001257	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4001467	    0x660f1f840000	                    nop word [rax + rax]	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4001470	      0xb801000000	                              mov eax, 1	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4001475	      0xe9ddfdffff	                           jmp 0x4001257	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x400147a	    0x660f1f440000	                    nop word [rax + rax]	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4001480	        0x4983fb04	                              cmp r11, 4	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4001484	     0xf848e000000	                            je 0x4001518	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x400148a	        0x4983fb08	                              cmp r11, 8	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x400148e	            0x759f	                           jne 0x400142f	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x4001490	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x4001495	      0xbf00000000	                              mov edi, 0	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x400149a	      0xb908000000	                              mov ecx, 8	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x400149f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x40014a1	            0x758c	                           jne 0x400142f	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x40014a3	    0x48837c243003	               cmp qword [rsp + 0x30], 3	      9926	elf.c	FUNCTION_148	SWITCH_1
0x40014a9	            0x7584	                           jne 0x400142f	      9926	elf.c	FUNCTION_148	SWITCH_1
0x40014ab	        0x488d7018	                   lea rsi, [rax + 0x18]	      9910	elf.c	FUNCTION_147
0x40014af	          0x4c89f7	                            mov rdi, r14	      9910	elf.c	FUNCTION_147
0x40014b2	      0xe800000000	                          call 0x40014b7	      9910	elf.c	FUNCTION_147
0x40014b7	          0x4889c1	                            mov rcx, rax	      9910	elf.c	FUNCTION_147
0x40014ba	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      9914	elf.c	FUNCTION_147	CALL_2
0x40014c1	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      9915	elf.c	FUNCTION_147
0x40014c6	        0x488d7910	                   lea rdi, [rcx + 0x10]	        53	string3.h	FUNCTION_221	CALL_3
0x40014ca	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        53	string3.h	FUNCTION_221	CALL_3
0x40014cf	    0x488b80600c00	           mov rax, qword [rax + 0xc60] 	      9914	elf.c	FUNCTION_147	CALL_2
0x40014d6	        0x48895108	                mov qword [rcx + 8], rdx	      9915	elf.c	FUNCTION_147
0x40014da	          0x488901	                    mov qword [rcx], rax	      9914	elf.c	FUNCTION_147	CALL_2
0x40014dd	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_221	CALL_3
0x40014e2	      0xe800000000	                          call 0x40014e7	        53	string3.h	FUNCTION_221	CALL_3
0x40014e7	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      9918	elf.c	FUNCTION_147	CALL_4
0x40014ee	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9918	elf.c	FUNCTION_147	CALL_4
0x40014f3	    0x488988600c00	            mov qword [rax + 0xc60], rcx	      9918	elf.c	FUNCTION_147	CALL_4
0x40014fa	      0xe91effffff	                           jmp 0x400141d	      9918	elf.c	FUNCTION_147	CALL_4
0x40014ff	              0x90	                                     nop	      9918	elf.c	FUNCTION_147	CALL_4
0x4001500	      0xb800000000	                              mov eax, 0	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4001505	     0xf85fafeffff	                           jne 0x4001405	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x400150b	      0x488b442438	            mov rax, qword [rsp + 0x38] 	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4001510	      0xe98cfeffff	                           jmp 0x40013a1	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4001515	           0xf1f00	                         nop dword [rax]	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4001518	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x400151d	          0x803947	                    cmp byte [rcx], 0x47	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4001520	     0xf8509ffffff	                           jne 0x400142f	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4001526	        0x8079014e	                cmp byte [rcx + 1], 0x4e	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x400152a	     0xf85fffeffff	                           jne 0x400142f	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4001530	        0x80790255	                cmp byte [rcx + 2], 0x55	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4001534	     0xf85f5feffff	                           jne 0x400142f	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x400153a	        0x80790300	                   cmp byte [rcx + 3], 0	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x400153e	     0xf85ebfeffff	                           jne 0x400142f	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4001544	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4001549	        0x4883f903	                              cmp rcx, 3	      9894	elf.c	FUNCTION_146	SWITCH_1
0x400154d	            0x7429	                            je 0x4001578	      9894	elf.c	FUNCTION_146	SWITCH_1
0x400154f	        0x4883f905	                              cmp rcx, 5	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4001553	     0xf85d6feffff	                           jne 0x400142f	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4001559	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x400155e	          0x4c89f7	                            mov rdi, r14	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4001561	      0xe800000000	                          call 0x4001566	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4001566	            0x85c0	                           test eax, eax	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4001568	     0xf85affeffff	                           jne 0x400141d	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x400156e	            0x31c0	                            xor eax, eax	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4001570	      0xe9e2fcffff	                           jmp 0x4001257	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4001575	           0xf1f00	                         nop dword [rax]	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4001578	          0x4885c0	                           test rax, rax	      9877	elf.c	FUNCTION_145	IF_1
0x400157b	     0xf84dffeffff	                            je 0x4001460	      9877	elf.c	FUNCTION_145	IF_1
0x4001581	        0x488d700f	                    lea rsi, [rax + 0xf]	      9880	elf.c	FUNCTION_145	CALL_1
0x4001585	          0x4c89f7	                            mov rdi, r14	      9880	elf.c	FUNCTION_145	CALL_1
0x4001588	      0xe800000000	                          call 0x400158d	      9880	elf.c	FUNCTION_145	CALL_1
0x400158d	          0x4885c0	                           test rax, rax	      9881	elf.c	FUNCTION_145	IF_2
0x4001590	     0xf84cafeffff	                            je 0x4001460	      9881	elf.c	FUNCTION_145	IF_2
0x4001596	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      9884	elf.c	FUNCTION_145
0x400159b	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_221	CALL_3
0x40015a0	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_221	CALL_3
0x40015a4	      0x4889442418	             mov qword [rsp + 0x18], rax	        53	string3.h	FUNCTION_221	CALL_3
0x40015a9	          0x488910	                    mov qword [rax], rdx	      9884	elf.c	FUNCTION_145
0x40015ac	      0xe800000000	                          call 0x40015b1	        53	string3.h	FUNCTION_221	CALL_3
0x40015b1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_221	CALL_3
0x40015b6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9886	elf.c	FUNCTION_145
0x40015bb	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9886	elf.c	FUNCTION_145
0x40015c0	      0x498d54150b	              lea rdx, [r13 + rdx + 0xb]	      9886	elf.c	FUNCTION_145
0x40015c5	    0x49898e100100	            mov qword [r14 + 0x110], rcx	      9886	elf.c	FUNCTION_145
0x40015cc	          0x4c21e2	                            and rdx, r12	      9886	elf.c	FUNCTION_145
0x40015cf	      0xe95bfeffff	                           jmp 0x400142f	      9886	elf.c	FUNCTION_145
0x40015d4	      0xb805000000	                              mov eax, 5	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40015d9	      0xe927feffff	                           jmp 0x4001405	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40015de	      0xb804000000	                              mov eax, 4	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40015e3	      0xe91dfeffff	                           jmp 0x4001405	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40015e8	      0xb803000000	                              mov eax, 3	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40015ed	      0xe913feffff	                           jmp 0x4001405	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40015f2	      0xb802000000	                              mov eax, 2	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40015f7	      0xe909feffff	                           jmp 0x4001405	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x40015fc	      0xe800000000	                          call 0x4001601	     11180	elf.c	FUNCTION_191
0x4001601	            0x31c0	                            xor eax, eax	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4001603	      0xe9fdfdffff	                           jmp 0x4001405	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
_bfd_elf_write_corefile_contents	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	1
0x400bbe0	      0xe9ebf9ffff	  jmp sym._bfd_elf_write_object_contents	      6446	elf.c	FUNCTION_77	CALL_1
_bfd_elf_set_section_contents	functions,0:CALL,6:FOR,0:WHILE,0:SWITCH,0:IF,5:DO,0:ELSE,0	83
0x4010230	            0x4155	                                push r13	      8850	elf.c	FUNCTION_107
0x4010232	            0x4154	                                push r12	      8850	elf.c	FUNCTION_107
0x4010234	          0x4989d5	                            mov r13, rdx	      8850	elf.c	FUNCTION_107
0x4010237	              0x55	                                push rbp	      8850	elf.c	FUNCTION_107
0x4010238	              0x53	                                push rbx	      8850	elf.c	FUNCTION_107
0x4010239	          0x4989f4	                            mov r12, rsi	      8850	elf.c	FUNCTION_107
0x401023c	          0x4889fb	                            mov rbx, rdi	      8850	elf.c	FUNCTION_107
0x401023f	          0x4c89c5	                             mov rbp, r8	      8850	elf.c	FUNCTION_107
0x4010242	        0x4883ec18	                           sub rsp, 0x18	      8850	elf.c	FUNCTION_107
0x4010246	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      8854	elf.c	FUNCTION_107	IF_1
0x401024a	     0xf8490000000	                            je 0x40102e0	      8854	elf.c	FUNCTION_107	IF_1
0x4010250	          0x4885ed	                           test rbp, rbp	      8858	elf.c	FUNCTION_107	IF_2
0x4010253	            0x747b	                            je 0x40102d0	      8858	elf.c	FUNCTION_107	IF_2
0x4010255	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      8861	elf.c	FUNCTION_107	CALL_2
0x401025d	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      8862	elf.c	FUNCTION_107	IF_3
0x4010261	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      8862	elf.c	FUNCTION_107	IF_3
0x4010265	            0x7429	                            je 0x4010290	      8862	elf.c	FUNCTION_107	IF_3
0x4010267	          0x4801ce	                            add rsi, rcx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x401026a	            0x31d2	                            xor edx, edx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x401026c	          0x4889df	                            mov rdi, rbx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x401026f	      0xe800000000	                          call 0x4010274	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x4010274	            0x85c0	                           test eax, eax	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x4010276	     0xf8484000000	                            je 0x4010300	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x401027c	            0x31c0	                            xor eax, eax	      8856	elf.c	FUNCTION_107	IF_1
0x401027e	        0x4883c418	                           add rsp, 0x18	      8879	elf.c	FUNCTION_107
0x4010282	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x4010283	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x4010284	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x4010286	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x4010288	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
0x4010289	     0xf1f80000000	                         nop dword [rax]	      8879	elf.c	FUNCTION_107
0x4010290	      0x488d540d00	                    lea rdx, [rbp + rcx]	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x4010295	        0x483b5020	            cmp rdx, qword [rax + 0x20] 	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x4010299	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      8865	elf.c	FUNCTION_107	IF_3
0x401029d	     0xf877f000000	                            ja 0x4010322	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x40102a3	    0x41f644242308	               test byte [r12 + 0x23], 8	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x40102a9	            0x7477	                            je 0x4010322	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x40102ab	          0x4885ff	                           test rdi, rdi	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x40102ae	            0x7472	                            je 0x4010322	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x40102b0	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x40102b3	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_221	CALL_3
0x40102b6	          0x4801cf	                            add rdi, rcx	        53	string3.h	FUNCTION_221	CALL_3
0x40102b9	      0xe800000000	                          call 0x40102be	        53	string3.h	FUNCTION_221	CALL_3
0x40102be	        0x4883c418	                           add rsp, 0x18	      8879	elf.c	FUNCTION_107
0x40102c2	      0xb801000000	                              mov eax, 1	      8871	elf.c	FUNCTION_107	IF_3
0x40102c7	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x40102c8	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x40102c9	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x40102cb	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x40102cd	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
0x40102ce	            0x6690	                                     nop	      8879	elf.c	FUNCTION_107
0x40102d0	        0x4883c418	                           add rsp, 0x18	      8879	elf.c	FUNCTION_107
0x40102d4	      0xb801000000	                              mov eax, 1	      8859	elf.c	FUNCTION_107	IF_2
0x40102d9	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x40102da	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x40102db	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x40102dd	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x40102df	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
0x40102e0	            0x31f6	                            xor esi, esi	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40102e2	      0x48894c2408	                mov qword [rsp + 8], rcx	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40102e7	      0xe800000000	                          call 0x40102ec	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40102ec	            0x85c0	                           test eax, eax	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40102ee	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40102f3	     0xf8557ffffff	                           jne 0x4010250	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x40102f9	            0x31c0	                            xor eax, eax	      8856	elf.c	FUNCTION_107	IF_1
0x40102fb	      0xe97effffff	                           jmp 0x401027e	      8856	elf.c	FUNCTION_107	IF_1
0x4010300	          0x4889da	                            mov rdx, rbx	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x4010303	          0x4889ee	                            mov rsi, rbp	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x4010306	          0x4c89ef	                            mov rdi, r13	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x4010309	      0xe800000000	                          call 0x401030e	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x401030e	          0x4839c5	                            cmp rbp, rax	      8856	elf.c	FUNCTION_107	IF_1
0x4010311	           0xf94c0	                                 sete al	      8856	elf.c	FUNCTION_107	IF_1
0x4010314	        0x4883c418	                           add rsp, 0x18	      8879	elf.c	FUNCTION_107
0x4010318	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x4010319	           0xfb6c0	                           movzx eax, al	      8856	elf.c	FUNCTION_107	IF_1
0x401031c	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x401031d	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x401031f	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x4010321	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
0x4010322	      0xba00000000	                              mov edx, 0	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x4010327	      0xbea5220000	                         mov esi, 0x22a5	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x401032c	      0xbf00000000	                              mov edi, 0	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x4010331	      0xe800000000	                          call 0x4010336	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
elfcore_write_prstatus	functions,0:CALL,8:FOR,0:WHILE,0:SWITCH,0:IF,3:DO,0:ELSE,1	101
0x4012480	            0x4157	                                push r15	     10644	elf.c	FUNCTION_165
0x4012482	            0x4156	                                push r14	     10644	elf.c	FUNCTION_165
0x4012484	          0x4989ca	                            mov r10, rcx	     10644	elf.c	FUNCTION_165
0x4012487	            0x4155	                                push r13	     10644	elf.c	FUNCTION_165
0x4012489	            0x4154	                                push r12	     10644	elf.c	FUNCTION_165
0x401248b	          0x4989f5	                            mov r13, rsi	     10644	elf.c	FUNCTION_165
0x401248e	              0x55	                                push rbp	     10644	elf.c	FUNCTION_165
0x401248f	              0x53	                                push rbx	     10644	elf.c	FUNCTION_165
0x4012490	          0x4889fd	                            mov rbp, rdi	     10644	elf.c	FUNCTION_165
0x4012493	          0x4989d6	                            mov r14, rdx	     10644	elf.c	FUNCTION_165
0x4012496	          0x4589c7	                           mov r15d, r8d	     10644	elf.c	FUNCTION_165
0x4012499	          0x4c89cb	                             mov rbx, r9	     10644	elf.c	FUNCTION_165
0x401249c	    0x4881ec780100	                          sub rsp, 0x178	     10644	elf.c	FUNCTION_165
0x40124a3	    0x64488b042528	                mov rax, qword fs:[0x28]	     10644	elf.c	FUNCTION_165
0x40124ac	    0x488984246801	            mov qword [rsp + 0x168], rax	     10644	elf.c	FUNCTION_165
0x40124b4	            0x31c0	                            xor eax, eax	     10644	elf.c	FUNCTION_165
0x40124b6	        0x488b4708	                mov rax, qword [rdi + 8]	     10645	elf.c	FUNCTION_165	CALL_1
0x40124ba	    0x4c8ba0680300	           mov r12, qword [rax + 0x368] 	     10645	elf.c	FUNCTION_165	CALL_1
0x40124c1	    0x4d8b9c242002	           mov r11, qword [r12 + 0x220] 	     10647	elf.c	FUNCTION_165	IF_1
0x40124c9	          0x4d85db	                           test r11, r11	     10647	elf.c	FUNCTION_165	IF_1
0x40124cc	            0x7452	                            je 0x4012520	     10647	elf.c	FUNCTION_165	IF_1
0x40124ce	        0x4883ec08	                              sub rsp, 8	     10650	elf.c	FUNCTION_165	IF_1
0x40124d2	            0x31c0	                            xor eax, eax	     10650	elf.c	FUNCTION_165	IF_1
0x40124d4	            0x4151	                                 push r9	     10650	elf.c	FUNCTION_165	IF_1
0x40124d6	          0x4589c1	                            mov r9d, r8d	     10650	elf.c	FUNCTION_165	IF_1
0x40124d9	          0x4989c8	                             mov r8, rcx	     10650	elf.c	FUNCTION_165	IF_1
0x40124dc	      0x48894c2418	             mov qword [rsp + 0x18], rcx	     10650	elf.c	FUNCTION_165	IF_1
0x40124e1	      0xb901000000	                              mov ecx, 1	     10650	elf.c	FUNCTION_165	IF_1
0x40124e6	          0x41ffd3	                                call r11	     10650	elf.c	FUNCTION_165	IF_1
0x40124e9	              0x5e	                                 pop rsi	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x40124ea	          0x4885c0	                           test rax, rax	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x40124ed	              0x5f	                                 pop rdi	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x40124ee	      0x4c8b542408	                mov r10, qword [rsp + 8]	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x40124f3	            0x742b	                            je 0x4012520	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x40124f5	    0x488b94246801	           mov rdx, qword [rsp + 0x168] 	     10686	elf.c	FUNCTION_165
0x40124fd	    0x644833142528	                xor rdx, qword fs:[0x28]	     10686	elf.c	FUNCTION_165
0x4012506	     0xf850c010000	                           jne 0x4012618	     10686	elf.c	FUNCTION_165
0x401250c	    0x4881c4780100	                          add rsp, 0x178	     10686	elf.c	FUNCTION_165
0x4012513	              0x5b	                                 pop rbx	     10686	elf.c	FUNCTION_165
0x4012514	              0x5d	                                 pop rbp	     10686	elf.c	FUNCTION_165
0x4012515	            0x415c	                                 pop r12	     10686	elf.c	FUNCTION_165
0x4012517	            0x415d	                                 pop r13	     10686	elf.c	FUNCTION_165
0x4012519	            0x415e	                                 pop r14	     10686	elf.c	FUNCTION_165
0x401251b	            0x415f	                                 pop r15	     10686	elf.c	FUNCTION_165
0x401251d	              0xc3	                                     ret	     10686	elf.c	FUNCTION_165
0x401251e	            0x6690	                                     nop	     10686	elf.c	FUNCTION_165
0x4012520	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	     10659	elf.c	FUNCTION_165	IF_3
0x4012528	        0x80780c01	                 cmp byte [rax + 0xc], 1	     10659	elf.c	FUNCTION_165	IF_3
0x401252c	            0x7462	                            je 0x4012590	     10659	elf.c	FUNCTION_165	IF_3
0x401252e	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	        90	string3.h	FUNCTION_224	CALL_6
0x4012533	      0xb92a000000	                           mov ecx, 0x2a	        90	string3.h	FUNCTION_224	CALL_6
0x4012538	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_224	CALL_6
0x401253a	          0x4889de	                            mov rsi, rbx	        90	string3.h	FUNCTION_224	CALL_6
0x401253d	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_224	CALL_6
0x4012540	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x4012543	      0x4489542430	            mov dword [rsp + 0x30], r10d	     10676	elf.c	FUNCTION_165	ELSE_1
0x4012548	    0x6644897c241c	             mov word [rsp + 0x1c], r15w	     10677	elf.c	FUNCTION_165	ELSE_1
0x401254e	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	     10677	elf.c	FUNCTION_165	ELSE_1
0x4012556	        0x4883ec08	                              sub rsp, 8	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x401255a	      0xb91b000000	                           mov ecx, 0x1b	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x401255f	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012562	      0x6850010000	                              push 0x150	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012567	      0xb900000000	                              mov ecx, 0	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x401256c	          0x4c89f2	                            mov rdx, r14	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x401256f	    0x41b801000000	                              mov r8d, 1	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012575	          0x4c89ee	                            mov rsi, r13	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012578	          0x4889ef	                            mov rdi, rbp	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x401257b	      0xe800000000	                          call 0x4012580	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012580	              0x5a	                                 pop rdx	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012581	              0x59	                                 pop rcx	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012582	      0xe96effffff	                           jmp 0x40124f5	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012587	    0x660f1f840000	                    nop word [rax + rax]	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4012590	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	        90	string3.h	FUNCTION_224	CALL_6
0x4012595	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_224	CALL_6
0x4012597	      0xb912000000	                           mov ecx, 0x12	        90	string3.h	FUNCTION_224	CALL_6
0x401259c	        0x4883ec08	                              sub rsp, 8	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x40125a0	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_224	CALL_6
0x40125a3	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x40125a6	          0x488b03	                    mov rax, qword [rbx]	        90	string3.h	FUNCTION_224	CALL_6
0x40125a9	      0x4489542430	            mov dword [rsp + 0x30], r10d	     10664	elf.c	FUNCTION_165	IF_3
0x40125ae	    0x6644897c2424	             mov word [rsp + 0x24], r15w	     10665	elf.c	FUNCTION_165	IF_3
0x40125b4	      0x4889442460	             mov qword [rsp + 0x60], rax	     10665	elf.c	FUNCTION_165	IF_3
0x40125b9	        0x488b4308	                mov rax, qword [rbx + 8]	     10665	elf.c	FUNCTION_165	IF_3
0x40125bd	      0x4889442468	             mov qword [rsp + 0x68], rax	     10665	elf.c	FUNCTION_165	IF_3
0x40125c2	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10665	elf.c	FUNCTION_165	IF_3
0x40125c6	      0x4889442470	             mov qword [rsp + 0x70], rax	     10665	elf.c	FUNCTION_165	IF_3
0x40125cb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10665	elf.c	FUNCTION_165	IF_3
0x40125cf	      0x4889442478	             mov qword [rsp + 0x78], rax	     10665	elf.c	FUNCTION_165	IF_3
0x40125d4	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10665	elf.c	FUNCTION_165	IF_3
0x40125d8	    0x488984248000	             mov qword [rsp + 0x80], rax	     10665	elf.c	FUNCTION_165	IF_3
0x40125e0	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10665	elf.c	FUNCTION_165	IF_3
0x40125e4	    0x488984248800	             mov qword [rsp + 0x88], rax	     10665	elf.c	FUNCTION_165	IF_3
0x40125ec	        0x488b4330	            mov rax, qword [rbx + 0x30] 	     10665	elf.c	FUNCTION_165	IF_3
0x40125f0	    0x488984249000	             mov qword [rsp + 0x90], rax	     10665	elf.c	FUNCTION_165	IF_3
0x40125f8	        0x488b4338	            mov rax, qword [rbx + 0x38] 	     10665	elf.c	FUNCTION_165	IF_3
0x40125fc	    0x488984249800	             mov qword [rsp + 0x98], rax	     10665	elf.c	FUNCTION_165	IF_3
0x4012604	          0x8b4340	            mov eax, dword [rbx + 0x40] 	     10665	elf.c	FUNCTION_165	IF_3
0x4012607	    0x898424a00000	             mov dword [rsp + 0xa0], eax	     10665	elf.c	FUNCTION_165	IF_3
0x401260e	      0x6890000000	                               push 0x90	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4012613	      0xe94fffffff	                           jmp 0x4012567	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4012618	      0xe800000000	                          call 0x401261d	     10686	elf.c	FUNCTION_165
bfd_elf_generic_reloc	functions,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	17
0x4003e30	          0x4d85c9	                             test r9, r9	      1282	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e33	      0xb805000000	                              mov eax, 5	      1291	elf.c	ELSE_12	FUNCTION_27
0x4003e38	            0x742d	                            je 0x4003e67	      1282	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e3a	        0xf6421901	               test byte [rdx + 0x19], 1	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e3e	            0x7527	                           jne 0x4003e67	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e40	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e44	          0x8b5230	            mov edx, dword [rdx + 0x30] 	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e47	            0x85d2	                           test edx, edx	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e49	            0x7515	                           jne 0x4003e60	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e4b	        0x498b4060	              mov rax, qword [r8 + 0x60]	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e4f	        0x48014608	                add qword [rsi + 8], rax	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e53	      0xb802000000	                              mov eax, 2	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e58	              0xc3	                                     ret	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e59	     0xf1f80000000	                         nop dword [rax]	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e60	      0x48837e1000	               cmp qword [rsi + 0x10], 0	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e65	            0x74e4	                            je 0x4003e4b	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4003e67	            0xf3c3	                                     ret	      1292	elf.c	ELSE_12	FUNCTION_27
bfd_elf_make_object	functions,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	44
0x4003170	              0x55	                                push rbp	       261	elf.c	FUNCTION_14
0x4003171	              0x53	                                push rbx	       261	elf.c	FUNCTION_14
0x4003172	      0xbea00c0000	                          mov esi, 0xca0	       242	elf.c	FUNCTION_13	CALL_2
0x4003177	          0x4889fb	                            mov rbx, rdi	       261	elf.c	FUNCTION_14
0x400317a	        0x4883ec08	                              sub rsp, 8	       261	elf.c	FUNCTION_14
0x400317e	        0x488b4708	                mov rax, qword [rdi + 8]	       262	elf.c	FUNCTION_14	CALL_1
0x4003182	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       263	elf.c	FUNCTION_14	CALL_2
0x4003189	          0x8b6804	                mov ebp, dword [rax + 4]	       263	elf.c	FUNCTION_14	CALL_2
0x400318c	      0xe800000000	                          call 0x4003191	       242	elf.c	FUNCTION_13	CALL_2
0x4003191	          0x4885c0	                           test rax, rax	       243	elf.c	FUNCTION_13	IF_1
0x4003194	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       242	elf.c	FUNCTION_13	CALL_2
0x400319b	            0x746b	                            je 0x4003208	       243	elf.c	FUNCTION_13	IF_1
0x400319d	     0xfb6908c0c00	          movzx edx, byte [rax + 0xc8c] 	       246	elf.c	FUNCTION_13	CALL_3
0x40031a4	          0x83e53f	                           and ebp, 0x3f	       246	elf.c	FUNCTION_13	CALL_3
0x40031a7	          0x83e2c0	                     and edx, 0xffffffc0	       246	elf.c	FUNCTION_13	CALL_3
0x40031aa	             0x9d5	                             or ebp, edx	       246	elf.c	FUNCTION_13	CALL_3
0x40031ac	    0x4088a88c0c00	             mov byte [rax + 0xc8c], bpl	       246	elf.c	FUNCTION_13	CALL_3
0x40031b3	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       247	elf.c	FUNCTION_13	IF_2
0x40031b7	      0xbd01000000	                              mov ebp, 1	       255	elf.c	FUNCTION_13
0x40031bc	          0x83e018	                           and eax, 0x18	       247	elf.c	FUNCTION_13	IF_2
0x40031bf	            0x3c08	                               cmp al, 8	       247	elf.c	FUNCTION_13	IF_2
0x40031c1	            0x7436	                            je 0x40031f9	       247	elf.c	FUNCTION_13	IF_2
0x40031c3	      0xbe60000000	                           mov esi, 0x60	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x40031c8	          0x4889df	                            mov rdi, rbx	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x40031cb	      0xe800000000	                          call 0x40031d0	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x40031d0	          0x4885c0	                           test rax, rax	       250	elf.c	FUNCTION_13	IF_2	IF_3
0x40031d3	            0x7433	                            je 0x4003208	       250	elf.c	FUNCTION_13	IF_2	IF_3
0x40031d5	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	       252	elf.c	FUNCTION_13	IF_2	CALL_5
0x40031dc	    0x488982980c00	            mov qword [rdx + 0xc98], rax	       252	elf.c	FUNCTION_13	IF_2	CALL_5
0x40031e3	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x40031ea	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x40031f1	    0x48c74038ffff	mov qword [rax + 0x38], 0xffffffffffffffff	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x40031f9	        0x4883c408	                              add rsp, 8	       265	elf.c	FUNCTION_14
0x40031fd	            0x89e8	                            mov eax, ebp	       265	elf.c	FUNCTION_14
0x40031ff	              0x5b	                                 pop rbx	       265	elf.c	FUNCTION_14
0x4003200	              0x5d	                                 pop rbp	       265	elf.c	FUNCTION_14
0x4003201	              0xc3	                                     ret	       265	elf.c	FUNCTION_14
0x4003202	    0x660f1f440000	                    nop word [rax + rax]	       265	elf.c	FUNCTION_14
0x4003208	            0x31ed	                            xor ebp, ebp	       244	elf.c	FUNCTION_13	IF_1
0x400320a	        0x4883c408	                              add rsp, 8	       265	elf.c	FUNCTION_14
0x400320e	            0x89e8	                            mov eax, ebp	       265	elf.c	FUNCTION_14
0x4003210	              0x5b	                                 pop rbx	       265	elf.c	FUNCTION_14
0x4003211	              0x5d	                                 pop rbp	       265	elf.c	FUNCTION_14
0x4003212	              0xc3	                                     ret	       265	elf.c	FUNCTION_14
assign_section_numbers	functions,0:CALL,86:FOR,3:WHILE,0:SWITCH,1:IF,38:DO,0:ELSE,5	618
0x4000480	            0x4157	                                push r15	      3642	elf.c	FUNCTION_52
0x4000482	            0x4156	                                push r14	      3642	elf.c	FUNCTION_52
0x4000484	          0x4989fe	                            mov r14, rdi	      3642	elf.c	FUNCTION_52
0x4000487	            0x4155	                                push r13	      3642	elf.c	FUNCTION_52
0x4000489	            0x4154	                                push r12	      3642	elf.c	FUNCTION_52
0x400048b	          0x4989f4	                            mov r12, rsi	      3642	elf.c	FUNCTION_52
0x400048e	              0x55	                                push rbp	      3642	elf.c	FUNCTION_52
0x400048f	              0x53	                                push rbx	      3642	elf.c	FUNCTION_52
0x4000490	        0x4883ec18	                           sub rsp, 0x18	      3642	elf.c	FUNCTION_52
0x4000494	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      3643	elf.c	FUNCTION_52	CALL_1
0x400049b	      0x4889442408	                mov qword [rsp + 8], rax	      3643	elf.c	FUNCTION_52	CALL_1
0x40004a0	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3652	elf.c	FUNCTION_52	CALL_3
0x40004a7	        0x488b7808	                mov rdi, qword [rax + 8]	      3652	elf.c	FUNCTION_52	CALL_3
0x40004ab	      0xe800000000	                          call 0x40004b0	      3652	elf.c	FUNCTION_52	CALL_3
0x40004b0	          0x4d85e4	                           test r12, r12	      3655	elf.c	FUNCTION_52	IF_1
0x40004b3	     0xf846f040000	                            je 0x4000928	      3655	elf.c	FUNCTION_52	IF_1
0x40004b9	    0x41f644240110	               test byte [r12 + 1], 0x10	      3655	elf.c	FUNCTION_52	IF_1
0x40004bf	     0xf8463040000	                            je 0x4000928	      3655	elf.c	FUNCTION_52	IF_1
0x40004c5	    0x4d8bbe900000	            mov r15, qword [r14 + 0x90] 	      3655	elf.c	FUNCTION_52	IF_1
0x40004cc	      0xbd02000000	                              mov ebp, 2	      3655	elf.c	FUNCTION_52	IF_1
0x40004d1	    0x41bd01000000	                             mov r13d, 1	      3650	elf.c	FUNCTION_52
0x40004d7	          0x4d85ff	                           test r15, r15	      3685	elf.c	FUNCTION_52	FOR_2
0x40004da	            0x7571	                           jne 0x400054d	      3685	elf.c	FUNCTION_52	FOR_2
0x40004dc	      0xe9eb000000	                           jmp 0x40005cc	      3685	elf.c	FUNCTION_52	FOR_2
0x40004e1	     0xf1f80000000	                         nop dword [rax]	      3685	elf.c	FUNCTION_52	FOR_2
0x40004e8	            0x8b32	                    mov esi, dword [rdx]	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40004ea	          0x8d4501	                      lea eax, [rbp + 1]	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40004ed	          0x896b64	             mov dword [rbx + 0x64], ebp	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40004f0	          0x83feff	             cmp esi, 0xffffffffffffffff	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40004f3	            0x741d	                            je 0x4000512	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40004f5	    0x498b96f80000	            mov rdx, qword [r14 + 0xf8] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x40004fc	          0x890424	                    mov dword [rsp], eax	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x40004ff	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x4000506	        0x488b7a08	                mov rdi, qword [rdx + 8]	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x400050a	      0xe800000000	                          call 0x400050f	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x400050f	          0x8b0424	                    mov eax, dword [rsp]	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x4000512	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4000516	          0x4885d2	                           test rdx, rdx	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4000519	     0xf8491000000	                            je 0x40005b0	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x400051f	            0x8b32	                    mov esi, dword [rdx]	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4000521	        0x448d6801	                     lea r13d, [rax + 1]	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4000525	          0x89437c	             mov dword [rbx + 0x7c], eax	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4000528	          0x83feff	             cmp esi, 0xffffffffffffffff	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x400052b	            0x7417	                            je 0x4000544	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x400052d	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_12
0x4000534	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_12
0x400053b	        0x488b7808	                mov rdi, qword [rax + 8]	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_12
0x400053f	      0xe800000000	                          call 0x4000544	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_12
0x4000544	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      3685	elf.c	FUNCTION_52	FOR_2
0x4000548	          0x4d85ff	                           test r15, r15	      3685	elf.c	FUNCTION_52	FOR_2
0x400054b	            0x747b	                            je 0x40005c8	      3685	elf.c	FUNCTION_52	FOR_2
0x400054d	    0x498b9fe00000	            mov rbx, qword [r15 + 0xe0] 	      3687	elf.c	FUNCTION_52	FOR_2	CALL_6
0x4000554	          0x4489ed	                           mov ebp, r13d	      3687	elf.c	FUNCTION_52	FOR_2	CALL_6
0x4000557	        0x837b0411	               cmp dword [rbx + 4], 0x11	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x400055b	            0x740a	                            je 0x4000567	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x400055d	          0x83c501	                              add ebp, 1	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x4000560	    0x4489ab880000	            mov dword [rbx + 0x88], r13d	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x4000567	            0x8b33	                    mov esi, dword [rbx]	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x4000569	          0x83feff	             cmp esi, 0xffffffffffffffff	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x400056c	            0x7417	                            je 0x4000585	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x400056e	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3692	elf.c	FUNCTION_52	FOR_2	CALL_8
0x4000575	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3692	elf.c	FUNCTION_52	FOR_2	CALL_8
0x400057c	        0x488b7808	                mov rdi, qword [rax + 8]	      3692	elf.c	FUNCTION_52	FOR_2	CALL_8
0x4000580	      0xe800000000	                          call 0x4000585	      3692	elf.c	FUNCTION_52	FOR_2	CALL_8
0x4000585	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x4000589	          0x4885d2	                           test rdx, rdx	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x400058c	     0xf8556ffffff	                           jne 0x40004e8	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x4000592	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4000596	    0xc74364000000	               mov dword [rbx + 0x64], 0	      3700	elf.c	FUNCTION_52	FOR_2	ELSE_2
0x400059d	            0x89e8	                            mov eax, ebp	      3700	elf.c	FUNCTION_52	FOR_2	ELSE_2
0x400059f	          0x4885d2	                           test rdx, rdx	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x40005a2	     0xf8577ffffff	                           jne 0x400051f	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x40005a8	     0xf1f84000000	                   nop dword [rax + rax]	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x40005b0	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      3685	elf.c	FUNCTION_52	FOR_2
0x40005b4	    0xc7437c000000	               mov dword [rbx + 0x7c], 0	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x40005bb	          0x4189c5	                           mov r13d, eax	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x40005be	          0x4d85ff	                           test r15, r15	      3685	elf.c	FUNCTION_52	FOR_2
0x40005c1	            0x758a	                           jne 0x400054d	      3685	elf.c	FUNCTION_52	FOR_2
0x40005c3	       0xf1f440000	                   nop dword [rax + rax]	      3685	elf.c	FUNCTION_52	FOR_2
0x40005c8	        0x418d6d01	                      lea ebp, [r13 + 1]	      3685	elf.c	FUNCTION_52	FOR_2
0x40005cc	    0x418b86b80000	            mov eax, dword [r14 + 0xb8] 	      3713	elf.c	FUNCTION_52
0x40005d3	            0x85c0	                           test eax, eax	      3713	elf.c	FUNCTION_52
0x40005d5	     0xf859d070000	                           jne 0x4000d78	      3713	elf.c	FUNCTION_52
0x40005db	            0x31db	                            xor ebx, ebx	      3713	elf.c	FUNCTION_52
0x40005dd	          0x4d85e4	                           test r12, r12	      3713	elf.c	FUNCTION_52
0x40005e0	          0x4189ef	                           mov r15d, ebp	      3713	elf.c	FUNCTION_52
0x40005e3	     0xf8477070000	                            je 0x4000d60	      3713	elf.c	FUNCTION_52
0x40005e9	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3739	elf.c	FUNCTION_52	CALL_26
0x40005f0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3740	elf.c	FUNCTION_52	CALL_28
0x40005f5	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3739	elf.c	FUNCTION_52	CALL_26
0x40005fc	    0x8bb1b8000000	            mov esi, dword [rcx + 0xb8] 	      3740	elf.c	FUNCTION_52	CALL_28
0x4000602	        0x488b7808	                mov rdi, qword [rax + 8]	      3740	elf.c	FUNCTION_52	CALL_28
0x4000606	        0x4489684c	            mov dword [rax + 0x4c], r13d	      3739	elf.c	FUNCTION_52	CALL_26
0x400060a	      0xe800000000	                          call 0x400060f	      3740	elf.c	FUNCTION_52	CALL_28
0x400060f	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3741	elf.c	FUNCTION_52	CALL_30
0x4000616	    0x4181fffffeff	                    cmp r15d, 0xfffffeff	      3743	elf.c	FUNCTION_52	IF_14
0x400061d	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      3741	elf.c	FUNCTION_52	CALL_30
0x4000624	          0x8b524c	            mov edx, dword [rdx + 0x4c] 	      3741	elf.c	FUNCTION_52	CALL_30
0x4000627	          0x895050	             mov dword [rax + 0x50], edx	      3741	elf.c	FUNCTION_52	CALL_30
0x400062a	     0xf8730080000	                            ja 0x4000e60	      3743	elf.c	FUNCTION_52	IF_14
0x4000630	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3751	elf.c	FUNCTION_52	CALL_33
0x4000637	          0x4489fe	                           mov esi, r15d	      3756	elf.c	FUNCTION_52	CALL_35
0x400063a	      0xba08000000	                              mov edx, 8	      3756	elf.c	FUNCTION_52	CALL_35
0x400063f	          0x4c89f7	                            mov rdi, r14	      3756	elf.c	FUNCTION_52	CALL_35
0x4000642	    0x4489b8fc0200	           mov dword [rax + 0x2fc], r15d	      3751	elf.c	FUNCTION_52	CALL_33
0x4000649	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3752	elf.c	FUNCTION_52	CALL_34
0x4000650	        0x4489784c	            mov dword [rax + 0x4c], r15d	      3752	elf.c	FUNCTION_52	CALL_34
0x4000654	      0xe800000000	                          call 0x4000659	      3756	elf.c	FUNCTION_52	CALL_35
0x4000659	          0x4885c0	                           test rax, rax	      3758	elf.c	FUNCTION_52	IF_15
0x400065c	          0x4989c5	                            mov r13, rax	      3756	elf.c	FUNCTION_52	CALL_35
0x400065f	     0xf845f060000	                            je 0x4000cc4	      3758	elf.c	FUNCTION_52	IF_15
0x4000665	      0xbe50000000	                           mov esi, 0x50	      3761	elf.c	FUNCTION_52	CALL_36
0x400066a	          0x4c89f7	                            mov rdi, r14	      3761	elf.c	FUNCTION_52	CALL_36
0x400066d	      0xe800000000	                          call 0x4000672	      3761	elf.c	FUNCTION_52	CALL_36
0x4000672	          0x4885c0	                           test rax, rax	      3763	elf.c	FUNCTION_52	IF_16
0x4000675	        0x49894500	                    mov qword [r13], rax	      3761	elf.c	FUNCTION_52	CALL_36
0x4000679	     0xf846a080000	                            je 0x4000ee9	      3763	elf.c	FUNCTION_52	IF_16
0x400067f	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3769	elf.c	FUNCTION_52	CALL_38
0x4000686	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3771	elf.c	FUNCTION_52	CALL_39
0x400068b	            0x85db	                           test ebx, ebx	      3772	elf.c	FUNCTION_52	IF_17
0x400068d	        0x4c896858	             mov qword [rax + 0x58], r13	      3769	elf.c	FUNCTION_52	CALL_38
0x4000691	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3771	elf.c	FUNCTION_52	CALL_39
0x4000698	    0x488d91b80000	                   lea rdx, [rcx + 0xb8]	      3771	elf.c	FUNCTION_52	CALL_39
0x400069f	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3771	elf.c	FUNCTION_52	CALL_39
0x40006a6	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      3771	elf.c	FUNCTION_52	CALL_39
0x40006a9	      0x498954c500	            mov qword [r13 + rax*8], rdx	      3771	elf.c	FUNCTION_52	CALL_39
0x40006ae	            0x745f	                            je 0x400070f	      3772	elf.c	FUNCTION_52	IF_17
0x40006b0	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3774	elf.c	FUNCTION_52	IF_17	CALL_40
0x40006b7	        0x488d5168	                   lea rdx, [rcx + 0x68]	      3774	elf.c	FUNCTION_52	IF_17	CALL_40
0x40006bb	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      3774	elf.c	FUNCTION_52	IF_17	CALL_40
0x40006c1	      0x498954c500	            mov qword [r13 + rax*8], rdx	      3774	elf.c	FUNCTION_52	IF_17	CALL_40
0x40006c6	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x40006cd	    0x81b8fc020000	        cmp dword [rax + 0x2fc], 0xff00 	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x40006d7	     0xf87b8070000	                            ja 0x4000e95	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x40006dd	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x40006e4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x40006e9	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x40006ec	    0x488d97080100	                  lea rdx, [rdi + 0x108]	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x40006f3	      0x498954c500	            mov qword [r13 + rax*8], rdx	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x40006f8	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_46
0x40006ff	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_46
0x4000706	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_46
0x4000709	    0x898790000000	             mov dword [rdi + 0x90], eax	      3783	elf.c	FUNCTION_52	IF_17	CALL_46
0x400070f	    0x498bae900000	            mov rbp, qword [r14 + 0x90] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000716	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000719	     0xf84ee010000	                            je 0x400090d	      3786	elf.c	FUNCTION_52	FOR_3
0x400071f	              0x90	                                     nop	      3786	elf.c	FUNCTION_52	FOR_3
0x4000720	    0x488b9de00000	            mov rbx, qword [rbp + 0xe0] 	      3790	elf.c	FUNCTION_52	FOR_3	CALL_47
0x4000727	    0x486383880000	         movsxd rax, dword [rbx + 0x88] 	      3792	elf.c	FUNCTION_52	FOR_3
0x400072e	          0x4889c2	                            mov rdx, rax	      3792	elf.c	FUNCTION_52	FOR_3
0x4000731	      0x49895cc500	            mov qword [r13 + rax*8], rbx	      3792	elf.c	FUNCTION_52	FOR_3
0x4000736	        0x48634364	         movsxd rax, dword [rbx + 0x64] 	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x400073a	            0x85c0	                           test eax, eax	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x400073c	     0xf84a6020000	                            je 0x40009e8	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x4000742	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x4000746	      0x49894cc500	            mov qword [r13 + rax*8], rcx	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x400074b	        0x4863437c	         movsxd rax, dword [rbx + 0x7c] 	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x400074f	            0x85c0	                           test eax, eax	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x4000751	     0xf84b5070000	                            je 0x4000f0c	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x4000757	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x400075b	      0x49894cc500	            mov qword [r13 + rax*8], rcx	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4000760	    0x498b8ef80000	            mov rcx, qword [r14 + 0xf8] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x4000767	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x400076b	    0x8bb1780c0000	           mov esi, dword [rcx + 0xc78] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x4000771	      0x4883480840	                or qword [rax + 8], 0x40	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x4000776	          0x89502c	             mov dword [rax + 0x2c], edx	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x4000779	          0x897028	             mov dword [rax + 0x28], esi	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x400077c	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_49
0x4000780	    0x8b89780c0000	           mov ecx, dword [rcx + 0xc78] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_49
0x4000786	      0x4883480840	                or qword [rax + 8], 0x40	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x400078b	          0x89502c	             mov dword [rax + 0x2c], edx	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x400078e	          0x894828	             mov dword [rax + 0x28], ecx	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_49
0x4000791	        0xf6430880	               test byte [rbx + 8], 0x80	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x4000795	            0x7456	                            je 0x40007ed	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x4000797	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_50
0x400079e	    0x4c8bb8900000	            mov r15, qword [rax + 0x90] 	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_50
0x40007a5	          0x4d85ff	                           test r15, r15	      3820	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24
0x40007a8	     0xf8482040000	                            je 0x4000c30	      3820	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24
0x40007ae	          0x4d85e4	                           test r12, r12	      3823	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x40007b1	     0xf84c1040000	                            je 0x4000c78	      3823	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x40007b7	    0x4981ff000000	                              cmp r15, 0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x40007be	     0xf8414050000	                            je 0x4000cd8	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x40007c4	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x40007c8	    0x483d00000000	                              cmp rax, 0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x40007ce	     0xf8414050000	                            je 0x4000ce8	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x40007d4	          0x4885c0	                           test rax, rax	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x40007d7	     0xf8473020000	                            je 0x4000a50	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x40007dd	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x40007e4	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x40007ea	          0x894328	             mov dword [rbx + 0x28], eax	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x40007ed	          0x8b4304	                mov eax, dword [rbx + 4]	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40007f0	          0x83f80b	                            cmp eax, 0xb	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40007f3	     0xf8497030000	                            je 0x4000b90	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40007f9	     0xf8711020000	                            ja 0x4000a10	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40007ff	          0x83f805	                              cmp eax, 5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000802	     0xf844d030000	                            je 0x4000b55	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000808	     0xf8762020000	                            ja 0x4000a70	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x400080e	          0x83f803	                              cmp eax, 3	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000811	     0xf85d9030000	                           jne 0x4000bf0	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000817	        0x4c8b7d00	                    mov r15, qword [rbp]	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x400081b	      0xbf00000000	                              mov edi, 0	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4000820	      0xb905000000	                              mov ecx, 5	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4000825	          0x4c89fe	                            mov rsi, r15	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4000828	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x400082a	     0xf85d0000000	                           jne 0x4000900	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4000830	          0x4c89ff	                            mov rdi, r15	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4000833	      0xe800000000	                          call 0x4000838	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4000838	        0x488d50fd	                      lea rdx, [rax - 3]	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x400083c	          0x4901d7	                            add r15, rdx	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x400083f	        0x48891424	                    mov qword [rsp], rdx	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4000843	        0x41803f73	                    cmp byte [r15], 0x73	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4000847	     0xf85b3000000	                           jne 0x4000900	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x400084d	      0x41807f0174	                cmp byte [r15 + 1], 0x74	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4000852	     0xf85a8000000	                           jne 0x4000900	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4000858	      0x41807f0272	                cmp byte [r15 + 2], 0x72	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x400085d	     0xf859d000000	                           jne 0x4000900	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4000863	      0x41807f0300	                   cmp byte [r15 + 3], 0	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4000868	     0xf8592000000	                           jne 0x4000900	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x400086e	        0x488d78fe	                      lea rdi, [rax - 2]	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_72
0x4000872	      0x4889442408	                mov qword [rsp + 8], rax	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_72
0x4000877	      0xe800000000	                          call 0x400087c	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_72
0x400087c	          0x4885c0	                           test rax, rax	      3918	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x400087f	          0x4989c7	                            mov r15, rax	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_72
0x4000882	     0xf843c040000	                            je 0x4000cc4	      3918	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x4000888	        0x488b1424	                    mov rdx, qword [rsp]	        53	string3.h	FUNCTION_221	CALL_3
0x400088c	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_221	CALL_3
0x4000890	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4000893	      0xe800000000	                          call 0x4000898	        53	string3.h	FUNCTION_221	CALL_3
0x4000898	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x400089d	          0x4c89fe	                            mov rsi, r15	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_74
0x40008a0	          0x4c89f7	                            mov rdi, r14	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_74
0x40008a3	    0x41c6440ffd00	             mov byte [r15 + rcx - 3], 0	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x40008a9	      0xe800000000	                          call 0x40008ae	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_74
0x40008ae	          0x4c89ff	                            mov rdi, r15	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_75
0x40008b1	        0x48890424	                    mov qword [rsp], rax	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_74
0x40008b5	      0xe800000000	                          call 0x40008ba	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_75
0x40008ba	        0x488b0424	                    mov rax, qword [rsp]	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x40008be	          0x4885c0	                           test rax, rax	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x40008c1	            0x743d	                            je 0x4000900	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x40008c3	    0x4c8bb8e00000	            mov r15, qword [rax + 0xe0] 	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_76
0x40008ca	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_76
0x40008d0	      0x49837f3800	               cmp qword [r15 + 0x38], 0	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_77
0x40008d5	        0x41894728	             mov dword [r15 + 0x28], eax	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_76
0x40008d9	            0x7525	                           jne 0x4000900	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_77
0x40008db	          0x4c89f7	                            mov rdi, r14	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008de	      0xe800000000	                          call 0x40008e3	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008e3	          0x8d5003	                      lea edx, [rax + 3]	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008e6	            0x85c0	                           test eax, eax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008e8	           0xf48c2	                          cmovs eax, edx	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008eb	          0xc1f802	                              sar eax, 2	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008ee	          0x83c004	                              add eax, 4	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008f1	            0x4898	                                    cdqe	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008f3	        0x49894738	             mov qword [r15 + 0x38], rax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40008f7	    0x660f1f840000	                    nop word [rax + rax]	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x4000900	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000904	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000907	     0xf8513feffff	                           jne 0x4000720	      3786	elf.c	FUNCTION_52	FOR_3
0x400090d	      0xb801000000	                              mov eax, 1	      3977	elf.c	FUNCTION_52
0x4000912	        0x4883c418	                           add rsp, 0x18	      3978	elf.c	FUNCTION_52
0x4000916	              0x5b	                                 pop rbx	      3978	elf.c	FUNCTION_52
0x4000917	              0x5d	                                 pop rbp	      3978	elf.c	FUNCTION_52
0x4000918	            0x415c	                                 pop r12	      3978	elf.c	FUNCTION_52
0x400091a	            0x415d	                                 pop r13	      3978	elf.c	FUNCTION_52
0x400091c	            0x415e	                                 pop r14	      3978	elf.c	FUNCTION_52
0x400091e	            0x415f	                                 pop r15	      3978	elf.c	FUNCTION_52
0x4000920	              0xc3	                                     ret	      3978	elf.c	FUNCTION_52
0x4000921	     0xf1f80000000	                         nop dword [rax]	      3978	elf.c	FUNCTION_52
0x4000928	    0x498b86900000	            mov rax, qword [r14 + 0x90] 	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x400092f	          0x4885c0	                           test rax, rax	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000932	     0xf849e050000	                            je 0x4000ed6	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000938	            0x31f6	                            xor esi, esi	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x400093a	    0x41bd01000000	                             mov r13d, 1	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000940	            0xeb1b	                           jmp 0x400095d	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000942	    0x660f1f440000	                    nop word [rax + rax]	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000948	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x400094c	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000952	          0x4801c6	                            add rsi, rax	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000955	          0x4885d2	                           test rdx, rdx	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000958	          0x4889d0	                            mov rax, rdx	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x400095b	            0x745b	                            je 0x40009b8	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x400095d	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      3662	elf.c	FUNCTION_52	IF_1	FOR_1	CALL_4
0x4000964	        0x837a0411	               cmp dword [rdx + 4], 0x11	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4000968	            0x75de	                           jne 0x4000948	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400096a	        0xf6402210	           test byte [rax + 0x22], 0x10 	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400096e	            0x7438	                            je 0x40009a8	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000970	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000974	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000978	          0x4885ff	                           test rdi, rdi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x400097b	          0x4989d0	                             mov r8, rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x400097e	     0xf8446050000	                            je 0x4000eca	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000984	        0x48895710	             mov qword [rdi + 0x10], rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000988	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x400098c	          0x4d85c0	                             test r8, r8	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x400098f	     0xf8429050000	                            je 0x4000ebe	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000995	        0x49897818	              mov qword [r8 + 0x18], rdi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000999	    0x4183aea00000	               sub dword [r14 + 0xa0], 1	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x40009a1	            0xeba9	                           jmp 0x400094c	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x40009a3	       0xf1f440000	                   nop dword [rax + rax]	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x40009a8	    0x4489aa880000	            mov dword [rdx + 0x88], r13d	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x40009af	        0x4183c501	                             add r13d, 1	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x40009b3	            0xeb93	                           jmp 0x4000948	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x40009b5	           0xf1f00	                         nop dword [rax]	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x40009b8	          0x4885f6	                           test rsi, rsi	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x40009bb	            0x7413	                            je 0x40009d0	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x40009bd	        0x418d6d01	                      lea ebp, [r13 + 1]	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x40009c1	    0x4d8bbe900000	            mov r15, qword [r14 + 0x90] 	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x40009c8	      0xe90afbffff	                           jmp 0x40004d7	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x40009cd	           0xf1f00	                         nop dword [rax]	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x40009d0	    0x4d8bbe900000	            mov r15, qword [r14 + 0x90] 	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x40009d7	        0x418d6d01	                      lea ebp, [r13 + 1]	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x40009db	      0x41836644df	      and dword [r14 + 0x44], 0xffffffdf	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x40009e0	      0xe9f2faffff	                           jmp 0x40004d7	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x40009e5	           0xf1f00	                         nop dword [rax]	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x40009e8	        0x4863437c	         movsxd rax, dword [rbx + 0x7c] 	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40009ec	            0x85c0	                           test eax, eax	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40009ee	     0xf849dfdffff	                            je 0x4000791	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40009f4	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40009f8	      0x49894cc500	            mov qword [r13 + rax*8], rcx	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40009fd	    0x498b8ef80000	            mov rcx, qword [r14 + 0xf8] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4000a04	      0xe973fdffff	                           jmp 0x400077c	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4000a09	     0xf1f80000000	                         nop dword [rax]	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4000a10	      0x3df7ffff6f	                     cmp eax, 0x6ffffff7	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a15	     0xf849d010000	                            je 0x4000bb8	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a1b	     0xf8717010000	                            ja 0x4000b38	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a21	          0x83f811	                           cmp eax, 0x11	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a24	     0xf85e6010000	                           jne 0x4000c10	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a2a	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_86
0x4000a31	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000a35	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_86
0x4000a3b	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000a3e	          0x894328	             mov dword [rbx + 0x28], eax	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_86
0x4000a41	     0xf85d9fcffff	                           jne 0x4000720	      3786	elf.c	FUNCTION_52	FOR_3
0x4000a47	      0xe9c1feffff	                           jmp 0x400090d	      3786	elf.c	FUNCTION_52	FOR_3
0x4000a4c	         0xf1f4000	                         nop dword [rax]	      3786	elf.c	FUNCTION_52	FOR_3
0x4000a50	      0xbe070f0000	                          mov esi, 0xf07	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x4000a55	      0xbf00000000	                              mov edi, 0	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x4000a5a	      0xe800000000	                          call 0x4000a5f	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x4000a5f	    0x488b0425e000	                   mov rax, qword [0xe0]	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x4000a67	             0xf0b	                                     ud2	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x4000a69	     0xf1f80000000	                         nop dword [rax]	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x4000a70	          0x83f806	                              cmp eax, 6	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a73	     0xf8417010000	                            je 0x4000b90	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a79	          0x83f809	                              cmp eax, 9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a7c	     0xf857efeffff	                           jne 0x4000900	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000a82	      0xbe00000000	                              mov esi, 0	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_64
0x4000a87	          0x4c89f7	                            mov rdi, r14	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_64
0x4000a8a	      0xe800000000	                          call 0x4000a8f	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_64
0x4000a8f	          0x4885c0	                           test rax, rax	      3894	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_30
0x4000a92	            0x7410	                            je 0x4000aa4	      3894	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_30
0x4000a94	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_65
0x4000a9b	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_65
0x4000aa1	          0x894328	             mov dword [rbx + 0x28], eax	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_65
0x4000aa4	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      3619	elf.c	FUNCTION_51	CALL_1
0x4000aab	          0x8b4004	                mov eax, dword [rax + 4]	      3619	elf.c	FUNCTION_51	CALL_1
0x4000aae	          0x83f809	                              cmp eax, 9	      3620	elf.c	FUNCTION_51	IF_1
0x4000ab1	            0x7409	                            je 0x4000abc	      3620	elf.c	FUNCTION_51	IF_1
0x4000ab3	          0x83f804	                              cmp eax, 4	      3620	elf.c	FUNCTION_51	IF_1
0x4000ab6	     0xf8544feffff	                           jne 0x4000900	      3620	elf.c	FUNCTION_51	IF_1
0x4000abc	        0x488b5500	                    mov rdx, qword [rbp]	      3624	elf.c	FUNCTION_51
0x4000ac0	      0xbf00000000	                              mov edi, 0	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4000ac5	      0xb904000000	                              mov ecx, 4	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4000aca	          0x4889d6	                            mov rsi, rdx	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4000acd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4000acf	     0xf852bfeffff	                           jne 0x4000900	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4000ad5	          0x83f804	                              cmp eax, 4	      3628	elf.c	FUNCTION_51	IF_3
0x4000ad8	        0x488d7204	                      lea rsi, [rdx + 4]	      3627	elf.c	FUNCTION_51
0x4000adc	            0x750e	                           jne 0x4000aec	      3628	elf.c	FUNCTION_51	IF_3
0x4000ade	        0x807a0461	                cmp byte [rdx + 4], 0x61	      3628	elf.c	FUNCTION_51	IF_3
0x4000ae2	        0x488d7205	                      lea rsi, [rdx + 5]	      3628	elf.c	FUNCTION_51	IF_3
0x4000ae6	     0xf8514feffff	                           jne 0x4000900	      3628	elf.c	FUNCTION_51	IF_3
0x4000aec	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	      3631	elf.c	FUNCTION_51
0x4000af3	        0x488b4708	                mov rax, qword [rdi + 8]	      3632	elf.c	FUNCTION_51	CALL_3
0x4000af7	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3633	elf.c	FUNCTION_51	CALL_4
0x4000afe	    0xff90d8020000	                call qword [rax + 0x2d8]	      3633	elf.c	FUNCTION_51	CALL_4
0x4000b04	          0x4885c0	                           test rax, rax	      3898	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4000b07	     0xf84f3fdffff	                            je 0x4000900	      3898	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4000b0d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_67
0x4000b14	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b18	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_67
0x4000b1e	      0x48834b0840	                or qword [rbx + 8], 0x40	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4000b23	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b26	          0x89432c	             mov dword [rbx + 0x2c], eax	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_67
0x4000b29	     0xf85f1fbffff	                           jne 0x4000720	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b2f	      0xe9d9fdffff	                           jmp 0x400090d	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b34	         0xf1f4000	                         nop dword [rax]	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b38	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000b3d	     0xf82bdfdffff	                            jb 0x4000900	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000b43	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000b48	            0x7646	                           jbe 0x4000b90	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000b4a	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000b4f	     0xf85abfdffff	                           jne 0x4000900	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000b55	      0xbe00000000	                              mov esi, 0	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_84
0x4000b5a	          0x4c89f7	                            mov rdi, r14	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_84
0x4000b5d	      0xe800000000	                          call 0x4000b62	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_84
0x4000b62	          0x4885c0	                           test rax, rax	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x4000b65	     0xf8495fdffff	                            je 0x4000900	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x4000b6b	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_85
0x4000b72	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b76	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_85
0x4000b7c	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b7f	          0x894328	             mov dword [rbx + 0x28], eax	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_85
0x4000b82	     0xf8598fbffff	                           jne 0x4000720	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b88	      0xe980fdffff	                           jmp 0x400090d	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b8d	           0xf1f00	                         nop dword [rax]	      3786	elf.c	FUNCTION_52	FOR_3
0x4000b90	      0xbe00000000	                              mov esi, 0	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x4000b95	          0x4c89f7	                            mov rdi, r14	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x4000b98	      0xe800000000	                          call 0x4000b9d	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x4000b9d	          0x4885c0	                           test rax, rax	      3944	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_36
0x4000ba0	            0x75c9	                           jne 0x4000b6b	      3944	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_36
0x4000ba2	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000ba6	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000ba9	     0xf8571fbffff	                           jne 0x4000720	      3786	elf.c	FUNCTION_52	FOR_3
0x4000baf	      0xe959fdffff	                           jmp 0x400090d	      3786	elf.c	FUNCTION_52	FOR_3
0x4000bb4	         0xf1f4000	                         nop dword [rax]	      3786	elf.c	FUNCTION_52	FOR_3
0x4000bb8	        0xf6452001	               test byte [rbp + 0x20], 1	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4000bbc	      0xb800000000	                              mov eax, 0	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4000bc1	      0xbe00000000	                              mov esi, 0	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4000bc6	          0x4c89f7	                            mov rdi, r14	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4000bc9	        0x480f44f0	                          cmove rsi, rax	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4000bcd	      0xe800000000	                          call 0x4000bd2	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4000bd2	          0x4885c0	                           test rax, rax	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4000bd5	            0x7594	                           jne 0x4000b6b	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4000bd7	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000bdb	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000bde	     0xf853cfbffff	                           jne 0x4000720	      3786	elf.c	FUNCTION_52	FOR_3
0x4000be4	      0xe924fdffff	                           jmp 0x400090d	      3786	elf.c	FUNCTION_52	FOR_3
0x4000be9	     0xf1f80000000	                         nop dword [rax]	      3786	elf.c	FUNCTION_52	FOR_3
0x4000bf0	          0x83f804	                              cmp eax, 4	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000bf3	     0xf8489feffff	                            je 0x4000a82	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000bf9	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000bfd	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c00	     0xf851afbffff	                           jne 0x4000720	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c06	      0xe902fdffff	                           jmp 0x400090d	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c0b	       0xf1f440000	                   nop dword [rax + rax]	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c10	      0x3df6ffff6f	                     cmp eax, 0x6ffffff6	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000c15	     0xf843affffff	                            je 0x4000b55	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4000c1b	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c1f	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c22	     0xf85f8faffff	                           jne 0x4000720	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c28	      0xe9e0fcffff	                           jmp 0x400090d	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c2d	           0xf1f00	                         nop dword [rax]	      3786	elf.c	FUNCTION_52	FOR_3
0x4000c30	        0x498b4608	                mov rax, qword [r14 + 8]	      3873	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5
0x4000c34	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4000c3b	    0x4c8bb8e80200	           mov r15, qword [rax + 0x2e8] 	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4000c42	          0x4d85ff	                           test r15, r15	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4000c45	     0xf84a2fbffff	                            je 0x40007ed	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4000c4b	      0xba05000000	                              mov edx, 5	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_63
0x4000c50	      0xbe00000000	                              mov esi, 0	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_63
0x4000c55	      0xbf00000000	                              mov edi, 0	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_63
0x4000c5a	      0xe800000000	                          call 0x4000c5f	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_63
0x4000c5f	          0x4889ea	                            mov rdx, rbp	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4000c62	          0x4889c7	                            mov rdi, rax	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4000c65	          0x4c89f6	                            mov rsi, r14	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4000c68	            0x31c0	                            xor eax, eax	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4000c6a	          0x41ffd7	                                call r15	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4000c6d	      0xe97bfbffff	                           jmp 0x40007ed	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4000c72	    0x660f1f440000	                    nop word [rax + rax]	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4000c78	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4000c7c	          0x4885c0	                           test rax, rax	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4000c7f	     0xf8558fbffff	                           jne 0x40007dd	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4000c85	    0x498baff00000	            mov rbp, qword [r15 + 0xf0] 	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000c8c	        0x488b5b40	            mov rbx, qword [rbx + 0x40] 	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000c90	      0xba05000000	                              mov edx, 5	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_58
0x4000c95	      0xbe00000000	                              mov esi, 0	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_58
0x4000c9a	      0xbf00000000	                              mov edi, 0	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_58
0x4000c9f	      0xe800000000	                          call 0x4000ca4	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_58
0x4000ca4	          0x4989e8	                             mov r8, rbp	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000ca7	          0x4889c7	                            mov rdi, rax	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000caa	          0x4c89f9	                            mov rcx, r15	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000cad	          0x4889da	                            mov rdx, rbx	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000cb0	          0x4c89f6	                            mov rsi, r14	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000cb3	            0x31c0	                            xor eax, eax	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000cb5	      0xe800000000	                          call 0x4000cba	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x4000cba	      0xbf11000000	                           mov edi, 0x11	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x4000cbf	      0xe800000000	                          call 0x4000cc4	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x4000cc4	        0x4883c418	                           add rsp, 0x18	      3978	elf.c	FUNCTION_52
0x4000cc8	            0x31c0	                            xor eax, eax	      3860	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4000cca	              0x5b	                                 pop rbx	      3978	elf.c	FUNCTION_52
0x4000ccb	              0x5d	                                 pop rbp	      3978	elf.c	FUNCTION_52
0x4000ccc	            0x415c	                                 pop r12	      3978	elf.c	FUNCTION_52
0x4000cce	            0x415d	                                 pop r13	      3978	elf.c	FUNCTION_52
0x4000cd0	            0x415e	                                 pop r14	      3978	elf.c	FUNCTION_52
0x4000cd2	            0x415f	                                 pop r15	      3978	elf.c	FUNCTION_52
0x4000cd4	              0xc3	                                     ret	      3978	elf.c	FUNCTION_52
0x4000cd5	           0xf1f00	                         nop dword [rax]	      3978	elf.c	FUNCTION_52
0x4000cd8	    0x488b05000000	            mov rax, qword [0x04000cdf] 	      3978	elf.c	FUNCTION_52
0x4000cdf	      0xe9f0faffff	                           jmp 0x40007d4	      3978	elf.c	FUNCTION_52
0x4000ce4	         0xf1f4000	                         nop dword [rax]	      3978	elf.c	FUNCTION_52
0x4000ce8	      0x410fb75724	           movzx edx, word [r15 + 0x24] 	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4000ced	      0x6681e28003	                           and dx, 0x380	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4000cf2	      0x6681ea0001	                           sub dx, 0x100	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4000cf7	      0x66f7c280fe	                         test dx, 0xfe80	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4000cfc	     0xf84dbfaffff	                            je 0x40007dd	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4000d02	    0x4d8b87f00000	              mov r8, qword [r15 + 0xf0]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d09	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d0d	      0xba05000000	                              mov edx, 5	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_53
0x4000d12	      0xbe00000000	                              mov esi, 0	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_53
0x4000d17	      0xbf00000000	                              mov edi, 0	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_53
0x4000d1c	      0x4c89442408	                 mov qword [rsp + 8], r8	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d21	        0x48890424	                    mov qword [rsp], rax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d25	      0xe800000000	                          call 0x4000d2a	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_53
0x4000d2a	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d2f	        0x488b1424	                    mov rdx, qword [rsp]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d33	          0x4889c7	                            mov rdi, rax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d36	          0x4c89f9	                            mov rcx, r15	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d39	            0x31c0	                            xor eax, eax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d3b	          0x4c89f6	                            mov rsi, r14	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d3e	      0xe800000000	                          call 0x4000d43	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4000d43	          0x4c89e6	                            mov rsi, r12	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_54
0x4000d46	          0x4c89ff	                            mov rdi, r15	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_54
0x4000d49	      0xe800000000	                          call 0x4000d4e	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_54
0x4000d4e	          0x4885c0	                           test rax, rax	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x4000d51	     0xf8463ffffff	                            je 0x4000cba	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x4000d57	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x4000d5b	      0xe974faffff	                           jmp 0x40007d4	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x4000d60	        0x418b4644	            mov eax, dword [r14 + 0x44] 	      3714	elf.c	FUNCTION_52
0x4000d64	          0xc1e805	                              shr eax, 5	      3714	elf.c	FUNCTION_52
0x4000d67	          0x83e043	                           and eax, 0x43	      3714	elf.c	FUNCTION_52
0x4000d6a	          0x83f801	                              cmp eax, 1	      3714	elf.c	FUNCTION_52
0x4000d6d	     0xf8576f8ffff	                           jne 0x40005e9	      3714	elf.c	FUNCTION_52
0x4000d73	       0xf1f440000	                   nop dword [rax + rax]	      3714	elf.c	FUNCTION_52
0x4000d78	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3718	elf.c	FUNCTION_52	IF_11	CALL_14
0x4000d7f	          0x4189ef	                           mov r15d, ebp	      3718	elf.c	FUNCTION_52	IF_11	CALL_14
0x4000d82	    0x4489a8780c00	           mov dword [rax + 0xc78], r13d	      3718	elf.c	FUNCTION_52	IF_11	CALL_14
0x4000d89	      0x488b442408	                mov rax, qword [rsp + 8]	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x4000d8e	          0x8b7068	            mov esi, dword [rax + 0x68] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x4000d91	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x4000d98	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x4000d9f	        0x488b7808	                mov rdi, qword [rax + 8]	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x4000da3	      0xe800000000	                          call 0x4000da8	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x4000da8	    0x81fdfefe0000	                         cmp ebp, 0xfefe	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x4000dae	            0x766e	                           jbe 0x4000e1e	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x4000db0	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x4000db7	    0x4883b8e80200	              cmp qword [rax + 0x2e8], 0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x4000dbf	            0x740f	                            je 0x4000dd0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x4000dc1	      0xbe8c0e0000	                          mov esi, 0xe8c	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x4000dc6	      0xbf00000000	                              mov edi, 0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x4000dcb	      0xe800000000	                          call 0x4000dd0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x4000dd0	      0xbe60000000	                           mov esi, 0x60	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_19
0x4000dd5	          0x4c89f7	                            mov rdi, r14	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_19
0x4000dd8	        0x458d7d02	                     lea r15d, [r13 + 2]	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x4000ddc	      0xe800000000	                          call 0x4000de1	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_19
0x4000de1	          0x4889c3	                            mov rbx, rax	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_19
0x4000de4	          0x896850	             mov dword [rax + 0x50], ebp	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x4000de7	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4000dee	            0x31d2	                            xor edx, edx	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4000df0	      0xbe00000000	                              mov esi, 0	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4000df5	    0x488998e80200	            mov qword [rax + 0x2e8], rbx	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4000dfc	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4000e03	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4000e0a	        0x488b7808	                mov rdi, qword [rax + 8]	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4000e0e	      0xe800000000	                          call 0x4000e13	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4000e13	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4000e16	            0x8903	                    mov dword [rbx], eax	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4000e18	     0xf84a6feffff	                            je 0x4000cc4	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4000e1e	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4000e25	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4000e2a	        0x458d6f01	                     lea r13d, [r15 + 1]	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4000e2e	      0xbb01000000	                              mov ebx, 1	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4000e33	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4000e3a	    0x8bb708010000	           mov esi, dword [rdi + 0x108] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4000e40	        0x488b7808	                mov rdi, qword [rax + 8]	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4000e44	        0x44897850	            mov dword [rax + 0x50], r15d	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4000e48	        0x4183c702	                             add r15d, 2	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4000e4c	      0xe800000000	                          call 0x4000e51	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4000e51	      0xe993f7ffff	                           jmp 0x40005e9	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4000e56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4000e60	      0xba05000000	                              mov edx, 5	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e65	      0xbe00000000	                              mov esi, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e6a	      0xbf00000000	                              mov edi, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e6f	      0xe800000000	                          call 0x4000e74	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e74	          0x4489fa	                           mov edx, r15d	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e77	          0x4c89f6	                            mov rsi, r14	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e7a	          0x4889c7	                            mov rdi, rax	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e7d	            0x31c0	                            xor eax, eax	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e7f	      0xe800000000	                          call 0x4000e84	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4000e84	        0x4883c418	                           add rsp, 0x18	      3978	elf.c	FUNCTION_52
0x4000e88	            0x31c0	                            xor eax, eax	      3748	elf.c	FUNCTION_52	IF_14
0x4000e8a	              0x5b	                                 pop rbx	      3978	elf.c	FUNCTION_52
0x4000e8b	              0x5d	                                 pop rbp	      3978	elf.c	FUNCTION_52
0x4000e8c	            0x415c	                                 pop r12	      3978	elf.c	FUNCTION_52
0x4000e8e	            0x415d	                                 pop r13	      3978	elf.c	FUNCTION_52
0x4000e90	            0x415e	                                 pop r14	      3978	elf.c	FUNCTION_52
0x4000e92	            0x415f	                                 pop r15	      3978	elf.c	FUNCTION_52
0x4000e94	              0xc3	                                     ret	      3978	elf.c	FUNCTION_52
0x4000e95	    0x488b98e80200	           mov rbx, qword [rax + 0x2e8] 	      3777	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x4000e9c	          0x4885db	                           test rbx, rbx	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4000e9f	            0x745a	                            je 0x4000efb	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4000ea1	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x4000ea4	      0x49895cc500	            mov qword [r13 + rax*8], rbx	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x4000ea9	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_44
0x4000eb0	    0x8b90780c0000	           mov edx, dword [rax + 0xc78] 	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_44
0x4000eb6	          0x895328	             mov dword [rbx + 0x28], edx	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_44
0x4000eb9	      0xe91ff8ffff	                           jmp 0x40006dd	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_44
0x4000ebe	    0x4989be980000	             mov qword [r14 + 0x98], rdi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000ec5	      0xe9cffaffff	                           jmp 0x4000999	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000eca	    0x498996900000	             mov qword [r14 + 0x90], rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000ed1	      0xe9b6faffff	                           jmp 0x400098c	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4000ed6	      0xbd02000000	                              mov ebp, 2	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000edb	          0x4531ff	                          xor r15d, r15d	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4000ede	    0x41bd01000000	                             mov r13d, 1	      3650	elf.c	FUNCTION_52
0x4000ee4	      0xe9f2faffff	                           jmp 0x40009db	      3650	elf.c	FUNCTION_52
0x4000ee9	          0x4c89ee	                            mov rsi, r13	      3765	elf.c	FUNCTION_52	IF_16	CALL_37
0x4000eec	          0x4c89f7	                            mov rdi, r14	      3765	elf.c	FUNCTION_52	IF_16	CALL_37
0x4000eef	      0xe800000000	                          call 0x4000ef4	      3765	elf.c	FUNCTION_52	IF_16	CALL_37
0x4000ef4	            0x31c0	                            xor eax, eax	      3766	elf.c	FUNCTION_52	IF_16
0x4000ef6	      0xe917faffff	                           jmp 0x4000912	      3766	elf.c	FUNCTION_52	IF_16
0x4000efb	      0xbec20e0000	                          mov esi, 0xec2	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4000f00	      0xbf00000000	                              mov edi, 0	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4000f05	      0xe800000000	                          call 0x4000f0a	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4000f0a	            0xeb95	                           jmp 0x4000ea1	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4000f0c	    0x498b8ef80000	            mov rcx, qword [r14 + 0xf8] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x4000f13	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x4000f17	    0x8b89780c0000	           mov ecx, dword [rcx + 0xc78] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x4000f1d	          0x89502c	             mov dword [rax + 0x2c], edx	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x4000f20	      0x4883480840	                or qword [rax + 8], 0x40	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x4000f25	          0x894828	             mov dword [rax + 0x28], ecx	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x4000f28	      0xe964f8ffff	                           jmp 0x4000791	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
_bfd_elf_canonicalize_symtab	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	12
0x400e2d0	        0x488b4708	                mov rax, qword [rdi + 8]	      8181	elf.c	FUNCTION_93	CALL_1
0x400e2d4	              0x53	                                push rbx	      8180	elf.c	FUNCTION_93
0x400e2d5	            0x31d2	                            xor edx, edx	      8182	elf.c	FUNCTION_93	CALL_2
0x400e2d7	          0x4889fb	                            mov rbx, rdi	      8180	elf.c	FUNCTION_93
0x400e2da	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8182	elf.c	FUNCTION_93	CALL_2
0x400e2e1	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8182	elf.c	FUNCTION_93	CALL_2
0x400e2e8	          0xff5048	                 call qword [rax + 0x48]	      8182	elf.c	FUNCTION_93	CALL_2
0x400e2eb	          0x4885c0	                           test rax, rax	      8184	elf.c	FUNCTION_93	IF_1
0x400e2ee	            0x7806	                            js 0x400e2f6	      8184	elf.c	FUNCTION_93	IF_1
0x400e2f0	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      8185	elf.c	FUNCTION_93	CALL_3
0x400e2f6	              0x5b	                                 pop rbx	      8187	elf.c	FUNCTION_93
0x400e2f7	              0xc3	                                     ret	      8187	elf.c	FUNCTION_93
_bfd_elf_close_and_cleanup	functions,0:CALL,8:FOR,0:WHILE,0:SWITCH,0:IF,2:DO,0:ELSE,0	26
0x4010500	              0x55	                                push rbp	      8988	elf.c	FUNCTION_110
0x4010501	              0x53	                                push rbx	      8988	elf.c	FUNCTION_110
0x4010502	          0x4889fb	                            mov rbx, rdi	      8988	elf.c	FUNCTION_110
0x4010505	        0x4883ec08	                              sub rsp, 8	      8988	elf.c	FUNCTION_110
0x4010509	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x401050d	    0x488baff80000	            mov rbp, qword [rdi + 0xf8] 	      8989	elf.c	FUNCTION_110	CALL_1
0x4010514	          0x83e007	                              and eax, 7	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x4010517	            0x3c01	                               cmp al, 1	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x4010519	            0x752e	                           jne 0x4010549	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x401051b	          0x4885ed	                           test rbp, rbp	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x401051e	            0x7429	                            je 0x4010549	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x4010520	    0x488b85980c00	           mov rax, qword [rbp + 0xc98] 	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x4010527	          0x4885c0	                           test rax, rax	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x401052a	            0x740e	                            je 0x401053a	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x401052c	        0x488b7808	                mov rdi, qword [rax + 8]	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x4010530	          0x4885ff	                           test rdi, rdi	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x4010533	            0x7405	                            je 0x401053a	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x4010535	      0xe800000000	                          call 0x401053a	      8993	elf.c	FUNCTION_110	IF_1	CALL_6
0x401053a	    0x488db5300300	                  lea rsi, [rbp + 0x330]	      8994	elf.c	FUNCTION_110	IF_1	CALL_7
0x4010541	          0x4889df	                            mov rdi, rbx	      8994	elf.c	FUNCTION_110	IF_1	CALL_7
0x4010544	      0xe800000000	                          call 0x4010549	      8994	elf.c	FUNCTION_110	IF_1	CALL_7
0x4010549	        0x4883c408	                              add rsp, 8	      8998	elf.c	FUNCTION_110
0x401054d	          0x4889df	                            mov rdi, rbx	      8997	elf.c	FUNCTION_110	CALL_8
0x4010550	              0x5b	                                 pop rbx	      8998	elf.c	FUNCTION_110
0x4010551	              0x5d	                                 pop rbp	      8998	elf.c	FUNCTION_110
0x4010552	      0xe900000000	                           jmp 0x4010557	      8997	elf.c	FUNCTION_110	CALL_8
_bfd_elf_canonicalize_dynamic_reloc	functions,0:CALL,9:FOR,2:WHILE,0:SWITCH,0:IF,3:DO,0:ELSE,0	175
0x400e3c0	            0x4157	                                push r15	      8241	elf.c	FUNCTION_96
0x400e3c2	            0x4156	                                push r14	      8241	elf.c	FUNCTION_96
0x400e3c4	            0x4155	                                push r13	      8241	elf.c	FUNCTION_96
0x400e3c6	            0x4154	                                push r12	      8241	elf.c	FUNCTION_96
0x400e3c8	              0x55	                                push rbp	      8241	elf.c	FUNCTION_96
0x400e3c9	              0x53	                                push rbx	      8241	elf.c	FUNCTION_96
0x400e3ca	        0x4883ec18	                           sub rsp, 0x18	      8241	elf.c	FUNCTION_96
0x400e3ce	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400e3d5	    0x8b887c0c0000	           mov ecx, dword [rax + 0xc7c] 	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400e3db	            0x85c9	                           test ecx, ecx	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400e3dd	     0xf8493020000	                            je 0x400e676	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400e3e3	        0x488b4708	                mov rax, qword [rdi + 8]	      8252	elf.c	FUNCTION_96	CALL_4
0x400e3e7	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400e3ee	          0x4989fe	                            mov r14, rdi	      8254	elf.c	FUNCTION_96	FOR_1
0x400e3f1	          0x4989f5	                            mov r13, rsi	      8254	elf.c	FUNCTION_96	FOR_1
0x400e3f4	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400e3fb	          0x4885db	                           test rbx, rbx	      8254	elf.c	FUNCTION_96	FOR_1
0x400e3fe	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400e405	        0x488b6840	            mov rbp, qword [rax + 0x40] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400e409	     0xf8462020000	                            je 0x400e671	      8254	elf.c	FUNCTION_96	FOR_1
0x400e40f	          0x4989d4	                            mov r12, rdx	      8254	elf.c	FUNCTION_96	FOR_1
0x400e412	          0x4531ff	                          xor r15d, r15d	      8254	elf.c	FUNCTION_96	FOR_1
0x400e415	    0x660f6f0d0000	       movdqa xmm1, xmmword [0x0400e41d]	      8254	elf.c	FUNCTION_96	FOR_1
0x400e41d	            0xeb1b	                           jmp 0x400e43a	      8254	elf.c	FUNCTION_96	FOR_1
0x400e41f	              0x90	                                     nop	      8254	elf.c	FUNCTION_96	FOR_1
0x400e420	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400e424	          0x4885db	                           test rbx, rbx	      8254	elf.c	FUNCTION_96	FOR_1
0x400e427	     0xf84eb010000	                            je 0x400e618	      8254	elf.c	FUNCTION_96	FOR_1
0x400e42d	    0x498b96f80000	            mov rdx, qword [r14 + 0xf8] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400e434	    0x8b8a7c0c0000	           mov ecx, dword [rdx + 0xc7c] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400e43a	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400e441	          0x394a28	            cmp dword [rdx + 0x28], ecx 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400e444	            0x75da	                           jne 0x400e420	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400e446	          0x8b4204	                mov eax, dword [rdx + 4]	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400e449	          0x83f809	                              cmp eax, 9	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400e44c	            0x7405	                            je 0x400e453	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400e44e	          0x83f804	                              cmp eax, 4	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400e451	            0x75cd	                           jne 0x400e420	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400e453	         0xf290c24	              movaps xmmword [rsp], xmm1	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400e457	      0xb901000000	                              mov ecx, 1	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e45c	          0x4c89e2	                            mov rdx, r12	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e45f	          0x4889de	                            mov rsi, rbx	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e462	          0x4c89f7	                            mov rdi, r14	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e465	            0xffd5	                                call rbp	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e467	            0x85c0	                           test eax, eax	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e469	     0xf84f9010000	                            je 0x400e668	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e46f	    0x488bbbe00000	            mov rdi, qword [rbx + 0xe0] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400e476	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400e47a	            0x31d2	                            xor edx, edx	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400e47c	        0x4c8b4378	              mov r8, qword [rbx + 0x78]	      8266	elf.c	FUNCTION_96	FOR_1	IF_2
0x400e480	      0x660f6f0c24	              movdqa xmm1, xmmword [rsp]	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e485	        0x48f77738	                  div qword [rdi + 0x38]	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400e489	          0x4885c0	                           test rax, rax	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e48c	     0xf8e72010000	                           jle 0x400e604	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e492	          0x4c89e9	                            mov rcx, r13	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e495	        0x48c1e13c	                           shl rcx, 0x3c	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e499	        0x48c1e93f	                           shr rcx, 0x3f	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e49d	          0x4839c1	                            cmp rcx, rax	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4a0	        0x480f47c8	                          cmova rcx, rax	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4a4	        0x4883f80a	                            cmp rax, 0xa	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4a8	     0xf878a010000	                            ja 0x400e638	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4ae	          0x4889c1	                            mov rcx, rax	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4b1	        0x4883f901	                              cmp rcx, 1	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4b5	        0x498d5508	                      lea rdx, [r13 + 8]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4b9	        0x498d7020	                    lea rsi, [r8 + 0x20]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4bd	        0x4d894500	                     mov qword [r13], r8	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4c1	     0xf8489010000	                            je 0x400e650	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4c7	        0x4883f902	                              cmp rcx, 2	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4cb	        0x498d5510	                   lea rdx, [r13 + 0x10]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4cf	        0x498d7840	                    lea rdi, [r8 + 0x40]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4d3	        0x49897508	                mov qword [r13 + 8], rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4d7	     0xf8483010000	                            je 0x400e660	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4dd	        0x4883f903	                              cmp rcx, 3	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4e1	        0x498d5518	                   lea rdx, [r13 + 0x18]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4e5	        0x498d7060	                    lea rsi, [r8 + 0x60]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4e9	        0x49897d10	             mov qword [r13 + 0x10], rdi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4ed	     0xf845d010000	                            je 0x400e650	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4f3	        0x4883f904	                              cmp rcx, 4	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4f7	        0x498d5520	                   lea rdx, [r13 + 0x20]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e4fb	    0x498db8800000	                    lea rdi, [r8 + 0x80]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e502	        0x49897518	             mov qword [r13 + 0x18], rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e506	     0xf8454010000	                            je 0x400e660	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e50c	        0x4883f905	                              cmp rcx, 5	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e510	        0x498d5528	                   lea rdx, [r13 + 0x28]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e514	    0x498db0a00000	                    lea rsi, [r8 + 0xa0]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e51b	        0x49897d20	             mov qword [r13 + 0x20], rdi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e51f	     0xf842b010000	                            je 0x400e650	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e525	        0x4883f906	                              cmp rcx, 6	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e529	        0x498d5530	                   lea rdx, [r13 + 0x30]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e52d	    0x498db8c00000	                    lea rdi, [r8 + 0xc0]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e534	        0x49897528	             mov qword [r13 + 0x28], rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e538	     0xf8422010000	                            je 0x400e660	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e53e	        0x4883f907	                              cmp rcx, 7	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e542	        0x498d5538	                   lea rdx, [r13 + 0x38]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e546	    0x498db0e00000	                    lea rsi, [r8 + 0xe0]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e54d	        0x49897d30	             mov qword [r13 + 0x30], rdi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e551	     0xf84f9000000	                            je 0x400e650	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e557	        0x4883f908	                              cmp rcx, 8	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e55b	        0x498d5540	                   lea rdx, [r13 + 0x40]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e55f	    0x498db8000100	                   lea rdi, [r8 + 0x100]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e566	        0x49897538	             mov qword [r13 + 0x38], rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e56a	     0xf84f0000000	                            je 0x400e660	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e570	        0x4883f90a	                            cmp rcx, 0xa	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e574	        0x498d5548	                   lea rdx, [r13 + 0x48]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e578	    0x498db0200100	                   lea rsi, [r8 + 0x120]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e57f	        0x49897d40	             mov qword [r13 + 0x40], rdi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e583	     0xf85c7000000	                           jne 0x400e650	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e589	        0x498d5550	                   lea rdx, [r13 + 0x50]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e58d	    0x4981c0400100	                           add r8, 0x140	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e594	        0x49897548	             mov qword [r13 + 0x48], rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e598	          0x4839c8	                            cmp rax, rcx	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e59b	            0x7462	                            je 0x400e5ff	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e59d	          0x4989c1	                             mov r9, rax	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5a0	          0x4929c9	                             sub r9, rcx	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5a3	        0x498d79fe	                       lea rdi, [r9 - 2]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5a7	          0x48d1ef	                              shr rdi, 1	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5aa	        0x4883c701	                              add rdi, 1	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5ae	        0x4983f901	                               cmp r9, 1	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5b2	        0x4c8d143f	                    lea r10, [rdi + rdi]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5b6	            0x7444	                            je 0x400e5fc	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5b8	        0x498d7020	                    lea rsi, [r8 + 0x20]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5bc	        0x4c890424	                     mov qword [rsp], r8	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5c0	      0xf30f7e0424	                  movq xmm0, qword [rsp]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5c5	        0x48893424	                    mov qword [rsp], rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5c9	      0x498d74cd00	                  lea rsi, [r13 + rcx*8]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5ce	            0x31c9	                            xor ecx, ecx	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5d0	         0xf160424	                movhps xmm0, qword [rsp]	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5d4	        0x4883c101	                              add rcx, 1	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5d8	        0x4883c610	                           add rsi, 0x10	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5dc	         0xf2946f0	       movaps xmmword [rsi - 0x10], xmm0	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5e0	        0x660fd4c1	                        paddq xmm0, xmm1	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5e4	          0x4839cf	                            cmp rdi, rcx	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5e7	            0x77eb	                            ja 0x400e5d4	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5e9	          0x4c89d1	                            mov rcx, r10	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5ec	        0x4a8d14d2	                  lea rdx, [rdx + r10*8]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5f0	        0x48c1e105	                              shl rcx, 5	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5f4	          0x4901c8	                             add r8, rcx	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5f7	          0x4d39d1	                             cmp r9, r10	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5fa	            0x7403	                            je 0x400e5ff	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5fc	          0x4c8902	                     mov qword [rdx], r8	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e5ff	      0x4d8d6cc500	                  lea r13, [r13 + rax*8]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e604	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400e608	          0x4901c7	                            add r15, rax	      8269	elf.c	FUNCTION_96	FOR_1	IF_2
0x400e60b	          0x4885db	                           test rbx, rbx	      8254	elf.c	FUNCTION_96	FOR_1
0x400e60e	     0xf8519feffff	                           jne 0x400e42d	      8254	elf.c	FUNCTION_96	FOR_1
0x400e614	         0xf1f4000	                         nop dword [rax]	      8254	elf.c	FUNCTION_96	FOR_1
0x400e618	    0x49c745000000	                      mov qword [r13], 0	      8273	elf.c	FUNCTION_96
0x400e620	          0x4c89f8	                            mov rax, r15	      8275	elf.c	FUNCTION_96
0x400e623	        0x4883c418	                           add rsp, 0x18	      8276	elf.c	FUNCTION_96
0x400e627	              0x5b	                                 pop rbx	      8276	elf.c	FUNCTION_96
0x400e628	              0x5d	                                 pop rbp	      8276	elf.c	FUNCTION_96
0x400e629	            0x415c	                                 pop r12	      8276	elf.c	FUNCTION_96
0x400e62b	            0x415d	                                 pop r13	      8276	elf.c	FUNCTION_96
0x400e62d	            0x415e	                                 pop r14	      8276	elf.c	FUNCTION_96
0x400e62f	            0x415f	                                 pop r15	      8276	elf.c	FUNCTION_96
0x400e631	              0xc3	                                     ret	      8276	elf.c	FUNCTION_96
0x400e632	    0x660f1f440000	                    nop word [rax + rax]	      8276	elf.c	FUNCTION_96
0x400e638	          0x4885c9	                           test rcx, rcx	      8276	elf.c	FUNCTION_96
0x400e63b	     0xf8570feffff	                           jne 0x400e4b1	      8276	elf.c	FUNCTION_96
0x400e641	          0x4c89ea	                            mov rdx, r13	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e644	      0xe954ffffff	                           jmp 0x400e59d	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e649	     0xf1f80000000	                         nop dword [rax]	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e650	          0x4989f0	                             mov r8, rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e653	      0xe940ffffff	                           jmp 0x400e598	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e658	     0xf1f84000000	                   nop dword [rax + rax]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e660	          0x4989f8	                             mov r8, rdi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e663	      0xe930ffffff	                           jmp 0x400e598	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400e668	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8264	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e66f	            0xebb2	                           jmp 0x400e623	      8264	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e671	          0x4531ff	                          xor r15d, r15d	      8253	elf.c	FUNCTION_96
0x400e674	            0xeba2	                           jmp 0x400e618	      8253	elf.c	FUNCTION_96
0x400e676	      0xbf05000000	                              mov edi, 5	      8248	elf.c	FUNCTION_96	IF_1	CALL_3
0x400e67b	      0xe800000000	                          call 0x400e680	      8248	elf.c	FUNCTION_96	IF_1	CALL_3
0x400e680	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8249	elf.c	FUNCTION_96	IF_1
0x400e687	            0xeb9a	                           jmp 0x400e623	      8249	elf.c	FUNCTION_96	IF_1
_bfd_elf_fixup_group_sections	functions,0:CALL,6:FOR,1:WHILE,1:SWITCH,0:IF,11:DO,0:ELSE,2	93
0x400c0d0	    0x488b97900000	            mov rdx, qword [rdi + 0x90] 	      7602	elf.c	FUNCTION_85	FOR_1
0x400c0d7	          0x4885d2	                           test rdx, rdx	      7602	elf.c	FUNCTION_85	FOR_1
0x400c0da	            0x7519	                           jne 0x400c0f5	      7602	elf.c	FUNCTION_85	FOR_1
0x400c0dc	      0xe9ec000000	                           jmp 0x400c1cd	      7602	elf.c	FUNCTION_85	FOR_1
0x400c0e1	     0xf1f80000000	                         nop dword [rax]	      7602	elf.c	FUNCTION_85	FOR_1
0x400c0e8	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      7602	elf.c	FUNCTION_85	FOR_1
0x400c0ec	          0x4885d2	                           test rdx, rdx	      7602	elf.c	FUNCTION_85	FOR_1
0x400c0ef	     0xf84d8000000	                            je 0x400c1cd	      7602	elf.c	FUNCTION_85	FOR_1
0x400c0f5	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x400c0fc	        0x83780411	               cmp dword [rax + 4], 0x11	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x400c100	            0x75e6	                           jne 0x400c0e8	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x400c102	    0x488b88c00000	            mov rcx, qword [rax + 0xc0] 	      7605	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_2
0x400c109	          0x4885c9	                           test rcx, rcx	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c10c	            0x74da	                            je 0x400c0e8	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c10e	        0x4c8b5268	            mov r10, qword [rdx + 0x68] 	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c112	            0x31ff	                            xor edi, edi	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c114	          0x4889c8	                            mov rax, rcx	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c117	          0x4c39d6	                            cmp rsi, r10	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c11a	            0x751d	                           jne 0x400c139	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c11c	      0xe9d2000000	                           jmp 0x400c1f3	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c121	     0xf1f80000000	                         nop dword [rax]	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c128	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x400c12f	          0x4839c1	                            cmp rcx, rax	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400c132	            0x745c	                            je 0x400c190	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400c134	          0x4885c0	                           test rax, rax	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c137	            0x7457	                            je 0x400c190	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c139	        0x483b7068	            cmp rsi, qword [rax + 0x68] 	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400c13d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400c144	            0x75e2	                           jne 0x400c128	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400c146	        0x4c8b4858	              mov r9, qword [rax + 0x58]	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400c14a	        0x4c8d4704	                       lea r8, [rdi + 4]	      7626	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x400c14e	          0x4d85c9	                             test r9, r9	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400c151	            0x740d	                            je 0x400c160	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400c153	        0x4883c708	                              add rdi, 8	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400c157	      0x41f6410902	                   test byte [r9 + 9], 2	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400c15c	        0x4c0f45c7	                          cmovne r8, rdi	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400c160	        0x488b7870	            mov rdi, qword [rax + 0x70] 	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c164	          0x4885ff	                           test rdi, rdi	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c167	     0xf84b3000000	                            je 0x400c220	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c16d	        0xf6470902	                  test byte [rdi + 9], 2	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c171	     0xf84a9000000	                            je 0x400c220	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c177	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x400c17e	        0x498d7804	                       lea rdi, [r8 + 4]	      7632	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c182	          0x4839c1	                            cmp rcx, rax	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400c185	            0x75ad	                           jne 0x400c134	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400c187	    0x660f1f840000	                    nop word [rax + rax]	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400c190	          0x4885ff	                           test rdi, rdi	      7638	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7
0x400c193	     0xf844fffffff	                            je 0x400c0e8	      7638	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7
0x400c199	          0x4885f6	                           test rsi, rsi	      7640	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x400c19c	     0xf84a2000000	                            je 0x400c244	      7640	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x400c1a2	        0x488b4240	            mov rax, qword [rdx + 0x40] 	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400c1a6	          0x4885c0	                           test rax, rax	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400c1a9	            0x7508	                           jne 0x400c1b3	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400c1ab	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400c1af	        0x48894240	             mov qword [rdx + 0x40], rax	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400c1b3	          0x4829f8	                            sub rax, rdi	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x400c1b6	        0x4883f804	                              cmp rax, 4	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400c1ba	            0x7674	                           jbe 0x400c230	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400c1bc	        0x48894238	             mov qword [rdx + 0x38], rax	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x400c1c0	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      7602	elf.c	FUNCTION_85	FOR_1
0x400c1c4	          0x4885d2	                           test rdx, rdx	      7602	elf.c	FUNCTION_85	FOR_1
0x400c1c7	     0xf8528ffffff	                           jne 0x400c0f5	      7602	elf.c	FUNCTION_85	FOR_1
0x400c1cd	      0xb801000000	                              mov eax, 1	      7668	elf.c	FUNCTION_85
0x400c1d2	              0xc3	                                     ret	      7668	elf.c	FUNCTION_85
0x400c1d3	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7668	elf.c	FUNCTION_85
0x400c1da	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x400c1e1	          0x4839c1	                            cmp rcx, rax	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400c1e4	     0xf84fefeffff	                            je 0x400c0e8	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400c1ea	          0x4885c0	                           test rax, rax	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c1ed	     0xf84f5feffff	                            je 0x400c0e8	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400c1f3	        0x488b7868	            mov rdi, qword [rax + 0x68] 	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400c1f7	          0x4839f7	                            cmp rdi, rsi	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400c1fa	            0x74d7	                            je 0x400c1d3	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400c1fc	    0x488bbfe00000	            mov rdi, qword [rdi + 0xe0] 	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x400c203	    0x48816708fffd	 and qword [rdi + 8], 0xfffffffffffffdff	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x400c20b	    0x48c787b00000	               mov qword [rdi + 0xb0], 0	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x400c216	            0xebbb	                           jmp 0x400c1d3	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x400c218	     0xf1f84000000	                   nop dword [rax + rax]	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x400c220	          0x4c89c7	                             mov rdi, r8	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c223	      0xe900ffffff	                           jmp 0x400c128	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c228	     0xf1f84000000	                   nop dword [rax + rax]	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400c230	    0x48c742380000	               mov qword [rdx + 0x38], 0	      7649	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400c238	    0x814a20008000	           or dword [rdx + 0x20], 0x8000	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400c23f	      0xe9a4feffff	                           jmp 0x400c0e8	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400c244	        0x498b4238	            mov rax, qword [r10 + 0x38] 	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x400c248	          0x4829f8	                            sub rax, rdi	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x400c24b	        0x4883f804	                              cmp rax, 4	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400c24f	            0x7715	                            ja 0x400c266	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400c251	    0x49c742380000	               mov qword [r10 + 0x38], 0	      7660	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400c259	    0x41814a200080	           or dword [r10 + 0x20], 0x8000	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400c261	      0xe982feffff	                           jmp 0x400c0e8	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400c266	        0x49894238	             mov qword [r10 + 0x38], rax	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x400c26a	      0xe979feffff	                           jmp 0x400c0e8	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
_bfd_elf_make_section_from_phdr	functions,0:CALL,11:FOR,0:WHILE,0:SWITCH,0:IF,14:DO,0:ELSE,0	241
0x4006b20	              0x55	                                push rbp	      2907	elf.c	FUNCTION_42
0x4006b21	          0x4889e5	                            mov rbp, rsp	      2907	elf.c	FUNCTION_42
0x4006b24	            0x4157	                                push r15	      2907	elf.c	FUNCTION_42
0x4006b26	            0x4156	                                push r14	      2907	elf.c	FUNCTION_42
0x4006b28	            0x4155	                                push r13	      2907	elf.c	FUNCTION_42
0x4006b2a	            0x4154	                                push r12	      2907	elf.c	FUNCTION_42
0x4006b2c	          0x4189d5	                           mov r13d, edx	      2907	elf.c	FUNCTION_42
0x4006b2f	              0x53	                                push rbx	      2907	elf.c	FUNCTION_42
0x4006b30	          0x4989fc	                            mov r12, rdi	      2907	elf.c	FUNCTION_42
0x4006b33	          0x4889f3	                            mov rbx, rsi	      2907	elf.c	FUNCTION_42
0x4006b36	          0x4989ce	                            mov r14, rcx	      2907	elf.c	FUNCTION_42
0x4006b39	        0x4883ec68	                           sub rsp, 0x68	      2907	elf.c	FUNCTION_42
0x4006b3d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2907	elf.c	FUNCTION_42
0x4006b46	        0x488945c8	             mov qword [rbp - 0x38], rax	      2907	elf.c	FUNCTION_42
0x4006b4a	            0x31c0	                            xor eax, eax	      2907	elf.c	FUNCTION_42
0x4006b4c	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2914	elf.c	FUNCTION_42
0x4006b50	          0x4885c0	                           test rax, rax	      2916	elf.c	FUNCTION_42
0x4006b53	     0xf8457010000	                            je 0x4006cb0	      2916	elf.c	FUNCTION_42
0x4006b59	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2915	elf.c	FUNCTION_42
0x4006b5d	          0x4839d0	                            cmp rax, rdx	      2916	elf.c	FUNCTION_42
0x4006b60	     0xf868a010000	                           jbe 0x4006cf0	      2916	elf.c	FUNCTION_42
0x4006b66	          0x4885d2	                           test rdx, rdx	      2916	elf.c	FUNCTION_42
0x4006b69	     0xf8481010000	                            je 0x4006cf0	      2916	elf.c	FUNCTION_42
0x4006b6f	    0x41bf01000000	                             mov r15d, 1	      2916	elf.c	FUNCTION_42
0x4006b75	      0xb800000000	                              mov eax, 0	      2920	elf.c	FUNCTION_42	IF_1
0x4006b7a	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b7e	        0x488d7d80	                   lea rdi, [rbp - 0x80]	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b82	      0xba40000000	                           mov edx, 0x40	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b87	              0x50	                                push rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b88	          0x4589e9	                           mov r9d, r13d	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b8b	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b8e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b93	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b98	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006b9a	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006ba1	      0xe800000000	                          call 0x4006ba6	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006ba6	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bad	            0x8b0a	                    mov ecx, dword [rdx]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006baf	        0x4883c204	                              add rdx, 4	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bb3	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bb9	            0xf7d1	                                 not ecx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bbb	            0x21c8	                            and eax, ecx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bbd	      0x2580808080	                     and eax, 0x80808080	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bc2	            0x74e9	                            je 0x4006bad	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bc4	            0x89c1	                            mov ecx, eax	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bc6	          0xc1e910	                           shr ecx, 0x10	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bc9	      0xa980800000	                        test eax, 0x8080	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bce	           0xf44c1	                          cmove eax, ecx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bd1	        0x488d4a02	                      lea rcx, [rdx + 2]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bd5	            0x89c7	                            mov edi, eax	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bd7	        0x480f44d1	                          cmove rdx, rcx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bdb	          0x4000c7	                             add dil, al	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bde	          0x4c89e7	                            mov rdi, r12	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x4006be1	        0x4883da03	                              sbb rdx, 3	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006be5	    0x482b9578ffff	             sub rdx, qword [rbp - 0x88]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bec	        0x4883c201	                              add rdx, 1	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x4006bf0	          0x4889d6	                            mov rsi, rdx	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x4006bf3	    0x48899570ffff	             mov qword [rbp - 0x90], rdx	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x4006bfa	      0xe800000000	                          call 0x4006bff	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x4006bff	          0x4885c0	                           test rax, rax	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x4006c02	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x4006c09	              0x5e	                                 pop rsi	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x4006c0a	              0x5f	                                 pop rdi	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x4006c0b	     0xf840f020000	                            je 0x4006e20	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x4006c11	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	        53	string3.h	FUNCTION_221	CALL_3
0x4006c18	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4006c1b	      0xe800000000	                          call 0x4006c20	        53	string3.h	FUNCTION_221	CALL_3
0x4006c20	          0x4c89e7	                            mov rdi, r12	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4006c23	          0x4889c6	                            mov rsi, rax	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4006c26	      0xe800000000	                          call 0x4006c2b	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4006c2b	          0x4885c0	                           test rax, rax	      2927	elf.c	FUNCTION_42	IF_1	IF_3
0x4006c2e	          0x4889c2	                            mov rdx, rax	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4006c31	     0xf84e9010000	                            je 0x4006e20	      2927	elf.c	FUNCTION_42	IF_1	IF_3
0x4006c37	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2929	elf.c	FUNCTION_42	IF_1
0x4006c3b	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x4006c3f	    0x48899570ffff	             mov qword [rbp - 0x90], rdx	      2933	elf.c	FUNCTION_42	IF_1
0x4006c46	        0x48894228	             mov qword [rdx + 0x28], rax	      2929	elf.c	FUNCTION_42	IF_1
0x4006c4a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2930	elf.c	FUNCTION_42	IF_1
0x4006c4e	        0x48894230	             mov qword [rdx + 0x30], rax	      2930	elf.c	FUNCTION_42	IF_1
0x4006c52	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2931	elf.c	FUNCTION_42	IF_1
0x4006c56	        0x48894238	             mov qword [rdx + 0x38], rax	      2931	elf.c	FUNCTION_42	IF_1
0x4006c5a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2932	elf.c	FUNCTION_42	IF_1
0x4006c5e	    0x814a20000100	            or dword [rdx + 0x20], 0x100	      2933	elf.c	FUNCTION_42	IF_1
0x4006c65	    0x488982900000	             mov qword [rdx + 0x90], rax	      2932	elf.c	FUNCTION_42	IF_1
0x4006c6c	      0xe800000000	                          call 0x4006c71	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x4006c71	        0x48833b01	                      cmp qword [rbx], 1	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x4006c75	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x4006c7c	          0x894270	             mov dword [rdx + 0x70], eax	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x4006c7f	     0xf84fb010000	                            je 0x4006e80	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x4006c85	        0x488b4308	                mov rax, qword [rbx + 8]	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x4006c89	            0xa802	                              test al, 2	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x4006c8b	     0xf84af010000	                            je 0x4006e40	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x4006c91	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2952	elf.c	FUNCTION_42	IF_7
0x4006c95	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2952	elf.c	FUNCTION_42	IF_7
0x4006c99	            0x761c	                           jbe 0x4006cb7	      2952	elf.c	FUNCTION_42	IF_7
0x4006c9b	          0x4585ff	                         test r15d, r15d	      2956	elf.c	FUNCTION_42	IF_7
0x4006c9e	            0x7460	                            je 0x4006d00	      2956	elf.c	FUNCTION_42	IF_7
0x4006ca0	      0xb800000000	                              mov eax, 0	      2956	elf.c	FUNCTION_42	IF_7
0x4006ca5	            0xeb5e	                           jmp 0x4006d05	      2956	elf.c	FUNCTION_42	IF_7
0x4006ca7	    0x660f1f840000	                    nop word [rax + rax]	      2956	elf.c	FUNCTION_42	IF_7
0x4006cb0	      0x48837e2800	               cmp qword [rsi + 0x28], 0	      2918	elf.c	FUNCTION_42	IF_1
0x4006cb5	            0x7529	                           jne 0x4006ce0	      2918	elf.c	FUNCTION_42	IF_1
0x4006cb7	      0xb801000000	                              mov eax, 1	      2991	elf.c	FUNCTION_42
0x4006cbc	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      2992	elf.c	FUNCTION_42
0x4006cc0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2992	elf.c	FUNCTION_42
0x4006cc9	     0xf85e3010000	                           jne 0x4006eb2	      2992	elf.c	FUNCTION_42
0x4006ccf	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      2992	elf.c	FUNCTION_42
0x4006cd3	              0x5b	                                 pop rbx	      2992	elf.c	FUNCTION_42
0x4006cd4	            0x415c	                                 pop r12	      2992	elf.c	FUNCTION_42
0x4006cd6	            0x415d	                                 pop r13	      2992	elf.c	FUNCTION_42
0x4006cd8	            0x415e	                                 pop r14	      2992	elf.c	FUNCTION_42
0x4006cda	            0x415f	                                 pop r15	      2992	elf.c	FUNCTION_42
0x4006cdc	              0x5d	                                 pop rbp	      2992	elf.c	FUNCTION_42
0x4006cdd	              0xc3	                                     ret	      2992	elf.c	FUNCTION_42
0x4006cde	            0x6690	                                     nop	      2992	elf.c	FUNCTION_42
0x4006ce0	          0x4531ff	                          xor r15d, r15d	      2918	elf.c	FUNCTION_42	IF_1
0x4006ce3	      0xb800000000	                              mov eax, 0	      2920	elf.c	FUNCTION_42	IF_1
0x4006ce8	      0xe98dfeffff	                           jmp 0x4006b7a	      2920	elf.c	FUNCTION_42	IF_1
0x4006ced	           0xf1f00	                         nop dword [rax]	      2920	elf.c	FUNCTION_42	IF_1
0x4006cf0	          0x4885d2	                           test rdx, rdx	      2918	elf.c	FUNCTION_42	IF_1
0x4006cf3	            0x75eb	                           jne 0x4006ce0	      2918	elf.c	FUNCTION_42	IF_1
0x4006cf5	        0x488d4580	                   lea rax, [rbp - 0x80]	      2918	elf.c	FUNCTION_42	IF_1
0x4006cf9	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2918	elf.c	FUNCTION_42	IF_1
0x4006d00	      0xb800000000	                              mov eax, 0	      2956	elf.c	FUNCTION_42	IF_7
0x4006d05	    0x4c8bbd78ffff	             mov r15, qword [rbp - 0x88]	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d0c	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d10	      0xba40000000	                           mov edx, 0x40	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d15	              0x50	                                push rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d16	          0x4589e9	                           mov r9d, r13d	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d19	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d1c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d21	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d26	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d28	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d2b	      0xe800000000	                          call 0x4006d30	        33	stdio2.h	FUNCTION_204	CALL_1
0x4006d30	          0x4c89fa	                            mov rdx, r15	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d33	            0x8b0a	                    mov ecx, dword [rdx]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d35	        0x4883c204	                              add rdx, 4	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d39	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d3f	            0xf7d1	                                 not ecx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d41	            0x21c8	                            and eax, ecx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d43	      0x2580808080	                     and eax, 0x80808080	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d48	            0x74e9	                            je 0x4006d33	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d4a	            0x89c1	                            mov ecx, eax	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d4c	    0x4c8bb578ffff	             mov r14, qword [rbp - 0x88]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d53	          0x4c89e7	                            mov rdi, r12	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4006d56	          0xc1e910	                           shr ecx, 0x10	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d59	      0xa980800000	                        test eax, 0x8080	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d5e	           0xf44c1	                          cmove eax, ecx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d61	        0x488d4a02	                      lea rcx, [rdx + 2]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d65	            0x89c6	                            mov esi, eax	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d67	        0x480f44d1	                          cmove rdx, rcx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d6b	          0x4000c6	                             add sil, al	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d6e	        0x4883da03	                              sbb rdx, 3	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d72	          0x4c29f2	                            sub rdx, r14	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d75	        0x4c8d6a01	                      lea r13, [rdx + 1]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4006d79	          0x4c89ee	                            mov rsi, r13	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4006d7c	      0xe800000000	                          call 0x4006d81	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4006d81	          0x4889c1	                            mov rcx, rax	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4006d84	          0x4885c9	                           test rcx, rcx	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x4006d87	              0x58	                                 pop rax	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x4006d88	              0x5a	                                 pop rdx	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x4006d89	     0xf8491000000	                            je 0x4006e20	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x4006d8f	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_221	CALL_3
0x4006d92	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_221	CALL_3
0x4006d95	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_221	CALL_3
0x4006d98	      0xe800000000	                          call 0x4006d9d	        53	string3.h	FUNCTION_221	CALL_3
0x4006d9d	          0x4c89e7	                            mov rdi, r12	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4006da0	          0x4889c6	                            mov rsi, rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4006da3	      0xe800000000	                          call 0x4006da8	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4006da8	          0x4885c0	                           test rax, rax	      2963	elf.c	FUNCTION_42	IF_7	IF_9
0x4006dab	          0x4889c6	                            mov rsi, rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4006dae	          0x4989c7	                            mov r15, rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4006db1	            0x746d	                            je 0x4006e20	      2963	elf.c	FUNCTION_42	IF_7	IF_9
0x4006db3	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2965	elf.c	FUNCTION_42	IF_7
0x4006db7	          0x4889c2	                            mov rdx, rax	      2966	elf.c	FUNCTION_42	IF_7
0x4006dba	        0x48035320	             add rdx, qword [rbx + 0x20]	      2966	elf.c	FUNCTION_42	IF_7
0x4006dbe	          0x4889c7	                            mov rdi, rax	      2965	elf.c	FUNCTION_42	IF_7
0x4006dc1	        0x48037b18	             add rdi, qword [rbx + 0x18]	      2965	elf.c	FUNCTION_42	IF_7
0x4006dc5	        0x48895630	             mov qword [rsi + 0x30], rdx	      2966	elf.c	FUNCTION_42	IF_7
0x4006dc9	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2967	elf.c	FUNCTION_42	IF_7
0x4006dcd	        0x48897e28	             mov qword [rsi + 0x28], rdi	      2965	elf.c	FUNCTION_42	IF_7
0x4006dd1	          0x4829c2	                            sub rdx, rax	      2967	elf.c	FUNCTION_42	IF_7
0x4006dd4	        0x48034310	             add rax, qword [rbx + 0x10]	      2968	elf.c	FUNCTION_42	IF_7
0x4006dd8	        0x48895638	             mov qword [rsi + 0x38], rdx	      2967	elf.c	FUNCTION_42	IF_7
0x4006ddc	    0x488986900000	             mov qword [rsi + 0x90], rax	      2968	elf.c	FUNCTION_42	IF_7
0x4006de3	          0x4889f8	                            mov rax, rdi	      2969	elf.c	FUNCTION_42	IF_7
0x4006de6	          0x48f7d8	                                 neg rax	      2969	elf.c	FUNCTION_42	IF_7
0x4006de9	          0x4821c7	                            and rdi, rax	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4006dec	            0x7442	                            je 0x4006e30	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4006dee	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4006df2	          0x4839c7	                            cmp rdi, rax	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4006df5	        0x480f47f8	                          cmova rdi, rax	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4006df9	      0xe800000000	                          call 0x4006dfe	      2972	elf.c	FUNCTION_42	IF_7	CALL_10
0x4006dfe	        0x48833b01	                      cmp qword [rbx], 1	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x4006e02	        0x41894770	             mov dword [r15 + 0x70], eax	      2972	elf.c	FUNCTION_42	IF_7	CALL_10
0x4006e06	            0x7448	                            je 0x4006e50	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x4006e08	        0x488b4308	                mov rax, qword [rbx + 8]	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x4006e0c	            0xa802	                              test al, 2	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x4006e0e	     0xf85a3feffff	                           jne 0x4006cb7	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x4006e14	      0x41834f2008	                or dword [r15 + 0x20], 8	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4006e19	      0xe999feffff	                           jmp 0x4006cb7	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4006e1e	            0x6690	                                     nop	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4006e20	            0x31c0	                            xor eax, eax	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4006e22	      0xe995feffff	                           jmp 0x4006cbc	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4006e27	    0x660f1f840000	                    nop word [rax + rax]	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4006e30	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4006e34	            0xebc3	                           jmp 0x4006df9	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4006e36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4006e40	        0x834a2008	                or dword [rdx + 0x20], 8	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4006e44	      0xe948feffff	                           jmp 0x4006c91	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4006e49	     0xf1f80000000	                         nop dword [rax]	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4006e50	    0x410fb6442444	           movzx eax, byte [r12 + 0x44] 	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12	CALL_11
0x4006e56	          0x83e007	                              and eax, 7	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12	CALL_11
0x4006e59	            0x3c03	                               cmp al, 3	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12	CALL_11
0x4006e5b	            0x744b	                            je 0x4006ea8	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12	CALL_11
0x4006e5d	        0x418b5720	            mov edx, dword [r15 + 0x20] 	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4006e61	            0x89d0	                            mov eax, edx	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4006e63	          0x83c801	                               or eax, 1	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4006e66	        0x41894720	             mov dword [r15 + 0x20], eax	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4006e6a	        0x488b4308	                mov rax, qword [rbx + 8]	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4006e6e	            0xa801	                              test al, 1	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4006e70	            0x749a	                            je 0x4006e0c	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4006e72	          0x83ca11	                            or edx, 0x11	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4006e75	        0x41895720	             mov dword [r15 + 0x20], edx	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4006e79	            0xeb91	                           jmp 0x4006e0c	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4006e7b	       0xf1f440000	                   nop dword [rax + rax]	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4006e80	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x4006e83	            0x89c8	                            mov eax, ecx	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x4006e85	          0x83c803	                               or eax, 3	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x4006e88	          0x894220	             mov dword [rdx + 0x20], eax	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x4006e8b	        0x488b4308	                mov rax, qword [rbx + 8]	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4006e8f	            0xa801	                              test al, 1	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4006e91	     0xf84f2fdffff	                            je 0x4006c89	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4006e97	          0x83c913	                            or ecx, 0x13	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4006e9a	          0x894a20	             mov dword [rdx + 0x20], ecx	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4006e9d	      0xe9e7fdffff	                           jmp 0x4006c89	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4006ea2	    0x660f1f440000	                    nop word [rax + rax]	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4006ea8	    0x49c747380000	               mov qword [r15 + 0x38], 0	      2982	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x4006eb0	            0xebab	                           jmp 0x4006e5d	      2982	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x4006eb2	      0xe800000000	                          call 0x4006eb7	      2992	elf.c	FUNCTION_42
elfcore_grok_openbsd_note	functions,0:CALL,8:FOR,0:WHILE,0:SWITCH,0:IF,8:DO,0:ELSE,0	145
0x4010970	            0x4155	                                push r13	     10260	elf.c	FUNCTION_156
0x4010972	            0x4154	                                push r12	     10260	elf.c	FUNCTION_156
0x4010974	              0x55	                                push rbp	     10260	elf.c	FUNCTION_156
0x4010975	              0x53	                                push rbx	     10260	elf.c	FUNCTION_156
0x4010976	          0x4889fd	                            mov rbp, rdi	     10260	elf.c	FUNCTION_156
0x4010979	          0x4889f3	                            mov rbx, rsi	     10260	elf.c	FUNCTION_156
0x401097c	        0x4883ec08	                              sub rsp, 8	     10260	elf.c	FUNCTION_156
0x4010980	        0x488b4610	            mov rax, qword [rsi + 0x10] 	     10261	elf.c	FUNCTION_156	IF_1
0x4010984	        0x4883f80a	                            cmp rax, 0xa	     10261	elf.c	FUNCTION_156	IF_1
0x4010988	     0xf8492000000	                            je 0x4010a20	     10261	elf.c	FUNCTION_156	IF_1
0x401098e	        0x4883f814	                           cmp rax, 0x14	     10264	elf.c	FUNCTION_156	IF_2
0x4010992	     0xf8400010000	                            je 0x4010a98	     10264	elf.c	FUNCTION_156	IF_2
0x4010998	        0x4883f815	                           cmp rax, 0x15	     10267	elf.c	FUNCTION_156	IF_3
0x401099c	     0xf841e010000	                            je 0x4010ac0	     10267	elf.c	FUNCTION_156	IF_3
0x40109a2	        0x4883f816	                           cmp rax, 0x16	     10270	elf.c	FUNCTION_156	IF_4
0x40109a6	     0xf8424010000	                            je 0x4010ad0	     10270	elf.c	FUNCTION_156	IF_4
0x40109ac	        0x4883f80b	                            cmp rax, 0xb	     10273	elf.c	FUNCTION_156	IF_5
0x40109b0	     0xf848a000000	                            je 0x4010a40	     10273	elf.c	FUNCTION_156	IF_5
0x40109b6	        0x4883f817	                           cmp rax, 0x17	     10287	elf.c	FUNCTION_156	IF_7
0x40109ba	    0x41bc01000000	                             mov r12d, 1	     10301	elf.c	FUNCTION_156
0x40109c0	            0x740e	                            je 0x40109d0	     10287	elf.c	FUNCTION_156	IF_7
0x40109c2	        0x4883c408	                              add rsp, 8	     10302	elf.c	FUNCTION_156
0x40109c6	          0x4489e0	                           mov eax, r12d	     10302	elf.c	FUNCTION_156
0x40109c9	              0x5b	                                 pop rbx	     10302	elf.c	FUNCTION_156
0x40109ca	              0x5d	                                 pop rbp	     10302	elf.c	FUNCTION_156
0x40109cb	            0x415c	                                 pop r12	     10302	elf.c	FUNCTION_156
0x40109cd	            0x415d	                                 pop r13	     10302	elf.c	FUNCTION_156
0x40109cf	              0xc3	                                     ret	     10302	elf.c	FUNCTION_156
0x40109d0	      0xba00010000	                          mov edx, 0x100	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x40109d5	      0xbe00000000	                              mov esi, 0	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x40109da	      0xe800000000	                          call 0x40109df	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x40109df	          0x4885c0	                           test rax, rax	     10292	elf.c	FUNCTION_156	IF_7	IF_8
0x40109e2	          0x4989c5	                            mov r13, rax	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x40109e5	            0x7444	                            je 0x4010a2b	     10292	elf.c	FUNCTION_156	IF_7	IF_8
0x40109e7	        0x488b4308	                mov rax, qword [rbx + 8]	     10294	elf.c	FUNCTION_156	IF_7
0x40109eb	          0x4889ef	                            mov rdi, rbp	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x40109ee	        0x49894538	             mov qword [r13 + 0x38], rax	     10294	elf.c	FUNCTION_156	IF_7
0x40109f2	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10295	elf.c	FUNCTION_156	IF_7
0x40109f6	    0x498985900000	             mov qword [r13 + 0x90], rax	     10295	elf.c	FUNCTION_156	IF_7
0x40109fd	      0xe800000000	                          call 0x4010a02	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4010a02	          0x8d501f	                   lea edx, [rax + 0x1f]	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4010a05	            0x85c0	                           test eax, eax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4010a07	           0xf48c2	                          cmovs eax, edx	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4010a0a	          0xc1f805	                              sar eax, 5	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4010a0d	          0x83c001	                              add eax, 1	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4010a10	        0x41894570	             mov dword [r13 + 0x70], eax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x4010a14	            0xebac	                           jmp 0x40109c2	     10298	elf.c	FUNCTION_156	IF_7
0x4010a16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10298	elf.c	FUNCTION_156	IF_7
0x4010a20	      0x48837e0867	               cmp qword [rsi + 8], 0x67	     10240	elf.c	FUNCTION_155	IF_1
0x4010a25	     0xf87b5000000	                            ja 0x4010ae0	     10240	elf.c	FUNCTION_155	IF_1
0x4010a2b	        0x4883c408	                              add rsp, 8	     10302	elf.c	FUNCTION_156
0x4010a2f	          0x4531e4	                          xor r12d, r12d	     10241	elf.c	FUNCTION_155	IF_1
0x4010a32	              0x5b	                                 pop rbx	     10302	elf.c	FUNCTION_156
0x4010a33	          0x4489e0	                           mov eax, r12d	     10302	elf.c	FUNCTION_156
0x4010a36	              0x5d	                                 pop rbp	     10302	elf.c	FUNCTION_156
0x4010a37	            0x415c	                                 pop r12	     10302	elf.c	FUNCTION_156
0x4010a39	            0x415d	                                 pop r13	     10302	elf.c	FUNCTION_156
0x4010a3b	              0xc3	                                     ret	     10302	elf.c	FUNCTION_156
0x4010a3c	         0xf1f4000	                         nop dword [rax]	     10302	elf.c	FUNCTION_156
0x4010a40	      0xba00010000	                          mov edx, 0x100	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4010a45	      0xbe00000000	                              mov esi, 0	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4010a4a	      0xe800000000	                          call 0x4010a4f	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4010a4f	          0x4885c0	                           test rax, rax	     10278	elf.c	FUNCTION_156	IF_5	IF_6
0x4010a52	          0x4989c4	                            mov r12, rax	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x4010a55	            0x74d4	                            je 0x4010a2b	     10278	elf.c	FUNCTION_156	IF_5	IF_6
0x4010a57	        0x488b4308	                mov rax, qword [rbx + 8]	     10280	elf.c	FUNCTION_156	IF_5
0x4010a5b	          0x4889ef	                            mov rdi, rbp	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4010a5e	      0x4989442438	             mov qword [r12 + 0x38], rax	     10280	elf.c	FUNCTION_156	IF_5
0x4010a63	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10281	elf.c	FUNCTION_156	IF_5
0x4010a67	    0x498984249000	             mov qword [r12 + 0x90], rax	     10281	elf.c	FUNCTION_156	IF_5
0x4010a6f	      0xe800000000	                          call 0x4010a74	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4010a74	          0x8d501f	                   lea edx, [rax + 0x1f]	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4010a77	            0x85c0	                           test eax, eax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4010a79	           0xf48c2	                          cmovs eax, edx	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4010a7c	          0xc1f805	                              sar eax, 5	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4010a7f	          0x83c001	                              add eax, 1	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4010a82	      0x4189442470	             mov dword [r12 + 0x70], eax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x4010a87	    0x41bc01000000	                             mov r12d, 1	     10284	elf.c	FUNCTION_156	IF_5
0x4010a8d	      0xe930ffffff	                           jmp 0x40109c2	     10284	elf.c	FUNCTION_156	IF_5
0x4010a92	    0x660f1f440000	                    nop word [rax + rax]	     10284	elf.c	FUNCTION_156	IF_5
0x4010a98	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010a9c	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010aa0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010aa5	        0x4883c408	                              add rsp, 8	     10302	elf.c	FUNCTION_156
0x4010aa9	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4010aac	              0x5b	                                 pop rbx	     10302	elf.c	FUNCTION_156
0x4010aad	              0x5d	                                 pop rbp	     10302	elf.c	FUNCTION_156
0x4010aae	            0x415c	                                 pop r12	     10302	elf.c	FUNCTION_156
0x4010ab0	            0x415d	                                 pop r13	     10302	elf.c	FUNCTION_156
0x4010ab2	      0xe9b9faffff	 jmp sym._bfd_elfcore_make_pseudosection	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ab7	    0x660f1f840000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ac0	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ac4	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ac8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010acd	            0xebd6	                           jmp 0x4010aa5	      9192	elf.c	FUNCTION_116	CALL_1
0x4010acf	              0x90	                                     nop	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ad0	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ad4	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ad8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010add	            0xebc6	                           jmp 0x4010aa5	      9192	elf.c	FUNCTION_116	CALL_1
0x4010adf	              0x90	                                     nop	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ae0	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     10244	elf.c	FUNCTION_155	CALL_1
0x4010ae7	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	     10244	elf.c	FUNCTION_155	CALL_1
0x4010aee	        0x488b4620	            mov rax, qword [rsi + 0x20] 	     10245	elf.c	FUNCTION_155	CALL_2
0x4010af2	        0x488d7808	                      lea rdi, [rax + 8]	     10245	elf.c	FUNCTION_155	CALL_2
0x4010af6	        0x488b4508	                mov rax, qword [rbp + 8]	     10245	elf.c	FUNCTION_155	CALL_2
0x4010afa	    0xff9080000000	                 call qword [rax + 0x80]	     10245	elf.c	FUNCTION_155	CALL_2
0x4010b00	        0x41890424	                    mov dword [r12], eax	     10245	elf.c	FUNCTION_155	CALL_2
0x4010b04	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10248	elf.c	FUNCTION_155	CALL_3
0x4010b0b	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	     10248	elf.c	FUNCTION_155	CALL_3
0x4010b12	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10249	elf.c	FUNCTION_155	CALL_4
0x4010b16	        0x488d7820	                   lea rdi, [rax + 0x20]	     10249	elf.c	FUNCTION_155	CALL_4
0x4010b1a	        0x488b4508	                mov rax, qword [rbp + 8]	     10249	elf.c	FUNCTION_155	CALL_4
0x4010b1e	    0xff9080000000	                 call qword [rax + 0x80]	     10249	elf.c	FUNCTION_155	CALL_4
0x4010b24	      0x4189442404	                mov dword [r12 + 4], eax	     10249	elf.c	FUNCTION_155	CALL_4
0x4010b29	        0x4c8b6320	            mov r12, qword [rbx + 0x20] 	     10253	elf.c	FUNCTION_155	CALL_6
0x4010b2d	            0x31f6	                            xor esi, esi	      9362	elf.c	FUNCTION_139	CALL_1
0x4010b2f	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10252	elf.c	FUNCTION_155	CALL_5
0x4010b36	      0xba1f000000	                           mov edx, 0x1f	      9362	elf.c	FUNCTION_139	CALL_1
0x4010b3b	        0x4983c448	                           add r12, 0x48	     10253	elf.c	FUNCTION_155	CALL_6
0x4010b3f	          0x4c89e7	                            mov rdi, r12	      9362	elf.c	FUNCTION_139	CALL_1
0x4010b42	    0x4c8ba8900c00	           mov r13, qword [rax + 0xc90] 	     10252	elf.c	FUNCTION_155	CALL_5
0x4010b49	      0xe800000000	                          call 0x4010b4e	      9362	elf.c	FUNCTION_139	CALL_1
0x4010b4e	          0x4885c0	                           test rax, rax	      9365	elf.c	FUNCTION_139	IF_1
0x4010b51	            0x743e	                            je 0x4010b91	      9365	elf.c	FUNCTION_139	IF_1
0x4010b53	          0x4c29e0	                            sub rax, r12	      9368	elf.c	FUNCTION_139	ELSE_1
0x4010b56	        0x488d7001	                      lea rsi, [rax + 1]	      9368	elf.c	FUNCTION_139	ELSE_1
0x4010b5a	          0x4889c3	                            mov rbx, rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x4010b5d	          0x4889ef	                            mov rdi, rbp	      9370	elf.c	FUNCTION_139	CALL_2
0x4010b60	      0xe800000000	                          call 0x4010b65	      9370	elf.c	FUNCTION_139	CALL_2
0x4010b65	          0x4885c0	                           test rax, rax	      9371	elf.c	FUNCTION_139	IF_2
0x4010b68	          0x4889c1	                            mov rcx, rax	      9370	elf.c	FUNCTION_139	CALL_2
0x4010b6b	            0x7415	                            je 0x4010b82	      9371	elf.c	FUNCTION_139	IF_2
0x4010b6d	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_221	CALL_3
0x4010b70	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_221	CALL_3
0x4010b73	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4010b76	      0xe800000000	                          call 0x4010b7b	        53	string3.h	FUNCTION_221	CALL_3
0x4010b7b	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4010b7e	        0xc6041800	                 mov byte [rax + rbx], 0	      9375	elf.c	FUNCTION_139
0x4010b82	        0x49894d18	             mov qword [r13 + 0x18], rcx	     10253	elf.c	FUNCTION_155	CALL_6
0x4010b86	    0x41bc01000000	                             mov r12d, 1	     10255	elf.c	FUNCTION_155
0x4010b8c	      0xe931feffff	                           jmp 0x40109c2	     10255	elf.c	FUNCTION_155
0x4010b91	      0xbe20000000	                           mov esi, 0x20	      9365	elf.c	FUNCTION_139	IF_1
0x4010b96	      0xbb1f000000	                           mov ebx, 0x1f	      9366	elf.c	FUNCTION_139	IF_1
0x4010b9b	            0xebc0	                           jmp 0x4010b5d	      9366	elf.c	FUNCTION_139	IF_1
bfd_get_elf_phdrs	functions,0:CALL,4:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	20
0x4014070	              0x53	                                push rbx	     11241	elf.c	FUNCTION_194
0x4014071	        0x488b4708	                mov rax, qword [rdi + 8]	     11244	elf.c	FUNCTION_194	IF_1
0x4014075	        0x83780805	                  cmp dword [rax + 8], 5	     11244	elf.c	FUNCTION_194	IF_1
0x4014079	            0x7525	                           jne 0x40140a0	     11244	elf.c	FUNCTION_194	IF_1
0x401407b	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11250	elf.c	FUNCTION_194	CALL_2
0x4014082	          0x4889f1	                            mov rcx, rsi	     11250	elf.c	FUNCTION_194	CALL_2
0x4014085	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_221	CALL_3
0x4014088	        0x48635044	         movsxd rdx, dword [rax + 0x44] 	     11250	elf.c	FUNCTION_194	CALL_2
0x401408c	        0x488b7060	            mov rsi, qword [rax + 0x60] 	        53	string3.h	FUNCTION_221	CALL_3
0x4014090	          0x4889d3	                            mov rbx, rdx	     11250	elf.c	FUNCTION_194	CALL_2
0x4014093	        0x48c1e206	                              shl rdx, 6	        53	string3.h	FUNCTION_221	CALL_3
0x4014097	      0xe800000000	                          call 0x401409c	        53	string3.h	FUNCTION_221	CALL_3
0x401409c	            0x89d8	                            mov eax, ebx	     11254	elf.c	FUNCTION_194
0x401409e	              0x5b	                                 pop rbx	     11255	elf.c	FUNCTION_194
0x401409f	              0xc3	                                     ret	     11255	elf.c	FUNCTION_194
0x40140a0	      0xbf03000000	                              mov edi, 3	     11246	elf.c	FUNCTION_194	IF_1	CALL_1
0x40140a5	      0xe800000000	                          call 0x40140aa	     11246	elf.c	FUNCTION_194	IF_1	CALL_1
0x40140aa	      0xb8ffffffff	                     mov eax, 0xffffffff	     11247	elf.c	FUNCTION_194	IF_1
0x40140af	              0x5b	                                 pop rbx	     11255	elf.c	FUNCTION_194
0x40140b0	              0xc3	                                     ret	     11255	elf.c	FUNCTION_194
_bfd_elf_get_lineno	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	5
0x400ff40	        0x4883ec08	                              sub rsp, 8	      8714	elf.c	FUNCTION_101
0x400ff44	      0xba00000000	                              mov edx, 0	      8715	elf.c	FUNCTION_101	CALL_1
0x400ff49	      0xbe0b220000	                         mov esi, 0x220b	      8715	elf.c	FUNCTION_101	CALL_1
0x400ff4e	      0xbf00000000	                              mov edi, 0	      8715	elf.c	FUNCTION_101	CALL_1
0x400ff53	      0xe800000000	                          call 0x400ff58	      8715	elf.c	FUNCTION_101	CALL_1
_bfd_elf_canonicalize_reloc	functions,0:CALL,2:FOR,1:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	170
0x400e010	              0x55	                                push rbp	      8161	elf.c	FUNCTION_92
0x400e011	              0x53	                                push rbx	      8161	elf.c	FUNCTION_92
0x400e012	          0x4889f5	                            mov rbp, rsi	      8161	elf.c	FUNCTION_92
0x400e015	          0x4889d3	                            mov rbx, rdx	      8161	elf.c	FUNCTION_92
0x400e018	          0x4889ca	                            mov rdx, rcx	      8161	elf.c	FUNCTION_92
0x400e01b	            0x31c9	                            xor ecx, ecx	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400e01d	        0x4883ec18	                           sub rsp, 0x18	      8161	elf.c	FUNCTION_92
0x400e021	        0x488b4708	                mov rax, qword [rdi + 8]	      8164	elf.c	FUNCTION_92	CALL_1
0x400e025	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400e02c	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400e033	          0xff5040	                 call qword [rax + 0x40]	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400e036	            0x85c0	                           test eax, eax	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400e038	     0xf8462020000	                            je 0x400e2a0	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400e03e	    0x8b8588000000	            mov eax, dword [rbp + 0x88] 	      8170	elf.c	FUNCTION_92	FOR_1
0x400e044	        0x488b5578	            mov rdx, qword [rbp + 0x78] 	      8169	elf.c	FUNCTION_92
0x400e048	            0x85c0	                           test eax, eax	      8170	elf.c	FUNCTION_92	FOR_1
0x400e04a	     0xf84b0010000	                            je 0x400e200	      8170	elf.c	FUNCTION_92	FOR_1
0x400e050	          0x4889d9	                            mov rcx, rbx	      8170	elf.c	FUNCTION_92	FOR_1
0x400e053	        0x48c1e13c	                           shl rcx, 0x3c	      8170	elf.c	FUNCTION_92	FOR_1
0x400e057	        0x48c1e93f	                           shr rcx, 0x3f	      8170	elf.c	FUNCTION_92	FOR_1
0x400e05b	            0x39c1	                            cmp ecx, eax	      8170	elf.c	FUNCTION_92	FOR_1
0x400e05d	           0xf47c8	                          cmova ecx, eax	      8170	elf.c	FUNCTION_92	FOR_1
0x400e060	          0x83f80a	                            cmp eax, 0xa	      8170	elf.c	FUNCTION_92	FOR_1
0x400e063	     0xf871f010000	                            ja 0x400e188	      8170	elf.c	FUNCTION_92	FOR_1
0x400e069	          0x83f801	                              cmp eax, 1	      8170	elf.c	FUNCTION_92	FOR_1
0x400e06c	        0x488d4b08	                      lea rcx, [rbx + 8]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e070	        0x488d7a20	                   lea rdi, [rdx + 0x20]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e074	          0x488913	                    mov qword [rbx], rdx	      8171	elf.c	FUNCTION_92	FOR_1
0x400e077	     0xf8413020000	                            je 0x400e290	      8171	elf.c	FUNCTION_92	FOR_1
0x400e07d	          0x83f802	                              cmp eax, 2	      8171	elf.c	FUNCTION_92	FOR_1
0x400e080	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e084	        0x4c8d4240	                    lea r8, [rdx + 0x40]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e088	        0x48897b08	                mov qword [rbx + 8], rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e08c	     0xf847e010000	                            je 0x400e210	      8171	elf.c	FUNCTION_92	FOR_1
0x400e092	          0x83f803	                              cmp eax, 3	      8171	elf.c	FUNCTION_92	FOR_1
0x400e095	        0x488d4b18	                   lea rcx, [rbx + 0x18]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e099	        0x488d7a60	                   lea rdi, [rdx + 0x60]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e09d	        0x4c894310	              mov qword [rbx + 0x10], r8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0a1	     0xf8479010000	                            je 0x400e220	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0a7	          0x83f804	                              cmp eax, 4	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0aa	        0x488d4b20	                   lea rcx, [rbx + 0x20]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0ae	    0x4c8d82800000	                    lea r8, [rdx + 0x80]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0b5	        0x48897b18	             mov qword [rbx + 0x18], rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0b9	     0xf8471010000	                            je 0x400e230	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0bf	          0x83f805	                              cmp eax, 5	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0c2	        0x488d4b28	                   lea rcx, [rbx + 0x28]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0c6	    0x488dbaa00000	                   lea rdi, [rdx + 0xa0]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0cd	        0x4c894320	              mov qword [rbx + 0x20], r8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0d1	     0xf8469010000	                            je 0x400e240	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0d7	          0x83f806	                              cmp eax, 6	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0da	        0x488d4b30	                   lea rcx, [rbx + 0x30]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0de	    0x4c8d82c00000	                    lea r8, [rdx + 0xc0]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0e5	        0x48897b28	             mov qword [rbx + 0x28], rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0e9	     0xf8461010000	                            je 0x400e250	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0ef	          0x83f807	                              cmp eax, 7	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0f2	        0x488d4b38	                   lea rcx, [rbx + 0x38]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0f6	    0x488dbae00000	                   lea rdi, [rdx + 0xe0]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e0fd	        0x4c894330	              mov qword [rbx + 0x30], r8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e101	     0xf8459010000	                            je 0x400e260	      8171	elf.c	FUNCTION_92	FOR_1
0x400e107	          0x83f808	                              cmp eax, 8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e10a	        0x488d4b40	                   lea rcx, [rbx + 0x40]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e10e	    0x4c8d82000100	                   lea r8, [rdx + 0x100]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e115	        0x48897b38	             mov qword [rbx + 0x38], rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e119	     0xf8451010000	                            je 0x400e270	      8171	elf.c	FUNCTION_92	FOR_1
0x400e11f	          0x83f80a	                            cmp eax, 0xa	      8171	elf.c	FUNCTION_92	FOR_1
0x400e122	        0x488d4b48	                   lea rcx, [rbx + 0x48]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e126	    0x488dba200100	                  lea rdi, [rdx + 0x120]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e12d	        0x4c894340	              mov qword [rbx + 0x40], r8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e131	     0xf8549010000	                           jne 0x400e280	      8171	elf.c	FUNCTION_92	FOR_1
0x400e137	        0x488d4b50	                   lea rcx, [rbx + 0x50]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e13b	    0x4881c2400100	                          add rdx, 0x140	      8171	elf.c	FUNCTION_92	FOR_1
0x400e142	        0x48897b48	             mov qword [rbx + 0x48], rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e146	      0xbe0a000000	                            mov esi, 0xa	      8171	elf.c	FUNCTION_92	FOR_1
0x400e14b	            0x39f0	                            cmp eax, esi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e14d	            0x7420	                            je 0x400e16f	      8171	elf.c	FUNCTION_92	FOR_1
0x400e14f	          0x4189c1	                            mov r9d, eax	      8171	elf.c	FUNCTION_92	FOR_1
0x400e152	            0x89f7	                            mov edi, esi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e154	          0x4129f1	                            sub r9d, esi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e157	        0x458d41fe	                       lea r8d, [r9 - 2]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e15b	          0x41d1e8	                              shr r8d, 1	      8171	elf.c	FUNCTION_92	FOR_1
0x400e15e	        0x4183c001	                              add r8d, 1	      8171	elf.c	FUNCTION_92	FOR_1
0x400e162	        0x4183f901	                              cmp r9d, 1	      8171	elf.c	FUNCTION_92	FOR_1
0x400e166	        0x478d1400	                     lea r10d, [r8 + r8]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e16a	            0x753b	                           jne 0x400e1a7	      8171	elf.c	FUNCTION_92	FOR_1
0x400e16c	          0x488911	                    mov qword [rcx], rdx	      8171	elf.c	FUNCTION_92	FOR_1
0x400e16f	          0x8d50ff	                      lea edx, [rax - 1]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e172	      0x488d5cd308	              lea rbx, [rbx + rdx*8 + 8]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e177	    0x48c703000000	                      mov qword [rbx], 0	      8173	elf.c	FUNCTION_92
0x400e17e	        0x4883c418	                           add rsp, 0x18	      8176	elf.c	FUNCTION_92
0x400e182	              0x5b	                                 pop rbx	      8176	elf.c	FUNCTION_92
0x400e183	              0x5d	                                 pop rbp	      8176	elf.c	FUNCTION_92
0x400e184	              0xc3	                                     ret	      8176	elf.c	FUNCTION_92
0x400e185	           0xf1f00	                         nop dword [rax]	      8176	elf.c	FUNCTION_92
0x400e188	            0x85c9	                           test ecx, ecx	      8176	elf.c	FUNCTION_92
0x400e18a	     0xf851c010000	                           jne 0x400e2ac	      8176	elf.c	FUNCTION_92
0x400e190	        0x448d40fe	                      lea r8d, [rax - 2]	      8176	elf.c	FUNCTION_92
0x400e194	          0x4189c1	                            mov r9d, eax	      8170	elf.c	FUNCTION_92	FOR_1
0x400e197	          0x4889d9	                            mov rcx, rbx	      8170	elf.c	FUNCTION_92	FOR_1
0x400e19a	            0x31ff	                            xor edi, edi	      8170	elf.c	FUNCTION_92	FOR_1
0x400e19c	          0x41d1e8	                              shr r8d, 1	      8170	elf.c	FUNCTION_92	FOR_1
0x400e19f	        0x4183c001	                              add r8d, 1	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1a3	        0x478d1400	                     lea r10d, [r8 + r8]	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1a7	        0x488d7220	                   lea rsi, [rdx + 0x20]	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1ab	      0x4889542408	                mov qword [rsp + 8], rdx	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1b0	        0x488d3cfb	                  lea rdi, [rbx + rdi*8]	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1b4	    0xf30f7e442408	              movq xmm0, qword [rsp + 8]	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1ba	      0x4889742408	                mov qword [rsp + 8], rsi	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1bf	            0x31f6	                            xor esi, esi	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1c1	       0xf16442408	           movhps xmm0, qword [rsp + 8] 	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1c6	    0x660f6f0d0000	       movdqa xmm1, xmmword [0x0400e1ce]	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1ce	          0x83c601	                              add esi, 1	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1d1	        0x4883c710	                           add rdi, 0x10	      8170	elf.c	FUNCTION_92	FOR_1
0x400e1d5	         0xf2947f0	       movaps xmmword [rdi - 0x10], xmm0	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1d9	        0x660fd4c1	                        paddq xmm0, xmm1	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1dd	          0x4439c6	                            cmp esi, r8d	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1e0	            0x72ec	                            jb 0x400e1ce	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1e2	          0x4489d6	                           mov esi, r10d	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1e5	        0x488d0cf1	                  lea rcx, [rcx + rsi*8]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1e9	        0x48c1e605	                              shl rsi, 5	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1ed	          0x4801f2	                            add rdx, rsi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1f0	          0x4539d1	                           cmp r9d, r10d	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1f3	     0xf8573ffffff	                           jne 0x400e16c	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1f9	      0xe971ffffff	                           jmp 0x400e16f	      8171	elf.c	FUNCTION_92	FOR_1
0x400e1fe	            0x6690	                                     nop	      8171	elf.c	FUNCTION_92	FOR_1
0x400e200	            0x31c0	                            xor eax, eax	      8170	elf.c	FUNCTION_92	FOR_1
0x400e202	      0xe970ffffff	                           jmp 0x400e177	      8170	elf.c	FUNCTION_92	FOR_1
0x400e207	    0x660f1f840000	                    nop word [rax + rax]	      8170	elf.c	FUNCTION_92	FOR_1
0x400e210	      0xbe02000000	                              mov esi, 2	      8171	elf.c	FUNCTION_92	FOR_1
0x400e215	          0x4c89c2	                             mov rdx, r8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e218	      0xe92effffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e21d	           0xf1f00	                         nop dword [rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e220	      0xbe03000000	                              mov esi, 3	      8171	elf.c	FUNCTION_92	FOR_1
0x400e225	          0x4889fa	                            mov rdx, rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e228	      0xe91effffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e22d	           0xf1f00	                         nop dword [rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e230	      0xbe04000000	                              mov esi, 4	      8171	elf.c	FUNCTION_92	FOR_1
0x400e235	          0x4c89c2	                             mov rdx, r8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e238	      0xe90effffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e23d	           0xf1f00	                         nop dword [rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e240	      0xbe05000000	                              mov esi, 5	      8171	elf.c	FUNCTION_92	FOR_1
0x400e245	          0x4889fa	                            mov rdx, rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e248	      0xe9fefeffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e24d	           0xf1f00	                         nop dword [rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e250	      0xbe06000000	                              mov esi, 6	      8171	elf.c	FUNCTION_92	FOR_1
0x400e255	          0x4c89c2	                             mov rdx, r8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e258	      0xe9eefeffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e25d	           0xf1f00	                         nop dword [rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e260	      0xbe07000000	                              mov esi, 7	      8171	elf.c	FUNCTION_92	FOR_1
0x400e265	          0x4889fa	                            mov rdx, rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e268	      0xe9defeffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e26d	           0xf1f00	                         nop dword [rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e270	      0xbe08000000	                              mov esi, 8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e275	          0x4c89c2	                             mov rdx, r8	      8171	elf.c	FUNCTION_92	FOR_1
0x400e278	      0xe9cefeffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e27d	           0xf1f00	                         nop dword [rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e280	            0x89c6	                            mov esi, eax	      8171	elf.c	FUNCTION_92	FOR_1
0x400e282	          0x4889fa	                            mov rdx, rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e285	      0xe9c1feffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e28a	    0x660f1f440000	                    nop word [rax + rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e290	      0xbe01000000	                              mov esi, 1	      8171	elf.c	FUNCTION_92	FOR_1
0x400e295	          0x4889fa	                            mov rdx, rdi	      8171	elf.c	FUNCTION_92	FOR_1
0x400e298	      0xe9aefeffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
0x400e29d	           0xf1f00	                         nop dword [rax]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e2a0	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8167	elf.c	FUNCTION_92	IF_1
0x400e2a7	      0xe9d2feffff	                           jmp 0x400e17e	      8167	elf.c	FUNCTION_92	IF_1
0x400e2ac	          0x488913	                    mov qword [rbx], rdx	      8171	elf.c	FUNCTION_92	FOR_1
0x400e2af	        0x488d4b08	                      lea rcx, [rbx + 8]	      8171	elf.c	FUNCTION_92	FOR_1
0x400e2b3	        0x4883c220	                           add rdx, 0x20	      8171	elf.c	FUNCTION_92	FOR_1
0x400e2b7	      0xbe01000000	                              mov esi, 1	      8171	elf.c	FUNCTION_92	FOR_1
0x400e2bc	      0xe98afeffff	                           jmp 0x400e14b	      8171	elf.c	FUNCTION_92	FOR_1
bfd_elf_mkcorefile	functions,0:CALL,4:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	21
0x4003220	              0x55	                                push rbp	       269	elf.c	FUNCTION_15
0x4003221	              0x53	                                push rbx	       269	elf.c	FUNCTION_15
0x4003222	          0x4889fb	                            mov rbx, rdi	       269	elf.c	FUNCTION_15
0x4003225	        0x4883ec08	                              sub rsp, 8	       269	elf.c	FUNCTION_15
0x4003229	        0x488b4708	                mov rax, qword [rdi + 8]	       271	elf.c	FUNCTION_15	IF_1
0x400322d	    0xff90d8000000	                 call qword [rax + 0xd8]	       271	elf.c	FUNCTION_15	IF_1
0x4003233	            0x85c0	                           test eax, eax	       271	elf.c	FUNCTION_15	IF_1
0x4003235	            0x7430	                            je 0x4003267	       271	elf.c	FUNCTION_15	IF_1
0x4003237	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	       273	elf.c	FUNCTION_15	CALL_3
0x400323e	      0xbe20000000	                           mov esi, 0x20	       273	elf.c	FUNCTION_15	CALL_3
0x4003243	          0x4889df	                            mov rdi, rbx	       273	elf.c	FUNCTION_15	CALL_3
0x4003246	      0xe800000000	                          call 0x400324b	       273	elf.c	FUNCTION_15	CALL_3
0x400324b	    0x488985900c00	           mov qword [rbp + 0xc90], rax 	       273	elf.c	FUNCTION_15	CALL_3
0x4003252	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       274	elf.c	FUNCTION_15	CALL_4
0x4003259	    0x4883b8900c00	              cmp qword [rax + 0xc90], 0	       274	elf.c	FUNCTION_15	CALL_4
0x4003261	           0xf95c0	                                setne al	       274	elf.c	FUNCTION_15	CALL_4
0x4003264	           0xfb6c0	                           movzx eax, al	       274	elf.c	FUNCTION_15	CALL_4
0x4003267	        0x4883c408	                              add rsp, 8	       275	elf.c	FUNCTION_15
0x400326b	              0x5b	                                 pop rbx	       275	elf.c	FUNCTION_15
0x400326c	              0x5d	                                 pop rbp	       275	elf.c	FUNCTION_15
0x400326d	              0xc3	                                     ret	       275	elf.c	FUNCTION_15
elfcore_write_prpsinfo	functions,0:CALL,10:FOR,0:WHILE,0:SWITCH,0:IF,3:DO,0:ELSE,1	86
0x4011f70	            0x4157	                                push r15	     10535	elf.c	FUNCTION_162
0x4011f72	            0x4156	                                push r14	     10535	elf.c	FUNCTION_162
0x4011f74	          0x4989cf	                            mov r15, rcx	     10535	elf.c	FUNCTION_162
0x4011f77	            0x4155	                                push r13	     10535	elf.c	FUNCTION_162
0x4011f79	            0x4154	                                push r12	     10535	elf.c	FUNCTION_162
0x4011f7b	          0x4d89c5	                             mov r13, r8	     10535	elf.c	FUNCTION_162
0x4011f7e	              0x55	                                push rbp	     10535	elf.c	FUNCTION_162
0x4011f7f	              0x53	                                push rbx	     10535	elf.c	FUNCTION_162
0x4011f80	          0x4889f5	                            mov rbp, rsi	     10535	elf.c	FUNCTION_162
0x4011f83	          0x4889fb	                            mov rbx, rdi	     10535	elf.c	FUNCTION_162
0x4011f86	          0x4989d4	                            mov r12, rdx	     10535	elf.c	FUNCTION_162
0x4011f89	    0x4881ec980000	                           sub rsp, 0x98	     10535	elf.c	FUNCTION_162
0x4011f90	    0x64488b042528	                mov rax, qword fs:[0x28]	     10535	elf.c	FUNCTION_162
0x4011f99	    0x488984248800	             mov qword [rsp + 0x88], rax	     10535	elf.c	FUNCTION_162
0x4011fa1	            0x31c0	                            xor eax, eax	     10535	elf.c	FUNCTION_162
0x4011fa3	        0x488b4708	                mov rax, qword [rdi + 8]	     10536	elf.c	FUNCTION_162	CALL_1
0x4011fa7	    0x4c8bb0680300	           mov r14, qword [rax + 0x368] 	     10536	elf.c	FUNCTION_162	CALL_1
0x4011fae	    0x4d8b96200200	           mov r10, qword [r14 + 0x220] 	     10538	elf.c	FUNCTION_162	IF_1
0x4011fb5	          0x4d85d2	                           test r10, r10	     10538	elf.c	FUNCTION_162	IF_1
0x4011fb8	            0x7446	                            je 0x4012000	     10538	elf.c	FUNCTION_162	IF_1
0x4011fba	          0x4d89c1	                              mov r9, r8	     10541	elf.c	FUNCTION_162	IF_1
0x4011fbd	            0x31c0	                            xor eax, eax	     10541	elf.c	FUNCTION_162	IF_1
0x4011fbf	          0x4989c8	                             mov r8, rcx	     10541	elf.c	FUNCTION_162	IF_1
0x4011fc2	      0xb903000000	                              mov ecx, 3	     10541	elf.c	FUNCTION_162	IF_1
0x4011fc7	          0x41ffd2	                                call r10	     10541	elf.c	FUNCTION_162	IF_1
0x4011fca	          0x4885c0	                           test rax, rax	     10543	elf.c	FUNCTION_162	IF_1	IF_2
0x4011fcd	            0x7431	                            je 0x4012000	     10543	elf.c	FUNCTION_162	IF_1	IF_2
0x4011fcf	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	     10586	elf.c	FUNCTION_162
0x4011fd7	    0x644833142528	                xor rdx, qword fs:[0x28]	     10586	elf.c	FUNCTION_162
0x4011fe0	     0xf85cc000000	                           jne 0x40120b2	     10586	elf.c	FUNCTION_162
0x4011fe6	    0x4881c4980000	                           add rsp, 0x98	     10586	elf.c	FUNCTION_162
0x4011fed	              0x5b	                                 pop rbx	     10586	elf.c	FUNCTION_162
0x4011fee	              0x5d	                                 pop rbp	     10586	elf.c	FUNCTION_162
0x4011fef	            0x415c	                                 pop r12	     10586	elf.c	FUNCTION_162
0x4011ff1	            0x415d	                                 pop r13	     10586	elf.c	FUNCTION_162
0x4011ff3	            0x415e	                                 pop r14	     10586	elf.c	FUNCTION_162
0x4011ff5	            0x415f	                                 pop r15	     10586	elf.c	FUNCTION_162
0x4011ff7	              0xc3	                                     ret	     10586	elf.c	FUNCTION_162
0x4011ff8	     0xf1f84000000	                   nop dword [rax + rax]	     10586	elf.c	FUNCTION_162
0x4012000	    0x498b86000300	           mov rax, qword [r14 + 0x300] 	     10549	elf.c	FUNCTION_162	IF_3
0x4012007	        0x80780c01	                 cmp byte [rax + 0xc], 1	     10549	elf.c	FUNCTION_162	IF_3
0x401200b	            0x7463	                            je 0x4012070	     10549	elf.c	FUNCTION_162	IF_3
0x401200d	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_224	CALL_6
0x401200f	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_224	CALL_6
0x4012012	      0xb911000000	                           mov ecx, 0x11	        90	string3.h	FUNCTION_224	CALL_6
0x4012017	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x401201a	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x401201f	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x4012024	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_229	CALL_3
0x4012027	          0x4989e6	                            mov r14, rsp	        90	string3.h	FUNCTION_224	CALL_6
0x401202a	      0xe800000000	                          call 0x401202f	       126	string3.h	FUNCTION_229	CALL_3
0x401202f	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       126	string3.h	FUNCTION_229	CALL_3
0x4012034	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x4012039	          0x4c89ee	                            mov rsi, r13	       126	string3.h	FUNCTION_229	CALL_3
0x401203c	      0xe800000000	                          call 0x4012041	       126	string3.h	FUNCTION_229	CALL_3
0x4012041	        0x4883ec08	                              sub rsp, 8	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4012045	      0x6888000000	                               push 0x88	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x401204a	      0xb900000000	                              mov ecx, 0	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x401204f	          0x4c89e2	                            mov rdx, r12	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4012052	          0x4d89f1	                             mov r9, r14	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4012055	    0x41b803000000	                              mov r8d, 3	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x401205b	          0x4889ee	                            mov rsi, rbp	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x401205e	          0x4889df	                            mov rdi, rbx	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4012061	      0xe800000000	                          call 0x4012066	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4012066	              0x5a	                                 pop rdx	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4012067	              0x59	                                 pop rcx	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4012068	      0xe962ffffff	                           jmp 0x4011fcf	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x401206d	           0xf1f00	                         nop dword [rax]	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4012070	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_224	CALL_6
0x4012072	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_224	CALL_6
0x4012075	      0xb90f000000	                            mov ecx, 0xf	        90	string3.h	FUNCTION_224	CALL_6
0x401207a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x401207d	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x4012082	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_229	CALL_3
0x4012085	          0x4989e6	                            mov r14, rsp	        90	string3.h	FUNCTION_224	CALL_6
0x4012088	    0xc70700000000	                      mov dword [rdi], 0	        90	string3.h	FUNCTION_224	CALL_6
0x401208e	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	       126	string3.h	FUNCTION_229	CALL_3
0x4012093	      0xe800000000	                          call 0x4012098	       126	string3.h	FUNCTION_229	CALL_3
0x4012098	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	       126	string3.h	FUNCTION_229	CALL_3
0x401209d	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x40120a2	          0x4c89ee	                            mov rsi, r13	       126	string3.h	FUNCTION_229	CALL_3
0x40120a5	      0xe800000000	                          call 0x40120aa	       126	string3.h	FUNCTION_229	CALL_3
0x40120aa	        0x4883ec08	                              sub rsp, 8	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x40120ae	            0x6a7c	                               push 0x7c	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x40120b0	            0xeb98	                           jmp 0x401204a	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x40120b2	      0xe800000000	                          call 0x40120b7	     10586	elf.c	FUNCTION_162
_bfd_elf_copy_private_header_data	functions,0:CALL,6:FOR,0:WHILE,0:SWITCH,0:IF,3:DO,0:ELSE,0	1704
0x400c270	            0x4157	                                push r15	      7674	elf.c	FUNCTION_86
0x400c272	            0x4156	                                push r14	      7674	elf.c	FUNCTION_86
0x400c274	            0x4155	                                push r13	      7674	elf.c	FUNCTION_86
0x400c276	            0x4154	                                push r12	      7674	elf.c	FUNCTION_86
0x400c278	              0x55	                                push rbp	      7674	elf.c	FUNCTION_86
0x400c279	              0x53	                                push rbx	      7674	elf.c	FUNCTION_86
0x400c27a	    0x4881ecb80000	                           sub rsp, 0xb8	      7674	elf.c	FUNCTION_86
0x400c281	        0x488b5708	                mov rdx, qword [rdi + 8]	      7675	elf.c	FUNCTION_86	IF_1	CALL_1
0x400c285	    0x64488b042528	                mov rax, qword fs:[0x28]	      7674	elf.c	FUNCTION_86
0x400c28e	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      7674	elf.c	FUNCTION_86
0x400c296	            0x31c0	                            xor eax, eax	      7674	elf.c	FUNCTION_86
0x400c298	        0x48893424	                    mov qword [rsp], rsi	      7674	elf.c	FUNCTION_86
0x400c29c	      0xb801000000	                              mov eax, 1	      7677	elf.c	FUNCTION_86	IF_1
0x400c2a1	        0x837a0805	                  cmp dword [rdx + 8], 5	      7675	elf.c	FUNCTION_86	IF_1	CALL_1
0x400c2a5	            0x7429	                            je 0x400c2d0	      7675	elf.c	FUNCTION_86	IF_1	CALL_1
0x400c2a7	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	      7691	elf.c	FUNCTION_86
0x400c2af	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      7691	elf.c	FUNCTION_86
0x400c2b8	     0xf8587140000	                           jne 0x400d745	      7691	elf.c	FUNCTION_86
0x400c2be	    0x4881c4b80000	                           add rsp, 0xb8	      7691	elf.c	FUNCTION_86
0x400c2c5	              0x5b	                                 pop rbx	      7691	elf.c	FUNCTION_86
0x400c2c6	              0x5d	                                 pop rbp	      7691	elf.c	FUNCTION_86
0x400c2c7	            0x415c	                                 pop r12	      7691	elf.c	FUNCTION_86
0x400c2c9	            0x415d	                                 pop r13	      7691	elf.c	FUNCTION_86
0x400c2cb	            0x415e	                                 pop r14	      7691	elf.c	FUNCTION_86
0x400c2cd	            0x415f	                                 pop r15	      7691	elf.c	FUNCTION_86
0x400c2cf	              0xc3	                                     ret	      7691	elf.c	FUNCTION_86
0x400c2d0	        0x488b4e08	                mov rcx, qword [rsi + 8]	      7676	elf.c	FUNCTION_86	IF_1	CALL_2
0x400c2d4	          0x4989fc	                            mov r12, rdi	      7676	elf.c	FUNCTION_86	IF_1	CALL_2
0x400c2d7	        0x83790805	                  cmp dword [rcx + 8], 5	      7676	elf.c	FUNCTION_86	IF_1	CALL_2
0x400c2db	            0x75ca	                           jne 0x400c2a7	      7676	elf.c	FUNCTION_86	IF_1	CALL_2
0x400c2dd	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c2e4	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c2eb	        0x48833800	                      cmp qword [rax], 0	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c2ef	            0x7437	                            je 0x400c328	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c2f1	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      7690	elf.c	FUNCTION_86	CALL_6
0x400c2f9	    0x644833042528	                xor rax, qword fs:[0x28]	      7690	elf.c	FUNCTION_86	CALL_6
0x400c302	     0xf853d140000	                           jne 0x400d745	      7690	elf.c	FUNCTION_86	CALL_6
0x400c308	    0x4881c4b80000	                           add rsp, 0xb8	      7691	elf.c	FUNCTION_86
0x400c30f	          0x4c89e7	                            mov rdi, r12	      7690	elf.c	FUNCTION_86	CALL_6
0x400c312	            0x31f6	                            xor esi, esi	      7690	elf.c	FUNCTION_86	CALL_6
0x400c314	              0x5b	                                 pop rbx	      7691	elf.c	FUNCTION_86
0x400c315	              0x5d	                                 pop rbp	      7691	elf.c	FUNCTION_86
0x400c316	            0x415c	                                 pop r12	      7691	elf.c	FUNCTION_86
0x400c318	            0x415d	                                 pop r13	      7691	elf.c	FUNCTION_86
0x400c31a	            0x415e	                                 pop r14	      7691	elf.c	FUNCTION_86
0x400c31c	            0x415f	                                 pop r15	      7691	elf.c	FUNCTION_86
0x400c31e	      0xe9adfdffff	   jmp sym._bfd_elf_fixup_group_sections	      7690	elf.c	FUNCTION_86	CALL_6
0x400c323	       0xf1f440000	                   nop dword [rax + rax]	      7690	elf.c	FUNCTION_86	CALL_6
0x400c328	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c330	        0x4c8b6860	            mov r13, qword [rax + 0x60] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c334	      0x4889442418	             mov qword [rsp + 0x18], rax	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c339	          0x4d85ed	                           test r13, r13	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c33c	            0x74b3	                            je 0x400c2f1	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400c33e	          0x4839ca	                            cmp rdx, rcx	      7374	elf.c	FUNCTION_82	IF_3
0x400c341	          0x4d89ea	                            mov r10, r13	      7374	elf.c	FUNCTION_82	IF_3
0x400c344	     0xf84ce100000	                            je 0x400d418	      7374	elf.c	FUNCTION_82	IF_3
0x400c34a	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	      6562	elf.c	FUNCTION_80	CALL_1
0x400c351	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      6565	elf.c	FUNCTION_80
0x400c35d	      0x4889442478	             mov qword [rsp + 0x78], rax	      6562	elf.c	FUNCTION_80	CALL_1
0x400c362	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6568	elf.c	FUNCTION_80	CALL_3
0x400c367	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6568	elf.c	FUNCTION_80	CALL_3
0x400c36a	        0x89442454	             mov dword [rsp + 0x54], eax	      6568	elf.c	FUNCTION_80	CALL_3
0x400c36e	    0x488b81680300	           mov rax, qword [rcx + 0x368] 	      6569	elf.c	FUNCTION_80	CALL_4
0x400c375	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6569	elf.c	FUNCTION_80	CALL_4
0x400c379	      0x4889442438	             mov qword [rsp + 0x38], rax	      6569	elf.c	FUNCTION_80	CALL_4
0x400c37e	    0x498b84249000	            mov rax, qword [r12 + 0x90] 	      6682	elf.c	FUNCTION_80	FOR_1
0x400c386	          0x4885c0	                           test rax, rax	      6682	elf.c	FUNCTION_80	FOR_1
0x400c389	      0x4889442410	             mov qword [rsp + 0x10], rax	      6682	elf.c	FUNCTION_80	FOR_1
0x400c38e	            0x740d	                            je 0x400c39d	      6682	elf.c	FUNCTION_80	FOR_1
0x400c390	        0x806024bf	             and byte [rax + 0x24], 0xbf	      6683	elf.c	FUNCTION_80	FOR_1
0x400c394	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6682	elf.c	FUNCTION_80	FOR_1
0x400c398	          0x4885c0	                           test rax, rax	      6682	elf.c	FUNCTION_80	FOR_1
0x400c39b	            0x75f3	                           jne 0x400c390	      6682	elf.c	FUNCTION_80	FOR_1
0x400c39d	        0x8b742454	            mov esi, dword [rsp + 0x54] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400c3a1	            0x85f6	                           test esi, esi	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400c3a3	     0xf8471140000	                            je 0x400d81a	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400c3a9	      0x49837a2000	               cmp qword [r10 + 0x20], 0	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3ae	     0xf854f100000	                           jne 0x400d403	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3b4	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3b8	          0x8d50ff	                      lea edx, [rax - 1]	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3bb	          0x4c89d0	                            mov rax, r10	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3be	        0x4883c201	                              add rdx, 1	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3c2	        0x48c1e206	                              shl rdx, 6	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3c6	          0x4c01d2	                            add rdx, r10	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3c9	            0xeb10	                           jmp 0x400c3db	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3cb	       0xf1f440000	                   nop dword [rax + rax]	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3d0	      0x4883782000	               cmp qword [rax + 0x20], 0	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3d5	     0xf8528100000	                           jne 0x400d403	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3db	        0x4883c040	                           add rax, 0x40	      6692	elf.c	FUNCTION_80	FOR_2
0x400c3df	          0x4839d0	                            cmp rax, rdx	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400c3e2	            0x75ec	                           jne 0x400c3d0	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400c3e4	      0xc644242000	                mov byte [rsp + 0x20], 0	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400c3e9	    0xc78424880000	               mov dword [rsp + 0x88], 0	      6689	elf.c	FUNCTION_80
0x400c3f4	          0x4d89d7	                            mov r15, r10	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3f7	          0x4531f6	                          xor r14d, r14d	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3fa	      0x4c89542408	                mov qword [rsp + 8], r10	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c3ff	      0x4c89642430	             mov qword [rsp + 0x30], r12	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c404	            0xeb2c	                           jmp 0x400c432	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400c406	        0x4883f801	                              cmp rax, 1	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x400c40a	     0xf84bb000000	                            je 0x400c4cb	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x400c410	    0x483d52e57464	                     cmp rax, 0x6474e552	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400c416	            0x7507	                           jne 0x400c41f	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400c418	    0x49c707000000	                      mov qword [r15], 0	      6724	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400c41f	        0x4183c601	                             add r14d, 1	      6705	elf.c	FUNCTION_80	FOR_3
0x400c423	        0x4983c740	                           add r15, 0x40	      6705	elf.c	FUNCTION_80	FOR_3
0x400c427	      0x4439742454	           cmp dword [rsp + 0x54], r14d 	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c42c	     0xf865c010000	                           jbe 0x400c58e	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c432	          0x498b07	                    mov rax, qword [r15]	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400c435	        0x4883f803	                              cmp rax, 3	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400c439	            0x75cb	                           jne 0x400c406	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400c43b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c440	          0x4885c0	                           test rax, rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c443	            0x74da	                            je 0x400c41f	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c445	      0x49837f1800	               cmp qword [r15 + 0x18], 0	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c44a	            0x7564	                           jne 0x400c4b0	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c44c	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c450	            0xeb0f	                           jmp 0x400c461	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c452	    0x660f1f440000	                    nop word [rax + rax]	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c458	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c45c	          0x4885c0	                           test rax, rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c45f	            0x74be	                            je 0x400c41f	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c461	          0x4885d2	                           test rdx, rdx	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c464	            0x75f2	                           jne 0x400c458	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c466	      0x49837f3000	               cmp qword [r15 + 0x30], 0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c46b	            0x75eb	                           jne 0x400c458	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c46d	        0x498b4f28	            mov rcx, qword [r15 + 0x28] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c471	          0x4885c9	                           test rcx, rcx	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c474	            0x74e2	                            je 0x400c458	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c476	        0xf6402101	               test byte [rax + 0x21], 1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c47a	            0x74dc	                            je 0x400c458	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c47c	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c480	          0x4d85c0	                             test r8, r8	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c483	            0x74d3	                            je 0x400c458	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c485	    0x488bb8900000	            mov rdi, qword [rax + 0x90] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c48c	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c490	          0x4839f7	                            cmp rdi, rsi	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c493	            0x72c3	                            jb 0x400c458	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c495	          0x4c01c7	                             add rdi, r8	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c498	          0x4801f1	                            add rcx, rsi	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c49b	          0x4839cf	                            cmp rdi, rcx	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c49e	            0x77b8	                            ja 0x400c458	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c4a0	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c4a4	        0x49894718	             mov qword [r15 + 0x18], rax	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c4a8	      0xe972ffffff	                           jmp 0x400c41f	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c4ad	           0xf1f00	                         nop dword [rax]	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400c4b0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c4b4	          0x4885c0	                           test rax, rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c4b7	     0xf8462ffffff	                            je 0x400c41f	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c4bd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c4c1	          0x4885c0	                           test rax, rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c4c4	            0x75ea	                           jne 0x400c4b0	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c4c6	      0xe954ffffff	                           jmp 0x400c41f	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400c4cb	          0x4585f6	                         test r14d, r14d	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4ce	     0xf844bffffff	                            je 0x400c41f	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4d4	        0x418d56ff	                      lea edx, [r14 - 1]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4d8	      0x488b442408	                mov rax, qword [rsp + 8]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4dd	      0x4489742428	            mov dword [rsp + 0x28], r14d	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4e2	        0x4883c201	                              add rdx, 1	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4e6	        0x48c1e206	                              shl rdx, 6	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4ea	          0x4801c2	                            add rdx, rax	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4ed	            0xeb0e	                           jmp 0x400c4fd	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4ef	              0x90	                                     nop	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4f0	        0x4883c040	                           add rax, 0x40	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4f4	          0x4839d0	                            cmp rax, rdx	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4f7	     0xf8487000000	                            je 0x400c584	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400c4fd	        0x48833801	                      cmp qword [rax], 1	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c501	            0x75ed	                           jne 0x400c4f0	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c503	        0x4c8b4028	              mov r8, qword [rax + 0x28]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c507	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c50b	        0x4c8b4818	              mov r9, qword [rax + 0x18]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c50f	        0x4d8b5718	            mov r10, qword [r15 + 0x18] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c513	          0x4939f8	                             cmp r8, rdi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c516	          0x4889fe	                            mov rsi, rdi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c519	        0x490f43f0	                          cmovae rsi, r8	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c51d	        0x498d0c31	                     lea rcx, [r9 + rsi]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c521	          0x4939ca	                            cmp r10, rcx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c524	            0x73ca	                           jae 0x400c4f0	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c526	        0x498b5f28	            mov rbx, qword [r15 + 0x28] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c52a	        0x4d8b5f30	            mov r11, qword [r15 + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c52e	          0x4c39db	                            cmp rbx, r11	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c531	          0x4d89dc	                            mov r12, r11	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c534	        0x4c0f43e3	                         cmovae r12, rbx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c538	        0x4b8d2c22	                    lea rbp, [r10 + r12]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c53c	          0x4939e9	                             cmp r9, rbp	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c53f	            0x73af	                           jae 0x400c4f0	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c541	        0x4c8b7020	            mov r14, qword [rax + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c545	        0x4d8b6f20	            mov r13, qword [r15 + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c549	          0x4c01f6	                            add rsi, r14	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c54c	          0x4939f5	                            cmp r13, rsi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c54f	            0x739f	                           jae 0x400c4f0	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c551	          0x4d01ec	                            add r12, r13	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c554	          0x4d39e6	                            cmp r14, r12	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c557	            0x7397	                           jae 0x400c4f0	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400c559	          0x4d39ca	                             cmp r10, r9	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400c55c	     0xf878b120000	                            ja 0x400d7ed	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400c562	          0x4829e9	                            sub rcx, rbp	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400c565	          0x4885c9	                           test rcx, rcx	      6765	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400c568	            0x7e0e	                           jle 0x400c578	      6765	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400c56a	          0x4901cb	                            add r11, rcx	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400c56d	          0x4801d9	                            add rcx, rbx	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400c570	        0x4d895f30	             mov qword [r15 + 0x30], r11	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400c574	        0x49894f28	             mov qword [r15 + 0x28], rcx	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400c578	    0x48c700000000	                      mov qword [rax], 0	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400c57f	      0xe96cffffff	                           jmp 0x400c4f0	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400c584	      0x448b742428	           mov r14d, dword [rsp + 0x28] 	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400c589	      0xe991feffff	                           jmp 0x400c41f	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400c58e	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c596	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c59b	      0x4c8b542408	                mov r10, qword [rsp + 8]	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c5a0	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c5ab	    0x48c784248000	               mov qword [rsp + 0x80], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c5b7	      0x4889442430	             mov qword [rsp + 0x30], rax	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c5bc	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400c5c1	    0xc74424480000	               mov dword [rsp + 0x48], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c5c9	    0xc744246c0000	               mov dword [rsp + 0x6c], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400c5d1	          0x4d89d5	                            mov r13, r10	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400c5d4	      0x4c89642458	             mov qword [rsp + 0x58], r12	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400c5d9	        0x4883e801	                              sub rax, 1	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400c5dd	      0x4889442440	             mov qword [rsp + 0x40], rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400c5e2	       0xfb6442420	           movzx eax, byte [rsp + 0x20] 	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400c5e7	             0x1c0	                            add eax, eax	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400c5e9	        0x8844246b	               mov byte [rsp + 0x6b], al	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400c5ed	           0xf1f00	                         nop dword [rax]	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400c5f0	        0x4d8b4d00	                     mov r9, qword [r13]	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400c5f4	          0x4d85c9	                             test r9, r9	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400c5f7	     0xf8491020000	                            je 0x400c88e	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400c5fd	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400c602	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400c609	          0x4885c0	                           test rax, rax	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400c60c	     0xf84190d0000	                            je 0x400d32b	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400c612	        0x4983f907	                               cmp r9, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c616	        0x4d8b5520	            mov r10, qword [r13 + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c61a	        0x410f94c3	                               sete r11b	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c61e	          0x4531c0	                            xor r8d, r8d	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c621	            0x31db	                            xor ebx, ebx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c623	      0xe9b5000000	                           jmp 0x400c6dd	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c628	     0xf1f84000000	                   nop dword [rax + rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c630	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c634	          0x4c39d2	                            cmp rdx, r10	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c637	     0xf82f3000000	                            jb 0x400c730	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c63d	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c640	            0x89ce	                            mov esi, ecx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c642	    0x81e600050000	                          and esi, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c648	    0x81fe00040000	                          cmp esi, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c64e	     0xf8522010000	                           jne 0x400c776	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c654	            0x31f6	                            xor esi, esi	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c656	          0x4584db	                         test r11b, r11b	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c659	     0xf8517010000	                           jne 0x400c776	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c65f	          0x4801d6	                            add rsi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c662	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c666	        0x49395528	            cmp qword [r13 + 0x28], rdx 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c66a	      0x490f435528	          cmovae rdx, qword [r13 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c66f	          0x4c01d2	                            add rdx, r10	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c672	          0x4839d6	                            cmp rsi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c675	     0xf87b5000000	                            ja 0x400c730	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c67b	          0xf6c101	                              test cl, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c67e	     0xf84ac000000	                            je 0x400c730	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c684	    0x4981f951e574	                      cmp r9, 0x6474e551	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c68b	            0x7443	                            je 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c68d	        0x4983f907	                               cmp r9, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c691	     0xf84d0020000	                            je 0x400c967	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c697	        0x4983f901	                               cmp r9, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c69b	            0x740a	                            je 0x400c6a7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c69d	          0x4584db	                         test r11b, r11b	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6a0	            0x7505	                           jne 0x400c6a7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6a2	          0xf6c504	                              test ch, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6a5	            0x7529	                           jne 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6a7	        0x4983f902	                               cmp r9, 2	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6ab	     0xf84f7020000	                            je 0x400c9a8	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6b1	        0x4983f901	                               cmp r9, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6b5	            0x7506	                           jne 0x400c6bd	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6b7	        0xf6402440	           test byte [rax + 0x24], 0x40 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6bb	            0x7513	                           jne 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6bd	          0x4885db	                           test rbx, rbx	      6804	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x400c6c0	        0x480f44d8	                          cmove rbx, rax	      6804	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x400c6c4	      0x4883786801	               cmp qword [rax + 0x68], 1	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x400c6c9	        0x4183d8ff	             sbb r8d, 0xffffffffffffffff	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x400c6cd	           0xf1f00	                         nop dword [rax]	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x400c6d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6798	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400c6d4	          0x4885c0	                           test rax, rax	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400c6d7	     0xf84a2000000	                            je 0x400c77f	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400c6dd	          0x4d85d2	                           test r10, r10	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6e0	     0xf854affffff	                           jne 0x400c630	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6e6	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6ea	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6ee	          0x4839d6	                            cmp rsi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6f1	            0x723d	                            jb 0x400c730	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6f3	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6f6	            0x89cf	                            mov edi, ecx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6f8	    0x81e700050000	                          and edi, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c6fe	    0x81ff00040000	                          cmp edi, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c704	            0x756a	                           jne 0x400c770	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c706	            0x31ff	                            xor edi, edi	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c708	          0x4584db	                         test r11b, r11b	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c70b	            0x7563	                           jne 0x400c770	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c70d	          0x4801f7	                            add rdi, rsi	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c710	        0x498b7530	            mov rsi, qword [r13 + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c714	        0x49397528	            cmp qword [r13 + 0x28], rsi 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c718	      0x490f437528	          cmovae rsi, qword [r13 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c71d	          0x4801f2	                            add rdx, rsi	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c720	          0x4839d7	                            cmp rdi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c723	     0xf8652ffffff	                           jbe 0x400c67b	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c729	     0xf1f80000000	                         nop dword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c730	        0x4983f904	                               cmp r9, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c734	            0x759a	                           jne 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c736	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c73d	        0x837a0407	                  cmp dword [rdx + 4], 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c741	            0x758d	                           jne 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c743	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c74a	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c74e	          0x4839d1	                            cmp rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c751	     0xf8279ffffff	                            jb 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c757	        0x48034838	             add rcx, qword [rax + 0x38]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c75b	        0x49035528	             add rdx, qword [r13 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c75f	          0x4839d1	                            cmp rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c762	     0xf8768ffffff	                            ja 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c768	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c76b	      0xe932ffffff	                           jmp 0x400c6a2	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c770	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c774	            0xeb97	                           jmp 0x400c70d	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c776	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c77a	      0xe9e0feffff	                           jmp 0x400c65f	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c77f	          0x4489c5	                            mov ebp, r8d	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c782	        0x488b3c24	                    mov rdi, qword [rsp]	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400c786	      0x4489442408	                mov dword [rsp + 8], r8d	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400c78b	    0x488d04ed4800	                 lea rax, [rbp*8 + 0x48]	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400c793	          0x4889c6	                            mov rsi, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400c796	      0x4889442460	             mov qword [rsp + 0x60], rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400c79b	      0xe800000000	                          call 0x400c7a0	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400c7a0	          0x4885c0	                           test rax, rax	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400c7a3	          0x4989c7	                            mov r15, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400c7a6	      0x448b442408	                mov r8d, dword [rsp + 8]	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400c7ab	     0xf84c90b0000	                            je 0x400d37a	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400c7b1	    0x48c700000000	                      mov qword [rax], 0	      6821	elf.c	FUNCTION_80	FOR_6
0x400c7b8	        0x498b4500	                    mov rax, qword [r13]	      6822	elf.c	FUNCTION_80	FOR_6
0x400c7bc	        0x49894708	                mov qword [r15 + 8], rax	      6822	elf.c	FUNCTION_80	FOR_6
0x400c7c0	        0x498b5508	                mov rdx, qword [r13 + 8]	      6823	elf.c	FUNCTION_80	FOR_6
0x400c7c4	      0x41804f4001	                 or byte [r15 + 0x40], 1	      6824	elf.c	FUNCTION_80	FOR_6
0x400c7c9	          0x4885db	                           test rbx, rbx	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7cc	        0x49895710	             mov qword [r15 + 0x10], rdx	      6823	elf.c	FUNCTION_80	FOR_6
0x400c7d0	            0x7407	                            je 0x400c7d9	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7d2	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7d7	            0x7418	                            je 0x400c7f1	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7d9	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7dd	        0x49895718	             mov qword [r15 + 0x18], rdx	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7e1	      0x410fb65740	           movzx edx, byte [r15 + 0x40] 	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7e6	          0x83e2fd	                     and edx, 0xfffffffd	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7e9	         0xa54246b	                or dl, byte [rsp + 0x6b]	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7ed	        0x41885740	               mov byte [r15 + 0x40], dl	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400c7f1	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      6837	elf.c	FUNCTION_80	FOR_6
0x400c7f5	          0x4885d2	                           test rdx, rdx	      6838	elf.c	FUNCTION_80	FOR_6
0x400c7f8	     0xf8577010000	                           jne 0x400c975	      6838	elf.c	FUNCTION_80	FOR_6
0x400c7fe	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6838	elf.c	FUNCTION_80	FOR_6
0x400c803	        0x498b4d28	            mov rcx, qword [r13 + 0x28] 	      6838	elf.c	FUNCTION_80	FOR_6
0x400c807	          0x8b773c	            mov esi, dword [rdi + 0x3c] 	      6838	elf.c	FUNCTION_80	FOR_6
0x400c80a	          0x4839f1	                            cmp rcx, rsi	      6838	elf.c	FUNCTION_80	FOR_6
0x400c80d	     0xf8210060000	                            jb 0x400ce23	      6838	elf.c	FUNCTION_80	FOR_6
0x400c813	      0x410fb67740	           movzx esi, byte [r15 + 0x40] 	      6837	elf.c	FUNCTION_80	FOR_6
0x400c818	      0x448b4c246c	            mov r9d, dword [rsp + 0x6c] 	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c81d	          0x83ce10	                            or esi, 0x10	      6837	elf.c	FUNCTION_80	FOR_6
0x400c820	          0x83e6df	                     and esi, 0xffffffdf	      6839	elf.c	FUNCTION_80	FOR_6
0x400c823	          0x4585c9	                           test r9d, r9d	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c826	        0x41887740	              mov byte [r15 + 0x40], sil	      6839	elf.c	FUNCTION_80	FOR_6
0x400c82a	            0x740a	                            je 0x400c836	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c82c	        0x4883f801	                              cmp rax, 1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c830	     0xf8499050000	                            je 0x400cdcf	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c836	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c83a	          0x4801ca	                            add rdx, rcx	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c83d	          0x8b4f44	            mov ecx, dword [rdi + 0x44] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c840	         0xfaf4f40	            imul ecx, dword [rdi + 0x40]	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c844	          0x4801f1	                            add rcx, rsi	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c847	          0x4839ca	                            cmp rdx, rcx	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c84a	     0xf8210010000	                            jb 0x400c960	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c850	      0xba01000000	                              mov edx, 1	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c855	      0x410fb64f40	           movzx ecx, byte [r15 + 0x40] 	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c85a	          0xc1e205	                              shl edx, 5	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c85d	          0x83e1df	                     and ecx, 0xffffffdf	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c860	             0x9ca	                             or edx, ecx	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c862	        0x4883f801	                              cmp rax, 1	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400c866	        0x41885740	               mov byte [r15 + 0x40], dl	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c86a	     0xf847e010000	                            je 0x400c9ee	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400c870	          0x4585c0	                           test r8d, r8d	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400c873	     0xf858a010000	                           jne 0x400ca03	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400c879	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x400c87e	    0x41c747440000	               mov dword [r15 + 0x44], 0	      6870	elf.c	FUNCTION_80	FOR_6	IF_18
0x400c886	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      6872	elf.c	FUNCTION_80	FOR_6	IF_18
0x400c88b	          0x4c8938	                    mov qword [rax], r15	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x400c88e	      0x8344244801	               add dword [rsp + 0x48], 1	      6779	elf.c	FUNCTION_80	FOR_6
0x400c893	        0x4983c540	                           add r13, 0x40	      6779	elf.c	FUNCTION_80	FOR_6
0x400c897	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      6779	elf.c	FUNCTION_80	FOR_6
0x400c89b	        0x39442454	            cmp dword [rsp + 0x54], eax 	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400c89f	     0xf874bfdffff	                            ja 0x400c5f0	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400c8a5	        0x488b1c24	                    mov rbx, qword [rsp]	      7152	elf.c	FUNCTION_80	CALL_26
0x400c8a9	    0x4883bc248000	               cmp qword [rsp + 0x80], 0	      7157	elf.c	FUNCTION_80	IF_43
0x400c8b2	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400c8ba	      0x4c8b642458	            mov r12, qword [rsp + 0x58] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400c8bf	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400c8c6	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400c8cd	          0x488902	                    mov qword [rdx], rax	      7152	elf.c	FUNCTION_80	CALL_26
0x400c8d0	     0xf841bfaffff	                            je 0x400c2f1	      7157	elf.c	FUNCTION_80	IF_43
0x400c8d6	          0x4885c0	                           test rax, rax	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400c8d9	     0xf8412faffff	                            je 0x400c2f1	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400c8df	          0x4889c1	                            mov rcx, rax	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400c8e2	            0x31d2	                            xor edx, edx	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400c8e4	          0x488b09	                    mov rcx, qword [rcx]	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400c8e7	          0x83c201	                              add edx, 1	      7162	elf.c	FUNCTION_80	IF_43	FOR_10
0x400c8ea	          0x4885c9	                           test rcx, rcx	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400c8ed	            0x75f5	                           jne 0x400c8e4	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400c8ef	    0x3b94248c0000	            cmp edx, dword [rsp + 0x8c] 	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x400c8f6	            0x7634	                           jbe 0x400c92c	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x400c8f8	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400c8fd	    0x2b94248c0000	             sub edx, dword [rsp + 0x8c]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400c904	         0xfaf5340	            imul edx, dword [rbx + 0x40]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400c908	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400c910	        0x48295318	             sub qword [rbx + 0x18], rdx	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400c914	            0xeb16	                           jmp 0x400c92c	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400c916	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400c920	          0x488b00	                    mov rax, qword [rax]	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400c923	          0x4885c0	                           test rax, rax	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400c926	     0xf84c5f9ffff	                            je 0x400c2f1	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400c92c	      0x4883780806	                  cmp qword [rax + 8], 6	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c931	            0x75ed	                           jne 0x400c920	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c933	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c93b	            0x31d2	                            xor edx, edx	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c93d	        0xf6434010	           test byte [rbx + 0x40], 0x10 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c941	            0x7410	                            je 0x400c953	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c943	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c948	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c94b	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c953	        0x48035318	             add rdx, qword [rbx + 0x18]	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c957	        0x48895018	             mov qword [rax + 0x18], rdx	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c95b	      0xe991f9ffff	                           jmp 0x400c2f1	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400c960	            0x31d2	                            xor edx, edx	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c962	      0xe9eefeffff	                           jmp 0x400c855	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c967	          0x80e504	                               and ch, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c96a	     0xf854dfdffff	                           jne 0x400c6bd	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c970	      0xe95bfdffff	                           jmp 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c975	      0x41806740cf	             and byte [r15 + 0x40], 0xcf	      6839	elf.c	FUNCTION_80	FOR_6
0x400c97a	        0x4883f801	                              cmp rax, 1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c97e	            0x750c	                           jne 0x400c98c	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c980	        0x8b7c246c	            mov edi, dword [rsp + 0x6c] 	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c984	            0x85ff	                           test edi, edi	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c986	     0xf8543040000	                           jne 0x400cdcf	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c98c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c991	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c995	          0x4839f2	                            cmp rdx, rsi	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c998	            0x77c6	                            ja 0x400c960	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c99a	        0x498b4d28	            mov rcx, qword [r13 + 0x28] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c99e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c9a3	      0xe992feffff	                           jmp 0x400c83a	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400c9a8	    0x81e100050000	                          and ecx, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9ae	    0x81f900040000	                          cmp ecx, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9b4	            0x740b	                            je 0x400c9c1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9b6	      0x4883783800	               cmp qword [rax + 0x38], 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9bb	     0xf85fcfcffff	                           jne 0x400c6bd	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9c1	          0x4d85d2	                           test r10, r10	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9c4	     0xf844e090000	                            je 0x400d318	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9ca	        0x4c395030	            cmp qword [rax + 0x30], r10 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9ce	     0xf85e9fcffff	                           jne 0x400c6bd	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9d4	          0x488b30	                    mov rsi, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9d7	      0xbf00000000	                              mov edi, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9dc	      0xb909000000	                              mov ecx, 9	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9e1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9e3	     0xf84d4fcffff	                            je 0x400c6bd	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9e9	      0xe9e2fcffff	                           jmp 0x400c6d0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400c9ee	          0x83e220	                           and edx, 0x20	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400c9f1	       0xf4444246c	           cmove eax, dword [rsp + 0x6c]	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400c9f6	          0x4585c0	                           test r8d, r8d	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400c9f9	        0x8944246c	             mov dword [rsp + 0x6c], eax	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400c9fd	     0xf84df030000	                            je 0x400cde2	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400ca03	      0xbe08000000	                              mov esi, 8	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ca08	          0x4889ef	                            mov rdi, rbp	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ca0b	      0x4489442408	                mov dword [rsp + 8], r8d	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ca10	      0xe800000000	                          call 0x400ca15	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ca15	          0x4885c0	                           test rax, rax	      6906	elf.c	FUNCTION_80	FOR_6	IF_20
0x400ca18	          0x4989c1	                             mov r9, rax	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ca1b	     0xf8459090000	                            je 0x400d37a	      6906	elf.c	FUNCTION_80	FOR_6	IF_20
0x400ca21	          0x4885db	                           test rbx, rbx	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ca24	      0x448b442408	                mov r8d, dword [rsp + 8]	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ca29	     0xf847b0d0000	                            je 0x400d7aa	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ca2f	        0x4d8b6500	                    mov r12, qword [r13]	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ca33	        0x4d8b5d20	            mov r11, qword [r13 + 0x20] 	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ca37	    0x48c744247000	               mov qword [rsp + 0x70], 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca40	    0xc74424100000	               mov dword [rsp + 0x10], 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca48	      0x4489442420	             mov dword [rsp + 0x20], r8d	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400ca4d	        0x4983fc07	                              cmp r12, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca51	       0xf94442408	                     sete byte [rsp + 8]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca56	       0xfb67c2408	               movzx edi, byte [rsp + 8]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca5b	        0x4983fc01	                              cmp r12, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca5f	           0xf94c0	                                 sete al	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca62	          0x4531f6	                          xor r14d, r14d	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca65	          0x4531d2	                          xor r10d, r10d	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca68	             0x9f8	                             or eax, edi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca6a	        0x88442428	               mov byte [rsp + 0x28], al	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca6e	      0xe90a020000	                           jmp 0x400cc7d	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca73	       0xf1f440000	                   nop dword [rax + rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca78	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca7c	          0x4c39da	                            cmp rdx, r11	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca7f	     0xf824b020000	                            jb 0x400ccd0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca85	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca88	            0x89c8	                            mov eax, ecx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca8a	      0x2500050000	                          and eax, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca8f	      0x3d00040000	                          cmp eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca94	     0xf8484020000	                            je 0x400cd1e	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca9a	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ca9e	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400caa2	          0x4801f2	                            add rdx, rsi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400caa5	        0x49394530	            cmp qword [r13 + 0x30], rax 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400caa9	          0x4889c6	                            mov rsi, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400caac	      0x490f437530	          cmovae rsi, qword [r13 + 0x30]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cab1	          0x4c01de	                            add rsi, r11	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cab4	          0x4839f2	                            cmp rdx, rsi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cab7	     0xf8713020000	                            ja 0x400ccd0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cabd	          0xf6c101	                              test cl, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cac0	     0xf840a020000	                            je 0x400ccd0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cac6	    0x4981fc51e574	                     cmp r12, 0x6474e551	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cacd	     0xf849d010000	                            je 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cad3	        0x4983fc07	                              cmp r12, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cad7	     0xf84df020000	                            je 0x400cdbc	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cadd	      0x807c242800	                cmp byte [rsp + 0x28], 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cae2	            0x7509	                           jne 0x400caed	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cae4	          0xf6c504	                              test ch, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cae7	     0xf8583010000	                           jne 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400caed	        0x4983fc02	                              cmp r12, 2	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400caf1	     0xf845b070000	                            je 0x400d252	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400caf7	        0x4983fc01	                              cmp r12, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cafb	            0x750a	                           jne 0x400cb07	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cafd	        0xf6432440	           test byte [rbx + 0x24], 0x40 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cb01	     0xf8569010000	                           jne 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cb07	       0xfb67c2408	               movzx edi, byte [rsp + 8]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cb0c	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cb10	          0x4885d2	                           test rdx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cb13	     0xf8457010000	                            je 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cb19	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb20	        0x458d4201	                      lea r8d, [r10 + 1]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cb24	        0x4b891cd1	             mov qword [r9 + r10*8], rbx	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cb28	            0x85f6	                           test esi, esi	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb2a	     0xf8510020000	                           jne 0x400cd40	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb30	        0x498b6d18	            mov rbp, qword [r13 + 0x18] 	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb34	          0x4885ed	                           test rbp, rbp	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb37	     0xf8403020000	                            je 0x400cd40	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb3d	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb42	    0xf6868a030000	          test byte [rsi + 0x38a], 0x40 	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb49	        0x488b7230	            mov rsi, qword [rdx + 0x30] 	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb4d	     0xf8597000000	                           jne 0x400cbea	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb53	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb57	            0x85c9	                           test ecx, ecx	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb59	     0xf858b000000	                           jne 0x400cbea	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb5f	          0x4885f6	                           test rsi, rsi	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb62	     0xf8482000000	                            je 0x400cbea	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400cb68	      0x410fb64f40	           movzx ecx, byte [r15 + 0x40] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb6d	    0x48c784249000	               mov qword [rsp + 0x90], 0	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb79	          0xf6c110	                           test cl, 0x10	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb7c	            0x7411	                            je 0x400cb8f	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb7e	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb83	        0x458b523c	           mov r10d, dword [r10 + 0x3c] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb87	    0x4c8994249000	             mov qword [rsp + 0x90], r10	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb8f	          0x80e120	                            and cl, 0x20	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb92	    0x48c784249800	               mov qword [rsp + 0x98], 0	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cb9e	            0x7416	                            je 0x400cbb6	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cba0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cba5	        0x448b5144	           mov r10d, dword [rcx + 0x44] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cba9	      0x440faf5140	           imul r10d, dword [rcx + 0x40]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbae	    0x4c8994249800	             mov qword [rsp + 0x98], r10	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbb6	          0x8b4a70	            mov ecx, dword [rdx + 0x70] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbb9	    0x41ba01000000	                             mov r10d, 1	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbbf	          0x49d3e2	                             shl r10, cl	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbc2	          0x4c89d1	                            mov rcx, r10	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbc5	      0x4e8d5415ff	                lea r10, [rbp + r10 - 1]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbca	    0x4c0394249000	             add r10, qword [rsp + 0x90]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbd2	    0x4c0394249800	             add r10, qword [rsp + 0x98]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbda	          0x48f7d9	                                 neg rcx	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbdd	          0x4c21d1	                            and rcx, r10	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbe0	        0x483b4a28	            cmp rcx, qword [rdx + 0x28] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbe4	     0xf84620c0000	                            je 0x400d84c	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400cbea	        0x498b4f18	            mov rcx, qword [r15 + 0x18] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cbee	          0x4839f1	                            cmp rcx, rsi	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cbf1	     0xf8752010000	                            ja 0x400cd49	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cbf7	        0x448b5220	           mov r10d, dword [rdx + 0x20] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cbfb	    0x4181e2000500	                         and r10d, 0x500	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc02	    0x4181fa000400	                         cmp r10d, 0x400	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc09	     0xf858e060000	                           jne 0x400d29d	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc0f	          0x4531d2	                          xor r10d, r10d	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc12	          0x4084ff	                           test dil, dil	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc15	     0xf8582060000	                           jne 0x400d29d	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc1b	          0x4901f2	                            add r10, rsi	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc1e	        0x49394530	            cmp qword [r13 + 0x30], rax 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc22	          0x4889c5	                            mov rbp, rax	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc25	      0x490f436d30	          cmovae rbp, qword [r13 + 0x30]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc2a	          0x4801e9	                            add rcx, rbp	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc2d	          0x4939ca	                            cmp r10, rcx	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc30	     0xf8713010000	                            ja 0x400cd49	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc36	          0x4d85f6	                           test r14, r14	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400cc39	     0xf84cb0a0000	                            je 0x400d70a	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400cc3f	        0x49397630	            cmp qword [r14 + 0x30], rsi 	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400cc43	        0x4c0f47f2	                          cmova r14, rdx	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400cc47	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc4b	            0x89f8	                            mov eax, edi	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc4d	      0x498954c748	     mov qword [r15 + rax*8 + 0x48], rdx	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc52	            0x89f8	                            mov eax, edi	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc54	          0x83c001	                              add eax, 1	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc57	        0x89442410	             mov dword [rsp + 0x10], eax	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cc5b	      0x443b442420	            cmp r8d, dword [rsp + 0x20] 	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400cc60	     0xf849a0a0000	                            je 0x400d700	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400cc66	          0x4589c2	                           mov r10d, r8d	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400cc69	     0xf1f80000000	                         nop dword [rax]	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400cc70	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6921	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400cc74	          0x4885db	                           test rbx, rbx	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400cc77	     0xf84c2010000	                            je 0x400ce3f	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400cc7d	          0x4d85db	                           test r11, r11	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc80	     0xf85f2fdffff	                           jne 0x400ca78	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc86	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc8a	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc8e	          0x4839d6	                            cmp rsi, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc91	            0x723d	                            jb 0x400ccd0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc93	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc96	            0x89c8	                            mov eax, ecx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc98	      0x2500050000	                          and eax, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cc9d	      0x3d00040000	                          cmp eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cca2	     0xf8487000000	                            je 0x400cd2f	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cca8	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccac	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccb0	          0x4801fe	                            add rsi, rdi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccb3	        0x49394530	            cmp qword [r13 + 0x30], rax 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccb7	          0x4889c7	                            mov rdi, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccba	      0x490f437d30	          cmovae rdi, qword [r13 + 0x30]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccbf	          0x4801fa	                            add rdx, rdi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccc2	          0x4839d6	                            cmp rsi, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccc5	     0xf86f2fdffff	                           jbe 0x400cabd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cccb	       0xf1f440000	                   nop dword [rax + rax]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccd0	        0x4983fc04	                              cmp r12, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccd4	            0x759a	                           jne 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccd6	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccdd	        0x83780407	                  cmp dword [rax + 4], 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cce1	            0x758d	                           jne 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cce3	    0x488b8b900000	            mov rcx, qword [rbx + 0x90] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccea	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccee	          0x4839d1	                            cmp rcx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccf1	     0xf8279ffffff	                            jb 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccf7	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccfb	        0x48034b38	             add rcx, qword [rbx + 0x38]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ccff	          0x4801c2	                            add rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd02	          0x4839d1	                            cmp rcx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd05	     0xf8765ffffff	                            ja 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd0b	      0x807c242800	                cmp byte [rsp + 0x28], 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd10	     0xf85f1fdffff	                           jne 0x400cb07	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd16	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd19	      0xe9c6fdffff	                           jmp 0x400cae4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd1e	            0x31f6	                            xor esi, esi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd20	        0x4983fc07	                              cmp r12, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd24	     0xf8574fdffff	                           jne 0x400ca9e	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd2a	      0xe96bfdffff	                           jmp 0x400ca9a	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd2f	            0x31ff	                            xor edi, edi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd31	        0x4983fc07	                              cmp r12, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd35	     0xf8571ffffff	                           jne 0x400ccac	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd3b	      0xe968ffffff	                           jmp 0x400cca8	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd40	        0x488b7230	            mov rsi, qword [rdx + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd44	      0xe9a1feffff	                           jmp 0x400cbea	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cd49	        0x4983fc04	                              cmp r12, 4	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd4d	     0xf8453050000	                            je 0x400d2a6	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd53	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd58	    0xf6818a030000	          test byte [rcx + 0x38a], 0x40 	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd5f	            0x7445	                            je 0x400cda6	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd61	        0x4c8b5228	            mov r10, qword [rdx + 0x28] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd65	        0x498b6d18	            mov rbp, qword [r13 + 0x18] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd69	          0x4939ea	                            cmp r10, rbp	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd6c	            0x7238	                            jb 0x400cda6	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd6e	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd71	    0x81e100050000	                          and ecx, 0x500	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd77	    0x81f900040000	                          cmp ecx, 0x400	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd7d	     0xf855c060000	                           jne 0x400d3df	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd83	            0x31c9	                            xor ecx, ecx	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd85	          0x4084ff	                           test dil, dil	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd88	     0xf8551060000	                           jne 0x400d3df	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd8e	          0x4c01d1	                            add rcx, r10	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd91	        0x49394530	            cmp qword [r13 + 0x30], rax 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd95	      0x490f434530	          cmovae rax, qword [r13 + 0x30]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd9a	          0x4801e8	                            add rax, rbp	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cd9d	          0x4839c1	                            cmp rcx, rax	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cda0	     0xf8690feffff	                           jbe 0x400cc36	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400cda6	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400cdab	          0x4885c0	                           test rax, rax	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400cdae	        0x480f45d0	                         cmovne rdx, rax	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400cdb2	      0x4889542470	             mov qword [rsp + 0x70], rdx	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400cdb7	      0xe99ffeffff	                           jmp 0x400cc5b	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400cdbc	          0x80e504	                               and ch, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cdbf	     0xf84abfeffff	                            je 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cdc5	      0xbf01000000	                              mov edi, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cdca	      0xe93dfdffff	                           jmp 0x400cb0c	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400cdcf	          0x4585c0	                           test r8d, r8d	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400cdd2	     0xf852bfcffff	                           jne 0x400ca03	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400cdd8	        0x4883f801	                              cmp rax, 1	      6862	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400cddc	     0xf8597faffff	                           jne 0x400c879	      6862	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400cde2	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400cde7	            0x750b	                           jne 0x400cdf4	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400cde9	      0x49837d3000	               cmp qword [r13 + 0x30], 0	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400cdee	     0xf8585faffff	                           jne 0x400c879	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400cdf4	        0x498b5d18	            mov rbx, qword [r13 + 0x18] 	      6868	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400cdf8	      0xba05000000	                              mov edx, 5	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400cdfd	      0xbe00000000	                              mov esi, 0	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400ce02	      0xbf00000000	                              mov edi, 0	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400ce07	      0xe800000000	                          call 0x400ce0c	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400ce0c	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ce11	          0x4889c7	                            mov rdi, rax	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ce14	          0x4889da	                            mov rdx, rbx	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ce17	            0x31c0	                            xor eax, eax	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ce19	      0xe800000000	                          call 0x400ce1e	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ce1e	      0xe956faffff	                           jmp 0x400c879	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ce23	        0x8b4c246c	            mov ecx, dword [rsp + 0x6c] 	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ce27	      0x41806740cf	             and byte [r15 + 0x40], 0xcf	      6839	elf.c	FUNCTION_80	FOR_6
0x400ce2c	            0x85c9	                           test ecx, ecx	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ce2e	            0x7406	                            je 0x400ce36	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ce30	        0x4883f801	                              cmp rax, 1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ce34	            0x7499	                            je 0x400cdcf	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ce36	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ce3a	      0xe95bfbffff	                           jmp 0x400c99a	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ce3f	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ce44	          0x4539c2	                           cmp r10d, r8d	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce47	            0x7423	                            je 0x400ce6c	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce49	      0xbe3c1b0000	                         mov esi, 0x1b3c	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce4e	      0xbf00000000	                              mov edi, 0	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce53	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce58	      0x4489442408	                mov dword [rsp + 8], r8d	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce5d	      0xe800000000	                          call 0x400ce62	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce62	      0x448b442408	                mov r8d, dword [rsp + 8]	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce67	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400ce6c	      0x4439442410	            cmp dword [rsp + 0x10], r8d 	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x400ce71	     0xf840a050000	                            je 0x400d381	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x400ce77	          0x4d85f6	                           test r14, r14	      7004	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x400ce7a	    0x4c0f44742470	           cmove r14, qword [rsp + 0x70]	      7004	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x400ce80	      0x410fb65740	           movzx edx, byte [r15 + 0x40] 	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ce85	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x400ce89	          0xf6c220	                           test dl, 0x20	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ce8c	        0x49894718	             mov qword [r15 + 0x18], rax	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x400ce90	            0x7424	                            je 0x400ceb6	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ce92	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ce97	    0x4c89bc248000	             mov qword [rsp + 0x80], r15	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ce9f	          0x8b7b44	            mov edi, dword [rbx + 0x44] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400cea2	            0x89f9	                            mov ecx, edi	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400cea4	    0x89bc248c0000	             mov dword [rsp + 0x8c], edi	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ceab	         0xfaf4b40	            imul ecx, dword [rbx + 0x40]	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ceaf	          0x4829c8	                            sub rax, rcx	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ceb2	        0x49894718	             mov qword [r15 + 0x18], rax	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400ceb6	          0x83e210	                           and edx, 0x10	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400ceb9	            0x743a	                            je 0x400cef5	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cebb	        0x418b4e70	            mov ecx, dword [r14 + 0x70] 	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cebf	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cec4	      0xba01000000	                              mov edx, 1	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cec9	          0x48d3e2	                             shl rdx, cl	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cecc	          0x4889d1	                            mov rcx, rdx	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cecf	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400ced2	          0x4829d0	                            sub rax, rdx	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400ced5	        0x498b5538	            mov rdx, qword [r13 + 0x38] 	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400ced9	          0x4885d2	                           test rdx, rdx	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400cedc	     0xf8406050000	                            je 0x400d3e8	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400cee2	          0x4839d1	                            cmp rcx, rdx	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400cee5	     0xf86fd040000	                           jbe 0x400d3e8	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400ceeb	          0x48f7da	                                 neg rdx	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400ceee	          0x4821d0	                            and rax, rdx	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cef1	        0x49894718	             mov qword [r15 + 0x18], rax	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cef5	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400cefa	          0x4531d2	                          xor r10d, r10d	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400cefd	          0x48f7d8	                                 neg rax	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400cf00	      0x4889442410	             mov qword [rsp + 0x10], rax	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400cf05	          0x4c89f8	                            mov rax, r15	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400cf08	          0x4d89cf	                             mov r15, r9	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400cf0b	       0xf1f440000	                   nop dword [rax + rax]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400cf10	          0x4c89ff	                            mov rdi, r15	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf13	    0xc74044000000	               mov dword [rax + 0x44], 0	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400cf1a	          0x4989c7	                            mov r15, rax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf1d	            0x31ed	                            xor ebp, ebp	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400cf1f	          0x4531f6	                          xor r14d, r14d	      7050	elf.c	FUNCTION_80	FOR_6	DO_1
0x400cf22	          0x4889f8	                            mov rax, rdi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf25	      0xe9d3000000	                           jmp 0x400cffd	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf2a	    0x660f1f440000	                    nop word [rax + rax]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf30	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf33	    0x81e100050000	                          and ecx, 0x500	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf39	    0x81f900040000	                          cmp ecx, 0x400	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf3f	     0xf84ab010000	                            je 0x400d0f0	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf45	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf49	          0x4801d7	                            add rdi, rdx	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf4c	        0x498b4d30	            mov rcx, qword [r13 + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf50	        0x49394d28	            cmp qword [r13 + 0x28], rcx 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf54	      0x490f434d28	          cmovae rcx, qword [r13 + 0x28]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf59	          0x4801f1	                            add rcx, rsi	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf5c	          0x4839cf	                            cmp rdi, rcx	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf5f	     0xf87c0000000	                            ja 0x400d025	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cf65	        0x418b7f44	            mov edi, dword [r15 + 0x44] 	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400cf69	            0x85ff	                           test edi, edi	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400cf6b	     0xf8597010000	                           jne 0x400d108	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400cf71	      0x410fb64f40	           movzx ecx, byte [r15 + 0x40] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf76	          0x4531c9	                            xor r9d, r9d	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf79	          0xf6c110	                           test cl, 0x10	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf7c	            0x7409	                            je 0x400cf87	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf7e	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf83	        0x458b4b3c	            mov r9d, dword [r11 + 0x3c] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf87	        0x4883ee01	                              sub rsi, 1	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf8b	          0x4531db	                          xor r11d, r11d	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf8e	          0x83e120	                           and ecx, 0x20	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf91	      0x4889742408	                mov qword [rsp + 8], rsi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf96	            0x740e	                            je 0x400cfa6	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf98	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cf9d	        0x448b5e44	           mov r11d, dword [rsi + 0x44] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfa1	      0x440faf5e40	           imul r11d, dword [rsi + 0x40]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfa6	          0x8b4b70	            mov ecx, dword [rbx + 0x70] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfa9	      0xbe01000000	                              mov esi, 1	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfae	          0x48d3e6	                             shl rsi, cl	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfb1	          0x4889f1	                            mov rcx, rsi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfb4	      0x488b742408	                mov rsi, qword [rsp + 8]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfb9	          0x4801ce	                            add rsi, rcx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfbc	          0x48f7d9	                                 neg rcx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfbf	          0x4c01ce	                             add rsi, r9	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfc2	          0x4c01de	                            add rsi, r11	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfc5	          0x4821ce	                            and rsi, rcx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfc8	          0x4839f2	                            cmp rdx, rsi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfcb	     0xf8567080000	                           jne 0x400d838	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400cfd1	        0x4183c201	                             add r10d, 1	      7105	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cfd5	      0x49837d0001	                      cmp qword [r13], 1	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400cfda	          0x8d5701	                      lea edx, [rdi + 1]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cfdd	        0x41895744	             mov dword [r15 + 0x44], edx	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cfe1	      0x49895cff48	     mov qword [r15 + rdi*8 + 0x48], rbx	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cfe6	    0x48c704e80000	              mov qword [rax + rbp*8], 0	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400cfee	     0xf84b4010000	                            je 0x400d1a8	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400cff4	        0x4883c501	                              add rbp, 1	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400cff8	          0x4139e8	                            cmp r8d, ebp	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400cffb	            0x763f	                           jbe 0x400d03c	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400cffd	        0x4c8b24e8	            mov r12, qword [rax + rbp*8]	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400d001	          0x4d85e4	                           test r12, r12	      7057	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x400d004	            0x74ee	                            je 0x400cff4	      7057	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x400d006	      0x498b5c2468	            mov rbx, qword [r12 + 0x68] 	      7060	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400d00b	          0x4885db	                           test rbx, rbx	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d00e	     0xf845c010000	                            je 0x400d170	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d014	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d018	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d01c	          0x4839f2	                            cmp rdx, rsi	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d01f	     0xf830bffffff	                           jae 0x400cf30	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d025	      0x49837d0004	                      cmp qword [r13], 4	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d02a	            0x7454	                            je 0x400d080	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d02c	          0x4d85f6	                           test r14, r14	      7110	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400d02f	        0x4c0f44f3	                          cmove r14, rbx	      7110	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400d033	        0x4883c501	                              add rbp, 1	      7110	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400d037	          0x4139e8	                            cmp r8d, ebp	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400d03a	            0x77c1	                            ja 0x400cffd	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400d03c	          0x4889c7	                            mov rdi, rax	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400d03f	          0x4c89f8	                            mov rax, r15	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400d042	        0x448b5844	           mov r11d, dword [rax + 0x44] 	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d046	          0x4989ff	                            mov r15, rdi	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d049	          0x4585db	                         test r11d, r11d	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d04c	     0xf84ce010000	                            je 0x400d220	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d052	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x400d057	          0x4539c2	                           cmp r10d, r8d	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d05a	      0x4889442430	             mov qword [rsp + 0x30], rax	      7118	elf.c	FUNCTION_80	FOR_6	DO_1
0x400d05f	          0x488907	                    mov qword [rdi], rax	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x400d062	     0xf8250010000	                            jb 0x400d1b8	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d068	          0x4d89f9	                             mov r9, r15	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d06b	          0x4c89cf	                             mov rdi, r9	      7149	elf.c	FUNCTION_80	FOR_6	CALL_25
0x400d06e	      0xe800000000	                          call 0x400d073	      7149	elf.c	FUNCTION_80	FOR_6	CALL_25
0x400d073	      0xe916f8ffff	                           jmp 0x400c88e	      7149	elf.c	FUNCTION_80	FOR_6	CALL_25
0x400d078	     0xf1f84000000	                   nop dword [rax + rax]	      7149	elf.c	FUNCTION_80	FOR_6	CALL_25
0x400d080	    0x498b8c24e000	            mov rcx, qword [r12 + 0xe0] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d088	        0x83790407	                  cmp dword [rcx + 4], 7	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d08c	            0x759e	                           jne 0x400d02c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d08e	    0x498bbc249000	            mov rdi, qword [r12 + 0x90] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d096	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d09a	          0x4839cf	                            cmp rdi, rcx	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d09d	            0x728d	                            jb 0x400d02c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d09f	      0x49037c2438	             add rdi, qword [r12 + 0x38]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0a4	        0x49034d28	             add rcx, qword [r13 + 0x28]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0a8	          0x4839cf	                            cmp rdi, rcx	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0ab	     0xf877bffffff	                            ja 0x400d02c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0b1	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0b6	         0xfb67f44	           movzx edi, byte [rdi + 0x44] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0ba	            0x89f9	                            mov ecx, edi	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0bc	      0x40887c2408	                 mov byte [rsp + 8], dil	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0c1	          0x83e107	                              and ecx, 7	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0c4	          0x80f903	                               cmp cl, 3	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0c7	     0xf855fffffff	                           jne 0x400d02c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0cd	    0x49837c242800	               cmp qword [r12 + 0x28], 0	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0d3	     0xf8553ffffff	                           jne 0x400d02c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0d9	    0x49837c243000	               cmp qword [r12 + 0x30], 0	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0df	     0xf8547ffffff	                           jne 0x400d02c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0e5	      0xe97bfeffff	                           jmp 0x400cf65	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0ea	    0x660f1f440000	                    nop word [rax + rax]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0f0	            0x31ff	                            xor edi, edi	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0f2	      0x49837d0007	                      cmp qword [r13], 7	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0f7	     0xf854cfeffff	                           jne 0x400cf49	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d0fd	      0xe943feffff	                           jmp 0x400cf45	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d102	    0x660f1f440000	                    nop word [rax + rax]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400d108	          0x8d4fff	                      lea ecx, [rdi - 1]	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x400d10b	    0x49c7c3ffffff	             mov r11, 0xffffffffffffffff	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400d112	      0x498b74cf48	    mov rsi, qword [r15 + rcx*8 + 0x48] 	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x400d117	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400d11b	        0x48034e30	             add rcx, qword [rsi + 0x30]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400d11f	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400d124	          0x4801ce	                            add rsi, rcx	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400d127	            0x7208	                            jb 0x400d131	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400d129	      0x4823742410	             and rsi, qword [rsp + 0x10]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400d12e	          0x4989f3	                            mov r11, rsi	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400d131	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400d136	      0x4c8d4c16ff	                 lea r9, [rsi + rdx - 1]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400d13b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400d140	          0x4c21ce	                             and rsi, r9	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400d143	          0x4c39ca	                             cmp rdx, r9	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400d146	    0x49c7c1ffffff	              mov r9, 0xffffffffffffffff	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400d14d	        0x490f47f1	                           cmova rsi, r9	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400d151	          0x4839ca	                            cmp rdx, rcx	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400d154	     0xf82d2feffff	                            jb 0x400d02c	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400d15a	          0x4939f3	                            cmp r11, rsi	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400d15d	     0xf836efeffff	                           jae 0x400cfd1	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400d163	      0xe9c4feffff	                           jmp 0x400d02c	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400d168	     0xf1f84000000	                   nop dword [rax + rax]	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400d170	      0xbe961b0000	                         mov esi, 0x1b96	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d175	      0xbf00000000	                              mov edi, 0	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d17a	      0x4489542428	            mov dword [rsp + 0x28], r10d	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d17f	      0x4489442420	             mov dword [rsp + 0x20], r8d	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d184	      0x4889442408	                mov qword [rsp + 8], rax	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d189	      0xe800000000	                          call 0x400d18e	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d18e	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d193	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d198	      0x488b442408	                mov rax, qword [rsp + 8]	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d19d	      0xe972feffff	                           jmp 0x400d014	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d1a2	    0x660f1f440000	                    nop word [rax + rax]	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400d1a8	    0x41804c242440	              or byte [r12 + 0x24], 0x40	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400d1ae	      0xe941feffff	                           jmp 0x400cff4	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400d1b3	       0xf1f440000	                   nop dword [rax + rax]	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400d1b8	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400d1bd	        0x488b3c24	                    mov rdi, qword [rsp]	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400d1c1	      0x4489542420	            mov dword [rsp + 0x20], r10d	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400d1c6	      0x4489442408	                mov dword [rsp + 8], r8d	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400d1cb	      0xe800000000	                          call 0x400d1d0	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400d1d0	          0x4885c0	                           test rax, rax	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400d1d3	      0x448b442408	                mov r8d, dword [rsp + 8]	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400d1d8	      0x448b542420	           mov r10d, dword [rsp + 0x20] 	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400d1dd	     0xf848f010000	                            je 0x400d372	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400d1e3	        0x498b5500	                    mov rdx, qword [r13]	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d1e7	    0x48c700000000	                      mov qword [rax], 0	      7137	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d1ee	        0x48895008	                mov qword [rax + 8], rdx	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d1f2	        0x498b5508	                mov rdx, qword [r13 + 8]	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d1f6	        0x48895010	             mov qword [rax + 0x10], rdx	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d1fa	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d1fe	          0x83ca01	                               or edx, 1	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d201	          0x885040	               mov byte [rax + 0x40], dl	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d204	          0x83e2cd	                     and edx, 0xffffffcd	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d207	         0xa54246b	                or dl, byte [rsp + 0x6b]	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d20b	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d20f	          0x885040	               mov byte [rax + 0x40], dl	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d212	        0x48894818	             mov qword [rax + 0x18], rcx	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d216	      0xe9f5fcffff	                           jmp 0x400cf10	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d21b	       0xf1f440000	                   nop dword [rax + rax]	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400d220	      0xbeca1b0000	                         mov esi, 0x1bca	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d225	      0xbf00000000	                              mov edi, 0	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d22a	      0x4489542428	            mov dword [rsp + 0x28], r10d	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d22f	      0x4489442420	             mov dword [rsp + 0x20], r8d	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d234	      0x4889442408	                mov qword [rsp + 8], rax	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d239	      0xe800000000	                          call 0x400d23e	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d23e	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d243	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d248	      0x488b442408	                mov rax, qword [rsp + 8]	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d24d	      0xe900feffff	                           jmp 0x400d052	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400d252	    0x81e100050000	                          and ecx, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d258	    0x81f900040000	                          cmp ecx, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d25e	            0x740b	                            je 0x400d26b	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d260	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d265	     0xf859cf8ffff	                           jne 0x400cb07	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d26b	          0x4d85db	                           test r11, r11	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d26e	       0xfb67c2408	               movzx edi, byte [rsp + 8]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d273	     0xf8477010000	                            je 0x400d3f0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d279	        0x4c395b30	            cmp qword [rbx + 0x30], r11 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d27d	     0xf8589f8ffff	                           jne 0x400cb0c	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d283	          0x488b33	                    mov rsi, qword [rbx]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d286	      0xbf00000000	                              mov edi, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d28b	      0xb909000000	                              mov ecx, 9	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d290	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d292	     0xf846ff8ffff	                            je 0x400cb07	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d298	      0xe9d3f9ffff	                           jmp 0x400cc70	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d29d	        0x4c8b5238	            mov r10, qword [rdx + 0x38] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2a1	      0xe975f9ffff	                           jmp 0x400cc1b	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2a6	    0x488b8be00000	            mov rcx, qword [rbx + 0xe0] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2ad	        0x83790407	                  cmp dword [rcx + 4], 7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2b1	     0xf859cfaffff	                           jne 0x400cd53	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2b7	    0x4c8b93900000	            mov r10, qword [rbx + 0x90] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2be	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2c2	          0x4939ca	                            cmp r10, rcx	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2c5	     0xf8288faffff	                            jb 0x400cd53	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2cb	        0x4c035338	             add r10, qword [rbx + 0x38]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2cf	          0x4801c1	                            add rcx, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2d2	          0x4939ca	                            cmp r10, rcx	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2d5	     0xf8778faffff	                            ja 0x400cd53	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2db	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2e0	         0xfb64944	           movzx ecx, byte [rcx + 0x44] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2e4	    0x888c24900000	               mov byte [rsp + 0x90], cl	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2eb	          0x83e107	                              and ecx, 7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2ee	          0x80f903	                               cmp cl, 3	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2f1	     0xf855cfaffff	                           jne 0x400cd53	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2f7	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d2fc	     0xf8551faffff	                           jne 0x400cd53	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d302	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d307	     0xf8429f9ffff	                            je 0x400cc36	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d30d	      0xe941faffff	                           jmp 0x400cd53	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d312	    0x660f1f440000	                    nop word [rax + rax]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d318	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400d31c	        0x49397d18	            cmp qword [r13 + 0x18], rdi 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400d320	     0xf8597f3ffff	                           jne 0x400c6bd	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400d326	      0xe9a9f6ffff	                           jmp 0x400c9d4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400d32b	        0x488b3c24	                    mov rdi, qword [rsp]	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400d32f	      0xbe48000000	                           mov esi, 0x48	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400d334	      0xe800000000	                          call 0x400d339	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400d339	          0x4885c0	                           test rax, rax	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400d33c	          0x4989c7	                            mov r15, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400d33f	            0x7439	                            je 0x400d37a	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400d341	        0x498b4500	                    mov rax, qword [r13]	      6822	elf.c	FUNCTION_80	FOR_6
0x400d345	    0x49c707000000	                      mov qword [r15], 0	      6821	elf.c	FUNCTION_80	FOR_6
0x400d34c	            0x31db	                            xor ebx, ebx	      6794	elf.c	FUNCTION_80	FOR_6
0x400d34e	          0x4531c0	                            xor r8d, r8d	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400d351	            0x31ed	                            xor ebp, ebp	      6824	elf.c	FUNCTION_80	FOR_6
0x400d353	    0x48c744246048	           mov qword [rsp + 0x60], 0x48 	      6824	elf.c	FUNCTION_80	FOR_6
0x400d35c	        0x49894708	                mov qword [r15 + 8], rax	      6822	elf.c	FUNCTION_80	FOR_6
0x400d360	        0x498b5508	                mov rdx, qword [r13 + 8]	      6823	elf.c	FUNCTION_80	FOR_6
0x400d364	      0x41804f4001	                 or byte [r15 + 0x40], 1	      6824	elf.c	FUNCTION_80	FOR_6
0x400d369	        0x49895710	             mov qword [r15 + 0x10], rdx	      6823	elf.c	FUNCTION_80	FOR_6
0x400d36d	      0xe967f4ffff	                           jmp 0x400c7d9	      6823	elf.c	FUNCTION_80	FOR_6
0x400d372	          0x4c89ff	                            mov rdi, r15	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_24
0x400d375	      0xe800000000	                          call 0x400d37a	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_24
0x400d37a	            0x31c0	                            xor eax, eax	      7131	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400d37c	      0xe926efffff	                           jmp 0x400c2a7	      7131	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400d381	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x400d385	    0x8bac24880000	            mov ebp, dword [rsp + 0x88] 	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d38c	        0x41894744	             mov dword [r15 + 0x44], eax	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x400d390	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x400d395	            0x85ed	                           test ebp, ebp	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d397	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      6984	elf.c	FUNCTION_80	FOR_6	IF_27
0x400d39c	          0x4c8938	                    mov qword [rax], r15	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x400d39f	     0xf84c6fcffff	                            je 0x400d06b	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3a5	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3aa	    0xf6808a030000	          test byte [rax + 0x38a], 0x40 	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3b1	     0xf85b4fcffff	                           jne 0x400d06b	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3b7	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3bb	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3bf	          0x4839d0	                            cmp rax, rdx	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3c2	     0xf84a3fcffff	                            je 0x400d06b	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3c8	      0x41f6474030	           test byte [r15 + 0x40], 0x30 	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3cd	     0xf8598fcffff	                           jne 0x400d06b	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3d3	          0x4829d0	                            sub rax, rdx	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3d6	        0x49894720	             mov qword [r15 + 0x20], rax	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3da	      0xe98cfcffff	                           jmp 0x400d06b	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400d3df	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d3e3	      0xe9a6f9ffff	                           jmp 0x400cd8e	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400d3e8	          0x4889ca	                            mov rdx, rcx	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400d3eb	      0xe9fbfaffff	                           jmp 0x400ceeb	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400d3f0	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d3f4	        0x49395518	            cmp qword [r13 + 0x18], rdx 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d3f8	     0xf850ef7ffff	                           jne 0x400cb0c	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d3fe	      0xe980feffff	                           jmp 0x400d283	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400d403	      0xc644242001	                mov byte [rsp + 0x20], 1	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400d408	    0xc78424880000	               mov dword [rsp + 0x88], 1	      6695	elf.c	FUNCTION_80	FOR_2	IF_1
0x400d413	      0xe9dcefffff	                           jmp 0x400c3f4	      6695	elf.c	FUNCTION_80	FOR_2	IF_1
0x400d418	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400d41f	    0xf6808a030000	          test byte [rax + 0x38a], 0x40 	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400d426	     0xf855c020000	                           jne 0x400d688	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400d42c	        0x488b0424	                    mov rax, qword [rsp]	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d430	    0x4c8bb8900000	            mov r15, qword [rax + 0x90] 	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d437	          0x4d85ff	                           test r15, r15	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d43a	          0x4c89f8	                            mov rax, r15	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d43d	            0x740d	                            je 0x400d44c	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d43f	        0x806024bf	             and byte [rax + 0x24], 0xbf	      7393	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d443	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7392	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d447	          0x4885c0	                           test rax, rax	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d44a	            0x75f3	                           jne 0x400d43f	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400d44c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_5
0x400d451	        0x448b5044	           mov r10d, dword [rax + 0x44] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_5
0x400d455	          0x4585d2	                         test r10d, r10d	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d458	     0xf8429030000	                            je 0x400d787	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d45e	        0x418d42ff	                      lea eax, [r10 - 1]	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d462	          0x4d89ee	                            mov r14, r13	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d465	        0x4883c001	                              add rax, 1	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d469	        0x48c1e006	                              shl rax, 6	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d46d	          0x4c01e8	                            add rax, r13	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d470	      0x4889442420	             mov qword [rsp + 0x20], rax	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d475	      0x49837e2000	               cmp qword [r14 + 0x20], 0	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400d47a	            0x7518	                           jne 0x400d494	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400d47c	      0x49837e3000	               cmp qword [r14 + 0x30], 0	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400d481	            0x7511	                           jne 0x400d494	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400d483	          0x498b06	                    mov rax, qword [r14]	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400d486	        0x4883e802	                              sub rax, 2	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400d48a	        0x4883f801	                              cmp rax, 1	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400d48e	     0xf8604020000	                           jbe 0x400d698	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400d494	    0x498b84249000	            mov rax, qword [r12 + 0x90] 	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d49c	          0x4885c0	                           test rax, rax	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d49f	     0xf84d3020000	                            je 0x400d778	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d4a5	          0x4d8b0e	                     mov r9, qword [r14]	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d4a8	        0x4983f907	                               cmp r9, 7	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d4ac	        0x498d59fa	                       lea rbx, [r9 - 6]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4b0	        0x410f94c3	                               sete r11b	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4b4	    0x4981f952e574	                      cmp r9, 0x6474e552	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4bb	           0xf94c2	                                 sete dl	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4be	      0x48895c2408	                mov qword [rsp + 8], rbx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4c3	          0x4409da	                            or edx, r11d	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4c6	        0x4983f901	                               cmp r9, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4ca	        0x410f94c3	                               sete r11b	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4ce	          0x4109d3	                            or r11d, edx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4d1	        0x498d51ff	                       lea rdx, [r9 - 1]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4d5	        0x4883fa01	                              cmp rdx, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4d9	    0x498d91b01a8b	              lea rdx, [r9 - 0x6474e550]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4e0	           0xf97c1	                                 seta cl	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4e3	        0x4883fa02	                              cmp rdx, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4e7	           0xf97c2	                                 seta dl	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4ea	            0x21d1	                            and ecx, edx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4ec	        0x884c2410	               mov byte [rsp + 0x10], cl	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4f0	      0xe9c1000000	                           jmp 0x400d5b6	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4f5	           0xf1f00	                         nop dword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4f8	    0x48837c240801	                  cmp qword [rsp + 8], 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d4fe	     0xf86a5000000	                           jbe 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d504	          0x83e102	                              and ecx, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d507	     0xf85da000000	                           jne 0x400d5e7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d50d	      0x807c241000	                cmp byte [rsp + 0x10], 0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d512	     0xf8491000000	                            je 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d518	          0x8b5e04	                mov ebx, dword [rsi + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d51b	          0x83fb08	                              cmp ebx, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d51e	            0x7426	                            je 0x400d546	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d520	        0x4c8b4618	              mov r8, qword [rsi + 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d524	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d528	          0x4939e8	                             cmp r8, rbp	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d52b	            0x727c	                            jb 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d52d	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d531	          0x4901f8	                             add r8, rdi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d534	          0x4929e8	                             sub r8, rbp	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d537	        0x4d3b4628	              cmp r8, qword [r14 + 0x28]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d53b	            0x776c	                            ja 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d53d	          0x4885c9	                           test rcx, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d540	     0xf857d020000	                           jne 0x400d7c3	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d546	        0x4983f902	                               cmp r9, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d54a	     0xf84ce000000	                            je 0x400d61e	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d550	          0x4885d2	                           test rdx, rdx	      7424	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d553	     0xf843f010000	                            je 0x400d698	      7424	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d559	          0x8b5a20	            mov ebx, dword [rdx + 0x20] 	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d55c	          0x395820	            cmp dword [rax + 0x20], ebx 	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d55f	     0xf8533010000	                           jne 0x400d698	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d565	        0x488b5a30	            mov rbx, qword [rdx + 0x30] 	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d569	        0x48395830	            cmp qword [rax + 0x30], rbx 	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d56d	     0xf8525010000	                           jne 0x400d698	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d573	        0x488b5a28	            mov rbx, qword [rdx + 0x28] 	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d577	        0x48395828	            cmp qword [rax + 0x28], rbx 	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d57b	     0xf8517010000	                           jne 0x400d698	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d581	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d585	        0x48395838	            cmp qword [rax + 0x38], rbx 	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d589	     0xf8509010000	                           jne 0x400d698	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d58f	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d593	        0x48395840	            cmp qword [rax + 0x40], rbx 	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d597	     0xf85fb000000	                           jne 0x400d698	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d59d	          0x8b5a70	            mov ebx, dword [rdx + 0x70] 	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d5a0	          0x395870	            cmp dword [rax + 0x70], ebx 	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d5a3	     0xf85ef000000	                           jne 0x400d698	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400d5a9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7410	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d5ad	          0x4885c0	                           test rax, rax	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d5b0	     0xf84c2010000	                            je 0x400d778	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d5b6	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      7414	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400d5ba	          0x4885d2	                           test rdx, rdx	      7415	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400d5bd	            0x7404	                            je 0x400d5c3	      7415	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400d5bf	        0x804a2440	              or byte [rdx + 0x24], 0x40	      7416	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400d5c3	    0x488bb0e00000	            mov rsi, qword [rax + 0xe0] 	      7419	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	CALL_7
0x400d5ca	        0x488b4e08	                mov rcx, qword [rsi + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5ce	          0x4889cf	                            mov rdi, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5d1	    0x81e700040000	                          and edi, 0x400	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5d7	     0xf841bffffff	                            je 0x400d4f8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5dd	          0x4584db	                         test r11b, r11b	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5e0	            0x74c7	                            je 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5e2	      0xe91dffffff	                           jmp 0x400d504	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5e7	          0x8b5e04	                mov ebx, dword [rsi + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5ea	          0x83fb08	                              cmp ebx, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5ed	     0xf852dffffff	                           jne 0x400d520	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5f3	        0x4c8b4610	              mov r8, qword [rsi + 0x10]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5f7	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5fb	          0x4939e8	                             cmp r8, rbp	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d5fe	            0x72a9	                            jb 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d600	          0x4929e8	                             sub r8, rbp	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d603	          0x4885ff	                           test rdi, rdi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d606	     0xf85d0010000	                           jne 0x400d7dc	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d60c	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d610	          0x4c01c7	                             add rdi, r8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d613	        0x493b7e30	            cmp rdi, qword [r14 + 0x30] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d617	            0x7790	                            ja 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d619	      0xe928ffffff	                           jmp 0x400d546	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d61e	      0x48837e2000	               cmp qword [rsi + 0x20], 0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d623	     0xf8527ffffff	                           jne 0x400d550	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d629	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d62d	          0x4885ff	                           test rdi, rdi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d630	     0xf841affffff	                            je 0x400d550	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d636	          0x83fb08	                              cmp ebx, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d639	            0x741e	                            je 0x400d659	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d63b	        0x4c8b4618	              mov r8, qword [rsi + 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d63f	        0x498b5e10	            mov rbx, qword [r14 + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d643	          0x4939d8	                             cmp r8, rbx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d646	     0xf865dffffff	                           jbe 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d64c	          0x4929d8	                             sub r8, rbx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d64f	        0x4d3b4628	              cmp r8, qword [r14 + 0x28]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d653	     0xf8350ffffff	                           jae 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d659	          0x4885c9	                           test rcx, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d65c	     0xf84eefeffff	                            je 0x400d550	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d662	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d666	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d66a	          0x4839f1	                            cmp rcx, rsi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d66d	     0xf8636ffffff	                           jbe 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d673	          0x4829f1	                            sub rcx, rsi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d676	          0x4839cf	                            cmp rdi, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d679	     0xf862affffff	                           jbe 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d67f	      0xe9ccfeffff	                           jmp 0x400d550	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d684	         0xf1f4000	                         nop dword [rax]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d688	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_10
0x400d68d	            0x31db	                            xor ebx, ebx	      7458	elf.c	FUNCTION_82	IF_10
0x400d68f	        0x448b5044	           mov r10d, dword [rax + 0x44] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_10
0x400d693	          0x4585d2	                         test r10d, r10d	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_11
0x400d696	            0x7438	                            je 0x400d6d0	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_11
0x400d698	          0x4531f6	                          xor r14d, r14d	      7358	elf.c	FUNCTION_81
0x400d69b	            0x31db	                            xor ebx, ebx	      7358	elf.c	FUNCTION_81
0x400d69d	    0x48bd00000000	         movabs rbp, 0x4000000000000000 	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400d6a7	            0xeb0d	                           jmp 0x400d6b6	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400d6a9	        0x4183c601	                             add r14d, 1	      7462	elf.c	FUNCTION_82	IF_10	FOR_5
0x400d6ad	        0x4983c540	                           add r13, 0x40	      7462	elf.c	FUNCTION_82	IF_10	FOR_5
0x400d6b1	          0x4539d6	                          cmp r14d, r10d	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_11
0x400d6b4	            0x731a	                           jae 0x400d6d0	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_11
0x400d6b6	      0x49837d0001	                      cmp qword [r13], 1	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400d6bb	            0x75ec	                           jne 0x400d6a9	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400d6bd	        0x4d8b7d38	            mov r15, qword [r13 + 0x38] 	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400d6c1	          0x4939df	                            cmp r15, rbx	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400d6c4	            0x76e3	                           jbe 0x400d6a9	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400d6c6	          0x4939ef	                            cmp r15, rbp	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400d6c9	            0x7747	                            ja 0x400d712	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400d6cb	          0x4c89fb	                            mov rbx, r15	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400d6ce	            0xebd9	                           jmp 0x400d6a9	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400d6d0	        0x488b0424	                    mov rax, qword [rsp]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6d4	        0x488b4808	                mov rcx, qword [rax + 8]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6d8	    0x488b81680300	           mov rax, qword [rcx + 0x368] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6df	        0x48395810	            cmp qword [rax + 0x10], rbx 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6e3	            0x7565	                           jne 0x400d74a	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6e5	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6ed	      0x498b542408	                mov rdx, qword [r12 + 8]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6f2	      0x4889442418	             mov qword [rsp + 0x18], rax	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6f7	        0x4c8b5060	            mov r10, qword [rax + 0x60] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d6fb	      0xe94aecffff	                           jmp 0x400c34a	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d700	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d705	      0xe962f7ffff	                           jmp 0x400ce6c	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400d70a	          0x4989d6	                            mov r14, rdx	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400d70d	      0xe935f5ffff	                           jmp 0x400cc47	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400d712	      0xba05000000	                              mov edx, 5	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d717	      0xbe00000000	                              mov esi, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d71c	      0xbf00000000	                              mov edi, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d721	      0x4489542408	               mov dword [rsp + 8], r10d	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d726	      0xe800000000	                          call 0x400d72b	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d72b	          0x4c89fa	                            mov rdx, r15	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d72e	          0x4889c7	                            mov rdi, rax	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d731	          0x4c89e6	                            mov rsi, r12	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d734	            0x31c0	                            xor eax, eax	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d736	      0xe800000000	                          call 0x400d73b	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d73b	      0x448b542408	               mov r10d, dword [rsp + 8]	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d740	      0xe964ffffff	                           jmp 0x400d6a9	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400d745	      0xe800000000	                          call 0x400d74a	      7691	elf.c	FUNCTION_86
0x400d74a	          0x488b39	                    mov rdi, qword [rcx]	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d74d	          0x4889de	                            mov rsi, rbx	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d750	      0xe800000000	                          call 0x400d755	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d755	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d75d	        0x488b1c24	                    mov rbx, qword [rsp]	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d761	      0x498b542408	                mov rdx, qword [r12 + 8]	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d766	      0x4889442418	             mov qword [rsp + 0x18], rax	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d76b	        0x488b4b08	                mov rcx, qword [rbx + 8]	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d76f	        0x4c8b5060	            mov r10, qword [rax + 0x60] 	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d773	      0xe9d2ebffff	                           jmp 0x400c34a	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400d778	        0x4983c640	                           add r14, 0x40	      7398	elf.c	FUNCTION_82	IF_3	FOR_2
0x400d77c	      0x4c3b742420	            cmp r14, qword [rsp + 0x20] 	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d781	     0xf85eefcffff	                           jne 0x400d475	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400d787	          0x4d85ff	                           test r15, r15	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400d78a	     0xf84c5000000	                            je 0x400d855	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400d790	      0x410fb64724	           movzx eax, byte [r15 + 0x24] 	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x400d795	            0xa840	                           test al, 0x40	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x400d797	     0xf84ebfeffff	                            je 0x400d688	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x400d79d	          0x83e0bf	                     and eax, 0xffffffbf	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x400d7a0	        0x41884724	               mov byte [r15 + 0x24], al	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x400d7a4	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      7439	elf.c	FUNCTION_82	IF_3	FOR_4
0x400d7a8	            0xebdd	                           jmp 0x400d787	      7439	elf.c	FUNCTION_82	IF_3	FOR_4
0x400d7aa	    0xc74424100000	               mov dword [rsp + 0x10], 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400d7b2	    0x48c744247000	               mov qword [rsp + 0x70], 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400d7bb	          0x4531f6	                          xor r14d, r14d	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400d7be	      0xe986f6ffff	                           jmp 0x400ce49	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400d7c3	        0x4c8b4610	              mov r8, qword [rsi + 0x10]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7c7	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7cb	          0x4939e8	                             cmp r8, rbp	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7ce	     0xf82d5fdffff	                            jb 0x400d5a9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7d4	          0x4929e8	                             sub r8, rbp	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7d7	      0xe934feffff	                           jmp 0x400d610	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7dc	            0x31ff	                            xor edi, edi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7de	        0x4983f907	                               cmp r9, 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7e2	     0xf8528feffff	                           jne 0x400d610	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7e8	      0xe91ffeffff	                           jmp 0x400d60c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400d7ed	          0x4889ea	                            mov rdx, rbp	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400d7f0	          0x4829ca	                            sub rdx, rcx	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400d7f3	          0x4885d2	                           test rdx, rdx	      6745	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400d7f6	            0x7e0e	                           jle 0x400d806	      6745	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400d7f8	          0x4801d7	                            add rdi, rdx	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400d7fb	          0x4c01c2	                             add rdx, r8	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400d7fe	        0x48897830	             mov qword [rax + 0x30], rdi	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400d802	        0x48895028	             mov qword [rax + 0x28], rdx	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400d806	    0x49c707000000	                      mov qword [r15], 0	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400d80d	          0x4531f6	                          xor r14d, r14d	      6754	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400d810	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400d815	      0xe905ecffff	                           jmp 0x400c41f	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400d81a	        0x488b0424	                    mov rax, qword [rsp]	      7152	elf.c	FUNCTION_80	CALL_26
0x400d81e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400d825	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400d82c	    0x48c700000000	                      mov qword [rax], 0	      7152	elf.c	FUNCTION_80	CALL_26
0x400d833	      0xe9b9eaffff	                           jmp 0x400c2f1	      7152	elf.c	FUNCTION_80	CALL_26
0x400d838	      0xba00000000	                              mov edx, 0	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_19
0x400d83d	      0xbea81b0000	                         mov esi, 0x1ba8	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_19
0x400d842	      0xbf00000000	                              mov edi, 0	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_19
0x400d847	      0xe800000000	                          call 0x400d84c	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_19
0x400d84c	        0x49896f18	             mov qword [r15 + 0x18], rbp	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400d850	      0xe995f3ffff	                           jmp 0x400cbea	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400d855	    0x4d8b9424f800	            mov r10, qword [r12 + 0xf8] 	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400d85d	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      7209	elf.c	FUNCTION_81
0x400d869	            0x31d2	                            xor edx, edx	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400d86b	        0x418b4244	            mov eax, dword [r10 + 0x44] 	      7215	elf.c	FUNCTION_81	CALL_2
0x400d86f	        0x4d8b7a60	            mov r15, qword [r10 + 0x60] 	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400d873	            0x39d0	                            cmp eax, edx	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400d875	            0x761a	                           jbe 0x400d891	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400d877	        0x4883c201	                              add rdx, 1	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400d87b	          0x4889d1	                            mov rcx, rdx	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400d87e	        0x48c1e106	                              shl rcx, 6	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400d882	    0x49837c0fe000	         cmp qword [r15 + rcx - 0x20], 0	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400d888	            0x74e9	                            je 0x400d873	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400d88a	      0xba01000000	                              mov edx, 1	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400d88f	            0xeb02	                           jmp 0x400d893	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400d891	            0x31d2	                            xor edx, edx	      7214	elf.c	FUNCTION_81
0x400d893	        0x48c1e006	                              shl rax, 6	      7214	elf.c	FUNCTION_81
0x400d897	    0xc74424080000	                  mov dword [rsp + 8], 0	      7204	elf.c	FUNCTION_81
0x400d89f	          0x4d89d5	                            mov r13, r10	      7204	elf.c	FUNCTION_81
0x400d8a2	          0x4c01f8	                            add rax, r15	      7204	elf.c	FUNCTION_81
0x400d8a5	      0x4c89642420	             mov qword [rsp + 0x20], r12	      7204	elf.c	FUNCTION_81
0x400d8aa	      0x4889442448	             mov qword [rsp + 0x48], rax	      7204	elf.c	FUNCTION_81
0x400d8af	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	      7210	elf.c	FUNCTION_81
0x400d8b7	      0x4889442418	             mov qword [rsp + 0x18], rax	      7210	elf.c	FUNCTION_81
0x400d8bc	          0x8d0412	                    lea eax, [rdx + rdx]	      7266	elf.c	FUNCTION_81	FOR_2
0x400d8bf	        0x88442454	               mov byte [rsp + 0x54], al	      7266	elf.c	FUNCTION_81	FOR_2
0x400d8c3	      0x4c3b7c2448	            cmp r15, qword [rsp + 0x48] 	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x400d8c8	     0xf8434050000	                            je 0x400de02	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x400d8ce	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d8d3	            0x31ed	                            xor ebp, ebp	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d8d5	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d8dc	          0x4885db	                           test rbx, rbx	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d8df	     0xf846f010000	                            je 0x400da54	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d8e5	          0x498b3f	                    mov rdi, qword [r15]	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d8e8	          0x4989d8	                             mov r8, rbx	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d8eb	            0x31db	                            xor ebx, ebx	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d8ed	        0x4c8d5fff	                      lea r11, [rdi - 1]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d8f1	    0x4c8d97b01a8b	             lea r10, [rdi - 0x6474e550]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d8f8	        0x4c8d67fa	                      lea r12, [rdi - 6]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d8fc	            0xeb2b	                           jmp 0x400d929	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d8fe	        0x4883ff07	                              cmp rdi, 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d902	        0x410f94c1	                                sete r9b	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d906	    0x4881ff52e574	                     cmp rdi, 0x6474e552	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d90d	        0x400f94c6	                                sete sil	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d911	          0x4108f1	                             or r9b, sil	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d914	            0x752f	                           jne 0x400d945	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d916	        0x4883ff01	                              cmp rdi, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d91a	            0x7429	                            je 0x400d945	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d91c	        0x4d8b4010	               mov r8, qword [r8 + 0x10]	      7239	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d920	          0x4d85c0	                             test r8, r8	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d923	     0xf8400050000	                            je 0x400de29	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400d929	    0x498b80e00000	              mov rax, qword [r8 + 0xe0]	      7241	elf.c	FUNCTION_81	FOR_2	FOR_3	CALL_5
0x400d930	        0x488b4808	                mov rcx, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d934	          0x4889ca	                            mov rdx, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d937	    0x81e200040000	                          and edx, 0x400	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d93d	            0x75bf	                           jne 0x400d8fe	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d93f	        0x4983fc01	                              cmp r12, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d943	            0x76d7	                           jbe 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d945	          0x83e102	                              and ecx, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d948	            0x754a	                           jne 0x400d994	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d94a	        0x4983fb01	                              cmp r11, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d94e	            0x76cc	                           jbe 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d950	        0x4983fa02	                              cmp r10, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d954	            0x76c6	                           jbe 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d956	        0x448b4804	                mov r9d, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d95a	        0x4183f908	                              cmp r9d, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d95e	            0x7422	                            je 0x400d982	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d960	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d964	        0x4d8b7710	            mov r14, qword [r15 + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d968	          0x4c39f6	                            cmp rsi, r14	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d96b	            0x72af	                            jb 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d96d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d971	          0x4801d6	                            add rsi, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d974	          0x4c29f6	                            sub rsi, r14	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d977	        0x493b7728	            cmp rsi, qword [r15 + 0x28] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d97b	            0x779f	                            ja 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d97d	          0x4885c9	                           test rcx, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d980	            0x754c	                           jne 0x400d9ce	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d982	        0x49833f02	                      cmp qword [r15], 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d986	            0x745c	                            je 0x400d9e4	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d988	          0x4885db	                           test rbx, rbx	      7244	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x400d98b	        0x490f44d8	                           cmove rbx, r8	      7244	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x400d98f	          0x83c501	                              add ebp, 1	      7246	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2
0x400d992	            0xeb88	                           jmp 0x400d91c	      7246	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2
0x400d994	        0x448b4804	                mov r9d, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d998	        0x4183f908	                              cmp r9d, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d99c	            0x75c2	                           jne 0x400d960	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d99e	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9a2	        0x4d8b7718	            mov r14, qword [r15 + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9a6	          0x4c39f6	                            cmp rsi, r14	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9a9	     0xf826dffffff	                            jb 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9af	          0x4c29f6	                            sub rsi, r14	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9b2	          0x4885d2	                           test rdx, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9b5	     0xf8588000000	                           jne 0x400da43	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9bb	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9bf	          0x4801f2	                            add rdx, rsi	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9c2	        0x493b5730	            cmp rdx, qword [r15 + 0x30] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9c6	     0xf8750ffffff	                            ja 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9cc	            0xebb4	                           jmp 0x400d982	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9ce	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9d2	        0x4d8b7718	            mov r14, qword [r15 + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9d6	          0x4c39f6	                            cmp rsi, r14	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9d9	     0xf823dffffff	                            jb 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9df	          0x4c29f6	                            sub rsi, r14	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9e2	            0xebdb	                           jmp 0x400d9bf	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9e4	      0x4883782000	               cmp qword [rax + 0x20], 0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9e9	            0x759d	                           jne 0x400d988	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9eb	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9ef	          0x4885d2	                           test rdx, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9f2	            0x7494	                            je 0x400d988	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9f4	        0x4183f908	                              cmp r9d, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9f8	            0x741e	                            je 0x400da18	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9fa	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400d9fe	        0x4d8b4f10	              mov r9, qword [r15 + 0x10]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da02	          0x4c39ce	                             cmp rsi, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da05	     0xf8611ffffff	                           jbe 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da0b	          0x4c29ce	                             sub rsi, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da0e	        0x493b7728	            cmp rsi, qword [r15 + 0x28] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da12	     0xf8304ffffff	                           jae 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da18	          0x4885c9	                           test rcx, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da1b	     0xf8467ffffff	                            je 0x400d988	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da21	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da25	        0x498b4f18	            mov rcx, qword [r15 + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da29	          0x4839c8	                            cmp rax, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da2c	     0xf86eafeffff	                           jbe 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da32	          0x4829c8	                            sub rax, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da35	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da38	     0xf86defeffff	                           jbe 0x400d91c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da3e	      0xe945ffffff	                           jmp 0x400d988	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da43	            0x31d2	                            xor edx, edx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da45	        0x49833f07	                      cmp qword [r15], 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da49	     0xf8570ffffff	                           jne 0x400d9bf	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da4f	      0xe967ffffff	                           jmp 0x400d9bb	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400da54	      0xbe50000000	                           mov esi, 0x50	      7252	elf.c	FUNCTION_81	FOR_2
0x400da59	        0x488b3c24	                    mov rdi, qword [rsp]	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x400da5d	      0xe800000000	                          call 0x400da62	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x400da62	          0x4885c0	                           test rax, rax	      7256	elf.c	FUNCTION_81	FOR_2	IF_5
0x400da65	     0xf840ff9ffff	                            je 0x400d37a	      7256	elf.c	FUNCTION_81	FOR_2	IF_5
0x400da6b	          0x498b17	                    mov rdx, qword [r15]	      7262	elf.c	FUNCTION_81	FOR_2
0x400da6e	    0x48c700000000	                      mov qword [rax], 0	      7261	elf.c	FUNCTION_81	FOR_2
0x400da75	        0x48895008	                mov qword [rax + 8], rdx	      7262	elf.c	FUNCTION_81	FOR_2
0x400da79	        0x498b4f08	                mov rcx, qword [r15 + 8]	      7263	elf.c	FUNCTION_81	FOR_2
0x400da7d	        0x48894810	             mov qword [rax + 0x10], rcx	      7263	elf.c	FUNCTION_81	FOR_2
0x400da81	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      7264	elf.c	FUNCTION_81	FOR_2
0x400da85	          0x83c901	                               or ecx, 1	      7264	elf.c	FUNCTION_81	FOR_2
0x400da88	          0x884840	               mov byte [rax + 0x40], cl	      7264	elf.c	FUNCTION_81	FOR_2
0x400da8b	          0x83e1fd	                     and ecx, 0xfffffffd	      7266	elf.c	FUNCTION_81	FOR_2
0x400da8e	         0xb4c2454	              or ecx, dword [rsp + 0x54]	      7266	elf.c	FUNCTION_81	FOR_2
0x400da92	        0x4d8b7720	            mov r14, qword [r15 + 0x20] 	      7265	elf.c	FUNCTION_81	FOR_2
0x400da96	          0x884840	               mov byte [rax + 0x40], cl	      7266	elf.c	FUNCTION_81	FOR_2
0x400da99	        0x4c897018	             mov qword [rax + 0x18], r14	      7265	elf.c	FUNCTION_81	FOR_2
0x400da9d	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      7267	elf.c	FUNCTION_81	FOR_2
0x400daa1	    0x48c740200000	               mov qword [rax + 0x20], 0	      7269	elf.c	FUNCTION_81	FOR_2
0x400daa9	        0x48897028	             mov qword [rax + 0x28], rsi	      7267	elf.c	FUNCTION_81	FOR_2
0x400daad	            0x89ce	                            mov esi, ecx	      7268	elf.c	FUNCTION_81	FOR_2
0x400daaf	          0x83ce04	                               or esi, 4	      7268	elf.c	FUNCTION_81	FOR_2
0x400dab2	        0x40887040	              mov byte [rax + 0x40], sil	      7268	elf.c	FUNCTION_81	FOR_2
0x400dab6	    0x488db2af1a8b	             lea rsi, [rdx - 0x6474e551]	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400dabd	        0x4883fe01	                              cmp rsi, 1	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400dac1	            0x770e	                            ja 0x400dad1	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400dac3	        0x498b7730	            mov rsi, qword [r15 + 0x30] 	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x400dac7	          0x83c90c	                             or ecx, 0xc	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x400daca	          0x884840	               mov byte [rax + 0x40], cl	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x400dacd	        0x48897030	             mov qword [rax + 0x30], rsi	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x400dad1	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	      7286	elf.c	FUNCTION_81	FOR_2
0x400dad5	          0x4d85c0	                             test r8, r8	      7287	elf.c	FUNCTION_81	FOR_2
0x400dad8	     0xf857c020000	                           jne 0x400dd5a	      7287	elf.c	FUNCTION_81	FOR_2
0x400dade	        0x418b4d3c	            mov ecx, dword [r13 + 0x3c] 	      7287	elf.c	FUNCTION_81	FOR_2
0x400dae2	        0x49394f28	            cmp qword [r15 + 0x28], rcx 	      7287	elf.c	FUNCTION_81	FOR_2
0x400dae6	     0xf82f8020000	                            jb 0x400dde4	      7287	elf.c	FUNCTION_81	FOR_2
0x400daec	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      7286	elf.c	FUNCTION_81	FOR_2
0x400daf0	          0x83c910	                            or ecx, 0x10	      7286	elf.c	FUNCTION_81	FOR_2
0x400daf3	          0x83e1df	                     and ecx, 0xffffffdf	      7289	elf.c	FUNCTION_81	FOR_2
0x400daf6	        0x4883fa01	                              cmp rdx, 1	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dafa	          0x884840	               mov byte [rax + 0x40], cl	      7289	elf.c	FUNCTION_81	FOR_2
0x400dafd	            0x750b	                           jne 0x400db0a	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400daff	      0x837c240800	                  cmp dword [rsp + 8], 0	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db04	     0xf8543020000	                           jne 0x400dd4d	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db0a	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db0e	        0x418b7544	            mov esi, dword [r13 + 0x44] 	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db12	          0x4c89c7	                             mov rdi, r8	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db15	        0x49037f28	             add rdi, qword [r15 + 0x28]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db19	      0x410faf7540	            imul esi, dword [r13 + 0x40]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db1e	          0x4801f1	                            add rcx, rsi	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db21	          0x4839cf	                            cmp rdi, rcx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db24	     0xf824e020000	                            jb 0x400dd78	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db2a	      0xb901000000	                              mov ecx, 1	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db2f	         0xfb67040	           movzx esi, byte [rax + 0x40] 	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db33	          0xc1e105	                              shl ecx, 5	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db36	          0x83e6df	                     and esi, 0xffffffdf	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db39	             0x9f1	                             or ecx, esi	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db3b	        0x4883fa01	                              cmp rdx, 1	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400db3f	          0x884840	               mov byte [rax + 0x40], cl	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400db42	     0xf84fc010000	                            je 0x400dd44	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400db48	            0x85ed	                           test ebp, ebp	      7303	elf.c	FUNCTION_81	FOR_2	IF_9
0x400db4a	     0xf842f020000	                            je 0x400dd7f	      7303	elf.c	FUNCTION_81	FOR_2	IF_9
0x400db50	          0x4885db	                           test rbx, rbx	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400db53	     0xf8426020000	                            je 0x400dd7f	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400db59	        0x4883fa07	                              cmp rdx, 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db5d	       0xf94442410	                  sete byte [rsp + 0x10]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db62	       0xfb67c2410	           movzx edi, byte [rsp + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db67	    0x4881fa52e574	                     cmp rdx, 0x6474e552	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db6e	           0xf94c1	                                 sete cl	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db71	             0x9f9	                             or ecx, edi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db73	        0x4883fa01	                              cmp rdx, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db77	        0x488d7afa	                      lea rdi, [rdx - 6]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db7b	        0x400f94c6	                                sete sil	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db7f	             0x9f1	                             or ecx, esi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db81	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db86	        0x884c2430	               mov byte [rsp + 0x30], cl	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db8a	        0x488d4aff	                      lea rcx, [rdx - 1]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db8e	        0x4883f901	                              cmp rcx, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db92	    0x488d8ab01a8b	             lea rcx, [rdx - 0x6474e550]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db99	        0x400f97c6	                                seta sil	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400db9d	        0x4883f902	                              cmp rcx, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dba1	           0xf97c1	                                 seta cl	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dba4	          0x4531e4	                          xor r12d, r12d	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dba7	            0x21ce	                            and esi, ecx	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dba9	      0x4088742440	              mov byte [rsp + 0x40], sil	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbae	            0x31f6	                            xor esi, esi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbb0	            0xeb14	                           jmp 0x400dbc6	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbb2	      0x807c243000	                cmp byte [rsp + 0x30], 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbb7	            0x7531	                           jne 0x400dbea	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbb9	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      7309	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400dbbd	          0x4885db	                           test rbx, rbx	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400dbc0	     0xf84de010000	                            je 0x400dda4	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400dbc6	    0x488b8be00000	            mov rcx, qword [rbx + 0xe0] 	      7311	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	CALL_8
0x400dbcd	        0x488b7908	                mov rdi, qword [rcx + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbd1	          0x4989fa	                            mov r10, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbd4	    0x4181e2000400	                         and r10d, 0x400	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbdb	      0x4c89542428	             mov qword [rsp + 0x28], r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbe0	            0x75d0	                           jne 0x400dbb2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbe2	    0x48837c243801	               cmp qword [rsp + 0x38], 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbe8	            0x76cf	                           jbe 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbea	          0x83e702	                              and edi, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbed	     0xf85c3000000	                           jne 0x400dcb6	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbf3	      0x807c244000	                cmp byte [rsp + 0x40], 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbf8	            0x74bf	                            je 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbfa	        0x448b4904	                mov r9d, dword [rcx + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dbfe	        0x4183f908	                              cmp r9d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc02	            0x745a	                            je 0x400dc5e	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc04	        0x4c8b5118	            mov r10, qword [rcx + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc08	          0x4d39d0	                             cmp r8, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc0b	            0x77ac	                            ja 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc0d	        0x4c035120	             add r10, qword [rcx + 0x20]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc11	          0x4d29c2	                             sub r10, r8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc14	        0x4d3b5728	            cmp r10, qword [r15 + 0x28] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc18	            0x779f	                            ja 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc1a	          0x4885ff	                           test rdi, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc1d	            0x743f	                            je 0x400dc5e	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc1f	        0x4c8b5110	            mov r10, qword [rcx + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc23	        0x4d8b5f18	            mov r11, qword [r15 + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc27	          0x4d39da	                            cmp r10, r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc2a	            0x728d	                            jb 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc2c	          0x4d29da	                            sub r10, r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc2f	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc35	        0x410f94c3	                               sete r11b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc39	      0x440a5c2410	              or r11b, byte [rsp + 0x10]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc3e	     0xf85f7000000	                           jne 0x400dd3b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc44	          0x4531db	                          xor r11d, r11d	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc47	        0x4183f908	                              cmp r9d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc4b	     0xf85ea000000	                           jne 0x400dd3b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc51	          0x4d01da	                            add r10, r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc54	        0x4d3b5730	            cmp r10, qword [r15 + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc58	     0xf875bffffff	                            ja 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc5e	        0x4883fa02	                              cmp rdx, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc62	            0x7478	                            je 0x400dcdc	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dc64	        0x448b5320	           mov r10d, dword [rbx + 0x20] 	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400dc68	        0x4c8b4b68	              mov r9, qword [rbx + 0x68]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400dc6c	      0x418d7c2401	                      lea edi, [r12 + 1]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400dc71	        0x41f6c201	                            test r10b, 1	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400dc75	      0x4e894ce048	      mov qword [rax + r12*8 + 0x48], r9	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400dc7a	            0x742a	                            je 0x400dca6	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400dc7c	          0x4885f6	                           test rsi, rsi	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400dc7f	            0x7452	                            je 0x400dcd3	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400dc81	        0x4c8b4b30	              mov r9, qword [rbx + 0x30]	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400dc85	        0x4c3b4e30	              cmp r9, qword [rsi + 0x30]	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400dc89	        0x480f42f3	                          cmovb rsi, rbx	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400dc8d	        0x4180e202	                             and r10b, 2	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400dc91	            0x7436	                            je 0x400dcc9	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400dc93	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400dc97	          0x4c29c1	                             sub rcx, r8	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400dc9a	          0x4d29f1	                             sub r9, r14	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400dc9d	          0x4939c9	                             cmp r9, rcx	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400dca0	            0x7404	                            je 0x400dca6	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400dca2	        0x806040fd	             and byte [rax + 0x40], 0xfd	      7333	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400dca6	            0x39ef	                            cmp edi, ebp	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400dca8	     0xf84f6000000	                            je 0x400dda4	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400dcae	          0x4189fc	                           mov r12d, edi	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400dcb1	      0xe903ffffff	                           jmp 0x400dbb9	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400dcb6	        0x448b4904	                mov r9d, dword [rcx + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcba	        0x4183f908	                              cmp r9d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcbe	     0xf8540ffffff	                           jne 0x400dc04	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcc4	      0xe956ffffff	                           jmp 0x400dc1f	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcc9	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x400dccd	        0x492b4f18	             sub rcx, qword [r15 + 0x18]	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x400dcd1	            0xebc7	                           jmp 0x400dc9a	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x400dcd3	          0x4889de	                            mov rsi, rbx	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400dcd6	        0x4c8b4b30	              mov r9, qword [rbx + 0x30]	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400dcda	            0xebb1	                           jmp 0x400dc8d	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400dcdc	      0x4883792000	               cmp qword [rcx + 0x20], 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dce1	            0x7581	                           jne 0x400dc64	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dce3	        0x4d8b5730	            mov r10, qword [r15 + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dce7	          0x4d85d2	                           test r10, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcea	     0xf8474ffffff	                            je 0x400dc64	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcf0	        0x4183f908	                              cmp r9d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcf4	            0x741a	                            je 0x400dd10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcf6	        0x4c8b4918	              mov r9, qword [rcx + 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcfa	          0x4d39c8	                              cmp r8, r9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dcfd	     0xf83b6feffff	                           jae 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd03	          0x4d29c1	                              sub r9, r8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd06	        0x4d3b4f28	              cmp r9, qword [r15 + 0x28]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd0a	     0xf83a9feffff	                           jae 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd10	          0x4885ff	                           test rdi, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd13	     0xf844bffffff	                            je 0x400dc64	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd19	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd1d	        0x4d8b4f18	              mov r9, qword [r15 + 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd21	          0x4c39cf	                             cmp rdi, r9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd24	     0xf868ffeffff	                           jbe 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd2a	          0x4c29cf	                             sub rdi, r9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd2d	          0x4939fa	                            cmp r10, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd30	     0xf8683feffff	                           jbe 0x400dbb9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd36	      0xe929ffffff	                           jmp 0x400dc64	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd3b	        0x4c8b5920	            mov r11, qword [rcx + 0x20] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd3f	      0xe90dffffff	                           jmp 0x400dc51	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400dd44	          0x80e120	                            and cl, 0x20	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400dd47	     0xf84fbfdffff	                            je 0x400db48	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400dd4d	    0xc74424080100	                  mov dword [rsp + 8], 1	      7299	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400dd55	      0xe9eefdffff	                           jmp 0x400db48	      7299	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400dd5a	        0x806040cf	             and byte [rax + 0x40], 0xcf	      7289	elf.c	FUNCTION_81	FOR_2
0x400dd5e	      0x837c240800	                  cmp dword [rsp + 8], 0	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd63	            0x7406	                            je 0x400dd6b	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd65	        0x4883fa01	                              cmp rdx, 1	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd69	            0x74e2	                            je 0x400dd4d	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd6b	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd6f	          0x4939c8	                             cmp r8, rcx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd72	     0xf8696fdffff	                           jbe 0x400db0e	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd78	            0x31c9	                            xor ecx, ecx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd7a	      0xe9b0fdffff	                           jmp 0x400db2f	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dd7f	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400dd83	          0x83e232	                           and edx, 0x32	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400dd86	          0x80fa02	                               cmp dl, 2	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400dd89	            0x7455	                            je 0x400dde0	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400dd8b	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      7353	elf.c	FUNCTION_81	FOR_2
0x400dd90	          0x896844	             mov dword [rax + 0x44], ebp	      7352	elf.c	FUNCTION_81	FOR_2
0x400dd93	        0x4983c740	                           add r15, 0x40	      7227	elf.c	FUNCTION_81	FOR_2
0x400dd97	      0x4889442418	             mov qword [rsp + 0x18], rax	      7354	elf.c	FUNCTION_81	FOR_2
0x400dd9c	          0x488903	                    mov qword [rbx], rax	      7353	elf.c	FUNCTION_81	FOR_2
0x400dd9f	      0xe91ffbffff	                           jmp 0x400d8c3	      7353	elf.c	FUNCTION_81	FOR_2
0x400dda4	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400dda8	          0xf6c210	                           test dl, 0x10	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400ddab	            0x7426	                            je 0x400ddd3	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400ddad	          0x4885f6	                           test rsi, rsi	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400ddb0	            0x7421	                            je 0x400ddd3	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400ddb2	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400ddb6	        0x492b4f18	             sub rcx, qword [r15 + 0x18]	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400ddba	          0x83e232	                           and edx, 0x32	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddbd	          0x80fa02	                               cmp dl, 2	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddc0	        0x48894838	             mov qword [rax + 0x38], rcx	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400ddc4	            0x75c5	                           jne 0x400dd8b	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddc6	        0x488b5630	            mov rdx, qword [rsi + 0x30] 	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddca	          0x4c29f2	                            sub rdx, r14	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddcd	        0x48895020	             mov qword [rax + 0x20], rdx	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddd1	            0xebb8	                           jmp 0x400dd8b	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddd3	          0x83e232	                           and edx, 0x32	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddd6	          0x80fa02	                               cmp dl, 2	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddd9	            0x75b0	                           jne 0x400dd8b	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400dddb	          0x4885f6	                           test rsi, rsi	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400ddde	            0x75e6	                           jne 0x400ddc6	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400dde0	            0x31d2	                            xor edx, edx	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400dde2	            0xebe6	                           jmp 0x400ddca	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400dde4	        0x806040cf	             and byte [rax + 0x40], 0xcf	      7289	elf.c	FUNCTION_81	FOR_2
0x400dde8	      0x837c240800	                  cmp dword [rsp + 8], 0	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400dded	     0xf8417fdffff	                            je 0x400db0a	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400ddf3	        0x4883fa01	                              cmp rdx, 1	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400ddf7	     0xf850dfdffff	                           jne 0x400db0a	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400ddfd	      0xe94bffffff	                           jmp 0x400dd4d	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400de02	        0x488b0424	                    mov rax, qword [rsp]	      7357	elf.c	FUNCTION_81	CALL_10
0x400de06	    0x488b9424a000	            mov rdx, qword [rsp + 0xa0] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400de0e	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400de13	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400de1a	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400de21	          0x488910	                    mov qword [rax], rdx	      7357	elf.c	FUNCTION_81	CALL_10
0x400de24	      0xe9c8e4ffff	                           jmp 0x400c2f1	      7357	elf.c	FUNCTION_81	CALL_10
0x400de29	            0x85ed	                           test ebp, ebp	      7253	elf.c	FUNCTION_81	FOR_2	IF_4
0x400de2b	      0xbe50000000	                           mov esi, 0x50	      7252	elf.c	FUNCTION_81	FOR_2
0x400de30	     0xf8423fcffff	                            je 0x400da59	      7253	elf.c	FUNCTION_81	FOR_2	IF_4
0x400de36	            0x89e8	                            mov eax, ebp	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x400de38	    0x488d34c54800	                 lea rsi, [rax*8 + 0x48]	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x400de40	      0xe914fcffff	                           jmp 0x400da59	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
bfd_get_elf_phdr_upper_bound	functions,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	14
0x4014030	        0x488b4708	                mov rax, qword [rdi + 8]	     11222	elf.c	FUNCTION_193	IF_1
0x4014034	        0x83780805	                  cmp dword [rax + 8], 5	     11222	elf.c	FUNCTION_193	IF_1
0x4014038	            0x7516	                           jne 0x4014050	     11222	elf.c	FUNCTION_193	IF_1
0x401403a	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11228	elf.c	FUNCTION_193	CALL_2
0x4014041	          0x8b4044	            mov eax, dword [rax + 0x44] 	     11228	elf.c	FUNCTION_193	CALL_2
0x4014044	        0x48c1e006	                              shl rax, 6	     11228	elf.c	FUNCTION_193	CALL_2
0x4014048	              0xc3	                                     ret	     11228	elf.c	FUNCTION_193	CALL_2
0x4014049	     0xf1f80000000	                         nop dword [rax]	     11228	elf.c	FUNCTION_193	CALL_2
0x4014050	        0x4883ec08	                              sub rsp, 8	     11221	elf.c	FUNCTION_193
0x4014054	      0xbf03000000	                              mov edi, 3	     11224	elf.c	FUNCTION_193	IF_1	CALL_1
0x4014059	      0xe800000000	                          call 0x401405e	     11224	elf.c	FUNCTION_193	IF_1	CALL_1
0x401405e	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11225	elf.c	FUNCTION_193	IF_1
0x4014065	        0x4883c408	                              add rsp, 8	     11229	elf.c	FUNCTION_193
0x4014069	              0xc3	                                     ret	     11229	elf.c	FUNCTION_193
_bfd_elf_plt_get_reloc_section	functions,0:CALL,4:FOR,0:WHILE,0:SWITCH,0:IF,2:DO,0:ELSE,0	26
0x4007110	              0x53	                                push rbx	      3591	elf.c	FUNCTION_50
0x4007111	        0x488b5708	                mov rdx, qword [rdi + 8]	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4007115	          0x4889fb	                            mov rbx, rdi	      3591	elf.c	FUNCTION_50
0x4007118	          0x4889f0	                            mov rax, rsi	      3591	elf.c	FUNCTION_50
0x400711b	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4007122	    0xf68289030000	              test byte [rdx + 0x389], 2	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4007129	            0x740e	                            je 0x4007139	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x400712b	      0xbf00000000	                              mov edi, 0	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4007130	      0xb905000000	                              mov ecx, 5	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4007135	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4007137	            0x740f	                            je 0x4007148	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4007139	          0x4889df	                            mov rdi, rbx	      3606	elf.c	FUNCTION_50	CALL_4
0x400713c	          0x4889c6	                            mov rsi, rax	      3606	elf.c	FUNCTION_50	CALL_4
0x400713f	              0x5b	                                 pop rbx	      3607	elf.c	FUNCTION_50
0x4007140	      0xe900000000	                           jmp 0x4007145	      3606	elf.c	FUNCTION_50	CALL_4
0x4007145	           0xf1f00	                         nop dword [rax]	      3606	elf.c	FUNCTION_50	CALL_4
0x4007148	      0xbe00000000	                              mov esi, 0	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x400714d	          0x4889df	                            mov rdi, rbx	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4007150	      0xe800000000	                          call 0x4007155	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4007155	          0x4885c0	                           test rax, rax	      3601	elf.c	FUNCTION_50	IF_1	IF_2
0x4007158	            0x7406	                            je 0x4007160	      3601	elf.c	FUNCTION_50	IF_1	IF_2
0x400715a	              0x5b	                                 pop rbx	      3607	elf.c	FUNCTION_50
0x400715b	              0xc3	                                     ret	      3607	elf.c	FUNCTION_50
0x400715c	         0xf1f4000	                         nop dword [rax]	      3607	elf.c	FUNCTION_50
0x4007160	      0xb800000000	                              mov eax, 0	      3603	elf.c	FUNCTION_50	IF_1
0x4007165	            0xebd2	                           jmp 0x4007139	      3603	elf.c	FUNCTION_50	IF_1
_bfd_elf_rel_local_sym	functions,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	15
0x4014180	          0x4989d0	                             mov r8, rdx	     11310	elf.c	FUNCTION_197
0x4014183	          0x488b12	                    mov rdx, qword [rdx]	     11311	elf.c	FUNCTION_197
0x4014186	         0xfb74224	           movzx eax, word [rdx + 0x24] 	     11313	elf.c	FUNCTION_197	IF_1
0x401418a	        0x66258003	                           and ax, 0x380	     11313	elf.c	FUNCTION_197	IF_1
0x401418e	        0x663d0001	                           cmp ax, 0x100	     11313	elf.c	FUNCTION_197	IF_1
0x4014192	            0x740c	                            je 0x40141a0	     11313	elf.c	FUNCTION_197	IF_1
0x4014194	          0x4889c8	                            mov rax, rcx	     11314	elf.c	FUNCTION_197	IF_1
0x4014197	          0x480306	                    add rax, qword [rsi]	     11314	elf.c	FUNCTION_197	IF_1
0x401419a	              0xc3	                                     ret	     11319	elf.c	FUNCTION_197
0x401419b	       0xf1f440000	                   nop dword [rax + rax]	     11319	elf.c	FUNCTION_197
0x40141a0	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	     11316	elf.c	FUNCTION_197	CALL_1
0x40141a7	          0x48030e	                    add rcx, qword [rsi]	     11316	elf.c	FUNCTION_197	CALL_1
0x40141aa	          0x4c89c6	                             mov rsi, r8	     11316	elf.c	FUNCTION_197	CALL_1
0x40141ad	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	     11316	elf.c	FUNCTION_197	CALL_1
0x40141b4	      0xe900000000	                           jmp 0x40141b9	     11316	elf.c	FUNCTION_197	CALL_1
_bfd_elf_swap_verdaux_out	functions,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	18
0x4002de0	            0x4154	                                push r12	       113	elf.c	FUNCTION_4
0x4002de2	              0x55	                                push rbp	       113	elf.c	FUNCTION_4
0x4002de3	          0x4989f4	                            mov r12, rsi	       113	elf.c	FUNCTION_4
0x4002de6	              0x53	                                push rbx	       113	elf.c	FUNCTION_4
0x4002de7	        0x488b4708	                mov rax, qword [rdi + 8]	       114	elf.c	FUNCTION_4	CALL_1
0x4002deb	          0x4889fd	                            mov rbp, rdi	       113	elf.c	FUNCTION_4
0x4002dee	          0x4889d3	                            mov rbx, rdx	       113	elf.c	FUNCTION_4
0x4002df1	        0x498b3c24	                    mov rdi, qword [r12]	       114	elf.c	FUNCTION_4	CALL_1
0x4002df5	          0x4889d6	                            mov rsi, rdx	       114	elf.c	FUNCTION_4	CALL_1
0x4002df8	    0xff9090000000	                 call qword [rax + 0x90]	       114	elf.c	FUNCTION_4	CALL_1
0x4002dfe	        0x488b4508	                mov rax, qword [rbp + 8]	       115	elf.c	FUNCTION_4	CALL_2
0x4002e02	        0x488d7304	                      lea rsi, [rbx + 4]	       115	elf.c	FUNCTION_4	CALL_2
0x4002e06	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       115	elf.c	FUNCTION_4	CALL_2
0x4002e0b	              0x5b	                                 pop rbx	       116	elf.c	FUNCTION_4
0x4002e0c	              0x5d	                                 pop rbp	       116	elf.c	FUNCTION_4
0x4002e0d	            0x415c	                                 pop r12	       116	elf.c	FUNCTION_4
0x4002e0f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       115	elf.c	FUNCTION_4	CALL_2
0x4002e16	            0xffe0	                                 jmp rax	       115	elf.c	FUNCTION_4	CALL_2
_bfd_elf_single_rel_hdr	functions,0:CALL,5:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,1	18
0x40070a0	    0x488b97e00000	            mov rdx, qword [rdi + 0xe0] 	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x40070a7	        0x488b4258	            mov rax, qword [rdx + 0x58] 	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x40070ab	          0x4885c0	                           test rax, rax	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x40070ae	            0x7430	                            je 0x40070e0	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x40070b0	      0x48837a7000	               cmp qword [rdx + 0x70], 0	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x40070b5	            0x741f	                            je 0x40070d6	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x40070b7	              0x53	                                push rbx	      3049	elf.c	FUNCTION_44
0x40070b8	      0xbeec0b0000	                          mov esi, 0xbec	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x40070bd	          0x4889fb	                            mov rbx, rdi	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x40070c0	      0xbf00000000	                              mov edi, 0	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x40070c5	      0xe800000000	                          call 0x40070ca	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x40070ca	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x40070d1	              0x5b	                                 pop rbx	      3057	elf.c	FUNCTION_44
0x40070d2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3057	elf.c	FUNCTION_44
0x40070d6	            0xf3c3	                                     ret	      3057	elf.c	FUNCTION_44
0x40070d8	     0xf1f84000000	                   nop dword [rax + rax]	      3057	elf.c	FUNCTION_44
0x40070e0	        0x488b4270	            mov rax, qword [rdx + 0x70] 	      3056	elf.c	FUNCTION_44	CALL_5
0x40070e4	              0xc3	                                     ret	      3056	elf.c	FUNCTION_44	CALL_5
_bfd_elf_find_segment_containing_section	functions,0:CALL,2:FOR,2:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	27
0x40072e0	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x40072e7	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x40072ee	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x40072f2	          0x488b3a	                    mov rdi, qword [rdx]	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x40072f5	          0x4885ff	                           test rdi, rdi	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x40072f8	            0x7434	                            je 0x400732e	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x40072fa	          0x8b5744	            mov edx, dword [rdi + 0x44] 	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x40072fd	          0x83ea01	                              sub edx, 1	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4007300	            0x7820	                            js 0x4007322	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4007302	          0x4863ca	                         movsxd rcx, edx	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4007305	      0x483b74cf48	    cmp rsi, qword [rdi + rcx*8 + 0x48] 	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400730a	            0x750e	                           jne 0x400731a	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400730c	            0xeb24	                           jmp 0x4007332	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400730e	            0x6690	                                     nop	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4007310	          0x4863ca	                         movsxd rcx, edx	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4007313	      0x483974cf48	    cmp qword [rdi + rcx*8 + 0x48], rsi 	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4007318	            0x7416	                            je 0x4007330	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400731a	          0x83ea01	                              sub edx, 1	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400731d	          0x83faff	             cmp edx, 0xffffffffffffffff	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4007320	            0x75ee	                           jne 0x4007310	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4007322	          0x488b3f	                    mov rdi, qword [rdi]	      4450	elf.c	FUNCTION_61	FOR_1
0x4007325	        0x4883c040	                           add rax, 0x40	      4450	elf.c	FUNCTION_61	FOR_1
0x4007329	          0x4885ff	                           test rdi, rdi	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400732c	            0x75cc	                           jne 0x40072fa	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400732e	            0x31c0	                            xor eax, eax	      4459	elf.c	FUNCTION_61
0x4007330	            0xf3c3	                                     ret	      4460	elf.c	FUNCTION_61
0x4007332	            0xf3c3	                                     ret	      4460	elf.c	FUNCTION_61
_bfd_elf_no_info_to_howto	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	5
0x4010340	        0x4883ec08	                              sub rsp, 8	      8885	elf.c	FUNCTION_108
0x4010344	      0xba00000000	                              mov edx, 0	      8886	elf.c	FUNCTION_108	CALL_1
0x4010349	      0xbeb6220000	                         mov esi, 0x22b6	      8886	elf.c	FUNCTION_108	CALL_1
0x401034e	      0xbf00000000	                              mov edi, 0	      8886	elf.c	FUNCTION_108	CALL_1
0x4010353	      0xe800000000	                          call 0x4010358	      8886	elf.c	FUNCTION_108	CALL_1
_bfd_elf_swap_vernaux_out	functions,0:CALL,5:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	30
0x4002f80	            0x4154	                                push r12	       166	elf.c	FUNCTION_8
0x4002f82	              0x55	                                push rbp	       166	elf.c	FUNCTION_8
0x4002f83	          0x4989f4	                            mov r12, rsi	       166	elf.c	FUNCTION_8
0x4002f86	              0x53	                                push rbx	       166	elf.c	FUNCTION_8
0x4002f87	        0x488b4708	                mov rax, qword [rdi + 8]	       167	elf.c	FUNCTION_8	CALL_1
0x4002f8b	          0x4889fd	                            mov rbp, rdi	       166	elf.c	FUNCTION_8
0x4002f8e	          0x4889d3	                            mov rbx, rdx	       166	elf.c	FUNCTION_8
0x4002f91	          0x4889d6	                            mov rsi, rdx	       167	elf.c	FUNCTION_8	CALL_1
0x4002f94	        0x498b3c24	                    mov rdi, qword [r12]	       167	elf.c	FUNCTION_8	CALL_1
0x4002f98	    0xff9090000000	                 call qword [rax + 0x90]	       167	elf.c	FUNCTION_8	CALL_1
0x4002f9e	        0x488b4508	                mov rax, qword [rbp + 8]	       168	elf.c	FUNCTION_8	CALL_2
0x4002fa2	    0x410fb77c2408	               movzx edi, word [r12 + 8]	       168	elf.c	FUNCTION_8	CALL_2
0x4002fa8	        0x488d7304	                      lea rsi, [rbx + 4]	       168	elf.c	FUNCTION_8	CALL_2
0x4002fac	    0xff90a8000000	                 call qword [rax + 0xa8]	       168	elf.c	FUNCTION_8	CALL_2
0x4002fb2	        0x488b4508	                mov rax, qword [rbp + 8]	       169	elf.c	FUNCTION_8	CALL_3
0x4002fb6	    0x410fb77c240a	            movzx edi, word [r12 + 0xa] 	       169	elf.c	FUNCTION_8	CALL_3
0x4002fbc	        0x488d7306	                      lea rsi, [rbx + 6]	       169	elf.c	FUNCTION_8	CALL_3
0x4002fc0	    0xff90a8000000	                 call qword [rax + 0xa8]	       169	elf.c	FUNCTION_8	CALL_3
0x4002fc6	        0x488b4508	                mov rax, qword [rbp + 8]	       170	elf.c	FUNCTION_8	CALL_4
0x4002fca	        0x488d7308	                      lea rsi, [rbx + 8]	       170	elf.c	FUNCTION_8	CALL_4
0x4002fce	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       170	elf.c	FUNCTION_8	CALL_4
0x4002fd3	    0xff9090000000	                 call qword [rax + 0x90]	       170	elf.c	FUNCTION_8	CALL_4
0x4002fd9	        0x488b4508	                mov rax, qword [rbp + 8]	       171	elf.c	FUNCTION_8	CALL_5
0x4002fdd	        0x488d730c	                    lea rsi, [rbx + 0xc]	       171	elf.c	FUNCTION_8	CALL_5
0x4002fe1	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       171	elf.c	FUNCTION_8	CALL_5
0x4002fe6	              0x5b	                                 pop rbx	       172	elf.c	FUNCTION_8
0x4002fe7	              0x5d	                                 pop rbp	       172	elf.c	FUNCTION_8
0x4002fe8	            0x415c	                                 pop r12	       172	elf.c	FUNCTION_8
0x4002fea	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       171	elf.c	FUNCTION_8	CALL_5
0x4002ff1	            0xffe0	                                 jmp rax	       171	elf.c	FUNCTION_8	CALL_5
_bfd_elf_make_empty_symbol	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	9
0x400fe40	              0x53	                                push rbx	      8623	elf.c	FUNCTION_98
0x400fe41	      0xbe60000000	                           mov esi, 0x60	      8626	elf.c	FUNCTION_98	CALL_1
0x400fe46	          0x4889fb	                            mov rbx, rdi	      8623	elf.c	FUNCTION_98
0x400fe49	      0xe800000000	                          call 0x400fe4e	      8626	elf.c	FUNCTION_98	CALL_1
0x400fe4e	          0x4885c0	                           test rax, rax	      8627	elf.c	FUNCTION_98	IF_1
0x400fe51	            0x7403	                            je 0x400fe56	      8627	elf.c	FUNCTION_98	IF_1
0x400fe53	          0x488918	                    mov qword [rax], rbx	      8629	elf.c	FUNCTION_98
0x400fe56	              0x5b	                                 pop rbx	      8631	elf.c	FUNCTION_98
0x400fe57	              0xc3	                                     ret	      8631	elf.c	FUNCTION_98
_bfd_elf_write_object_contents	functions,0:CALL,17:FOR,1:WHILE,0:SWITCH,0:IF,11:DO,0:ELSE,0	358
0x400b5d0	            0x4157	                                push r15	      6381	elf.c	FUNCTION_76
0x400b5d2	            0x4156	                                push r14	      6381	elf.c	FUNCTION_76
0x400b5d4	            0x4155	                                push r13	      6381	elf.c	FUNCTION_76
0x400b5d6	            0x4154	                                push r12	      6381	elf.c	FUNCTION_76
0x400b5d8	          0x4989fd	                            mov r13, rdi	      6381	elf.c	FUNCTION_76
0x400b5db	              0x55	                                push rbp	      6381	elf.c	FUNCTION_76
0x400b5dc	              0x53	                                push rbx	      6381	elf.c	FUNCTION_76
0x400b5dd	        0x4883ec48	                           sub rsp, 0x48	      6381	elf.c	FUNCTION_76
0x400b5e1	    0x64488b042528	                mov rax, qword fs:[0x28]	      6381	elf.c	FUNCTION_76
0x400b5ea	      0x4889442438	             mov qword [rsp + 0x38], rax	      6381	elf.c	FUNCTION_76
0x400b5ef	            0x31c0	                            xor eax, eax	      6381	elf.c	FUNCTION_76
0x400b5f1	        0x488b4708	                mov rax, qword [rdi + 8]	      6382	elf.c	FUNCTION_76	CALL_1
0x400b5f5	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      6388	elf.c	FUNCTION_76	IF_1
0x400b5f9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6382	elf.c	FUNCTION_76	CALL_1
0x400b600	      0x4889442408	                mov qword [rsp + 8], rax	      6382	elf.c	FUNCTION_76	CALL_1
0x400b605	            0x750b	                           jne 0x400b612	      6388	elf.c	FUNCTION_76	IF_1
0x400b607	            0x31f6	                            xor esi, esi	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400b609	      0xe800000000	                          call 0x400b60e	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400b60e	            0x85c0	                           test eax, eax	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400b610	            0x743d	                            je 0x400b64f	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400b612	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      6392	elf.c	FUNCTION_76	CALL_3
0x400b619	      0x488d542434	                   lea rdx, [rsp + 0x34]	      6395	elf.c	FUNCTION_76	CALL_4
0x400b61e	          0x4c89ef	                            mov rdi, r13	      6395	elf.c	FUNCTION_76	CALL_4
0x400b621	    0xc74424340000	               mov dword [rsp + 0x34], 0	      6394	elf.c	FUNCTION_76
0x400b629	        0x488b4058	            mov rax, qword [rax + 0x58] 	      6392	elf.c	FUNCTION_76	CALL_3
0x400b62d	      0x4889442418	             mov qword [rsp + 0x18], rax	      6392	elf.c	FUNCTION_76	CALL_3
0x400b632	      0x488b442408	                mov rax, qword [rsp + 8]	      6395	elf.c	FUNCTION_76	CALL_4
0x400b637	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6395	elf.c	FUNCTION_76	CALL_4
0x400b63e	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      6395	elf.c	FUNCTION_76	CALL_4
0x400b642	      0xe800000000	                          call 0x400b647	      6395	elf.c	FUNCTION_76	CALL_4
0x400b647	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      6396	elf.c	FUNCTION_76	IF_2
0x400b64b	            0x85c0	                           test eax, eax	      6396	elf.c	FUNCTION_76	IF_2
0x400b64d	            0x7429	                            je 0x400b678	      6396	elf.c	FUNCTION_76	IF_2
0x400b64f	            0x31c0	                            xor eax, eax	      6400	elf.c	FUNCTION_76	IF_3
0x400b651	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6440	elf.c	FUNCTION_76
0x400b656	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6440	elf.c	FUNCTION_76
0x400b65f	     0xf8560050000	                           jne 0x400bbc5	      6440	elf.c	FUNCTION_76
0x400b665	        0x4883c448	                           add rsp, 0x48	      6440	elf.c	FUNCTION_76
0x400b669	              0x5b	                                 pop rbx	      6440	elf.c	FUNCTION_76
0x400b66a	              0x5d	                                 pop rbp	      6440	elf.c	FUNCTION_76
0x400b66b	            0x415c	                                 pop r12	      6440	elf.c	FUNCTION_76
0x400b66d	            0x415d	                                 pop r13	      6440	elf.c	FUNCTION_76
0x400b66f	            0x415e	                                 pop r14	      6440	elf.c	FUNCTION_76
0x400b671	            0x415f	                                 pop r15	      6440	elf.c	FUNCTION_76
0x400b673	              0xc3	                                     ret	      6440	elf.c	FUNCTION_76
0x400b674	         0xf1f4000	                         nop dword [rax]	      6440	elf.c	FUNCTION_76
0x400b678	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400b67f	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      6295	elf.c	FUNCTION_75	CALL_2
0x400b683	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400b68a	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      6296	elf.c	FUNCTION_75	CALL_3
0x400b690	        0x4c8b7a40	            mov r15, qword [rdx + 0x40] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400b694	        0x4c8d34c3	                  lea r14, [rbx + rax*8]	      6296	elf.c	FUNCTION_75	CALL_3
0x400b698	        0x4883c308	                              add rbx, 8	      6297	elf.c	FUNCTION_75	FOR_1
0x400b69c	          0x4939de	                            cmp r14, rbx	      6297	elf.c	FUNCTION_75	FOR_1
0x400b69f	            0x771c	                            ja 0x400b6bd	      6297	elf.c	FUNCTION_75	FOR_1
0x400b6a1	      0xe950020000	                           jmp 0x400b8f6	      6297	elf.c	FUNCTION_75	FOR_1
0x400b6a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6297	elf.c	FUNCTION_75	FOR_1
0x400b6b0	        0x4883c308	                              add rbx, 8	      6297	elf.c	FUNCTION_75	FOR_1
0x400b6b4	          0x4939de	                            cmp r14, rbx	      6297	elf.c	FUNCTION_75	FOR_1
0x400b6b7	     0xf862b020000	                           jbe 0x400b8e8	      6297	elf.c	FUNCTION_75	FOR_1
0x400b6bd	          0x488b2b	                    mov rbp, qword [rbx]	      6299	elf.c	FUNCTION_75	FOR_1
0x400b6c0	      0x48837d18ff	cmp qword [rbp + 0x18], 0xffffffffffffffff	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x400b6c5	            0x75e9	                           jne 0x400b6b0	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x400b6c7	          0x8b4504	                mov eax, dword [rbp + 4]	      6303	elf.c	FUNCTION_75	FOR_1	IF_1
0x400b6ca	        0x4c8b6540	            mov r12, qword [rbp + 0x40] 	      6302	elf.c	FUNCTION_75	FOR_1	IF_1
0x400b6ce	          0x83f809	                              cmp eax, 9	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400b6d1	     0xf8451040000	                            je 0x400bb28	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400b6d7	          0x83f804	                              cmp eax, 4	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400b6da	     0xf8448040000	                            je 0x400bb28	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400b6e0	          0x4d85e4	                           test r12, r12	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400b6e3	            0x74cb	                            je 0x400b6b0	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400b6e5	    0x41f644242308	               test byte [r12 + 0x23], 8	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400b6eb	            0x74c3	                            je 0x400b6b0	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400b6ed	        0x498b0424	                    mov rax, qword [r12]	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b6f1	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400b6f5	          0x4c89e6	                            mov rsi, r12	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400b6f8	          0x4c89ef	                            mov rdi, r13	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400b6fb	        0x48890424	                    mov qword [rsp], rax	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b6ff	      0xe800000000	                          call 0x400b704	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400b704	            0x85c0	                           test eax, eax	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400b706	     0xf8443ffffff	                            je 0x400b64f	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400b70c	    0x410fb6442424	           movzx eax, byte [r12 + 0x24] 	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400b712	          0x83e030	                           and eax, 0x30	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400b715	            0x3c10	                            cmp al, 0x10	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400b717	     0xf8433040000	                            je 0x400bb50	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400b71d	        0x837d00ff	     cmp dword [rbp], 0xffffffffffffffff	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x400b721	     0xf85a3040000	                           jne 0x400bbca	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x400b727	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400b72e	        0x488b3424	                    mov rsi, qword [rsp]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400b732	            0x31d2	                            xor edx, edx	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400b734	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400b73b	        0x488b7808	                mov rdi, qword [rax + 8]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400b73f	      0xe800000000	                          call 0x400b744	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400b744	    0x4d8b9c24e000	            mov r11, qword [r12 + 0xe0] 	      6335	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_9
0x400b74c	          0x894500	                    mov dword [rbp], eax	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400b74f	        0x498b4358	            mov rax, qword [r11 + 0x58] 	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400b753	          0x4885c0	                           test rax, rax	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400b756	      0x4889442410	             mov qword [rsp + 0x10], rax	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400b75b	     0xf8483000000	                            je 0x400b7e4	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400b761	        0x488b3c24	                    mov rdi, qword [rsp]	      3066	elf.c	FUNCTION_45	CALL_2
0x400b765	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      3066	elf.c	FUNCTION_45	CALL_2
0x400b76a	      0xe800000000	                          call 0x400b76f	      3066	elf.c	FUNCTION_45	CALL_2
0x400b76f	        0x488d7006	                      lea rsi, [rax + 6]	      3065	elf.c	FUNCTION_45	CALL_1
0x400b773	          0x4c89ef	                            mov rdi, r13	      3065	elf.c	FUNCTION_45	CALL_1
0x400b776	      0xe800000000	                          call 0x400b77b	      3065	elf.c	FUNCTION_45	CALL_1
0x400b77b	          0x4885c0	                           test rax, rax	      3067	elf.c	FUNCTION_45	IF_1
0x400b77e	     0xf84cbfeffff	                            je 0x400b64f	      3067	elf.c	FUNCTION_45	IF_1
0x400b784	        0x4c8b0c24	                     mov r9, qword [rsp]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b788	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b78d	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b790	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b796	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b79d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b7a2	      0x4889442428	             mov qword [rsp + 0x28], rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b7a7	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b7a9	      0xe800000000	                          call 0x400b7ae	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b7ae	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      3072	elf.c	FUNCTION_45	CALL_4
0x400b7b5	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	      3072	elf.c	FUNCTION_45	CALL_4
0x400b7ba	            0x31d2	                            xor edx, edx	      3072	elf.c	FUNCTION_45	CALL_4
0x400b7bc	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3072	elf.c	FUNCTION_45	CALL_4
0x400b7c3	          0x4c89d6	                            mov rsi, r10	      3072	elf.c	FUNCTION_45	CALL_4
0x400b7c6	        0x488b7808	                mov rdi, qword [rax + 8]	      3072	elf.c	FUNCTION_45	CALL_4
0x400b7ca	      0xe800000000	                          call 0x400b7cf	      3072	elf.c	FUNCTION_45	CALL_4
0x400b7cf	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3071	elf.c	FUNCTION_45
0x400b7d4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3074	elf.c	FUNCTION_45	IF_2
0x400b7d7	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      3074	elf.c	FUNCTION_45	IF_2
0x400b7dc	            0x8901	                    mov dword [rcx], eax	      3071	elf.c	FUNCTION_45
0x400b7de	     0xf846bfeffff	                            je 0x400b64f	      3074	elf.c	FUNCTION_45	IF_2
0x400b7e4	        0x498b4370	            mov rax, qword [r11 + 0x70] 	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400b7e8	          0x4885c0	                           test rax, rax	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400b7eb	      0x4889442410	             mov qword [rsp + 0x10], rax	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400b7f0	            0x7477	                            je 0x400b869	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400b7f2	        0x488b3c24	                    mov rdi, qword [rsp]	      3066	elf.c	FUNCTION_45	CALL_2
0x400b7f6	      0xe800000000	                          call 0x400b7fb	      3066	elf.c	FUNCTION_45	CALL_2
0x400b7fb	        0x488d7006	                      lea rsi, [rax + 6]	      3065	elf.c	FUNCTION_45	CALL_1
0x400b7ff	          0x4c89ef	                            mov rdi, r13	      3065	elf.c	FUNCTION_45	CALL_1
0x400b802	      0xe800000000	                          call 0x400b807	      3065	elf.c	FUNCTION_45	CALL_1
0x400b807	          0x4885c0	                           test rax, rax	      3067	elf.c	FUNCTION_45	IF_1
0x400b80a	     0xf843ffeffff	                            je 0x400b64f	      3067	elf.c	FUNCTION_45	IF_1
0x400b810	        0x4c8b0c24	                     mov r9, qword [rsp]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b814	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b819	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b81c	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b822	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b829	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b82e	        0x48890424	                    mov qword [rsp], rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b832	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b834	      0xe800000000	                          call 0x400b839	        33	stdio2.h	FUNCTION_204	CALL_1
0x400b839	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      3072	elf.c	FUNCTION_45	CALL_4
0x400b840	        0x4c8b1424	                    mov r10, qword [rsp]	      3072	elf.c	FUNCTION_45	CALL_4
0x400b844	            0x31d2	                            xor edx, edx	      3072	elf.c	FUNCTION_45	CALL_4
0x400b846	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3072	elf.c	FUNCTION_45	CALL_4
0x400b84d	          0x4c89d6	                            mov rsi, r10	      3072	elf.c	FUNCTION_45	CALL_4
0x400b850	        0x488b7808	                mov rdi, qword [rax + 8]	      3072	elf.c	FUNCTION_45	CALL_4
0x400b854	      0xe800000000	                          call 0x400b859	      3072	elf.c	FUNCTION_45	CALL_4
0x400b859	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3071	elf.c	FUNCTION_45
0x400b85e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3074	elf.c	FUNCTION_45	IF_2
0x400b861	            0x8901	                    mov dword [rcx], eax	      3071	elf.c	FUNCTION_45
0x400b863	     0xf84e6fdffff	                            je 0x400b64f	      3074	elf.c	FUNCTION_45	IF_2
0x400b869	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b86e	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x400b872	        0x48894520	            mov qword [rbp + 0x20], rax 	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b876	    0x498b8424b000	            mov rax, qword [r12 + 0xb0] 	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b87e	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400b882	        0x4c8b6540	            mov r12, qword [rbp + 0x40] 	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b886	        0x48894548	            mov qword [rbp + 0x48], rax 	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b88a	          0x8b4504	                mov eax, dword [rbp + 4]	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b88d	    0x49c78424b000	               mov qword [r12 + 0xb0], 0	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400b899	     0xf8611030000	                           jbe 0x400bbb0	      4200	elf.c	FUNCTION_58	IF_1
0x400b89f	      0x4a8d4c3aff	                lea rcx, [rdx + r15 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x400b8a4	          0x4939cf	                            cmp r15, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400b8a7	     0xf8797020000	                            ja 0x400bb44	      4201	elf.c	FUNCTION_58	CALL_1
0x400b8ad	          0x48f7da	                                 neg rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x400b8b0	          0x4989d2	                            mov r10, rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x400b8b3	          0x4921ca	                            and r10, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400b8b6	          0x4d89d7	                            mov r15, r10	      4201	elf.c	FUNCTION_58	CALL_1
0x400b8b9	          0x4d85e4	                           test r12, r12	      4203	elf.c	FUNCTION_58	IF_2
0x400b8bc	        0x4c897d18	            mov qword [rbp + 0x18], r15 	      4202	elf.c	FUNCTION_58
0x400b8c0	            0x7408	                            je 0x400b8ca	      4203	elf.c	FUNCTION_58	IF_2
0x400b8c2	    0x4d89bc249000	             mov qword [r12 + 0x90], r15	      4204	elf.c	FUNCTION_58	IF_2
0x400b8ca	          0x83f808	                              cmp eax, 8	      4205	elf.c	FUNCTION_58	IF_3
0x400b8cd	     0xf84ddfdffff	                            je 0x400b6b0	      4205	elf.c	FUNCTION_58	IF_3
0x400b8d3	        0x4883c308	                              add rbx, 8	      6297	elf.c	FUNCTION_75	FOR_1
0x400b8d7	        0x4c037d20	             add r15, qword [rbp + 0x20]	      4206	elf.c	FUNCTION_58	IF_3
0x400b8db	          0x4939de	                            cmp r14, rbx	      6297	elf.c	FUNCTION_75	FOR_1
0x400b8de	     0xf87d9fdffff	                            ja 0x400b6bd	      6297	elf.c	FUNCTION_75	FOR_1
0x400b8e4	         0xf1f4000	                         nop dword [rax]	      6297	elf.c	FUNCTION_75	FOR_1
0x400b8e8	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      6297	elf.c	FUNCTION_75	FOR_1
0x400b8ef	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6297	elf.c	FUNCTION_75	FOR_1
0x400b8f6	        0x488b7a08	                mov rdi, qword [rdx + 8]	      6363	elf.c	FUNCTION_75	CALL_14
0x400b8fa	      0xe800000000	                          call 0x400b8ff	      6363	elf.c	FUNCTION_75	CALL_14
0x400b8ff	    0x498b9df80000	            mov rbx, qword [r13 + 0xf8] 	      6364	elf.c	FUNCTION_75	CALL_15
0x400b906	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6365	elf.c	FUNCTION_75	CALL_17
0x400b90d	        0x488b7808	                mov rdi, qword [rax + 8]	      6365	elf.c	FUNCTION_75	CALL_17
0x400b911	      0xe800000000	                          call 0x400b916	      6365	elf.c	FUNCTION_75	CALL_17
0x400b916	    0x488b93e80000	            mov rdx, qword [rbx + 0xe8] 	      4200	elf.c	FUNCTION_58	IF_1
0x400b91d	    0x488983d80000	             mov qword [rbx + 0xd8], rax	      6365	elf.c	FUNCTION_75	CALL_17
0x400b924	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400b928	            0x7617	                           jbe 0x400b941	      4200	elf.c	FUNCTION_58	IF_1
0x400b92a	      0x4a8d4c3aff	                lea rcx, [rdx + r15 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x400b92f	          0x4939cf	                            cmp r15, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400b932	     0xf8781020000	                            ja 0x400bbb9	      4201	elf.c	FUNCTION_58	CALL_1
0x400b938	          0x48f7da	                                 neg rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x400b93b	          0x4821ca	                            and rdx, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400b93e	          0x4989d7	                            mov r15, rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x400b941	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      4203	elf.c	FUNCTION_58	IF_2
0x400b948	    0x4c89bbd00000	             mov qword [rbx + 0xd0], r15	      4202	elf.c	FUNCTION_58
0x400b94f	          0x4885d2	                           test rdx, rdx	      4203	elf.c	FUNCTION_58	IF_2
0x400b952	            0x7407	                            je 0x400b95b	      4203	elf.c	FUNCTION_58	IF_2
0x400b954	    0x4c89ba900000	             mov qword [rdx + 0x90], r15	      4204	elf.c	FUNCTION_58	IF_2
0x400b95b	          0x4c01f8	                            add rax, r15	      4206	elf.c	FUNCTION_58	IF_3
0x400b95e	    0x83bbbc000000	               cmp dword [rbx + 0xbc], 8	      4206	elf.c	FUNCTION_58	IF_3
0x400b965	    0x498bb5f80000	            mov rsi, qword [r13 + 0xf8] 	      6369	elf.c	FUNCTION_75	CALL_19
0x400b96c	        0x4c0f45f8	                         cmovne r15, rax	      4206	elf.c	FUNCTION_58	IF_3
0x400b970	        0x498b4508	                mov rax, qword [r13 + 8]	      6370	elf.c	FUNCTION_75	CALL_20
0x400b974	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400b97b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400b982	         0xfb6480b	            movzx ecx, byte [rax + 0xb] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400b986	      0xb801000000	                              mov eax, 1	      6371	elf.c	FUNCTION_75	CALL_21
0x400b98b	            0xd3e0	                             shl eax, cl	      6371	elf.c	FUNCTION_75	CALL_21
0x400b98d	          0x8b4e4c	            mov ecx, dword [rsi + 0x4c] 	      6374	elf.c	FUNCTION_75	CALL_22
0x400b990	          0x4863d0	                         movsxd rdx, eax	      4189	elf.c	FUNCTION_57
0x400b993	            0xf7d8	                                 neg eax	      4189	elf.c	FUNCTION_57
0x400b995	      0x498d5417ff	                lea rdx, [r15 + rdx - 1]	      4189	elf.c	FUNCTION_57
0x400b99a	            0x4898	                                    cdqe	      4189	elf.c	FUNCTION_57
0x400b99c	         0xfaf4e48	            imul ecx, dword [rsi + 0x48]	      6374	elf.c	FUNCTION_75	CALL_22
0x400b9a0	          0x4821c2	                            and rdx, rax	      4189	elf.c	FUNCTION_57
0x400b9a3	        0x48895620	             mov qword [rsi + 0x20], rdx	      6372	elf.c	FUNCTION_75
0x400b9a7	    0x498b9df80000	            mov rbx, qword [r13 + 0xf8] 	      6374	elf.c	FUNCTION_75	CALL_22
0x400b9ae	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6374	elf.c	FUNCTION_75	CALL_22
0x400b9b5	          0x4801ca	                            add rdx, rcx	      6374	elf.c	FUNCTION_75	CALL_22
0x400b9b8	        0x48895040	             mov qword [rax + 0x40], rdx	      6374	elf.c	FUNCTION_75	CALL_22
0x400b9bc	    0x8b93fc020000	           mov edx, dword [rbx + 0x2fc] 	      6403	elf.c	FUNCTION_76	CALL_6
0x400b9c2	          0x83fa01	                              cmp edx, 1	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9c5	     0xf86b3000000	                           jbe 0x400ba7e	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9cb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9d0	          0x83ea02	                              sub edx, 2	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9d3	      0x4c8b742408	                mov r14, qword [rsp + 8]	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9d8	        0x488d5908	                      lea rbx, [rcx + 8]	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9dc	      0x4c8d64d110	          lea r12, [rcx + rdx*8 + 0x10] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9e1	            0xeb13	                           jmp 0x400b9f6	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9e3	       0xf1f440000	                   nop dword [rax + rax]	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9e8	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9ef	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400b9f6	          0x488b2b	                    mov rbp, qword [rbx]	      6408	elf.c	FUNCTION_76	FOR_1
0x400b9f9	        0x488b7808	                mov rdi, qword [rax + 8]	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400b9fd	          0x8b7500	                    mov esi, dword [rbp]	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400ba00	      0xe800000000	                          call 0x400ba05	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400ba05	          0x894500	                    mov dword [rbp], eax	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400ba08	    0x498b86880000	            mov rax, qword [r14 + 0x88] 	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400ba0f	          0x4885c0	                           test rax, rax	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400ba12	            0x7410	                            je 0x400ba24	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400ba14	          0x488b33	                    mov rsi, qword [rbx]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400ba17	          0x4c89ef	                            mov rdi, r13	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400ba1a	            0xffd0	                                call rax	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400ba1c	            0x85c0	                           test eax, eax	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400ba1e	     0xf842bfcffff	                            je 0x400b64f	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400ba24	          0x488b03	                    mov rax, qword [rbx]	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ba27	      0x4883784800	               cmp qword [rax + 0x48], 0	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ba2c	            0x7435	                            je 0x400ba63	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ba2e	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ba32	            0x31d2	                            xor edx, edx	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ba34	          0x4c89ef	                            mov rdi, r13	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ba37	        0x488b6820	            mov rbp, qword [rax + 0x20] 	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400ba3b	      0xe800000000	                          call 0x400ba40	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ba40	            0x85c0	                           test eax, eax	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ba42	     0xf8507fcffff	                           jne 0x400b64f	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400ba48	          0x488b03	                    mov rax, qword [rbx]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ba4b	          0x4c89ea	                            mov rdx, r13	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ba4e	          0x4889ee	                            mov rsi, rbp	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ba51	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ba55	      0xe800000000	                          call 0x400ba5a	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ba5a	          0x4839c5	                            cmp rbp, rax	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ba5d	     0xf85ecfbffff	                           jne 0x400b64f	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ba63	        0x4883c308	                              add rbx, 8	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400ba67	          0x4c39e3	                            cmp rbx, r12	      6404	elf.c	FUNCTION_76	FOR_1
0x400ba6a	     0xf8578ffffff	                           jne 0x400b9e8	      6404	elf.c	FUNCTION_76	FOR_1
0x400ba70	    0x498b9df80000	            mov rbx, qword [r13 + 0xf8] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400ba77	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400ba7e	      0x4883780800	                  cmp qword [rax + 8], 0	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400ba83	            0x743b	                            je 0x400bac0	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400ba85	    0x488bb3d00000	            mov rsi, qword [rbx + 0xd0] 	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ba8c	            0x31d2	                            xor edx, edx	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ba8e	          0x4c89ef	                            mov rdi, r13	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ba91	      0xe800000000	                          call 0x400ba96	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ba96	            0x85c0	                           test eax, eax	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ba98	     0xf85b1fbffff	                           jne 0x400b64f	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400ba9e	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400baa5	          0x4c89ef	                            mov rdi, r13	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400baa8	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400baaf	        0x488b7008	                mov rsi, qword [rax + 8]	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400bab3	      0xe800000000	                          call 0x400bab8	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400bab8	            0x85c0	                           test eax, eax	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400baba	     0xf848ffbffff	                            je 0x400b64f	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400bac0	      0x488b442408	                mov rax, qword [rsp + 8]	      6429	elf.c	FUNCTION_76	IF_9
0x400bac5	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      6429	elf.c	FUNCTION_76	IF_9
0x400bacc	          0x4885c0	                           test rax, rax	      6429	elf.c	FUNCTION_76	IF_9
0x400bacf	            0x7416	                            je 0x400bae7	      6429	elf.c	FUNCTION_76	IF_9
0x400bad1	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	      6430	elf.c	FUNCTION_76	CALL_16
0x400bad8	          0x4c89ef	                            mov rdi, r13	      6430	elf.c	FUNCTION_76	CALL_16
0x400badb	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      6430	elf.c	FUNCTION_76	CALL_16
0x400bae2	          0x8b7258	            mov esi, dword [rdx + 0x58] 	      6430	elf.c	FUNCTION_76	CALL_16
0x400bae5	            0xffd0	                                call rax	      6430	elf.c	FUNCTION_76	CALL_16
0x400bae7	      0x488b442408	                mov rax, qword [rsp + 8]	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400baec	          0x4c89ef	                            mov rdi, r13	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400baef	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400baf6	          0xff5018	                 call qword [rax + 0x18]	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400baf9	            0x85c0	                           test eax, eax	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400bafb	     0xf844efbffff	                            je 0x400b64f	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400bb01	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6436	elf.c	FUNCTION_76	IF_11
0x400bb08	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      6436	elf.c	FUNCTION_76	IF_11
0x400bb0c	      0xb801000000	                              mov eax, 1	      6439	elf.c	FUNCTION_76
0x400bb11	          0x4885d2	                           test rdx, rdx	      6436	elf.c	FUNCTION_76	IF_11
0x400bb14	     0xf8437fbffff	                            je 0x400b651	      6436	elf.c	FUNCTION_76	IF_11
0x400bb1a	          0x4c89ef	                            mov rdi, r13	      6437	elf.c	FUNCTION_76	IF_11
0x400bb1d	            0xffd2	                                call rdx	      6437	elf.c	FUNCTION_76	IF_11
0x400bb1f	      0xe92dfbffff	                           jmp 0x400b651	      6437	elf.c	FUNCTION_76	IF_11
0x400bb24	         0xf1f4000	                         nop dword [rax]	      6437	elf.c	FUNCTION_76	IF_11
0x400bb28	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x400bb2c	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400bb30	     0xf8683fdffff	                           jbe 0x400b8b9	      4200	elf.c	FUNCTION_58	IF_1
0x400bb36	      0x4a8d4c3aff	                lea rcx, [rdx + r15 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x400bb3b	          0x4939cf	                            cmp r15, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400bb3e	     0xf8669fdffff	                           jbe 0x400b8ad	      4201	elf.c	FUNCTION_58	CALL_1
0x400bb44	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x400bb4b	      0xe969fdffff	                           jmp 0x400b8b9	      4201	elf.c	FUNCTION_58	CALL_1
0x400bb50	      0x41f6454640	           test byte [r13 + 0x46], 0x40 	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400bb55	     0xf85c2fbffff	                           jne 0x400b71d	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400bb5b	        0x488b3c24	                    mov rdi, qword [rsp]	       969	elf.c	FUNCTION_24	CALL_1
0x400bb5f	      0xe800000000	                          call 0x400bb64	       969	elf.c	FUNCTION_24	CALL_1
0x400bb64	          0x8d7002	                      lea esi, [rax + 2]	       970	elf.c	FUNCTION_24	CALL_2
0x400bb67	          0x4c89ef	                            mov rdi, r13	       970	elf.c	FUNCTION_24	CALL_2
0x400bb6a	      0x4889442420	             mov qword [rsp + 0x20], rax	       970	elf.c	FUNCTION_24	CALL_2
0x400bb6f	      0xe800000000	                          call 0x400bb74	       970	elf.c	FUNCTION_24	CALL_2
0x400bb74	          0x4885c0	                           test rax, rax	       971	elf.c	FUNCTION_24	IF_1
0x400bb77	     0xf84d2faffff	                            je 0x400b64f	       971	elf.c	FUNCTION_24	IF_1
0x400bb7d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_221	CALL_3
0x400bb82	        0x488b3424	                    mov rsi, qword [rsp]	        53	string3.h	FUNCTION_221	CALL_3
0x400bb86	        0x488d7802	                      lea rdi, [rax + 2]	        53	string3.h	FUNCTION_221	CALL_3
0x400bb8a	          0xc6002e	                    mov byte [rax], 0x2e	       973	elf.c	FUNCTION_24
0x400bb8d	        0xc640017a	                mov byte [rax + 1], 0x7a	       974	elf.c	FUNCTION_24
0x400bb91	      0x4889442410	             mov qword [rsp + 0x10], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400bb96	            0x89d2	                            mov edx, edx	        53	string3.h	FUNCTION_221	CALL_3
0x400bb98	        0x4883c601	                              add rsi, 1	        53	string3.h	FUNCTION_221	CALL_3
0x400bb9c	      0xe800000000	                          call 0x400bba1	        53	string3.h	FUNCTION_221	CALL_3
0x400bba1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_221	CALL_3
0x400bba6	        0x48890c24	                    mov qword [rsp], rcx	        53	string3.h	FUNCTION_221	CALL_3
0x400bbaa	      0xe96efbffff	                           jmp 0x400b71d	        53	string3.h	FUNCTION_221	CALL_3
0x400bbaf	              0x90	                                     nop	        53	string3.h	FUNCTION_221	CALL_3
0x400bbb0	        0x4c897d18	            mov qword [rbp + 0x18], r15 	      4202	elf.c	FUNCTION_58
0x400bbb4	      0xe909fdffff	                           jmp 0x400b8c2	      4202	elf.c	FUNCTION_58
0x400bbb9	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x400bbc0	      0xe97cfdffff	                           jmp 0x400b941	      4201	elf.c	FUNCTION_58	CALL_1
0x400bbc5	      0xe800000000	                          call 0x400bbca	      6440	elf.c	FUNCTION_76
0x400bbca	      0xba00000000	                              mov edx, 0	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400bbcf	      0xbebb180000	                         mov esi, 0x18bb	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400bbd4	      0xbf00000000	                              mov edi, 0	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400bbd9	      0xe800000000	                          call 0x400bbde	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
_bfd_elf_new_section_hook	functions,0:CALL,5:FOR,0:WHILE,0:SWITCH,0:IF,4:DO,0:ELSE,0	61
0x4006a40	              0x55	                                push rbp	      2834	elf.c	FUNCTION_41
0x4006a41	              0x53	                                push rbx	      2834	elf.c	FUNCTION_41
0x4006a42	          0x4889fd	                            mov rbp, rdi	      2834	elf.c	FUNCTION_41
0x4006a45	          0x4889f3	                            mov rbx, rsi	      2834	elf.c	FUNCTION_41
0x4006a48	        0x4883ec08	                              sub rsp, 8	      2834	elf.c	FUNCTION_41
0x4006a4c	    0x4883bee00000	               cmp qword [rsi + 0xe0], 0	      2840	elf.c	FUNCTION_41	IF_1
0x4006a54	     0xf8496000000	                            je 0x4006af0	      2840	elf.c	FUNCTION_41	IF_1
0x4006a5a	        0x488b4508	                mov rax, qword [rbp + 8]	      2850	elf.c	FUNCTION_41	CALL_2
0x4006a5e	         0xfb65325	           movzx edx, byte [rbx + 0x25] 	      2851	elf.c	FUNCTION_41
0x4006a62	    0x488b88680300	           mov rcx, qword [rax + 0x368] 	      2850	elf.c	FUNCTION_41	CALL_2
0x4006a69	          0x83e2fb	                     and edx, 0xfffffffb	      2851	elf.c	FUNCTION_41
0x4006a6c	     0xfb681880300	          movzx eax, byte [rcx + 0x388] 	      2851	elf.c	FUNCTION_41
0x4006a73	          0xc0e802	                               shr al, 2	      2851	elf.c	FUNCTION_41
0x4006a76	          0x83e004	                              and eax, 4	      2851	elf.c	FUNCTION_41
0x4006a79	             0x9d0	                             or eax, edx	      2851	elf.c	FUNCTION_41
0x4006a7b	          0x884325	               mov byte [rbx + 0x25], al	      2851	elf.c	FUNCTION_41
0x4006a7e	         0xfb64544	           movzx eax, byte [rbp + 0x44] 	      2862	elf.c	FUNCTION_41	IF_3
0x4006a82	          0x83e018	                           and eax, 0x18	      2862	elf.c	FUNCTION_41	IF_3
0x4006a85	            0x3c08	                               cmp al, 8	      2862	elf.c	FUNCTION_41	IF_3
0x4006a87	            0x745f	                            je 0x4006ae8	      2862	elf.c	FUNCTION_41	IF_3
0x4006a89	          0x4889de	                            mov rsi, rbx	      2865	elf.c	FUNCTION_41	IF_3
0x4006a8c	          0x4889ef	                            mov rdi, rbp	      2865	elf.c	FUNCTION_41	IF_3
0x4006a8f	    0xff91a0000000	                 call qword [rcx + 0xa0]	      2865	elf.c	FUNCTION_41	IF_3
0x4006a95	          0x4885c0	                           test rax, rax	      2866	elf.c	FUNCTION_41	IF_3	IF_4
0x4006a98	            0x741c	                            je 0x4006ab6	      2866	elf.c	FUNCTION_41	IF_3	IF_4
0x4006a9a	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4006a9d	          0x8b4810	            mov ecx, dword [rax + 0x10] 	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4006aa0	            0x85d2	                           test edx, edx	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4006aa2	            0x752c	                           jne 0x4006ad0	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4006aa4	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x4006aab	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4006aaf	          0x894a04	                mov dword [rdx + 4], ecx	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x4006ab2	        0x48894208	                mov qword [rdx + 8], rax	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4006ab6	        0x4883c408	                              add rsp, 8	      2878	elf.c	FUNCTION_41
0x4006aba	          0x4889de	                            mov rsi, rbx	      2877	elf.c	FUNCTION_41	CALL_5
0x4006abd	          0x4889ef	                            mov rdi, rbp	      2877	elf.c	FUNCTION_41	CALL_5
0x4006ac0	              0x5b	                                 pop rbx	      2878	elf.c	FUNCTION_41
0x4006ac1	              0x5d	                                 pop rbp	      2878	elf.c	FUNCTION_41
0x4006ac2	      0xe900000000	                           jmp 0x4006ac7	      2877	elf.c	FUNCTION_41	CALL_5
0x4006ac7	    0x660f1f840000	                    nop word [rax + rax]	      2877	elf.c	FUNCTION_41	CALL_5
0x4006ad0	    0x81e200001000	                       and edx, 0x100000	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x4006ad6	            0x75cc	                           jne 0x4006aa4	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x4006ad8	          0x8d51f2	                    lea edx, [rcx - 0xe]	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4006adb	          0x83fa01	                              cmp edx, 1	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4006ade	            0x77d6	                            ja 0x4006ab6	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4006ae0	            0xebc2	                           jmp 0x4006aa4	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4006ae2	    0x660f1f440000	                    nop word [rax + rax]	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4006ae8	        0xf6432210	           test byte [rbx + 0x22], 0x10 	      2863	elf.c	FUNCTION_41	IF_3
0x4006aec	            0x74c8	                            je 0x4006ab6	      2863	elf.c	FUNCTION_41	IF_3
0x4006aee	            0xeb99	                           jmp 0x4006a89	      2863	elf.c	FUNCTION_41	IF_3
0x4006af0	      0xbee0000000	                           mov esi, 0xe0	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x4006af5	      0xe800000000	                          call 0x4006afa	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x4006afa	          0x4885c0	                           test rax, rax	      2844	elf.c	FUNCTION_41	IF_1	IF_2
0x4006afd	            0x740c	                            je 0x4006b0b	      2844	elf.c	FUNCTION_41	IF_1	IF_2
0x4006aff	    0x488983e00000	             mov qword [rbx + 0xe0], rax	      2846	elf.c	FUNCTION_41	IF_1
0x4006b06	      0xe94fffffff	                           jmp 0x4006a5a	      2846	elf.c	FUNCTION_41	IF_1
0x4006b0b	        0x4883c408	                              add rsp, 8	      2878	elf.c	FUNCTION_41
0x4006b0f	            0x31c0	                            xor eax, eax	      2878	elf.c	FUNCTION_41
0x4006b11	              0x5b	                                 pop rbx	      2878	elf.c	FUNCTION_41
0x4006b12	              0x5d	                                 pop rbp	      2878	elf.c	FUNCTION_41
0x4006b13	              0xc3	                                     ret	      2878	elf.c	FUNCTION_41
elfcore_write_linux_prpsinfo64	functions,0:CALL,5:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,1	116
0x40122a0	            0x4155	                                push r13	     10618	elf.c	FUNCTION_164
0x40122a2	            0x4154	                                push r12	     10618	elf.c	FUNCTION_164
0x40122a4	          0x4989d5	                            mov r13, rdx	     10618	elf.c	FUNCTION_164
0x40122a7	              0x55	                                push rbp	     10618	elf.c	FUNCTION_164
0x40122a8	              0x53	                                push rbx	     10618	elf.c	FUNCTION_164
0x40122a9	          0x4889fd	                            mov rbp, rdi	     10618	elf.c	FUNCTION_164
0x40122ac	          0x4989f4	                            mov r12, rsi	     10618	elf.c	FUNCTION_164
0x40122af	          0x4889cb	                            mov rbx, rcx	     10618	elf.c	FUNCTION_164
0x40122b2	    0x4881ec980000	                           sub rsp, 0x98	     10618	elf.c	FUNCTION_164
0x40122b9	    0x64488b042528	                mov rax, qword fs:[0x28]	     10618	elf.c	FUNCTION_164
0x40122c2	    0x488984248800	             mov qword [rsp + 0x88], rax	     10618	elf.c	FUNCTION_164
0x40122ca	            0x31c0	                            xor eax, eax	     10618	elf.c	FUNCTION_164
0x40122cc	        0x488b4708	                mov rax, qword [rdi + 8]	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40122d0	      0x488d742408	                      lea rsi, [rsp + 8]	       223	elf-linux-core.h	FUNCTION_236	CALL_5
0x40122d5	    0x488b90680300	           mov rdx, qword [rax + 0x368] 	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40122dc	    0xf6828b030000	          test byte [rdx + 0x38b], 0x20 	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x40122e3	           0xfb611	                   movzx edx, byte [rcx]	       219	elf-linux-core.h	FUNCTION_236	CALL_1
0x40122e6	          0x881424	                      mov byte [rsp], dl	       219	elf-linux-core.h	FUNCTION_236	CALL_1
0x40122e9	         0xfb65101	               movzx edx, byte [rcx + 1]	       220	elf-linux-core.h	FUNCTION_236	CALL_2
0x40122ed	        0x88542401	                  mov byte [rsp + 1], dl	       220	elf-linux-core.h	FUNCTION_236	CALL_2
0x40122f1	         0xfb65102	               movzx edx, byte [rcx + 2]	       221	elf-linux-core.h	FUNCTION_236	CALL_3
0x40122f5	        0x88542402	                  mov byte [rsp + 2], dl	       221	elf-linux-core.h	FUNCTION_236	CALL_3
0x40122f9	         0xfb65103	               movzx edx, byte [rcx + 3]	       222	elf-linux-core.h	FUNCTION_236	CALL_4
0x40122fd	        0x88542403	                  mov byte [rsp + 3], dl	       222	elf-linux-core.h	FUNCTION_236	CALL_4
0x4012301	        0x488b7908	                mov rdi, qword [rcx + 8]	       223	elf-linux-core.h	FUNCTION_236	CALL_5
0x4012305	     0xf85d5000000	                           jne 0x40123e0	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x401230b	          0xff5030	                 call qword [rax + 0x30]	       170	elf-linux-core.h	FUNCTION_235	CALL_5
0x401230e	        0x488b4508	                mov rax, qword [rbp + 8]	       171	elf-linux-core.h	FUNCTION_235	CALL_6
0x4012312	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       171	elf-linux-core.h	FUNCTION_235	CALL_6
0x4012315	      0x488d742410	                   lea rsi, [rsp + 0x10]	       171	elf-linux-core.h	FUNCTION_235	CALL_6
0x401231a	          0xff5048	                 call qword [rax + 0x48]	       171	elf-linux-core.h	FUNCTION_235	CALL_6
0x401231d	        0x488b4508	                mov rax, qword [rbp + 8]	       172	elf-linux-core.h	FUNCTION_235	CALL_7
0x4012321	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       172	elf-linux-core.h	FUNCTION_235	CALL_7
0x4012324	      0x488d742414	                   lea rsi, [rsp + 0x14]	       172	elf-linux-core.h	FUNCTION_235	CALL_7
0x4012329	          0xff5048	                 call qword [rax + 0x48]	       172	elf-linux-core.h	FUNCTION_235	CALL_7
0x401232c	        0x488b4508	                mov rax, qword [rbp + 8]	       173	elf-linux-core.h	FUNCTION_235	CALL_8
0x4012330	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       173	elf-linux-core.h	FUNCTION_235	CALL_8
0x4012334	      0x488d742418	                   lea rsi, [rsp + 0x18]	       173	elf-linux-core.h	FUNCTION_235	CALL_8
0x4012339	          0xff5048	                 call qword [rax + 0x48]	       173	elf-linux-core.h	FUNCTION_235	CALL_8
0x401233c	        0x488b4508	                mov rax, qword [rbp + 8]	       174	elf-linux-core.h	FUNCTION_235	CALL_9
0x4012340	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       174	elf-linux-core.h	FUNCTION_235	CALL_9
0x4012344	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       174	elf-linux-core.h	FUNCTION_235	CALL_9
0x4012349	          0xff5048	                 call qword [rax + 0x48]	       174	elf-linux-core.h	FUNCTION_235	CALL_9
0x401234c	        0x488b4508	                mov rax, qword [rbp + 8]	       175	elf-linux-core.h	FUNCTION_235	CALL_10
0x4012350	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       175	elf-linux-core.h	FUNCTION_235	CALL_10
0x4012354	      0x488d742420	                   lea rsi, [rsp + 0x20]	       175	elf-linux-core.h	FUNCTION_235	CALL_10
0x4012359	          0xff5048	                 call qword [rax + 0x48]	       175	elf-linux-core.h	FUNCTION_235	CALL_10
0x401235c	        0x488b4508	                mov rax, qword [rbp + 8]	       176	elf-linux-core.h	FUNCTION_235	CALL_11
0x4012360	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       176	elf-linux-core.h	FUNCTION_235	CALL_11
0x4012364	      0x488d742424	                   lea rsi, [rsp + 0x24]	       176	elf-linux-core.h	FUNCTION_235	CALL_11
0x4012369	          0xff5048	                 call qword [rax + 0x48]	       176	elf-linux-core.h	FUNCTION_235	CALL_11
0x401236c	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x4012371	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x4012375	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x401237a	      0xe800000000	                          call 0x401237f	       126	string3.h	FUNCTION_229	CALL_3
0x401237f	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       126	string3.h	FUNCTION_229	CALL_3
0x4012384	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_229	CALL_3
0x4012388	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x401238d	      0xe800000000	                          call 0x4012392	       126	string3.h	FUNCTION_229	CALL_3
0x4012392	        0x4883ec08	                              sub rsp, 8	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4012396	      0x6888000000	                               push 0x88	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401239b	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123a0	      0xb900000000	                              mov ecx, 0	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123a5	          0x4c89ea	                            mov rdx, r13	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123a8	    0x41b803000000	                              mov r8d, 3	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123ae	          0x4c89e6	                            mov rsi, r12	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123b1	          0x4889ef	                            mov rdi, rbp	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123b4	      0xe800000000	                          call 0x40123b9	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123b9	              0x5a	                                 pop rdx	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123ba	              0x59	                                 pop rcx	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x40123bb	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	     10635	elf.c	FUNCTION_164
0x40123c3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10635	elf.c	FUNCTION_164
0x40123cc	     0xf85a3000000	                           jne 0x4012475	     10635	elf.c	FUNCTION_164
0x40123d2	    0x4881c4980000	                           add rsp, 0x98	     10635	elf.c	FUNCTION_164
0x40123d9	              0x5b	                                 pop rbx	     10635	elf.c	FUNCTION_164
0x40123da	              0x5d	                                 pop rbp	     10635	elf.c	FUNCTION_164
0x40123db	            0x415c	                                 pop r12	     10635	elf.c	FUNCTION_164
0x40123dd	            0x415d	                                 pop r13	     10635	elf.c	FUNCTION_164
0x40123df	              0xc3	                                     ret	     10635	elf.c	FUNCTION_164
0x40123e0	          0xff5030	                 call qword [rax + 0x30]	       223	elf-linux-core.h	FUNCTION_236	CALL_5
0x40123e3	        0x488b4508	                mov rax, qword [rbp + 8]	       224	elf-linux-core.h	FUNCTION_236	CALL_6
0x40123e7	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       224	elf-linux-core.h	FUNCTION_236	CALL_6
0x40123ea	      0x488d742410	                   lea rsi, [rsp + 0x10]	       224	elf-linux-core.h	FUNCTION_236	CALL_6
0x40123ef	          0xff5060	                 call qword [rax + 0x60]	       224	elf-linux-core.h	FUNCTION_236	CALL_6
0x40123f2	        0x488b4508	                mov rax, qword [rbp + 8]	       225	elf-linux-core.h	FUNCTION_236	CALL_7
0x40123f6	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       225	elf-linux-core.h	FUNCTION_236	CALL_7
0x40123f9	      0x488d742412	                   lea rsi, [rsp + 0x12]	       225	elf-linux-core.h	FUNCTION_236	CALL_7
0x40123fe	          0xff5060	                 call qword [rax + 0x60]	       225	elf-linux-core.h	FUNCTION_236	CALL_7
0x4012401	        0x488b4508	                mov rax, qword [rbp + 8]	       226	elf-linux-core.h	FUNCTION_236	CALL_8
0x4012405	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       226	elf-linux-core.h	FUNCTION_236	CALL_8
0x4012409	      0x488d742414	                   lea rsi, [rsp + 0x14]	       226	elf-linux-core.h	FUNCTION_236	CALL_8
0x401240e	          0xff5048	                 call qword [rax + 0x48]	       226	elf-linux-core.h	FUNCTION_236	CALL_8
0x4012411	        0x488b4508	                mov rax, qword [rbp + 8]	       227	elf-linux-core.h	FUNCTION_236	CALL_9
0x4012415	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       227	elf-linux-core.h	FUNCTION_236	CALL_9
0x4012419	      0x488d742418	                   lea rsi, [rsp + 0x18]	       227	elf-linux-core.h	FUNCTION_236	CALL_9
0x401241e	          0xff5048	                 call qword [rax + 0x48]	       227	elf-linux-core.h	FUNCTION_236	CALL_9
0x4012421	        0x488b4508	                mov rax, qword [rbp + 8]	       228	elf-linux-core.h	FUNCTION_236	CALL_10
0x4012425	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       228	elf-linux-core.h	FUNCTION_236	CALL_10
0x4012429	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       228	elf-linux-core.h	FUNCTION_236	CALL_10
0x401242e	          0xff5048	                 call qword [rax + 0x48]	       228	elf-linux-core.h	FUNCTION_236	CALL_10
0x4012431	        0x488b4508	                mov rax, qword [rbp + 8]	       229	elf-linux-core.h	FUNCTION_236	CALL_11
0x4012435	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       229	elf-linux-core.h	FUNCTION_236	CALL_11
0x4012439	      0x488d742420	                   lea rsi, [rsp + 0x20]	       229	elf-linux-core.h	FUNCTION_236	CALL_11
0x401243e	          0xff5048	                 call qword [rax + 0x48]	       229	elf-linux-core.h	FUNCTION_236	CALL_11
0x4012441	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	       126	string3.h	FUNCTION_229	CALL_3
0x4012446	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x401244a	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x401244f	      0xe800000000	                          call 0x4012454	       126	string3.h	FUNCTION_229	CALL_3
0x4012454	      0x488d7c2434	                   lea rdi, [rsp + 0x34]	       126	string3.h	FUNCTION_229	CALL_3
0x4012459	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_229	CALL_3
0x401245d	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x4012462	      0xe800000000	                          call 0x4012467	       126	string3.h	FUNCTION_229	CALL_3
0x4012467	        0x4883ec08	                              sub rsp, 8	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x401246b	      0x6884000000	                               push 0x84	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4012470	      0xe926ffffff	                           jmp 0x401239b	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4012475	      0xe800000000	                          call 0x401247a	     10635	elf.c	FUNCTION_164
_bfd_elf_copy_private_bfd_data	functions,0:CALL,26:FOR,3:WHILE,0:SWITCH,0:IF,15:DO,0:ELSE,0	204
0x4003e70	        0x488b4708	                mov rax, qword [rdi + 8]	      1466	elf.c	FUNCTION_31	IF_1	CALL_3
0x4003e74	        0x83780805	                  cmp dword [rax + 8], 5	      1466	elf.c	FUNCTION_31	IF_1	CALL_3
0x4003e78	            0x7406	                            je 0x4003e80	      1466	elf.c	FUNCTION_31	IF_1	CALL_3
0x4003e7a	      0xb801000000	                              mov eax, 1	      1582	elf.c	FUNCTION_31
0x4003e7f	              0xc3	                                     ret	      1582	elf.c	FUNCTION_31
0x4003e80	        0x488b4608	                mov rax, qword [rsi + 8]	      1467	elf.c	FUNCTION_31	IF_1	CALL_4
0x4003e84	        0x83780805	                  cmp dword [rax + 8], 5	      1467	elf.c	FUNCTION_31	IF_1	CALL_4
0x4003e88	            0x75f0	                           jne 0x4003e7a	      1467	elf.c	FUNCTION_31	IF_1	CALL_4
0x4003e8a	            0x4157	                                push r15	      1460	elf.c	FUNCTION_31
0x4003e8c	            0x4156	                                push r14	      1460	elf.c	FUNCTION_31
0x4003e8e	            0x4155	                                push r13	      1460	elf.c	FUNCTION_31
0x4003e90	            0x4154	                                push r12	      1460	elf.c	FUNCTION_31
0x4003e92	              0x55	                                push rbp	      1460	elf.c	FUNCTION_31
0x4003e93	              0x53	                                push rbx	      1460	elf.c	FUNCTION_31
0x4003e94	        0x4883ec18	                           sub rsp, 0x18	      1460	elf.c	FUNCTION_31
0x4003e98	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1462	elf.c	FUNCTION_31	CALL_2
0x4003e9f	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1461	elf.c	FUNCTION_31	CALL_1
0x4003ea6	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      1470	elf.c	FUNCTION_31	IF_2	CALL_5
0x4003ead	        0x4c8b7258	            mov r14, qword [rdx + 0x58] 	      1461	elf.c	FUNCTION_31	CALL_1
0x4003eb1	        0x4c8b5058	            mov r10, qword [rax + 0x58] 	      1462	elf.c	FUNCTION_31	CALL_2
0x4003eb5	        0x448b415c	            mov r8d, dword [rcx + 0x5c] 	      1470	elf.c	FUNCTION_31	IF_2	CALL_5
0x4003eb9	          0x4585c0	                           test r8d, r8d	      1470	elf.c	FUNCTION_31	IF_2	CALL_5
0x4003ebc	            0x7524	                           jne 0x4003ee2	      1470	elf.c	FUNCTION_31	IF_2	CALL_5
0x4003ebe	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1472	elf.c	FUNCTION_31	IF_2	CALL_7
0x4003ec2	        0x48895030	             mov qword [rax + 0x30], rdx	      1472	elf.c	FUNCTION_31	IF_2	CALL_7
0x4003ec6	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_8
0x4003ecd	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_8
0x4003ed4	    0xc7425c010000	               mov dword [rdx + 0x5c], 1	      1473	elf.c	FUNCTION_31	IF_2	CALL_8
0x4003edb	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_8
0x4003ee2	    0x488b92f00200	           mov rdx, qword [rdx + 0x2f0] 	      1476	elf.c	FUNCTION_31	CALL_10
0x4003ee9	    0x488990f00200	            mov qword [rax + 0x2f0], rdx	      1476	elf.c	FUNCTION_31	CALL_10
0x4003ef0	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1480	elf.c	FUNCTION_31	CALL_12
0x4003ef7	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1479	elf.c	FUNCTION_31	CALL_11
0x4003efe	         0xfb65207	               movzx edx, byte [rdx + 7]	      1480	elf.c	FUNCTION_31	CALL_12
0x4003f02	          0x885007	                  mov byte [rax + 7], dl	      1479	elf.c	FUNCTION_31	CALL_11
0x4003f05	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1483	elf.c	FUNCTION_31	IF_3	CALL_13
0x4003f0c	         0xfb64008	               movzx eax, byte [rax + 8]	      1483	elf.c	FUNCTION_31	IF_3	CALL_13
0x4003f10	            0x84c0	                             test al, al	      1483	elf.c	FUNCTION_31	IF_3	CALL_13
0x4003f12	            0x740a	                            je 0x4003f1e	      1483	elf.c	FUNCTION_31	IF_3	CALL_13
0x4003f14	    0x488b96f80000	            mov rdx, qword [rsi + 0xf8] 	      1484	elf.c	FUNCTION_31	IF_3	CALL_14
0x4003f1b	          0x884208	                  mov byte [rdx + 8], al	      1485	elf.c	FUNCTION_31	CALL_15
0x4003f1e	        0x4c891424	                    mov qword [rsp], r10	      1485	elf.c	FUNCTION_31	CALL_15
0x4003f22	          0x4989f7	                            mov r15, rsi	      1485	elf.c	FUNCTION_31	CALL_15
0x4003f25	          0x4989fd	                            mov r13, rdi	      1485	elf.c	FUNCTION_31	CALL_15
0x4003f28	      0xe800000000	                          call 0x4003f2d	      1488	elf.c	FUNCTION_31	CALL_16
0x4003f2d	          0x4d85f6	                           test r14, r14	      1490	elf.c	FUNCTION_31	IF_4
0x4003f30	     0xf848a010000	                            je 0x40040c0	      1490	elf.c	FUNCTION_31	IF_4
0x4003f36	        0x4c8b1424	                    mov r10, qword [rsp]	      1490	elf.c	FUNCTION_31	IF_4
0x4003f3a	          0x4d85d2	                           test r10, r10	      1490	elf.c	FUNCTION_31	IF_4
0x4003f3d	     0xf847d010000	                            je 0x40040c0	      1490	elf.c	FUNCTION_31	IF_4
0x4003f43	        0x498b4708	                mov rax, qword [r15 + 8]	      1493	elf.c	FUNCTION_31	CALL_17
0x4003f47	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1493	elf.c	FUNCTION_31	CALL_17
0x4003f4e	        0x48890424	                    mov qword [rsp], rax	      1493	elf.c	FUNCTION_31	CALL_17
0x4003f52	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f59	    0x8b90fc020000	           mov edx, dword [rax + 0x2fc] 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f5f	          0x83fa01	                              cmp edx, 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f62	     0xf8658010000	                           jbe 0x40040c0	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f68	    0x41bc01000000	                             mov r12d, 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f6e	            0xeb14	                           jmp 0x4003f84	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f70	      0x3dffffff5f	                     cmp eax, 0x5fffffff	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003f75	            0x7721	                            ja 0x4003f98	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003f77	        0x4183c401	                             add r12d, 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f7b	          0x4139d4	                           cmp r12d, edx	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f7e	     0xf833c010000	                           jae 0x40040c0	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4003f84	          0x4489e0	                           mov eax, r12d	      1499	elf.c	FUNCTION_31	FOR_1
0x4003f87	        0x498b1cc2	            mov rbx, qword [r10 + rax*8]	      1499	elf.c	FUNCTION_31	FOR_1
0x4003f8b	          0x4885db	                           test rbx, rbx	      1504	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003f8e	            0x74e7	                            je 0x4003f77	      1504	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003f90	          0x8b4304	                mov eax, dword [rbx + 4]	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003f93	          0x83f808	                              cmp eax, 8	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003f96	            0x75d8	                           jne 0x4003f70	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4003f98	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003f9d	            0x74d8	                            je 0x4003f77	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003f9f	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003fa2	            0x85c9	                           test ecx, ecx	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003fa4	            0x7407	                            je 0x4003fad	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003fa6	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003fa9	            0x85c0	                           test eax, eax	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003fab	            0x75ca	                           jne 0x4003f77	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4003fad	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4003fb4	    0x8bb8fc020000	           mov edi, dword [rax + 0x2fc] 	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4003fba	          0x83ff01	                              cmp edi, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4003fbd	     0xf86a3010000	                           jbe 0x4004166	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4003fc3	        0x498d4608	                      lea rax, [r14 + 8]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4003fc7	      0xbd01000000	                              mov ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4003fcc	         0xf1f4000	                         nop dword [rax]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4003fd0	          0x488b10	                    mov rdx, qword [rax]	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x4003fd3	          0x4885d2	                           test rdx, rdx	      1521	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x4003fd6	            0x7424	                            je 0x4003ffc	      1521	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x4003fd8	        0x488b4b40	            mov rcx, qword [rbx + 0x40] 	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003fdc	          0x4885c9	                           test rcx, rcx	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003fdf	            0x741b	                            je 0x4003ffc	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003fe1	        0x488b7240	            mov rsi, qword [rdx + 0x40] 	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003fe5	          0x4885f6	                           test rsi, rsi	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003fe8	            0x7412	                            je 0x4003ffc	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003fea	        0x488b7668	            mov rsi, qword [rsi + 0x68] 	      1526	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003fee	          0x4839f1	                            cmp rcx, rsi	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ff1	            0x7509	                           jne 0x4003ffc	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ff3	          0x4885f6	                           test rsi, rsi	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ff6	     0xf85dc000000	                           jne 0x40040d8	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4003ffc	          0x83c501	                              add ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4003fff	        0x4883c008	                              add rax, 8	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4004003	            0x39fd	                            cmp ebp, edi	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4004005	            0x75c9	                           jne 0x4003fd0	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4004007	      0xbd01000000	                              mov ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x400400c	            0xeb12	                           jmp 0x4004020	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x400400e	            0x6690	                                     nop	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4004010	          0x3b4204	                cmp eax, dword [rdx + 4]	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004013	            0x741e	                            je 0x4004033	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004015	          0x83c501	                              add ebp, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4004018	            0x39fd	                            cmp ebp, edi	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x400401a	     0xf8388000000	                           jae 0x40040a8	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4004020	            0x89e8	                            mov eax, ebp	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4004022	        0x498b14c6	            mov rdx, qword [r14 + rax*8]	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4004026	          0x4885d2	                           test rdx, rdx	      1549	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x4004029	            0x74ea	                            je 0x4004015	      1549	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x400402b	          0x8b4304	                mov eax, dword [rbx + 4]	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400402e	          0x83f808	                              cmp eax, 8	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004031	            0x75dd	                           jne 0x4004010	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004033	        0x488b4208	                mov rax, qword [rdx + 8]	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004037	        0x48334308	                xor rax, qword [rbx + 8]	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400403b	    0x48a9bfffffff	            test rax, 0xffffffffffffffbf	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004041	            0x75d2	                           jne 0x4004015	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004043	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004047	        0x48394230	            cmp qword [rdx + 0x30], rax 	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400404b	            0x75c8	                           jne 0x4004015	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400404d	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004051	        0x48394238	            cmp qword [rdx + 0x38], rax 	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004055	            0x75be	                           jne 0x4004015	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004057	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400405b	        0x48394220	            cmp qword [rdx + 0x20], rax 	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400405f	            0x75b4	                           jne 0x4004015	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004061	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004065	        0x48394210	            cmp qword [rdx + 0x10], rax 	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004069	            0x75aa	                           jne 0x4004015	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400406b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400406f	        0x48394228	            cmp qword [rdx + 0x28], rax 	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004073	            0x74a0	                            je 0x4004015	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4004075	          0x4c89ef	                            mov rdi, r13	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4004078	          0x4589e0	                           mov r8d, r12d	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x400407b	          0x4889d9	                            mov rcx, rbx	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x400407e	          0x4c89fe	                            mov rsi, r15	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4004081	      0x4c89542408	                mov qword [rsp + 8], r10	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4004086	      0xe8c5cfffff	    call sym.copy_special_section_fields	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x400408b	            0x85c0	                           test eax, eax	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x400408d	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4004094	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4004099	    0x8bb8fc020000	           mov edi, dword [rax + 0x2fc] 	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x400409f	     0xf8470ffffff	                            je 0x4004015	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x40040a5	           0xf1f00	                         nop dword [rax]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x40040a8	            0x39fd	                            cmp ebp, edi	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x40040aa	            0x7474	                            je 0x4004120	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x40040ac	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x40040b3	    0x8b90fc020000	           mov edx, dword [rax + 0x2fc] 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x40040b9	      0xe9b9feffff	                           jmp 0x4003f77	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x40040be	            0x6690	                                     nop	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x40040c0	        0x4883c418	                           add rsp, 0x18	      1582	elf.c	FUNCTION_31
0x40040c4	      0xb801000000	                              mov eax, 1	      1582	elf.c	FUNCTION_31
0x40040c9	              0x5b	                                 pop rbx	      1582	elf.c	FUNCTION_31
0x40040ca	              0x5d	                                 pop rbp	      1582	elf.c	FUNCTION_31
0x40040cb	            0x415c	                                 pop r12	      1582	elf.c	FUNCTION_31
0x40040cd	            0x415d	                                 pop r13	      1582	elf.c	FUNCTION_31
0x40040cf	            0x415e	                                 pop r14	      1582	elf.c	FUNCTION_31
0x40040d1	            0x415f	                                 pop r15	      1582	elf.c	FUNCTION_31
0x40040d3	              0xc3	                                     ret	      1582	elf.c	FUNCTION_31
0x40040d4	         0xf1f4000	                         nop dword [rax]	      1582	elf.c	FUNCTION_31
0x40040d8	          0x4c89ef	                            mov rdi, r13	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040db	          0x4589e0	                           mov r8d, r12d	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040de	          0x4889d9	                            mov rcx, rbx	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040e1	          0x4c89fe	                            mov rsi, r15	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040e4	      0x4c89542408	                mov qword [rsp + 8], r10	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040e9	      0xe862cfffff	    call sym.copy_special_section_fields	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040ee	            0x85c0	                           test eax, eax	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040f0	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040f7	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x40040fc	    0x8bb8fc020000	           mov edi, dword [rax + 0x2fc] 	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4004102	            0x7514	                           jne 0x4004118	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4004104	          0x83ff01	                              cmp edi, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4004107	      0xbd01000000	                              mov ebp, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x400410c	            0x769a	                           jbe 0x40040a8	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x400410e	      0xe9f4feffff	                           jmp 0x4004007	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4004113	       0xf1f440000	                   nop dword [rax + rax]	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4004118	            0x39ef	                            cmp edi, ebp	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_22
0x400411a	            0x7790	                            ja 0x40040ac	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_22
0x400411c	            0xebe6	                           jmp 0x4004104	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_22
0x400411e	            0x6690	                                     nop	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_22
0x4004120	    0x817b04ffffff	        cmp dword [rbx + 4], 0x5fffffff 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x4004127	            0x7683	                           jbe 0x40040ac	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x4004129	        0x488b0424	                    mov rax, qword [rsp]	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x400412d	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4004134	          0x4885c0	                           test rax, rax	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4004137	     0xf846fffffff	                            je 0x40040ac	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x400413d	      0x4c89542408	                mov qword [rsp + 8], r10	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4004142	            0x31d2	                            xor edx, edx	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4004144	          0x4889d9	                            mov rcx, rbx	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4004147	          0x4c89fe	                            mov rsi, r15	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x400414a	          0x4c89ef	                            mov rdi, r13	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x400414d	            0xffd0	                                call rax	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x400414f	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4004156	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x400415b	    0x8b90fc020000	           mov edx, dword [rax + 0x2fc] 	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4004161	      0xe911feffff	                           jmp 0x4003f77	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4004166	      0xbd01000000	                              mov ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x400416b	      0xe938ffffff	                           jmp 0x40040a8	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
elfcore_grok_spu_note	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,2:DO,0:ELSE,0	37
0x4000110	            0x4154	                                push r12	     10421	elf.c	FUNCTION_160
0x4000112	              0x55	                                push rbp	     10421	elf.c	FUNCTION_160
0x4000113	          0x4989fc	                            mov r12, rdi	     10421	elf.c	FUNCTION_160
0x4000116	              0x53	                                push rbx	     10421	elf.c	FUNCTION_160
0x4000117	          0x488b2e	                    mov rbp, qword [rsi]	     10427	elf.c	FUNCTION_160
0x400011a	          0x4889f3	                            mov rbx, rsi	     10421	elf.c	FUNCTION_160
0x400011d	          0x4889ee	                            mov rsi, rbp	     10428	elf.c	FUNCTION_160	CALL_1
0x4000120	      0xe800000000	                          call 0x4000125	     10428	elf.c	FUNCTION_160	CALL_1
0x4000125	          0x4885c0	                           test rax, rax	     10429	elf.c	FUNCTION_160	IF_1
0x4000128	            0x7456	                            je 0x4000180	     10429	elf.c	FUNCTION_160	IF_1
0x400012a	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_221	CALL_3
0x400012e	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x4000131	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4000134	      0xe800000000	                          call 0x4000139	        53	string3.h	FUNCTION_221	CALL_3
0x4000139	      0xba00010000	                          mov edx, 0x100	     10434	elf.c	FUNCTION_160	CALL_3
0x400013e	      0xc64428ff00	             mov byte [rax + rbp - 1], 0	     10432	elf.c	FUNCTION_160
0x4000143	          0x4889c6	                            mov rsi, rax	     10434	elf.c	FUNCTION_160	CALL_3
0x4000146	          0x4c89e7	                            mov rdi, r12	     10434	elf.c	FUNCTION_160	CALL_3
0x4000149	      0xe800000000	                          call 0x400014e	     10434	elf.c	FUNCTION_160	CALL_3
0x400014e	          0x4885c0	                           test rax, rax	     10435	elf.c	FUNCTION_160	IF_2
0x4000151	            0x742d	                            je 0x4000180	     10435	elf.c	FUNCTION_160	IF_2
0x4000153	        0x488b5308	                mov rdx, qword [rbx + 8]	     10438	elf.c	FUNCTION_160
0x4000157	        0x48895038	             mov qword [rax + 0x38], rdx	     10438	elf.c	FUNCTION_160
0x400015b	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	     10439	elf.c	FUNCTION_160
0x400015f	    0xc74070010000	               mov dword [rax + 0x70], 1	     10440	elf.c	FUNCTION_160
0x4000166	    0x488990900000	             mov qword [rax + 0x90], rdx	     10439	elf.c	FUNCTION_160
0x400016d	      0xb801000000	                              mov eax, 1	     10442	elf.c	FUNCTION_160
0x4000172	              0x5b	                                 pop rbx	     10443	elf.c	FUNCTION_160
0x4000173	              0x5d	                                 pop rbp	     10443	elf.c	FUNCTION_160
0x4000174	            0x415c	                                 pop r12	     10443	elf.c	FUNCTION_160
0x4000176	              0xc3	                                     ret	     10443	elf.c	FUNCTION_160
0x4000177	    0x660f1f840000	                    nop word [rax + rax]	     10443	elf.c	FUNCTION_160
0x4000180	              0x5b	                                 pop rbx	     10443	elf.c	FUNCTION_160
0x4000181	            0x31c0	                            xor eax, eax	     10430	elf.c	FUNCTION_160	IF_1
0x4000183	              0x5d	                                 pop rbp	     10443	elf.c	FUNCTION_160
0x4000184	            0x415c	                                 pop r12	     10443	elf.c	FUNCTION_160
0x4000186	              0xc3	                                     ret	     10443	elf.c	FUNCTION_160
_bfd_elf_swap_versym_out	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	6
0x4003020	           0xfb70e	                   movzx ecx, word [rsi]	       191	elf.c	FUNCTION_10	CALL_1
0x4003023	        0x488b4708	                mov rax, qword [rdi + 8]	       191	elf.c	FUNCTION_10	CALL_1
0x4003027	          0x4889d6	                            mov rsi, rdx	       191	elf.c	FUNCTION_10	CALL_1
0x400302a	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       191	elf.c	FUNCTION_10	CALL_1
0x4003031	          0x4889cf	                            mov rdi, rcx	       191	elf.c	FUNCTION_10	CALL_1
0x4003034	            0xffe0	                                 jmp rax	       191	elf.c	FUNCTION_10	CALL_1
_bfd_elf_get_reloc_upper_bound	functions,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	4
0x400e000	    0x8b8688000000	            mov eax, dword [rsi + 0x88] 	      8151	elf.c	FUNCTION_91
0x400e006	          0x83c001	                              add eax, 1	      8151	elf.c	FUNCTION_91
0x400e009	        0x48c1e003	                              shl rax, 3	      8151	elf.c	FUNCTION_91
0x400e00d	              0xc3	                                     ret	      8152	elf.c	FUNCTION_91
_bfd_elf_get_synthetic_symtab	functions,0:CALL,17:FOR,3:WHILE,0:SWITCH,0:IF,13:DO,0:ELSE,0	225
0x4014280	            0x4157	                                push r15	     11388	elf.c	FUNCTION_200
0x4014282	            0x4156	                                push r14	     11388	elf.c	FUNCTION_200
0x4014284	            0x4155	                                push r13	     11388	elf.c	FUNCTION_200
0x4014286	            0x4154	                                push r12	     11388	elf.c	FUNCTION_200
0x4014288	              0x55	                                push rbp	     11388	elf.c	FUNCTION_200
0x4014289	              0x53	                                push rbx	     11388	elf.c	FUNCTION_200
0x401428a	        0x4883ec68	                           sub rsp, 0x68	     11388	elf.c	FUNCTION_200
0x401428e	    0x64488b042528	                mov rax, qword fs:[0x28]	     11388	elf.c	FUNCTION_200
0x4014297	      0x4889442458	             mov qword [rsp + 0x58], rax	     11388	elf.c	FUNCTION_200
0x401429c	            0x31c0	                            xor eax, eax	     11388	elf.c	FUNCTION_200
0x401429e	        0x488b4708	                mov rax, qword [rdi + 8]	     11389	elf.c	FUNCTION_200	CALL_1
0x40142a2	    0x488b98680300	           mov rbx, qword [rax + 0x368] 	     11389	elf.c	FUNCTION_200	CALL_1
0x40142a9	    0x49c701000000	                       mov qword [r9], 0	     11401	elf.c	FUNCTION_200
0x40142b0	          0x8b4744	            mov eax, dword [rdi + 0x44] 	     11403	elf.c	FUNCTION_200	IF_1
0x40142b3	          0xc1e805	                              shr eax, 5	     11403	elf.c	FUNCTION_200	IF_1
0x40142b6	            0xa842	                           test al, 0x42	     11406	elf.c	FUNCTION_200	IF_2
0x40142b8	            0x7453	                            je 0x401430d	     11406	elf.c	FUNCTION_200	IF_2
0x40142ba	          0x4885c9	                           test rcx, rcx	     11406	elf.c	FUNCTION_200	IF_2
0x40142bd	            0x7e4e	                           jle 0x401430d	     11406	elf.c	FUNCTION_200	IF_2
0x40142bf	    0x4883bb980200	              cmp qword [rbx + 0x298], 0	     11409	elf.c	FUNCTION_200	IF_3
0x40142c7	            0x7444	                            je 0x401430d	     11409	elf.c	FUNCTION_200	IF_3
0x40142c9	    0x488bb3f00200	           mov rsi, qword [rbx + 0x2f0] 	     11412	elf.c	FUNCTION_200
0x40142d0	          0x4989fe	                            mov r14, rdi	     11412	elf.c	FUNCTION_200
0x40142d3	          0x4c89c5	                             mov rbp, r8	     11412	elf.c	FUNCTION_200
0x40142d6	          0x4d89cd	                             mov r13, r9	     11412	elf.c	FUNCTION_200
0x40142d9	          0x4885f6	                           test rsi, rsi	     11413	elf.c	FUNCTION_200	IF_4
0x40142dc	     0xf84ee020000	                            je 0x40145d0	     11413	elf.c	FUNCTION_200	IF_4
0x40142e2	          0x4c89f7	                            mov rdi, r14	     11415	elf.c	FUNCTION_200	CALL_3
0x40142e5	      0xe800000000	                          call 0x40142ea	     11415	elf.c	FUNCTION_200	CALL_3
0x40142ea	          0x4885c0	                           test rax, rax	     11416	elf.c	FUNCTION_200	IF_5
0x40142ed	          0x4989c0	                             mov r8, rax	     11415	elf.c	FUNCTION_200	CALL_3
0x40142f0	            0x741b	                            je 0x401430d	     11416	elf.c	FUNCTION_200	IF_5
0x40142f2	    0x4c8ba0e00000	            mov r12, qword [rax + 0xe0] 	     11419	elf.c	FUNCTION_200	CALL_4
0x40142f9	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x4014300	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x4014306	      0x4139442428	            cmp dword [r12 + 0x28], eax 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401430b	            0x742b	                            je 0x4014338	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401430d	            0x31c0	                            xor eax, eax	     11407	elf.c	FUNCTION_200	IF_2
0x401430f	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	     11496	elf.c	FUNCTION_200
0x4014314	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     11496	elf.c	FUNCTION_200
0x401431d	     0xf85f8020000	                           jne 0x401461b	     11496	elf.c	FUNCTION_200
0x4014323	        0x4883c468	                           add rsp, 0x68	     11496	elf.c	FUNCTION_200
0x4014327	              0x5b	                                 pop rbx	     11496	elf.c	FUNCTION_200
0x4014328	              0x5d	                                 pop rbp	     11496	elf.c	FUNCTION_200
0x4014329	            0x415c	                                 pop r12	     11496	elf.c	FUNCTION_200
0x401432b	            0x415d	                                 pop r13	     11496	elf.c	FUNCTION_200
0x401432d	            0x415e	                                 pop r14	     11496	elf.c	FUNCTION_200
0x401432f	            0x415f	                                 pop r15	     11496	elf.c	FUNCTION_200
0x4014331	              0xc3	                                     ret	     11496	elf.c	FUNCTION_200
0x4014332	    0x660f1f440000	                    nop word [rax + rax]	     11496	elf.c	FUNCTION_200
0x4014338	      0x418b442404	                mov eax, dword [r12 + 4]	     11421	elf.c	FUNCTION_200	IF_6
0x401433d	          0x83f809	                              cmp eax, 9	     11421	elf.c	FUNCTION_200	IF_6
0x4014340	            0x7405	                            je 0x4014347	     11421	elf.c	FUNCTION_200	IF_6
0x4014342	          0x83f804	                              cmp eax, 4	     11421	elf.c	FUNCTION_200	IF_6
0x4014345	            0x75c6	                           jne 0x401430d	     11421	elf.c	FUNCTION_200	IF_6
0x4014347	      0xbe00000000	                              mov esi, 0	     11424	elf.c	FUNCTION_200	CALL_6
0x401434c	          0x4c89f7	                            mov rdi, r14	     11424	elf.c	FUNCTION_200	CALL_6
0x401434f	        0x4c890424	                     mov qword [rsp], r8	     11424	elf.c	FUNCTION_200	CALL_6
0x4014353	      0xe800000000	                          call 0x4014358	     11424	elf.c	FUNCTION_200	CALL_6
0x4014358	          0x4885c0	                           test rax, rax	     11425	elf.c	FUNCTION_200	IF_7
0x401435b	      0x4889442410	             mov qword [rsp + 0x10], rax	     11424	elf.c	FUNCTION_200	CALL_6
0x4014360	            0x74ab	                            je 0x401430d	     11425	elf.c	FUNCTION_200	IF_7
0x4014362	        0x498b4608	                mov rax, qword [r14 + 8]	     11428	elf.c	FUNCTION_200	CALL_7
0x4014366	        0x4c8b0424	                     mov r8, qword [rsp]	     11429	elf.c	FUNCTION_200	IF_8
0x401436a	      0xb901000000	                              mov ecx, 1	     11429	elf.c	FUNCTION_200	IF_8
0x401436f	          0x4889ea	                            mov rdx, rbp	     11429	elf.c	FUNCTION_200	IF_8
0x4014372	          0x4c89f7	                            mov rdi, r14	     11429	elf.c	FUNCTION_200	IF_8
0x4014375	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11428	elf.c	FUNCTION_200	CALL_7
0x401437c	          0x4c89c6	                             mov rsi, r8	     11429	elf.c	FUNCTION_200	IF_8
0x401437f	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11428	elf.c	FUNCTION_200	CALL_7
0x4014386	          0xff5040	                 call qword [rax + 0x40]	     11429	elf.c	FUNCTION_200	IF_8
0x4014389	            0x85c0	                           test eax, eax	     11429	elf.c	FUNCTION_200	IF_8
0x401438b	        0x4c8b0424	                     mov r8, qword [rsp]	     11429	elf.c	FUNCTION_200	IF_8
0x401438f	     0xf847a020000	                            je 0x401460f	     11429	elf.c	FUNCTION_200	IF_8
0x4014395	        0x498b4038	              mov rax, qword [r8 + 0x38]	     11432	elf.c	FUNCTION_200
0x4014399	            0x31d2	                            xor edx, edx	     11432	elf.c	FUNCTION_200
0x401439b	        0x498b6878	              mov rbp, qword [r8 + 0x78]	     11434	elf.c	FUNCTION_200
0x401439f	      0x49f7742438	                  div qword [r12 + 0x38]	     11432	elf.c	FUNCTION_200
0x40143a4	          0x4889c2	                            mov rdx, rax	     11433	elf.c	FUNCTION_200
0x40143a7	        0x48890424	                    mov qword [rsp], rax	     11432	elf.c	FUNCTION_200
0x40143ab	        0x488d0440	                  lea rax, [rax + rax*2]	     11433	elf.c	FUNCTION_200
0x40143af	          0x4889c1	                            mov rcx, rax	     11433	elf.c	FUNCTION_200
0x40143b2	        0x48c1e104	                              shl rcx, 4	     11433	elf.c	FUNCTION_200
0x40143b6	          0x4885d2	                           test rdx, rdx	     11435	elf.c	FUNCTION_200	FOR_1
0x40143b9	      0x48894c2428	             mov qword [rsp + 0x28], rcx	     11433	elf.c	FUNCTION_200
0x40143be	     0xf8e36020000	                           jle 0x40145fa	     11435	elf.c	FUNCTION_200	FOR_1
0x40143c4	    0x488b83000300	           mov rax, qword [rbx + 0x300] 	     11435	elf.c	FUNCTION_200	FOR_1
0x40143cb	          0x4989cf	                            mov r15, rcx	     11435	elf.c	FUNCTION_200	FOR_1
0x40143ce	          0x4531e4	                          xor r12d, r12d	     11435	elf.c	FUNCTION_200	FOR_1
0x40143d1	      0x4889442420	             mov qword [rsp + 0x20], rax	     11435	elf.c	FUNCTION_200	FOR_1
0x40143d6	         0xfb64009	               movzx eax, byte [rax + 9]	     11435	elf.c	FUNCTION_200	FOR_1
0x40143da	        0x48c1e005	                              shl rax, 5	     11435	elf.c	FUNCTION_200	FOR_1
0x40143de	      0x4889442418	             mov qword [rsp + 0x18], rax	     11435	elf.c	FUNCTION_200	FOR_1
0x40143e3	       0xf1f440000	                   nop dword [rax + rax]	     11435	elf.c	FUNCTION_200	FOR_1
0x40143e8	        0x488b4500	                    mov rax, qword [rbp]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40143ec	      0x4c89442408	                 mov qword [rsp + 8], r8	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40143f1	          0x488b00	                    mov rax, qword [rax]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40143f4	        0x488b7808	                mov rdi, qword [rax + 8]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40143f8	      0xe800000000	                          call 0x40143fd	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40143fd	      0x48837d1000	               cmp qword [rbp + 0x10], 0	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x4014402	      0x4d8d7c0705	                lea r15, [r15 + rax + 5]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x4014407	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x401440c	            0x7414	                            je 0x4014422	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x401440e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x4014413	        0x80780c02	                 cmp byte [rax + 0xc], 2	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x4014417	           0xf94c0	                                 sete al	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401441a	           0xfb6c0	                           movzx eax, al	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401441d	      0x4d8d7cc70b	           lea r15, [r15 + rax*8 + 0xb] 	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x4014422	        0x4983c401	                              add r12, 1	     11435	elf.c	FUNCTION_200	FOR_1
0x4014426	      0x48036c2418	             add rbp, qword [rsp + 0x18]	     11435	elf.c	FUNCTION_200	FOR_1
0x401442b	        0x4c392424	                    cmp qword [rsp], r12	     11435	elf.c	FUNCTION_200	FOR_1
0x401442f	            0x75b7	                           jne 0x40143e8	     11435	elf.c	FUNCTION_200	FOR_1
0x4014431	          0x4c89ff	                            mov rdi, r15	     11448	elf.c	FUNCTION_200	CALL_9
0x4014434	      0x4c89442408	                 mov qword [rsp + 8], r8	     11448	elf.c	FUNCTION_200	CALL_9
0x4014439	      0xe800000000	                          call 0x401443e	     11448	elf.c	FUNCTION_200	CALL_9
0x401443e	          0x4885c0	                           test rax, rax	     11449	elf.c	FUNCTION_200	IF_10
0x4014441	          0x4989c7	                            mov r15, rax	     11448	elf.c	FUNCTION_200	CALL_9
0x4014444	        0x49894500	                    mov qword [r13], rax	     11448	elf.c	FUNCTION_200	CALL_9
0x4014448	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     11449	elf.c	FUNCTION_200	IF_10
0x401444d	     0xf84bc010000	                            je 0x401460f	     11449	elf.c	FUNCTION_200	IF_10
0x4014453	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	     11452	elf.c	FUNCTION_200
0x4014458	        0x498b6878	              mov rbp, qword [r8 + 0x78]	     11453	elf.c	FUNCTION_200
0x401445c	          0x4531e4	                          xor r12d, r12d	     11453	elf.c	FUNCTION_200
0x401445f	    0x48c744242000	               mov qword [rsp + 0x20], 0	     11453	elf.c	FUNCTION_200
0x4014468	          0x4d01fd	                            add r13, r15	     11452	elf.c	FUNCTION_200
0x401446b	            0xeb3e	                           jmp 0x40144ab	     11452	elf.c	FUNCTION_200
0x401446d	           0xf1f00	                         nop dword [rax]	     11452	elf.c	FUNCTION_200
0x4014470	    0x488344242001	               add qword [rsp + 0x20], 1	     11492	elf.c	FUNCTION_200	FOR_2
0x4014476	    0x41c745004070	            mov dword [r13], 0x746c7040 	        53	string3.h	FUNCTION_221	CALL_3
0x401447e	        0x4983c730	                           add r15, 0x30	     11492	elf.c	FUNCTION_200	FOR_2
0x4014482	      0x41c6450400	                   mov byte [r13 + 4], 0	        53	string3.h	FUNCTION_221	CALL_3
0x4014487	        0x4983c505	                              add r13, 5	     11491	elf.c	FUNCTION_200	FOR_2
0x401448b	    0x488b83000300	           mov rax, qword [rbx + 0x300] 	     11455	elf.c	FUNCTION_200	FOR_2
0x4014492	        0x4983c401	                              add r12, 1	     11455	elf.c	FUNCTION_200	FOR_2
0x4014496	         0xfb64009	               movzx eax, byte [rax + 9]	     11455	elf.c	FUNCTION_200	FOR_2
0x401449a	        0x48c1e005	                              shl rax, 5	     11455	elf.c	FUNCTION_200	FOR_2
0x401449e	          0x4801c5	                            add rbp, rax	     11455	elf.c	FUNCTION_200	FOR_2
0x40144a1	        0x4c392424	                    cmp qword [rsp], r12	     11455	elf.c	FUNCTION_200	FOR_2
0x40144a5	     0xf8e45010000	                           jle 0x40145f0	     11455	elf.c	FUNCTION_200	FOR_2
0x40144ab	          0x4889ea	                            mov rdx, rbp	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x40144ae	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x40144b3	          0x4c89e7	                            mov rdi, r12	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x40144b6	    0xff9398020000	                call qword [rbx + 0x298]	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x40144bc	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     11461	elf.c	FUNCTION_200	FOR_2	IF_11
0x40144c0	            0x74c9	                            je 0x401448b	     11461	elf.c	FUNCTION_200	FOR_2	IF_11
0x40144c2	        0x488b7500	                    mov rsi, qword [rbp]	     11464	elf.c	FUNCTION_200	FOR_2
0x40144c6	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	     11470	elf.c	FUNCTION_200	FOR_2
0x40144cb	          0x488b16	                    mov rdx, qword [rsi]	     11464	elf.c	FUNCTION_200	FOR_2
0x40144ce	          0x488b3a	                    mov rdi, qword [rdx]	     11464	elf.c	FUNCTION_200	FOR_2
0x40144d1	          0x49893f	                    mov qword [r15], rdi	     11464	elf.c	FUNCTION_200	FOR_2
0x40144d4	        0x488b7a08	                mov rdi, qword [rdx + 8]	     11464	elf.c	FUNCTION_200	FOR_2
0x40144d8	        0x49897f08	                mov qword [r15 + 8], rdi	     11464	elf.c	FUNCTION_200	FOR_2
0x40144dc	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	     11464	elf.c	FUNCTION_200	FOR_2
0x40144e0	        0x49897f10	             mov qword [r15 + 0x10], rdi	     11464	elf.c	FUNCTION_200	FOR_2
0x40144e4	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	     11464	elf.c	FUNCTION_200	FOR_2
0x40144e8	        0x49894f20	             mov qword [r15 + 0x20], rcx	     11470	elf.c	FUNCTION_200	FOR_2
0x40144ec	        0x49897f18	             mov qword [r15 + 0x18], rdi	     11464	elf.c	FUNCTION_200	FOR_2
0x40144f0	        0x418b5718	            mov edx, dword [r15 + 0x18] 	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x40144f4	            0x89d7	                            mov edi, edx	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x40144f6	          0x83cf02	                               or edi, 2	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x40144f9	          0xf6c201	                              test dl, 1	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x40144fc	           0xf44d7	                          cmove edx, edi	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x40144ff	        0x482b4128	             sub rax, qword [rcx + 0x28]	     11471	elf.c	FUNCTION_200	FOR_2
0x4014503	        0x4d896f08	                mov qword [r15 + 8], r13	     11472	elf.c	FUNCTION_200	FOR_2
0x4014507	    0x49c747280000	               mov qword [r15 + 0x28], 0	     11473	elf.c	FUNCTION_200	FOR_2
0x401450f	    0x81ca00002000	                        or edx, 0x200000	     11469	elf.c	FUNCTION_200	FOR_2
0x4014515	        0x41895718	             mov dword [r15 + 0x18], edx	     11469	elf.c	FUNCTION_200	FOR_2
0x4014519	        0x49894710	             mov qword [r15 + 0x10], rax	     11471	elf.c	FUNCTION_200	FOR_2
0x401451d	          0x488b06	                    mov rax, qword [rsi]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x4014520	        0x488b7008	                mov rsi, qword [rax + 8]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x4014524	          0x4889f7	                            mov rdi, rsi	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x4014527	      0x4889742418	             mov qword [rsp + 0x18], rsi	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401452c	      0xe800000000	                          call 0x4014531	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x4014531	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_221	CALL_3
0x4014536	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_221	CALL_3
0x4014539	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_221	CALL_3
0x401453c	      0x4889442408	                mov qword [rsp + 8], rax	        53	string3.h	FUNCTION_221	CALL_3
0x4014541	      0xe800000000	                          call 0x4014546	        53	string3.h	FUNCTION_221	CALL_3
0x4014546	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     11476	elf.c	FUNCTION_200	FOR_2
0x401454b	          0x4d01c5	                             add r13, r8	     11476	elf.c	FUNCTION_200	FOR_2
0x401454e	      0x48837d1000	               cmp qword [rbp + 0x10], 0	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x4014553	     0xf8417ffffff	                            je 0x4014470	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x4014559	      0xb82b300000	                         mov eax, 0x302b	        53	string3.h	FUNCTION_221	CALL_3
0x401455e	      0x41c6450278	                mov byte [r13 + 2], 0x78	        53	string3.h	FUNCTION_221	CALL_3
0x4014563	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x4014568	      0x6641894500	                      mov word [r13], ax	        53	string3.h	FUNCTION_221	CALL_3
0x401456d	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x4014571	          0x4c89f7	                            mov rdi, r14	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x4014574	        0x4983c503	                              add r13, 3	     11482	elf.c	FUNCTION_200	FOR_2	IF_13
0x4014578	      0xe800000000	                          call 0x401457d	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x401457d	      0x807c243030	            cmp byte [rsp + 0x30], 0x30 	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4014582	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4014587	            0x7510	                           jne 0x4014599	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4014589	     0xf1f80000000	                         nop dword [rax]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4014590	        0x4883c601	                              add rsi, 1	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4014594	          0x803e30	                    cmp byte [rsi], 0x30	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4014597	            0x74f7	                            je 0x4014590	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4014599	          0x4889f7	                            mov rdi, rsi	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x401459c	      0x4889742418	             mov qword [rsp + 0x18], rsi	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x40145a1	      0xe800000000	                          call 0x40145a6	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x40145a6	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_221	CALL_3
0x40145ab	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_221	CALL_3
0x40145ae	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_221	CALL_3
0x40145b1	      0x4889442408	                mov qword [rsp + 8], rax	        53	string3.h	FUNCTION_221	CALL_3
0x40145b6	      0xe800000000	                          call 0x40145bb	        53	string3.h	FUNCTION_221	CALL_3
0x40145bb	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x40145c0	          0x4d01c5	                             add r13, r8	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x40145c3	      0xe9a8feffff	                           jmp 0x4014470	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x40145c8	     0xf1f84000000	                   nop dword [rax + rax]	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x40145d0	    0xf68388030000	          test byte [rbx + 0x388], 0x20 	     11414	elf.c	FUNCTION_200	IF_4
0x40145d7	      0xbe00000000	                              mov esi, 0	     11414	elf.c	FUNCTION_200	IF_4
0x40145dc	      0xb800000000	                              mov eax, 0	     11414	elf.c	FUNCTION_200	IF_4
0x40145e1	        0x480f44f0	                          cmove rsi, rax	     11414	elf.c	FUNCTION_200	IF_4
0x40145e5	      0xe9f8fcffff	                           jmp 0x40142e2	     11414	elf.c	FUNCTION_200	IF_4
0x40145ea	    0x660f1f440000	                    nop word [rax + rax]	     11414	elf.c	FUNCTION_200	IF_4
0x40145f0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	     11414	elf.c	FUNCTION_200	IF_4
0x40145f5	      0xe915fdffff	                           jmp 0x401430f	     11414	elf.c	FUNCTION_200	IF_4
0x40145fa	          0x4889cf	                            mov rdi, rcx	     11414	elf.c	FUNCTION_200	IF_4
0x40145fd	      0xe800000000	                          call 0x4014602	     11448	elf.c	FUNCTION_200	CALL_9
0x4014602	          0x4885c0	                           test rax, rax	     11449	elf.c	FUNCTION_200	IF_10
0x4014605	        0x49894500	                    mov qword [r13], rax	     11448	elf.c	FUNCTION_200	CALL_9
0x4014609	     0xf85fefcffff	                           jne 0x401430d	     11449	elf.c	FUNCTION_200	IF_10
0x401460f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11430	elf.c	FUNCTION_200	IF_8
0x4014616	      0xe9f4fcffff	                           jmp 0x401430f	     11430	elf.c	FUNCTION_200	IF_8
0x401461b	      0xe800000000	  call sym._bfd_elf_post_process_headers	     11496	elf.c	FUNCTION_200
_bfd_elf_get_dynamic_reloc_upper_bound	functions,0:CALL,7:FOR,1:WHILE,0:SWITCH,0:IF,2:DO,0:ELSE,0	38
0x400e330	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400e337	    0x8bb07c0c0000	           mov esi, dword [rax + 0xc7c] 	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400e33d	            0x85f6	                           test esi, esi	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400e33f	            0x745c	                            je 0x400e39d	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400e341	    0x488b8f900000	            mov rcx, qword [rdi + 0x90] 	      8219	elf.c	FUNCTION_95	FOR_1
0x400e348	          0x4885c9	                           test rcx, rcx	      8219	elf.c	FUNCTION_95	FOR_1
0x400e34b	            0x744a	                            je 0x400e397	      8219	elf.c	FUNCTION_95	FOR_1
0x400e34d	    0x41b808000000	                              mov r8d, 8	      8219	elf.c	FUNCTION_95	FOR_1
0x400e353	            0xeb0c	                           jmp 0x400e361	      8219	elf.c	FUNCTION_95	FOR_1
0x400e355	           0xf1f00	                         nop dword [rax]	      8219	elf.c	FUNCTION_95	FOR_1
0x400e358	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      8219	elf.c	FUNCTION_95	FOR_1
0x400e35c	          0x4885c9	                           test rcx, rcx	      8219	elf.c	FUNCTION_95	FOR_1
0x400e35f	            0x7432	                            je 0x400e393	      8219	elf.c	FUNCTION_95	FOR_1
0x400e361	    0x4c8b89e00000	              mov r9, qword [rcx + 0xe0]	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400e368	        0x413b7128	              cmp esi, dword [r9 + 0x28]	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400e36c	            0x75ea	                           jne 0x400e358	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400e36e	        0x418b7904	                 mov edi, dword [r9 + 4]	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400e372	          0x83ff09	                              cmp edi, 9	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400e375	            0x7405	                            je 0x400e37c	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400e377	          0x83ff04	                              cmp edi, 4	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400e37a	            0x75dc	                           jne 0x400e358	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400e37c	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400e380	            0x31d2	                            xor edx, edx	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400e382	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      8219	elf.c	FUNCTION_95	FOR_1
0x400e386	        0x49f77138	                   div qword [r9 + 0x38]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400e38a	          0x4885c9	                           test rcx, rcx	      8219	elf.c	FUNCTION_95	FOR_1
0x400e38d	        0x4d8d04c0	                    lea r8, [r8 + rax*8]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400e391	            0x75ce	                           jne 0x400e361	      8219	elf.c	FUNCTION_95	FOR_1
0x400e393	          0x4c89c0	                             mov rax, r8	      8219	elf.c	FUNCTION_95	FOR_1
0x400e396	              0xc3	                                     ret	      8219	elf.c	FUNCTION_95	FOR_1
0x400e397	      0xb808000000	                              mov eax, 8	      8218	elf.c	FUNCTION_95
0x400e39c	              0xc3	                                     ret	      8218	elf.c	FUNCTION_95
0x400e39d	        0x4883ec08	                              sub rsp, 8	      8208	elf.c	FUNCTION_95
0x400e3a1	      0xbf05000000	                              mov edi, 5	      8214	elf.c	FUNCTION_95	IF_1	CALL_2
0x400e3a6	      0xe800000000	                          call 0x400e3ab	      8214	elf.c	FUNCTION_95	IF_1	CALL_2
0x400e3ab	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8215	elf.c	FUNCTION_95	IF_1
0x400e3b2	        0x4883c408	                              add rsp, 8	      8227	elf.c	FUNCTION_95
0x400e3b6	              0xc3	                                     ret	      8227	elf.c	FUNCTION_95
_bfd_elf_copy_private_section_data	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,2:DO,0:ELSE,0	75
0x400bf80	        0x488b4708	                mov rax, qword [rdi + 8]	      7571	elf.c	FUNCTION_84	IF_1
0x400bf84	        0x83780805	                  cmp dword [rax + 8], 5	      7571	elf.c	FUNCTION_84	IF_1
0x400bf88	            0x7406	                            je 0x400bf90	      7571	elf.c	FUNCTION_84	IF_1
0x400bf8a	      0xb801000000	                              mov eax, 1	      7588	elf.c	FUNCTION_84
0x400bf8f	              0xc3	                                     ret	      7588	elf.c	FUNCTION_84
0x400bf90	        0x488b4208	                mov rax, qword [rdx + 8]	      7572	elf.c	FUNCTION_84	IF_1
0x400bf94	        0x83780805	                  cmp dword [rax + 8], 5	      7572	elf.c	FUNCTION_84	IF_1
0x400bf98	            0x75f0	                           jne 0x400bf8a	      7572	elf.c	FUNCTION_84	IF_1
0x400bf9a	    0x488b96e00000	            mov rdx, qword [rsi + 0xe0] 	      7575	elf.c	FUNCTION_84	CALL_1
0x400bfa1	    0x488b81e00000	            mov rax, qword [rcx + 0xe0] 	      7576	elf.c	FUNCTION_84	CALL_2
0x400bfa8	        0x4c8b4238	              mov r8, qword [rdx + 0x38]	      7578	elf.c	FUNCTION_84
0x400bfac	        0x4c894038	              mov qword [rax + 0x38], r8	      7578	elf.c	FUNCTION_84
0x400bfb0	        0x448b4204	                mov r8d, dword [rdx + 4]	      7580	elf.c	FUNCTION_84	IF_2
0x400bfb4	        0x4183f802	                              cmp r8d, 2	      7583	elf.c	FUNCTION_84	IF_2
0x400bfb8	        0x410f94c2	                               sete r10b	      7583	elf.c	FUNCTION_84	IF_2
0x400bfbc	        0x4183f80b	                            cmp r8d, 0xb	      7583	elf.c	FUNCTION_84	IF_2
0x400bfc0	        0x410f94c1	                                sete r9b	      7583	elf.c	FUNCTION_84	IF_2
0x400bfc4	          0x4508ca	                            or r10b, r9b	      7583	elf.c	FUNCTION_84	IF_2
0x400bfc7	     0xf85eb000000	                           jne 0x400c0b8	      7583	elf.c	FUNCTION_84	IF_2
0x400bfcd	    0x458d88030000	              lea r9d, [r8 - 0x6ffffffd]	      7583	elf.c	FUNCTION_84	IF_2
0x400bfd4	        0x4183f901	                              cmp r9d, 1	      7583	elf.c	FUNCTION_84	IF_2
0x400bfd8	     0xf86da000000	                           jbe 0x400c0b8	      7583	elf.c	FUNCTION_84	IF_2
0x400bfde	        0x448b4804	                mov r9d, dword [rax + 4]	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x400bfe2	          0x4585c9	                           test r9d, r9d	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x400bfe5	            0x7511	                           jne 0x400bff8	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x400bfe7	        0x448b5e20	           mov r11d, dword [rsi + 0x20] 	      7508	elf.c	FUNCTION_83	IF_2
0x400bfeb	        0x44395920	           cmp dword [rcx + 0x20], r11d 	      7508	elf.c	FUNCTION_83	IF_2
0x400bfef	     0xf84d0000000	                            je 0x400c0c5	      7508	elf.c	FUNCTION_83	IF_2
0x400bff5	           0xf1f00	                         nop dword [rax]	      7508	elf.c	FUNCTION_83	IF_2
0x400bff8	        0x4c8b4208	                 mov r8, qword [rdx + 8]	      7515	elf.c	FUNCTION_83	CALL_8
0x400bffc	    0x4181e00000f0	                     and r8d, 0xfff00000	      7515	elf.c	FUNCTION_83	CALL_8
0x400c003	        0x4c0b4008	                  or r8, qword [rax + 8]	      7515	elf.c	FUNCTION_83	CALL_8
0x400c007	        0x4c894008	                 mov qword [rax + 8], r8	      7515	elf.c	FUNCTION_83	CALL_8
0x400c00b	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x400c00f	    0x41f7c1000000	                     test r9d, 0x1000000	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x400c016	            0x7408	                            je 0x400c020	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x400c018	        0x448b522c	           mov r10d, dword [rdx + 0x2c] 	      7521	elf.c	FUNCTION_83	CALL_11
0x400c01c	        0x4489502c	            mov dword [rax + 0x2c], r10d	      7521	elf.c	FUNCTION_83	CALL_11
0x400c020	    0x4c8b92b80000	            mov r10, qword [rdx + 0xb8] 	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x400c027	          0x4d85d2	                           test r10, r10	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x400c02a	            0x7407	                            je 0x400c033	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x400c02c	      0x41f6422210	           test byte [r10 + 0x22], 0x10 	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x400c031	            0x7534	                           jne 0x400c067	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x400c033	    0x41f7c1000200	                         test r9d, 0x200	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x400c03a	            0x740f	                            je 0x400c04b	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x400c03c	    0x4981c8000200	                            or r8, 0x200	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x400c043	        0x4c894008	                 mov qword [rax + 8], r8	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x400c047	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x400c04b	    0x4c8b82c00000	              mov r8, qword [rdx + 0xc0]	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x400c052	    0x4c8980c00000	              mov qword [rax + 0xc0], r8	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x400c059	    0x4c8b82b00000	              mov r8, qword [rdx + 0xb0]	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x400c060	    0x4c8980b00000	              mov qword [rax + 0xb0], r8	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x400c067	        0xf6474610	           test byte [rdi + 0x46], 0x10 	      7539	elf.c	FUNCTION_83	IF_6
0x400c06b	            0x750f	                           jne 0x400c07c	      7539	elf.c	FUNCTION_83	IF_6
0x400c06d	    0x4181e1000800	                          and r9d, 0x800	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x400c074	        0x4c094808	                  or qword [rax + 8], r9	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x400c078	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x400c07c	    0x4181e1800000	                           and r9d, 0x80	      7548	elf.c	FUNCTION_83	IF_7
0x400c083	            0x7416	                            je 0x400c09b	      7548	elf.c	FUNCTION_83	IF_7
0x400c085	    0x488b92900000	            mov rdx, qword [rdx + 0x90] 	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x400c08c	    0x488148088000	                or qword [rax + 8], 0x80	      7551	elf.c	FUNCTION_83	IF_7
0x400c094	    0x488990900000	             mov qword [rax + 0x90], rdx	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x400c09b	         0xfb64625	           movzx eax, byte [rsi + 0x25] 	      7555	elf.c	FUNCTION_83
0x400c09f	         0xfb65125	           movzx edx, byte [rcx + 0x25] 	      7555	elf.c	FUNCTION_83
0x400c0a3	          0x83e004	                              and eax, 4	      7555	elf.c	FUNCTION_83
0x400c0a6	          0x83e2fb	                     and edx, 0xfffffffb	      7555	elf.c	FUNCTION_83
0x400c0a9	             0x9d0	                             or eax, edx	      7555	elf.c	FUNCTION_83
0x400c0ab	          0x884125	               mov byte [rcx + 0x25], al	      7555	elf.c	FUNCTION_83
0x400c0ae	      0xe9d7feffff	                           jmp 0x400bf8a	      7555	elf.c	FUNCTION_83
0x400c0b3	       0xf1f440000	                   nop dword [rax + rax]	      7555	elf.c	FUNCTION_83
0x400c0b8	        0x448b4a2c	            mov r9d, dword [rdx + 0x2c] 	      7584	elf.c	FUNCTION_84	IF_2
0x400c0bc	        0x4489482c	             mov dword [rax + 0x2c], r9d	      7584	elf.c	FUNCTION_84	IF_2
0x400c0c0	      0xe919ffffff	                           jmp 0x400bfde	      7584	elf.c	FUNCTION_84	IF_2
0x400c0c5	        0x44894004	                mov dword [rax + 4], r8d	      7512	elf.c	FUNCTION_83	CALL_6
0x400c0c9	      0xe92affffff	                           jmp 0x400bff8	      7512	elf.c	FUNCTION_83	CALL_6
_bfd_elf_swap_verneed_out	functions,0:CALL,5:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	30
0x4002e90	            0x4154	                                push r12	       138	elf.c	FUNCTION_6
0x4002e92	              0x55	                                push rbp	       138	elf.c	FUNCTION_6
0x4002e93	          0x4889fd	                            mov rbp, rdi	       138	elf.c	FUNCTION_6
0x4002e96	              0x53	                                push rbx	       138	elf.c	FUNCTION_6
0x4002e97	        0x488b4508	                mov rax, qword [rbp + 8]	       139	elf.c	FUNCTION_6	CALL_1
0x4002e9b	          0x4889d3	                            mov rbx, rdx	       138	elf.c	FUNCTION_6
0x4002e9e	           0xfb73e	                   movzx edi, word [rsi]	       139	elf.c	FUNCTION_6	CALL_1
0x4002ea1	          0x4989f4	                            mov r12, rsi	       138	elf.c	FUNCTION_6
0x4002ea4	          0x4889d6	                            mov rsi, rdx	       139	elf.c	FUNCTION_6	CALL_1
0x4002ea7	    0xff90a8000000	                 call qword [rax + 0xa8]	       139	elf.c	FUNCTION_6	CALL_1
0x4002ead	        0x488b4508	                mov rax, qword [rbp + 8]	       140	elf.c	FUNCTION_6	CALL_2
0x4002eb1	    0x410fb77c2402	               movzx edi, word [r12 + 2]	       140	elf.c	FUNCTION_6	CALL_2
0x4002eb7	        0x488d7302	                      lea rsi, [rbx + 2]	       140	elf.c	FUNCTION_6	CALL_2
0x4002ebb	    0xff90a8000000	                 call qword [rax + 0xa8]	       140	elf.c	FUNCTION_6	CALL_2
0x4002ec1	        0x488b4508	                mov rax, qword [rbp + 8]	       141	elf.c	FUNCTION_6	CALL_3
0x4002ec5	        0x488d7304	                      lea rsi, [rbx + 4]	       141	elf.c	FUNCTION_6	CALL_3
0x4002ec9	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       141	elf.c	FUNCTION_6	CALL_3
0x4002ece	    0xff9090000000	                 call qword [rax + 0x90]	       141	elf.c	FUNCTION_6	CALL_3
0x4002ed4	        0x488b4508	                mov rax, qword [rbp + 8]	       142	elf.c	FUNCTION_6	CALL_4
0x4002ed8	        0x488d7308	                      lea rsi, [rbx + 8]	       142	elf.c	FUNCTION_6	CALL_4
0x4002edc	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       142	elf.c	FUNCTION_6	CALL_4
0x4002ee1	    0xff9090000000	                 call qword [rax + 0x90]	       142	elf.c	FUNCTION_6	CALL_4
0x4002ee7	        0x488b4508	                mov rax, qword [rbp + 8]	       143	elf.c	FUNCTION_6	CALL_5
0x4002eeb	        0x488d730c	                    lea rsi, [rbx + 0xc]	       143	elf.c	FUNCTION_6	CALL_5
0x4002eef	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       143	elf.c	FUNCTION_6	CALL_5
0x4002ef4	              0x5b	                                 pop rbx	       144	elf.c	FUNCTION_6
0x4002ef5	              0x5d	                                 pop rbp	       144	elf.c	FUNCTION_6
0x4002ef6	            0x415c	                                 pop r12	       144	elf.c	FUNCTION_6
0x4002ef8	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       143	elf.c	FUNCTION_6	CALL_5
0x4002eff	            0xffe0	                                 jmp rax	       143	elf.c	FUNCTION_6	CALL_5
_bfd_elf_post_process_headers	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	12
0x4014620	        0x488b4708	                mov rax, qword [rdi + 8]	     11515	elf.c	FUNCTION_201	CALL_2
0x4014624	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	     11513	elf.c	FUNCTION_201	CALL_1
0x401462b	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11515	elf.c	FUNCTION_201	CALL_2
0x4014632	          0x8b400c	              mov eax, dword [rax + 0xc]	     11515	elf.c	FUNCTION_201	CALL_2
0x4014635	            0x84c0	                             test al, al	     11520	elf.c	FUNCTION_201	IF_1
0x4014637	          0x884207	                  mov byte [rdx + 7], al	     11515	elf.c	FUNCTION_201	CALL_2
0x401463a	            0x7514	                           jne 0x4014650	     11520	elf.c	FUNCTION_201	IF_1
0x401463c	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x4014643	    0xf6808d0c0000	          test byte [rax + 0xc8d], 0x1c 	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401464a	            0x7404	                            je 0x4014650	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401464c	        0xc6420703	                   mov byte [rdx + 7], 3	     11522	elf.c	FUNCTION_201	IF_1
0x4014650	            0xf3c3	                                     ret	     11522	elf.c	FUNCTION_201	IF_1
_bfd_elf_map_sections_to_segments	functions,0:CALL,52:FOR,8:WHILE,3:SWITCH,0:IF,63:DO,0:ELSE,14	879
0x4007370	            0x4157	                                push r15	      4575	elf.c	FUNCTION_65
0x4007372	            0x4156	                                push r14	      4575	elf.c	FUNCTION_65
0x4007374	          0x4989f6	                            mov r14, rsi	      4575	elf.c	FUNCTION_65
0x4007377	            0x4155	                                push r13	      4575	elf.c	FUNCTION_65
0x4007379	            0x4154	                                push r12	      4575	elf.c	FUNCTION_65
0x400737b	              0x55	                                push rbp	      4575	elf.c	FUNCTION_65
0x400737c	              0x53	                                push rbx	      4575	elf.c	FUNCTION_65
0x400737d	          0x4889fd	                            mov rbp, rdi	      4575	elf.c	FUNCTION_65
0x4007380	    0x4881ec880000	                           sub rsp, 0x88	      4575	elf.c	FUNCTION_65
0x4007387	    0x64488b042528	                mov rax, qword fs:[0x28]	      4575	elf.c	FUNCTION_65
0x4007390	      0x4889442478	             mov qword [rsp + 0x78], rax	      4575	elf.c	FUNCTION_65
0x4007395	            0x31c0	                            xor eax, eax	      4575	elf.c	FUNCTION_65
0x4007397	        0x488b4708	                mov rax, qword [rdi + 8]	      4579	elf.c	FUNCTION_65	CALL_1
0x400739b	          0x4885f6	                           test rsi, rsi	      4584	elf.c	FUNCTION_65	IF_1
0x400739e	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4579	elf.c	FUNCTION_65	CALL_1
0x40073a5	      0x4889442410	             mov qword [rsp + 0x10], rax	      4579	elf.c	FUNCTION_65	CALL_1
0x40073aa	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      4582	elf.c	FUNCTION_65	CALL_2
0x40073b1	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4582	elf.c	FUNCTION_65	CALL_2
0x40073b8	          0x488b18	                    mov rbx, qword [rax]	      4582	elf.c	FUNCTION_65	CALL_2
0x40073bb	            0x7415	                            je 0x40073d2	      4584	elf.c	FUNCTION_65	IF_1
0x40073bd	         0xfb65606	               movzx edx, byte [rsi + 6]	      4585	elf.c	FUNCTION_65	IF_1
0x40073c1	          0x4885db	                           test rbx, rbx	      4585	elf.c	FUNCTION_65	IF_1
0x40073c4	           0xf95c0	                                setne al	      4585	elf.c	FUNCTION_65	IF_1
0x40073c7	          0xc1e004	                              shl eax, 4	      4585	elf.c	FUNCTION_65	IF_1
0x40073ca	          0x83e2ef	                     and edx, 0xffffffef	      4585	elf.c	FUNCTION_65	IF_1
0x40073cd	             0x9d0	                             or eax, edx	      4585	elf.c	FUNCTION_65	IF_1
0x40073cf	          0x884606	                  mov byte [rsi + 6], al	      4585	elf.c	FUNCTION_65	IF_1
0x40073d2	          0x4885db	                           test rbx, rbx	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x40073d5	     0xf842a010000	                            je 0x4007505	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x40073db	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x40073e2	    0x4c8b88980c00	            mov r9, qword [rax + 0xc98] 	      4532	elf.c	FUNCTION_64	CALL_1
0x40073e9	    0x49bb20000000	          movabs r11, 0xffffffff00000020	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40073f3	          0x498b11	                     mov rdx, qword [r9]	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40073f6	          0x4885d2	                           test rdx, rdx	      4533	elf.c	FUNCTION_64	WHILE_1
0x40073f9	            0x7468	                            je 0x4007463	      4533	elf.c	FUNCTION_64	WHILE_1
0x40073fb	       0xf1f440000	                   nop dword [rax + rax]	      4533	elf.c	FUNCTION_64	WHILE_1
0x4007400	          0x8b7a44	            mov edi, dword [rdx + 0x44] 	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4007403	          0x4531c0	                            xor r8d, r8d	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4007406	            0x31c0	                            xor eax, eax	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4007408	            0x85ff	                           test edi, edi	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400740a	            0x7438	                            je 0x4007444	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x400740c	         0xf1f4000	                         nop dword [rax]	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4007410	            0x89c1	                            mov ecx, eax	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4007412	      0x488b74ca48	    mov rsi, qword [rdx + rcx*8 + 0x48] 	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4007417	          0x8b4e20	            mov ecx, dword [rsi + 0x20] 	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400741a	          0xf6c580	                           test ch, 0x80	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400741d	            0x751e	                           jne 0x400743d	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400741f	          0x83e101	                              and ecx, 1	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4007422	            0x7507	                           jne 0x400742b	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4007424	      0x48837a0801	                  cmp qword [rdx + 8], 1	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4007429	            0x7412	                            je 0x400743d	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400742b	          0x4489c1	                            mov ecx, r8d	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400742e	        0x4183c001	                              add r8d, 1	      4544	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4007432	      0x488974ca48	     mov qword [rdx + rcx*8 + 0x48], rsi	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4007437	          0x498b11	                     mov rdx, qword [r9]	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400743a	          0x8b7a44	            mov edi, dword [rdx + 0x44] 	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400743d	          0x83c001	                              add eax, 1	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4007440	            0x39f8	                            cmp eax, edi	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4007442	            0x72cc	                            jb 0x4007410	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4007444	          0x4885db	                           test rbx, rbx	      4549	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4007447	        0x44894244	             mov dword [rdx + 0x44], r8d	      4547	elf.c	FUNCTION_64	WHILE_1
0x400744b	            0x750b	                           jne 0x4007458	      4549	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400744d	      0x48837a0801	                  cmp qword [rdx + 8], 1	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4007452	     0xf8498000000	                            je 0x40074f0	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4007458	          0x4989d1	                             mov r9, rdx	      4555	elf.c	FUNCTION_64	WHILE_1	ELSE_1
0x400745b	          0x488b12	                    mov rdx, qword [rdx]	      4555	elf.c	FUNCTION_64	WHILE_1	ELSE_1
0x400745e	          0x4885d2	                           test rdx, rdx	      4533	elf.c	FUNCTION_64	WHILE_1
0x4007461	            0x759d	                           jne 0x4007400	      4533	elf.c	FUNCTION_64	WHILE_1
0x4007463	        0x488b4508	                mov rax, qword [rbp + 8]	      4558	elf.c	FUNCTION_64	CALL_2
0x4007467	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4559	elf.c	FUNCTION_64	IF_3
0x400746e	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      4559	elf.c	FUNCTION_64	IF_3
0x4007475	          0x4885c0	                           test rax, rax	      4559	elf.c	FUNCTION_64	IF_3
0x4007478	            0x740c	                            je 0x4007486	      4559	elf.c	FUNCTION_64	IF_3
0x400747a	          0x4c89f6	                            mov rsi, r14	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x400747d	          0x4889ef	                            mov rdi, rbp	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4007480	            0xffd0	                                call rax	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4007482	            0x85c0	                           test eax, eax	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4007484	            0x7443	                            je 0x40074c9	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4007486	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x400748d	            0x31d2	                            xor edx, edx	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x400748f	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4007496	          0x488b01	                    mov rax, qword [rcx]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4007499	          0x4885c0	                           test rax, rax	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x400749c	            0x740d	                            je 0x40074ab	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x400749e	            0x6690	                                     nop	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x40074a0	          0x488b00	                    mov rax, qword [rax]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x40074a3	          0x83c201	                              add edx, 1	      5098	elf.c	FUNCTION_65	FOR_8
0x40074a6	          0x4885c0	                           test rax, rax	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x40074a9	            0x75f5	                           jne 0x40074a0	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x40074ab	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5099	elf.c	FUNCTION_65	CALL_51
0x40074b0	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5099	elf.c	FUNCTION_65	CALL_51
0x40074b7	         0xfb64001	               movzx eax, byte [rax + 1]	      5099	elf.c	FUNCTION_65	CALL_51
0x40074bb	           0xfafd0	                           imul edx, eax	      5099	elf.c	FUNCTION_65	CALL_51
0x40074be	            0x89d0	                            mov eax, edx	      5099	elf.c	FUNCTION_65	CALL_51
0x40074c0	        0x48894138	             mov qword [rcx + 0x38], rax	      5099	elf.c	FUNCTION_65	CALL_51
0x40074c4	      0xb801000000	                              mov eax, 1	      5101	elf.c	FUNCTION_65
0x40074c9	      0x488b5c2478	            mov rbx, qword [rsp + 0x78] 	      5107	elf.c	FUNCTION_65
0x40074ce	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5107	elf.c	FUNCTION_65
0x40074d7	     0xf85d80c0000	                           jne 0x40081b5	      5107	elf.c	FUNCTION_65
0x40074dd	    0x4881c4880000	                           add rsp, 0x88	      5107	elf.c	FUNCTION_65
0x40074e4	              0x5b	                                 pop rbx	      5107	elf.c	FUNCTION_65
0x40074e5	              0x5d	                                 pop rbp	      5107	elf.c	FUNCTION_65
0x40074e6	            0x415c	                                 pop r12	      5107	elf.c	FUNCTION_65
0x40074e8	            0x415d	                                 pop r13	      5107	elf.c	FUNCTION_65
0x40074ea	            0x415e	                                 pop r14	      5107	elf.c	FUNCTION_65
0x40074ec	            0x415f	                                 pop r15	      5107	elf.c	FUNCTION_65
0x40074ee	              0xc3	                                     ret	      5107	elf.c	FUNCTION_65
0x40074ef	              0x90	                                     nop	      5107	elf.c	FUNCTION_65
0x40074f0	        0x4c855a40	           test qword [rdx + 0x40], r11 	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40074f4	     0xf855effffff	                           jne 0x4007458	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40074fa	          0x488b12	                    mov rdx, qword [rdx]	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40074fd	          0x498911	                     mov qword [r9], rdx	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4007500	      0xe9f1feffff	                           jmp 0x40073f6	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4007505	    0x8b85a0000000	            mov eax, dword [rbp + 0xa0] 	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x400750b	            0x85c0	                           test eax, eax	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x400750d	     0xf84c8feffff	                            je 0x40073db	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x4007513	            0x89c7	                            mov edi, eax	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x4007515	      0xbe08000000	                              mov esi, 8	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x400751a	      0xe800000000	                          call 0x400751f	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x400751f	          0x4989c7	                            mov r15, rax	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x4007522	      0x4889442438	             mov qword [rsp + 0x38], rax	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x4007527	            0x31c0	                            xor eax, eax	      5106	elf.c	FUNCTION_65
0x4007529	          0x4d85ff	                           test r15, r15	      4613	elf.c	FUNCTION_65	IF_2	IF_3
0x400752c	            0x749b	                            je 0x40074c9	      4613	elf.c	FUNCTION_65	IF_2	IF_3
0x400752e	          0x4889ef	                            mov rdi, rbp	      4619	elf.c	FUNCTION_65	IF_2	CALL_6
0x4007531	      0xe800000000	                          call 0x4007536	      4619	elf.c	FUNCTION_65	IF_2	CALL_6
0x4007536	          0x8d48ff	                      lea ecx, [rax - 1]	      4620	elf.c	FUNCTION_65	IF_2
0x4007539	      0xb801000000	                              mov eax, 1	      4620	elf.c	FUNCTION_65	IF_2
0x400753e	          0x48d3e0	                             shl rax, cl	      4620	elf.c	FUNCTION_65	IF_2
0x4007541	      0x4c8d6400ff	                lea r12, [rax + rax - 1]	      4620	elf.c	FUNCTION_65	IF_2
0x4007546	    0x488b85900000	            mov rax, qword [rbp + 0x90] 	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400754d	          0x4885c0	                           test rax, rax	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4007550	     0xf84200b0000	                            je 0x4008076	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4007556	          0x4531ed	                          xor r13d, r13d	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4007559	            0x31f6	                            xor esi, esi	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400755b	          0x4c89ff	                            mov rdi, r15	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400755e	        0xf6402001	               test byte [rax + 0x20], 1	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4007562	            0x7421	                            je 0x4007585	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4007564	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4007568	            0x89f2	                            mov edx, esi	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400756a	          0x83c601	                              add esi, 1	      4628	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400756d	        0x488904d7	            mov qword [rdi + rdx*8], rax	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4007571	          0x4889ca	                            mov rdx, rcx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4007574	        0x48035038	             add rdx, qword [rax + 0x38]	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4007578	          0x4c21e1	                            and rcx, r12	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400757b	          0x4c21e2	                            and rdx, r12	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400757e	          0x4839ca	                            cmp rdx, rcx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4007581	        0x4c0f42ea	                          cmovb r13, rdx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4007585	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4007589	          0x4885c0	                           test rax, rax	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400758c	            0x75d0	                           jne 0x400755e	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400758e	            0x89f0	                            mov eax, esi	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4007590	    0x3b85a0000000	            cmp eax, dword [rbp + 0xa0] 	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007596	        0x89742420	             mov dword [rsp + 0x20], esi	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x400759a	            0x89f6	                            mov esi, esi	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x400759c	     0xf877f040000	                            ja 0x4007a21	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x40075a2	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      4637	elf.c	FUNCTION_65	IF_2	CALL_9
0x40075a7	      0xba08000000	                              mov edx, 8	      4637	elf.c	FUNCTION_65	IF_2	CALL_9
0x40075ac	      0xb900000000	                              mov ecx, 0	      4637	elf.c	FUNCTION_65	IF_2	CALL_9
0x40075b1	      0xe800000000	                          call 0x40075b6	      4637	elf.c	FUNCTION_65	IF_2	CALL_9
0x40075b6	      0xbe00000000	                              mov esi, 0	      4647	elf.c	FUNCTION_65	IF_2	CALL_10
0x40075bb	          0x4889ef	                            mov rdi, rbp	      4647	elf.c	FUNCTION_65	IF_2	CALL_10
0x40075be	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4641	elf.c	FUNCTION_65	IF_2
0x40075c7	      0xe800000000	                          call 0x40075cc	      4647	elf.c	FUNCTION_65	IF_2	CALL_10
0x40075cc	          0x4889c2	                            mov rdx, rax	      4647	elf.c	FUNCTION_65	IF_2	CALL_10
0x40075cf	      0x488d442470	                   lea rax, [rsp + 0x70]	      4642	elf.c	FUNCTION_65	IF_2
0x40075d4	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4642	elf.c	FUNCTION_65	IF_2
0x40075dc	          0x4885d2	                           test rdx, rdx	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x40075df	      0x4889442408	                mov qword [rsp + 8], rax	      4642	elf.c	FUNCTION_65	IF_2
0x40075e4	            0x740a	                            je 0x40075f0	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x40075e6	        0xf6422002	               test byte [rdx + 0x20], 2	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x40075ea	     0xf85fe090000	                           jne 0x4007fee	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x40075f0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4682	elf.c	FUNCTION_65	IF_2
0x40075f5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4682	elf.c	FUNCTION_65	IF_2
0x40075f9	          0x4885c0	                           test rax, rax	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x40075fc	          0x4889c7	                            mov rdi, rax	      4682	elf.c	FUNCTION_65	IF_2
0x40075ff	      0xb801000000	                              mov eax, 1	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x4007604	          0x4889c6	                            mov rsi, rax	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x4007607	        0x480f45f7	                         cmovne rsi, rdi	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x400760b	          0x4889ef	                            mov rdi, rbp	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x400760e	      0x4889742448	             mov qword [rsp + 0x48], rsi	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x4007613	      0xbe00000000	                              mov esi, 0	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x4007618	      0xe800000000	                          call 0x400761d	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x400761d	          0x4885c0	                           test rax, rax	      4691	elf.c	FUNCTION_65	IF_2	IF_10
0x4007620	          0x4889c7	                            mov rdi, rax	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x4007623	      0x4889442450	             mov qword [rsp + 0x50], rax	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x4007628	            0x7415	                            je 0x400763f	      4691	elf.c	FUNCTION_65	IF_2	IF_10
0x400762a	        0xf6402002	               test byte [rax + 0x20], 2	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x400762e	      0xb800000000	                              mov eax, 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4007633	          0x4889c6	                            mov rsi, rax	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4007636	        0x480f45f7	                         cmovne rsi, rdi	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x400763a	      0x4889742450	             mov qword [rsp + 0x50], rsi	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x400763f	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x4007643	            0x85f6	                           test esi, esi	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x4007645	     0xf8411030000	                            je 0x400795c	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x400764b	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_14
0x4007652	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_14
0x4007659	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_14
0x400765d	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4703	elf.c	FUNCTION_65	IF_2	IF_11	IF_12
0x4007661	     0xf843f0a0000	                            je 0x40080a6	      4703	elf.c	FUNCTION_65	IF_2	IF_11	IF_12
0x4007667	        0xf6454520	           test byte [rbp + 0x45], 0x20 	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400766b	     0xf8461090000	                            je 0x4007fd2	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4007671	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4007676	    0x488b97000300	           mov rdx, qword [rdi + 0x300] 	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x400767d	           0xfb60a	                   movzx ecx, byte [rdx]	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4007680	          0x4801c1	                            add rcx, rax	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4007683	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4007688	          0x488b00	                    mov rax, qword [rax]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400768b	        0x4c236030	             and r12, qword [rax + 0x30]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400768f	          0x4c39e1	                            cmp rcx, r12	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4007692	            0x7737	                            ja 0x40076cb	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4007694	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4007699	            0x31d2	                            xor edx, edx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400769b	          0x4c89e0	                            mov rax, r12	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400769e	          0x48f7f7	                                 div rdi	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076a1	          0x4889c8	                            mov rax, rcx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076a4	          0x4889d6	                            mov rsi, rdx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076a7	            0x31d2	                            xor edx, edx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076a9	          0x48f7f7	                                 div rdi	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076ac	          0x4839d6	                            cmp rsi, rdx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076af	            0x721a	                            jb 0x40076cb	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076b1	          0x48f7df	                                 neg rdi	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076b4	          0x4889f8	                            mov rax, rdi	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076b7	          0x4c21e0	                            and rax, r12	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x40076ba	          0x4c39e8	                            cmp rax, r13	      4598	elf.c	FUNCTION_65	IF_2
0x40076bd	      0xb801000000	                              mov eax, 1	      4598	elf.c	FUNCTION_65	IF_2
0x40076c2	       0xf42442428	           cmovb eax, dword [rsp + 0x28]	      4598	elf.c	FUNCTION_65	IF_2
0x40076c7	        0x89442428	             mov dword [rsp + 0x28], eax	      4598	elf.c	FUNCTION_65	IF_2
0x40076cb	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      4598	elf.c	FUNCTION_65	IF_2
0x40076d0	          0x4531c9	                            xor r9d, r9d	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076d3	      0x48895c2468	             mov qword [rsp + 0x68], rbx	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076d8	      0x48896c2430	             mov qword [rsp + 0x30], rbp	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076dd	          0x4531ed	                          xor r13d, r13d	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076e0	          0x4c89f5	                            mov rbp, r14	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076e3	          0x4531db	                          xor r11d, r11d	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076e6	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076ee	            0x31c0	                            xor eax, eax	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076f0	        0x488d77ff	                      lea rsi, [rdi - 1]	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076f4	          0x48f7df	                                 neg rdi	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40076f7	            0x31c9	                            xor ecx, ecx	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40076f9	      0x48897c2460	             mov qword [rsp + 0x60], rdi	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40076fe	          0x4489cb	                            mov ebx, r9d	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4007701	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4007706	      0x4889742458	             mov qword [rsp + 0x58], rsi	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400770b	      0xe981000000	                           jmp 0x4007791	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4007710	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007714	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007718	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400771b	     0xf84a6000000	                            je 0x40077c7	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007721	    0x41b801000000	                              mov r8d, 1	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007727	      0x44895c2440	            mov dword [rsp + 0x40], r11d	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400772c	          0x4c89e2	                            mov rdx, r12	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_18
0x400772f	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_18
0x4007734	          0x4889ef	                            mov rdi, rbp	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_18
0x4007737	            0xffd0	                                call rax	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_18
0x4007739	            0x85c0	                           test eax, eax	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400773b	      0x448b5c2440	           mov r11d, dword [rsp + 0x40] 	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4007740	     0xf8581000000	                           jne 0x40077c7	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4007746	      0x418b742420	            mov esi, dword [r12 + 0x20] 	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x400774b	      0xb801000000	                              mov eax, 1	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4007750	        0x40f6c608	                             test sil, 8	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4007754	           0xf44d8	                          cmove ebx, eax	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4007757	        0x40f6c610	                          test sil, 0x10	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x400775b	      0xb801000000	                              mov eax, 1	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x4007760	            0x89f2	                            mov edx, esi	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4007762	        0x440f45d8	                        cmovne r11d, eax	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x4007766	    0x81e202040000	                          and edx, 0x402	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400776c	            0x31c0	                            xor eax, eax	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400776e	    0x81fa00040000	                          cmp edx, 0x400	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4007774	            0x7405	                            je 0x400777b	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4007776	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400777b	        0x4983c501	                              add r13, 1	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400777f	      0x44396c2420	           cmp dword [rsp + 0x20], r13d 	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007784	        0x418d5701	                      lea edx, [r15 + 1]	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007788	          0x4c89e1	                            mov rcx, r12	      4731	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400778b	     0xf860a010000	                           jbe 0x400789b	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007791	          0x4885c9	                           test rcx, rcx	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x4007794	          0x4589ef	                          mov r15d, r13d	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x4007797	        0x4f8b24ee	            mov r12, qword [r14 + r13*8]	      4731	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400779b	            0x74a9	                            je 0x4007746	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x400779d	        0x488b5130	            mov rdx, qword [rcx + 0x30] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x40077a1	      0x498b742430	            mov rsi, qword [r12 + 0x30] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x40077a6	          0x4989d0	                             mov r8, rdx	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x40077a9	          0x4889f7	                            mov rdi, rsi	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x40077ac	        0x4c2b4128	              sub r8, qword [rcx + 0x28]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x40077b0	      0x492b7c2428	             sub rdi, qword [r12 + 0x28]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x40077b5	          0x4939f8	                             cmp r8, rdi	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x40077b8	     0xf84bb030000	                            je 0x4007b79	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x40077be	          0x4885ed	                           test rbp, rbp	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40077c1	     0xf8549ffffff	                           jne 0x4007710	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40077c7	          0x4489fb	                           mov ebx, r15d	      4477	elf.c	FUNCTION_62
0x40077ca	        0x2b5c2418	             sub ebx, dword [rsp + 0x18]	      4477	elf.c	FUNCTION_62
0x40077ce	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4478	elf.c	FUNCTION_62	CALL_1
0x40077d3	          0x8d53ff	                      lea edx, [rbx - 1]	      4477	elf.c	FUNCTION_62
0x40077d6	    0x488d34d55000	                 lea rsi, [rdx*8 + 0x50]	      4478	elf.c	FUNCTION_62	CALL_1
0x40077de	      0x4889542440	             mov qword [rsp + 0x40], rdx	      4478	elf.c	FUNCTION_62	CALL_1
0x40077e3	      0xe800000000	                          call 0x40077e8	      4478	elf.c	FUNCTION_62	CALL_1
0x40077e8	          0x4885c0	                           test rax, rax	      4479	elf.c	FUNCTION_62	IF_1
0x40077eb	     0xf841f020000	                            je 0x4007a10	      4479	elf.c	FUNCTION_62	IF_1
0x40077f1	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      4483	elf.c	FUNCTION_62	FOR_1
0x40077f6	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      4483	elf.c	FUNCTION_62	FOR_1
0x40077fb	    0x48c700000000	                      mov qword [rax], 0	      4481	elf.c	FUNCTION_62
0x4007802	    0x48c740080100	                  mov qword [rax + 8], 1	      4482	elf.c	FUNCTION_62
0x400780a	          0x4489d1	                           mov ecx, r10d	      4483	elf.c	FUNCTION_62	FOR_1
0x400780d	        0x488d7a01	                      lea rdi, [rdx + 1]	      4483	elf.c	FUNCTION_62	FOR_1
0x4007811	            0x31d2	                            xor edx, edx	      4483	elf.c	FUNCTION_62	FOR_1
0x4007813	          0x4539d7	                          cmp r15d, r10d	      4483	elf.c	FUNCTION_62	FOR_1
0x4007816	        0x498d34ce	                  lea rsi, [r14 + rcx*8]	      4483	elf.c	FUNCTION_62	FOR_1
0x400781a	            0x7618	                           jbe 0x4007834	      4483	elf.c	FUNCTION_62	FOR_1
0x400781c	         0xf1f4000	                         nop dword [rax]	      4483	elf.c	FUNCTION_62	FOR_1
0x4007820	        0x4c8b04d6	             mov r8, qword [rsi + rdx*8]	      4484	elf.c	FUNCTION_62	FOR_1
0x4007824	            0x89d1	                            mov ecx, edx	      4484	elf.c	FUNCTION_62	FOR_1
0x4007826	        0x4883c201	                              add rdx, 1	      4484	elf.c	FUNCTION_62	FOR_1
0x400782a	          0x4839fa	                            cmp rdx, rdi	      4483	elf.c	FUNCTION_62	FOR_1
0x400782d	      0x4c8944c848	      mov qword [rax + rcx*8 + 0x48], r8	      4484	elf.c	FUNCTION_62	FOR_1
0x4007832	            0x75ec	                           jne 0x4007820	      4483	elf.c	FUNCTION_62	FOR_1
0x4007834	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      4487	elf.c	FUNCTION_62	IF_2
0x4007838	          0x895844	             mov dword [rax + 0x44], ebx	      4485	elf.c	FUNCTION_62
0x400783b	            0x85c9	                           test ecx, ecx	      4487	elf.c	FUNCTION_62	IF_2
0x400783d	            0x750b	                           jne 0x400784a	      4487	elf.c	FUNCTION_62	IF_2
0x400783f	      0xf644242801	               test byte [rsp + 0x28], 1	      4487	elf.c	FUNCTION_62	IF_2
0x4007844	            0x7404	                            je 0x400784a	      4487	elf.c	FUNCTION_62	IF_2
0x4007846	        0x80484030	              or byte [rax + 0x40], 0x30	      4491	elf.c	FUNCTION_62	IF_2
0x400784a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400784f	      0x418b742420	            mov esi, dword [r12 + 0x20] 	      4844	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x4007854	      0x4889442408	                mov qword [rsp + 8], rax	      4842	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007859	          0x488903	                    mov qword [rbx], rax	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400785c	            0x89f3	                            mov ebx, esi	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400785e	          0x4189f3	                           mov r11d, esi	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x4007861	          0xc1eb03	                              shr ebx, 3	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x4007864	            0x89f0	                            mov eax, esi	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007866	        0x41c1eb04	                             shr r11d, 4	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x400786a	          0x83f301	                              xor ebx, 1	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x400786d	      0x2502040000	                          and eax, 0x402	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007872	        0x4183e301	                             and r11d, 1	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x4007876	          0x83e301	                              and ebx, 1	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x4007879	      0x3d00040000	                          cmp eax, 0x400	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400787e	     0xf8471030000	                            je 0x4007bf5	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007884	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007889	      0x44897c2418	            mov dword [rsp + 0x18], r15d	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400788e	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007896	      0xe9e0feffff	                           jmp 0x400777b	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400789b	          0x4d85e4	                           test r12, r12	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x400789e	          0x4989ee	                            mov r14, rbp	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x40078a1	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x40078a6	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x40078ab	     0xf84ab000000	                            je 0x400795c	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x40078b1	          0x4189d4	                           mov r12d, edx	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x40078b4	      0x442b642418	            sub r12d, dword [rsp + 0x18]	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x40078b9	        0x4183fc01	                             cmp r12d, 1	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x40078bd	            0x7512	                           jne 0x40078d1	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x40078bf	    0x81e602040000	                          and esi, 0x402	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x40078c5	    0x81fe00040000	                          cmp esi, 0x400	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x40078cb	     0xf848b000000	                            je 0x400795c	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x40078d1	      0x418d4424ff	                      lea eax, [r12 - 1]	      4478	elf.c	FUNCTION_62	CALL_1
0x40078d6	          0x4889ef	                            mov rdi, rbp	      4478	elf.c	FUNCTION_62	CALL_1
0x40078d9	        0x89542420	             mov dword [rsp + 0x20], edx	      4478	elf.c	FUNCTION_62	CALL_1
0x40078dd	    0x488d34c55000	                 lea rsi, [rax*8 + 0x50]	      4478	elf.c	FUNCTION_62	CALL_1
0x40078e5	      0xe800000000	                          call 0x40078ea	      4478	elf.c	FUNCTION_62	CALL_1
0x40078ea	          0x4885c0	                           test rax, rax	      4479	elf.c	FUNCTION_62	IF_1
0x40078ed	     0xf841d010000	                            je 0x4007a10	      4479	elf.c	FUNCTION_62	IF_1
0x40078f3	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      4483	elf.c	FUNCTION_62	FOR_1
0x40078f7	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      4483	elf.c	FUNCTION_62	FOR_1
0x40078fb	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      4483	elf.c	FUNCTION_62	FOR_1
0x4007900	    0x48c700000000	                      mov qword [rax], 0	      4481	elf.c	FUNCTION_62
0x4007907	    0x48c740080100	                  mov qword [rax + 8], 1	      4482	elf.c	FUNCTION_62
0x400790f	            0x39d1	                            cmp ecx, edx	      4483	elf.c	FUNCTION_62	FOR_1
0x4007911	        0x488d34ce	                  lea rsi, [rsi + rcx*8]	      4483	elf.c	FUNCTION_62	FOR_1
0x4007915	            0x7321	                           jae 0x4007938	      4483	elf.c	FUNCTION_62	FOR_1
0x4007917	          0x4489fa	                           mov edx, r15d	      4483	elf.c	FUNCTION_62	FOR_1
0x400791a	        0x2b542418	             sub edx, dword [rsp + 0x18]	      4483	elf.c	FUNCTION_62	FOR_1
0x400791e	            0x31c9	                            xor ecx, ecx	      4483	elf.c	FUNCTION_62	FOR_1
0x4007920	        0x4883c201	                              add rdx, 1	      4483	elf.c	FUNCTION_62	FOR_1
0x4007924	        0x4c8b04ce	             mov r8, qword [rsi + rcx*8]	      4484	elf.c	FUNCTION_62	FOR_1
0x4007928	            0x89cf	                            mov edi, ecx	      4484	elf.c	FUNCTION_62	FOR_1
0x400792a	        0x4883c101	                              add rcx, 1	      4484	elf.c	FUNCTION_62	FOR_1
0x400792e	          0x4839d1	                            cmp rcx, rdx	      4483	elf.c	FUNCTION_62	FOR_1
0x4007931	      0x4c8944f848	      mov qword [rax + rdi*8 + 0x48], r8	      4484	elf.c	FUNCTION_62	FOR_1
0x4007936	            0x75ec	                           jne 0x4007924	      4483	elf.c	FUNCTION_62	FOR_1
0x4007938	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      4487	elf.c	FUNCTION_62	IF_2
0x400793c	        0x44896044	            mov dword [rax + 0x44], r12d	      4485	elf.c	FUNCTION_62
0x4007940	            0x85d2	                           test edx, edx	      4487	elf.c	FUNCTION_62	IF_2
0x4007942	            0x750b	                           jne 0x400794f	      4487	elf.c	FUNCTION_62	IF_2
0x4007944	      0xf644242801	               test byte [rsp + 0x28], 1	      4487	elf.c	FUNCTION_62	IF_2
0x4007949	            0x7404	                            je 0x400794f	      4487	elf.c	FUNCTION_62	IF_2
0x400794b	        0x80484030	              or byte [rax + 0x40], 0x30	      4491	elf.c	FUNCTION_62	IF_2
0x400794f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x4007954	      0x4889442408	                mov qword [rsp + 8], rax	      4872	elf.c	FUNCTION_65	IF_2	IF_31
0x4007959	          0x488907	                    mov qword [rdi], rax	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x400795c	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x4007961	          0x4d85ff	                           test r15, r15	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x4007964	            0x743d	                            je 0x40079a3	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x4007966	      0xbe50000000	                           mov esi, 0x50	      4505	elf.c	FUNCTION_63	CALL_1
0x400796b	          0x4889ef	                            mov rdi, rbp	      4505	elf.c	FUNCTION_63	CALL_1
0x400796e	      0xe800000000	                          call 0x4007973	      4505	elf.c	FUNCTION_63	CALL_1
0x4007973	          0x4885c0	                           test rax, rax	      4507	elf.c	FUNCTION_63	IF_1
0x4007976	     0xf8494000000	                            je 0x4007a10	      4507	elf.c	FUNCTION_63	IF_1
0x400797c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x4007981	    0x48c700000000	                      mov qword [rax], 0	      4509	elf.c	FUNCTION_63
0x4007988	    0x48c740080200	                  mov qword [rax + 8], 2	      4510	elf.c	FUNCTION_63
0x4007990	    0xc74044010000	               mov dword [rax + 0x44], 1	      4511	elf.c	FUNCTION_63
0x4007997	        0x4c897848	             mov qword [rax + 0x48], r15	      4512	elf.c	FUNCTION_63
0x400799b	      0x4889442408	                mov qword [rsp + 8], rax	      4882	elf.c	FUNCTION_65	IF_2	IF_33
0x40079a0	          0x488907	                    mov qword [rdi], rax	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x40079a3	    0x4c8ba5900000	            mov r12, qword [rbp + 0x90] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40079aa	          0x4d85e4	                           test r12, r12	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40079ad	     0xf8420050000	                            je 0x4007ed3	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40079b3	          0x4531ff	                          xor r15d, r15d	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40079b6	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40079bf	          0x4531ed	                          xor r13d, r13d	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40079c2	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40079c7	      0x4c89742428	             mov qword [rsp + 0x28], r14	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40079cc	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40079d1	            0xa802	                              test al, 2	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40079d3	            0x746b	                            je 0x4007a40	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40079d5	        0x498b3424	                    mov rsi, qword [r12]	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40079d9	    0x41b900000000	                              mov r9d, 0	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40079df	      0xb905000000	                              mov ecx, 5	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40079e4	          0x4c89cf	                             mov rdi, r9	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40079e7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40079e9	            0x7555	                           jne 0x4007a40	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40079eb	    0x41837c247002	               cmp dword [r12 + 0x70], 2	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x40079f1	     0xf8412020000	                            je 0x4007c09	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x40079f7	      0xbe50000000	                           mov esi, 0x50	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x40079fc	          0x4889ef	                            mov rdi, rbp	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x40079ff	      0xe800000000	                          call 0x4007a04	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4007a04	          0x4885c0	                           test rax, rax	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4007a07	          0x4889c3	                            mov rbx, rax	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4007a0a	     0xf8578060000	                           jne 0x4008088	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4007a10	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5105	elf.c	FUNCTION_65	CALL_52
0x4007a15	      0xe800000000	                          call 0x4007a1a	      5105	elf.c	FUNCTION_65	CALL_52
0x4007a1a	            0x31c0	                            xor eax, eax	      5106	elf.c	FUNCTION_65
0x4007a1c	      0xe9a8faffff	                           jmp 0x40074c9	      5106	elf.c	FUNCTION_65
0x4007a21	      0xbe1a120000	                         mov esi, 0x121a	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007a26	      0xbf00000000	                              mov edi, 0	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007a2b	      0xe800000000	                          call 0x4007a30	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007a30	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007a34	      0xe969fbffff	                           jmp 0x40075a2	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007a39	     0xf1f80000000	                         nop dword [rax]	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007a40	      0x2500040000	                          and eax, 0x400	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007a45	            0x89c2	                            mov edx, eax	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4007a47	            0x85d2	                           test edx, edx	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4007a49	            0x7415	                            je 0x4007a60	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4007a4b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4007a50	          0x4585ed	                         test r13d, r13d	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4007a53	        0x490f44c4	                          cmove rax, r12	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4007a57	        0x4183c501	                             add r13d, 1	      4934	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4007a5b	      0x4889442418	             mov qword [rsp + 0x18], rax	      4934	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4007a60	          0x4d85ff	                           test r15, r15	      4936	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x4007a63	     0xf8477010000	                            je 0x4007be0	      4936	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x4007a69	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4007a6e	          0x4d85e4	                           test r12, r12	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4007a71	     0xf8555ffffff	                           jne 0x40079cc	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4007a77	          0x4585ed	                         test r13d, r13d	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4007a7a	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4007a7f	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4007a84	     0xf8493030000	                            je 0x4007e1d	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4007a8a	        0x458d65ff	                     lea r12d, [r13 - 1]	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x4007a8e	          0x4889ef	                            mov rdi, rbp	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x4007a91	          0x4963c4	                        movsxd rax, r12d	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x4007a94	    0x488d34c55000	                 lea rsi, [rax*8 + 0x50]	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x4007a9c	      0xe800000000	                          call 0x4007aa1	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x4007aa1	          0x4885c0	                           test rax, rax	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x4007aa4	     0xf8466ffffff	                            je 0x4007a10	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x4007aaa	          0x4489e1	                           mov ecx, r12d	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x4007aad	    0x48c700000000	                      mov qword [rax], 0	      4949	elf.c	FUNCTION_65	IF_2	IF_42
0x4007ab4	    0x48c740080700	                  mov qword [rax + 8], 7	      4950	elf.c	FUNCTION_65	IF_2	IF_42
0x4007abc	      0x488d7cc850	          lea rdi, [rax + rcx*8 + 0x50] 	      4950	elf.c	FUNCTION_65	IF_2	IF_42
0x4007ac1	        0x44896844	            mov dword [rax + 0x44], r13d	      4951	elf.c	FUNCTION_65	IF_2	IF_42
0x4007ac5	    0x48c740100400	               mov qword [rax + 0x10], 4	      4953	elf.c	FUNCTION_65	IF_2	IF_42
0x4007acd	        0x80484001	                 or byte [rax + 0x40], 1	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x4007ad1	        0x488d7048	                   lea rsi, [rax + 0x48]	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x4007ad5	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x4007ada	            0xeb18	                           jmp 0x4007af4	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x4007adc	         0xf1f4000	                         nop dword [rax]	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x4007ae0	          0x48890e	                    mov qword [rsi], rcx	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4007ae3	        0x4883c608	                              add rsi, 8	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4007ae7	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      4979	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4007aeb	          0x4839f7	                            cmp rdi, rsi	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4007aee	     0xf841c030000	                            je 0x4007e10	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4007af4	        0xf6412104	               test byte [rcx + 0x21], 4	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4007af8	            0x75e6	                           jne 0x4007ae0	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4007afa	      0xba05000000	                              mov edx, 5	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_31
0x4007aff	      0xbe00000000	                              mov esi, 0	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_31
0x4007b04	      0xbf00000000	                              mov edi, 0	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_31
0x4007b09	      0xe800000000	                          call 0x4007b0e	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_31
0x4007b0e	          0x4889ee	                            mov rsi, rbp	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_30
0x4007b11	          0x4889c7	                            mov rdi, rax	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_30
0x4007b14	            0x31c0	                            xor eax, eax	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_30
0x4007b16	      0xe800000000	                          call 0x4007b1b	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_30
0x4007b1b	            0x31db	                            xor ebx, ebx	      4963	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4007b1d	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4963	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4007b22	            0xeb2c	                           jmp 0x4007b50	      4963	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4007b24	      0xbe00000000	                              mov esi, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4007b29	      0xbf00000000	                              mov edi, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4007b2e	          0x83c301	                              add ebx, 1	      4969	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4007b31	      0xe800000000	                          call 0x4007b36	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4007b36	          0x4889ee	                            mov rsi, rbp	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4007b39	          0x4889c7	                            mov rdi, rax	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4007b3c	            0x31c0	                            xor eax, eax	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4007b3e	      0xe800000000	                          call 0x4007b43	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4007b43	          0x4439eb	                           cmp ebx, r13d	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x4007b46	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4973	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x4007b4a	     0xf838f040000	                           jae 0x4007fdf	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x4007b50	        0xf6452104	               test byte [rbp + 0x21], 4	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4007b54	      0xba05000000	                              mov edx, 5	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4007b59	            0x75c9	                           jne 0x4007b24	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4007b5b	      0xbe00000000	                              mov esi, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4007b60	      0xbf00000000	                              mov edi, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4007b65	      0xe800000000	                          call 0x4007b6a	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4007b6a	          0x4889ee	                            mov rsi, rbp	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4007b6d	          0x4889c7	                            mov rdi, rax	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4007b70	            0x31c0	                            xor eax, eax	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4007b72	      0xe800000000	                          call 0x4007b77	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4007b77	            0xebca	                           jmp 0x4007b43	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4007b79	          0x4801d0	                            add rax, rdx	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4007b7c	     0xf823cfcffff	                            jb 0x40077be	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4007b82	          0x4839c6	                            cmp rsi, rax	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4007b85	     0xf8233fcffff	                            jb 0x40077be	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4007b8b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007b90	          0x8b7f44	            mov edi, dword [rdi + 0x44] 	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007b93	        0x897c2440	             mov dword [rsp + 0x40], edi	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007b97	          0xc1ef05	                              shr edi, 5	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007b9a	    0x81e700010000	                          and edi, 0x100	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007ba0	     0xf84b1010000	                            je 0x4007d57	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007ba6	        0x4c8d40ff	                       lea r8, [rax - 1]	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007baa	          0x4931f0	                             xor r8, rsi	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007bad	      0x4c85442460	            test qword [rsp + 0x60], r8 	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007bb2	     0xf859f010000	                           jne 0x4007d57	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4007bb8	          0x4885ed	                           test rbp, rbp	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007bbb	     0xf8485fbffff	                            je 0x4007746	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007bc1	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007bc5	          0x4531c0	                            xor r8d, r8d	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007bc8	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007bcc	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007bcf	     0xf8552fbffff	                           jne 0x4007727	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007bd5	      0xe96cfbffff	                           jmp 0x4007746	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007bda	    0x660f1f440000	                    nop word [rax + rax]	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007be0	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x4007be8	        0xf6400b01	                test byte [rax + 0xb], 1	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x4007bec	        0x4d0f45fc	                         cmovne r15, r12	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x4007bf0	      0xe974feffff	                           jmp 0x4007a69	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x4007bf5	      0x44897c2418	            mov dword [rsp + 0x18], r15d	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x4007bfa	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007c02	            0x31c0	                            xor eax, eax	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007c04	      0xe972fbffff	                           jmp 0x400777b	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4007c09	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4007c0e	          0x4885c0	                           test rax, rax	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4007c11	     0xf84e0fdffff	                            je 0x40079f7	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4007c17	        0x83787002	               cmp dword [rax + 0x70], 2	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c1b	     0xf85d6fdffff	                           jne 0x40079f7	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c21	        0xf6402002	               test byte [rax + 0x20], 2	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c25	     0xf84ccfdffff	                            je 0x40079f7	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c2b	          0x4d89e0	                             mov r8, r12	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c2e	      0xba01000000	                              mov edx, 1	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c33	            0xeb34	                           jmp 0x4007c69	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c35	        0x498b4838	              mov rcx, qword [r8 + 0x38]	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4007c39	        0x49034830	              add rcx, qword [r8 + 0x30]	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4007c3d	        0x4883c103	                              add rcx, 3	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4007c41	        0x4883e1fc	             and rcx, 0xfffffffffffffffc	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4007c45	        0x483b4830	            cmp rcx, qword [rax + 0x30] 	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4007c49	            0x752d	                           jne 0x4007c78	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4007c4b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4007c4f	          0x83c201	                              add edx, 1	      4908	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c52	          0x4885c9	                           test rcx, rcx	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4007c55	            0x7421	                            je 0x4007c78	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4007c57	        0x83797002	               cmp dword [rcx + 0x70], 2	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c5b	            0x751b	                           jne 0x4007c78	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c5d	        0xf6412002	               test byte [rcx + 0x20], 2	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c61	          0x4989c0	                             mov r8, rax	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c64	            0x7412	                            je 0x4007c78	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c66	          0x4889c8	                            mov rax, rcx	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4007c69	          0x488b30	                    mov rsi, qword [rax]	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4007c6c	      0xb905000000	                              mov ecx, 5	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4007c71	          0x4c89cf	                             mov rdi, r9	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4007c74	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4007c76	            0x74bd	                            je 0x4007c35	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4007c78	        0x448d42ff	                      lea r8d, [rdx - 1]	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007c7c	          0x4889ef	                            mov rdi, rbp	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4007c7f	        0x89542440	             mov dword [rsp + 0x40], edx	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007c83	    0x4a8d34c55000	                  lea rsi, [r8*8 + 0x50]	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4007c8b	          0x4d89c6	                             mov r14, r8	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007c8e	      0x4c89442430	              mov qword [rsp + 0x30], r8	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4007c93	      0xe800000000	                          call 0x4007c98	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4007c98	          0x4885c0	                           test rax, rax	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4007c9b	          0x4889c3	                            mov rbx, rax	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4007c9e	     0xf846cfdffff	                            je 0x4007a10	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4007ca4	        0x8b542440	            mov edx, dword [rsp + 0x40] 	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007ca8	    0x48c700000000	                      mov qword [rax], 0	      4916	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007caf	    0x48c740080400	                  mov qword [rax + 8], 4	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007cb7	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cbc	          0x83fa01	                              cmp edx, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cbf	          0x895044	             mov dword [rax + 0x44], edx	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007cc2	            0x7653	                           jbe 0x4007d17	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cc4	            0x89d6	                            mov esi, edx	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cc6	            0xeb1a	                           jmp 0x4007ce2	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cc8	     0xf1f84000000	                   nop dword [rax + rax]	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cd0	        0x4183fe01	                             cmp r14d, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cd4	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cd9	          0x4489f2	                           mov edx, r14d	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cdc	            0x7435	                            je 0x4007d13	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cde	        0x4183ee01	                             sub r14d, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007ce2	            0x89f0	                            mov eax, esi	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007ce4	            0x29d0	                            sub eax, edx	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007ce6	    0x41f644242104	               test byte [r12 + 0x21], 4	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x4007cec	      0x4c8964c348	     mov qword [rbx + rax*8 + 0x48], r12	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007cf1	            0x74dd	                            je 0x4007cd0	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x4007cf3	      0xbe3a130000	                         mov esi, 0x133a	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x4007cf8	      0xbf00000000	                              mov edi, 0	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x4007cfd	      0xe800000000	                          call 0x4007d02	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x4007d02	        0x4183fe01	                             cmp r14d, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007d06	          0x8b7344	            mov esi, dword [rbx + 0x44] 	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007d09	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007d0e	          0x4489f2	                           mov edx, r14d	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007d11	            0x75cb	                           jne 0x4007cde	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007d13	        0x448d46ff	                      lea r8d, [rsi - 1]	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4007d17	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d1c	      0x4e8964c348	      mov qword [rbx + r8*8 + 0x48], r12	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007d21	    0x81e200040000	                          and edx, 0x400	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d27	            0x7512	                           jne 0x4007d3b	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d29	      0x488b442408	                mov rax, qword [rsp + 8]	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007d2e	      0x48895c2408	                mov qword [rsp + 8], rbx	      4928	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007d33	          0x488918	                    mov qword [rax], rbx	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007d36	      0xe90cfdffff	                           jmp 0x4007a47	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4007d3b	      0xbe3e130000	                         mov esi, 0x133e	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d40	      0xbf00000000	                              mov edi, 0	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d45	      0xe800000000	                          call 0x4007d4a	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d4a	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d4f	    0x81e200040000	                          and edx, 0x400	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d55	            0xebd2	                           jmp 0x4007d29	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d57	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4007d5c	          0x4c01d0	                            add rax, r10	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4007d5f	          0x4d89d0	                             mov r8, r10	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4007d62	     0xf8298000000	                            jb 0x4007e00	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4007d68	      0x4823442460	             and rax, qword [rsp + 0x60]	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4007d6d	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4007d72	        0x4e8d0410	                     lea r8, [rax + r10]	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4007d76	          0x4939d0	                             cmp r8, rdx	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4007d79	            0x7609	                           jbe 0x4007d84	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4007d7b	          0x4c39c6	                             cmp rsi, r8	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_17
0x4007d7e	     0xf833afaffff	                           jae 0x40077be	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_17
0x4007d84	    0xf74120020400	         test dword [rcx + 0x20], 0x402 	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4007d8b	            0x750f	                           jne 0x4007d9c	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4007d8d	    0x41f744242002	         test dword [r12 + 0x20], 0x402 	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4007d96	     0xf8522faffff	                           jne 0x40077be	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4007d9c	            0x85ff	                           test edi, edi	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x4007d9e	     0xf8414feffff	                            je 0x4007bb8	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x4007da4	          0x4885ed	                           test rbp, rbp	      4794	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007da7	     0xf84ec030000	                            je 0x4008199	      4794	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007dad	        0xf6450320	               test byte [rbp + 3], 0x20	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007db1	            0x7414	                            je 0x4007dc7	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007db3	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007db8	          0xc1e804	                              shr eax, 4	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007dbb	          0x83e001	                              and eax, 1	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007dbe	          0x4439d8	                           cmp eax, r11d	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007dc1	     0xf8549f9ffff	                           jne 0x4007710	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4007dc7	            0x85db	                           test ebx, ebx	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4007dc9	     0xf85f2fdffff	                           jne 0x4007bc1	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4007dcf	      0x418b742420	            mov esi, dword [r12 + 0x20] 	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4007dd4	        0x40f6c608	                             test sil, 8	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4007dd8	     0xf8432f9ffff	                            je 0x4007710	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4007dde	          0x4885ed	                           test rbp, rbp	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007de1	     0xf8470f9ffff	                            je 0x4007757	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007de7	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007deb	          0x4531c0	                            xor r8d, r8d	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007dee	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007df2	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007df5	     0xf852cf9ffff	                           jne 0x4007727	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007dfb	      0xe957f9ffff	                           jmp 0x4007757	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4007e00	      0x483b542458	            cmp rdx, qword [rsp + 0x58] 	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4007e05	     0xf8270ffffff	                            jb 0x4007d7b	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4007e0b	      0xe974ffffff	                           jmp 0x4007d84	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4007e10	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x4007e15	      0x4889442408	                mov qword [rsp + 8], rax	      4983	elf.c	FUNCTION_65	IF_2	IF_42
0x4007e1a	          0x488907	                    mov qword [rdi], rax	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x4007e1d	          0x4d85ff	                           test r15, r15	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4007e20	     0xf84ad000000	                            je 0x4007ed3	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4007e26	        0xf6454520	           test byte [rbp + 0x45], 0x20 	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4007e2a	     0xf84a3000000	                            je 0x4007ed3	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4007e30	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4007e35	    0x498b87e00000	            mov rax, qword [r15 + 0xe0] 	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_37
0x4007e3c	        0xf6400b01	                test byte [rax + 0xb], 1	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_37
0x4007e40	            0x747f	                            je 0x4007ec1	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_37
0x4007e42	    0x81782c001000	         cmp dword [rax + 0x2c], 0x1000 	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_38
0x4007e49	            0x7776	                            ja 0x4007ec1	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_38
0x4007e4b	        0x418b5720	            mov edx, dword [r15 + 0x20] 	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e4f	      0xbe58000000	                           mov esi, 0x58	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_39
0x4007e54	          0x4889ef	                            mov rdi, rbp	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_39
0x4007e57	            0x89d0	                            mov eax, edx	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e59	          0x83e008	                              and eax, 8	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e5c	          0x83f801	                              cmp eax, 1	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e5f	          0x4d19e4	                            sbb r12, r12	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e62	        0x4183e402	                             and r12d, 2	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e66	        0x4983c405	                              add r12, 5	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e6a	          0x83f801	                              cmp eax, 1	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e6d	          0x4819c0	                            sbb rax, rax	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e70	          0x83e002	                              and eax, 2	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e73	        0x4883c004	                              add rax, 4	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4007e77	          0x83e210	                           and edx, 0x10	      4996	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x4007e7a	        0x4c0f44e0	                          cmove r12, rax	      4996	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x4007e7e	      0xe800000000	                          call 0x4007e83	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_39
0x4007e83	          0x4885c0	                           test rax, rax	      5001	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x4007e86	     0xf8484fbffff	                            je 0x4007a10	      5001	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x4007e8c	    0x498b97e00000	            mov rdx, qword [r15 + 0xe0] 	      5005	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_40
0x4007e93	    0x48c700000000	                      mov qword [rax], 0	      5003	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007e9a	          0x8b522c	            mov edx, dword [rdx + 0x2c] 	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007e9d	    0xc74044010000	               mov dword [rax + 0x44], 1	      5006	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007ea4	        0x80484001	                 or byte [rax + 0x40], 1	      5007	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007ea8	        0x4c897848	             mov qword [rax + 0x48], r15	      5008	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007eac	        0x4c896010	             mov qword [rax + 0x10], r12	      5009	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007eb0	    0x8dba55e57464	             lea edi, [rdx + 0x6474e555]	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007eb6	        0x48897808	                mov qword [rax + 8], rdi	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007eba	        0x49894500	                    mov qword [r13], rax	      5011	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007ebe	          0x4989c5	                            mov r13, rax	      5012	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4007ec1	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x4007ec5	          0x4d85ff	                           test r15, r15	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x4007ec8	     0xf8567ffffff	                           jne 0x4007e35	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x4007ece	      0x4c896c2408	                mov qword [rsp + 8], r13	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x4007ed3	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_41
0x4007eda	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_41
0x4007ee1	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_41
0x4007ee5	          0x4d85e4	                           test r12, r12	      5018	elf.c	FUNCTION_65	IF_2	IF_51
0x4007ee8	            0x740f	                            je 0x4007ef9	      5018	elf.c	FUNCTION_65	IF_2	IF_51
0x4007eea	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x4007eef	        0xf6422002	               test byte [rdx + 0x20], 2	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x4007ef3	     0xf85bd010000	                           jne 0x40080b6	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x4007ef9	          0x8b4054	            mov eax, dword [rax + 0x54] 	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_43
0x4007efc	            0x85c0	                           test eax, eax	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_43
0x4007efe	     0xf850f020000	                           jne 0x4008113	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_43
0x4007f04	          0x4d85f6	                           test r14, r14	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x4007f07	     0xf84a0000000	                            je 0x4007fad	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x4007f0d	      0x41f6460310	               test byte [r14 + 3], 0x10	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x4007f12	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f17	     0xf8495000000	                            je 0x4007fb2	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x4007f1d	          0x4d85e4	                           test r12, r12	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f20	     0xf84e5010000	                            je 0x400810b	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f26	          0x4c89e0	                            mov rax, r12	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f29	            0xeb0d	                           jmp 0x4007f38	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f2b	       0xf1f440000	                   nop dword [rax + rax]	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f30	          0x488b00	                    mov rax, qword [rax]	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f33	          0x4885c0	                           test rax, rax	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f36	            0x747a	                            je 0x4007fb2	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4007f38	      0x4883780801	                  cmp qword [rax + 8], 1	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f3d	            0x75f1	                           jne 0x4007f30	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f3f	          0x8b5044	            mov edx, dword [rax + 0x44] 	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f42	            0x85d2	                           test edx, edx	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f44	            0x74ea	                            je 0x4007f30	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f46	        0x488b4848	            mov rcx, qword [rax + 0x48] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f4a	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f4e	    0x493b8ec80000	            cmp rcx, qword [r14 + 0xc8] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f55	            0x72d9	                            jb 0x4007f30	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f57	    0x493b8ed00000	            cmp rcx, qword [r14 + 0xd0] 	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f5e	            0x73d0	                           jae 0x4007f30	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4007f60	          0x83ea01	                              sub edx, 1	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x4007f63	          0x83faff	             cmp edx, 0xffffffffffffffff	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x4007f66	            0x74c8	                            je 0x4007f30	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x4007f68	            0x89d1	                            mov ecx, edx	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4007f6a	      0x488b4cc848	    mov rcx, qword [rax + rcx*8 + 0x48] 	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4007f6f	          0x8b4920	            mov ecx, dword [rcx + 0x20] 	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4007f72	    0x81e102010000	                          and ecx, 0x102	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4007f78	    0x81f902010000	                          cmp ecx, 0x102	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4007f7e	            0x75e0	                           jne 0x4007f60	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4007f80	      0xbe50000000	                           mov esi, 0x50	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_46
0x4007f85	          0x4889ef	                            mov rdi, rbp	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_46
0x4007f88	      0xe800000000	                          call 0x4007f8d	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_46
0x4007f8d	          0x4885c0	                           test rax, rax	      5081	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x4007f90	     0xf847afaffff	                            je 0x4007a10	      5081	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x4007f96	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x4007f9b	    0x48c700000000	                      mov qword [rax], 0	      5083	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x4007fa2	    0x48c7400852e5	        mov qword [rax + 8], 0x6474e552 	      5084	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x4007faa	          0x488907	                    mov qword [rdi], rax	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x4007fad	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x4007fb2	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5090	elf.c	FUNCTION_65	IF_2	CALL_47
0x4007fb7	      0xe800000000	                          call 0x4007fbc	      5090	elf.c	FUNCTION_65	IF_2	CALL_47
0x4007fbc	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x4007fc3	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x4007fca	          0x4c8922	                    mov qword [rdx], r12	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x4007fcd	      0xe910f4ffff	                           jmp 0x40073e2	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x4007fd2	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4722	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	ELSE_1
0x4007fda	      0xe9ecf6ffff	                           jmp 0x40076cb	      4722	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	ELSE_1
0x4007fdf	      0xbf11000000	                           mov edi, 0x11	      4975	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_36
0x4007fe4	      0xe800000000	                          call 0x4007fe9	      4975	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_36
0x4007fe9	      0xe922faffff	                           jmp 0x4007a10	      4976	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4007fee	      0xbe50000000	                           mov esi, 0x50	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x4007ff3	          0x4889ef	                            mov rdi, rbp	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x4007ff6	      0x4889542408	                mov qword [rsp + 8], rdx	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x4007ffb	      0xe800000000	                          call 0x4008000	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x4008000	          0x4885c0	                           test rax, rax	      4652	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x4008003	          0x4989c7	                            mov r15, rax	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x4008006	     0xf8404faffff	                            je 0x4007a10	      4652	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x400800c	        0x80484021	              or byte [rax + 0x40], 0x21	      4658	elf.c	FUNCTION_65	IF_2	IF_6
0x4008010	    0x48c700000000	                      mov qword [rax], 0	      4654	elf.c	FUNCTION_65	IF_2	IF_6
0x4008017	      0xbe50000000	                           mov esi, 0x50	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_12
0x400801c	    0x48c740080600	                  mov qword [rax + 8], 6	      4655	elf.c	FUNCTION_65	IF_2	IF_6
0x4008024	    0x48c740100400	               mov qword [rax + 0x10], 4	      4656	elf.c	FUNCTION_65	IF_2	IF_6
0x400802c	          0x4889ef	                            mov rdi, rbp	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_12
0x400802f	      0x4889442470	             mov qword [rsp + 0x70], rax	      4660	elf.c	FUNCTION_65	IF_2	IF_6
0x4008034	      0xe800000000	                          call 0x4008039	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_12
0x4008039	          0x4885c0	                           test rax, rax	      4665	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x400803c	     0xf84cef9ffff	                            je 0x4007a10	      4665	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x4008042	      0x488b542408	                mov rdx, qword [rsp + 8]	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x4008047	    0x48c700000000	                      mov qword [rax], 0	      4667	elf.c	FUNCTION_65	IF_2	IF_6
0x400804e	    0x48c740080300	                  mov qword [rax + 8], 3	      4668	elf.c	FUNCTION_65	IF_2	IF_6
0x4008056	    0xc74044010000	               mov dword [rax + 0x44], 1	      4669	elf.c	FUNCTION_65	IF_2	IF_6
0x400805d	      0x4889442408	                mov qword [rsp + 8], rax	      4673	elf.c	FUNCTION_65	IF_2	IF_6
0x4008062	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4673	elf.c	FUNCTION_65	IF_2	IF_6
0x400806a	        0x48895048	             mov qword [rax + 0x48], rdx	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x400806e	          0x498907	                    mov qword [r15], rax	      4672	elf.c	FUNCTION_65	IF_2	IF_6
0x4008071	      0xe97af5ffff	                           jmp 0x40075f0	      4672	elf.c	FUNCTION_65	IF_2	IF_6
0x4008076	            0x31f6	                            xor esi, esi	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4008078	          0x4531ed	                          xor r13d, r13d	      4606	elf.c	FUNCTION_65	IF_2
0x400807b	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4622	elf.c	FUNCTION_65	IF_2
0x4008083	      0xe91af5ffff	                           jmp 0x40075a2	      4622	elf.c	FUNCTION_65	IF_2
0x4008088	    0x48c703000000	                      mov qword [rbx], 0	      4916	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400808f	    0x48c743080400	                  mov qword [rbx + 8], 4	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4008097	          0x4531c0	                            xor r8d, r8d	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400809a	    0xc74344010000	               mov dword [rbx + 0x44], 1	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40080a1	      0xe971fcffff	                           jmp 0x4007d17	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40080a6	          0x4c89f6	                            mov rsi, r14	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_15
0x40080a9	          0x4889ef	                            mov rdi, rbp	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_15
0x40080ac	      0xe8df80ffff	        call sym.get_program_header_size	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_15
0x40080b1	      0xe9b1f5ffff	                           jmp 0x4007667	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_15
0x40080b6	      0xbe50000000	                           mov esi, 0x50	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_42
0x40080bb	          0x4889ef	                            mov rdi, rbp	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_42
0x40080be	      0xe800000000	                          call 0x40080c3	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_42
0x40080c3	          0x4885c0	                           test rax, rax	      5023	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x40080c6	     0xf8444f9ffff	                            je 0x4007a10	      5023	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x40080cc	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x40080d1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40080d6	    0x48c700000000	                      mov qword [rax], 0	      5025	elf.c	FUNCTION_65	IF_2	IF_51
0x40080dd	    0x48c7400850e5	        mov qword [rax + 8], 0x6474e550 	      5026	elf.c	FUNCTION_65	IF_2	IF_51
0x40080e5	    0xc74044010000	               mov dword [rax + 0x44], 1	      5027	elf.c	FUNCTION_65	IF_2	IF_51
0x40080ec	      0x4889442408	                mov qword [rsp + 8], rax	      5031	elf.c	FUNCTION_65	IF_2	IF_51
0x40080f1	        0x48895048	             mov qword [rax + 0x48], rdx	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x40080f5	          0x488907	                    mov qword [rdi], rax	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40080f8	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40080ff	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x4008106	      0xe9eefdffff	                           jmp 0x4007ef9	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x400810b	          0x4531e4	                          xor r12d, r12d	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400810e	      0xe99ffeffff	                           jmp 0x4007fb2	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4008113	      0xbe50000000	                           mov esi, 0x50	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_44
0x4008118	          0x4889ef	                            mov rdi, rbp	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_44
0x400811b	      0xe800000000	                          call 0x4008120	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_44
0x4008120	          0x4885c0	                           test rax, rax	      5038	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x4008123	     0xf84e7f8ffff	                            je 0x4007a10	      5038	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x4008129	    0x48c700000000	                      mov qword [rax], 0	      5040	elf.c	FUNCTION_65	IF_2	IF_53
0x4008130	    0x48c7400851e5	        mov qword [rax + 8], 0x6474e551 	      5041	elf.c	FUNCTION_65	IF_2	IF_53
0x4008138	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_45
0x400813f	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x4008143	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_45
0x400814a	          0x83c901	                               or ecx, 1	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x400814d	          0x8b7a54	            mov edi, dword [rdx + 0x54] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_45
0x4008150	        0x48897810	             mov qword [rax + 0x10], rdi	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_45
0x4008154	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x4008159	    0x8b977c030000	           mov edx, dword [rdi + 0x37c] 	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x400815f	          0x4885d2	                           test rdx, rdx	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4008162	        0x48895028	             mov qword [rax + 0x28], rdx	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x4008166	           0xf95c2	                                setne dl	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4008169	          0x83e1fb	                     and ecx, 0xfffffffb	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400816c	          0xc1e202	                              shl edx, 2	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400816f	             0x9ca	                             or edx, ecx	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4008171	          0x885040	               mov byte [rax + 0x40], dl	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4008174	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4008178	          0x4885c9	                           test rcx, rcx	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400817b	            0x7e0a	                           jle 0x4008187	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400817d	          0x83ca08	                               or edx, 8	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4008180	        0x48894830	             mov qword [rax + 0x30], rcx	      5048	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4008184	          0x885040	               mov byte [rax + 0x40], dl	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4008187	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x400818c	      0x4889442408	                mov qword [rsp + 8], rax	      5053	elf.c	FUNCTION_65	IF_2	IF_53
0x4008191	          0x488907	                    mov qword [rdi], rax	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x4008194	      0xe974fdffff	                           jmp 0x4007f0d	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x4008199	            0x85db	                           test ebx, ebx	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400819b	     0xf85a5f5ffff	                           jne 0x4007746	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40081a1	      0x418b742420	            mov esi, dword [r12 + 0x20] 	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40081a6	        0x40f6c608	                             test sil, 8	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40081aa	     0xf8417f6ffff	                            je 0x40077c7	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40081b0	      0xe9a2f5ffff	                           jmp 0x4007757	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40081b5	      0xe800000000	                          call 0x40081ba	      5107	elf.c	FUNCTION_65
_bfd_elf_is_local_label_name	functions,0:CALL,2:FOR,1:WHILE,0:SWITCH,0:IF,7:DO,0:ELSE,0	60
0x400fe70	           0xfb616	                   movzx edx, byte [rsi]	      8650	elf.c	FUNCTION_100	IF_1
0x400fe73	          0x80fa2e	                            cmp dl, 0x2e	      8650	elf.c	FUNCTION_100	IF_1
0x400fe76	            0x7478	                            je 0x400fef0	      8650	elf.c	FUNCTION_100	IF_1
0x400fe78	            0x31c0	                            xor eax, eax	      8708	elf.c	FUNCTION_100
0x400fe7a	          0x80fa5f	                            cmp dl, 0x5f	      8664	elf.c	FUNCTION_100	IF_3
0x400fe7d	            0x7461	                            je 0x400fee0	      8664	elf.c	FUNCTION_100	IF_3
0x400fe7f	          0x80fa4c	                            cmp dl, 0x4c	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400fe82	            0x7562	                           jne 0x400fee6	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400fe84	         0xfb65601	               movzx edx, byte [rsi + 1]	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400fe88	    0xf68412000000	                test byte [rdx + rdx], 4	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400fe90	            0x7454	                            je 0x400fee6	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400fe92	         0xfb65602	               movzx edx, byte [rsi + 2]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400fe96	        0x488d7e02	                      lea rdi, [rsi + 2]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400fe9a	            0x84d2	                             test dl, dl	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400fe9c	            0x7448	                            je 0x400fee6	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400fe9e	          0x4889f9	                            mov rcx, rdi	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400fea1	            0xeb1a	                           jmp 0x400febd	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400fea3	       0xf1f440000	                   nop dword [rax + rax]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400fea8	    0xf68412000000	                test byte [rdx + rdx], 4	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x400feb0	            0x746e	                            je 0x400ff20	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x400feb2	        0x4883c101	                              add rcx, 1	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400feb6	           0xfb611	                   movzx edx, byte [rcx]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400feb9	            0x84d2	                             test dl, dl	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400febb	            0x746b	                            je 0x400ff28	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400febd	          0x8d72ff	                      lea esi, [rdx - 1]	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400fec0	        0x4080fe01	                              cmp sil, 1	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400fec4	            0x77e2	                            ja 0x400fea8	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400fec6	          0x80fa01	                               cmp dl, 1	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400fec9	      0xb801000000	                              mov eax, 1	      8651	elf.c	FUNCTION_100	IF_1
0x400fece	            0x75d8	                           jne 0x400fea8	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400fed0	          0x4839cf	                            cmp rdi, rcx	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400fed3	            0x75d3	                           jne 0x400fea8	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400fed5	            0xf3c3	                                     ret	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400fed7	    0x660f1f840000	                    nop word [rax + rax]	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400fee0	        0x807e012e	                cmp byte [rsi + 1], 0x2e	      8664	elf.c	FUNCTION_100	IF_3
0x400fee4	            0x7422	                            je 0x400ff08	      8664	elf.c	FUNCTION_100	IF_3
0x400fee6	            0xf3c3	                                     ret	      8709	elf.c	FUNCTION_100
0x400fee8	     0xf1f84000000	                   nop dword [rax + rax]	      8709	elf.c	FUNCTION_100
0x400fef0	         0xfb64601	               movzx eax, byte [rsi + 1]	      8650	elf.c	FUNCTION_100	IF_1
0x400fef4	            0x3c4c	                            cmp al, 0x4c	      8650	elf.c	FUNCTION_100	IF_1
0x400fef6	            0x7438	                            je 0x400ff30	      8650	elf.c	FUNCTION_100	IF_1
0x400fef8	            0x3c2e	                            cmp al, 0x2e	      8651	elf.c	FUNCTION_100	IF_1
0x400fefa	           0xf94c0	                                 sete al	      8651	elf.c	FUNCTION_100	IF_1
0x400fefd	           0xfb6c0	                           movzx eax, al	      8651	elf.c	FUNCTION_100	IF_1
0x400ff00	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
0x400ff01	     0xf1f80000000	                         nop dword [rax]	      8651	elf.c	FUNCTION_100	IF_1
0x400ff08	        0x807e024c	                cmp byte [rsi + 2], 0x4c	      8664	elf.c	FUNCTION_100	IF_3
0x400ff0c	            0x75d8	                           jne 0x400fee6	      8664	elf.c	FUNCTION_100	IF_3
0x400ff0e	            0x31c0	                            xor eax, eax	      8651	elf.c	FUNCTION_100	IF_1
0x400ff10	        0x807e035f	                cmp byte [rsi + 3], 0x5f	      8651	elf.c	FUNCTION_100	IF_1
0x400ff14	           0xf94c0	                                 sete al	      8651	elf.c	FUNCTION_100	IF_1
0x400ff17	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
0x400ff18	     0xf1f84000000	                   nop dword [rax + rax]	      8651	elf.c	FUNCTION_100	IF_1
0x400ff20	            0x31c0	                            xor eax, eax	      8708	elf.c	FUNCTION_100
0x400ff22	              0xc3	                                     ret	      8709	elf.c	FUNCTION_100
0x400ff23	       0xf1f440000	                   nop dword [rax + rax]	      8709	elf.c	FUNCTION_100
0x400ff28	            0xf3c3	                                     ret	      8709	elf.c	FUNCTION_100
0x400ff2a	    0x660f1f440000	                    nop word [rax + rax]	      8709	elf.c	FUNCTION_100
0x400ff30	      0xb801000000	                              mov eax, 1	      8651	elf.c	FUNCTION_100	IF_1
0x400ff35	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
_bfd_elf_filter_global_symbols	functions,0:CALL,3:FOR,1:WHILE,0:SWITCH,0:IF,4:DO,0:ELSE,0	76
0x4007170	            0x4157	                                push r15	      4003	elf.c	FUNCTION_54
0x4007172	            0x4156	                                push r14	      4003	elf.c	FUNCTION_54
0x4007174	            0x4155	                                push r13	      4003	elf.c	FUNCTION_54
0x4007176	            0x4154	                                push r12	      4003	elf.c	FUNCTION_54
0x4007178	          0x4989d4	                            mov r12, rdx	      4003	elf.c	FUNCTION_54
0x400717b	              0x55	                                push rbp	      4003	elf.c	FUNCTION_54
0x400717c	              0x53	                                push rbx	      4003	elf.c	FUNCTION_54
0x400717d	        0x4883ec18	                           sub rsp, 0x18	      4003	elf.c	FUNCTION_54
0x4007181	          0x4885c9	                           test rcx, rcx	      4006	elf.c	FUNCTION_54	FOR_1
0x4007184	        0x48893424	                    mov qword [rsp], rsi	      4003	elf.c	FUNCTION_54
0x4007188	     0xf8ede000000	                           jle 0x400726c	      4006	elf.c	FUNCTION_54	FOR_1
0x400718e	          0x4989fe	                            mov r14, rdi	      4006	elf.c	FUNCTION_54	FOR_1
0x4007191	          0x4989cd	                            mov r13, rcx	      4006	elf.c	FUNCTION_54	FOR_1
0x4007194	    0x48c744240800	                  mov qword [rsp + 8], 0	      4006	elf.c	FUNCTION_54	FOR_1
0x400719d	            0x31db	                            xor ebx, ebx	      4006	elf.c	FUNCTION_54	FOR_1
0x400719f	            0xeb20	                           jmp 0x40071c1	      4006	elf.c	FUNCTION_54	FOR_1
0x40071a1	     0xf1f80000000	                         nop dword [rax]	      4006	elf.c	FUNCTION_54	FOR_1
0x40071a8	          0x4889ee	                            mov rsi, rbp	      3986	elf.c	FUNCTION_53	IF_1
0x40071ab	          0x4c89f7	                            mov rdi, r14	      3986	elf.c	FUNCTION_53	IF_1
0x40071ae	            0xffd0	                                call rax	      3986	elf.c	FUNCTION_53	IF_1
0x40071b0	            0x85c0	                           test eax, eax	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_2
0x40071b2	            0x7544	                           jne 0x40071f8	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_2
0x40071b4	        0x4883c301	                              add rbx, 1	      4006	elf.c	FUNCTION_54	FOR_1
0x40071b8	          0x4939dd	                            cmp r13, rbx	      4006	elf.c	FUNCTION_54	FOR_1
0x40071bb	     0xf8487000000	                            je 0x4007248	      4006	elf.c	FUNCTION_54	FOR_1
0x40071c1	        0x498b4608	                mov rax, qword [r14 + 8]	      3984	elf.c	FUNCTION_53	CALL_1
0x40071c5	        0x498b2cdc	            mov rbp, qword [r12 + rbx*8]	      4008	elf.c	FUNCTION_54	FOR_1
0x40071c9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3985	elf.c	FUNCTION_53	IF_1
0x40071d0	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      4009	elf.c	FUNCTION_54	FOR_1	CALL_1
0x40071d4	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3985	elf.c	FUNCTION_53	IF_1
0x40071d8	          0x4885c0	                           test rax, rax	      3985	elf.c	FUNCTION_53	IF_1
0x40071db	            0x75cb	                           jne 0x40071a8	      3985	elf.c	FUNCTION_53	IF_1
0x40071dd	    0xf74518820080	      test dword [rbp + 0x18], 0x800082 	      3990	elf.c	FUNCTION_53	CALL_5
0x40071e4	            0x7512	                           jne 0x40071f8	      3990	elf.c	FUNCTION_53	CALL_5
0x40071e6	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      3989	elf.c	FUNCTION_53	CALL_3
0x40071ea	    0x483d00000000	                              cmp rax, 0	      3989	elf.c	FUNCTION_53	CALL_3
0x40071f0	            0x7406	                            je 0x40071f8	      3989	elf.c	FUNCTION_53	CALL_3
0x40071f2	        0xf6402110	           test byte [rax + 0x21], 0x10 	      3990	elf.c	FUNCTION_53	CALL_5
0x40071f6	            0x74bc	                            je 0x40071b4	      3990	elf.c	FUNCTION_53	CALL_5
0x40071f8	        0x488b0424	                    mov rax, qword [rsp]	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x40071fc	          0x4531c0	                            xor r8d, r8d	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x40071ff	            0x31c9	                            xor ecx, ecx	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4007201	            0x31d2	                            xor edx, edx	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4007203	          0x4c89fe	                            mov rsi, r15	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4007206	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x400720a	      0xe800000000	                          call 0x400720f	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x400720f	          0x4885c0	                           test rax, rax	      4016	elf.c	FUNCTION_54	FOR_1	IF_2
0x4007212	            0x74a0	                            je 0x40071b4	      4016	elf.c	FUNCTION_54	FOR_1	IF_2
0x4007214	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4007218	          0x8d51fd	                      lea edx, [rcx - 3]	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x400721b	          0x80fa01	                               cmp dl, 1	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x400721e	            0x7794	                            ja 0x40071b4	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4007220	        0xf640190c	            test byte [rax + 0x19], 0xc 	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4007224	            0x758e	                           jne 0x40071b4	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4007226	      0x488b442408	                mov rax, qword [rsp + 8]	      4023	elf.c	FUNCTION_54	FOR_1
0x400722b	        0x4883c301	                              add rbx, 1	      4006	elf.c	FUNCTION_54	FOR_1
0x400722f	        0x49892cc4	            mov qword [r12 + rax*8], rbp	      4023	elf.c	FUNCTION_54	FOR_1
0x4007233	        0x4883c001	                              add rax, 1	      4023	elf.c	FUNCTION_54	FOR_1
0x4007237	          0x4939dd	                            cmp r13, rbx	      4006	elf.c	FUNCTION_54	FOR_1
0x400723a	      0x4889442408	                mov qword [rsp + 8], rax	      4023	elf.c	FUNCTION_54	FOR_1
0x400723f	            0x7580	                           jne 0x40071c1	      4006	elf.c	FUNCTION_54	FOR_1
0x4007241	     0xf1f80000000	                         nop dword [rax]	      4006	elf.c	FUNCTION_54	FOR_1
0x4007248	      0x488b442408	                mov rax, qword [rsp + 8]	      4006	elf.c	FUNCTION_54	FOR_1
0x400724d	    0x488d14c50000	                        lea rdx, [rax*8]	      4006	elf.c	FUNCTION_54	FOR_1
0x4007255	    0x49c704140000	                mov qword [r12 + rdx], 0	      4026	elf.c	FUNCTION_54
0x400725d	        0x4883c418	                           add rsp, 0x18	      4029	elf.c	FUNCTION_54
0x4007261	              0x5b	                                 pop rbx	      4029	elf.c	FUNCTION_54
0x4007262	              0x5d	                                 pop rbp	      4029	elf.c	FUNCTION_54
0x4007263	            0x415c	                                 pop r12	      4029	elf.c	FUNCTION_54
0x4007265	            0x415d	                                 pop r13	      4029	elf.c	FUNCTION_54
0x4007267	            0x415e	                                 pop r14	      4029	elf.c	FUNCTION_54
0x4007269	            0x415f	                                 pop r15	      4029	elf.c	FUNCTION_54
0x400726b	              0xc3	                                     ret	      4029	elf.c	FUNCTION_54
0x400726c	            0x31c0	                            xor eax, eax	      4006	elf.c	FUNCTION_54	FOR_1
0x400726e	            0x31d2	                            xor edx, edx	      4006	elf.c	FUNCTION_54	FOR_1
0x4007270	            0xebe3	                           jmp 0x4007255	      4006	elf.c	FUNCTION_54	FOR_1
elfcore_grok_prstatus	functions,0:CALL,15:FOR,0:WHILE,0:SWITCH,0:IF,6:DO,0:ELSE,2	140
0x4002a40	            0x4157	                                push r15	      9112	elf.c	FUNCTION_115
0x4002a42	            0x4156	                                push r14	      9112	elf.c	FUNCTION_115
0x4002a44	            0x4155	                                push r13	      9112	elf.c	FUNCTION_115
0x4002a46	            0x4154	                                push r12	      9112	elf.c	FUNCTION_115
0x4002a48	              0x55	                                push rbp	      9112	elf.c	FUNCTION_115
0x4002a49	              0x53	                                push rbx	      9112	elf.c	FUNCTION_115
0x4002a4a	          0x4889fd	                            mov rbp, rdi	      9112	elf.c	FUNCTION_115
0x4002a4d	        0x4883ec78	                           sub rsp, 0x78	      9112	elf.c	FUNCTION_115
0x4002a51	    0x64488b042528	                mov rax, qword fs:[0x28]	      9112	elf.c	FUNCTION_115
0x4002a5a	      0x4889442468	             mov qword [rsp + 0x68], rax	      9112	elf.c	FUNCTION_115
0x4002a5f	            0x31c0	                            xor eax, eax	      9112	elf.c	FUNCTION_115
0x4002a61	        0x488b4608	                mov rax, qword [rsi + 8]	      9116	elf.c	FUNCTION_115	IF_1
0x4002a65	    0x483d50010000	                          cmp rax, 0x150	      9116	elf.c	FUNCTION_115	IF_1
0x4002a6b	     0xf848f010000	                            je 0x4002c00	      9116	elf.c	FUNCTION_115	IF_1
0x4002a71	    0x483d90000000	                           cmp rax, 0x90	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4002a77	      0xbb01000000	                              mov ebx, 1	      9177	elf.c	FUNCTION_115	ELSE_2
0x4002a7c	            0x742a	                            je 0x4002aa8	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4002a7e	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      9183	elf.c	FUNCTION_115
0x4002a83	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9183	elf.c	FUNCTION_115
0x4002a8c	            0x89d8	                            mov eax, ebx	      9183	elf.c	FUNCTION_115
0x4002a8e	     0xf85c5010000	                           jne 0x4002c59	      9183	elf.c	FUNCTION_115
0x4002a94	        0x4883c478	                           add rsp, 0x78	      9183	elf.c	FUNCTION_115
0x4002a98	              0x5b	                                 pop rbx	      9183	elf.c	FUNCTION_115
0x4002a99	              0x5d	                                 pop rbp	      9183	elf.c	FUNCTION_115
0x4002a9a	            0x415c	                                 pop r12	      9183	elf.c	FUNCTION_115
0x4002a9c	            0x415d	                                 pop r13	      9183	elf.c	FUNCTION_115
0x4002a9e	            0x415e	                                 pop r14	      9183	elf.c	FUNCTION_115
0x4002aa0	            0x415f	                                 pop r15	      9183	elf.c	FUNCTION_115
0x4002aa2	              0xc3	                                     ret	      9183	elf.c	FUNCTION_115
0x4002aa3	       0xf1f440000	                   nop dword [rax + rax]	      9183	elf.c	FUNCTION_115
0x4002aa8	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4002aaf	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x4002ab3	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4002aba	        0x448b4a18	            mov r9d, dword [rdx + 0x18] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4002abe	            0x8b08	                    mov ecx, dword [rax]	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4002ac0	            0x85c9	                           test ecx, ecx	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4002ac2	            0x7506	                           jne 0x4002aca	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x4002ac4	         0xfbf520c	            movsx edx, word [rdx + 0xc] 	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x4002ac8	            0x8910	                    mov dword [rax], edx	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x4002aca	          0x8b5004	                mov edx, dword [rax + 4]	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4002acd	            0x85d2	                           test edx, edx	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4002acf	     0xf847b010000	                            je 0x4002c50	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x4002ad5	        0x44894808	                mov dword [rax + 8], r9d	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x4002ad9	    0x41bd48000000	                          mov r13d, 0x48	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x4002adf	    0x41be44000000	                          mov r14d, 0x44	      9149	elf.c	FUNCTION_115	ELSE_1	IF_4
0x4002ae5	          0x4585c9	                           test r9d, r9d	      9035	elf.c	FUNCTION_112	IF_1
0x4002ae8	        0x4c8b6628	            mov r12, qword [rsi + 0x28] 	      9182	elf.c	FUNCTION_115
0x4002aec	            0x7504	                           jne 0x4002af2	      9035	elf.c	FUNCTION_112	IF_1
0x4002aee	        0x448b4804	                mov r9d, dword [rax + 4]	      9036	elf.c	FUNCTION_112	CALL_2
0x4002af2	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_204	CALL_1
0x4002af7	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4002afd	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4002b02	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x4002b07	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x4002b0a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x4002b0c	      0xe800000000	                          call 0x4002b11	        33	stdio2.h	FUNCTION_204	CALL_1
0x4002b11	          0x4989e7	                            mov r15, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x4002b14	          0x4889e2	                            mov rdx, rsp	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b17	            0x8b0a	                    mov ecx, dword [rdx]	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b19	        0x4883c204	                              add rdx, 4	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b1d	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b23	            0xf7d1	                                 not ecx	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b25	            0x21c8	                            and eax, ecx	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b27	      0x2580808080	                     and eax, 0x80808080	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b2c	            0x74e9	                            je 0x4002b17	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b2e	            0x89c1	                            mov ecx, eax	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b30	          0x4889ef	                            mov rdi, rbp	      9086	elf.c	FUNCTION_114	CALL_3
0x4002b33	          0xc1e910	                           shr ecx, 0x10	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b36	      0xa980800000	                        test eax, 0x8080	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b3b	           0xf44c1	                          cmove eax, ecx	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b3e	        0x488d4a02	                      lea rcx, [rdx + 2]	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b42	            0x89c3	                            mov ebx, eax	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b44	        0x480f44d1	                          cmove rdx, rcx	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b48	              0xc3	                              add bl, al	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b4a	        0x4883da03	                              sbb rdx, 3	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b4e	          0x4c29fa	                            sub rdx, r15	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b51	        0x488d5a01	                      lea rbx, [rdx + 1]	      9085	elf.c	FUNCTION_114	CALL_2
0x4002b55	          0x4889de	                            mov rsi, rbx	      9086	elf.c	FUNCTION_114	CALL_3
0x4002b58	      0xe800000000	                          call 0x4002b5d	      9086	elf.c	FUNCTION_114	CALL_3
0x4002b5d	          0x4885c0	                           test rax, rax	      9087	elf.c	FUNCTION_114	IF_1
0x4002b60	     0xf84e2000000	                            je 0x4002c48	      9087	elf.c	FUNCTION_114	IF_1
0x4002b66	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_221	CALL_3
0x4002b69	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_221	CALL_3
0x4002b6c	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4002b6f	      0xe800000000	                          call 0x4002b74	        53	string3.h	FUNCTION_221	CALL_3
0x4002b74	      0xba00010000	                          mov edx, 0x100	      9091	elf.c	FUNCTION_114	CALL_5
0x4002b79	          0x4889c6	                            mov rsi, rax	      9091	elf.c	FUNCTION_114	CALL_5
0x4002b7c	          0x4889ef	                            mov rdi, rbp	      9091	elf.c	FUNCTION_114	CALL_5
0x4002b7f	      0xe800000000	                          call 0x4002b84	      9091	elf.c	FUNCTION_114	CALL_5
0x4002b84	          0x4885c0	                           test rax, rax	      9093	elf.c	FUNCTION_114	IF_2
0x4002b87	          0x4989c7	                            mov r15, rax	      9091	elf.c	FUNCTION_114	CALL_5
0x4002b8a	     0xf84b8000000	                            je 0x4002c48	      9093	elf.c	FUNCTION_114	IF_2
0x4002b90	          0x4d01ec	                            add r12, r13	      9096	elf.c	FUNCTION_114
0x4002b93	        0x4c897038	             mov qword [rax + 0x38], r14	      9095	elf.c	FUNCTION_114
0x4002b97	    0xc74070020000	               mov dword [rax + 0x70], 2	      9097	elf.c	FUNCTION_114
0x4002b9e	    0x4c89a0900000	             mov qword [rax + 0x90], r12	      9096	elf.c	FUNCTION_114
0x4002ba5	      0xbe00000000	                              mov esi, 0	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4002baa	          0x4889ef	                            mov rdi, rbp	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4002bad	      0xe800000000	                          call 0x4002bb2	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4002bb2	          0x4885c0	                           test rax, rax	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4002bb5	      0xbb01000000	                              mov ebx, 1	      9052	elf.c	FUNCTION_113	IF_1
0x4002bba	     0xf85befeffff	                           jne 0x4002a7e	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4002bc0	        0x418b5720	            mov edx, dword [r15 + 0x20] 	      9054	elf.c	FUNCTION_113	CALL_2
0x4002bc4	      0xbe00000000	                              mov esi, 0	      9054	elf.c	FUNCTION_113	CALL_2
0x4002bc9	          0x4889ef	                            mov rdi, rbp	      9054	elf.c	FUNCTION_113	CALL_2
0x4002bcc	      0xe800000000	                          call 0x4002bd1	      9054	elf.c	FUNCTION_113	CALL_2
0x4002bd1	          0x4885c0	                           test rax, rax	      9055	elf.c	FUNCTION_113	IF_2
0x4002bd4	            0x7472	                            je 0x4002c48	      9055	elf.c	FUNCTION_113	IF_2
0x4002bd6	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      9058	elf.c	FUNCTION_113
0x4002bda	        0x48895038	             mov qword [rax + 0x38], rdx	      9058	elf.c	FUNCTION_113
0x4002bde	    0x498b97900000	            mov rdx, qword [r15 + 0x90] 	      9059	elf.c	FUNCTION_113
0x4002be5	    0x488990900000	             mov qword [rax + 0x90], rdx	      9059	elf.c	FUNCTION_113
0x4002bec	        0x418b5770	            mov edx, dword [r15 + 0x70] 	      9060	elf.c	FUNCTION_113
0x4002bf0	          0x895070	             mov dword [rax + 0x70], edx	      9060	elf.c	FUNCTION_113
0x4002bf3	      0xe986feffff	                           jmp 0x4002a7e	      9060	elf.c	FUNCTION_113
0x4002bf8	     0xf1f84000000	                   nop dword [rax + rax]	      9060	elf.c	FUNCTION_113
0x4002c00	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4002c07	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x4002c0b	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4002c12	        0x448b4a20	            mov r9d, dword [rdx + 0x20] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4002c16	          0x448b00	                    mov r8d, dword [rax]	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4002c19	          0x4585c0	                           test r8d, r8d	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4002c1c	            0x7506	                           jne 0x4002c24	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x4002c1e	         0xfbf520c	            movsx edx, word [rdx + 0xc] 	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x4002c22	            0x8910	                    mov dword [rax], edx	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x4002c24	          0x8b7804	                mov edi, dword [rax + 4]	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4002c27	            0x85ff	                           test edi, edi	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4002c29	            0x7504	                           jne 0x4002c2f	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x4002c2b	        0x44894804	                mov dword [rax + 4], r9d	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x4002c2f	        0x44894808	                mov dword [rax + 8], r9d	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x4002c33	    0x41bd70000000	                          mov r13d, 0x70	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x4002c39	    0x41bed8000000	                          mov r14d, 0xd8	      9120	elf.c	FUNCTION_115	IF_1
0x4002c3f	      0xe9a1feffff	                           jmp 0x4002ae5	      9120	elf.c	FUNCTION_115	IF_1
0x4002c44	         0xf1f4000	                         nop dword [rax]	      9120	elf.c	FUNCTION_115	IF_1
0x4002c48	            0x31db	                            xor ebx, ebx	      9088	elf.c	FUNCTION_114	IF_1
0x4002c4a	      0xe92ffeffff	                           jmp 0x4002a7e	      9088	elf.c	FUNCTION_114	IF_1
0x4002c4f	              0x90	                                     nop	      9088	elf.c	FUNCTION_114	IF_1
0x4002c50	        0x44894804	                mov dword [rax + 4], r9d	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x4002c54	      0xe97cfeffff	                           jmp 0x4002ad5	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x4002c59	      0xe800000000	                          call 0x4002c5e	      9183	elf.c	FUNCTION_115
_bfd_elf_find_nearest_line	functions,0:CALL,7:FOR,0:WHILE,0:SWITCH,0:IF,6:DO,0:ELSE,0	118
0x400ff90	            0x4157	                                push r15	      8746	elf.c	FUNCTION_103
0x400ff92	            0x4156	                                push r14	      8746	elf.c	FUNCTION_103
0x400ff94	          0x4989ff	                            mov r15, rdi	      8746	elf.c	FUNCTION_103
0x400ff97	            0x4155	                                push r13	      8746	elf.c	FUNCTION_103
0x400ff99	            0x4154	                                push r12	      8746	elf.c	FUNCTION_103
0x400ff9b	          0x4989cd	                            mov r13, rcx	      8746	elf.c	FUNCTION_103
0x400ff9e	              0x55	                                push rbp	      8746	elf.c	FUNCTION_103
0x400ff9f	              0x53	                                push rbx	      8746	elf.c	FUNCTION_103
0x400ffa0	          0x4d89cc	                             mov r12, r9	      8746	elf.c	FUNCTION_103
0x400ffa3	          0x4c89c3	                             mov rbx, r8	      8746	elf.c	FUNCTION_103
0x400ffa6	          0x4889f5	                            mov rbp, rsi	      8746	elf.c	FUNCTION_103
0x400ffa9	        0x4883ec28	                           sub rsp, 0x28	      8746	elf.c	FUNCTION_103
0x400ffad	    0x64488b042528	                mov rax, qword fs:[0x28]	      8746	elf.c	FUNCTION_103
0x400ffb6	      0x4889442418	             mov qword [rsp + 0x18], rax	      8746	elf.c	FUNCTION_103
0x400ffbb	            0x31c0	                            xor eax, eax	      8746	elf.c	FUNCTION_103
0x400ffbd	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffc4	      0x4c8b742460	            mov r14, qword [rsp + 0x60] 	      8746	elf.c	FUNCTION_103
0x400ffc9	        0x48891424	                    mov qword [rsp], rdx	      8746	elf.c	FUNCTION_103
0x400ffcd	    0x480530030000	                          add rax, 0x330	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffd3	              0x50	                                push rax	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffd4	            0x6a00	                                  push 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffd6	      0x6800000000	                                  push 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffdb	    0xffb424800000	                 push qword [rsp + 0x80]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffe2	            0x4156	                                push r14	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffe4	            0x4151	                                 push r9	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffe6	          0x4d89c1	                              mov r9, r8	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffe9	          0x4989c8	                             mov r8, rcx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffec	          0x4889d1	                            mov rcx, rdx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400ffef	            0x31d2	                            xor edx, edx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400fff1	      0xe800000000	                          call 0x400fff6	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400fff6	        0x4883c430	                           add rsp, 0x30	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400fffa	            0x85c0	                           test eax, eax	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400fffc	            0x743a	                            je 0x4010038	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400fffe	      0x49833c2400	                      cmp qword [r12], 0	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x4010003	     0xf84e7000000	                            je 0x40100f0	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x4010009	    0x41bb01000000	                             mov r11d, 1	      8781	elf.c	FUNCTION_103
0x401000f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8782	elf.c	FUNCTION_103
0x4010014	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8782	elf.c	FUNCTION_103
0x401001d	          0x4489d8	                           mov eax, r11d	      8782	elf.c	FUNCTION_103
0x4010020	     0xf8515010000	                           jne 0x401013b	      8782	elf.c	FUNCTION_103
0x4010026	        0x4883c428	                           add rsp, 0x28	      8782	elf.c	FUNCTION_103
0x401002a	              0x5b	                                 pop rbx	      8782	elf.c	FUNCTION_103
0x401002b	              0x5d	                                 pop rbp	      8782	elf.c	FUNCTION_103
0x401002c	            0x415c	                                 pop r12	      8782	elf.c	FUNCTION_103
0x401002e	            0x415d	                                 pop r13	      8782	elf.c	FUNCTION_103
0x4010030	            0x415e	                                 pop r14	      8782	elf.c	FUNCTION_103
0x4010032	            0x415f	                                 pop r15	      8782	elf.c	FUNCTION_103
0x4010034	              0xc3	                                     ret	      8782	elf.c	FUNCTION_103
0x4010035	           0xf1f00	                         nop dword [rax]	      8782	elf.c	FUNCTION_103
0x4010038	        0x4883ec08	                              sub rsp, 8	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401003c	          0x4c89e9	                            mov rcx, r13	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401003f	          0x4889ee	                            mov rsi, rbp	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4010042	            0x4156	                                push r14	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4010044	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4010049	          0x4d89e1	                             mov r9, r12	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401004c	          0x4989d8	                             mov r8, rbx	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401004f	          0x4c89ff	                            mov rdi, r15	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4010052	      0xe800000000	                          call 0x4010057	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4010057	            0x85c0	                           test eax, eax	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4010059	              0x59	                                 pop rcx	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401005a	              0x5e	                                 pop rsi	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401005b	            0x75a1	                           jne 0x400fffe	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x401005d	        0x8944240c	              mov dword [rsp + 0xc], eax	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x4010061	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010068	        0x4883ec08	                              sub rsp, 8	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401006c	          0x4989d9	                             mov r9, rbx	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401006f	          0x4c89e9	                            mov rcx, r13	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010072	          0x4889ee	                            mov rsi, rbp	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010075	          0x4c89ff	                            mov rdi, r15	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010078	    0x480520030000	                          add rax, 0x320	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401007e	              0x50	                                push rax	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401007f	            0x4156	                                push r14	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010081	            0x4154	                                push r12	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010083	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010088	      0x4c8d442434	                    lea r8, [rsp + 0x34]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401008d	      0xe800000000	                          call 0x4010092	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010092	        0x4883c420	                           add rsp, 0x20	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010096	            0x85c0	                           test eax, eax	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x4010098	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x401009d	     0xf846cffffff	                            je 0x401000f	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x40100a3	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      8770	elf.c	FUNCTION_103	IF_4
0x40100a7	            0x85d2	                           test edx, edx	      8770	elf.c	FUNCTION_103	IF_4
0x40100a9	            0x7575	                           jne 0x4010120	      8770	elf.c	FUNCTION_103	IF_4
0x40100ab	          0x4885ed	                           test rbp, rbp	      8773	elf.c	FUNCTION_103	IF_5
0x40100ae	     0xf845bffffff	                            je 0x401000f	      8773	elf.c	FUNCTION_103	IF_5
0x40100b4	        0x488b1424	                    mov rdx, qword [rsp]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100b8	          0x4d89e1	                             mov r9, r12	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100bb	          0x4989d8	                             mov r8, rbx	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100be	          0x4c89e9	                            mov rcx, r13	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100c1	          0x4889ee	                            mov rsi, rbp	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100c4	          0x4c89ff	                            mov rdi, r15	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100c7	      0x44895c240c	             mov dword [rsp + 0xc], r11d	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100cc	      0xe800000000	                          call 0x40100d1	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100d1	          0x4885c0	                           test rax, rax	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100d4	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100d9	     0xf8430ffffff	                            je 0x401000f	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x40100df	    0x41c706000000	                      mov dword [r14], 0	      8780	elf.c	FUNCTION_103
0x40100e6	      0xe91effffff	                           jmp 0x4010009	      8780	elf.c	FUNCTION_103
0x40100eb	       0xf1f440000	                   nop dword [rax + rax]	      8780	elf.c	FUNCTION_103
0x40100f0	        0x48833b00	                      cmp qword [rbx], 0	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40100f4	        0x488b1424	                    mov rdx, qword [rsp]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40100f8	    0x41b800000000	                              mov r8d, 0	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x40100fe	          0x4d89e1	                             mov r9, r12	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x4010101	          0x4c89e9	                            mov rcx, r13	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x4010104	          0x4889ee	                            mov rsi, rbp	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x4010107	          0x4c89ff	                            mov rdi, r15	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x401010a	        0x4c0f44c3	                           cmove r8, rbx	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x401010e	      0xe800000000	                          call 0x4010113	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x4010113	    0x41bb01000000	                             mov r11d, 1	      8762	elf.c	FUNCTION_103	IF_1
0x4010119	      0xe9f1feffff	                           jmp 0x401000f	      8762	elf.c	FUNCTION_103	IF_1
0x401011e	            0x6690	                                     nop	      8762	elf.c	FUNCTION_103	IF_1
0x4010120	      0x49833c2400	                      cmp qword [r12], 0	      8770	elf.c	FUNCTION_103	IF_4
0x4010125	     0xf85defeffff	                           jne 0x4010009	      8770	elf.c	FUNCTION_103	IF_4
0x401012b	          0x418b06	                    mov eax, dword [r14]	      8770	elf.c	FUNCTION_103	IF_4
0x401012e	            0x85c0	                           test eax, eax	      8770	elf.c	FUNCTION_103	IF_4
0x4010130	     0xf8475ffffff	                            je 0x40100ab	      8770	elf.c	FUNCTION_103	IF_4
0x4010136	      0xe9cefeffff	                           jmp 0x4010009	      8770	elf.c	FUNCTION_103	IF_4
0x401013b	      0xe800000000	             call sym._bfd_elf_find_line	      8782	elf.c	FUNCTION_103
bfd_elf_bfd_from_remote_memory	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	4
0x4014260	        0x488b4708	                mov rax, qword [rdi + 8]	     11377	elf.c	FUNCTION_199	CALL_1
0x4014264	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11377	elf.c	FUNCTION_199	CALL_1
0x401426b	    0x488b80900200	           mov rax, qword [rax + 0x290] 	     11377	elf.c	FUNCTION_199	CALL_1
0x4014272	            0xffe0	                                 jmp rax	     11377	elf.c	FUNCTION_199	CALL_1
elfcore_write_linux_prpsinfo32	functions,0:CALL,5:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,1	116
0x40120c0	            0x4155	                                push r13	     10595	elf.c	FUNCTION_163
0x40120c2	            0x4154	                                push r12	     10595	elf.c	FUNCTION_163
0x40120c4	          0x4989d5	                            mov r13, rdx	     10595	elf.c	FUNCTION_163
0x40120c7	              0x55	                                push rbp	     10595	elf.c	FUNCTION_163
0x40120c8	              0x53	                                push rbx	     10595	elf.c	FUNCTION_163
0x40120c9	          0x4889fd	                            mov rbp, rdi	     10595	elf.c	FUNCTION_163
0x40120cc	          0x4989f4	                            mov r12, rsi	     10595	elf.c	FUNCTION_163
0x40120cf	          0x4889cb	                            mov rbx, rcx	     10595	elf.c	FUNCTION_163
0x40120d2	    0x4881ec980000	                           sub rsp, 0x98	     10595	elf.c	FUNCTION_163
0x40120d9	    0x64488b042528	                mov rax, qword fs:[0x28]	     10595	elf.c	FUNCTION_163
0x40120e2	    0x488984248800	             mov qword [rsp + 0x88], rax	     10595	elf.c	FUNCTION_163
0x40120ea	            0x31c0	                            xor eax, eax	     10595	elf.c	FUNCTION_163
0x40120ec	        0x488b4708	                mov rax, qword [rdi + 8]	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x40120f0	      0x488d742404	                      lea rsi, [rsp + 4]	       117	elf-linux-core.h	FUNCTION_234	CALL_5
0x40120f5	    0x488b90680300	           mov rdx, qword [rax + 0x368] 	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x40120fc	    0xf6828b030000	          test byte [rdx + 0x38b], 0x10 	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x4012103	           0xfb611	                   movzx edx, byte [rcx]	       113	elf-linux-core.h	FUNCTION_234	CALL_1
0x4012106	          0x881424	                      mov byte [rsp], dl	       113	elf-linux-core.h	FUNCTION_234	CALL_1
0x4012109	         0xfb65101	               movzx edx, byte [rcx + 1]	       114	elf-linux-core.h	FUNCTION_234	CALL_2
0x401210d	        0x88542401	                  mov byte [rsp + 1], dl	       114	elf-linux-core.h	FUNCTION_234	CALL_2
0x4012111	         0xfb65102	               movzx edx, byte [rcx + 2]	       115	elf-linux-core.h	FUNCTION_234	CALL_3
0x4012115	        0x88542402	                  mov byte [rsp + 2], dl	       115	elf-linux-core.h	FUNCTION_234	CALL_3
0x4012119	         0xfb65103	               movzx edx, byte [rcx + 3]	       116	elf-linux-core.h	FUNCTION_234	CALL_4
0x401211d	        0x88542403	                  mov byte [rsp + 3], dl	       116	elf-linux-core.h	FUNCTION_234	CALL_4
0x4012121	        0x488b7908	                mov rdi, qword [rcx + 8]	       117	elf-linux-core.h	FUNCTION_234	CALL_5
0x4012125	     0xf85d5000000	                           jne 0x4012200	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x401212b	          0xff5048	                 call qword [rax + 0x48]	        65	elf-linux-core.h	FUNCTION_233	CALL_5
0x401212e	        0x488b4508	                mov rax, qword [rbp + 8]	        66	elf-linux-core.h	FUNCTION_233	CALL_6
0x4012132	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	        66	elf-linux-core.h	FUNCTION_233	CALL_6
0x4012135	      0x488d742408	                      lea rsi, [rsp + 8]	        66	elf-linux-core.h	FUNCTION_233	CALL_6
0x401213a	          0xff5048	                 call qword [rax + 0x48]	        66	elf-linux-core.h	FUNCTION_233	CALL_6
0x401213d	        0x488b4508	                mov rax, qword [rbp + 8]	        67	elf-linux-core.h	FUNCTION_233	CALL_7
0x4012141	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	        67	elf-linux-core.h	FUNCTION_233	CALL_7
0x4012144	      0x488d74240c	                    lea rsi, [rsp + 0xc]	        67	elf-linux-core.h	FUNCTION_233	CALL_7
0x4012149	          0xff5048	                 call qword [rax + 0x48]	        67	elf-linux-core.h	FUNCTION_233	CALL_7
0x401214c	        0x488b4508	                mov rax, qword [rbp + 8]	        68	elf-linux-core.h	FUNCTION_233	CALL_8
0x4012150	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	        68	elf-linux-core.h	FUNCTION_233	CALL_8
0x4012154	      0x488d742410	                   lea rsi, [rsp + 0x10]	        68	elf-linux-core.h	FUNCTION_233	CALL_8
0x4012159	          0xff5048	                 call qword [rax + 0x48]	        68	elf-linux-core.h	FUNCTION_233	CALL_8
0x401215c	        0x488b4508	                mov rax, qword [rbp + 8]	        69	elf-linux-core.h	FUNCTION_233	CALL_9
0x4012160	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	        69	elf-linux-core.h	FUNCTION_233	CALL_9
0x4012164	      0x488d742414	                   lea rsi, [rsp + 0x14]	        69	elf-linux-core.h	FUNCTION_233	CALL_9
0x4012169	          0xff5048	                 call qword [rax + 0x48]	        69	elf-linux-core.h	FUNCTION_233	CALL_9
0x401216c	        0x488b4508	                mov rax, qword [rbp + 8]	        70	elf-linux-core.h	FUNCTION_233	CALL_10
0x4012170	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	        70	elf-linux-core.h	FUNCTION_233	CALL_10
0x4012174	      0x488d742418	                   lea rsi, [rsp + 0x18]	        70	elf-linux-core.h	FUNCTION_233	CALL_10
0x4012179	          0xff5048	                 call qword [rax + 0x48]	        70	elf-linux-core.h	FUNCTION_233	CALL_10
0x401217c	        0x488b4508	                mov rax, qword [rbp + 8]	        71	elf-linux-core.h	FUNCTION_233	CALL_11
0x4012180	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	        71	elf-linux-core.h	FUNCTION_233	CALL_11
0x4012184	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	        71	elf-linux-core.h	FUNCTION_233	CALL_11
0x4012189	          0xff5048	                 call qword [rax + 0x48]	        71	elf-linux-core.h	FUNCTION_233	CALL_11
0x401218c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       126	string3.h	FUNCTION_229	CALL_3
0x4012191	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x4012195	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x401219a	      0xe800000000	                          call 0x401219f	       126	string3.h	FUNCTION_229	CALL_3
0x401219f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       126	string3.h	FUNCTION_229	CALL_3
0x40121a4	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_229	CALL_3
0x40121a8	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x40121ad	      0xe800000000	                          call 0x40121b2	       126	string3.h	FUNCTION_229	CALL_3
0x40121b2	        0x4883ec08	                              sub rsp, 8	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121b6	      0x6880000000	                               push 0x80	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121bb	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121c0	      0xb900000000	                              mov ecx, 0	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121c5	          0x4c89ea	                            mov rdx, r13	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121c8	    0x41b803000000	                              mov r8d, 3	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121ce	          0x4c89e6	                            mov rsi, r12	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121d1	          0x4889ef	                            mov rdi, rbp	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121d4	      0xe800000000	                          call 0x40121d9	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121d9	              0x5a	                                 pop rdx	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121da	              0x59	                                 pop rcx	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x40121db	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	     10612	elf.c	FUNCTION_163
0x40121e3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10612	elf.c	FUNCTION_163
0x40121ec	     0xf85a0000000	                           jne 0x4012292	     10612	elf.c	FUNCTION_163
0x40121f2	    0x4881c4980000	                           add rsp, 0x98	     10612	elf.c	FUNCTION_163
0x40121f9	              0x5b	                                 pop rbx	     10612	elf.c	FUNCTION_163
0x40121fa	              0x5d	                                 pop rbp	     10612	elf.c	FUNCTION_163
0x40121fb	            0x415c	                                 pop r12	     10612	elf.c	FUNCTION_163
0x40121fd	            0x415d	                                 pop r13	     10612	elf.c	FUNCTION_163
0x40121ff	              0xc3	                                     ret	     10612	elf.c	FUNCTION_163
0x4012200	          0xff5048	                 call qword [rax + 0x48]	       117	elf-linux-core.h	FUNCTION_234	CALL_5
0x4012203	        0x488b4508	                mov rax, qword [rbp + 8]	       118	elf-linux-core.h	FUNCTION_234	CALL_6
0x4012207	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       118	elf-linux-core.h	FUNCTION_234	CALL_6
0x401220a	      0x488d742408	                      lea rsi, [rsp + 8]	       118	elf-linux-core.h	FUNCTION_234	CALL_6
0x401220f	          0xff5060	                 call qword [rax + 0x60]	       118	elf-linux-core.h	FUNCTION_234	CALL_6
0x4012212	        0x488b4508	                mov rax, qword [rbp + 8]	       119	elf-linux-core.h	FUNCTION_234	CALL_7
0x4012216	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       119	elf-linux-core.h	FUNCTION_234	CALL_7
0x4012219	      0x488d74240a	                    lea rsi, [rsp + 0xa]	       119	elf-linux-core.h	FUNCTION_234	CALL_7
0x401221e	          0xff5060	                 call qword [rax + 0x60]	       119	elf-linux-core.h	FUNCTION_234	CALL_7
0x4012221	        0x488b4508	                mov rax, qword [rbp + 8]	       120	elf-linux-core.h	FUNCTION_234	CALL_8
0x4012225	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       120	elf-linux-core.h	FUNCTION_234	CALL_8
0x4012229	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       120	elf-linux-core.h	FUNCTION_234	CALL_8
0x401222e	          0xff5048	                 call qword [rax + 0x48]	       120	elf-linux-core.h	FUNCTION_234	CALL_8
0x4012231	        0x488b4508	                mov rax, qword [rbp + 8]	       121	elf-linux-core.h	FUNCTION_234	CALL_9
0x4012235	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       121	elf-linux-core.h	FUNCTION_234	CALL_9
0x4012239	      0x488d742410	                   lea rsi, [rsp + 0x10]	       121	elf-linux-core.h	FUNCTION_234	CALL_9
0x401223e	          0xff5048	                 call qword [rax + 0x48]	       121	elf-linux-core.h	FUNCTION_234	CALL_9
0x4012241	        0x488b4508	                mov rax, qword [rbp + 8]	       122	elf-linux-core.h	FUNCTION_234	CALL_10
0x4012245	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       122	elf-linux-core.h	FUNCTION_234	CALL_10
0x4012249	      0x488d742414	                   lea rsi, [rsp + 0x14]	       122	elf-linux-core.h	FUNCTION_234	CALL_10
0x401224e	          0xff5048	                 call qword [rax + 0x48]	       122	elf-linux-core.h	FUNCTION_234	CALL_10
0x4012251	        0x488b4508	                mov rax, qword [rbp + 8]	       123	elf-linux-core.h	FUNCTION_234	CALL_11
0x4012255	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       123	elf-linux-core.h	FUNCTION_234	CALL_11
0x4012259	      0x488d742418	                   lea rsi, [rsp + 0x18]	       123	elf-linux-core.h	FUNCTION_234	CALL_11
0x401225e	          0xff5048	                 call qword [rax + 0x48]	       123	elf-linux-core.h	FUNCTION_234	CALL_11
0x4012261	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	       126	string3.h	FUNCTION_229	CALL_3
0x4012266	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x401226a	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x401226f	      0xe800000000	                          call 0x4012274	       126	string3.h	FUNCTION_229	CALL_3
0x4012274	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	       126	string3.h	FUNCTION_229	CALL_3
0x4012279	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_229	CALL_3
0x401227d	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x4012282	      0xe800000000	                          call 0x4012287	       126	string3.h	FUNCTION_229	CALL_3
0x4012287	        0x4883ec08	                              sub rsp, 8	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x401228b	            0x6a7c	                               push 0x7c	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x401228d	      0xe929ffffff	                           jmp 0x40121bb	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x4012292	      0xe800000000	                          call 0x4012297	     10612	elf.c	FUNCTION_163
_bfd_elf_find_line	functions,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	15
0x4010140	        0x4883ec08	                              sub rsp, 8	      8789	elf.c	FUNCTION_104
0x4010144	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8790	elf.c	FUNCTION_104	CALL_1
0x401014b	          0x4989c9	                             mov r9, rcx	      8789	elf.c	FUNCTION_104
0x401014e	            0x31c9	                            xor ecx, ecx	      8790	elf.c	FUNCTION_104	CALL_1
0x4010150	    0x480530030000	                          add rax, 0x330	      8790	elf.c	FUNCTION_104	CALL_1
0x4010156	              0x50	                                push rax	      8790	elf.c	FUNCTION_104	CALL_1
0x4010157	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x4010159	      0x6800000000	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x401015e	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x4010160	            0x4150	                                 push r8	      8790	elf.c	FUNCTION_104	CALL_1
0x4010162	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x4010164	          0x4531c0	                            xor r8d, r8d	      8790	elf.c	FUNCTION_104	CALL_1
0x4010167	      0xe800000000	                          call 0x401016c	      8790	elf.c	FUNCTION_104	CALL_1
0x401016c	        0x4883c438	                           add rsp, 0x38	      8794	elf.c	FUNCTION_104
0x4010170	              0xc3	                                     ret	      8794	elf.c	FUNCTION_104
_bfd_elf_is_function_type	functions,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	5
0x4014660	          0x83e7f7	                     and edi, 0xfffffff7	     11533	elf.c	FUNCTION_202
0x4014663	            0x31c0	                            xor eax, eax	     11533	elf.c	FUNCTION_202
0x4014665	          0x83ff02	                              cmp edi, 2	     11533	elf.c	FUNCTION_202
0x4014668	           0xf94c0	                                 sete al	     11533	elf.c	FUNCTION_202
0x401466b	              0xc3	                                     ret	     11535	elf.c	FUNCTION_202
_bfd_elf_rel_vtable_reloc_fn	functions,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	2
0x4010560	      0xb802000000	                              mov eax, 2	      9013	elf.c	FUNCTION_111
0x4010565	              0xc3	                                     ret	      9013	elf.c	FUNCTION_111
bfd_elf_hash	functions,0:CALL,0:FOR,0:WHILE,1:SWITCH,0:IF,1:DO,0:ELSE,0	20
0x4003040	            0x31c0	                            xor eax, eax	       201	elf.c	FUNCTION_11
0x4003042	    0x660f1f440000	                    nop word [rax + rax]	       201	elf.c	FUNCTION_11
0x4003048	        0x4883c701	                              add rdi, 1	       205	elf.c	FUNCTION_11	WHILE_1
0x400304c	         0xfb657ff	               movzx edx, byte [rdi - 1]	       205	elf.c	FUNCTION_11	WHILE_1
0x4003050	            0x84d2	                             test dl, dl	       205	elf.c	FUNCTION_11	WHILE_1
0x4003052	            0x7428	                            je 0x400307c	       205	elf.c	FUNCTION_11	WHILE_1
0x4003054	        0x48c1e004	                              shl rax, 4	       207	elf.c	FUNCTION_11	WHILE_1
0x4003058	          0x4801d0	                            add rax, rdx	       207	elf.c	FUNCTION_11	WHILE_1
0x400305b	          0x4889c2	                            mov rdx, rax	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x400305e	    0x81e2000000f0	                     and edx, 0xf0000000	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4003064	            0x74e2	                            je 0x4003048	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4003066	          0x4831d0	                            xor rax, rdx	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4003069	        0x4883c701	                              add rdi, 1	       205	elf.c	FUNCTION_11	WHILE_1
0x400306d	        0x48c1ea18	                           shr rdx, 0x18	       213	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4003071	          0x4831d0	                            xor rax, rdx	       213	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4003074	         0xfb657ff	               movzx edx, byte [rdi - 1]	       205	elf.c	FUNCTION_11	WHILE_1
0x4003078	            0x84d2	                             test dl, dl	       205	elf.c	FUNCTION_11	WHILE_1
0x400307a	            0x75d8	                           jne 0x4003054	       205	elf.c	FUNCTION_11	WHILE_1
0x400307c	            0x89c0	                            mov eax, eax	       216	elf.c	FUNCTION_11
0x400307e	              0xc3	                                     ret	       217	elf.c	FUNCTION_11
elfcore_grok_freebsd_note	functions,0:CALL,13:FOR,0:WHILE,0:SWITCH,1:IF,5:DO,0:ELSE,2	335
0x4010d70	            0x4157	                                push r15	     10069	elf.c	FUNCTION_151
0x4010d72	            0x4156	                                push r14	     10069	elf.c	FUNCTION_151
0x4010d74	            0x4155	                                push r13	     10069	elf.c	FUNCTION_151
0x4010d76	            0x4154	                                push r12	     10069	elf.c	FUNCTION_151
0x4010d78	              0x55	                                push rbp	     10069	elf.c	FUNCTION_151
0x4010d79	              0x53	                                push rbx	     10069	elf.c	FUNCTION_151
0x4010d7a	        0x4883ec28	                           sub rsp, 0x28	     10069	elf.c	FUNCTION_151
0x4010d7e	        0x488b4610	            mov rax, qword [rsi + 0x10] 	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010d82	        0x488b5708	                mov rdx, qword [rdi + 8]	     10070	elf.c	FUNCTION_151	CALL_1
0x4010d86	        0x4883f809	                              cmp rax, 9	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010d8a	     0xf84a8010000	                            je 0x4010f38	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010d90	          0x4989f4	                            mov r12, rsi	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010d93	          0x4989ff	                            mov r15, rdi	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010d96	            0x7758	                            ja 0x4010df0	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010d98	        0x4883f803	                              cmp rax, 3	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010d9c	     0xf844e010000	                            je 0x4010ef0	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010da2	     0xf87d8000000	                            ja 0x4010e80	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010da8	        0x4883f801	                              cmp rax, 1	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010dac	     0xf84d6010000	                            je 0x4010f88	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010db2	        0x4883f802	                              cmp rax, 2	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010db6	     0xf851e010000	                           jne 0x4010eda	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010dbc	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010dc0	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010dc4	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010dc9	     0xf1f80000000	                         nop dword [rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010dd0	          0x4c89ff	                            mov rdi, r15	      9192	elf.c	FUNCTION_116	CALL_1
0x4010dd3	        0x4883c428	                           add rsp, 0x28	     10134	elf.c	FUNCTION_151
0x4010dd7	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x4010dd8	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x4010dd9	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x4010ddb	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x4010ddd	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x4010ddf	            0x415f	                                 pop r15	     10134	elf.c	FUNCTION_151
0x4010de1	      0xe98af7ffff	 jmp sym._bfd_elfcore_make_pseudosection	      9192	elf.c	FUNCTION_116	CALL_1
0x4010de6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010df0	        0x4883f811	                           cmp rax, 0x11	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010df4	     0xf8476010000	                            je 0x4010f70	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010dfa	     0xf87a8000000	                            ja 0x4010ea8	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e00	        0x4883f80a	                            cmp rax, 0xa	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e04	     0xf8416010000	                            je 0x4010f20	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e0a	        0x4883f810	                           cmp rax, 0x10	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e0e	     0xf85c6000000	                           jne 0x4010eda	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e14	      0xba00010000	                          mov edx, 0x100	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x4010e19	      0xbe00000000	                              mov esi, 0	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x4010e1e	      0xe800000000	                          call 0x4010e23	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x4010e23	          0x4885c0	                           test rax, rax	     10109	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x4010e26	          0x4889c3	                            mov rbx, rax	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x4010e29	     0xf84dc000000	                            je 0x4010f0b	     10109	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x4010e2f	      0x498b442408	                mov rax, qword [r12 + 8]	     10111	elf.c	FUNCTION_151	SWITCH_1
0x4010e34	          0x4c89ff	                            mov rdi, r15	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4010e37	        0x4883e804	                              sub rax, 4	     10111	elf.c	FUNCTION_151	SWITCH_1
0x4010e3b	        0x48894338	             mov qword [rbx + 0x38], rax	     10111	elf.c	FUNCTION_151	SWITCH_1
0x4010e3f	      0x498b442428	            mov rax, qword [r12 + 0x28] 	     10112	elf.c	FUNCTION_151	SWITCH_1
0x4010e44	        0x4883c004	                              add rax, 4	     10112	elf.c	FUNCTION_151	SWITCH_1
0x4010e48	    0x488983900000	             mov qword [rbx + 0x90], rax	     10112	elf.c	FUNCTION_151	SWITCH_1
0x4010e4f	      0xe800000000	                          call 0x4010e54	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4010e54	          0x8d501f	                   lea edx, [rax + 0x1f]	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4010e57	            0x85c0	                           test eax, eax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4010e59	           0xf48c2	                          cmovs eax, edx	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4010e5c	          0xc1f805	                              sar eax, 5	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4010e5f	          0x83c001	                              add eax, 1	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4010e62	          0x894370	             mov dword [rbx + 0x70], eax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x4010e65	      0xb801000000	                              mov eax, 1	     10115	elf.c	FUNCTION_151	SWITCH_1
0x4010e6a	        0x4883c428	                           add rsp, 0x28	     10134	elf.c	FUNCTION_151
0x4010e6e	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x4010e6f	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x4010e70	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x4010e72	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x4010e74	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x4010e76	            0x415f	                                 pop r15	     10134	elf.c	FUNCTION_151
0x4010e78	              0xc3	                                     ret	     10134	elf.c	FUNCTION_151
0x4010e79	     0xf1f80000000	                         nop dword [rax]	     10134	elf.c	FUNCTION_151
0x4010e80	        0x4883f807	                              cmp rax, 7	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e84	     0xf84c6000000	                            je 0x4010f50	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e8a	        0x4883f808	                              cmp rax, 8	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e8e	            0x754a	                           jne 0x4010eda	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010e90	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010e94	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010e98	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010e9d	      0xe92effffff	                           jmp 0x4010dd0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ea2	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ea8	    0x483d02020000	                          cmp rax, 0x202	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010eae	            0x7420	                            je 0x4010ed0	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010eb0	    0x483d00040000	                          cmp rax, 0x400	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010eb6	            0x7522	                           jne 0x4010eda	     10072	elf.c	FUNCTION_151	SWITCH_1
0x4010eb8	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ebc	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ec0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ec5	      0xe906ffffff	                           jmp 0x4010dd0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010eca	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010ed0	        0x48833e08	                      cmp qword [rsi], 8	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x4010ed4	     0xf8446030000	                            je 0x4011220	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x4010eda	        0x4883c428	                           add rsp, 0x28	     10134	elf.c	FUNCTION_151
0x4010ede	      0xb801000000	                              mov eax, 1	     10132	elf.c	FUNCTION_151	SWITCH_1
0x4010ee3	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x4010ee4	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x4010ee5	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x4010ee7	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x4010ee9	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x4010eeb	            0x415f	                                 pop r15	     10134	elf.c	FUNCTION_151
0x4010eed	              0xc3	                                     ret	     10134	elf.c	FUNCTION_151
0x4010eee	            0x6690	                                     nop	     10134	elf.c	FUNCTION_151
0x4010ef0	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4010ef7	         0xfb64004	               movzx eax, byte [rax + 4]	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4010efb	            0x3c01	                               cmp al, 1	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4010efd	     0xf8435030000	                            je 0x4011238	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4010f03	            0x3c02	                               cmp al, 2	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4010f05	     0xf84b5010000	                            je 0x40110c0	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x4010f0b	            0x31c0	                            xor eax, eax	      9954	elf.c	FUNCTION_149	SWITCH_1
0x4010f0d	        0x4883c428	                           add rsp, 0x28	     10134	elf.c	FUNCTION_151
0x4010f11	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x4010f12	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x4010f13	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x4010f15	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x4010f17	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x4010f19	            0x415f	                                 pop r15	     10134	elf.c	FUNCTION_151
0x4010f1b	              0xc3	                                     ret	     10134	elf.c	FUNCTION_151
0x4010f1c	         0xf1f4000	                         nop dword [rax]	     10134	elf.c	FUNCTION_151
0x4010f20	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f24	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f28	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f2d	      0xe99efeffff	                           jmp 0x4010dd0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f32	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f38	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f3c	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f40	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f45	      0xe989feffff	                           jmp 0x4010dd3	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f4a	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f50	        0x48833e08	                      cmp qword [rsi], 8	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x4010f54	     0xf8580ffffff	                           jne 0x4010eda	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x4010f5a	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f5e	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f62	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f67	      0xe964feffff	                           jmp 0x4010dd0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f6c	         0xf1f4000	                         nop dword [rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f70	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f74	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f78	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f7d	      0xe94efeffff	                           jmp 0x4010dd0	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f82	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4010f88	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x4010f8f	    0x488b80180200	           mov rax, qword [rax + 0x218] 	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x4010f96	          0x4885c0	                           test rax, rax	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x4010f99	            0x740a	                            je 0x4010fa5	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x4010f9b	            0xffd0	                                call rax	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x4010f9d	            0x85c0	                           test eax, eax	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x4010f9f	     0xf8535ffffff	                           jne 0x4010eda	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x4010fa5	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fac	         0xfb64004	               movzx eax, byte [rax + 4]	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fb0	            0x3c01	                               cmp al, 1	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fb2	     0xf8498020000	                            je 0x4011250	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fb8	            0x3c02	                               cmp al, 2	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fba	     0xf854bffffff	                           jne 0x4010f0b	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fc0	      0xba1c000000	                           mov edx, 0x1c	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fc5	      0xbb2c000000	                           mov ebx, 0x2c	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fca	    0x41bd28000000	                          mov r13d, 0x28	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fd0	    0x41be24000000	                          mov r14d, 0x24	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fd6	      0xbd20000000	                           mov ebp, 0x20	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fdb	      0xbe18000000	                           mov esi, 0x18	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4010fe0	      0xb830000000	                           mov eax, 0x30	     10013	elf.c	FUNCTION_150	SWITCH_1
0x4010fe5	      0xb910000000	                           mov ecx, 0x10	     10012	elf.c	FUNCTION_150	SWITCH_1
0x4010fea	      0x4939442408	                cmp qword [r12 + 8], rax	     10020	elf.c	FUNCTION_150	IF_1
0x4010fef	     0xf8216ffffff	                            jb 0x4010f0b	     10020	elf.c	FUNCTION_150	IF_1
0x4010ff5	        0x498b4708	                mov rax, qword [r15 + 8]	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x4010ff9	      0x48894c2408	                mov qword [rsp + 8], rcx	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x4010ffe	      0x4889542418	             mov qword [rsp + 0x18], rdx	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x4011003	      0x4889742410	             mov qword [rsp + 0x10], rsi	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x4011008	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x401100d	    0xff9080000000	                 call qword [rax + 0x80]	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x4011013	        0x4883f801	                              cmp rax, 1	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x4011017	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x401101c	     0xf85e9feffff	                           jne 0x4010f0b	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x4011022	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	     10029	elf.c	FUNCTION_150	IF_3	CALL_3
0x4011029	        0x80780401	                   cmp byte [rax + 4], 1	     10029	elf.c	FUNCTION_150	IF_3	CALL_3
0x401102d	     0xf849b020000	                            je 0x40112ce	     10029	elf.c	FUNCTION_150	IF_3	CALL_3
0x4011033	      0x49034c2420	             add rcx, qword [r12 + 0x20]	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x4011038	        0x498b4708	                mov rax, qword [r15 + 8]	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x401103c	          0x4889cf	                            mov rdi, rcx	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x401103f	          0xff5068	                 call qword [rax + 0x68]	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x4011042	      0x4889442408	                mov qword [rsp + 8], rax	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x4011047	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x401104e	    0x488b90900c00	           mov rdx, qword [rax + 0xc90] 	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x4011055	            0x8b02	                    mov eax, dword [rdx]	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x4011057	            0x85c0	                           test eax, eax	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x4011059	     0xf843e020000	                            je 0x401129d	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x401105f	        0x498b4708	                mov rax, qword [r15 + 8]	     10051	elf.c	FUNCTION_150	CALL_10
0x4011063	          0x4c89ef	                            mov rdi, r13	     10051	elf.c	FUNCTION_150	CALL_10
0x4011066	      0x49037c2420	             add rdi, qword [r12 + 0x20]	     10051	elf.c	FUNCTION_150	CALL_10
0x401106b	      0x4889542410	             mov qword [rsp + 0x10], rdx	     10051	elf.c	FUNCTION_150	CALL_10
0x4011070	        0x4883c510	                           add rbp, 0x10	     10056	elf.c	FUNCTION_150	IF_5
0x4011074	    0xff9080000000	                 call qword [rax + 0x80]	     10051	elf.c	FUNCTION_150	CALL_10
0x401107a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	     10051	elf.c	FUNCTION_150	CALL_10
0x401107f	          0x894208	                mov dword [rdx + 8], eax	     10051	elf.c	FUNCTION_150	CALL_10
0x4011082	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	     10055	elf.c	FUNCTION_150	IF_5	CALL_11
0x4011089	        0x80780402	                   cmp byte [rax + 4], 2	     10056	elf.c	FUNCTION_150	IF_5
0x401108d	      0x498b442408	                mov rax, qword [r12 + 8]	     10059	elf.c	FUNCTION_150	IF_6
0x4011092	        0x480f44dd	                          cmove rbx, rbp	     10056	elf.c	FUNCTION_150	IF_5
0x4011096	          0x4829d8	                            sub rax, rbx	     10059	elf.c	FUNCTION_150	IF_6
0x4011099	      0x483b442408	                cmp rax, qword [rsp + 8]	     10059	elf.c	FUNCTION_150	IF_6
0x401109e	     0xf8267feffff	                            jb 0x4010f0b	     10059	elf.c	FUNCTION_150	IF_6
0x40110a4	      0x49035c2428	             add rbx, qword [r12 + 0x28]	     10063	elf.c	FUNCTION_150	CALL_12
0x40110a9	      0x488b542408	                mov rdx, qword [rsp + 8]	     10063	elf.c	FUNCTION_150	CALL_12
0x40110ae	      0xbe00000000	                              mov esi, 0	     10063	elf.c	FUNCTION_150	CALL_12
0x40110b3	          0x4889d9	                            mov rcx, rbx	     10063	elf.c	FUNCTION_150	CALL_12
0x40110b6	      0xe915fdffff	                           jmp 0x4010dd0	     10063	elf.c	FUNCTION_150	CALL_12
0x40110bb	       0xf1f440000	                   nop dword [rax + rax]	     10063	elf.c	FUNCTION_150	CALL_12
0x40110c0	      0x48837e0877	               cmp qword [rsi + 8], 0x77	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x40110c5	     0xf8640feffff	                           jbe 0x4010f0b	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x40110cb	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      9958	elf.c	FUNCTION_149	IF_3	CALL_2
0x40110d0	    0xff9280000000	                 call qword [rdx + 0x80]	      9958	elf.c	FUNCTION_149	IF_3	CALL_2
0x40110d6	        0x4883f801	                              cmp rax, 1	      9958	elf.c	FUNCTION_149	IF_3	CALL_2
0x40110da	     0xf852bfeffff	                           jne 0x4010f0b	      9958	elf.c	FUNCTION_149	IF_3	CALL_2
0x40110e0	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x40110e7	          0x4531ed	                          xor r13d, r13d	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x40110ea	        0x80780401	                   cmp byte [rax + 4], 1	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x40110ee	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9973	elf.c	FUNCTION_149	CALL_4
0x40110f5	      0x4889442408	                mov qword [rsp + 8], rax	      9973	elf.c	FUNCTION_149	CALL_4
0x40110fa	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      9974	elf.c	FUNCTION_149	CALL_5
0x40110ff	           0xf95c3	                                setne bl	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x4011102	           0xf95c2	                                setne dl	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x4011105	        0x410f95c5	                              setne r13b	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x4011109	           0xfb6d2	                           movzx edx, dl	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x401110c	           0xfb6db	                           movzx ebx, bl	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x401110f	    0x4e8d2ced7000	                 lea r13, [r13*8 + 0x70]	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x4011117	      0x4c8d74d008	              lea r14, [rax + rdx*8 + 8]	      9974	elf.c	FUNCTION_149	CALL_5
0x401111c	    0x488d1cdd6c00	                 lea rbx, [rbx*8 + 0x6c]	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x4011124	      0xba11000000	                           mov edx, 0x11	      9362	elf.c	FUNCTION_139	CALL_1
0x4011129	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x401112e	          0x4c89f7	                            mov rdi, r14	      9362	elf.c	FUNCTION_139	CALL_1
0x4011131	           0xf95c3	                                setne bl	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x4011134	            0x31f6	                            xor esi, esi	      9362	elf.c	FUNCTION_139	CALL_1
0x4011136	           0xfb6db	                           movzx ebx, bl	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x4011139	      0xe800000000	                          call 0x401113e	      9362	elf.c	FUNCTION_139	CALL_1
0x401113e	          0x4885c0	                           test rax, rax	      9365	elf.c	FUNCTION_139	IF_1
0x4011141	    0x488d1cdd1900	                 lea rbx, [rbx*8 + 0x19]	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x4011149	     0xf843f010000	                            je 0x401128e	      9365	elf.c	FUNCTION_139	IF_1
0x401114f	          0x4c29f0	                            sub rax, r14	      9368	elf.c	FUNCTION_139	ELSE_1
0x4011152	        0x488d7001	                      lea rsi, [rax + 1]	      9368	elf.c	FUNCTION_139	ELSE_1
0x4011156	          0x4889c5	                            mov rbp, rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x4011159	          0x4c89ff	                            mov rdi, r15	      9370	elf.c	FUNCTION_139	CALL_2
0x401115c	      0xe800000000	                          call 0x4011161	      9370	elf.c	FUNCTION_139	CALL_2
0x4011161	          0x4885c0	                           test rax, rax	      9371	elf.c	FUNCTION_139	IF_2
0x4011164	          0x4889c1	                            mov rcx, rax	      9370	elf.c	FUNCTION_139	CALL_2
0x4011167	            0x7415	                            je 0x401117e	      9371	elf.c	FUNCTION_139	IF_2
0x4011169	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x401116c	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_221	CALL_3
0x401116f	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4011172	      0xe800000000	                          call 0x4011177	        53	string3.h	FUNCTION_221	CALL_3
0x4011177	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_221	CALL_3
0x401117a	        0xc6042800	                 mov byte [rax + rbp], 0	      9375	elf.c	FUNCTION_139
0x401117e	      0x488b442408	                mov rax, qword [rsp + 8]	      9974	elf.c	FUNCTION_149	CALL_5
0x4011183	            0x31f6	                            xor esi, esi	      9362	elf.c	FUNCTION_139	CALL_1
0x4011185	      0xba51000000	                           mov edx, 0x51	      9362	elf.c	FUNCTION_139	CALL_1
0x401118a	        0x48894810	             mov qword [rax + 0x10], rcx	      9974	elf.c	FUNCTION_149	CALL_5
0x401118e	      0x49035c2420	             add rbx, qword [r12 + 0x20]	      9979	elf.c	FUNCTION_149	CALL_7
0x4011193	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      9978	elf.c	FUNCTION_149	CALL_6
0x401119a	          0x4889df	                            mov rdi, rbx	      9362	elf.c	FUNCTION_139	CALL_1
0x401119d	    0x4c8bb0900c00	           mov r14, qword [rax + 0xc90] 	      9978	elf.c	FUNCTION_149	CALL_6
0x40111a4	      0xe800000000	                          call 0x40111a9	      9362	elf.c	FUNCTION_139	CALL_1
0x40111a9	          0x4885c0	                           test rax, rax	      9365	elf.c	FUNCTION_139	IF_1
0x40111ac	     0xf84cd000000	                            je 0x401127f	      9365	elf.c	FUNCTION_139	IF_1
0x40111b2	          0x4829d8	                            sub rax, rbx	      9368	elf.c	FUNCTION_139	ELSE_1
0x40111b5	        0x488d7001	                      lea rsi, [rax + 1]	      9368	elf.c	FUNCTION_139	ELSE_1
0x40111b9	          0x4889c5	                            mov rbp, rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x40111bc	          0x4c89ff	                            mov rdi, r15	      9370	elf.c	FUNCTION_139	CALL_2
0x40111bf	      0xe800000000	                          call 0x40111c4	      9370	elf.c	FUNCTION_139	CALL_2
0x40111c4	          0x4885c0	                           test rax, rax	      9371	elf.c	FUNCTION_139	IF_2
0x40111c7	          0x4889c1	                            mov rcx, rax	      9370	elf.c	FUNCTION_139	CALL_2
0x40111ca	            0x7415	                            je 0x40111e1	      9371	elf.c	FUNCTION_139	IF_2
0x40111cc	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x40111cf	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_221	CALL_3
0x40111d2	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x40111d5	      0xe800000000	                          call 0x40111da	        53	string3.h	FUNCTION_221	CALL_3
0x40111da	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_221	CALL_3
0x40111dd	        0xc6042800	                 mov byte [rax + rbp], 0	      9375	elf.c	FUNCTION_139
0x40111e1	      0x4d396c2408	                cmp qword [r12 + 8], r13	      9986	elf.c	FUNCTION_149	IF_5
0x40111e6	        0x49894e18	             mov qword [r14 + 0x18], rcx	      9979	elf.c	FUNCTION_149	CALL_7
0x40111ea	     0xf82eafcffff	                            jb 0x4010eda	      9986	elf.c	FUNCTION_149	IF_5
0x40111f0	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      9989	elf.c	FUNCTION_149	CALL_8
0x40111f7	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      9990	elf.c	FUNCTION_149	CALL_9
0x40111fc	      0x49037c2420	             add rdi, qword [r12 + 0x20]	      9990	elf.c	FUNCTION_149	CALL_9
0x4011201	    0x488b98900c00	           mov rbx, qword [rax + 0xc90] 	      9989	elf.c	FUNCTION_149	CALL_8
0x4011208	        0x498b4708	                mov rax, qword [r15 + 8]	      9990	elf.c	FUNCTION_149	CALL_9
0x401120c	    0xff9080000000	                 call qword [rax + 0x80]	      9990	elf.c	FUNCTION_149	CALL_9
0x4011212	          0x894304	                mov dword [rbx + 4], eax	      9990	elf.c	FUNCTION_149	CALL_9
0x4011215	      0xb801000000	                              mov eax, 1	      9992	elf.c	FUNCTION_149
0x401121a	      0xe94bfcffff	                           jmp 0x4010e6a	      9992	elf.c	FUNCTION_149
0x401121f	              0x90	                                     nop	      9992	elf.c	FUNCTION_149
0x4011220	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011224	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011228	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401122d	      0xe99efbffff	                           jmp 0x4010dd0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011232	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011238	      0x48837e086b	               cmp qword [rsi + 8], 0x6b	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x401123d	     0xf8788feffff	                            ja 0x40110cb	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x4011243	            0x31c0	                            xor eax, eax	      9954	elf.c	FUNCTION_149	SWITCH_1
0x4011245	      0xe9c3fcffff	                           jmp 0x4010f0d	      9954	elf.c	FUNCTION_149	SWITCH_1
0x401124a	    0x660f1f440000	                    nop word [rax + rax]	      9954	elf.c	FUNCTION_149	SWITCH_1
0x4011250	      0xba14000000	                           mov edx, 0x14	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4011255	      0xbb24000000	                           mov ebx, 0x24	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x401125a	    0x41bd20000000	                          mov r13d, 0x20	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4011260	    0x41be1c000000	                          mov r14d, 0x1c	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4011266	      0xbd18000000	                           mov ebp, 0x18	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x401126b	      0xbe10000000	                           mov esi, 0x10	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x4011270	      0xb81c000000	                           mov eax, 0x1c	     10008	elf.c	FUNCTION_150	SWITCH_1
0x4011275	      0xb908000000	                              mov ecx, 8	     10007	elf.c	FUNCTION_150	SWITCH_1
0x401127a	      0xe96bfdffff	                           jmp 0x4010fea	     10007	elf.c	FUNCTION_150	SWITCH_1
0x401127f	      0xbe52000000	                           mov esi, 0x52	      9365	elf.c	FUNCTION_139	IF_1
0x4011284	      0xbd51000000	                           mov ebp, 0x51	      9366	elf.c	FUNCTION_139	IF_1
0x4011289	      0xe92effffff	                           jmp 0x40111bc	      9366	elf.c	FUNCTION_139	IF_1
0x401128e	      0xbe12000000	                           mov esi, 0x12	      9365	elf.c	FUNCTION_139	IF_1
0x4011293	      0xbd11000000	                           mov ebp, 0x11	      9366	elf.c	FUNCTION_139	IF_1
0x4011298	      0xe9bcfeffff	                           jmp 0x4011159	      9366	elf.c	FUNCTION_139	IF_1
0x401129d	        0x498b4708	                mov rax, qword [r15 + 8]	     10046	elf.c	FUNCTION_150	CALL_8
0x40112a1	          0x4c89f7	                            mov rdi, r14	     10046	elf.c	FUNCTION_150	CALL_8
0x40112a4	      0x49037c2420	             add rdi, qword [r12 + 0x20]	     10046	elf.c	FUNCTION_150	CALL_8
0x40112a9	      0x4889542410	             mov qword [rsp + 0x10], rdx	     10046	elf.c	FUNCTION_150	CALL_8
0x40112ae	    0xff9080000000	                 call qword [rax + 0x80]	     10046	elf.c	FUNCTION_150	CALL_8
0x40112b4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	     10046	elf.c	FUNCTION_150	CALL_8
0x40112b9	            0x8902	                    mov dword [rdx], eax	     10046	elf.c	FUNCTION_150	CALL_8
0x40112bb	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	     10046	elf.c	FUNCTION_150	CALL_8
0x40112c2	    0x488b90900c00	           mov rdx, qword [rax + 0xc90] 	     10046	elf.c	FUNCTION_150	CALL_8
0x40112c9	      0xe991fdffff	                           jmp 0x401105f	     10046	elf.c	FUNCTION_150	CALL_8
0x40112ce	      0x49034c2420	             add rcx, qword [r12 + 0x20]	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112d3	        0x498b4708	                mov rax, qword [r15 + 8]	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112d7	          0x4c89f3	                            mov rbx, r14	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112da	          0x4989ed	                            mov r13, rbp	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112dd	          0x4889cf	                            mov rdi, rcx	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112e0	    0xff9080000000	                 call qword [rax + 0x80]	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112e6	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112eb	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	     10032	elf.c	FUNCTION_150	IF_3
0x40112f0	      0x4889442408	                mov qword [rsp + 8], rax	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112f5	          0x4989d6	                            mov r14, rdx	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x40112f8	          0x4889f5	                            mov rbp, rsi	     10032	elf.c	FUNCTION_150	IF_3
0x40112fb	      0xe947fdffff	                           jmp 0x4011047	     10032	elf.c	FUNCTION_150	IF_3
_bfd_elf_get_special_section	functions,0:CALL,3:FOR,1:WHILE,0:SWITCH,0:IF,8:DO,0:ELSE,1	115
0x4006840	            0x4157	                                push r15	      2751	elf.c	FUNCTION_39
0x4006842	            0x4156	                                push r14	      2751	elf.c	FUNCTION_39
0x4006844	            0x4155	                                push r13	      2751	elf.c	FUNCTION_39
0x4006846	            0x4154	                                push r12	      2751	elf.c	FUNCTION_39
0x4006848	          0x4989fd	                            mov r13, rdi	      2751	elf.c	FUNCTION_39
0x400684b	              0x55	                                push rbp	      2751	elf.c	FUNCTION_39
0x400684c	              0x53	                                push rbx	      2751	elf.c	FUNCTION_39
0x400684d	          0x4889f3	                            mov rbx, rsi	      2751	elf.c	FUNCTION_39
0x4006850	            0x89d5	                            mov ebp, edx	      2751	elf.c	FUNCTION_39
0x4006852	        0x4883ec18	                           sub rsp, 0x18	      2751	elf.c	FUNCTION_39
0x4006856	      0xe800000000	                          call 0x400685b	      2755	elf.c	FUNCTION_39	CALL_1
0x400685b	          0x4c8b3b	                    mov r15, qword [rbx]	      2757	elf.c	FUNCTION_39	FOR_1
0x400685e	          0x4d85ff	                           test r15, r15	      2757	elf.c	FUNCTION_39	FOR_1
0x4006861	     0xf8409010000	                            je 0x4006970	      2757	elf.c	FUNCTION_39	FOR_1
0x4006867	          0x4189c4	                           mov r12d, eax	      2757	elf.c	FUNCTION_39	FOR_1
0x400686a	            0x85ed	                           test ebp, ebp	      2757	elf.c	FUNCTION_39	FOR_1
0x400686c	            0x4898	                                    cdqe	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400686e	      0x4889442408	                mov qword [rsp + 8], rax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006873	            0x753b	                           jne 0x40068b0	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006875	      0xe9da000000	                           jmp 0x4006954	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400687a	    0x660f1f440000	                    nop word [rax + rax]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006880	             0x1d5	                            add ebp, edx	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4006882	          0x4139ec	                           cmp r12d, ebp	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4006885	            0x7c19	                            jl 0x40068a0	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4006887	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400688c	        0x4b8d3437	                    lea rsi, [r15 + r14]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006890	          0x4829d7	                            sub rdi, rdx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006893	          0x4c01ef	                            add rdi, r13	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006896	      0xe800000000	                          call 0x400689b	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400689b	            0x85c0	                           test eax, eax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400689d	            0x7453	                            je 0x40068f2	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400689f	              0x90	                                     nop	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40068a0	        0x4883c320	                           add rbx, 0x20	      2757	elf.c	FUNCTION_39	FOR_1
0x40068a4	          0x4c8b3b	                    mov r15, qword [rbx]	      2757	elf.c	FUNCTION_39	FOR_1
0x40068a7	          0x4d85ff	                           test r15, r15	      2757	elf.c	FUNCTION_39	FOR_1
0x40068aa	     0xf84c0000000	                            je 0x4006970	      2757	elf.c	FUNCTION_39	FOR_1
0x40068b0	          0x8b6b08	                mov ebp, dword [rbx + 8]	      2760	elf.c	FUNCTION_39	FOR_1
0x40068b3	          0x4139ec	                           cmp r12d, ebp	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x40068b6	            0x7ce8	                            jl 0x40068a0	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x40068b8	          0x4c63f5	                         movsxd r14, ebp	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x40068bb	          0x4c89fe	                            mov rsi, r15	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x40068be	          0x4c89ef	                            mov rdi, r13	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x40068c1	          0x4c89f2	                            mov rdx, r14	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x40068c4	      0xe800000000	                          call 0x40068c9	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x40068c9	            0x85c0	                           test eax, eax	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x40068cb	            0x75d3	                           jne 0x40068a0	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x40068cd	        0x4863530c	          movsxd rdx, dword [rbx + 0xc] 	      2767	elf.c	FUNCTION_39	FOR_1
0x40068d1	            0x85d2	                           test edx, edx	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x40068d3	            0x7fab	                            jg 0x4006880	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x40068d5	    0x430fb6443500	             movzx eax, byte [r13 + r14]	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x40068db	            0x84c0	                             test al, al	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x40068dd	            0x7413	                            je 0x40068f2	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x40068df	            0x85d2	                           test edx, edx	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x40068e1	            0x74bd	                            je 0x40068a0	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x40068e3	            0x3c2e	                            cmp al, 0x2e	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40068e5	            0x740b	                            je 0x40068f2	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40068e7	          0x83fafe	             cmp edx, 0xfffffffffffffffe	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40068ea	            0x74b4	                            je 0x40068a0	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40068ec	        0x837b1009	               cmp dword [rbx + 0x10], 9	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40068f0	            0x74ae	                            je 0x40068a0	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x40068f2	        0x4883c418	                           add rsp, 0x18	      2793	elf.c	FUNCTION_39
0x40068f6	          0x4889d8	                            mov rax, rbx	      2793	elf.c	FUNCTION_39
0x40068f9	              0x5b	                                 pop rbx	      2793	elf.c	FUNCTION_39
0x40068fa	              0x5d	                                 pop rbp	      2793	elf.c	FUNCTION_39
0x40068fb	            0x415c	                                 pop r12	      2793	elf.c	FUNCTION_39
0x40068fd	            0x415d	                                 pop r13	      2793	elf.c	FUNCTION_39
0x40068ff	            0x415e	                                 pop r14	      2793	elf.c	FUNCTION_39
0x4006901	            0x415f	                                 pop r15	      2793	elf.c	FUNCTION_39
0x4006903	              0xc3	                                     ret	      2793	elf.c	FUNCTION_39
0x4006904	         0xf1f4000	                         nop dword [rax]	      2793	elf.c	FUNCTION_39
0x4006908	          0x4963ee	                        movsxd rbp, r14d	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400690b	          0x4c89fe	                            mov rsi, r15	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400690e	          0x4c89ef	                            mov rdi, r13	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4006911	          0x4889ea	                            mov rdx, rbp	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4006914	      0xe800000000	                          call 0x4006919	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4006919	            0x85c0	                           test eax, eax	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400691b	            0x752b	                           jne 0x4006948	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400691d	          0x8b430c	              mov eax, dword [rbx + 0xc]	      2767	elf.c	FUNCTION_39	FOR_1
0x4006920	            0x85c0	                           test eax, eax	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x4006922	            0x7e53	                           jle 0x4006977	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x4006924	        0x428d0c30	                    lea ecx, [rax + r14]	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4006928	          0x4139cc	                           cmp r12d, ecx	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x400692b	            0x7c1b	                            jl 0x4006948	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x400692d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006932	          0x4863d0	                         movsxd rdx, eax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006935	        0x498d342f	                    lea rsi, [r15 + rbp]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006939	          0x4829d7	                            sub rdi, rdx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400693c	          0x4c01ef	                            add rdi, r13	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x400693f	      0xe800000000	                          call 0x4006944	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006944	            0x85c0	                           test eax, eax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006946	            0x74aa	                            je 0x40068f2	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4006948	        0x4883c320	                           add rbx, 0x20	      2757	elf.c	FUNCTION_39	FOR_1
0x400694c	          0x4c8b3b	                    mov r15, qword [rbx]	      2757	elf.c	FUNCTION_39	FOR_1
0x400694f	          0x4d85ff	                           test r15, r15	      2757	elf.c	FUNCTION_39	FOR_1
0x4006952	            0x741c	                            je 0x4006970	      2757	elf.c	FUNCTION_39	FOR_1
0x4006954	        0x448b7308	               mov r14d, dword [rbx + 8]	      2760	elf.c	FUNCTION_39	FOR_1
0x4006958	          0x4539f4	                          cmp r12d, r14d	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x400695b	            0x7dab	                           jge 0x4006908	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x400695d	        0x4883c320	                           add rbx, 0x20	      2757	elf.c	FUNCTION_39	FOR_1
0x4006961	          0x4c8b3b	                    mov r15, qword [rbx]	      2757	elf.c	FUNCTION_39	FOR_1
0x4006964	          0x4d85ff	                           test r15, r15	      2757	elf.c	FUNCTION_39	FOR_1
0x4006967	            0x75eb	                           jne 0x4006954	      2757	elf.c	FUNCTION_39	FOR_1
0x4006969	     0xf1f80000000	                         nop dword [rax]	      2757	elf.c	FUNCTION_39	FOR_1
0x4006970	            0x31db	                            xor ebx, ebx	      2792	elf.c	FUNCTION_39
0x4006972	      0xe97bffffff	                           jmp 0x40068f2	      2792	elf.c	FUNCTION_39
0x4006977	    0x410fb6542d00	             movzx edx, byte [r13 + rbp]	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x400697d	            0x84d2	                             test dl, dl	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x400697f	     0xf846dffffff	                            je 0x40068f2	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4006985	            0x85c0	                           test eax, eax	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x4006987	            0x74bf	                            je 0x4006948	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x4006989	          0x80fa2e	                            cmp dl, 0x2e	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x400698c	     0xf8460ffffff	                            je 0x40068f2	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4006992	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4006995	     0xf8557ffffff	                           jne 0x40068f2	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x400699b	            0xebab	                           jmp 0x4006948	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
bfd_section_from_shdr	functions,0:CALL,114:FOR,7:WHILE,0:SWITCH,2:IF,69:DO,0:ELSE,9	914
0x40045d0	    0x488b8ff80000	            mov rcx, qword [rdi + 0xf8] 	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40045d7	            0x31c0	                            xor eax, eax	      2006	elf.c	FUNCTION_36	IF_1
0x40045d9	    0x8b91fc020000	           mov edx, dword [rcx + 0x2fc] 	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40045df	            0x39f2	                            cmp edx, esi	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40045e1	     0xf868a020000	                           jbe 0x4004871	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40045e7	            0x4157	                                push r15	      1995	elf.c	FUNCTION_36
0x40045e9	            0x4156	                                push r14	      1995	elf.c	FUNCTION_36
0x40045eb	            0x4155	                                push r13	      1995	elf.c	FUNCTION_36
0x40045ed	            0x4154	                                push r12	      1995	elf.c	FUNCTION_36
0x40045ef	          0x4189f5	                           mov r13d, esi	      1995	elf.c	FUNCTION_36
0x40045f2	              0x55	                                push rbp	      1995	elf.c	FUNCTION_36
0x40045f3	              0x53	                                push rbx	      1995	elf.c	FUNCTION_36
0x40045f4	            0x89f5	                            mov ebp, esi	      1995	elf.c	FUNCTION_36
0x40045f6	          0x4889fb	                            mov rbx, rdi	      1995	elf.c	FUNCTION_36
0x40045f9	        0x4883ec28	                           sub rsp, 0x28	      1995	elf.c	FUNCTION_36
0x40045fd	    0x8b0500000000	            mov eax, dword [0x04004603] 	      2008	elf.c	FUNCTION_36	IF_2
0x4004603	          0x83c001	                              add eax, 1	      2008	elf.c	FUNCTION_36	IF_2
0x4004606	          0x83f803	                              cmp eax, 3	      2008	elf.c	FUNCTION_36	IF_2
0x4004609	    0x890500000000	            mov dword [0x0400460f], eax 	      2008	elf.c	FUNCTION_36	IF_2
0x400460f	            0x7654	                           jbe 0x4004665	      2008	elf.c	FUNCTION_36	IF_2
0x4004611	    0x483b3d000000	            cmp rdi, qword [0x04004618] 	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x4004618	     0xf84e2070000	                            je 0x4004e00	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x400461e	    0x48c705000000	               mov qword [0x04004629], 0	      2021	elf.c	FUNCTION_36	IF_2	IF_3
0x4004629	    0x488d34950000	                        lea rsi, [rdx*4]	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4004631	          0x4889df	                            mov rdi, rbx	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4004634	      0xe800000000	                          call 0x4004639	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4004639	    0x48891d000000	            mov qword [0x04004640], rbx 	      2027	elf.c	FUNCTION_36	IF_2	IF_4
0x4004640	    0x488905000000	            mov qword [0x04004647], rax 	      2025	elf.c	FUNCTION_36	IF_2	IF_4
0x4004647	          0x4189ed	                           mov r13d, ebp	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x400464a	        0x4a8d04a8	                  lea rax, [rax + r13*4]	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x400464e	            0x8b10	                    mov edx, dword [rax]	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4004650	            0x85d2	                           test edx, edx	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4004652	     0xf8558040000	                           jne 0x4004ab0	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4004658	    0xc70001000000	                      mov dword [rax], 1	      2035	elf.c	FUNCTION_36	IF_2
0x400465e	    0x488b8bf80000	            mov rcx, qword [rbx + 0xf8] 	      2035	elf.c	FUNCTION_36	IF_2
0x4004665	        0x488b4158	            mov rax, qword [rcx + 0x58] 	      2038	elf.c	FUNCTION_36	CALL_6
0x4004669	    0x4e8d04ed0000	                         lea r8, [r13*8]	      2038	elf.c	FUNCTION_36	CALL_6
0x4004671	    0x41be00000000	                             mov r14d, 0	       331	elf.c	FUNCTION_17	IF_1
0x4004677	        0x4e8b24e8	            mov r12, qword [rax + r13*8]	      2038	elf.c	FUNCTION_36	CALL_6
0x400467b	        0x418b1424	                    mov edx, dword [r12]	      2040	elf.c	FUNCTION_36	CALL_8
0x400467f	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x4004681	     0xf8591020000	                           jne 0x4004918	       330	elf.c	FUNCTION_17	IF_1
0x4004687	        0x488b4308	                mov rax, qword [rbx + 8]	      2045	elf.c	FUNCTION_36	CALL_9
0x400468b	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      2045	elf.c	FUNCTION_36	CALL_9
0x4004692	      0x418b442404	                mov eax, dword [r12 + 4]	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004697	          0x83f80a	                            cmp eax, 0xa	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400469a	     0xf8480010000	                            je 0x4004820	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046a0	     0xf86d2010000	                           jbe 0x4004878	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046a6	          0x83f812	                           cmp eax, 0x12	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046a9	     0xf8469070000	                            je 0x4004e18	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046af	     0xf86e3000000	                           jbe 0x4004798	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046b5	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046ba	     0xf8440080000	                            je 0x4004f00	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046c0	     0xf868a070000	                           jbe 0x4004e50	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046c6	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046cb	     0xf847f020000	                            je 0x4004950	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046d1	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046d6	     0xf8584070000	                           jne 0x4004e60	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40046dc	    0x49837c243802	               cmp qword [r12 + 0x38], 2	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x40046e2	     0xf855b020000	                           jne 0x4004943	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x40046e8	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x40046ef	        0x498b1424	                    mov rdx, qword [r12]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40046f3	    0x89a8800c0000	            mov dword [rax + 0xc80], ebp	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x40046f9	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004700	    0x488990f80100	            mov qword [rax + 0x1f8], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004707	      0x498b542408	                mov rdx, qword [r12 + 8]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400470c	    0x488990000200	            mov qword [rax + 0x200], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004713	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004718	    0x488990080200	            mov qword [rax + 0x208], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400471f	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004724	    0x488990100200	            mov qword [rax + 0x210], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400472b	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004730	    0x488990180200	            mov qword [rax + 0x218], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004737	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400473c	    0x488990200200	            mov qword [rax + 0x220], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004743	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004748	    0x488990280200	            mov qword [rax + 0x228], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400474f	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004754	    0x488990300200	            mov qword [rax + 0x230], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400475b	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004760	    0x488990380200	            mov qword [rax + 0x238], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004767	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      1004	elf.c	FUNCTION_26	IF_1
0x400476d	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004772	    0x488990400200	            mov qword [rax + 0x240], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4004779	     0xf85a1000000	                           jne 0x4004820	      1004	elf.c	FUNCTION_26	IF_1
0x400477f	              0x90	                                     nop	      1004	elf.c	FUNCTION_26	IF_1
0x4004780	            0x89e9	                            mov ecx, ebp	      1004	elf.c	FUNCTION_26	IF_1
0x4004782	          0x4c89f2	                            mov rdx, r14	      1004	elf.c	FUNCTION_26	IF_1
0x4004785	          0x4c89e6	                            mov rsi, r12	      1004	elf.c	FUNCTION_26	IF_1
0x4004788	          0x4889df	                            mov rdi, rbx	      1004	elf.c	FUNCTION_26	IF_1
0x400478b	      0xe8c00e0000	call sym._bfd_elf_make_section_from_shdr.part.22	      1004	elf.c	FUNCTION_26	IF_1
0x4004790	      0xe990000000	                           jmp 0x4004825	      1004	elf.c	FUNCTION_26	IF_1
0x4004795	           0xf1f00	                         nop dword [rax]	      1004	elf.c	FUNCTION_26	IF_1
0x4004798	          0x83f810	                           cmp eax, 0x10	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400479b	     0xf87df080000	                            ja 0x4005080	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40047a1	          0x83f80e	                            cmp eax, 0xe	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40047a4	     0xf8331020000	                           jae 0x40049db	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40047aa	          0x83f80b	                            cmp eax, 0xb	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40047ad	     0xf85ad060000	                           jne 0x4004e60	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40047b3	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40047ba	    0x8b827c0c0000	           mov eax, dword [rdx + 0xc7c] 	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40047c0	            0x39c5	                            cmp ebp, eax	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40047c2	            0x745c	                            je 0x4004820	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40047c4	    0x498bb7000300	           mov rsi, qword [r15 + 0x300] 	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40047cb	      0x498b4c2438	            mov rcx, qword [r12 + 0x38] 	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40047d0	         0xfb67605	               movzx esi, byte [rsi + 5]	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40047d4	          0x4839f1	                            cmp rcx, rsi	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40047d7	     0xf8566010000	                           jne 0x4004943	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40047dd	      0x418b7c242c	            mov edi, dword [r12 + 0x2c] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40047e2	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40047e7	        0x480fafcf	                           imul rcx, rdi	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40047eb	          0x4839f1	                            cmp rcx, rsi	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40047ee	     0xf87cc080000	                            ja 0x40050c0	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40047f4	            0x85c0	                           test eax, eax	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x40047f6	     0xf844f0b0000	                            je 0x400534b	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x40047fc	      0xba05000000	                              mov edx, 5	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4004801	      0xbe00000000	                              mov esi, 0	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4004806	      0xbf00000000	                              mov edi, 0	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x400480b	      0xe800000000	                          call 0x4004810	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4004810	            0x89ea	                            mov edx, ebp	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4004812	          0x4889c7	                            mov rdi, rax	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4004815	          0x4889de	                            mov rsi, rbx	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4004818	            0x31c0	                            xor eax, eax	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x400481a	      0xe800000000	                          call 0x400481f	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x400481f	              0x90	                                     nop	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4004820	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4004825	    0x488b15000000	            mov rdx, qword [0x0400482c] 	      2544	elf.c	FUNCTION_36	IF_68
0x400482c	          0x4885d2	                           test rdx, rdx	      2544	elf.c	FUNCTION_36	IF_68
0x400482f	            0x740d	                            je 0x400483e	      2544	elf.c	FUNCTION_36	IF_68
0x4004831	    0x483b1d000000	            cmp rbx, qword [0x04004838] 	      2544	elf.c	FUNCTION_36	IF_68
0x4004838	     0xf8462020000	                            je 0x4004aa0	      2544	elf.c	FUNCTION_36	IF_68
0x400483e	    0x8b0d00000000	            mov ecx, dword [0x04004844] 	      2546	elf.c	FUNCTION_36	IF_69
0x4004844	          0x8d51ff	                      lea edx, [rcx - 1]	      2546	elf.c	FUNCTION_36	IF_69
0x4004847	            0x85d2	                           test edx, edx	      2546	elf.c	FUNCTION_36	IF_69
0x4004849	    0x891500000000	            mov dword [0x0400484f], edx 	      2546	elf.c	FUNCTION_36	IF_69
0x400484f	            0x7512	                           jne 0x4004863	      2546	elf.c	FUNCTION_36	IF_69
0x4004851	    0x48c705000000	               mov qword [0x0400485c], 0	      2548	elf.c	FUNCTION_36	IF_69
0x400485c	    0x48891d000000	            mov qword [0x04004863], rbx 	      2549	elf.c	FUNCTION_36	IF_69
0x4004863	        0x4883c428	                           add rsp, 0x28	      2552	elf.c	FUNCTION_36
0x4004867	              0x5b	                                 pop rbx	      2552	elf.c	FUNCTION_36
0x4004868	              0x5d	                                 pop rbp	      2552	elf.c	FUNCTION_36
0x4004869	            0x415c	                                 pop r12	      2552	elf.c	FUNCTION_36
0x400486b	            0x415d	                                 pop r13	      2552	elf.c	FUNCTION_36
0x400486d	            0x415e	                                 pop r14	      2552	elf.c	FUNCTION_36
0x400486f	            0x415f	                                 pop r15	      2552	elf.c	FUNCTION_36
0x4004871	            0xf3c3	                                     ret	      2552	elf.c	FUNCTION_36
0x4004873	       0xf1f440000	                   nop dword [rax + rax]	      2552	elf.c	FUNCTION_36
0x4004878	          0x83f804	                              cmp eax, 4	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400487b	     0xf84af030000	                            je 0x4004c30	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004881	     0xf8769010000	                            ja 0x40049f0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004887	          0x83f801	                              cmp eax, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400488a	     0xf844b010000	                            je 0x40049db	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004890	            0x728e	                            jb 0x4004820	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004892	          0x83f802	                              cmp eax, 2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004895	     0xf8445020000	                            je 0x4004ae0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400489b	          0x83f803	                              cmp eax, 3	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400489e	     0xf85bc050000	                           jne 0x4004e60	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40048a4	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x40048aa	     0xf8570ffffff	                           jne 0x4004820	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x40048b0	          0x3b6950	            cmp ebp, dword [rcx + 0x50] 	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x40048b3	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40048ba	     0xf843e0b0000	                            je 0x40053fe	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x40048c0	    0x8bb0780c0000	           mov esi, dword [rax + 0xc78] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40048c6	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40048ca	          0x4889f2	                            mov rdx, rsi	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40048cd	        0x488b34f1	            mov rsi, qword [rcx + rsi*8]	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40048d1	          0x3b6e28	            cmp ebp, dword [rsi + 0x28] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40048d4	     0xf84c90b0000	                            je 0x40054a3	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40048da	    0x8bb87c0c0000	           mov edi, dword [rax + 0xc7c] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40048e0	          0x4889fe	                            mov rsi, rdi	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40048e3	        0x488b3cf9	            mov rdi, qword [rcx + rdi*8]	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40048e7	          0x3b6f28	            cmp ebp, dword [rdi + 0x28] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40048ea	     0xf84220a0000	                            je 0x4005312	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x40048f0	            0x85d2	                           test edx, edx	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40048f2	     0xf8476090000	                            je 0x400526e	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40048f8	            0x85f6	                           test esi, esi	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40048fa	     0xf846e090000	                            je 0x400526e	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x4004900	            0x89e9	                            mov ecx, ebp	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4004902	          0x4c89f2	                            mov rdx, r14	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4004905	          0x4c89e6	                            mov rsi, r12	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4004908	          0x4889df	                            mov rdi, rbx	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x400490b	      0xe800000000	                          call 0x4004910	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4004910	      0xe910ffffff	                           jmp 0x4004825	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x4004915	           0xf1f00	                         nop dword [rax]	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x4004918	          0x8b7150	            mov esi, dword [rcx + 0x50] 	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x400491b	          0x4889df	                            mov rdi, rbx	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x400491e	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x4004923	      0x48894c2408	                mov qword [rsp + 8], rcx	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x4004928	      0xe833d1ffff	call sym.bfd_elf_string_from_elf_section.part.20	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x400492d	          0x4885c0	                           test rax, rax	      2042	elf.c	FUNCTION_36	IF_6
0x4004930	          0x4989c6	                            mov r14, rax	      2042	elf.c	FUNCTION_36	IF_6
0x4004933	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2042	elf.c	FUNCTION_36	IF_6
0x4004938	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2042	elf.c	FUNCTION_36	IF_6
0x400493d	     0xf8544fdffff	                           jne 0x4004687	      2042	elf.c	FUNCTION_36	IF_6
0x4004943	            0x31c0	                            xor eax, eax	      2542	elf.c	FUNCTION_36
0x4004945	      0xe9dbfeffff	                           jmp 0x4004825	      2542	elf.c	FUNCTION_36
0x400494a	    0x660f1f440000	                    nop word [rax + rax]	      2542	elf.c	FUNCTION_36
0x4004950	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4004957	        0x498b1424	                    mov rdx, qword [r12]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400495b	    0x89a8880c0000	            mov dword [rax + 0xc88], ebp	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4004961	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4004968	    0x488990480200	            mov qword [rax + 0x248], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400496f	      0x498b542408	                mov rdx, qword [r12 + 8]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4004974	    0x488990500200	            mov qword [rax + 0x250], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400497b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4004980	    0x488990580200	            mov qword [rax + 0x258], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4004987	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400498c	    0x488990600200	            mov qword [rax + 0x260], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4004993	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4004998	    0x488990680200	            mov qword [rax + 0x268], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400499f	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049a4	    0x488990700200	            mov qword [rax + 0x270], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049ab	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049b0	    0x488990780200	            mov qword [rax + 0x278], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049b7	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049bc	    0x488990800200	            mov qword [rax + 0x280], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049c3	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049c8	    0x488990880200	            mov qword [rax + 0x288], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049cf	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049d4	    0x488990900200	            mov qword [rax + 0x290], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40049db	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      1004	elf.c	FUNCTION_26	IF_1
0x40049e1	     0xf8539feffff	                           jne 0x4004820	      1004	elf.c	FUNCTION_26	IF_1
0x40049e7	      0xe994fdffff	                           jmp 0x4004780	      1004	elf.c	FUNCTION_26	IF_1
0x40049ec	         0xf1f4000	                         nop dword [rax]	      1004	elf.c	FUNCTION_26	IF_1
0x40049f0	          0x83f808	                              cmp eax, 8	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40049f3	     0xf8737020000	                            ja 0x4004c30	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40049f9	          0x83f807	                              cmp eax, 7	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40049fc	            0x73dd	                           jae 0x40049db	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40049fe	          0x83f805	                              cmp eax, 5	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004a01	            0x74d8	                            je 0x40049db	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004a03	          0x83f806	                              cmp eax, 6	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004a06	     0xf8554040000	                           jne 0x4004e60	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004a0c	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      1004	elf.c	FUNCTION_26	IF_1
0x4004a12	     0xf8408070000	                            je 0x4005120	      1004	elf.c	FUNCTION_26	IF_1
0x4004a18	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4004a1f	      0x418b442428	            mov eax, dword [r12 + 0x28] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4004a24	    0x8b8afc020000	           mov ecx, dword [rdx + 0x2fc] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4004a2a	            0x39c8	                            cmp eax, ecx	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4004a2c	     0xf87aa060000	                            ja 0x40050dc	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4004a32	        0x488b7258	            mov rsi, qword [rdx + 0x58] 	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4004a36	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4004a3a	          0x4885c0	                           test rax, rax	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4004a3d	     0xf8400ffffff	                            je 0x4004943	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4004a43	        0x83780403	                  cmp dword [rax + 4], 3	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4004a47	     0xf84d3fdffff	                            je 0x4004820	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4004a4d	    0x8b827c0c0000	           mov eax, dword [rdx + 0xc7c] 	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4004a53	            0x85c0	                           test eax, eax	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4004a55	     0xf85af060000	                           jne 0x400510a	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4004a5b	          0x83f901	                              cmp ecx, 1	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x4004a5e	     0xf86bcfdffff	                           jbe 0x4004820	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x4004a64	        0x488b5608	                mov rdx, qword [rsi + 8]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x4004a68	        0x837a040b	                cmp dword [rdx + 4], 0xb	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4004a6c	     0xf84ef070000	                            je 0x4005261	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4004a72	          0x8d51fe	                      lea edx, [rcx - 2]	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4004a75	        0x488d4610	                   lea rax, [rsi + 0x10]	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4004a79	      0x488d4cd610	          lea rcx, [rsi + rdx*8 + 0x10] 	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4004a7e	            0xeb11	                           jmp 0x4004a91	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4004a80	          0x488b10	                    mov rdx, qword [rax]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x4004a83	        0x4883c008	                              add rax, 8	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x4004a87	        0x837a040b	                cmp dword [rdx + 4], 0xb	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4004a8b	     0xf84d0070000	                            je 0x4005261	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4004a91	          0x4839c8	                            cmp rax, rcx	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x4004a94	            0x75ea	                           jne 0x4004a80	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x4004a96	      0xe985fdffff	                           jmp 0x4004820	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x4004a9b	       0xf1f440000	                   nop dword [rax + rax]	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x4004aa0	    0x42c704aa0000	              mov dword [rdx + r13*4], 0	      2545	elf.c	FUNCTION_36	IF_68
0x4004aa8	      0xe991fdffff	                           jmp 0x400483e	      2545	elf.c	FUNCTION_36	IF_68
0x4004aad	           0xf1f00	                         nop dword [rax]	      2545	elf.c	FUNCTION_36	IF_68
0x4004ab0	      0xba05000000	                              mov edx, 5	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4004ab5	      0xbe00000000	                              mov esi, 0	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4004aba	      0xbf00000000	                              mov edi, 0	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4004abf	      0xe800000000	                          call 0x4004ac4	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4004ac4	          0x4889de	                            mov rsi, rbx	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4004ac7	          0x4889c7	                            mov rdi, rax	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4004aca	            0x31c0	                            xor eax, eax	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4004acc	      0xe800000000	                          call 0x4004ad1	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4004ad1	            0x31c0	                            xor eax, eax	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x4004ad3	      0xe98bfdffff	                           jmp 0x4004863	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x4004ad8	     0xf1f84000000	                   nop dword [rax + rax]	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x4004ae0	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x4004ae7	    0x8b82780c0000	           mov eax, dword [rdx + 0xc78] 	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x4004aed	            0x39c5	                            cmp ebp, eax	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x4004aef	     0xf842bfdffff	                            je 0x4004820	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x4004af5	    0x498bb7000300	           mov rsi, qword [r15 + 0x300] 	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4004afc	      0x498b4c2438	            mov rcx, qword [r12 + 0x38] 	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4004b01	         0xfb67605	               movzx esi, byte [rsi + 5]	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4004b05	          0x4839f1	                            cmp rcx, rsi	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4004b08	     0xf8535feffff	                           jne 0x4004943	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x4004b0e	      0x418b7c242c	            mov edi, dword [r12 + 0x2c] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4004b13	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4004b18	        0x480fafcf	                           imul rcx, rdi	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4004b1c	          0x4839f1	                            cmp rcx, rsi	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4004b1f	     0xf879b050000	                            ja 0x40050c0	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4004b25	            0x85c0	                           test eax, eax	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x4004b27	     0xf857c0a0000	                           jne 0x40055a9	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x4004b2d	    0x89aa780c0000	            mov dword [rdx + 0xc78], ebp	      2145	elf.c	FUNCTION_36	SWITCH_1	CALL_25
0x4004b33	        0x498b1424	                    mov rdx, qword [r12]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b37	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b3e	        0x48895068	             mov qword [rax + 0x68], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b42	      0x498b542408	                mov rdx, qword [r12 + 8]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b47	        0x48895070	             mov qword [rax + 0x70], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b4b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b50	        0x48895078	             mov qword [rax + 0x78], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b54	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b59	    0x488990800000	             mov qword [rax + 0x80], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b60	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b65	    0x488990880000	             mov qword [rax + 0x88], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b6c	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b71	    0x488990900000	             mov qword [rax + 0x90], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b78	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b7d	    0x488990980000	             mov qword [rax + 0x98], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b84	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b89	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b90	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b95	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004b9c	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004ba1	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4004ba8	    0x4c8b8bf80000	              mov r9, qword [rbx + 0xf8]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4004baf	        0x498b4158	              mov rax, qword [r9 + 0x58]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4004bb3	        0x498d7168	                    lea rsi, [r9 + 0x68]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4004bb7	        0x4a893400	               mov qword [rax + r8], rsi	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4004bbb	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bbe	            0x89cf	                            mov edi, ecx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bc0	          0xc1ef05	                              shr edi, 5	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bc3	    0x81e7ffff0f00	                        and edi, 0xfffff	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bc9	            0x89f8	                            mov eax, edi	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bcb	          0x83c810	                            or eax, 0x10	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bce	          0xc1e005	                              shl eax, 5	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bd1	            0x89c2	                            mov edx, eax	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bd3	            0x89c8	                            mov eax, ecx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bd5	      0x251f0000fe	                     and eax, 0xfe00001f	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bda	             0x9d0	                             or eax, edx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bdc	          0x894344	             mov dword [rbx + 0x44], eax	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4004bdf	      0x41f6417002	                test byte [r9 + 0x70], 2	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4004be4	            0x7409	                            je 0x4004bef	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4004be6	          0x83e740	                           and edi, 0x40	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4004be9	     0xf85e7090000	                           jne 0x40055d6	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4004bef	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004bf6	    0x488b87e80200	           mov rax, qword [rdi + 0x2e8] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004bfd	          0x4885c0	                           test rax, rax	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004c00	            0x751b	                           jne 0x4004c1d	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004c02	      0xe932090000	                           jmp 0x4005539	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004c07	    0x660f1f840000	                    nop word [rax + rax]	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004c10	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004c14	          0x4885c0	                           test rax, rax	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004c17	     0xf841c090000	                            je 0x4005539	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4004c1d	          0x3b6828	            cmp ebp, dword [rax + 0x28] 	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4004c20	            0x75ee	                           jne 0x4004c10	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4004c22	      0xe9f9fbffff	                           jmp 0x4004820	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4004c27	    0x660f1f840000	                    nop word [rax + rax]	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4004c30	          0x83f809	                              cmp eax, 9	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4004c33	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4004c38	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4004c3f	     0xf8430040000	                            je 0x4005075	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4004c45	         0xfb64004	               movzx eax, byte [rax + 4]	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4004c49	          0x4839d0	                            cmp rax, rdx	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4004c4c	     0xf85f1fcffff	                           jne 0x4004943	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4004c52	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x4004c59	      0x458b4c2428	            mov r9d, dword [r12 + 0x28] 	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4004c5e	    0x448b97fc0200	          mov r10d, dword [rdi + 0x2fc] 	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x4004c65	          0x4539ca	                           cmp r10d, r9d	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4004c68	     0xf8646050000	                           jbe 0x40051b4	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4004c6e	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4004c71	          0xc1e805	                              shr eax, 5	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4004c74	            0xa842	                           test al, 0x42	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4004c76	     0xf84c3040000	                            je 0x400513f	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4004c7c	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4004c80	          0x4489c8	                            mov eax, r9d	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4004c83	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4004c87	        0x448b5804	               mov r11d, dword [rax + 4]	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4004c8b	        0x4183fb02	                             cmp r11d, 2	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4004c8f	     0xf8475050000	                            je 0x400520a	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4004c95	        0x4183fb0b	                           cmp r11d, 0xb	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4004c99	     0xf846b050000	                            je 0x400520a	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4004c9f	    0x44398f780c00	           cmp dword [rdi + 0xc78], r9d 	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004ca6	     0xf852ffdffff	                           jne 0x40049db	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004cac	          0x4585c9	                           test r9d, r9d	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004caf	     0xf8426fdffff	                            je 0x40049db	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004cb5	      0x418b74242c	            mov esi, dword [r12 + 0x2c] 	      2393	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004cba	            0x85f6	                           test esi, esi	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004cbc	     0xf8419fdffff	                            je 0x40049db	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004cc2	          0x4139f2	                           cmp r10d, esi	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004cc5	     0xf8610fdffff	                           jbe 0x40049db	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4004ccb	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4004ccf	            0x89f0	                            mov eax, esi	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4004cd1	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4004cd5	          0x8b4004	                mov eax, dword [rax + 4]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4004cd8	          0x83f804	                              cmp eax, 4	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4004cdb	     0xf84fafcffff	                            je 0x40049db	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4004ce1	          0x83f809	                              cmp eax, 9	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4004ce4	     0xf84f1fcffff	                            je 0x40049db	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4004cea	          0x4889df	                            mov rdi, rbx	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4004ced	      0x4c89442408	                 mov qword [rsp + 8], r8	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4004cf2	      0xe800000000	                          call 0x4004cf7	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4004cf7	            0x85c0	                           test eax, eax	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4004cf9	     0xf8444fcffff	                            je 0x4004943	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4004cff	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4004d06	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4004d0b	    0x3b82fc020000	           cmp eax, dword [rdx + 0x2fc] 	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4004d11	     0xf832cfcffff	                           jae 0x4004943	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4004d17	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4004d1b	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      2593	elf.c	FUNCTION_38	CALL_2
0x4004d1f	        0x488b6840	            mov rbp, qword [rax + 0x40] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4004d23	          0x4885ed	                           test rbp, rbp	      2407	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x4004d26	     0xf8417fcffff	                            je 0x4004943	      2407	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x4004d2c	    0x41837c240404	                  cmp dword [r12 + 4], 4	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4004d32	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      2410	elf.c	FUNCTION_36	SWITCH_1	CALL_88
0x4004d39	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4004d3e	     0xf84f8080000	                            je 0x400563c	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4004d44	        0x4c8d7058	                   lea r14, [rax + 0x58]	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x4004d48	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x4004d4c	          0x4885c0	                           test rax, rax	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x4004d4f	     0xf85eefbffff	                           jne 0x4004943	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x4004d55	      0xbe50000000	                           mov esi, 0x50	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4004d5a	          0x4889df	                            mov rdi, rbx	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4004d5d	      0x4c89442408	                 mov qword [rsp + 8], r8	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4004d62	      0xe800000000	                          call 0x4004d67	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4004d67	          0x4885c0	                           test rax, rax	      2420	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4004d6a	     0xf84d3fbffff	                            je 0x4004943	      2420	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4004d70	          0x4889c7	                            mov rdi, rax	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4004d73	      0xb914000000	                           mov ecx, 0x14	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4004d78	          0x4c89e6	                            mov rsi, r12	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4004d7b	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4004d7d	          0x498906	                    mov qword [r14], rax	      2423	elf.c	FUNCTION_36	SWITCH_1
0x4004d80	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4004d85	    0x8b8d88000000	            mov ecx, dword [rbp + 0x88] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004d8b	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4004d92	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004d97	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4004d9b	        0x4a890402	               mov qword [rdx + r8], rax	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4004d9f	            0x31c0	                            xor eax, eax	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004da1	          0x4885f6	                           test rsi, rsi	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004da4	            0x740a	                            je 0x4004db0	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004da6	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004dab	            0x31d2	                            xor edx, edx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004dad	          0x48f7f6	                                 div rsi	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004db0	    0x498b97000300	           mov rdx, qword [r15 + 0x300] 	      2426	elf.c	FUNCTION_36	SWITCH_1
0x4004db7	         0xfb65209	               movzx edx, byte [rdx + 9]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004dbb	        0x834d2004	                or dword [rbp + 0x20], 4	      2427	elf.c	FUNCTION_36	SWITCH_1
0x4004dbf	    0x48c745780000	               mov qword [rbp + 0x78], 0	      2428	elf.c	FUNCTION_36	SWITCH_1
0x4004dc7	           0xfafc2	                           imul eax, edx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004dca	             0x1c8	                            add eax, ecx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004dcc	    0x49837c242000	               cmp qword [r12 + 0x20], 0	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4004dd2	    0x898588000000	            mov dword [rbp + 0x88], eax 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4004dd8	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      2429	elf.c	FUNCTION_36	SWITCH_1
0x4004ddd	    0x488985980000	            mov qword [rbp + 0x98], rax 	      2429	elf.c	FUNCTION_36	SWITCH_1
0x4004de4	            0x740c	                            je 0x4004df2	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4004de6	    0x41837c240404	                  cmp dword [r12 + 4], 4	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4004dec	            0x7504	                           jne 0x4004df2	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4004dee	        0x804d2504	                 or byte [rbp + 0x25], 4	      2435	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4004df2	        0x834b4420	             or dword [rbx + 0x44], 0x20	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4004df6	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4004dfb	      0xe925faffff	                           jmp 0x4004825	      2438	elf.c	FUNCTION_36	SWITCH_1
0x4004e00	    0x488b05000000	            mov rax, qword [0x04004e07] 	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4004e07	          0x4885c0	                           test rax, rax	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4004e0a	     0xf8537f8ffff	                           jne 0x4004647	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4004e10	      0xe914f8ffff	                           jmp 0x4004629	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4004e15	           0xf1f00	                         nop dword [rax]	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4004e18	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4004e1f	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4004e26	          0x4885c0	                           test rax, rax	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4004e29	            0x7512	                           jne 0x4004e3d	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4004e2b	      0xe998010000	                           jmp 0x4004fc8	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4004e30	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4004e34	          0x4885c0	                           test rax, rax	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4004e37	     0xf848b010000	                            je 0x4004fc8	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4004e3d	          0x3b6850	            cmp ebp, dword [rax + 0x50] 	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4004e40	            0x75ee	                           jne 0x4004e30	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4004e42	      0xe9d9f9ffff	                           jmp 0x4004820	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4004e47	    0x660f1f840000	                    nop word [rax + rax]	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4004e50	    0x8d900a000090	             lea edx, [rax - 0x6ffffff6]	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004e56	          0x83fa01	                              cmp edx, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004e59	     0xf867cfbffff	                           jbe 0x40049db	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004e5f	              0x90	                                     nop	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4004e60	      0x3df5ffff6f	                     cmp eax, 0x6ffffff5	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4004e65	     0xf8435010000	                            je 0x4004fa0	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4004e6b	    0x413b87380300	           cmp eax, dword [r15 + 0x338] 	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4004e72	     0xf8428010000	                            je 0x4004fa0	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4004e78	            0x89e9	                            mov ecx, ebp	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4004e7a	          0x4c89f2	                            mov rdx, r14	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4004e7d	          0x4c89e6	                            mov rsi, r12	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4004e80	          0x4889df	                            mov rdi, rbx	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4004e83	    0x41ff97900000	                 call qword [r15 + 0x90]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4004e8a	            0x85c0	                           test eax, eax	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4004e8c	     0xf858ef9ffff	                           jne 0x4004820	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4004e92	      0x458b7c2404	               mov r15d, dword [r12 + 4]	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4004e97	          0x4585ff	                         test r15d, r15d	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4004e9a	     0xf8859030000	                            js 0x40051f9	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4004ea0	    0x418d87000000	             lea eax, [r15 - 0x70000000]	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4004ea7	      0x3dffffff0f	                      cmp eax, 0xfffffff	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4004eac	            0x761a	                           jbe 0x4004ec8	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4004eae	    0x418d87000000	             lea eax, [r15 - 0x60000000]	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4004eb5	      0x3dffffff0f	                      cmp eax, 0xfffffff	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4004eba	            0x770c	                            ja 0x4004ec8	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4004ebc	    0x41f644240901	                  test byte [r12 + 9], 1	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4004ec2	     0xf8438faffff	                            je 0x4004900	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4004ec8	      0xba05000000	                              mov edx, 5	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4004ecd	      0xbe00000000	                              mov esi, 0	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4004ed2	      0xbf00000000	                              mov edi, 0	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4004ed7	      0xe800000000	                          call 0x4004edc	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4004edc	          0x4c89f1	                            mov rcx, r14	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4004edf	          0x4889c7	                            mov rdi, rax	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4004ee2	          0x4489fa	                           mov edx, r15d	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4004ee5	            0x31c0	                            xor eax, eax	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4004ee7	          0x4889de	                            mov rsi, rbx	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4004eea	      0xe800000000	                          call 0x4004eef	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4004eef	            0x31c0	                            xor eax, eax	      2542	elf.c	FUNCTION_36
0x4004ef1	      0xe92ff9ffff	                           jmp 0x4004825	      2542	elf.c	FUNCTION_36
0x4004ef6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2542	elf.c	FUNCTION_36
0x4004f00	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4004f07	        0x498b1424	                    mov rdx, qword [r12]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f0b	    0x89a8840c0000	            mov dword [rax + 0xc84], ebp	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4004f11	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f18	    0x488990980200	            mov qword [rax + 0x298], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f1f	      0x498b542408	                mov rdx, qword [r12 + 8]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f24	    0x488990a00200	            mov qword [rax + 0x2a0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f2b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f30	    0x488990a80200	            mov qword [rax + 0x2a8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f37	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f3c	    0x488990b00200	            mov qword [rax + 0x2b0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f43	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f48	    0x488990b80200	            mov qword [rax + 0x2b8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f4f	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f54	    0x488990c00200	            mov qword [rax + 0x2c0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f5b	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f60	    0x488990c80200	            mov qword [rax + 0x2c8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f67	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f6c	    0x488990d00200	            mov qword [rax + 0x2d0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f73	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f78	    0x488990d80200	            mov qword [rax + 0x2d8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f7f	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      1004	elf.c	FUNCTION_26	IF_1
0x4004f85	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f8a	    0x488990e00200	            mov qword [rax + 0x2e0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4004f91	     0xf8589f8ffff	                           jne 0x4004820	      1004	elf.c	FUNCTION_26	IF_1
0x4004f97	      0xe9e4f7ffff	                           jmp 0x4004780	      1004	elf.c	FUNCTION_26	IF_1
0x4004f9c	         0xf1f4000	                         nop dword [rax]	      1004	elf.c	FUNCTION_26	IF_1
0x4004fa0	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      1004	elf.c	FUNCTION_26	IF_1
0x4004fa6	     0xf8496020000	                            je 0x4005242	      1004	elf.c	FUNCTION_26	IF_1
0x4004fac	          0x4c89e6	                            mov rsi, r12	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4004faf	          0x4889df	                            mov rdi, rbx	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4004fb2	      0xe800000000	                          call 0x4004fb7	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4004fb7	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4004fbc	      0xe964f8ffff	                           jmp 0x4004825	      2482	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4004fc1	     0xf1f80000000	                         nop dword [rax]	      2482	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4004fc8	      0xbe60000000	                           mov esi, 0x60	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4004fcd	          0x4889df	                            mov rdi, rbx	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4004fd0	      0x4c89442408	                 mov qword [rsp + 8], r8	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4004fd5	      0xe800000000	                          call 0x4004fda	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4004fda	          0x4885c0	                           test rax, rax	      2248	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4004fdd	     0xf8460f9ffff	                            je 0x4004943	      2248	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4004fe3	        0x498b1424	                    mov rdx, qword [r12]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4004fe7	          0x896850	             mov dword [rax + 0x50], ebp	      2250	elf.c	FUNCTION_36	SWITCH_1
0x4004fea	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4004fef	          0x488910	                    mov qword [rax], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4004ff2	      0x498b542408	                mov rdx, qword [r12 + 8]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4004ff7	        0x48895008	                mov qword [rax + 8], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4004ffb	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005000	        0x48895010	             mov qword [rax + 0x10], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005004	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005009	        0x48895018	             mov qword [rax + 0x18], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x400500d	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005012	        0x48895020	             mov qword [rax + 0x20], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005016	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x400501b	        0x48895028	             mov qword [rax + 0x28], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x400501f	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005024	        0x48895030	             mov qword [rax + 0x30], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005028	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x400502d	        0x48895038	             mov qword [rax + 0x38], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005031	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005036	        0x48895040	             mov qword [rax + 0x40], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x400503a	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x400503f	        0x48895048	             mov qword [rax + 0x48], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4005043	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x400504a	    0x488b8ae80200	           mov rcx, qword [rdx + 0x2e8] 	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4005051	        0x48894858	             mov qword [rax + 0x58], rcx	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4005055	    0x488982e80200	            mov qword [rdx + 0x2e8], rax	      2253	elf.c	FUNCTION_36	SWITCH_1	CALL_47
0x400505c	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005063	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4005067	        0x4a890402	               mov qword [rdx + r8], rax	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x400506b	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4005070	      0xe9b0f7ffff	                           jmp 0x4004825	      2255	elf.c	FUNCTION_36	SWITCH_1
0x4005075	         0xfb64003	               movzx eax, byte [rax + 3]	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4005079	      0xe9cbfbffff	                           jmp 0x4004c49	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400507e	            0x6690	                                     nop	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4005080	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4005085	        0x4883f803	                              cmp rax, 3	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4005089	     0xf86b4f8ffff	                           jbe 0x4004943	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x400508f	    0x49837c243804	               cmp qword [r12 + 0x38], 4	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4005095	     0xf85a8f8ffff	                           jne 0x4004943	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x400509b	            0xa803	                              test al, 3	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x400509d	     0xf85a0f8ffff	                           jne 0x4004943	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x40050a3	            0x89e9	                            mov ecx, ebp	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x40050a5	          0x4c89f2	                            mov rdx, r14	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x40050a8	          0x4c89e6	                            mov rsi, r12	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x40050ab	          0x4889df	                            mov rdi, rbx	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x40050ae	      0xe800000000	                          call 0x40050b3	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x40050b3	            0x85c0	                           test eax, eax	      2000	elf.c	FUNCTION_36
0x40050b5	           0xf95c0	                                setne al	      2000	elf.c	FUNCTION_36
0x40050b8	           0xfb6c0	                           movzx eax, al	      2000	elf.c	FUNCTION_36
0x40050bb	      0xe965f7ffff	                           jmp 0x4004825	      2000	elf.c	FUNCTION_36
0x40050c0	          0x4885f6	                           test rsi, rsi	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x40050c3	     0xf857af8ffff	                           jne 0x4004943	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x40050c9	    0x41c744242c00	               mov dword [r12 + 0x2c], 0	      2214	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40050d2	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x40050d7	      0xe949f7ffff	                           jmp 0x4004825	      2215	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40050dc	          0x4889df	                            mov rdi, rbx	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40050df	      0xe800000000	                          call 0x40050e4	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40050e4	          0x83f805	                              cmp eax, 5	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40050e7	            0x7409	                            je 0x40050f2	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40050e9	          0x83f808	                              cmp eax, 8	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40050ec	     0xf8551f8ffff	                           jne 0x4004943	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40050f2	      0x418b442428	            mov eax, dword [r12 + 0x28] 	      2000	elf.c	FUNCTION_36
0x40050f7	      0x2d00ff0000	                         sub eax, 0xff00	      2000	elf.c	FUNCTION_36
0x40050fc	          0x83f801	                              cmp eax, 1	      2000	elf.c	FUNCTION_36
0x40050ff	           0xf96c0	                                setbe al	      2000	elf.c	FUNCTION_36
0x4005102	           0xfb6c0	                           movzx eax, al	      2000	elf.c	FUNCTION_36
0x4005105	      0xe91bf7ffff	                           jmp 0x4004825	      2000	elf.c	FUNCTION_36
0x400510a	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x400510e	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4005111	      0x4189442428	             mov dword [r12 + 0x28], eax	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4005116	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x400511b	      0xe905f7ffff	                           jmp 0x4004825	      2000	elf.c	FUNCTION_36
0x4005120	            0x89e9	                            mov ecx, ebp	      2000	elf.c	FUNCTION_36
0x4005122	          0x4c89f2	                            mov rdx, r14	      2000	elf.c	FUNCTION_36
0x4005125	          0x4c89e6	                            mov rsi, r12	      2000	elf.c	FUNCTION_36
0x4005128	          0x4889df	                            mov rdi, rbx	      2000	elf.c	FUNCTION_36
0x400512b	      0xe820050000	call sym._bfd_elf_make_section_from_shdr.part.22	      2000	elf.c	FUNCTION_36
0x4005130	            0x85c0	                           test eax, eax	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4005132	     0xf85e0f8ffff	                           jne 0x4004a18	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4005138	            0x31c0	                            xor eax, eax	      2542	elf.c	FUNCTION_36
0x400513a	      0xe9e6f6ffff	                           jmp 0x4004825	      2542	elf.c	FUNCTION_36
0x400513f	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4005143	          0x4889c6	                            mov rsi, rax	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4005146	      0x4889442408	                mov qword [rsp + 8], rax	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x400514b	          0x4489c8	                            mov eax, r9d	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x400514e	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4005152	        0x448b5804	               mov r11d, dword [rax + 4]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4005156	        0x4183fb02	                             cmp r11d, 2	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x400515a	     0xf842bfbffff	                            je 0x4004c8b	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4005160	        0x4183fb0b	                           cmp r11d, 0xb	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4005164	     0xf8421fbffff	                            je 0x4004c8b	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x400516a	        0x4183fa01	                             cmp r10d, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400516e	     0xf8617fbffff	                           jbe 0x4004c8b	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4005174	        0x488d5608	                      lea rdx, [rsi + 8]	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4005178	      0xb801000000	                              mov eax, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400517d	            0x31f6	                            xor esi, esi	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400517f	            0xeb1c	                           jmp 0x400519d	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4005181	     0xf1f80000000	                         nop dword [rax]	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4005188	          0x83f90b	                            cmp ecx, 0xb	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x400518b	            0x741b	                            je 0x40051a8	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x400518d	          0x83c001	                              add eax, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4005190	        0x4883c208	                              add rdx, 8	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4005194	          0x4139c2	                           cmp r10d, eax	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4005197	     0xf84e8030000	                            je 0x4005585	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400519d	          0x488b0a	                    mov rcx, qword [rdx]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x40051a0	          0x8b4904	                mov ecx, dword [rcx + 4]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x40051a3	          0x83f902	                              cmp ecx, 2	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x40051a6	            0x75e0	                           jne 0x4005188	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x40051a8	            0x85f6	                           test esi, esi	      2366	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x40051aa	     0xf85dbfaffff	                           jne 0x4004c8b	      2366	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x40051b0	            0x89c6	                            mov esi, eax	      2371	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45
0x40051b2	            0xebd9	                           jmp 0x400518d	      2371	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45
0x40051b4	      0xba05000000	                              mov edx, 5	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40051b9	      0xbe00000000	                              mov esi, 0	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40051be	      0xbf00000000	                              mov edi, 0	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40051c3	      0x44894c2408	                mov dword [rsp + 8], r9d	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40051c8	      0xe800000000	                          call 0x40051cd	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40051cd	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40051d2	          0x4889c7	                            mov rdi, rax	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40051d5	          0x4189e8	                            mov r8d, ebp	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40051d8	            0x31c0	                            xor eax, eax	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40051da	          0x4c89f1	                            mov rcx, r14	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40051dd	          0x4889de	                            mov rsi, rbx	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40051e0	          0x4489ca	                            mov edx, r9d	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40051e3	      0xe800000000	                          call 0x40051e8	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40051e8	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      1004	elf.c	FUNCTION_26	IF_1
0x40051ee	     0xf852cf6ffff	                           jne 0x4004820	      1004	elf.c	FUNCTION_26	IF_1
0x40051f4	      0xe987f5ffff	                           jmp 0x4004780	      1004	elf.c	FUNCTION_26	IF_1
0x40051f9	    0x41f644240802	                  test byte [r12 + 8], 2	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x40051ff	     0xf84fbf6ffff	                            je 0x4004900	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4005205	      0xe9befcffff	                           jmp 0x4004ec8	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x400520a	          0x4489ce	                            mov esi, r9d	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400520d	          0x4889df	                            mov rdi, rbx	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005210	      0x4489542410	            mov dword [rsp + 0x10], r10d	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005215	      0x4c89442408	                 mov qword [rsp + 8], r8	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400521a	      0xe800000000	                          call 0x400521f	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400521f	            0x85c0	                           test eax, eax	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005221	     0xf841cf7ffff	                            je 0x4004943	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005227	      0x458b4c2428	            mov r9d, dword [r12 + 0x28] 	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400522c	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005233	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005238	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400523d	      0xe95dfaffff	                           jmp 0x4004c9f	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005242	            0x89e9	                            mov ecx, ebp	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005244	          0x4c89f2	                            mov rdx, r14	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005247	          0x4c89e6	                            mov rsi, r12	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400524a	          0x4889df	                            mov rdi, rbx	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400524d	      0xe8fe030000	call sym._bfd_elf_make_section_from_shdr.part.22	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4005252	            0x85c0	                           test eax, eax	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4005254	     0xf8552fdffff	                           jne 0x4004fac	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x400525a	            0x31c0	                            xor eax, eax	      2542	elf.c	FUNCTION_36
0x400525c	      0xe9c4f5ffff	                           jmp 0x4004825	      2542	elf.c	FUNCTION_36
0x4005261	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4005264	      0x4189442428	             mov dword [r12 + 0x28], eax	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4005269	      0xe9b2f5ffff	                           jmp 0x4004820	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x400526e	    0x448b88fc0200	           mov r9d, dword [rax + 0x2fc] 	      2297	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_65
0x4005275	        0x4183f901	                              cmp r9d, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4005279	     0xf8681f6ffff	                           jbe 0x4004900	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400527f	      0xba08000000	                              mov edx, 8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4005284	      0x4c89642410	             mov qword [rsp + 0x10], r12	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4005289	      0x4c896c2408	                mov qword [rsp + 8], r13	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400528e	    0x41bf01000000	                             mov r15d, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4005294	          0x4189ed	                           mov r13d, ebp	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4005297	      0x4c89442418	              mov qword [rsp + 0x18], r8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400529c	          0x4589cc	                           mov r12d, r9d	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400529f	          0x4889d5	                            mov rbp, rdx	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40052a2	            0xeb19	                           jmp 0x40052bd	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40052a4	         0xf1f4000	                         nop dword [rax]	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40052a8	        0x4183c701	                             add r15d, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40052ac	        0x4883c508	                              add rbp, 8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40052b0	          0x4539fc	                          cmp r12d, r15d	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40052b3	     0xf84ff020000	                            je 0x40055b8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40052b9	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40052bd	        0x488b0c29	              mov rcx, qword [rcx + rbp]	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x40052c1	        0x443b6928	           cmp r13d, dword [rcx + 0x28] 	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x40052c5	            0x75e1	                           jne 0x40052a8	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x40052c7	          0x4539fd	                          cmp r13d, r15d	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x40052ca	     0xf84fa020000	                            je 0x40055ca	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x40052d0	          0x4489fe	                           mov esi, r15d	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40052d3	          0x4889df	                            mov rdi, rbx	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40052d6	      0xe800000000	                          call 0x40052db	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40052db	            0x85c0	                           test eax, eax	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40052dd	     0xf84e7020000	                            je 0x40055ca	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40052e3	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40052ea	    0x4439b8780c00	          cmp dword [rax + 0xc78], r15d 	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40052f1	     0xf849d010000	                            je 0x4005494	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40052f7	    0x4439b87c0c00	          cmp dword [rax + 0xc7c], r15d 	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40052fe	            0x75a8	                           jne 0x40052a8	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x4005300	          0x4489ed	                           mov ebp, r13d	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x4005303	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x4005308	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x400530d	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x4005312	    0x488db8a80100	                  lea rdi, [rax + 0x1a8]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4005319	          0x4c89e6	                            mov rsi, r12	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400531c	      0xb914000000	                           mov ecx, 0x14	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4005321	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4005323	          0x4c89f2	                            mov rdx, r14	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x4005326	            0x89e9	                            mov ecx, ebp	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x4005328	          0x4889df	                            mov rdi, rbx	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x400532b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x4005332	    0x488db0a80100	                  lea rsi, [rax + 0x1a8]	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x4005339	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x400533d	        0x4a893400	               mov qword [rax + r8], rsi	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x4005341	      0xe800000000	                          call 0x4005346	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x4005346	      0xe9daf4ffff	                           jmp 0x4004825	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x400534b	    0x89aa7c0c0000	            mov dword [rdx + 0xc7c], ebp	      2229	elf.c	FUNCTION_36	SWITCH_1	CALL_39
0x4005351	        0x498b1424	                    mov rdx, qword [r12]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005355	            0x89e9	                            mov ecx, ebp	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005357	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400535e	          0x4889df	                            mov rdi, rbx	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4005361	    0x488990580100	            mov qword [rax + 0x158], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005368	      0x498b542408	                mov rdx, qword [r12 + 8]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400536d	    0x488990600100	            mov qword [rax + 0x160], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005374	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005379	    0x488990680100	            mov qword [rax + 0x168], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005380	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005385	    0x488990700100	            mov qword [rax + 0x170], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400538c	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005391	    0x488990780100	            mov qword [rax + 0x178], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4005398	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400539d	    0x488990800100	            mov qword [rax + 0x180], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053a4	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053a9	    0x488990880100	            mov qword [rax + 0x188], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053b0	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053b5	    0x488990900100	            mov qword [rax + 0x190], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053bc	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053c1	    0x488990980100	            mov qword [rax + 0x198], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053c8	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053cd	    0x488990a00100	            mov qword [rax + 0x1a0], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40053d4	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x40053db	          0x4c89f2	                            mov rdx, r14	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x40053de	    0x488db0580100	                  lea rsi, [rax + 0x158]	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x40053e5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x40053e9	        0x4a893400	               mov qword [rax + r8], rsi	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x40053ed	    0x814b44000200	            or dword [rbx + 0x44], 0x200	      2232	elf.c	FUNCTION_36	SWITCH_1
0x40053f4	      0xe800000000	                          call 0x40053f9	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x40053f9	      0xe927f4ffff	                           jmp 0x4004825	      2237	elf.c	FUNCTION_36	SWITCH_1
0x40053fe	        0x498b1424	                    mov rdx, qword [r12]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005402	    0x488990b80000	             mov qword [rax + 0xb8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005409	      0x498b542408	                mov rdx, qword [r12 + 8]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400540e	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005415	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400541a	    0x488990c80000	             mov qword [rax + 0xc8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005421	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005426	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400542d	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005432	    0x488990d80000	             mov qword [rax + 0xd8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005439	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400543e	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005445	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400544a	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005451	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005456	    0x488990f00000	             mov qword [rax + 0xf0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400545d	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005462	    0x488990f80000	             mov qword [rax + 0xf8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005469	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400546e	    0x488990000100	            mov qword [rax + 0x100], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4005475	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x400547c	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005480	    0x4805b8000000	                           add rax, 0xb8	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4005486	        0x4a890402	               mov qword [rdx + r8], rax	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x400548a	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x400548f	      0xe991f3ffff	                           jmp 0x4004825	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4005494	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4005499	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x400549e	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x40054a3	        0x498b1424	                    mov rdx, qword [r12]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054a7	    0x488990080100	            mov qword [rax + 0x108], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054ae	      0x498b542408	                mov rdx, qword [r12 + 8]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054b3	    0x488990100100	            mov qword [rax + 0x110], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054ba	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054bf	    0x488990180100	            mov qword [rax + 0x118], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054c6	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054cb	    0x488990200100	            mov qword [rax + 0x120], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054d2	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054d7	    0x488990280100	            mov qword [rax + 0x128], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054de	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054e3	    0x488990300100	            mov qword [rax + 0x130], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054ea	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054ef	    0x488990380100	            mov qword [rax + 0x138], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054f6	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40054fb	    0x488990400100	            mov qword [rax + 0x140], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4005502	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4005507	    0x488990480100	            mov qword [rax + 0x148], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400550e	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4005513	    0x488990500100	            mov qword [rax + 0x150], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400551a	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4005521	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4005525	    0x480508010000	                          add rax, 0x108	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x400552b	        0x4a890402	               mov qword [rdx + r8], rax	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x400552f	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4005534	      0xe9ecf2ffff	                           jmp 0x4004825	      2274	elf.c	FUNCTION_36	SWITCH_1	IF_34
0x4005539	    0x8b97fc020000	           mov edx, dword [rdi + 0x2fc] 	      2173	elf.c	FUNCTION_36	SWITCH_1	CALL_31
0x400553f	          0x8d7501	                      lea esi, [rbp + 1]	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005542	            0x39f2	                            cmp edx, esi	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005544	            0x7622	                           jbe 0x4005568	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005546	        0x488b4f58	            mov rcx, qword [rdi + 0x58] 	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x400554a	            0xeb0b	                           jmp 0x4005557	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x400554c	         0xf1f4000	                         nop dword [rax]	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005550	          0x83c601	                              add esi, 1	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005553	            0x39f2	                            cmp edx, esi	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005555	            0x7611	                           jbe 0x4005568	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4005557	            0x89f0	                            mov eax, esi	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4005559	        0x488b04c1	            mov rax, qword [rcx + rax*8]	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x400555d	        0x83780412	               cmp dword [rax + 4], 0x12	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005561	            0x75ed	                           jne 0x4005550	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005563	          0x3b6828	            cmp ebp, dword [rax + 0x28] 	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005566	            0x75e8	                           jne 0x4005550	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4005568	            0x39f2	                            cmp edx, esi	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x400556a	     0xf8482000000	                            je 0x40055f2	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x4005570	            0x39ee	                            cmp esi, ebp	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x4005572	     0xf84a8f2ffff	                            je 0x4004820	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x4005578	          0x4889df	                            mov rdi, rbx	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x400557b	      0xe800000000	                          call 0x4005580	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4005580	      0xe9a0f2ffff	                           jmp 0x4004825	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4005585	            0x85f6	                           test esi, esi	      2374	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4005587	     0xf84fef6ffff	                            je 0x4004c8b	      2374	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400558d	            0x89f0	                            mov eax, esi	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400558f	      0x488b742408	                mov rsi, qword [rsp + 8]	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4005594	      0x4189442428	             mov dword [r12 + 0x28], eax	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4005599	          0x4989c1	                             mov r9, rax	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400559c	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x40055a0	        0x448b5804	               mov r11d, dword [rax + 4]	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x40055a4	      0xe9e2f6ffff	                           jmp 0x4004c8b	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x40055a9	      0xba05000000	                              mov edx, 5	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40055ae	      0xbe00000000	                              mov esi, 0	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40055b3	      0xe94ef2ffff	                           jmp 0x4004806	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40055b8	          0x4489ed	                           mov ebp, r13d	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40055bb	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40055c0	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40055c5	      0xe936f3ffff	                           jmp 0x4004900	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40055ca	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x40055cf	            0x31c0	                            xor eax, eax	      2542	elf.c	FUNCTION_36
0x40055d1	      0xe94ff2ffff	                           jmp 0x4004825	      2542	elf.c	FUNCTION_36
0x40055d6	            0x89e9	                            mov ecx, ebp	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x40055d8	          0x4c89f2	                            mov rdx, r14	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x40055db	          0x4889df	                            mov rdi, rbx	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x40055de	      0xe800000000	                          call 0x40055e3	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x40055e3	            0x85c0	                           test eax, eax	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x40055e5	     0xf8504f6ffff	                           jne 0x4004bef	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x40055eb	            0x31c0	                            xor eax, eax	      2542	elf.c	FUNCTION_36
0x40055ed	      0xe933f2ffff	                           jmp 0x4004825	      2542	elf.c	FUNCTION_36
0x40055f2	          0x83fd01	                              cmp ebp, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40055f5	            0x763b	                           jbe 0x4005632	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40055f7	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40055fb	      0xbe01000000	                              mov esi, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005600	        0x4883c008	                              add rax, 8	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005604	            0xeb19	                           jmp 0x400561f	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005606	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005610	          0x83c601	                              add esi, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005613	        0x4883c008	                              add rax, 8	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005617	            0x39f5	                            cmp ebp, esi	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005619	     0xf8401f2ffff	                            je 0x4004820	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x400561f	          0x488b10	                    mov rdx, qword [rax]	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x4005622	        0x837a0412	               cmp dword [rdx + 4], 0x12	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005626	            0x75e8	                           jne 0x4005610	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005628	          0x3b6a28	            cmp ebp, dword [rdx + 0x28] 	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x400562b	            0x75e3	                           jne 0x4005610	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x400562d	      0xe93effffff	                           jmp 0x4005570	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x4005632	      0xbe01000000	                              mov esi, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4005637	      0xe934ffffff	                           jmp 0x4005570	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x400563c	        0x4c8d7070	                   lea r14, [rax + 0x70]	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4005640	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4005644	      0xe903f7ffff	                           jmp 0x4004d4c	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
_bfd_elf_setup_sections	functions,0:CALL,22:FOR,2:WHILE,1:SWITCH,0:IF,11:DO,0:ELSE,4	193
0x4003b00	            0x4157	                                push r15	       845	elf.c	FUNCTION_22
0x4003b02	            0x4156	                                push r14	       845	elf.c	FUNCTION_22
0x4003b04	          0x4989ff	                            mov r15, rdi	       845	elf.c	FUNCTION_22
0x4003b07	            0x4155	                                push r13	       845	elf.c	FUNCTION_22
0x4003b09	            0x4154	                                push r12	       845	elf.c	FUNCTION_22
0x4003b0b	    0x41b801000000	                              mov r8d, 1	       852	elf.c	FUNCTION_22	FOR_1
0x4003b11	              0x55	                                push rbp	       845	elf.c	FUNCTION_22
0x4003b12	              0x53	                                push rbx	       845	elf.c	FUNCTION_22
0x4003b13	        0x4883ec28	                           sub rsp, 0x28	       845	elf.c	FUNCTION_22
0x4003b17	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       847	elf.c	FUNCTION_22	CALL_1
0x4003b1e	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	       852	elf.c	FUNCTION_22	FOR_1
0x4003b25	    0x8b80700c0000	           mov eax, dword [rax + 0xc70] 	       847	elf.c	FUNCTION_22	CALL_1
0x4003b2b	          0x4885db	                           test rbx, rbx	       852	elf.c	FUNCTION_22	FOR_1
0x4003b2e	        0x89442404	                mov dword [rsp + 4], eax	       847	elf.c	FUNCTION_22	CALL_1
0x4003b32	            0x7565	                           jne 0x4003b99	       852	elf.c	FUNCTION_22	FOR_1
0x4003b34	      0xe9bb000000	                           jmp 0x4003bf4	       852	elf.c	FUNCTION_22	FOR_1
0x4003b39	     0xf1f80000000	                         nop dword [rax]	       852	elf.c	FUNCTION_22	FOR_1
0x4003b40	          0x8b6828	            mov ebp, dword [rax + 0x28] 	       857	elf.c	FUNCTION_22	FOR_1	IF_1
0x4003b43	            0x85ed	                           test ebp, ebp	       861	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2
0x4003b45	     0xf8565010000	                           jne 0x4003cb0	       861	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2
0x4003b4b	        0x498b4708	                mov rax, qword [r15 + 8]	       863	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	CALL_3
0x4003b4f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4003b56	    0x488ba8e80200	           mov rbp, qword [rax + 0x2e8] 	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4003b5d	          0x4885ed	                           test rbp, rbp	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4003b60	            0x742e	                            je 0x4003b90	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4003b62	      0xba05000000	                              mov edx, 5	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4003b67	      0xbe00000000	                              mov esi, 0	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4003b6c	      0xbf00000000	                              mov edi, 0	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4003b71	      0x4489442408	                mov dword [rsp + 8], r8d	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4003b76	      0xe800000000	                          call 0x4003b7b	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4003b7b	          0x4889da	                            mov rdx, rbx	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4003b7e	          0x4889c7	                            mov rdi, rax	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4003b81	          0x4c89fe	                            mov rsi, r15	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4003b84	            0x31c0	                            xor eax, eax	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4003b86	            0xffd5	                                call rbp	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4003b88	      0x448b442408	                mov r8d, dword [rsp + 8]	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4003b8d	           0xf1f00	                         nop dword [rax]	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4003b90	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       852	elf.c	FUNCTION_22	FOR_1
0x4003b94	          0x4885db	                           test rbx, rbx	       852	elf.c	FUNCTION_22	FOR_1
0x4003b97	            0x7457	                            je 0x4003bf0	       852	elf.c	FUNCTION_22	FOR_1
0x4003b99	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	       854	elf.c	FUNCTION_22	FOR_1	CALL_2
0x4003ba0	        0xf6400880	               test byte [rax + 8], 0x80	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x4003ba4	            0x759a	                           jne 0x4003b40	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x4003ba6	        0x83780411	               cmp dword [rax + 4], 0x11	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x4003baa	            0x75e4	                           jne 0x4003b90	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x4003bac	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x4003bb4	            0x75da	                           jne 0x4003b90	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x4003bb6	    0x8ba888000000	            mov ebp, dword [rax + 0x88] 	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4003bbc	      0xba05000000	                              mov edx, 5	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4003bc1	      0xbe00000000	                              mov esi, 0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4003bc6	      0xbf00000000	                              mov edi, 0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4003bcb	      0xe800000000	                          call 0x4003bd0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4003bd0	            0x89ea	                            mov edx, ebp	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4003bd2	          0x4889c7	                            mov rdi, rax	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4003bd5	          0x4c89fe	                            mov rsi, r15	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4003bd8	            0x31c0	                            xor eax, eax	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4003bda	      0xe800000000	                          call 0x4003bdf	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4003bdf	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       852	elf.c	FUNCTION_22	FOR_1
0x4003be3	          0x4531c0	                            xor r8d, r8d	       902	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x4003be6	          0x4885db	                           test rbx, rbx	       852	elf.c	FUNCTION_22	FOR_1
0x4003be9	            0x75ae	                           jne 0x4003b99	       852	elf.c	FUNCTION_22	FOR_1
0x4003beb	       0xf1f440000	                   nop dword [rax + rax]	       852	elf.c	FUNCTION_22	FOR_1
0x4003bf0	        0x8b442404	                mov eax, dword [rsp + 4]	       852	elf.c	FUNCTION_22	FOR_1
0x4003bf4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       907	elf.c	FUNCTION_22	IF_7
0x4003bf7	     0xf849d000000	                            je 0x4003c9a	       907	elf.c	FUNCTION_22	IF_7
0x4003bfd	            0x85c0	                           test eax, eax	       910	elf.c	FUNCTION_22	FOR_2
0x4003bff	     0xf8495000000	                            je 0x4003c9a	       910	elf.c	FUNCTION_22	FOR_2
0x4003c05	          0x4531f6	                          xor r14d, r14d	       910	elf.c	FUNCTION_22	FOR_2
0x4003c08	          0x4531ed	                          xor r13d, r13d	       910	elf.c	FUNCTION_22	FOR_2
0x4003c0b	       0xf1f440000	                   nop dword [rax + rax]	       910	elf.c	FUNCTION_22	FOR_2
0x4003c10	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4003c17	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4003c1e	        0x4a8b2c30	              mov rbp, qword [rax + r14]	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4003c22	          0x4885ed	                           test rbp, rbp	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c25	     0xf8475010000	                            je 0x4003da0	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c2b	      0x48837d4000	               cmp qword [rbp + 0x40], 0	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c30	     0xf846a010000	                            je 0x4003da0	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c36	        0x488b5d48	            mov rbx, qword [rbp + 0x48] 	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c3a	          0x4885db	                           test rbx, rbx	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c3d	     0xf845d010000	                            je 0x4003da0	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c43	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c47	        0x48c1e802	                              shr rax, 2	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c4b	          0x83e801	                              sub eax, 1	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c4e	        0x4c8d24c3	                  lea r12, [rbx + rax*8]	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003c52	          0x4c39e3	                            cmp rbx, r12	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4003c55	            0x7430	                            je 0x4003c87	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4003c57	        0x4883c308	                              add rbx, 8	       932	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4003c5b	          0x488b03	                    mov rax, qword [rbx]	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4003c5e	          0x4885c0	                           test rax, rax	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4003c61	            0x74ef	                            je 0x4003c52	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4003c63	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4003c67	          0x4885d2	                           test rdx, rdx	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4003c6a	     0xf84c0000000	                            je 0x4003d30	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4003c70	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4003c77	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4003c7b	          0x4c39e3	                            cmp rbx, r12	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4003c7e	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4003c85	            0x75d0	                           jne 0x4003c57	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4003c87	        0x4183c501	                             add r13d, 1	       910	elf.c	FUNCTION_22	FOR_2
0x4003c8b	        0x4983c608	                              add r14, 8	       910	elf.c	FUNCTION_22	FOR_2
0x4003c8f	      0x44396c2404	               cmp dword [rsp + 4], r13d	       910	elf.c	FUNCTION_22	FOR_2
0x4003c94	     0xf8576ffffff	                           jne 0x4003c10	       910	elf.c	FUNCTION_22	FOR_2
0x4003c9a	        0x4883c428	                           add rsp, 0x28	       958	elf.c	FUNCTION_22
0x4003c9e	          0x4489c0	                            mov eax, r8d	       958	elf.c	FUNCTION_22
0x4003ca1	              0x5b	                                 pop rbx	       958	elf.c	FUNCTION_22
0x4003ca2	              0x5d	                                 pop rbp	       958	elf.c	FUNCTION_22
0x4003ca3	            0x415c	                                 pop r12	       958	elf.c	FUNCTION_22
0x4003ca5	            0x415d	                                 pop r13	       958	elf.c	FUNCTION_22
0x4003ca7	            0x415e	                                 pop r14	       958	elf.c	FUNCTION_22
0x4003ca9	            0x415f	                                 pop r15	       958	elf.c	FUNCTION_22
0x4003cab	              0xc3	                                     ret	       958	elf.c	FUNCTION_22
0x4003cac	         0xf1f4000	                         nop dword [rax]	       958	elf.c	FUNCTION_22
0x4003cb0	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4003cb7	    0x3baafc020000	           cmp ebp, dword [rdx + 0x2fc] 	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4003cbd	            0x7249	                            jb 0x4003d08	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4003cbf	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003cc6	      0xba05000000	                              mov edx, 5	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4003ccb	      0xbe00000000	                              mov esi, 0	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4003cd0	      0xbf00000000	                              mov edi, 0	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4003cd5	      0xe800000000	                          call 0x4003cda	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4003cda	            0x89ea	                            mov edx, ebp	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003cdc	          0x4889c7	                            mov rdi, rax	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003cdf	          0x4889d9	                            mov rcx, rbx	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003ce2	            0x31c0	                            xor eax, eax	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003ce4	          0x4c89e6	                            mov rsi, r12	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003ce7	      0xe800000000	                          call 0x4003cec	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003cec	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003cf3	            0x31d2	                            xor edx, edx	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4003cf5	          0x4531c0	                            xor r8d, r8d	       889	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x4003cf8	    0x488990900000	             mov qword [rax + 0x90], rdx	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4003cff	      0xe98cfeffff	                           jmp 0x4003b90	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4003d04	         0xf1f4000	                         nop dword [rax]	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4003d08	        0x488b7258	            mov rsi, qword [rdx + 0x58] 	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4003d0c	            0x89e9	                            mov ecx, ebp	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4003d0e	        0x488b14ce	            mov rdx, qword [rsi + rcx*8]	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x4003d12	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x4003d16	          0x4885d2	                           test rdx, rdx	       883	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x4003d19	            0x74a4	                            je 0x4003cbf	       883	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x4003d1b	    0x488990900000	             mov qword [rax + 0x90], rdx	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4003d22	      0xe969feffff	                           jmp 0x4003b90	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4003d27	    0x660f1f840000	                    nop word [rax + rax]	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4003d30	          0x8b5004	                mov edx, dword [rax + 4]	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4003d33	          0x83fa04	                              cmp edx, 4	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4003d36	     0xf8416ffffff	                            je 0x4003c52	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4003d3c	          0x83fa09	                              cmp edx, 9	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4003d3f	     0xf840dffffff	                            je 0x4003c52	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4003d45	            0x8b10	                    mov edx, dword [rax]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d47	        0x4c8b4540	              mov r8, qword [rbp + 0x40]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d4b	      0xb900000000	                              mov ecx, 0	       331	elf.c	FUNCTION_17	IF_1
0x4003d50	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x4003d52	     0xf8588000000	                           jne 0x4003de0	       330	elf.c	FUNCTION_17	IF_1
0x4003d58	          0x8b4004	                mov eax, dword [rax + 4]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d5b	      0xba05000000	                              mov edx, 5	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4003d60	      0xbe00000000	                              mov esi, 0	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4003d65	      0xbf00000000	                              mov edi, 0	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4003d6a	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4003d6f	      0x4c89442410	              mov qword [rsp + 0x10], r8	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4003d74	        0x89442408	                mov dword [rsp + 8], eax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d78	      0xe800000000	                          call 0x4003d7d	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4003d7d	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d82	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d87	          0x4889c7	                            mov rdi, rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d8a	        0x8b542408	                mov edx, dword [rsp + 8]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d8e	          0x4c89fe	                            mov rsi, r15	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d91	            0x31c0	                            xor eax, eax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d93	      0xe800000000	                          call 0x4003d98	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003d98	          0x4531c0	                            xor r8d, r8d	       952	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4003d9b	      0xe9b2feffff	                           jmp 0x4003c52	       952	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4003da0	      0xba05000000	                              mov edx, 5	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4003da5	      0xbe00000000	                              mov esi, 0	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4003daa	      0xbf00000000	                              mov edi, 0	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4003daf	      0xe800000000	                          call 0x4003db4	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4003db4	          0x4489ea	                           mov edx, r13d	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4003db7	          0x4889c7	                            mov rdi, rax	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4003dba	          0x4c89fe	                            mov rsi, r15	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4003dbd	            0x31c0	                            xor eax, eax	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4003dbf	        0x4183c501	                             add r13d, 1	       910	elf.c	FUNCTION_22	FOR_2
0x4003dc3	        0x4983c608	                              add r14, 8	       910	elf.c	FUNCTION_22	FOR_2
0x4003dc7	      0xe800000000	                          call 0x4003dcc	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4003dcc	          0x4531c0	                            xor r8d, r8d	       923	elf.c	FUNCTION_22	FOR_2	IF_8
0x4003dcf	      0x44396c2404	               cmp dword [rsp + 4], r13d	       910	elf.c	FUNCTION_22	FOR_2
0x4003dd4	     0xf8536feffff	                           jne 0x4003c10	       910	elf.c	FUNCTION_22	FOR_2
0x4003dda	      0xe9bbfeffff	                           jmp 0x4003c9a	       910	elf.c	FUNCTION_22	FOR_2
0x4003ddf	              0x90	                                     nop	       910	elf.c	FUNCTION_22	FOR_2
0x4003de0	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003de7	          0x4c89ff	                            mov rdi, r15	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003dea	      0x4c89442408	                 mov qword [rsp + 8], r8	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003def	          0x8b7050	            mov esi, dword [rax + 0x50] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003df2	      0xe869dcffff	call sym.bfd_elf_string_from_elf_section.part.20	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003df7	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003dfc	          0x4889c1	                            mov rcx, rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003dff	          0x488b03	                    mov rax, qword [rbx]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4003e02	      0xe951ffffff	                           jmp 0x4003d58	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
bfd_sym_from_r_symndx	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,3:DO,0:ELSE,0	144
0x40065d0	            0x4157	                                push r15	      2560	elf.c	FUNCTION_37
0x40065d2	            0x4156	                                push r14	      2560	elf.c	FUNCTION_37
0x40065d4	            0x4155	                                push r13	      2560	elf.c	FUNCTION_37
0x40065d6	            0x4154	                                push r12	      2560	elf.c	FUNCTION_37
0x40065d8	          0x4989d5	                            mov r13, rdx	      2560	elf.c	FUNCTION_37
0x40065db	              0x55	                                push rbp	      2560	elf.c	FUNCTION_37
0x40065dc	              0x53	                                push rbx	      2560	elf.c	FUNCTION_37
0x40065dd	            0x89d5	                            mov ebp, edx	      2561	elf.c	FUNCTION_37
0x40065df	          0x83e51f	                           and ebp, 0x1f	      2561	elf.c	FUNCTION_37
0x40065e2	          0x4889fb	                            mov rbx, rdi	      2560	elf.c	FUNCTION_37
0x40065e5	          0x4989f4	                            mov r12, rsi	      2560	elf.c	FUNCTION_37
0x40065e8	        0x4883ec48	                           sub rsp, 0x48	      2560	elf.c	FUNCTION_37
0x40065ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      2560	elf.c	FUNCTION_37
0x40065f5	      0x4889442438	             mov qword [rsp + 0x38], rax	      2560	elf.c	FUNCTION_37
0x40065fa	            0x31c0	                            xor eax, eax	      2560	elf.c	FUNCTION_37
0x40065fc	          0x483937	                    cmp qword [rdi], rsi	      2563	elf.c	FUNCTION_37	IF_1
0x40065ff	     0xf844b010000	                            je 0x4006750	      2563	elf.c	FUNCTION_37	IF_1
0x4006605	      0x4d8b4c2408	                 mov r9, qword [r12 + 8]	       400	elf.c	FUNCTION_18	IF_1	CALL_1
0x400660a	    0x4d8b8424f800	              mov r8, qword [r12 + 0xf8]	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x4006612	      0x4183790805	                   cmp dword [r9 + 8], 5	       400	elf.c	FUNCTION_18	IF_1	CALL_1
0x4006617	        0x498d7068	                    lea rsi, [r8 + 0x68]	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x400661b	     0xf85d6010000	                           jne 0x40067f7	       400	elf.c	FUNCTION_18	IF_1	CALL_1
0x4006621	    0x4d8bb0e80200	            mov r14, qword [r8 + 0x2e8] 	       408	elf.c	FUNCTION_18	IF_3	CALL_3
0x4006628	          0x4d85f6	                           test r14, r14	       408	elf.c	FUNCTION_18	IF_3	CALL_3
0x400662b	     0xf844f010000	                            je 0x4006780	       408	elf.c	FUNCTION_18	IF_3	CALL_3
0x4006631	        0x498b7858	              mov rdi, qword [r8 + 0x58]	       411	elf.c	FUNCTION_18	IF_3	CALL_4
0x4006635	    0x418b88fc0200	            mov ecx, dword [r8 + 0x2fc] 	       411	elf.c	FUNCTION_18	IF_3	CALL_4
0x400663c	          0x4c89f0	                            mov rax, r14	       411	elf.c	FUNCTION_18	IF_3	CALL_4
0x400663f	              0x90	                                     nop	       411	elf.c	FUNCTION_18	IF_3	CALL_4
0x4006640	          0x8b5028	            mov edx, dword [rax + 0x28] 	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_6
0x4006643	            0x39ca	                            cmp edx, ecx	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_6
0x4006645	            0x730a	                           jae 0x4006651	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_6
0x4006647	        0x483b34d7	            cmp rsi, qword [rdi + rdx*8]	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x400664b	     0xf841f010000	                            je 0x4006770	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x4006651	        0x488b4058	            mov rax, qword [rax + 0x58] 	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_5
0x4006655	          0x4885c0	                           test rax, rax	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_5
0x4006658	            0x75e6	                           jne 0x4006640	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_5
0x400665a	      0x4c89742408	                mov qword [rsp + 8], r14	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_8
0x400665f	    0x4d8bb1680300	            mov r14, qword [r9 + 0x368] 	       441	elf.c	FUNCTION_18	CALL_9
0x4006666	          0x4c89ee	                            mov rsi, r13	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4006669	            0x31d2	                            xor edx, edx	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400666b	          0x4c89e7	                            mov rdi, r12	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400666e	    0x498b86000300	           mov rax, qword [r14 + 0x300] 	       442	elf.c	FUNCTION_18
0x4006675	      0x440fb67805	              movzx r15d, byte [rax + 5]	       442	elf.c	FUNCTION_18
0x400667a	        0x490faff7	                           imul rsi, r15	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400667e	    0x4903b0800000	              add rsi, qword [r8 + 0x80]	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4006685	      0xe800000000	                          call 0x400668a	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400668a	            0x85c0	                           test eax, eax	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400668c	            0x742a	                            je 0x40066b8	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400668e	            0x31c0	                            xor eax, eax	      2572	elf.c	FUNCTION_37	IF_1	IF_2
0x4006690	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      2583	elf.c	FUNCTION_37
0x4006695	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2583	elf.c	FUNCTION_37
0x400669e	     0xf8567010000	                           jne 0x400680b	      2583	elf.c	FUNCTION_37
0x40066a4	        0x4883c448	                           add rsp, 0x48	      2583	elf.c	FUNCTION_37
0x40066a8	              0x5b	                                 pop rbx	      2583	elf.c	FUNCTION_37
0x40066a9	              0x5d	                                 pop rbp	      2583	elf.c	FUNCTION_37
0x40066aa	            0x415c	                                 pop r12	      2583	elf.c	FUNCTION_37
0x40066ac	            0x415d	                                 pop r13	      2583	elf.c	FUNCTION_37
0x40066ae	            0x415e	                                 pop r14	      2583	elf.c	FUNCTION_37
0x40066b0	            0x415f	                                 pop r15	      2583	elf.c	FUNCTION_37
0x40066b2	              0xc3	                                     ret	      2583	elf.c	FUNCTION_37
0x40066b3	       0xf1f440000	                   nop dword [rax + rax]	      2583	elf.c	FUNCTION_37
0x40066b8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x40066bd	          0x4c89e2	                            mov rdx, r12	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x40066c0	          0x4c89fe	                            mov rsi, r15	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x40066c3	      0xe800000000	                          call 0x40066c8	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x40066c8	          0x4939c7	                            cmp r15, rax	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x40066cb	            0x75c1	                           jne 0x400668e	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x40066cd	      0x488b442408	                mov rax, qword [rsp + 8]	       458	elf.c	FUNCTION_18	IF_10
0x40066d2	          0x4885c0	                           test rax, rax	       458	elf.c	FUNCTION_18	IF_10
0x40066d5	            0x740b	                            je 0x40066e2	       458	elf.c	FUNCTION_18	IF_10
0x40066d7	      0x4883782000	               cmp qword [rax + 0x20], 0	       458	elf.c	FUNCTION_18	IF_10
0x40066dc	     0xf85ac000000	                           jne 0x400678e	       458	elf.c	FUNCTION_18	IF_10
0x40066e2	            0x31d2	                            xor edx, edx	       459	elf.c	FUNCTION_18	IF_10
0x40066e4	        0x488d4508	                      lea rax, [rbp + 8]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40066e8	      0x488d742420	                   lea rsi, [rsp + 0x20]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40066ed	          0x4c89e7	                            mov rdi, r12	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40066f0	        0x48c1e005	                              shl rax, 5	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40066f4	      0x4c8d7c0308	                lea r15, [rbx + rax + 8]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40066f9	    0x498b86000300	           mov rax, qword [r14 + 0x300] 	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x4006700	          0x4c89f9	                            mov rcx, r15	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x4006703	          0xff5030	                 call qword [rax + 0x30]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x4006706	            0x85c0	                           test eax, eax	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x4006708	     0xf84c0000000	                            je 0x40067ce	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400670e	          0x4c3b23	                    cmp r12, qword [rbx]	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x4006711	            0x742d	                            je 0x4006740	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x4006713	        0x488d7b10	                   lea rdi, [rbx + 0x10]	        90	string3.h	FUNCTION_224	CALL_6
0x4006717	            0x89da	                            mov edx, ebx	        90	string3.h	FUNCTION_224	CALL_6
0x4006719	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	        90	string3.h	FUNCTION_224	CALL_6
0x4006720	        0x48894308	                mov qword [rbx + 8], rax	        90	string3.h	FUNCTION_224	CALL_6
0x4006724	    0x488983000100	            mov qword [rbx + 0x100], rax	        90	string3.h	FUNCTION_224	CALL_6
0x400672b	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_224	CALL_6
0x400672f	            0x29fa	                            sub edx, edi	        90	string3.h	FUNCTION_224	CALL_6
0x4006731	    0x8d8a08010000	                  lea ecx, [rdx + 0x108]	        90	string3.h	FUNCTION_224	CALL_6
0x4006737	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_224	CALL_6
0x400673a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x400673d	          0x4c8923	                    mov qword [rbx], r12	      2577	elf.c	FUNCTION_37	IF_1	IF_3
0x4006740	      0x4c896ceb08	        mov qword [rbx + rbp*8 + 8], r13	      2579	elf.c	FUNCTION_37	IF_1
0x4006745	          0x4c89f8	                            mov rax, r15	      2579	elf.c	FUNCTION_37	IF_1
0x4006748	      0xe943ffffff	                           jmp 0x4006690	      2582	elf.c	FUNCTION_37
0x400674d	           0xf1f00	                         nop dword [rax]	      2582	elf.c	FUNCTION_37
0x4006750	            0x89e8	                            mov eax, ebp	      2563	elf.c	FUNCTION_37	IF_1
0x4006752	      0x483b54c708	       cmp rdx, qword [rdi + rax*8 + 8] 	      2563	elf.c	FUNCTION_37	IF_1
0x4006757	     0xf85a8feffff	                           jne 0x4006605	      2563	elf.c	FUNCTION_37	IF_1
0x400675d	        0x4883c008	                              add rax, 8	      2563	elf.c	FUNCTION_37	IF_1
0x4006761	        0x48c1e005	                              shl rax, 5	      2563	elf.c	FUNCTION_37	IF_1
0x4006765	      0x488d440708	                lea rax, [rdi + rax + 8]	      2563	elf.c	FUNCTION_37	IF_1
0x400676a	      0xe921ffffff	                           jmp 0x4006690	      2563	elf.c	FUNCTION_37	IF_1
0x400676f	              0x90	                                     nop	      2563	elf.c	FUNCTION_37	IF_1
0x4006770	      0x4889442408	                mov qword [rsp + 8], rax	       422	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x4006775	      0xe9e5feffff	                           jmp 0x400665f	       422	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x400677a	    0x660f1f440000	                    nop word [rax + rax]	       422	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x4006780	    0x48c744240800	                  mov qword [rsp + 8], 0	       407	elf.c	FUNCTION_18
0x4006789	      0xe9d1feffff	                           jmp 0x400665f	       407	elf.c	FUNCTION_18
0x400678e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4006792	            0x31d2	                            xor edx, edx	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4006794	          0x4c89e7	                            mov rdi, r12	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4006797	        0x4a8d34a8	                  lea rsi, [rax + r13*4]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x400679b	      0xe800000000	                          call 0x40067a0	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40067a0	            0x85c0	                           test eax, eax	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40067a2	     0xf85e6feffff	                           jne 0x400668e	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x40067a8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40067ad	          0x4c89e2	                            mov rdx, r12	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40067b0	      0xbe04000000	                              mov esi, 4	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40067b5	      0xe800000000	                          call 0x40067ba	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40067ba	        0x4883f804	                              cmp rax, 4	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40067be	      0x488d542410	                   lea rdx, [rsp + 0x10]	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40067c3	     0xf85c5feffff	                           jne 0x400668e	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40067c9	      0xe916ffffff	                           jmp 0x40066e4	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40067ce	      0xba05000000	                              mov edx, 5	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067d3	      0xbe00000000	                              mov esi, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067d8	      0xbf00000000	                              mov edi, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067dd	      0xe800000000	                          call 0x40067e2	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067e2	          0x4c89ea	                            mov rdx, r13	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067e5	          0x4889c7	                            mov rdi, rax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067e8	          0x4c89e6	                            mov rsi, r12	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067eb	            0x31c0	                            xor eax, eax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067ed	      0xe800000000	                          call 0x40067f2	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067f2	      0xe997feffff	                           jmp 0x400668e	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40067f7	      0xba00000000	                              mov edx, 0	       401	elf.c	FUNCTION_18	CALL_2
0x40067fc	      0xbe91010000	                          mov esi, 0x191	       401	elf.c	FUNCTION_18	CALL_2
0x4006801	      0xbf00000000	                              mov edi, 0	       401	elf.c	FUNCTION_18	CALL_2
0x4006806	      0xe800000000	                          call 0x400680b	       401	elf.c	FUNCTION_18	CALL_2
0x400680b	      0xe800000000	     call sym.bfd_section_from_elf_index	      2583	elf.c	FUNCTION_37
_bfd_elf_get_sec_type_attr	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,6:DO,0:ELSE,0	48
0x40069a0	              0x55	                                push rbp	      2797	elf.c	FUNCTION_40
0x40069a1	              0x53	                                push rbx	      2797	elf.c	FUNCTION_40
0x40069a2	        0x4883ec08	                              sub rsp, 8	      2797	elf.c	FUNCTION_40
0x40069a6	          0x488b2e	                    mov rbp, qword [rsi]	      2803	elf.c	FUNCTION_40	IF_1
0x40069a9	          0x4885ed	                           test rbp, rbp	      2803	elf.c	FUNCTION_40	IF_1
0x40069ac	     0xf847e000000	                            je 0x4006a30	      2803	elf.c	FUNCTION_40	IF_1
0x40069b2	        0x488b4708	                mov rax, qword [rdi + 8]	      2806	elf.c	FUNCTION_40	CALL_1
0x40069b6	          0x4889f3	                            mov rbx, rsi	      2806	elf.c	FUNCTION_40	CALL_1
0x40069b9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2807	elf.c	FUNCTION_40
0x40069c0	    0x488bb0080300	           mov rsi, qword [rax + 0x308] 	      2807	elf.c	FUNCTION_40
0x40069c7	          0x4885f6	                           test rsi, rsi	      2808	elf.c	FUNCTION_40	IF_2
0x40069ca	            0x7424	                            je 0x40069f0	      2808	elf.c	FUNCTION_40	IF_2
0x40069cc	         0xfb65325	           movzx edx, byte [rbx + 0x25] 	      2812	elf.c	FUNCTION_40	IF_2
0x40069d0	          0x4889ef	                            mov rdi, rbp	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40069d3	          0xc0ea02	                               shr dl, 2	      2812	elf.c	FUNCTION_40	IF_2
0x40069d6	          0x83e201	                              and edx, 1	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40069d9	      0xe800000000	                          call 0x40069de	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40069de	          0x4885c0	                           test rax, rax	      2813	elf.c	FUNCTION_40	IF_2	IF_3
0x40069e1	            0x740d	                            je 0x40069f0	      2813	elf.c	FUNCTION_40	IF_2	IF_3
0x40069e3	        0x4883c408	                              add rsp, 8	      2830	elf.c	FUNCTION_40
0x40069e7	              0x5b	                                 pop rbx	      2830	elf.c	FUNCTION_40
0x40069e8	              0x5d	                                 pop rbp	      2830	elf.c	FUNCTION_40
0x40069e9	              0xc3	                                     ret	      2830	elf.c	FUNCTION_40
0x40069ea	    0x660f1f440000	                    nop word [rax + rax]	      2830	elf.c	FUNCTION_40
0x40069f0	        0x807d002e	                    cmp byte [rbp], 0x2e	      2817	elf.c	FUNCTION_40	IF_4
0x40069f4	            0x753a	                           jne 0x4006a30	      2817	elf.c	FUNCTION_40	IF_4
0x40069f6	         0xfbe4501	               movsx eax, byte [rbp + 1]	      2820	elf.c	FUNCTION_40
0x40069fa	          0x83e862	                           sub eax, 0x62	      2820	elf.c	FUNCTION_40
0x40069fd	          0x83f818	                           cmp eax, 0x18	      2821	elf.c	FUNCTION_40	IF_5
0x4006a00	            0x772e	                            ja 0x4006a30	      2821	elf.c	FUNCTION_40	IF_5
0x4006a02	            0x4898	                                    cdqe	      2824	elf.c	FUNCTION_40
0x4006a04	    0x488b34c50000	                  mov rsi, qword [rax*8]	      2824	elf.c	FUNCTION_40
0x4006a0c	          0x4885f6	                           test rsi, rsi	      2826	elf.c	FUNCTION_40	IF_6
0x4006a0f	            0x741f	                            je 0x4006a30	      2826	elf.c	FUNCTION_40	IF_6
0x4006a11	         0xfb65325	           movzx edx, byte [rbx + 0x25] 	      2829	elf.c	FUNCTION_40	CALL_3
0x4006a15	        0x4883c408	                              add rsp, 8	      2830	elf.c	FUNCTION_40
0x4006a19	          0x4889ef	                            mov rdi, rbp	      2829	elf.c	FUNCTION_40	CALL_3
0x4006a1c	              0x5b	                                 pop rbx	      2830	elf.c	FUNCTION_40
0x4006a1d	              0x5d	                                 pop rbp	      2830	elf.c	FUNCTION_40
0x4006a1e	          0xc0ea02	                               shr dl, 2	      2829	elf.c	FUNCTION_40	CALL_3
0x4006a21	          0x83e201	                              and edx, 1	      2829	elf.c	FUNCTION_40	CALL_3
0x4006a24	      0xe917feffff	    jmp sym._bfd_elf_get_special_section	      2829	elf.c	FUNCTION_40	CALL_3
0x4006a29	     0xf1f80000000	                         nop dword [rax]	      2829	elf.c	FUNCTION_40	CALL_3
0x4006a30	        0x4883c408	                              add rsp, 8	      2830	elf.c	FUNCTION_40
0x4006a34	            0x31c0	                            xor eax, eax	      2804	elf.c	FUNCTION_40	IF_1
0x4006a36	              0x5b	                                 pop rbx	      2830	elf.c	FUNCTION_40
0x4006a37	              0x5d	                                 pop rbp	      2830	elf.c	FUNCTION_40
0x4006a38	              0xc3	                                     ret	      2830	elf.c	FUNCTION_40
bfd_elf_print_symbol	functions,0:CALL,8:FOR,1:WHILE,0:SWITCH,2:IF,5:DO,0:ELSE,2	227
0x4004240	          0x83f901	                              cmp ecx, 1	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4004243	            0x4156	                                push r14	      1905	elf.c	FUNCTION_35
0x4004245	            0x4155	                                push r13	      1905	elf.c	FUNCTION_35
0x4004247	          0x4989fd	                            mov r13, rdi	      1905	elf.c	FUNCTION_35
0x400424a	            0x4154	                                push r12	      1905	elf.c	FUNCTION_35
0x400424c	              0x55	                                push rbp	      1905	elf.c	FUNCTION_35
0x400424d	          0x4889d5	                            mov rbp, rdx	      1905	elf.c	FUNCTION_35
0x4004250	              0x53	                                push rbx	      1905	elf.c	FUNCTION_35
0x4004251	          0x4889f3	                            mov rbx, rsi	      1905	elf.c	FUNCTION_35
0x4004254	     0xf84de010000	                            je 0x4004438	      1907	elf.c	FUNCTION_35	SWITCH_1
0x400425a	     0xf82c0010000	                            jb 0x4004420	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4004260	          0x83f902	                              cmp ecx, 2	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4004263	     0xf85a7010000	                           jne 0x4004410	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4004269	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      1927	elf.c	FUNCTION_35	SWITCH_1
0x400426d	          0x4885c0	                           test rax, rax	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4004270	     0xf8404030000	                            je 0x400457a	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4004276	          0x4c8b30	                    mov r14, qword [rax]	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4004279	        0x498b4508	                mov rax, qword [r13 + 8]	      1929	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x400427d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4004284	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400428b	          0x4885c0	                           test rax, rax	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400428e	     0xf84ec010000	                            je 0x4004480	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4004294	          0x4889ea	                            mov rdx, rbp	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4004297	          0x4889de	                            mov rsi, rbx	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400429a	          0x4c89ef	                            mov rdi, r13	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400429d	            0xffd0	                                call rax	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400429f	          0x4885c0	                           test rax, rax	      1933	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x40042a2	          0x4989c4	                            mov r12, rax	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x40042a5	     0xf84d5010000	                            je 0x4004480	      1933	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x40042ab	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x40042ad	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_63
0x40042b0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x40042b5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x40042ba	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x40042bd	      0xe800000000	                          call 0x40042c2	        97	stdio2.h	CALL_63
0x40042c2	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40042c6	          0x4885c0	                           test rax, rax	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40042c9	     0xf84d1010000	                            je 0x40044a0	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40042cf	        0xf6402110	           test byte [rax + 0x21], 0x10 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40042d3	     0xf84c7010000	                            je 0x40044a0	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40042d9	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      1945	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40042dd	          0x4889de	                            mov rsi, rbx	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x40042e0	          0x4c89ef	                            mov rdi, r13	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x40042e3	      0xe800000000	                          call 0x40042e8	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x40042e8	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x40042ef	    0x448b82800c00	           mov r8d, dword [rdx + 0xc80] 	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x40042f6	          0x4585c0	                           test r8d, r8d	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x40042f9	     0xf84b4000000	                            je 0x40043b3	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x40042ff	    0x8bba840c0000	           mov edi, dword [rdx + 0xc84] 	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004305	            0x85ff	                           test edi, edi	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004307	            0x750e	                           jne 0x4004317	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004309	    0x8bb2880c0000	           mov esi, dword [rdx + 0xc88] 	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x400430f	            0x85f6	                           test esi, esi	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004311	     0xf849c000000	                            je 0x40043b3	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4004317	         0xfb74558	           movzx eax, word [rbp + 0x58] 	      1861	elf.c	FUNCTION_34	IF_1
0x400431b	            0x89c7	                            mov edi, eax	      1861	elf.c	FUNCTION_34	IF_1
0x400431d	      0x6681e70080	                          and di, 0x8000	      1861	elf.c	FUNCTION_34	IF_1
0x4004322	        0x6625ff7f	                          and ax, 0x7fff	      1866	elf.c	FUNCTION_34	IF_1	IF_2
0x4004326	     0xf84d4010000	                            je 0x4004500	      1866	elf.c	FUNCTION_34	IF_1	IF_2
0x400432c	        0x6683f801	                               cmp ax, 1	      1868	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4004330	           0xfb7c8	                           movzx ecx, ax	      1864	elf.c	FUNCTION_34	IF_1
0x4004333	     0xf844c020000	                            je 0x4004585	      1868	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4004339	    0x3b8a40030000	           cmp ecx, dword [rdx + 0x340] 	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x400433f	     0xf861a020000	                           jbe 0x400455f	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4004345	    0x488bb2500300	           mov rsi, qword [rdx + 0x350] 	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x400434c	          0x4885f6	                           test rsi, rsi	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x400434f	     0xf843b020000	                            je 0x4004590	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4004355	    0x41bd00000000	                             mov r13d, 0	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x400435b	       0xf1f440000	                   nop dword [rax + rax]	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4004360	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4004364	          0x4885c0	                           test rax, rax	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4004367	            0x7510	                           jne 0x4004379	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4004369	            0xeb1a	                           jmp 0x4004385	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x400436b	       0xf1f440000	                   nop dword [rax + rax]	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4004370	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4004374	          0x4885c0	                           test rax, rax	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4004377	            0x740c	                            je 0x4004385	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4004379	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x400437d	            0x39d1	                            cmp ecx, edx	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x400437f	            0x75ef	                           jne 0x4004370	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4004381	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	      1888	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4004385	        0x488b7638	            mov rsi, qword [rsi + 0x38] 	      1880	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1
0x4004389	          0x4885f6	                           test rsi, rsi	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x400438c	            0x75d2	                           jne 0x4004360	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x400438e	          0x4d85ed	                           test r13, r13	      1954	elf.c	FUNCTION_35	SWITCH_1	IF_4
0x4004391	            0x7420	                            je 0x40043b3	      1954	elf.c	FUNCTION_35	SWITCH_1	IF_4
0x4004393	          0x6685ff	                             test di, di	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4004396	     0xf8514010000	                           jne 0x40044b0	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x400439c	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_63
0x400439f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x40043a4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x40043a9	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x40043ac	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x40043ae	      0xe800000000	                          call 0x40043b3	        97	stdio2.h	CALL_63
0x40043b3	         0xfb64549	           movzx eax, byte [rbp + 0x49] 	      1969	elf.c	FUNCTION_35	SWITCH_1
0x40043b7	            0x3c01	                               cmp al, 1	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40043b9	     0xf844c010000	                            je 0x400450b	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40043bf	            0x7227	                            jb 0x40043e8	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40043c1	            0x3c02	                               cmp al, 2	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40043c3	     0xf847a010000	                            je 0x4004543	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40043c9	            0x3c03	                               cmp al, 3	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40043cb	     0xf8556010000	                           jne 0x4004527	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x40043d1	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_63
0x40043d4	      0xba0b000000	                            mov edx, 0xb	        97	stdio2.h	CALL_63
0x40043d9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x40043de	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x40043e3	      0xe800000000	                          call 0x40043e8	        97	stdio2.h	CALL_63
0x40043e8	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_63
0x40043eb	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x40043ee	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x40043f3	              0x5b	                                 pop rbx	      1987	elf.c	FUNCTION_35
0x40043f4	              0x5d	                                 pop rbp	      1987	elf.c	FUNCTION_35
0x40043f5	            0x415c	                                 pop r12	      1987	elf.c	FUNCTION_35
0x40043f7	            0x415d	                                 pop r13	      1987	elf.c	FUNCTION_35
0x40043f9	            0x415e	                                 pop r14	      1987	elf.c	FUNCTION_35
0x40043fb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x4004400	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x4004402	      0xe900000000	                           jmp 0x4004407	        97	stdio2.h	CALL_63
0x4004407	    0x660f1f840000	                    nop word [rax + rax]	        97	stdio2.h	CALL_63
0x4004410	              0x5b	                                 pop rbx	      1987	elf.c	FUNCTION_35
0x4004411	              0x5d	                                 pop rbp	      1987	elf.c	FUNCTION_35
0x4004412	            0x415c	                                 pop r12	      1987	elf.c	FUNCTION_35
0x4004414	            0x415d	                                 pop r13	      1987	elf.c	FUNCTION_35
0x4004416	            0x415e	                                 pop r14	      1987	elf.c	FUNCTION_35
0x4004418	              0xc3	                                     ret	      1987	elf.c	FUNCTION_35
0x4004419	     0xf1f80000000	                         nop dword [rax]	      1987	elf.c	FUNCTION_35
0x4004420	              0x5b	                                 pop rbx	      1987	elf.c	FUNCTION_35
0x4004421	              0x5d	                                 pop rbp	      1987	elf.c	FUNCTION_35
0x4004422	            0x415c	                                 pop r12	      1987	elf.c	FUNCTION_35
0x4004424	            0x415d	                                 pop r13	      1987	elf.c	FUNCTION_35
0x4004426	            0x415e	                                 pop r14	      1987	elf.c	FUNCTION_35
0x4004428	        0x488b7a08	                mov rdi, qword [rdx + 8]	        97	stdio2.h	CALL_63
0x400442c	      0xe900000000	                           jmp 0x4004431	        97	stdio2.h	CALL_63
0x4004431	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_63
0x4004438	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_63
0x400443b	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_63
0x4004440	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x4004445	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x400444a	      0xe800000000	                          call 0x400444f	        97	stdio2.h	CALL_63
0x400444f	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x4004453	          0x4889de	                            mov rsi, rbx	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x4004456	          0x4c89ef	                            mov rdi, r13	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x4004459	      0xe800000000	                          call 0x400445e	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x400445e	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	        97	stdio2.h	CALL_63
0x4004461	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x4004464	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x4004469	              0x5b	                                 pop rbx	      1987	elf.c	FUNCTION_35
0x400446a	              0x5d	                                 pop rbp	      1987	elf.c	FUNCTION_35
0x400446b	            0x415c	                                 pop r12	      1987	elf.c	FUNCTION_35
0x400446d	            0x415d	                                 pop r13	      1987	elf.c	FUNCTION_35
0x400446f	            0x415e	                                 pop r14	      1987	elf.c	FUNCTION_35
0x4004471	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x4004476	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x4004478	      0xe900000000	                           jmp 0x400447d	        97	stdio2.h	CALL_63
0x400447d	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_63
0x4004480	          0x4889ea	                            mov rdx, rbp	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4004483	          0x4889de	                            mov rsi, rbx	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4004486	          0x4c89ef	                            mov rdi, r13	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4004489	        0x4c8b6508	                mov r12, qword [rbp + 8]	      1935	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x400448d	      0xe800000000	                          call 0x4004492	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4004492	      0xe914feffff	                           jmp 0x40042ab	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4004497	    0x660f1f840000	                    nop word [rax + rax]	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x40044a0	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x40044a4	      0xe934feffff	                           jmp 0x40042dd	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x40044a9	     0xf1f80000000	                         nop dword [rax]	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x40044b0	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_63
0x40044b3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x40044b8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x40044bd	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x40044c0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x40044c2	      0xe800000000	                          call 0x40044c7	        97	stdio2.h	CALL_63
0x40044c7	          0x4c89ef	                            mov rdi, r13	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044ca	    0x41bd0a000000	                           mov r13d, 0xa	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044d0	      0xe800000000	                          call 0x40044d5	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044d5	          0x4129c5	                           sub r13d, eax	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044d8	          0x4585ed	                         test r13d, r13d	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044db	     0xf8ed2feffff	                           jle 0x40043b3	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044e1	     0xf1f80000000	                         nop dword [rax]	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044e8	          0x4889de	                            mov rsi, rbx	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_8
0x40044eb	      0xbf20000000	                           mov edi, 0x20	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_8
0x40044f0	      0xe800000000	                          call 0x40044f5	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_8
0x40044f5	        0x4183ed01	                             sub r13d, 1	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044f9	            0x75ed	                           jne 0x40044e8	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40044fb	      0xe9b3feffff	                           jmp 0x40043b3	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4004500	    0x41bd00000000	                             mov r13d, 0	      1867	elf.c	FUNCTION_34	IF_1	IF_2
0x4004506	      0xe988feffff	                           jmp 0x4004393	      1867	elf.c	FUNCTION_34	IF_1	IF_2
0x400450b	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_63
0x400450e	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_63
0x4004513	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x4004518	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x400451d	      0xe800000000	                          call 0x4004522	        97	stdio2.h	CALL_63
0x4004522	      0xe9c1feffff	                           jmp 0x40043e8	        97	stdio2.h	CALL_63
0x4004527	           0xfb6c8	                           movzx ecx, al	        97	stdio2.h	CALL_63
0x400452a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400452f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x4004534	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x4004537	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x4004539	      0xe800000000	                          call 0x400453e	        97	stdio2.h	CALL_63
0x400453e	      0xe9a5feffff	                           jmp 0x40043e8	        97	stdio2.h	CALL_63
0x4004543	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_63
0x4004546	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_63
0x400454b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x4004550	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_63
0x4004555	      0xe800000000	                          call 0x400455a	        97	stdio2.h	CALL_63
0x400455a	      0xe989feffff	                           jmp 0x40043e8	        97	stdio2.h	CALL_63
0x400455f	          0x8d41ff	                      lea eax, [rcx - 1]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004562	    0x488b8a480300	           mov rcx, qword [rdx + 0x348] 	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004569	        0x488d04c0	                  lea rax, [rax + rax*8]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x400456d	        0x488d04c1	                  lea rax, [rcx + rax*8]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004571	        0x4c8b6828	            mov r13, qword [rax + 0x28] 	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4004575	      0xe914feffff	                           jmp 0x400438e	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x400457a	    0x41be00000000	                             mov r14d, 0	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4004580	      0xe9f4fcffff	                           jmp 0x4004279	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4004585	    0x41bd00000000	                             mov r13d, 0	      1869	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x400458b	      0xe903feffff	                           jmp 0x4004393	      1869	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4004590	          0x6685ff	                             test di, di	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4004593	            0x750b	                           jne 0x40045a0	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4004595	    0x41bd00000000	                             mov r13d, 0	      1877	elf.c	FUNCTION_34	IF_1	ELSE_3
0x400459b	      0xe9fcfdffff	                           jmp 0x400439c	      1877	elf.c	FUNCTION_34	IF_1	ELSE_3
0x40045a0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_63
0x40045a5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x40045aa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x40045af	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_63
0x40045b2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x40045b4	    0x41bd0a000000	                           mov r13d, 0xa	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x40045ba	      0xe800000000	                          call 0x40045bf	        97	stdio2.h	CALL_63
0x40045bf	      0xe924ffffff	                           jmp 0x40044e8	        97	stdio2.h	CALL_63
_bfd_elf_get_symtab_upper_bound	functions,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0	14
0x400df50	        0x488b5708	                mov rdx, qword [rdi + 8]	      8118	elf.c	FUNCTION_89	CALL_2
0x400df54	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400df5b	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400df62	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400df69	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400df70	         0xfb64a05	               movzx ecx, byte [rdx + 5]	      8118	elf.c	FUNCTION_89	CALL_2
0x400df74	            0x31d2	                            xor edx, edx	      8118	elf.c	FUNCTION_89	CALL_2
0x400df76	          0x48f7f1	                                 div rcx	      8118	elf.c	FUNCTION_89	CALL_2
0x400df79	    0x488d0cc50800	                    lea rcx, [rax*8 + 8]	      8119	elf.c	FUNCTION_89
0x400df81	          0x4885c0	                           test rax, rax	      8119	elf.c	FUNCTION_89
0x400df84	        0x488d51f8	                      lea rdx, [rcx - 8]	      8119	elf.c	FUNCTION_89
0x400df88	          0x4889c8	                            mov rax, rcx	      8119	elf.c	FUNCTION_89
0x400df8b	        0x480f4fc2	                          cmovg rax, rdx	      8119	elf.c	FUNCTION_89
0x400df8f	              0xc3	                                     ret	      8124	elf.c	FUNCTION_89
get_program_header_size	functions,0:CALL,14:FOR,3:WHILE,1:SWITCH,0:IF,14:DO,0:ELSE,0	190
0x4000190	            0x4157	                                push r15	      4325	elf.c	FUNCTION_60
0x4000192	            0x4156	                                push r14	      4325	elf.c	FUNCTION_60
0x4000194	            0x4155	                                push r13	      4325	elf.c	FUNCTION_60
0x4000196	            0x4154	                                push r12	      4325	elf.c	FUNCTION_60
0x4000198	          0x4989fc	                            mov r12, rdi	      4325	elf.c	FUNCTION_60
0x400019b	              0x55	                                push rbp	      4325	elf.c	FUNCTION_60
0x400019c	              0x53	                                push rbx	      4325	elf.c	FUNCTION_60
0x400019d	          0x4889f3	                            mov rbx, rsi	      4325	elf.c	FUNCTION_60
0x40001a0	      0xbe00000000	                              mov esi, 0	      4334	elf.c	FUNCTION_60	CALL_1
0x40001a5	        0x4883ec18	                           sub rsp, 0x18	      4325	elf.c	FUNCTION_60
0x40001a9	      0xe800000000	                          call 0x40001ae	      4334	elf.c	FUNCTION_60	CALL_1
0x40001ae	          0x4885c0	                           test rax, rax	      4335	elf.c	FUNCTION_60	IF_1
0x40001b1	     0xf8479020000	                            je 0x4000430	      4335	elf.c	FUNCTION_60	IF_1
0x40001b7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4335	elf.c	FUNCTION_60	IF_1
0x40001ba	          0x83e002	                              and eax, 2	      4335	elf.c	FUNCTION_60	IF_1
0x40001bd	          0x83f801	                              cmp eax, 1	      4335	elf.c	FUNCTION_60	IF_1
0x40001c0	          0x4819ed	                            sbb rbp, rbp	      4335	elf.c	FUNCTION_60	IF_1
0x40001c3	        0x4883e5fe	             and rbp, 0xfffffffffffffffe	      4335	elf.c	FUNCTION_60	IF_1
0x40001c7	        0x4883c508	                              add rbp, 8	      4335	elf.c	FUNCTION_60	IF_1
0x40001cb	          0x83f801	                              cmp eax, 1	      4335	elf.c	FUNCTION_60	IF_1
0x40001ce	          0x4d19ed	                            sbb r13, r13	      4335	elf.c	FUNCTION_60	IF_1
0x40001d1	        0x4983e5fe	             and r13, 0xfffffffffffffffe	      4335	elf.c	FUNCTION_60	IF_1
0x40001d5	        0x4983c507	                              add r13, 7	      4335	elf.c	FUNCTION_60	IF_1
0x40001d9	          0x83f801	                              cmp eax, 1	      4335	elf.c	FUNCTION_60	IF_1
0x40001dc	          0x4d19f6	                            sbb r14, r14	      4335	elf.c	FUNCTION_60	IF_1
0x40001df	        0x4983e6fe	             and r14, 0xfffffffffffffffe	      4335	elf.c	FUNCTION_60	IF_1
0x40001e3	        0x4983c606	                              add r14, 6	      4335	elf.c	FUNCTION_60	IF_1
0x40001e7	          0x83f801	                              cmp eax, 1	      4335	elf.c	FUNCTION_60	IF_1
0x40001ea	          0x4d19ff	                            sbb r15, r15	      4335	elf.c	FUNCTION_60	IF_1
0x40001ed	        0x4983e7fe	             and r15, 0xfffffffffffffffe	      4335	elf.c	FUNCTION_60	IF_1
0x40001f1	        0x4983c705	                              add r15, 5	      4335	elf.c	FUNCTION_60	IF_1
0x40001f5	          0x83f801	                              cmp eax, 1	      4335	elf.c	FUNCTION_60	IF_1
0x40001f8	          0x4819d2	                            sbb rdx, rdx	      4335	elf.c	FUNCTION_60	IF_1
0x40001fb	        0x4883e2fe	             and rdx, 0xfffffffffffffffe	      4335	elf.c	FUNCTION_60	IF_1
0x40001ff	        0x4883c204	                              add rdx, 4	      4335	elf.c	FUNCTION_60	IF_1
0x4000203	      0xbe00000000	                              mov esi, 0	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x4000208	          0x4c89e7	                            mov rdi, r12	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400020b	      0x4889542408	                mov qword [rsp + 8], rdx	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x4000210	      0xe800000000	                          call 0x4000215	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x4000215	          0x4885c0	                           test rax, rax	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x4000218	      0x488b542408	                mov rdx, qword [rsp + 8]	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400021d	     0xf8435020000	                            je 0x4000458	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x4000223	          0x4885db	                           test rbx, rbx	      4350	elf.c	FUNCTION_60	IF_3
0x4000226	     0xf8444010000	                            je 0x4000370	      4350	elf.c	FUNCTION_60	IF_3
0x400022c	        0xf6430310	               test byte [rbx + 3], 0x10	      4350	elf.c	FUNCTION_60	IF_3
0x4000230	     0xf843a010000	                            je 0x4000370	      4350	elf.c	FUNCTION_60	IF_3
0x4000236	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400023e	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000245	      0x4883781800	               cmp qword [rax + 0x18], 0	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400024a	     0xf84d0010000	                            je 0x4000420	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000250	          0x8b4054	            mov eax, dword [rax + 0x54] 	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x4000253	    0x4d8b84249000	              mov r8, qword [r12 + 0x90]	      4368	elf.c	FUNCTION_60	FOR_1
0x400025b	            0x85c0	                           test eax, eax	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x400025d	        0x490f44ed	                          cmove rbp, r13	      4362	elf.c	FUNCTION_60	IF_5	CALL_4
0x4000261	          0x4d85c0	                             test r8, r8	      4368	elf.c	FUNCTION_60	FOR_1
0x4000264	            0x746e	                            je 0x40002d4	      4368	elf.c	FUNCTION_60	FOR_1
0x4000266	        0x458b5020	            mov r10d, dword [r8 + 0x20] 	      4368	elf.c	FUNCTION_60	FOR_1
0x400026a	          0x4c89c2	                             mov rdx, r8	      4368	elf.c	FUNCTION_60	FOR_1
0x400026d	          0x4589d1	                           mov r9d, r10d	      4368	elf.c	FUNCTION_60	FOR_1
0x4000270	            0xeb0a	                           jmp 0x400027c	      4368	elf.c	FUNCTION_60	FOR_1
0x4000272	    0x660f1f440000	                    nop word [rax + rax]	      4368	elf.c	FUNCTION_60	FOR_1
0x4000278	        0x448b4a20	            mov r9d, dword [rdx + 0x20] 	      4368	elf.c	FUNCTION_60	FOR_1
0x400027c	        0x4183e102	                              and r9d, 2	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000280	            0x7426	                            je 0x40002a8	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000282	          0x488b32	                    mov rsi, qword [rdx]	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x4000285	      0xb800000000	                              mov eax, 0	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x400028a	      0xb905000000	                              mov ecx, 5	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x400028f	          0x4889c7	                            mov rdi, rax	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x4000292	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x4000294	            0x7512	                           jne 0x40002a8	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x4000296	        0x4883c501	                              add rbp, 1	      4374	elf.c	FUNCTION_60	FOR_1	IF_6
0x400029a	        0x837a7002	               cmp dword [rdx + 0x70], 2	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x400029e	     0xf84b7000000	                            je 0x400035b	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x40002a4	         0xf1f4000	                         nop dword [rax]	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x40002a8	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4368	elf.c	FUNCTION_60	FOR_1
0x40002ac	          0x4885d2	                           test rdx, rdx	      4368	elf.c	FUNCTION_60	FOR_1
0x40002af	            0x75c7	                           jne 0x4000278	      4368	elf.c	FUNCTION_60	FOR_1
0x40002b1	    0x4181e2000400	                         and r10d, 0x400	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x40002b8	            0x7411	                            je 0x40002cb	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x40002ba	      0xe9c1000000	                           jmp 0x4000380	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x40002bf	              0x90	                                     nop	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x40002c0	      0x41f6402104	                test byte [r8 + 0x21], 4	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x40002c5	     0xf85b5000000	                           jne 0x4000380	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x40002cb	        0x4d8b4010	               mov r8, qword [r8 + 0x10]	      4391	elf.c	FUNCTION_60	FOR_2
0x40002cf	          0x4d85c0	                             test r8, r8	      4391	elf.c	FUNCTION_60	FOR_2
0x40002d2	            0x75ec	                           jne 0x40002c0	      4391	elf.c	FUNCTION_60	FOR_2
0x40002d4	    0x41f644244520	           test byte [r12 + 0x45], 0x20 	      4403	elf.c	FUNCTION_60	IF_9
0x40002da	      0x498b442408	                mov rax, qword [r12 + 8]	      4401	elf.c	FUNCTION_60	CALL_7
0x40002df	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      4401	elf.c	FUNCTION_60	CALL_7
0x40002e6	     0xf85a4000000	                           jne 0x4000390	      4403	elf.c	FUNCTION_60	IF_9
0x40002ec	    0x498b87480100	           mov rax, qword [r15 + 0x148] 	      4427	elf.c	FUNCTION_60	IF_13
0x40002f3	          0x4885c0	                           test rax, rax	      4427	elf.c	FUNCTION_60	IF_13
0x40002f6	            0x7416	                            je 0x400030e	      4427	elf.c	FUNCTION_60	IF_13
0x40002f8	          0x4889de	                            mov rsi, rbx	      4431	elf.c	FUNCTION_60	IF_13
0x40002fb	          0x4c89e7	                            mov rdi, r12	      4431	elf.c	FUNCTION_60	IF_13
0x40002fe	            0xffd0	                                call rax	      4431	elf.c	FUNCTION_60	IF_13
0x4000300	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4432	elf.c	FUNCTION_60	IF_13	IF_14
0x4000303	     0xf8460010000	                            je 0x4000469	      4432	elf.c	FUNCTION_60	IF_13	IF_14
0x4000309	            0x4898	                                    cdqe	      4434	elf.c	FUNCTION_60	IF_13
0x400030b	          0x4801c5	                            add rbp, rax	      4434	elf.c	FUNCTION_60	IF_13
0x400030e	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      4437	elf.c	FUNCTION_60
0x4000315	         0xfb64001	               movzx eax, byte [rax + 1]	      4437	elf.c	FUNCTION_60
0x4000319	        0x4883c418	                           add rsp, 0x18	      4438	elf.c	FUNCTION_60
0x400031d	              0x5b	                                 pop rbx	      4438	elf.c	FUNCTION_60
0x400031e	        0x480fafc5	                           imul rax, rbp	      4437	elf.c	FUNCTION_60
0x4000322	              0x5d	                                 pop rbp	      4438	elf.c	FUNCTION_60
0x4000323	            0x415c	                                 pop r12	      4438	elf.c	FUNCTION_60
0x4000325	            0x415d	                                 pop r13	      4438	elf.c	FUNCTION_60
0x4000327	            0x415e	                                 pop r14	      4438	elf.c	FUNCTION_60
0x4000329	            0x415f	                                 pop r15	      4438	elf.c	FUNCTION_60
0x400032b	              0xc3	                                     ret	      4438	elf.c	FUNCTION_60
0x400032c	         0xf1f4000	                         nop dword [rax]	      4438	elf.c	FUNCTION_60
0x4000330	        0x837a7002	               cmp dword [rdx + 0x70], 2	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000334	     0xf853effffff	                           jne 0x4000278	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400033a	        0x448b4a20	            mov r9d, dword [rdx + 0x20] 	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400033e	        0x41f6c102	                             test r9b, 2	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000342	     0xf8434ffffff	                            je 0x400027c	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000348	          0x488b32	                    mov rsi, qword [rdx]	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x400034b	      0xb905000000	                              mov ecx, 5	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x4000350	          0x4889c7	                            mov rdi, rax	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x4000353	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x4000355	     0xf8521ffffff	                           jne 0x400027c	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x400035b	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400035f	          0x4885d2	                           test rdx, rdx	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000362	            0x75cc	                           jne 0x4000330	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000364	      0xe948ffffff	                           jmp 0x40002b1	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000369	     0xf1f80000000	                         nop dword [rax]	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000370	          0x4c89ed	                            mov rbp, r13	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000373	          0x4d89f5	                            mov r13, r14	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000376	          0x4d89fe	                            mov r14, r15	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000379	      0xe9b8feffff	                           jmp 0x4000236	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400037e	            0x6690	                                     nop	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000380	        0x4883c501	                              add rbp, 1	      4396	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000384	      0xe94bffffff	                           jmp 0x40002d4	      4397	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000389	     0xf1f80000000	                         nop dword [rax]	      4397	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000390	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      4406	elf.c	FUNCTION_60	IF_9	CALL_8
0x4000394	      0xe800000000	                          call 0x4000399	      4406	elf.c	FUNCTION_60	IF_9	CALL_8
0x4000399	    0x4d8bac249000	            mov r13, qword [r12 + 0x90] 	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x40003a1	          0x4189c0	                            mov r8d, eax	      4406	elf.c	FUNCTION_60	IF_9	CALL_8
0x40003a4	          0x4d85ed	                           test r13, r13	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x40003a7	            0x7522	                           jne 0x40003cb	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x40003a9	      0xe93effffff	                           jmp 0x40002ec	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x40003ae	            0x6690	                                     nop	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x40003b0	        0x453b4570	            cmp r8d, dword [r13 + 0x70] 	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x40003b4	            0x7604	                           jbe 0x40003ba	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x40003b6	        0x45894570	             mov dword [r13 + 0x70], r8d	      4421	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x40003ba	        0x4883c501	                              add rbp, 1	      4422	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10
0x40003be	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x40003c2	          0x4d85ed	                           test r13, r13	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x40003c5	     0xf8421ffffff	                            je 0x40002ec	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x40003cb	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_9
0x40003d2	        0xf6400b01	                test byte [rax + 0xb], 1	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_9
0x40003d6	            0x74e6	                            je 0x40003be	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_9
0x40003d8	        0x448b702c	           mov r14d, dword [rax + 0x2c] 	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x40003dc	    0x4181fe001000	                        cmp r14d, 0x1000	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x40003e3	            0x76cb	                           jbe 0x40003b0	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x40003e5	      0xba05000000	                              mov edx, 5	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x40003ea	      0xbe00000000	                              mov esi, 0	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x40003ef	      0xbf00000000	                              mov edi, 0	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x40003f4	      0x4489442408	                mov dword [rsp + 8], r8d	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x40003f9	      0xe800000000	                          call 0x40003fe	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x40003fe	          0x4489f1	                           mov ecx, r14d	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x4000401	          0x4889c7	                            mov rdi, rax	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x4000404	          0x4c89ea	                            mov rdx, r13	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x4000407	          0x4c89e6	                            mov rsi, r12	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x400040a	            0x31c0	                            xor eax, eax	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x400040c	      0xe800000000	                          call 0x4000411	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x4000411	      0x448b442408	                mov r8d, dword [rsp + 8]	      4417	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11
0x4000416	            0xeba6	                           jmp 0x40003be	      4417	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11
0x4000418	     0xf1f84000000	                   nop dword [rax + rax]	      4417	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11
0x4000420	          0x4c89ed	                            mov rbp, r13	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000423	          0x4d89f5	                            mov r13, r14	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000426	      0xe925feffff	                           jmp 0x4000250	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400042b	       0xf1f440000	                   nop dword [rax + rax]	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000430	      0xbd06000000	                              mov ebp, 6	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000435	    0x41bd05000000	                             mov r13d, 5	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x400043b	    0x41be04000000	                             mov r14d, 4	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000441	    0x41bf03000000	                             mov r15d, 3	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000447	      0xba02000000	                              mov edx, 2	      4332	elf.c	FUNCTION_60
0x400044c	      0xe9b2fdffff	                           jmp 0x4000203	      4332	elf.c	FUNCTION_60
0x4000451	     0xf1f80000000	                         nop dword [rax]	      4332	elf.c	FUNCTION_60
0x4000458	          0x4c89ed	                            mov rbp, r13	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400045b	          0x4d89f5	                            mov r13, r14	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x400045e	          0x4d89fe	                            mov r14, r15	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x4000461	          0x4989d7	                            mov r15, rdx	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x4000464	      0xe9bafdffff	                           jmp 0x4000223	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x4000469	      0xba00000000	                              mov edx, 0	      4433	elf.c	FUNCTION_60	IF_13	CALL_14
0x400046e	      0xbe51110000	                         mov esi, 0x1151	      4433	elf.c	FUNCTION_60	IF_13	CALL_14
0x4000473	      0xbf00000000	                              mov edi, 0	      4433	elf.c	FUNCTION_60	IF_13	CALL_14
0x4000478	      0xe800000000	                          call 0x400047d	      4433	elf.c	FUNCTION_60	IF_13	CALL_14
_bfd_elf_maybe_function_sym	functions,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:IF,3:DO,0:ELSE,0	17
0x4014670	          0x8b4f18	            mov ecx, dword [rdi + 0x18] 	     11547	elf.c	FUNCTION_203	IF_1
0x4014673	            0x31c0	                            xor eax, eax	     11550	elf.c	FUNCTION_203	IF_1
0x4014675	    0xf7c100411d00	                      test ecx, 0x1d4100	     11547	elf.c	FUNCTION_203	IF_1
0x401467b	            0x7506	                           jne 0x4014683	     11547	elf.c	FUNCTION_203	IF_1
0x401467d	        0x48397720	            cmp qword [rdi + 0x20], rsi 	     11549	elf.c	FUNCTION_203	IF_1
0x4014681	            0x7405	                            je 0x4014688	     11549	elf.c	FUNCTION_203	IF_1
0x4014683	            0xf3c3	                                     ret	     11559	elf.c	FUNCTION_203
0x4014685	           0xf1f00	                         nop dword [rax]	     11559	elf.c	FUNCTION_203
0x4014688	        0x488b4710	            mov rax, qword [rdi + 0x10] 	     11552	elf.c	FUNCTION_203
0x401468c	    0x81e100002000	                       and ecx, 0x200000	     11554	elf.c	FUNCTION_203	IF_2
0x4014692	          0x488902	                    mov qword [rdx], rax	     11552	elf.c	FUNCTION_203
0x4014695	      0xb801000000	                              mov eax, 1	     11557	elf.c	FUNCTION_203	IF_3
0x401469a	            0x75e7	                           jne 0x4014683	     11554	elf.c	FUNCTION_203	IF_2
0x401469c	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	     11555	elf.c	FUNCTION_203	IF_2
0x40146a0	          0x4885d2	                           test rdx, rdx	     11557	elf.c	FUNCTION_203	IF_3
0x40146a3	        0x480f45c2	                         cmovne rax, rdx	     11557	elf.c	FUNCTION_203	IF_3
0x40146a7	              0xc3	                                     ret	     11559	elf.c	FUNCTION_203
_bfd_elf_swap_verdef_in	functions,0:CALL,7:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	38
0x4002c60	            0x4154	                                push r12	        70	elf.c	FUNCTION_1
0x4002c62	              0x55	                                push rbp	        70	elf.c	FUNCTION_1
0x4002c63	          0x4989fc	                            mov r12, rdi	        70	elf.c	FUNCTION_1
0x4002c66	              0x53	                                push rbx	        70	elf.c	FUNCTION_1
0x4002c67	        0x488b4708	                mov rax, qword [rdi + 8]	        71	elf.c	FUNCTION_1	CALL_1
0x4002c6b	          0x4889d5	                            mov rbp, rdx	        70	elf.c	FUNCTION_1
0x4002c6e	          0x4889f3	                            mov rbx, rsi	        70	elf.c	FUNCTION_1
0x4002c71	          0x4889f7	                            mov rdi, rsi	        71	elf.c	FUNCTION_1	CALL_1
0x4002c74	    0xff9098000000	                 call qword [rax + 0x98]	        71	elf.c	FUNCTION_1	CALL_1
0x4002c7a	        0x66894500	                      mov word [rbp], ax	        71	elf.c	FUNCTION_1	CALL_1
0x4002c7e	      0x498b442408	                mov rax, qword [r12 + 8]	        72	elf.c	FUNCTION_1	CALL_2
0x4002c83	        0x488d7b02	                      lea rdi, [rbx + 2]	        72	elf.c	FUNCTION_1	CALL_2
0x4002c87	    0xff9098000000	                 call qword [rax + 0x98]	        72	elf.c	FUNCTION_1	CALL_2
0x4002c8d	        0x66894502	                  mov word [rbp + 2], ax	        72	elf.c	FUNCTION_1	CALL_2
0x4002c91	      0x498b442408	                mov rax, qword [r12 + 8]	        73	elf.c	FUNCTION_1	CALL_3
0x4002c96	        0x488d7b04	                      lea rdi, [rbx + 4]	        73	elf.c	FUNCTION_1	CALL_3
0x4002c9a	    0xff9098000000	                 call qword [rax + 0x98]	        73	elf.c	FUNCTION_1	CALL_3
0x4002ca0	        0x66894504	                  mov word [rbp + 4], ax	        73	elf.c	FUNCTION_1	CALL_3
0x4002ca4	      0x498b442408	                mov rax, qword [r12 + 8]	        74	elf.c	FUNCTION_1	CALL_4
0x4002ca9	        0x488d7b06	                      lea rdi, [rbx + 6]	        74	elf.c	FUNCTION_1	CALL_4
0x4002cad	    0xff9098000000	                 call qword [rax + 0x98]	        74	elf.c	FUNCTION_1	CALL_4
0x4002cb3	        0x66894506	                  mov word [rbp + 6], ax	        74	elf.c	FUNCTION_1	CALL_4
0x4002cb7	      0x498b442408	                mov rax, qword [r12 + 8]	        75	elf.c	FUNCTION_1	CALL_5
0x4002cbc	        0x488d7b08	                      lea rdi, [rbx + 8]	        75	elf.c	FUNCTION_1	CALL_5
0x4002cc0	    0xff9080000000	                 call qword [rax + 0x80]	        75	elf.c	FUNCTION_1	CALL_5
0x4002cc6	        0x48894508	                mov qword [rbp + 8], rax	        75	elf.c	FUNCTION_1	CALL_5
0x4002cca	      0x498b442408	                mov rax, qword [r12 + 8]	        76	elf.c	FUNCTION_1	CALL_6
0x4002ccf	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	        76	elf.c	FUNCTION_1	CALL_6
0x4002cd3	    0xff9080000000	                 call qword [rax + 0x80]	        76	elf.c	FUNCTION_1	CALL_6
0x4002cd9	        0x48894510	            mov qword [rbp + 0x10], rax 	        76	elf.c	FUNCTION_1	CALL_6
0x4002cdd	      0x498b442408	                mov rax, qword [r12 + 8]	        77	elf.c	FUNCTION_1	CALL_7
0x4002ce2	        0x488d7b10	                   lea rdi, [rbx + 0x10]	        77	elf.c	FUNCTION_1	CALL_7
0x4002ce6	    0xff9080000000	                 call qword [rax + 0x80]	        77	elf.c	FUNCTION_1	CALL_7
0x4002cec	        0x48894518	            mov qword [rbp + 0x18], rax 	        77	elf.c	FUNCTION_1	CALL_7
0x4002cf0	              0x5b	                                 pop rbx	        78	elf.c	FUNCTION_1
0x4002cf1	              0x5d	                                 pop rbp	        78	elf.c	FUNCTION_1
0x4002cf2	            0x415c	                                 pop r12	        78	elf.c	FUNCTION_1
0x4002cf4	              0xc3	                                     ret	        78	elf.c	FUNCTION_1
_bfd_elf_rela_local_sym	functions,0:CALL,3:FOR,0:WHILE,0:SWITCH,0:IF,3:DO,0:ELSE,0	52
0x40140d0	            0x4155	                                push r13	     11273	elf.c	FUNCTION_196
0x40140d2	            0x4154	                                push r12	     11273	elf.c	FUNCTION_196
0x40140d4	              0x55	                                push rbp	     11273	elf.c	FUNCTION_196
0x40140d5	              0x53	                                push rbx	     11273	elf.c	FUNCTION_196
0x40140d6	        0x4883ec08	                              sub rsp, 8	     11273	elf.c	FUNCTION_196
0x40140da	          0x488b2a	                    mov rbp, qword [rdx]	     11274	elf.c	FUNCTION_196
0x40140dd	          0x4c8b06	                     mov r8, qword [rsi]	     11279	elf.c	FUNCTION_196
0x40140e0	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     11277	elf.c	FUNCTION_196
0x40140e4	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	     11277	elf.c	FUNCTION_196
0x40140e8	        0x48035828	             add rbx, qword [rax + 0x28]	     11277	elf.c	FUNCTION_196
0x40140ec	          0x4c01c3	                             add rbx, r8	     11277	elf.c	FUNCTION_196
0x40140ef	        0xf6452280	           test byte [rbp + 0x22], 0x80 	     11280	elf.c	FUNCTION_196	IF_1
0x40140f3	            0x740b	                            je 0x4014100	     11280	elf.c	FUNCTION_196	IF_1
0x40140f5	         0xfb64618	           movzx eax, byte [rsi + 0x18] 	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x40140f9	          0x83e00f	                            and eax, 0xf	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x40140fc	            0x3c03	                               cmp al, 3	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x40140fe	            0x7410	                            je 0x4014110	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x4014100	        0x4883c408	                              add rsp, 8	     11303	elf.c	FUNCTION_196
0x4014104	          0x4889d8	                            mov rax, rbx	     11303	elf.c	FUNCTION_196
0x4014107	              0x5b	                                 pop rbx	     11303	elf.c	FUNCTION_196
0x4014108	              0x5d	                                 pop rbp	     11303	elf.c	FUNCTION_196
0x4014109	            0x415c	                                 pop r12	     11303	elf.c	FUNCTION_196
0x401410b	            0x415d	                                 pop r13	     11303	elf.c	FUNCTION_196
0x401410d	              0xc3	                                     ret	     11303	elf.c	FUNCTION_196
0x401410e	            0x6690	                                     nop	     11303	elf.c	FUNCTION_196
0x4014110	         0xfb74524	           movzx eax, word [rbp + 0x24] 	     11282	elf.c	FUNCTION_196	IF_1
0x4014114	        0x66258003	                           and ax, 0x380	     11282	elf.c	FUNCTION_196	IF_1
0x4014118	        0x663d0001	                           cmp ax, 0x100	     11282	elf.c	FUNCTION_196	IF_1
0x401411c	            0x75e2	                           jne 0x4014100	     11282	elf.c	FUNCTION_196	IF_1
0x401411e	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4014125	          0x4989cd	                            mov r13, rcx	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4014128	          0x4c89c1	                             mov rcx, r8	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401412b	        0x49034d10	             add rcx, qword [r13 + 0x10]	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401412f	          0x4989d4	                            mov r12, rdx	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4014132	          0x4c89e6	                            mov rsi, r12	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4014135	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401413c	      0xe800000000	                          call 0x4014141	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4014141	        0x498b1424	                    mov rdx, qword [r12]	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x4014145	        0x49894510	             mov qword [r13 + 0x10], rax	     11284	elf.c	FUNCTION_196	IF_1
0x4014149	          0x4839d5	                            cmp rbp, rdx	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x401414c	            0x7411	                            je 0x401415f	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x401414e	        0xf6452180	           test byte [rbp + 0x21], 0x80 	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x4014152	            0x740b	                            je 0x401415f	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x4014154	    0x488995c80000	            mov qword [rbp + 0xc8], rdx 	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401415b	        0x498b1424	                    mov rdx, qword [r12]	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401415f	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	     11300	elf.c	FUNCTION_196	IF_1
0x4014163	        0x488b5260	            mov rdx, qword [rdx + 0x60] 	     11300	elf.c	FUNCTION_196	IF_1
0x4014167	        0x48035128	             add rdx, qword [rcx + 0x28]	     11300	elf.c	FUNCTION_196	IF_1
0x401416b	          0x4829da	                            sub rdx, rbx	     11300	elf.c	FUNCTION_196	IF_1
0x401416e	          0x4801d0	                            add rax, rdx	     11300	elf.c	FUNCTION_196	IF_1
0x4014171	        0x49894510	             mov qword [r13 + 0x10], rax	     11300	elf.c	FUNCTION_196	IF_1
0x4014175	            0xeb89	                           jmp 0x4014100	     11300	elf.c	FUNCTION_196	IF_1
_bfd_elf_reloc_type_class	functions,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	2
0x40140c0	            0x31c0	                            xor eax, eax	     11263	elf.c	FUNCTION_195
0x40140c2	              0xc3	                                     ret	     11263	elf.c	FUNCTION_195
elfcore_grok_note	functions,0:CALL,53:FOR,0:WHILE,0:SWITCH,1:IF,26:DO,0:ELSE,21	638
0x4011300	            0x4156	                                push r14	      9655	elf.c	FUNCTION_144
0x4011302	            0x4155	                                push r13	      9655	elf.c	FUNCTION_144
0x4011304	            0x4154	                                push r12	      9655	elf.c	FUNCTION_144
0x4011306	              0x55	                                push rbp	      9655	elf.c	FUNCTION_144
0x4011307	          0x4889fd	                            mov rbp, rdi	      9655	elf.c	FUNCTION_144
0x401130a	              0x53	                                push rbx	      9655	elf.c	FUNCTION_144
0x401130b	          0x4889f3	                            mov rbx, rsi	      9655	elf.c	FUNCTION_144
0x401130e	        0x4883ec30	                           sub rsp, 0x30	      9655	elf.c	FUNCTION_144
0x4011312	        0x488b5708	                mov rdx, qword [rdi + 8]	      9656	elf.c	FUNCTION_144	CALL_1
0x4011316	    0x64488b042528	                mov rax, qword fs:[0x28]	      9655	elf.c	FUNCTION_144
0x401131f	      0x4889442428	             mov qword [rsp + 0x28], rax	      9655	elf.c	FUNCTION_144
0x4011324	            0x31c0	                            xor eax, eax	      9655	elf.c	FUNCTION_144
0x4011326	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401132a	    0x488b8a680300	           mov rcx, qword [rdx + 0x368] 	      9656	elf.c	FUNCTION_144	CALL_1
0x4011331	    0x483d05030000	                          cmp rax, 0x305	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011337	     0xf846b070000	                            je 0x4011aa8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401133d	            0x7669	                           jbe 0x40113a8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401133f	    0x483d0c030000	                          cmp rax, 0x30c	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011345	     0xf84d5020000	                            je 0x4011620	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401134b	     0xf86cf000000	                           jbe 0x4011420	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011351	    0x483d03040000	                          cmp rax, 0x403	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011357	     0xf848b070000	                            je 0x4011ae8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401135d	     0xf868d010000	                           jbe 0x40114f0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011363	    0x483d7f2be646	                     cmp rax, 0x46e62b7f	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011369	     0xf84b9060000	                            je 0x4011a28	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401136f	    0x483d49474953	                     cmp rax, 0x53494749	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011375	     0xf84a5030000	                            je 0x4011720	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401137b	    0x483d454c4946	                     cmp rax, 0x46494c45	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011381	     0xf85e9010000	                           jne 0x4011570	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011387	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x401138b	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x401138f	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011394	      0xe800000000	                          call 0x4011399	      9192	elf.c	FUNCTION_116	CALL_1
0x4011399	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x401139c	      0xe907020000	                           jmp 0x40115a8	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x40113a1	     0xf1f80000000	                         nop dword [rax]	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x40113a8	    0x483d00010000	                          cmp rax, 0x100	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113ae	     0xf8474070000	                            je 0x4011b28	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113b4	     0xf8686010000	                           jbe 0x4011540	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113ba	    0x483d01030000	                          cmp rax, 0x301	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113c0	     0xf84a2070000	                            je 0x4011b68	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113c6	     0xf86bc000000	                           jbe 0x4011488	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113cc	    0x483d03030000	                          cmp rax, 0x303	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113d2	     0xf8490050000	                            je 0x4011968	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113d8	     0xf8782020000	                            ja 0x4011660	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40113de	        0x48833e06	                      cmp qword [rsi], 6	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x40113e2	     0xf8588010000	                           jne 0x4011570	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x40113e8	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x40113ec	      0xbf00000000	                              mov edi, 0	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x40113f1	      0xb906000000	                              mov ecx, 6	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x40113f6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x40113f8	     0xf8572010000	                           jne 0x4011570	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x40113fe	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011402	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011406	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401140b	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x401140e	      0xe800000000	                          call 0x4011413	      9192	elf.c	FUNCTION_116	CALL_1
0x4011413	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011416	      0xe98d010000	                           jmp 0x40115a8	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x401141b	       0xf1f440000	                   nop dword [rax + rax]	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x4011420	    0x483d08030000	                          cmp rax, 0x308	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011426	     0xf8474020000	                            je 0x40116a0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401142c	     0xf869e010000	                           jbe 0x40115d0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011432	    0x483d0a030000	                          cmp rax, 0x30a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011438	     0xf842a060000	                            je 0x4011a68	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401143e	     0xf8754040000	                            ja 0x4011898	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011444	        0x48833e06	                      cmp qword [rsi], 6	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x4011448	     0xf8522010000	                           jne 0x4011570	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x401144e	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4011452	      0xbf00000000	                              mov edi, 0	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4011457	      0xb906000000	                              mov ecx, 6	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x401145c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x401145e	     0xf850c010000	                           jne 0x4011570	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x4011464	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011468	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x401146c	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011471	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011474	      0xe800000000	                          call 0x4011479	      9192	elf.c	FUNCTION_116	CALL_1
0x4011479	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x401147c	      0xe927010000	                           jmp 0x40115a8	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x4011481	     0xf1f80000000	                         nop dword [rax]	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x4011488	    0x483d02020000	                          cmp rax, 0x202	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401148e	     0xf8414050000	                            je 0x40119a8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011494	    0x483d00030000	                          cmp rax, 0x300	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401149a	     0xf8478030000	                            je 0x4011818	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40114a0	    0x483d02010000	                          cmp rax, 0x102	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40114a6	     0xf85c4000000	                           jne 0x4011570	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40114ac	        0x48833e06	                      cmp qword [rsi], 6	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x40114b0	     0xf85ba000000	                           jne 0x4011570	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x40114b6	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x40114ba	      0xbf00000000	                              mov edi, 0	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x40114bf	      0xb906000000	                              mov ecx, 6	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x40114c4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x40114c6	     0xf85a4000000	                           jne 0x4011570	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x40114cc	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x40114d0	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x40114d4	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x40114d9	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x40114dc	      0xe800000000	                          call 0x40114e1	      9192	elf.c	FUNCTION_116	CALL_1
0x40114e1	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x40114e4	      0xe9bf000000	                           jmp 0x40115a8	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x40114e9	     0xf1f80000000	                         nop dword [rax]	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x40114f0	    0x483d01040000	                          cmp rax, 0x401	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40114f6	     0xf84ec040000	                            je 0x40119e8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40114fc	     0xf87de010000	                            ja 0x40116e0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011502	    0x483d00040000	                          cmp rax, 0x400	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011508	            0x7566	                           jne 0x4011570	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401150a	        0x48833e06	                      cmp qword [rsi], 6	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x401150e	            0x7560	                           jne 0x4011570	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x4011510	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4011514	      0xbf00000000	                              mov edi, 0	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4011519	      0xb906000000	                              mov ecx, 6	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x401151e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4011520	            0x754e	                           jne 0x4011570	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x4011522	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011526	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x401152a	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401152f	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011532	      0xe800000000	                          call 0x4011537	      9192	elf.c	FUNCTION_116	CALL_1
0x4011537	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x401153a	            0xeb6c	                           jmp 0x40115a8	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x401153c	         0xf1f4000	                         nop dword [rax]	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x4011540	        0x4883f803	                              cmp rax, 3	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011544	     0xf84e6030000	                            je 0x4011930	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401154a	            0x7634	                           jbe 0x4011580	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401154c	        0x4883f80d	                            cmp rax, 0xd	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011550	     0xf84da030000	                            je 0x4011930	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011556	        0x4883f812	                           cmp rax, 0x12	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401155a	     0xf8410020000	                            je 0x4011770	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011560	        0x4883f806	                              cmp rax, 6	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011564	     0xf846e030000	                            je 0x40118d8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401156a	    0x660f1f440000	                    nop word [rax + rax]	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011570	    0x41bc01000000	                             mov r12d, 1	      9661	elf.c	FUNCTION_144	SWITCH_1
0x4011576	            0xeb30	                           jmp 0x40115a8	      9661	elf.c	FUNCTION_144	SWITCH_1
0x4011578	     0xf1f84000000	                   nop dword [rax + rax]	      9661	elf.c	FUNCTION_144	SWITCH_1
0x4011580	        0x4883f801	                              cmp rax, 1	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011584	     0xf84b6010000	                            je 0x4011740	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401158a	        0x4883f802	                              cmp rax, 2	      9658	elf.c	FUNCTION_144	SWITCH_1
0x401158e	            0x75e0	                           jne 0x4011570	      9658	elf.c	FUNCTION_144	SWITCH_1
0x4011590	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011594	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011598	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401159d	      0xe800000000	                          call 0x40115a2	      9192	elf.c	FUNCTION_116	CALL_1
0x40115a2	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x40115a5	           0xf1f00	                         nop dword [rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x40115a8	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      9870	elf.c	FUNCTION_144
0x40115ad	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9870	elf.c	FUNCTION_144
0x40115b6	          0x4489e0	                           mov eax, r12d	      9870	elf.c	FUNCTION_144
0x40115b9	     0xf85e8070000	                           jne 0x4011da7	      9870	elf.c	FUNCTION_144
0x40115bf	        0x4883c430	                           add rsp, 0x30	      9870	elf.c	FUNCTION_144
0x40115c3	              0x5b	                                 pop rbx	      9870	elf.c	FUNCTION_144
0x40115c4	              0x5d	                                 pop rbp	      9870	elf.c	FUNCTION_144
0x40115c5	            0x415c	                                 pop r12	      9870	elf.c	FUNCTION_144
0x40115c7	            0x415d	                                 pop r13	      9870	elf.c	FUNCTION_144
0x40115c9	            0x415e	                                 pop r14	      9870	elf.c	FUNCTION_144
0x40115cb	              0xc3	                                     ret	      9870	elf.c	FUNCTION_144
0x40115cc	         0xf1f4000	                         nop dword [rax]	      9870	elf.c	FUNCTION_144
0x40115d0	    0x483d06030000	                          cmp rax, 0x306	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40115d6	     0xf847c020000	                            je 0x4011858	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40115dc	    0x483d07030000	                          cmp rax, 0x307	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40115e2	            0x758c	                           jne 0x4011570	      9658	elf.c	FUNCTION_144	SWITCH_1
0x40115e4	        0x48833e06	                      cmp qword [rsi], 6	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x40115e8	            0x7586	                           jne 0x4011570	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x40115ea	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x40115ee	      0xbf00000000	                              mov edi, 0	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x40115f3	      0xb906000000	                              mov ecx, 6	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x40115f8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x40115fa	     0xf8570ffffff	                           jne 0x4011570	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x4011600	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011604	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011608	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401160d	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011610	      0xe800000000	                          call 0x4011615	      9192	elf.c	FUNCTION_116	CALL_1
0x4011615	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011618	            0xeb8e	                           jmp 0x40115a8	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x401161a	    0x660f1f440000	                    nop word [rax + rax]	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x4011620	        0x48833e06	                      cmp qword [rsi], 6	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x4011624	     0xf8546ffffff	                           jne 0x4011570	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x401162a	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x401162e	      0xbf00000000	                              mov edi, 0	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4011633	      0xb906000000	                              mov ecx, 6	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4011638	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x401163a	     0xf8530ffffff	                           jne 0x4011570	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x4011640	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011644	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011648	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401164d	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011650	      0xe800000000	                          call 0x4011655	      9192	elf.c	FUNCTION_116	CALL_1
0x4011655	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011658	      0xe94bffffff	                           jmp 0x40115a8	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x401165d	           0xf1f00	                         nop dword [rax]	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x4011660	        0x48833e06	                      cmp qword [rsi], 6	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x4011664	     0xf8506ffffff	                           jne 0x4011570	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x401166a	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x401166e	      0xbf00000000	                              mov edi, 0	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4011673	      0xb906000000	                              mov ecx, 6	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4011678	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x401167a	     0xf85f0feffff	                           jne 0x4011570	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x4011680	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011684	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011688	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401168d	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011690	      0xe800000000	                          call 0x4011695	      9192	elf.c	FUNCTION_116	CALL_1
0x4011695	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011698	      0xe90bffffff	                           jmp 0x40115a8	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x401169d	           0xf1f00	                         nop dword [rax]	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x40116a0	        0x48833e06	                      cmp qword [rsi], 6	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x40116a4	     0xf85c6feffff	                           jne 0x4011570	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x40116aa	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x40116ae	      0xbf00000000	                              mov edi, 0	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x40116b3	      0xb906000000	                              mov ecx, 6	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x40116b8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x40116ba	     0xf85b0feffff	                           jne 0x4011570	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x40116c0	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x40116c4	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x40116c8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x40116cd	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x40116d0	      0xe800000000	                          call 0x40116d5	      9192	elf.c	FUNCTION_116	CALL_1
0x40116d5	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x40116d8	      0xe9cbfeffff	                           jmp 0x40115a8	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x40116dd	           0xf1f00	                         nop dword [rax]	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x40116e0	        0x48833e06	                      cmp qword [rsi], 6	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x40116e4	     0xf8586feffff	                           jne 0x4011570	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x40116ea	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x40116ee	      0xbf00000000	                              mov edi, 0	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x40116f3	      0xb906000000	                              mov ecx, 6	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x40116f8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x40116fa	     0xf8570feffff	                           jne 0x4011570	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x4011700	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011704	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011708	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401170d	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011710	      0xe800000000	                          call 0x4011715	      9192	elf.c	FUNCTION_116	CALL_1
0x4011715	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011718	      0xe98bfeffff	                           jmp 0x40115a8	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x401171d	           0xf1f00	                         nop dword [rax]	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x4011720	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011724	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011728	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x401172d	      0xe800000000	                          call 0x4011732	      9192	elf.c	FUNCTION_116	CALL_1
0x4011732	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011735	      0xe96efeffff	                           jmp 0x40115a8	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x401173a	    0x660f1f440000	                    nop word [rax + rax]	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x4011740	    0x488b81080200	           mov rax, qword [rcx + 0x208] 	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x4011747	          0x4885c0	                           test rax, rax	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x401174a	            0x740a	                            je 0x4011756	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x401174c	            0xffd0	                                call rax	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x401174e	            0x85c0	                           test eax, eax	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4011750	     0xf851afeffff	                           jne 0x4011570	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x4011756	          0x4889de	                            mov rsi, rbx	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4011759	          0x4889ef	                            mov rdi, rbp	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x401175c	      0xe8df12ffff	          call sym.elfcore_grok_prstatus	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4011761	          0x4189c4	                           mov r12d, eax	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4011764	      0xe93ffeffff	                           jmp 0x40115a8	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4011769	     0xf1f80000000	                         nop dword [rax]	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x4011770	    0x48817e08d702	              cmp qword [rsi + 8], 0x2d7	      9575	elf.c	FUNCTION_143	IF_1
0x4011778	     0xf86f2fdffff	                           jbe 0x4011570	      9575	elf.c	FUNCTION_143	IF_1
0x401177e	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x4011782	      0xbf00000000	                              mov edi, 0	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x4011787	      0xb905000000	                              mov ecx, 5	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x401178c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x401178e	        0x410f97c4	                               seta r12b	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x4011792	           0xf92c0	                                 setb al	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x4011795	          0x4129c4	                           sub r12d, eax	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x4011798	        0x450fbee4	                        movsx r12d, r12b	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x401179c	          0x4585e4	                         test r12d, r12d	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x401179f	     0xf85cbfdffff	                           jne 0x4011570	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x40117a5	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9581	elf.c	FUNCTION_143	CALL_2
0x40117a9	          0xff5238	                 call qword [rdx + 0x38]	      9581	elf.c	FUNCTION_143	CALL_2
0x40117ac	          0x83f802	                              cmp eax, 2	      9583	elf.c	FUNCTION_143	SWITCH_1
0x40117af	     0xf84be040000	                            je 0x4011c73	      9583	elf.c	FUNCTION_143	SWITCH_1
0x40117b5	          0x83f803	                              cmp eax, 3	      9583	elf.c	FUNCTION_143	SWITCH_1
0x40117b8	     0xf84e7030000	                            je 0x4011ba5	      9583	elf.c	FUNCTION_143	SWITCH_1
0x40117be	          0x83f801	                              cmp eax, 1	      9583	elf.c	FUNCTION_143	SWITCH_1
0x40117c1	     0xf85a9fdffff	                           jne 0x4011570	      9583	elf.c	FUNCTION_143	SWITCH_1
0x40117c7	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x40117ce	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x40117d5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x40117d9	        0x488d7808	                      lea rdi, [rax + 8]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x40117dd	        0x488b4508	                mov rax, qword [rbp + 8]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x40117e1	          0xff5038	                 call qword [rax + 0x38]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x40117e4	      0x4189442404	                mov dword [r12 + 4], eax	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x40117e9	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x40117f0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x40117f4	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x40117fb	        0x488b4508	                mov rax, qword [rbp + 8]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x40117ff	        0x4883c70c	                            add rdi, 0xc	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x4011803	          0xff5038	                 call qword [rax + 0x38]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x4011806	        0x41890424	                    mov dword [r12], eax	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x401180a	    0x41bc01000000	                             mov r12d, 1	      9650	elf.c	FUNCTION_143
0x4011810	      0xe993fdffff	                           jmp 0x40115a8	      9650	elf.c	FUNCTION_143
0x4011815	           0xf1f00	                         nop dword [rax]	      9650	elf.c	FUNCTION_143
0x4011818	        0x48833e06	                      cmp qword [rsi], 6	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x401181c	     0xf854efdffff	                           jne 0x4011570	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x4011822	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x4011826	      0xbf00000000	                              mov edi, 0	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x401182b	      0xb906000000	                              mov ecx, 6	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x4011830	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x4011832	     0xf8538fdffff	                           jne 0x4011570	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x4011838	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x401183c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011840	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011845	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011848	      0xe800000000	                          call 0x401184d	      9192	elf.c	FUNCTION_116	CALL_1
0x401184d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011850	      0xe953fdffff	                           jmp 0x40115a8	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x4011855	           0xf1f00	                         nop dword [rax]	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x4011858	        0x48833e06	                      cmp qword [rsi], 6	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x401185c	     0xf850efdffff	                           jne 0x4011570	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x4011862	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4011866	      0xbf00000000	                              mov edi, 0	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x401186b	      0xb906000000	                              mov ecx, 6	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4011870	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4011872	     0xf85f8fcffff	                           jne 0x4011570	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x4011878	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x401187c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011880	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011885	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011888	      0xe800000000	                          call 0x401188d	      9192	elf.c	FUNCTION_116	CALL_1
0x401188d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011890	      0xe913fdffff	                           jmp 0x40115a8	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x4011895	           0xf1f00	                         nop dword [rax]	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x4011898	        0x48833e06	                      cmp qword [rsi], 6	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x401189c	     0xf85cefcffff	                           jne 0x4011570	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x40118a2	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x40118a6	      0xbf00000000	                              mov edi, 0	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x40118ab	      0xb906000000	                              mov ecx, 6	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x40118b0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x40118b2	     0xf85b8fcffff	                           jne 0x4011570	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x40118b8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x40118bc	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x40118c0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x40118c5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x40118c8	      0xe800000000	                          call 0x40118cd	      9192	elf.c	FUNCTION_116	CALL_1
0x40118cd	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x40118d0	      0xe9d3fcffff	                           jmp 0x40115a8	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x40118d5	           0xf1f00	                         nop dword [rax]	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x40118d8	      0xba00010000	                          mov edx, 0x100	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x40118dd	      0xbe00000000	                              mov esi, 0	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x40118e2	          0x4531e4	                          xor r12d, r12d	      9853	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x40118e5	      0xe800000000	                          call 0x40118ea	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x40118ea	          0x4885c0	                           test rax, rax	      9852	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x40118ed	          0x4989c5	                            mov r13, rax	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x40118f0	     0xf84b2fcffff	                            je 0x40115a8	      9852	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x40118f6	        0x488b4308	                mov rax, qword [rbx + 8]	      9854	elf.c	FUNCTION_144	SWITCH_1
0x40118fa	          0x4889ef	                            mov rdi, rbp	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x40118fd	    0x41bc01000000	                             mov r12d, 1	      9858	elf.c	FUNCTION_144	SWITCH_1
0x4011903	        0x49894538	             mov qword [r13 + 0x38], rax	      9854	elf.c	FUNCTION_144	SWITCH_1
0x4011907	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      9855	elf.c	FUNCTION_144	SWITCH_1
0x401190b	    0x498985900000	             mov qword [r13 + 0x90], rax	      9855	elf.c	FUNCTION_144	SWITCH_1
0x4011912	      0xe800000000	                          call 0x4011917	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4011917	          0x8d501f	                   lea edx, [rax + 0x1f]	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x401191a	            0x85c0	                           test eax, eax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x401191c	           0xf48c2	                          cmovs eax, edx	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x401191f	          0xc1f805	                              sar eax, 5	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4011922	          0x83c001	                              add eax, 1	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4011925	        0x41894570	             mov dword [r13 + 0x70], eax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x4011929	      0xe97afcffff	                           jmp 0x40115a8	      9858	elf.c	FUNCTION_144	SWITCH_1
0x401192e	            0x6690	                                     nop	      9858	elf.c	FUNCTION_144	SWITCH_1
0x4011930	    0x488b81100200	           mov rax, qword [rcx + 0x210] 	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x4011937	          0x4885c0	                           test rax, rax	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x401193a	            0x7410	                            je 0x401194c	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x401193c	          0x4889de	                            mov rsi, rbx	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x401193f	          0x4889ef	                            mov rdi, rbp	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4011942	            0xffd0	                                call rax	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4011944	            0x85c0	                           test eax, eax	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x4011946	     0xf8524fcffff	                           jne 0x4011570	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x401194c	        0x488b7308	                mov rsi, qword [rbx + 8]	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4011950	        0x488d5320	                   lea rdx, [rbx + 0x20]	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4011954	          0x4889ef	                            mov rdi, rbp	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4011957	      0xe8b40dffff	    call sym.elfcore_grok_psinfo.isra.29	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x401195c	          0x4189c4	                           mov r12d, eax	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x401195f	      0xe944fcffff	                           jmp 0x40115a8	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4011964	         0xf1f4000	                         nop dword [rax]	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x4011968	        0x48833e06	                      cmp qword [rsi], 6	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x401196c	     0xf85fefbffff	                           jne 0x4011570	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x4011972	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4011976	      0xbf00000000	                              mov edi, 0	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x401197b	      0xb906000000	                              mov ecx, 6	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4011980	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4011982	     0xf85e8fbffff	                           jne 0x4011570	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x4011988	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x401198c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011990	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011995	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011998	      0xe800000000	                          call 0x401199d	      9192	elf.c	FUNCTION_116	CALL_1
0x401199d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x40119a0	      0xe903fcffff	                           jmp 0x40115a8	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x40119a5	           0xf1f00	                         nop dword [rax]	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x40119a8	        0x48833e06	                      cmp qword [rsi], 6	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x40119ac	     0xf85befbffff	                           jne 0x4011570	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x40119b2	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40119b6	      0xbf00000000	                              mov edi, 0	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40119bb	      0xb906000000	                              mov ecx, 6	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40119c0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40119c2	     0xf85a8fbffff	                           jne 0x4011570	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x40119c8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x40119cc	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x40119d0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x40119d5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x40119d8	      0xe800000000	                          call 0x40119dd	      9192	elf.c	FUNCTION_116	CALL_1
0x40119dd	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x40119e0	      0xe9c3fbffff	                           jmp 0x40115a8	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x40119e5	           0xf1f00	                         nop dword [rax]	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x40119e8	        0x48833e06	                      cmp qword [rsi], 6	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x40119ec	     0xf857efbffff	                           jne 0x4011570	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x40119f2	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x40119f6	      0xbf00000000	                              mov edi, 0	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x40119fb	      0xb906000000	                              mov ecx, 6	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4011a00	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4011a02	     0xf8568fbffff	                           jne 0x4011570	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x4011a08	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a0c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a10	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a15	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a18	      0xe800000000	                          call 0x4011a1d	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a1d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a20	      0xe983fbffff	                           jmp 0x40115a8	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x4011a25	           0xf1f00	                         nop dword [rax]	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x4011a28	        0x48833e06	                      cmp qword [rsi], 6	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x4011a2c	     0xf853efbffff	                           jne 0x4011570	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x4011a32	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x4011a36	      0xbf00000000	                              mov edi, 0	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x4011a3b	      0xb906000000	                              mov ecx, 6	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x4011a40	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x4011a42	     0xf8528fbffff	                           jne 0x4011570	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x4011a48	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a4c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a50	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a55	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a58	      0xe800000000	                          call 0x4011a5d	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a5d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a60	      0xe943fbffff	                           jmp 0x40115a8	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x4011a65	           0xf1f00	                         nop dword [rax]	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x4011a68	        0x48833e06	                      cmp qword [rsi], 6	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x4011a6c	     0xf85fefaffff	                           jne 0x4011570	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x4011a72	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4011a76	      0xbf00000000	                              mov edi, 0	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4011a7b	      0xb906000000	                              mov ecx, 6	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4011a80	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4011a82	     0xf85e8faffff	                           jne 0x4011570	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x4011a88	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a8c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a90	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a95	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a98	      0xe800000000	                          call 0x4011a9d	      9192	elf.c	FUNCTION_116	CALL_1
0x4011a9d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011aa0	      0xe903fbffff	                           jmp 0x40115a8	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x4011aa5	           0xf1f00	                         nop dword [rax]	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x4011aa8	        0x48833e06	                      cmp qword [rsi], 6	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x4011aac	     0xf85befaffff	                           jne 0x4011570	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x4011ab2	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4011ab6	      0xbf00000000	                              mov edi, 0	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4011abb	      0xb906000000	                              mov ecx, 6	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4011ac0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4011ac2	     0xf85a8faffff	                           jne 0x4011570	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x4011ac8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011acc	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011ad0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011ad5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011ad8	      0xe800000000	                          call 0x4011add	      9192	elf.c	FUNCTION_116	CALL_1
0x4011add	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011ae0	      0xe9c3faffff	                           jmp 0x40115a8	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x4011ae5	           0xf1f00	                         nop dword [rax]	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x4011ae8	        0x48833e06	                      cmp qword [rsi], 6	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x4011aec	     0xf857efaffff	                           jne 0x4011570	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x4011af2	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4011af6	      0xbf00000000	                              mov edi, 0	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4011afb	      0xb906000000	                              mov ecx, 6	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4011b00	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4011b02	     0xf8568faffff	                           jne 0x4011570	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x4011b08	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b0c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b10	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b15	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b18	      0xe800000000	                          call 0x4011b1d	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b1d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b20	      0xe983faffff	                           jmp 0x40115a8	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x4011b25	           0xf1f00	                         nop dword [rax]	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x4011b28	        0x48833e06	                      cmp qword [rsi], 6	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x4011b2c	     0xf853efaffff	                           jne 0x4011570	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x4011b32	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4011b36	      0xbf00000000	                              mov edi, 0	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4011b3b	      0xb906000000	                              mov ecx, 6	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4011b40	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4011b42	     0xf8528faffff	                           jne 0x4011570	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x4011b48	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b4c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b50	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b55	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b58	      0xe800000000	                          call 0x4011b5d	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b5d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b60	      0xe943faffff	                           jmp 0x40115a8	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x4011b65	           0xf1f00	                         nop dword [rax]	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x4011b68	        0x48833e06	                      cmp qword [rsi], 6	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x4011b6c	     0xf85fef9ffff	                           jne 0x4011570	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x4011b72	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4011b76	      0xbf00000000	                              mov edi, 0	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4011b7b	      0xb906000000	                              mov ecx, 6	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4011b80	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4011b82	     0xf85e8f9ffff	                           jne 0x4011570	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x4011b88	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b8c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b90	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b95	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b98	      0xe800000000	                          call 0x4011b9d	      9192	elf.c	FUNCTION_116	CALL_1
0x4011b9d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x4011ba0	      0xe903faffff	                           jmp 0x40115a8	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x4011ba5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x4011ba9	          0x4989e6	                            mov r14, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011bac	        0x488d7804	                      lea rdi, [rax + 4]	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x4011bb0	        0x488b4508	                mov rax, qword [rbp + 8]	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x4011bb4	          0xff5038	                 call qword [rax + 0x38]	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x4011bb7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011bbc	          0x4989c0	                             mov r8, rax	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x4011bbf	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011bc4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011bc9	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011bcc	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011bce	      0xe800000000	                          call 0x4011bd3	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011bd3	          0x4889e0	                            mov rax, rsp	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bd6	            0x8b08	                    mov ecx, dword [rax]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bd8	        0x4883c004	                              add rax, 4	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bdc	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011be2	            0xf7d1	                                 not ecx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011be4	            0x21ca	                            and edx, ecx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011be6	    0x81e280808080	                     and edx, 0x80808080	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bec	            0x74e8	                            je 0x4011bd6	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bee	            0x89d1	                            mov ecx, edx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bf0	          0x4889ef	                            mov rdi, rbp	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_16
0x4011bf3	          0xc1e910	                           shr ecx, 0x10	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bf6	    0xf7c280800000	                        test edx, 0x8080	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bfc	           0xf44d1	                          cmove edx, ecx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011bff	        0x488d4802	                      lea rcx, [rax + 2]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011c03	        0x480f44c1	                          cmove rax, rcx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011c07	            0x89d1	                            mov ecx, edx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011c09	              0xd1	                              add cl, dl	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011c0b	        0x4883d803	                              sbb rax, 3	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011c0f	          0x4c29f0	                            sub rax, r14	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011c12	        0x4c8d6801	                      lea r13, [rax + 1]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x4011c16	          0x4c89ee	                            mov rsi, r13	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_16
0x4011c19	      0xe800000000	                          call 0x4011c1e	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_16
0x4011c1e	          0x4885c0	                           test rax, rax	      9631	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x4011c21	     0xf8481f9ffff	                            je 0x40115a8	      9631	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x4011c27	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_221	CALL_3
0x4011c2a	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_221	CALL_3
0x4011c2d	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4011c30	      0xe800000000	                          call 0x4011c35	        53	string3.h	FUNCTION_221	CALL_3
0x4011c35	      0xba00010000	                          mov edx, 0x100	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_18
0x4011c3a	          0x4889c6	                            mov rsi, rax	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_18
0x4011c3d	          0x4889ef	                            mov rdi, rbp	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_18
0x4011c40	      0xe800000000	                          call 0x4011c45	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_18
0x4011c45	          0x4885c0	                           test rax, rax	      9638	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x4011c48	     0xf845af9ffff	                            je 0x40115a8	      9638	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x4011c4e	        0x488b5308	                mov rdx, qword [rbx + 8]	      9641	elf.c	FUNCTION_143	SWITCH_1
0x4011c52	    0x41bc01000000	                             mov r12d, 1	      9650	elf.c	FUNCTION_143
0x4011c58	        0x48895038	             mov qword [rax + 0x38], rdx	      9641	elf.c	FUNCTION_143	SWITCH_1
0x4011c5c	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      9642	elf.c	FUNCTION_143	SWITCH_1
0x4011c60	    0xc74070020000	               mov dword [rax + 0x70], 2	      9643	elf.c	FUNCTION_143	SWITCH_1
0x4011c67	    0x488990900000	             mov qword [rax + 0x90], rdx	      9642	elf.c	FUNCTION_143	SWITCH_1
0x4011c6e	      0xe935f9ffff	                           jmp 0x40115a8	      9642	elf.c	FUNCTION_143	SWITCH_1
0x4011c73	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x4011c77	          0x4989e6	                            mov r14, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011c7a	        0x488d7808	                      lea rdi, [rax + 8]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x4011c7e	        0x488b4508	                mov rax, qword [rbp + 8]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x4011c82	          0xff5038	                 call qword [rax + 0x38]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x4011c85	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011c8a	          0x4989c0	                             mov r8, rax	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x4011c8d	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011c92	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011c97	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011c9a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011c9c	      0xe800000000	                          call 0x4011ca1	        33	stdio2.h	FUNCTION_204	CALL_1
0x4011ca1	          0x4889e0	                            mov rax, rsp	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011ca4	            0x8b08	                    mov ecx, dword [rax]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011ca6	        0x4883c004	                              add rax, 4	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011caa	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cb0	            0xf7d1	                                 not ecx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cb2	            0x21ca	                            and edx, ecx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cb4	    0x81e280808080	                     and edx, 0x80808080	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cba	            0x74e8	                            je 0x4011ca4	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cbc	            0x89d1	                            mov ecx, edx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cbe	          0x4889ef	                            mov rdi, rbp	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x4011cc1	          0xc1e910	                           shr ecx, 0x10	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cc4	    0xf7c280800000	                        test edx, 0x8080	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cca	           0xf44d1	                          cmove edx, ecx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011ccd	        0x488d4802	                      lea rcx, [rax + 2]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cd1	        0x480f44c1	                          cmove rax, rcx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cd5	            0x89d1	                            mov ecx, edx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cd7	              0xd1	                              add cl, dl	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cd9	        0x4883d803	                              sbb rax, 3	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011cdd	          0x4c29f0	                            sub rax, r14	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011ce0	        0x4c8d6801	                      lea r13, [rax + 1]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x4011ce4	          0x4c89ee	                            mov rsi, r13	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x4011ce7	      0xe800000000	                          call 0x4011cec	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x4011cec	          0x4885c0	                           test rax, rax	      9600	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x4011cef	     0xf84b3f8ffff	                            je 0x40115a8	      9600	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x4011cf5	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_221	CALL_3
0x4011cf8	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_221	CALL_3
0x4011cfb	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4011cfe	      0xe800000000	                          call 0x4011d03	        53	string3.h	FUNCTION_221	CALL_3
0x4011d03	      0xba00010000	                          mov edx, 0x100	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x4011d08	          0x4889c6	                            mov rsi, rax	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x4011d0b	          0x4889ef	                            mov rdi, rbp	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x4011d0e	      0xe800000000	                          call 0x4011d13	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x4011d13	          0x4885c0	                           test rax, rax	      9606	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x4011d16	          0x4989c5	                            mov r13, rax	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x4011d19	     0xf8489f8ffff	                            je 0x40115a8	      9606	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x4011d1f	    0x48c74038cc02	          mov qword [rax + 0x38], 0x2cc 	      9610	elf.c	FUNCTION_143	SWITCH_1
0x4011d27	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      9612	elf.c	FUNCTION_143	SWITCH_1
0x4011d2b	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9616	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x4011d2f	    0x41c745700200	               mov dword [r13 + 0x70], 2	      9613	elf.c	FUNCTION_143	SWITCH_1
0x4011d37	        0x4883c00c	                            add rax, 0xc	      9612	elf.c	FUNCTION_143	SWITCH_1
0x4011d3b	    0x498985900000	             mov qword [r13 + 0x90], rax	      9612	elf.c	FUNCTION_143	SWITCH_1
0x4011d42	        0x488b4508	                mov rax, qword [rbp + 8]	      9616	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x4011d46	        0x4883c708	                              add rdi, 8	      9616	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x4011d4a	          0xff5038	                 call qword [rax + 0x38]	      9616	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x4011d4d	            0x85c0	                           test eax, eax	      9618	elf.c	FUNCTION_143	SWITCH_1	IF_5
0x4011d4f	     0xf841bf8ffff	                            je 0x4011570	      9618	elf.c	FUNCTION_143	SWITCH_1	IF_5
0x4011d55	      0xbe00000000	                              mov esi, 0	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4011d5a	          0x4889ef	                            mov rdi, rbp	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4011d5d	      0xe800000000	                          call 0x4011d62	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4011d62	          0x4885c0	                           test rax, rax	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4011d65	     0xf8505f8ffff	                           jne 0x4011570	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4011d6b	        0x418b5520	            mov edx, dword [r13 + 0x20] 	      9054	elf.c	FUNCTION_113	CALL_2
0x4011d6f	      0xbe00000000	                              mov esi, 0	      9054	elf.c	FUNCTION_113	CALL_2
0x4011d74	          0x4889ef	                            mov rdi, rbp	      9054	elf.c	FUNCTION_113	CALL_2
0x4011d77	      0xe800000000	                          call 0x4011d7c	      9054	elf.c	FUNCTION_113	CALL_2
0x4011d7c	          0x4885c0	                           test rax, rax	      9055	elf.c	FUNCTION_113	IF_2
0x4011d7f	     0xf8423f8ffff	                            je 0x40115a8	      9055	elf.c	FUNCTION_113	IF_2
0x4011d85	        0x498b5538	            mov rdx, qword [r13 + 0x38] 	      9058	elf.c	FUNCTION_113
0x4011d89	        0x48895038	             mov qword [rax + 0x38], rdx	      9058	elf.c	FUNCTION_113
0x4011d8d	    0x498b95900000	            mov rdx, qword [r13 + 0x90] 	      9059	elf.c	FUNCTION_113
0x4011d94	    0x488990900000	             mov qword [rax + 0x90], rdx	      9059	elf.c	FUNCTION_113
0x4011d9b	        0x418b5570	            mov edx, dword [r13 + 0x70] 	      9060	elf.c	FUNCTION_113
0x4011d9f	          0x895070	             mov dword [rax + 0x70], edx	      9060	elf.c	FUNCTION_113
0x4011da2	      0xe9c9f7ffff	                           jmp 0x4011570	      9060	elf.c	FUNCTION_113
0x4011da7	      0xe800000000	                          call 0x4011dac	      9870	elf.c	FUNCTION_144
_bfd_elf_get_dynamic_symtab_upper_bound	functions,0:CALL,4:FOR,0:WHILE,0:SWITCH,0:IF,2:DO,0:ELSE,0	24
0x400df90	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8131	elf.c	FUNCTION_90	CALL_1
0x400df97	    0x8b907c0c0000	           mov edx, dword [rax + 0xc7c] 	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x400df9d	            0x85d2	                           test edx, edx	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x400df9f	            0x743f	                            je 0x400dfe0	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x400dfa1	        0x488b5708	                mov rdx, qword [rdi + 8]	      8139	elf.c	FUNCTION_90	CALL_4
0x400dfa5	    0x488b80780100	           mov rax, qword [rax + 0x178] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400dfac	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400dfb3	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400dfba	         0xfb67205	               movzx esi, byte [rdx + 5]	      8139	elf.c	FUNCTION_90	CALL_4
0x400dfbe	            0x31d2	                            xor edx, edx	      8139	elf.c	FUNCTION_90	CALL_4
0x400dfc0	          0x48f7f6	                                 div rsi	      8139	elf.c	FUNCTION_90	CALL_4
0x400dfc3	    0x488d14c50800	                    lea rdx, [rax*8 + 8]	      8140	elf.c	FUNCTION_90
0x400dfcb	          0x4889c1	                            mov rcx, rax	      8139	elf.c	FUNCTION_90	CALL_4
0x400dfce	          0x4885c9	                           test rcx, rcx	      8140	elf.c	FUNCTION_90
0x400dfd1	        0x488d42f8	                      lea rax, [rdx - 8]	      8142	elf.c	FUNCTION_90	IF_2
0x400dfd5	        0x480f4ec2	                         cmovle rax, rdx	      8140	elf.c	FUNCTION_90
0x400dfd9	              0xc3	                                     ret	      8140	elf.c	FUNCTION_90
0x400dfda	    0x660f1f440000	                    nop word [rax + rax]	      8140	elf.c	FUNCTION_90
0x400dfe0	        0x4883ec08	                              sub rsp, 8	      8128	elf.c	FUNCTION_90
0x400dfe4	      0xbf05000000	                              mov edi, 5	      8135	elf.c	FUNCTION_90	IF_1	CALL_3
0x400dfe9	      0xe800000000	                          call 0x400dfee	      8135	elf.c	FUNCTION_90	IF_1	CALL_3
0x400dfee	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8136	elf.c	FUNCTION_90	IF_1
0x400dff5	        0x4883c408	                              add rsp, 8	      8145	elf.c	FUNCTION_90
0x400dff9	              0xc3	                                     ret	      8145	elf.c	FUNCTION_90
_bfd_elf_sizeof_headers	functions,0:CALL,6:FOR,1:WHILE,0:SWITCH,0:IF,3:DO,0:ELSE,0	41
0x40101a0	              0x55	                                push rbp	      8817	elf.c	FUNCTION_106
0x40101a1	              0x53	                                push rbx	      8817	elf.c	FUNCTION_106
0x40101a2	        0x4883ec08	                              sub rsp, 8	      8817	elf.c	FUNCTION_106
0x40101a6	        0x488b4708	                mov rax, qword [rdi + 8]	      8818	elf.c	FUNCTION_106	CALL_1
0x40101aa	           0xfb616	                   movzx edx, byte [rsi]	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x40101ad	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8819	elf.c	FUNCTION_106
0x40101b4	          0x83e203	                              and edx, 3	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x40101b7	          0x80fa02	                               cmp dl, 2	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x40101ba	    0x4c8b80000300	            mov r8, qword [rax + 0x300] 	      8819	elf.c	FUNCTION_106
0x40101c1	        0x410fb618	                    movzx ebx, byte [r8]	      8819	elf.c	FUNCTION_106
0x40101c5	           0xfb6c3	                           movzx eax, bl	      8819	elf.c	FUNCTION_106
0x40101c8	            0x741e	                            je 0x40101e8	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x40101ca	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x40101d1	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x40101d8	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x40101dc	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      8825	elf.c	FUNCTION_106	IF_1	IF_2
0x40101e0	            0x740e	                            je 0x40101f0	      8825	elf.c	FUNCTION_106	IF_1	IF_2
0x40101e2	        0x48894138	             mov qword [rcx + 0x38], rax	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x40101e6	             0x1d8	                            add eax, ebx	      8838	elf.c	FUNCTION_106	IF_1
0x40101e8	        0x4883c408	                              add rsp, 8	      8842	elf.c	FUNCTION_106
0x40101ec	              0x5b	                                 pop rbx	      8842	elf.c	FUNCTION_106
0x40101ed	              0x5d	                                 pop rbp	      8842	elf.c	FUNCTION_106
0x40101ee	              0xc3	                                     ret	      8842	elf.c	FUNCTION_106
0x40101ef	              0x90	                                     nop	      8842	elf.c	FUNCTION_106
0x40101f0	          0x488b11	                    mov rdx, qword [rcx]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40101f3	          0x4885d2	                           test rdx, rdx	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40101f6	            0x7418	                            je 0x4010210	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40101f8	      0x450fb64001	                movzx r8d, byte [r8 + 1]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40101fd	            0x31c0	                            xor eax, eax	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x40101ff	              0x90	                                     nop	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x4010200	          0x488b12	                    mov rdx, qword [rdx]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x4010203	          0x4c01c0	                             add rax, r8	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x4010206	          0x4885d2	                           test rdx, rdx	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x4010209	            0x75f5	                           jne 0x4010200	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x401020b	          0x4885c0	                           test rax, rax	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x401020e	            0x75d2	                           jne 0x40101e2	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x4010210	          0x4889fd	                            mov rbp, rdi	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x4010213	      0xe878fffeff	        call sym.get_program_header_size	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x4010218	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x401021f	    0x488b8a980c00	           mov rcx, qword [rdx + 0xc98] 	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x4010226	            0xebba	                           jmp 0x40101e2	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
bfd_section_from_phdr	functions,0:CALL,13:FOR,0:WHILE,0:SWITCH,1:IF,2:DO,0:ELSE,0	115
0x4006ec0	          0x488b06	                    mov rax, qword [rsi]	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006ec3	        0x4883f804	                              cmp rax, 4	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006ec7	     0xf84e3000000	                            je 0x4006fb0	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006ecd	            0x7631	                           jbe 0x4006f00	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006ecf	    0x483d50e57464	                     cmp rax, 0x6474e550	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006ed5	     0xf84c5000000	                            je 0x4006fa0	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006edb	            0x7753	                            ja 0x4006f30	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006edd	        0x4883f805	                              cmp rax, 5	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006ee1	     0xf8489000000	                            je 0x4006f70	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006ee7	        0x4883f806	                              cmp rax, 6	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006eeb	     0xf858f000000	                           jne 0x4006f80	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006ef1	      0xb900000000	                              mov ecx, 0	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4006ef6	      0xe925fcffff	 jmp sym._bfd_elf_make_section_from_phdr	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4006efb	       0xf1f440000	                   nop dword [rax + rax]	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x4006f00	        0x4883f801	                              cmp rax, 1	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f04	     0xf84e6000000	                            je 0x4006ff0	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f0a	     0xf82d0000000	                            jb 0x4006fe0	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f10	        0x4883f802	                              cmp rax, 2	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f14	            0x743a	                            je 0x4006f50	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f16	        0x4883f803	                              cmp rax, 3	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f1a	            0x7564	                           jne 0x4006f80	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f1c	      0xb900000000	                              mov ecx, 0	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4006f21	      0xe9fafbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4006f26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4006f30	    0x483d51e57464	                     cmp rax, 0x6474e551	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f36	            0x7428	                            je 0x4006f60	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f38	    0x483d52e57464	                     cmp rax, 0x6474e552	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f3e	            0x7540	                           jne 0x4006f80	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4006f40	      0xb900000000	                              mov ecx, 0	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4006f45	      0xe9d6fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4006f4a	    0x660f1f440000	                    nop word [rax + rax]	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4006f50	      0xb900000000	                              mov ecx, 0	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4006f55	      0xe9c6fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4006f5a	    0x660f1f440000	                    nop word [rax + rax]	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4006f60	      0xb900000000	                              mov ecx, 0	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4006f65	      0xe9b6fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4006f6a	    0x660f1f440000	                    nop word [rax + rax]	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4006f70	      0xb900000000	                              mov ecx, 0	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4006f75	      0xe9a6fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4006f7a	    0x660f1f440000	                    nop word [rax + rax]	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4006f80	        0x488b4708	                mov rax, qword [rdi + 8]	      3039	elf.c	FUNCTION_43	SWITCH_1	CALL_12
0x4006f84	      0xb900000000	                              mov ecx, 0	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4006f89	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4006f90	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4006f97	            0xffe0	                                 jmp rax	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4006f99	     0xf1f80000000	                         nop dword [rax]	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4006fa0	      0xb900000000	                              mov ecx, 0	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4006fa5	      0xe976fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4006faa	    0x660f1f440000	                    nop word [rax + rax]	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4006fb0	            0x4156	                                push r14	      2996	elf.c	FUNCTION_43
0x4006fb2	            0x4155	                                push r13	      2996	elf.c	FUNCTION_43
0x4006fb4	      0xb900000000	                              mov ecx, 0	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x4006fb9	            0x4154	                                push r12	      2996	elf.c	FUNCTION_43
0x4006fbb	              0x55	                                push rbp	      2996	elf.c	FUNCTION_43
0x4006fbc	          0x4889fd	                            mov rbp, rdi	      2996	elf.c	FUNCTION_43
0x4006fbf	              0x53	                                push rbx	      2996	elf.c	FUNCTION_43
0x4006fc0	          0x4889f3	                            mov rbx, rsi	      2996	elf.c	FUNCTION_43
0x4006fc3	      0xe800000000	                          call 0x4006fc8	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x4006fc8	            0x85c0	                           test eax, eax	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x4006fca	            0x7534	                           jne 0x4007000	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x4006fcc	            0x31c0	                            xor eax, eax	      3018	elf.c	FUNCTION_43	SWITCH_1	IF_2
0x4006fce	              0x5b	                                 pop rbx	      3042	elf.c	FUNCTION_43
0x4006fcf	              0x5d	                                 pop rbp	      3042	elf.c	FUNCTION_43
0x4006fd0	            0x415c	                                 pop r12	      3042	elf.c	FUNCTION_43
0x4006fd2	            0x415d	                                 pop r13	      3042	elf.c	FUNCTION_43
0x4006fd4	            0x415e	                                 pop r14	      3042	elf.c	FUNCTION_43
0x4006fd6	              0xc3	                                     ret	      3042	elf.c	FUNCTION_43
0x4006fd7	    0x660f1f840000	                    nop word [rax + rax]	      3042	elf.c	FUNCTION_43
0x4006fe0	      0xb900000000	                              mov ecx, 0	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x4006fe5	      0xe936fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x4006fea	    0x660f1f440000	                    nop word [rax + rax]	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x4006ff0	      0xb900000000	                              mov ecx, 0	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4006ff5	      0xe926fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4006ffa	    0x660f1f440000	                    nop word [rax + rax]	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4007000	        0x4c8b6328	            mov r12, qword [rbx + 0x28] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x4007004	      0x498d4424ff	                      lea rax, [r12 - 1]	     11188	elf.c	FUNCTION_192	IF_1
0x4007009	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	     11188	elf.c	FUNCTION_192	IF_1
0x400700d	            0x7611	                           jbe 0x4007020	     11188	elf.c	FUNCTION_192	IF_1
0x400700f	      0xb801000000	                              mov eax, 1	      3019	elf.c	FUNCTION_43	SWITCH_1
0x4007014	            0xebb8	                           jmp 0x4006fce	      3019	elf.c	FUNCTION_43	SWITCH_1
0x4007016	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3019	elf.c	FUNCTION_43	SWITCH_1
0x4007020	        0x4c8b6b38	            mov r13, qword [rbx + 0x38] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x4007024	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x4007028	            0x31d2	                            xor edx, edx	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x400702a	          0x4889ef	                            mov rdi, rbp	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x400702d	          0x4889de	                            mov rsi, rbx	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4007030	      0xe800000000	                          call 0x4007035	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4007035	            0x85c0	                           test eax, eax	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4007037	            0x7593	                           jne 0x4006fcc	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4007039	      0x498d7c2401	                      lea rdi, [r12 + 1]	     11194	elf.c	FUNCTION_192	CALL_2
0x400703e	      0xe800000000	                          call 0x4007043	     11194	elf.c	FUNCTION_192	CALL_2
0x4007043	          0x4885c0	                           test rax, rax	     11195	elf.c	FUNCTION_192	IF_3
0x4007046	          0x4989c6	                            mov r14, rax	     11194	elf.c	FUNCTION_192	CALL_2
0x4007049	            0x7481	                            je 0x4006fcc	     11195	elf.c	FUNCTION_192	IF_3
0x400704b	      0x42c6042000	                 mov byte [rax + r12], 0	     11200	elf.c	FUNCTION_192
0x4007050	          0x4889ea	                            mov rdx, rbp	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4007053	          0x4c89e6	                            mov rsi, r12	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4007056	          0x4889c7	                            mov rdi, rax	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4007059	      0xe800000000	                          call 0x400705e	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x400705e	          0x4939c4	                            cmp r12, rax	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4007061	            0x740d	                            je 0x4007070	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4007063	          0x4c89f7	                            mov rdi, r14	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x4007066	      0xe800000000	                          call 0x400706b	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x400706b	      0xe95cffffff	                           jmp 0x4006fcc	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x4007070	          0x4d89e8	                             mov r8, r13	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4007073	          0x4889d9	                            mov rcx, rbx	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4007076	          0x4c89e2	                            mov rdx, r12	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4007079	          0x4c89f6	                            mov rsi, r14	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x400707c	          0x4889ef	                            mov rdi, rbp	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x400707f	      0xe88ca1ffff	                call sym.elf_parse_notes	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4007084	            0x85c0	                           test eax, eax	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4007086	            0x74db	                            je 0x4007063	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4007088	          0x4c89f7	                            mov rdi, r14	     11209	elf.c	FUNCTION_192	CALL_6
0x400708b	      0xe800000000	                          call 0x4007090	     11209	elf.c	FUNCTION_192	CALL_6
0x4007090	      0xe97affffff	                           jmp 0x400700f	     11209	elf.c	FUNCTION_192	CALL_6
_bfd_elf_compute_section_file_positions	functions,0:CALL,21:FOR,0:WHILE,0:SWITCH,0:IF,14:DO,0:ELSE,0	2975
0x40081c0	            0x4157	                                push r15	      4217	elf.c	FUNCTION_59
0x40081c2	            0x4156	                                push r14	      4217	elf.c	FUNCTION_59
0x40081c4	            0x4155	                                push r13	      4217	elf.c	FUNCTION_59
0x40081c6	            0x4154	                                push r12	      4217	elf.c	FUNCTION_59
0x40081c8	              0x55	                                push rbp	      4217	elf.c	FUNCTION_59
0x40081c9	              0x53	                                push rbx	      4217	elf.c	FUNCTION_59
0x40081ca	    0x4881ecf80000	                           sub rsp, 0xf8	      4217	elf.c	FUNCTION_59
0x40081d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      4217	elf.c	FUNCTION_59
0x40081da	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      4217	elf.c	FUNCTION_59
0x40081e2	            0x31c0	                            xor eax, eax	      4217	elf.c	FUNCTION_59
0x40081e4	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      4225	elf.c	FUNCTION_59	IF_1
0x40081e8	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4217	elf.c	FUNCTION_59
0x40081ed	     0xf851d020000	                           jne 0x4008410	      4225	elf.c	FUNCTION_59	IF_1
0x40081f3	        0x488b4708	                mov rax, qword [rdi + 8]	      4218	elf.c	FUNCTION_59	CALL_1
0x40081f7	          0x4989ff	                            mov r15, rdi	      4218	elf.c	FUNCTION_59	CALL_1
0x40081fa	    0x4c8bb0680300	           mov r14, qword [rax + 0x368] 	      4218	elf.c	FUNCTION_59	CALL_1
0x4008201	    0x498b86380100	           mov rax, qword [r14 + 0x138] 	      4229	elf.c	FUNCTION_59	IF_2
0x4008208	          0x4d89f4	                            mov r12, r14	      4229	elf.c	FUNCTION_59	IF_2
0x400820b	          0x4885c0	                           test rax, rax	      4229	elf.c	FUNCTION_59	IF_2
0x400820e	            0x740d	                            je 0x400821d	      4229	elf.c	FUNCTION_59	IF_2
0x4008210	            0xffd0	                                call rax	      4230	elf.c	FUNCTION_59	IF_2
0x4008212	        0x498b4708	                mov rax, qword [r15 + 8]	      4230	elf.c	FUNCTION_59	IF_2
0x4008216	    0x4c8ba0680300	           mov r12, qword [rax + 0x368] 	      4230	elf.c	FUNCTION_59	IF_2
0x400821d	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6200	elf.c	FUNCTION_74	CALL_2
0x4008224	      0xe800000000	                          call 0x4008229	      6202	elf.c	FUNCTION_74	CALL_3
0x4008229	          0x4885c0	                           test rax, rax	      6203	elf.c	FUNCTION_74	IF_1
0x400822c	          0x4889c5	                            mov rbp, rax	      6202	elf.c	FUNCTION_74	CALL_3
0x400822f	     0xf847f010000	                            je 0x40083b4	      6203	elf.c	FUNCTION_74	IF_1
0x4008235	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6206	elf.c	FUNCTION_74	CALL_4
0x400823c	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6206	elf.c	FUNCTION_74	CALL_4
0x4008243	        0x48896808	                mov qword [rax + 8], rbp	      6206	elf.c	FUNCTION_74	CALL_4
0x4008247	          0xc6037f	                    mov byte [rbx], 0x7f	      6208	elf.c	FUNCTION_74
0x400824a	        0xc6430145	                mov byte [rbx + 1], 0x45	      6209	elf.c	FUNCTION_74
0x400824e	        0xc643024c	                mov byte [rbx + 2], 0x4c	      6210	elf.c	FUNCTION_74
0x4008252	        0xc6430346	                mov byte [rbx + 3], 0x46	      6211	elf.c	FUNCTION_74
0x4008256	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      6213	elf.c	FUNCTION_74
0x400825e	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      6213	elf.c	FUNCTION_74
0x4008262	          0x884304	                  mov byte [rbx + 4], al	      6213	elf.c	FUNCTION_74
0x4008265	        0x498b4708	                mov rax, qword [r15 + 8]	      6215	elf.c	FUNCTION_74	CALL_5
0x4008269	        0x83780c01	                cmp dword [rax + 0xc], 1	      6214	elf.c	FUNCTION_74
0x400826d	            0x19c0	                            sbb eax, eax	      6214	elf.c	FUNCTION_74
0x400826f	            0xf7d0	                                 not eax	      6214	elf.c	FUNCTION_74
0x4008271	          0x83c002	                              add eax, 2	      6214	elf.c	FUNCTION_74
0x4008274	          0x884305	                  mov byte [rbx + 5], al	      6214	elf.c	FUNCTION_74
0x4008277	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      6216	elf.c	FUNCTION_74
0x400827f	         0xfb6400d	            movzx eax, byte [rax + 0xd] 	      6216	elf.c	FUNCTION_74
0x4008283	          0x884306	                  mov byte [rbx + 6], al	      6216	elf.c	FUNCTION_74
0x4008286	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6218	elf.c	FUNCTION_74	IF_2
0x400828a	          0xc1e805	                              shr eax, 5	      6218	elf.c	FUNCTION_74	IF_2
0x400828d	      0x25ffff0f00	                        and eax, 0xfffff	      6218	elf.c	FUNCTION_74	IF_2
0x4008292	            0xa840	                           test al, 0x40	      6218	elf.c	FUNCTION_74	IF_2
0x4008294	     0xf8446010000	                            je 0x40083e0	      6218	elf.c	FUNCTION_74	IF_2
0x400829a	      0xb803000000	                              mov eax, 3	      6219	elf.c	FUNCTION_74	IF_2
0x400829f	        0x66894338	               mov word [rbx + 0x38], ax	      6219	elf.c	FUNCTION_74	IF_2
0x40082a3	          0x4c89ff	                            mov rdi, r15	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x40082a6	      0xe800000000	                          call 0x40082ab	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x40082ab	            0x85c0	                           test eax, eax	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x40082ad	     0xf854c010000	                           jne 0x40083ff	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x40082b3	          0x4531db	                          xor r11d, r11d	      6230	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x40082b6	      0x6644895b3a	             mov word [rbx + 0x3a], r11w	      6230	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x40082bb	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      6245	elf.c	FUNCTION_74
0x40082c3	      0xbe00000000	                              mov esi, 0	      6268	elf.c	FUNCTION_74	CALL_10
0x40082c8	          0x4889ef	                            mov rdi, rbp	      6268	elf.c	FUNCTION_74	CALL_10
0x40082cb	         0xfb6500d	            movzx edx, byte [rax + 0xd] 	      6245	elf.c	FUNCTION_74
0x40082cf	        0x48895328	             mov qword [rbx + 0x28], rdx	      6245	elf.c	FUNCTION_74
0x40082d3	           0xfb610	                   movzx edx, byte [rax]	      6246	elf.c	FUNCTION_74
0x40082d6	    0x48c743180000	               mov qword [rbx + 0x18], 0	      6249	elf.c	FUNCTION_74
0x40082de	    0xc74340000000	               mov dword [rbx + 0x40], 0	      6250	elf.c	FUNCTION_74
0x40082e5	    0xc74344000000	               mov dword [rbx + 0x44], 0	      6251	elf.c	FUNCTION_74
0x40082ec	          0x89533c	             mov dword [rbx + 0x3c], edx	      6246	elf.c	FUNCTION_74
0x40082ef	    0x498b97a80000	            mov rdx, qword [r15 + 0xa8] 	      6254	elf.c	FUNCTION_74	CALL_8
0x40082f6	        0x48895310	             mov qword [rbx + 0x10], rdx	      6254	elf.c	FUNCTION_74	CALL_8
0x40082fa	         0xfb64002	               movzx eax, byte [rax + 2]	      6255	elf.c	FUNCTION_74
0x40082fe	            0x31d2	                            xor edx, edx	      6268	elf.c	FUNCTION_74	CALL_10
0x4008300	          0x894348	             mov dword [rbx + 0x48], eax	      6255	elf.c	FUNCTION_74
0x4008303	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6267	elf.c	FUNCTION_74	CALL_9
0x400830a	      0xe800000000	                          call 0x400830f	      6268	elf.c	FUNCTION_74	CALL_10
0x400830f	            0x31d2	                            xor edx, edx	      6270	elf.c	FUNCTION_74	CALL_12
0x4008311	      0xbe00000000	                              mov esi, 0	      6270	elf.c	FUNCTION_74	CALL_12
0x4008316	          0x4889ef	                            mov rdi, rbp	      6270	elf.c	FUNCTION_74	CALL_12
0x4008319	          0x894368	             mov dword [rbx + 0x68], eax	      6267	elf.c	FUNCTION_74	CALL_9
0x400831c	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6269	elf.c	FUNCTION_74	CALL_11
0x4008323	      0xe800000000	                          call 0x4008328	      6270	elf.c	FUNCTION_74	CALL_12
0x4008328	            0x31d2	                            xor edx, edx	      6272	elf.c	FUNCTION_74	CALL_14
0x400832a	      0xbe00000000	                              mov esi, 0	      6272	elf.c	FUNCTION_74	CALL_14
0x400832f	          0x4889ef	                            mov rdi, rbp	      6272	elf.c	FUNCTION_74	CALL_14
0x4008332	    0x898308010000	            mov dword [rbx + 0x108], eax	      6269	elf.c	FUNCTION_74	CALL_11
0x4008338	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6271	elf.c	FUNCTION_74	CALL_13
0x400833f	      0xe800000000	                          call 0x4008344	      6272	elf.c	FUNCTION_74	CALL_14
0x4008344	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      6271	elf.c	FUNCTION_74	CALL_13
0x400834a	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6273	elf.c	FUNCTION_74	IF_6	CALL_15
0x4008351	        0x837868ff	cmp dword [rax + 0x68], 0xffffffffffffffff	      6273	elf.c	FUNCTION_74	IF_6	CALL_15
0x4008355	            0x745d	                            je 0x40083b4	      6273	elf.c	FUNCTION_74	IF_6	CALL_15
0x4008357	    0x83b808010000	cmp dword [rax + 0x108], 0xffffffffffffffff	      6274	elf.c	FUNCTION_74	IF_6	CALL_16
0x400835e	            0x7454	                            je 0x40083b4	      6274	elf.c	FUNCTION_74	IF_6	CALL_16
0x4008360	    0x83b8b8000000	cmp dword [rax + 0xb8], 0xffffffffffffffff	      6275	elf.c	FUNCTION_74	IF_6	CALL_17
0x4008367	            0x744b	                            je 0x40083b4	      6275	elf.c	FUNCTION_74	IF_6	CALL_17
0x4008369	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4236	elf.c	FUNCTION_59
0x400836e	          0x4c89ff	                            mov rdi, r15	      4236	elf.c	FUNCTION_59
0x4008371	          0x4889de	                            mov rsi, rbx	      4236	elf.c	FUNCTION_59
0x4008374	    0x41ff96880100	                call qword [r14 + 0x188]	      4236	elf.c	FUNCTION_59
0x400837b	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      4240	elf.c	FUNCTION_59	CALL_3
0x4008383	      0xbe00000000	                              mov esi, 0	      4240	elf.c	FUNCTION_59	CALL_3
0x4008388	          0x4c89ff	                            mov rdi, r15	      4240	elf.c	FUNCTION_59	CALL_3
0x400838b	    0xc78424b80000	               mov dword [rsp + 0xb8], 0	      4238	elf.c	FUNCTION_59
0x4008396	    0x48899c24b000	             mov qword [rsp + 0xb0], rbx	      4239	elf.c	FUNCTION_59
0x400839e	      0xe800000000	                          call 0x40083a3	      4240	elf.c	FUNCTION_59	CALL_3
0x40083a3	    0x448b8424b800	            mov r8d, dword [rsp + 0xb8] 	      4241	elf.c	FUNCTION_59	IF_4
0x40083ab	          0x4585c0	                           test r8d, r8d	      4241	elf.c	FUNCTION_59	IF_4
0x40083ae	     0xf848c000000	                            je 0x4008440	      4241	elf.c	FUNCTION_59	IF_4
0x40083b4	            0x31c0	                            xor eax, eax	      4282	elf.c	FUNCTION_59	IF_10
0x40083b6	    0x488bbc24e800	            mov rdi, qword [rsp + 0xe8] 	      4318	elf.c	FUNCTION_59
0x40083be	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      4318	elf.c	FUNCTION_59
0x40083c7	     0xf850b310000	                           jne 0x400b4d8	      4318	elf.c	FUNCTION_59
0x40083cd	    0x4881c4f80000	                           add rsp, 0xf8	      4318	elf.c	FUNCTION_59
0x40083d4	              0x5b	                                 pop rbx	      4318	elf.c	FUNCTION_59
0x40083d5	              0x5d	                                 pop rbp	      4318	elf.c	FUNCTION_59
0x40083d6	            0x415c	                                 pop r12	      4318	elf.c	FUNCTION_59
0x40083d8	            0x415d	                                 pop r13	      4318	elf.c	FUNCTION_59
0x40083da	            0x415e	                                 pop r14	      4318	elf.c	FUNCTION_59
0x40083dc	            0x415f	                                 pop r15	      4318	elf.c	FUNCTION_59
0x40083de	              0xc3	                                     ret	      4318	elf.c	FUNCTION_59
0x40083df	              0x90	                                     nop	      4318	elf.c	FUNCTION_59
0x40083e0	            0xa802	                              test al, 2	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x40083e2	            0x743c	                            je 0x4008420	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x40083e4	    0x41bd02000000	                             mov r13d, 2	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x40083ea	          0x4c89ff	                            mov rdi, r15	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x40083ed	      0x6644896b38	             mov word [rbx + 0x38], r13w	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x40083f2	      0xe800000000	                          call 0x40083f7	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x40083f7	            0x85c0	                           test eax, eax	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x40083f9	     0xf84b4feffff	                            je 0x40082b3	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x40083ff	      0x418b442408	                mov eax, dword [r12 + 8]	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4008404	        0x6689433a	               mov word [rbx + 0x3a], ax	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4008408	      0xe9aefeffff	                           jmp 0x40082bb	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x400840d	           0xf1f00	                         nop dword [rax]	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4008410	      0xb801000000	                              mov eax, 1	      4226	elf.c	FUNCTION_59	IF_1
0x4008415	            0xeb9f	                           jmp 0x40083b6	      4226	elf.c	FUNCTION_59	IF_1
0x4008417	    0x660f1f840000	                    nop word [rax + rax]	      4226	elf.c	FUNCTION_59	IF_1
0x4008420	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4	CALL_6
0x4008425	          0x83e007	                              and eax, 7	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4	CALL_6
0x4008428	            0x3c03	                               cmp al, 3	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400842a	           0xf94c0	                                 sete al	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400842d	           0xfb6c0	                           movzx eax, al	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4008430	        0x8d444001	              lea eax, [rax + rax*2 + 1]	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4008434	        0x66894338	               mov word [rbx + 0x38], ax	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4008438	      0xe966feffff	                           jmp 0x40082a3	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400843d	           0xf1f00	                         nop dword [rax]	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4008440	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x4008445	          0x4c89ff	                            mov rdi, r15	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x4008448	          0x4889de	                            mov rsi, rbx	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x400844b	      0xe83080ffff	         call sym.assign_section_numbers	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x4008450	            0x85c0	                           test eax, eax	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x4008452	     0xf845cffffff	                            je 0x40083b4	      4244	elf.c	FUNCTION_59	IF_5	CALL_4
0x4008458	          0x4885db	                           test rbx, rbx	      4249	elf.c	FUNCTION_59	CALL_5
0x400845b	     0xf84a8010000	                            je 0x4008609	      4249	elf.c	FUNCTION_59	CALL_5
0x4008461	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4269	elf.c	FUNCTION_59	CALL_8
0x4008468	    0xc78424ac0000	               mov dword [rsp + 0xac], 0	      4261	elf.c	FUNCTION_59
0x4008473	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4221	elf.c	FUNCTION_59
0x400847c	    0xc74424780000	               mov dword [rsp + 0x78], 0	      6073	elf.c	FUNCTION_73	IF_1
0x4008484	          0x4889c7	                            mov rdi, rax	      4269	elf.c	FUNCTION_59	CALL_8
0x4008487	    0xc780bc000000	               mov dword [rax + 0xbc], 3	      4271	elf.c	FUNCTION_59
0x4008491	      0x4889442468	             mov qword [rsp + 0x68], rax	      4269	elf.c	FUNCTION_59	CALL_8
0x4008496	    0x498b86800300	           mov rax, qword [r14 + 0x380] 	      4272	elf.c	FUNCTION_59
0x400849d	          0x4889fe	                            mov rsi, rdi	      4269	elf.c	FUNCTION_59	CALL_8
0x40084a0	    0x48c787c80000	               mov qword [rdi + 0xc8], 0	      4273	elf.c	FUNCTION_59
0x40084ab	    0x48c787f00000	               mov qword [rdi + 0xf0], 0	      4275	elf.c	FUNCTION_59
0x40084b6	    0xc787e0000000	               mov dword [rdi + 0xe0], 0	      4276	elf.c	FUNCTION_59
0x40084c0	    0xc787e4000000	               mov dword [rdi + 0xe4], 0	      4277	elf.c	FUNCTION_59
0x40084ca	    0x48c787e80000	               mov qword [rdi + 0xe8], 1	      4279	elf.c	FUNCTION_59
0x40084d5	    0x488987c00000	             mov qword [rdi + 0xc0], rax	      4272	elf.c	FUNCTION_59
0x40084dc	        0x498b4708	                mov rax, qword [r15 + 8]	      6071	elf.c	FUNCTION_73	CALL_3
0x40084e0	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6071	elf.c	FUNCTION_73	CALL_3
0x40084e7	      0x4889442448	             mov qword [rsp + 0x48], rax	      6071	elf.c	FUNCTION_73	CALL_3
0x40084ec	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6073	elf.c	FUNCTION_73	IF_1
0x40084f0	          0xc1e805	                              shr eax, 5	      6073	elf.c	FUNCTION_73	IF_1
0x40084f3	            0xa842	                           test al, 0x42	      6073	elf.c	FUNCTION_73	IF_1
0x40084f5	     0xf8511020000	                           jne 0x400870c	      6073	elf.c	FUNCTION_73	IF_1
0x40084fb	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	      6074	elf.c	FUNCTION_73	IF_1	CALL_4
0x4008500	          0x83e007	                              and eax, 7	      6074	elf.c	FUNCTION_73	IF_1	CALL_4
0x4008503	            0x3c03	                               cmp al, 3	      6074	elf.c	FUNCTION_73	IF_1	CALL_4
0x4008505	     0xf8433260000	                            je 0x400ab3e	      6074	elf.c	FUNCTION_73	IF_1	CALL_4
0x400850b	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6076	elf.c	FUNCTION_73	IF_1	CALL_5
0x4008510	    0x448b88fc0200	           mov r9d, dword [rax + 0x2fc] 	      6077	elf.c	FUNCTION_73	IF_1	CALL_6
0x4008517	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      6076	elf.c	FUNCTION_73	IF_1	CALL_5
0x400851b	        0x448b403c	            mov r8d, dword [rax + 0x3c] 	      6083	elf.c	FUNCTION_73	IF_1
0x400851f	    0x4c8b98980c00	           mov r11, qword [rax + 0xc98] 	      6083	elf.c	FUNCTION_73	IF_1
0x4008526	        0x4183f901	                              cmp r9d, 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400852a	        0x488d4b08	                      lea rcx, [rbx + 8]	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400852e	     0xf861c120000	                           jbe 0x4009750	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4008534	      0xba01000000	                              mov edx, 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4008539	          0x4889c5	                            mov rbp, rax	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400853c	      0xe98f000000	                           jmp 0x40085d0	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4008541	     0xf1f80000000	                         nop dword [rax]	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4008548	    0x3995780c0000	           cmp dword [rbp + 0xc78], edx 	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x400854e	     0xf84ab000000	                            je 0x40085ff	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x4008554	    0x4c8b95e80200	           mov r10, qword [rbp + 0x2e8] 	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400855b	          0x4d85d2	                           test r10, r10	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x400855e	            0x740e	                            je 0x400856e	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x4008560	        0x458b5250	           mov r10d, dword [r10 + 0x50] 	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x4008564	        0x4a3b04d3	            cmp rax, qword [rbx + r10*8]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x4008568	     0xf8491000000	                            je 0x40085ff	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x400856e	        0x41395350	            cmp dword [r11 + 0x50], edx 	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x4008572	     0xf8487000000	                            je 0x40085ff	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x4008578	        0x4139534c	            cmp dword [r11 + 0x4c], edx 	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_11
0x400857c	     0xf847d000000	                            je 0x40085ff	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_11
0x4008582	        0x4c8b5030	            mov r10, qword [rax + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x4008586	        0x4983fa01	                              cmp r10, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400858a	            0x7617	                           jbe 0x40085a3	      4200	elf.c	FUNCTION_58	IF_1
0x400858c	      0x4f8d6402ff	                 lea r12, [r10 + r8 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x4008591	          0x4d39e0	                             cmp r8, r12	      4201	elf.c	FUNCTION_58	CALL_1
0x4008594	     0xf871c160000	                            ja 0x4009bb6	      4201	elf.c	FUNCTION_58	CALL_1
0x400859a	          0x49f7da	                                 neg r10	      4201	elf.c	FUNCTION_58	CALL_1
0x400859d	          0x4d89d0	                             mov r8, r10	      4201	elf.c	FUNCTION_58	CALL_1
0x40085a0	          0x4d21e0	                             and r8, r12	      4201	elf.c	FUNCTION_58	CALL_1
0x40085a3	          0x4885f6	                           test rsi, rsi	      4203	elf.c	FUNCTION_58	IF_2
0x40085a6	        0x4c894018	              mov qword [rax + 0x18], r8	      4202	elf.c	FUNCTION_58
0x40085aa	            0x7407	                            je 0x40085b3	      4203	elf.c	FUNCTION_58	IF_2
0x40085ac	    0x4c8986900000	              mov qword [rsi + 0x90], r8	      4204	elf.c	FUNCTION_58	IF_2
0x40085b3	          0x83ff08	                              cmp edi, 8	      4205	elf.c	FUNCTION_58	IF_3
0x40085b6	            0x7408	                            je 0x40085c0	      4205	elf.c	FUNCTION_58	IF_3
0x40085b8	        0x4c034020	              add r8, qword [rax + 0x20]	      4206	elf.c	FUNCTION_58	IF_3
0x40085bc	         0xf1f4000	                         nop dword [rax]	      4206	elf.c	FUNCTION_58	IF_3
0x40085c0	          0x83c201	                              add edx, 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x40085c3	        0x4883c108	                              add rcx, 8	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x40085c7	          0x4139d1	                            cmp r9d, edx	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x40085ca	     0xf8480110000	                            je 0x4009750	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x40085d0	          0x488b01	                    mov rax, qword [rcx]	      6092	elf.c	FUNCTION_73	IF_1	FOR_1
0x40085d3	          0x8b7804	                mov edi, dword [rax + 4]	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085d6	        0x488b7040	            mov rsi, qword [rax + 0x40] 	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085da	          0x83ff09	                              cmp edi, 9	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085dd	     0xf845d080000	                            je 0x4008e40	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085e3	          0x83ff04	                              cmp edi, 4	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085e6	     0xf8454080000	                            je 0x4008e40	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085ec	          0x4885f6	                           test rsi, rsi	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085ef	     0xf8453ffffff	                            je 0x4008548	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085f5	        0xf6462308	               test byte [rsi + 0x23], 8	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085f9	     0xf8449ffffff	                            je 0x4008548	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x40085ff	    0x48c74018ffff	mov qword [rax + 0x18], 0xffffffffffffffff	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4008607	            0xebb7	                           jmp 0x40085c0	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4008609	    0x418b87b80000	            mov eax, dword [r15 + 0xb8] 	      4249	elf.c	FUNCTION_59	CALL_5
0x4008610	            0x85c0	                           test eax, eax	      4249	elf.c	FUNCTION_59	CALL_5
0x4008612	        0x89442420	             mov dword [rsp + 0x20], eax	      4249	elf.c	FUNCTION_59	CALL_5
0x4008616	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      4249	elf.c	FUNCTION_59	CALL_5
0x400861a	     0xf85b3130000	                           jne 0x40099d3	      4249	elf.c	FUNCTION_59	CALL_5
0x4008620	          0xc1e805	                              shr eax, 5	      4250	elf.c	FUNCTION_59
0x4008623	      0x25ffff0f00	                        and eax, 0xfffff	      4250	elf.c	FUNCTION_59
0x4008628	        0x89442438	             mov dword [rsp + 0x38], eax	      4250	elf.c	FUNCTION_59
0x400862c	          0x83e043	                           and eax, 0x43	      4250	elf.c	FUNCTION_59
0x400862f	          0x83f801	                              cmp eax, 1	      4250	elf.c	FUNCTION_59
0x4008632	     0xf84a7130000	                            je 0x40099df	      4250	elf.c	FUNCTION_59
0x4008638	    0xc74424780000	               mov dword [rsp + 0x78], 0	      4250	elf.c	FUNCTION_59
0x4008640	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4221	elf.c	FUNCTION_59
0x4008649	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      4264	elf.c	FUNCTION_59	IF_8	CALL_7
0x4008651	      0xbe00000000	                              mov esi, 0	      4264	elf.c	FUNCTION_59	IF_8	CALL_7
0x4008656	          0x4c89ff	                            mov rdi, r15	      4264	elf.c	FUNCTION_59	IF_8	CALL_7
0x4008659	    0xc78424ac0000	               mov dword [rsp + 0xac], 0	      4261	elf.c	FUNCTION_59
0x4008664	      0xe800000000	                          call 0x4008669	      4264	elf.c	FUNCTION_59	IF_8	CALL_7
0x4008669	    0x8b8424ac0000	            mov eax, dword [rsp + 0xac] 	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x4008670	            0x85c0	                           test eax, eax	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x4008672	     0xf853cfdffff	                           jne 0x40083b4	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x4008678	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4269	elf.c	FUNCTION_59	CALL_8
0x400867f	          0x4889c7	                            mov rdi, rax	      4269	elf.c	FUNCTION_59	CALL_8
0x4008682	    0xc780bc000000	               mov dword [rax + 0xbc], 3	      4271	elf.c	FUNCTION_59
0x400868c	      0x4889442468	             mov qword [rsp + 0x68], rax	      4269	elf.c	FUNCTION_59	CALL_8
0x4008691	    0x498b86800300	           mov rax, qword [r14 + 0x380] 	      4272	elf.c	FUNCTION_59
0x4008698	    0x48c787c80000	               mov qword [rdi + 0xc8], 0	      4273	elf.c	FUNCTION_59
0x40086a3	    0x48c787f00000	               mov qword [rdi + 0xf0], 0	      4275	elf.c	FUNCTION_59
0x40086ae	    0xc787e0000000	               mov dword [rdi + 0xe0], 0	      4276	elf.c	FUNCTION_59
0x40086b8	    0xc787e4000000	               mov dword [rdi + 0xe4], 0	      4277	elf.c	FUNCTION_59
0x40086c2	    0x48c787e80000	               mov qword [rdi + 0xe8], 1	      4279	elf.c	FUNCTION_59
0x40086cd	    0x488987c00000	             mov qword [rdi + 0xc0], rax	      4272	elf.c	FUNCTION_59
0x40086d4	        0x498b4708	                mov rax, qword [r15 + 8]	      6071	elf.c	FUNCTION_73	CALL_3
0x40086d8	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6071	elf.c	FUNCTION_73	CALL_3
0x40086df	      0x4889442448	             mov qword [rsp + 0x48], rax	      6071	elf.c	FUNCTION_73	CALL_3
0x40086e4	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6073	elf.c	FUNCTION_73	IF_1
0x40086e8	          0xc1e805	                              shr eax, 5	      6073	elf.c	FUNCTION_73	IF_1
0x40086eb	            0xa842	                           test al, 0x42	      6073	elf.c	FUNCTION_73	IF_1
0x40086ed	     0xf8408feffff	                            je 0x40084fb	      6073	elf.c	FUNCTION_73	IF_1
0x40086f3	            0x31f6	                            xor esi, esi	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x40086f5	          0x4c89ff	                            mov rdi, r15	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x40086f8	      0xe800000000	                          call 0x40086fd	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x40086fd	            0x85c0	                           test eax, eax	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x40086ff	     0xf84affcffff	                            je 0x40083b4	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008705	    0x498bb7f80000	            mov rsi, qword [r15 + 0xf8] 	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x400870c	    0x488b86980c00	           mov rax, qword [rsi + 0xc98] 	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4008713	            0x31ed	                            xor ebp, ebp	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4008715	          0x488b00	                    mov rax, qword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4008718	          0x4885c0	                           test rax, rax	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400871b	     0xf842d1e0000	                            je 0x400a54e	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4008721	            0x31c9	                            xor ecx, ecx	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4008723	       0xf1f440000	                   nop dword [rax + rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4008728	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x400872c	          0x488b00	                    mov rax, qword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400872f	          0x83c101	                              add ecx, 1	      5269	elf.c	FUNCTION_70	FOR_1
0x4008732	          0x4885d2	                           test rdx, rdx	      5269	elf.c	FUNCTION_70	FOR_1
0x4008735	        0x480f45ea	                         cmovne rbp, rdx	      5269	elf.c	FUNCTION_70	FOR_1
0x4008739	          0x4885c0	                           test rax, rax	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400873c	            0x75ea	                           jne 0x4008728	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x400873e	            0x85c9	                           test ecx, ecx	      5274	elf.c	FUNCTION_70	IF_3
0x4008740	        0x894c2450	             mov dword [rsp + 0x50], ecx	      5274	elf.c	FUNCTION_70	IF_3
0x4008744	     0xf84041e0000	                            je 0x400a54e	      5274	elf.c	FUNCTION_70	IF_3
0x400874a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400874f	    0x488b88000300	           mov rcx, qword [rax + 0x300] 	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4008756	           0xfb601	                   movzx eax, byte [rcx]	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4008759	        0x48894618	             mov qword [rsi + 0x18], rax	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x400875d	         0xfb65101	               movzx edx, byte [rcx + 1]	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4008761	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4008768	          0x895040	             mov dword [rax + 0x40], edx	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x400876b	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5286	elf.c	FUNCTION_70	CALL_8
0x4008772	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      5286	elf.c	FUNCTION_70	CALL_8
0x4008776	          0x897844	             mov dword [rax + 0x44], edi	      5286	elf.c	FUNCTION_70	CALL_8
0x4008779	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4008780	         0xfb67101	               movzx esi, byte [rcx + 1]	      5289	elf.c	FUNCTION_70	CALL_10
0x4008784	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x400878b	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x400878f	        0x4883ffff	             cmp rdi, 0xffffffffffffffff	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4008793	     0xf8483250000	                            je 0x400ad1c	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4008799	       0xfaf742450	            imul esi, dword [rsp + 0x50]	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400879e	          0x4839f7	                            cmp rdi, rsi	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x40087a1	     0xf8266260000	                            jb 0x400ae0d	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x40087a7	        0x8b742450	            mov esi, dword [rsp + 0x50] 	      5294	elf.c	FUNCTION_70	IF_5
0x40087ab	            0x85f6	                           test esi, esi	      5294	elf.c	FUNCTION_70	IF_5
0x40087ad	     0xf84521f0000	                            je 0x400a705	      5294	elf.c	FUNCTION_70	IF_5
0x40087b3	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      5309	elf.c	FUNCTION_70	CALL_15
0x40087b7	         0xfb64901	               movzx ecx, byte [rcx + 1]	      5309	elf.c	FUNCTION_70	CALL_15
0x40087bb	            0x31d2	                            xor edx, edx	      5309	elf.c	FUNCTION_70	CALL_15
0x40087bd	          0x4889f0	                            mov rax, rsi	      5309	elf.c	FUNCTION_70	CALL_15
0x40087c0	          0x48f7f1	                                 div rcx	      5309	elf.c	FUNCTION_70	CALL_15
0x40087c3	          0x4885d2	                           test rdx, rdx	      5309	elf.c	FUNCTION_70	CALL_15
0x40087c6	     0xf852e270000	                           jne 0x400aefa	      5309	elf.c	FUNCTION_70	CALL_15
0x40087cc	          0x4889f0	                            mov rax, rsi	      5311	elf.c	FUNCTION_70
0x40087cf	            0x31d2	                            xor edx, edx	      5311	elf.c	FUNCTION_70
0x40087d1	          0x4c89ff	                            mov rdi, r15	      5311	elf.c	FUNCTION_70
0x40087d4	          0x48f7f1	                                 div rcx	      5311	elf.c	FUNCTION_70
0x40087d7	      0xba40000000	                           mov edx, 0x40	      5311	elf.c	FUNCTION_70
0x40087dc	          0x4889c6	                            mov rsi, rax	      5311	elf.c	FUNCTION_70
0x40087df	      0xe800000000	                          call 0x40087e4	      5311	elf.c	FUNCTION_70
0x40087e4	          0x4889c3	                            mov rbx, rax	      5311	elf.c	FUNCTION_70
0x40087e7	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5315	elf.c	FUNCTION_70	CALL_18
0x40087ee	          0x4885db	                           test rbx, rbx	      5316	elf.c	FUNCTION_70	IF_6
0x40087f1	        0x48895860	             mov qword [rax + 0x60], rbx	      5315	elf.c	FUNCTION_70	CALL_18
0x40087f5	     0xf84b9fbffff	                            je 0x40083b4	      5316	elf.c	FUNCTION_70	IF_6
0x40087fb	      0x41f6474520	           test byte [r15 + 0x45], 0x20 	      5320	elf.c	FUNCTION_70	IF_7
0x4008800	    0x48c784248000	               mov qword [rsp + 0x80], 1	      5319	elf.c	FUNCTION_70
0x400880c	            0x7411	                            je 0x400881f	      5320	elf.c	FUNCTION_70	IF_7
0x400880e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5321	elf.c	FUNCTION_70	IF_7
0x4008813	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5321	elf.c	FUNCTION_70	IF_7
0x4008817	    0x488984248000	             mov qword [rsp + 0x80], rax	      5321	elf.c	FUNCTION_70	IF_7
0x400881f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5323	elf.c	FUNCTION_70
0x4008824	          0x4889e9	                            mov rcx, rbp	      5328	elf.c	FUNCTION_70	ELSE_3
0x4008827	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5323	elf.c	FUNCTION_70
0x400882e	           0xfb610	                   movzx edx, byte [rax]	      5323	elf.c	FUNCTION_70
0x4008831	         0xfb64001	               movzx eax, byte [rax + 1]	      5325	elf.c	FUNCTION_70	IF_8
0x4008835	       0xfaf442450	            imul eax, dword [rsp + 0x50]	      5325	elf.c	FUNCTION_70	IF_8
0x400883a	          0x4801d0	                            add rax, rdx	      5325	elf.c	FUNCTION_70	IF_8
0x400883d	      0xba00000000	                              mov edx, 0	      5328	elf.c	FUNCTION_70	ELSE_3
0x4008842	          0x4829c1	                            sub rcx, rax	      5328	elf.c	FUNCTION_70	ELSE_3
0x4008845	          0x4839e8	                            cmp rax, rbp	      5328	elf.c	FUNCTION_70	ELSE_3
0x4008848	        0x480f46d1	                         cmovbe rdx, rcx	      5328	elf.c	FUNCTION_70	ELSE_3
0x400884c	          0x4801d0	                            add rax, rdx	      5329	elf.c	FUNCTION_70	ELSE_3
0x400884f	    0x488994249000	             mov qword [rsp + 0x90], rdx	      5328	elf.c	FUNCTION_70	ELSE_3
0x4008857	      0x4889442408	                mov qword [rsp + 8], rax	      5329	elf.c	FUNCTION_70	ELSE_3
0x400885c	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008863	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400886a	          0x4c8b32	                    mov r14, qword [rdx]	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400886d	          0x4d85f6	                           test r14, r14	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008870	     0xf8412060000	                            je 0x4008e88	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008876	    0xc74424600000	               mov dword [rsp + 0x60], 0	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400887e	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008889	      0x4c897c2418	             mov qword [rsp + 0x18], r15	        64	stdio2.h	FUNCTION_206	CALL_1
0x400888e	            0x6690	                                     nop	        64	stdio2.h	FUNCTION_206	CALL_1
0x4008890	        0x458b4644	            mov r8d, dword [r14 + 0x44] 	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4008894	        0x4183f801	                              cmp r8d, 1	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4008898	          0x4589c1	                            mov r9d, r8d	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x400889b	     0xf86af090000	                           jbe 0x4009250	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x40088a1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x40088a6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x40088ad	      0x6683783804	                cmp word [rax + 0x38], 4	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x40088b2	            0x750e	                           jne 0x40088c2	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x40088b4	        0x4d8b5e08	                mov r11, qword [r14 + 8]	      5346	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x40088b8	        0x4983fb04	                              cmp r11, 4	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x40088bc	     0xf842e070000	                            je 0x4008ff0	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x40088c2	        0x498d7e48	                   lea rdi, [r14 + 0x48]	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x40088c6	          0x4489c6	                            mov esi, r8d	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x40088c9	      0xb900000000	                              mov ecx, 0	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x40088ce	      0xba08000000	                              mov edx, 8	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x40088d3	      0xe800000000	                          call 0x40088d8	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x40088d8	        0x458b4644	            mov r8d, dword [r14 + 0x44] 	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x40088dc	        0x4d8b5e08	                mov r11, qword [r14 + 8]	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x40088e0	          0x4589c1	                            mov r9d, r8d	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x40088e3	          0x4c891b	                    mov qword [rbx], r11	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40088e6	        0x4d8b6610	            mov r12, qword [r14 + 0x10] 	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40088ea	          0x4585c0	                           test r8d, r8d	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x40088ed	        0x4c896308	                mov qword [rbx + 8], r12	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40088f1	     0xf8509070000	                           jne 0x4009000	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x40088f7	    0x48c743180000	               mov qword [rbx + 0x18], 0	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x40088ff	      0x450fb65640	          movzx r10d, byte [r14 + 0x40] 	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4008904	          0x4589d5	                          mov r13d, r10d	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4008907	        0x4183e502	                             and r13d, 2	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400890b	     0xf8527070000	                           jne 0x4009038	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4008911	    0x48c743200000	               mov qword [rbx + 0x20], 0	      5366	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x4008919	        0x4983fb01	                              cmp r11, 1	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400891d	          0x4489d2	                           mov edx, r10d	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x4008920	     0xf849a070000	                            je 0x40090c0	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4008926	          0x83e204	                              and edx, 4	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4008929	     0xf8429070000	                            je 0x4009058	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x400892f	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4008933	        0x48894338	             mov qword [rbx + 0x38], rax	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4008937	        0x4983fb01	                              cmp r11, 1	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400893b	     0xf84b3070000	                            je 0x40090f4	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4008941	        0x4983fb02	                              cmp r11, 2	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x4008945	     0xf849d0d0000	                            je 0x40096e8	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400894b	            0x31ed	                            xor ebp, ebp	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400894d	        0x4983fb04	                              cmp r11, 4	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x4008951	    0x48c744244000	               mov qword [rsp + 0x40], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400895a	     0xf84a8080000	                            je 0x4009208	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x4008960	          0x4489d1	                           mov ecx, r10d	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008963	    0x48c743100000	               mov qword [rbx + 0x10], 0	      5479	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400896b	    0x48c743280000	               mov qword [rbx + 0x28], 0	      5480	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008973	          0x83e110	                           and ecx, 0x10	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008976	    0x48c743300000	               mov qword [rbx + 0x30], 0	      5481	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400897e	     0xf84c4060000	                            je 0x4009048	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008984	        0x41f6c201	                            test r10b, 1	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x4008988	            0x7508	                           jne 0x4008992	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400898a	        0x4983cc04	                               or r12, 4	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400898e	        0x4c896308	                mov qword [rbx + 8], r12	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x4008992	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008997	          0x4585c0	                           test r8d, r8d	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x400899a	    0x488b90000300	           mov rdx, qword [rax + 0x300] 	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x40089a1	           0xfb602	                   movzx eax, byte [rdx]	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x40089a4	        0x48894328	             mov qword [rbx + 0x28], rax	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x40089a8	           0xfb612	                   movzx edx, byte [rdx]	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x40089ab	        0x48895330	             mov qword [rbx + 0x30], rdx	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x40089af	            0x743f	                            je 0x40089f0	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x40089b1	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089b5	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089ba	          0x4c39fe	                            cmp rsi, r15	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089bd	     0xf820a290000	                            jb 0x400b2cd	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089c3	          0x4584ed	                         test r13b, r13b	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089c6	     0xf851b120000	                           jne 0x4009be7	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089cc	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089d0	          0x4939ff	                            cmp r15, rdi	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089d3	     0xf87f4280000	                            ja 0x400b2cd	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x40089d9	          0x4c29fe	                            sub rsi, r15	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x40089dc	          0x4c29ff	                            sub rdi, r15	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x40089df	        0x48897318	             mov qword [rbx + 0x18], rsi	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x40089e3	        0x48897b20	             mov qword [rbx + 0x20], rdi	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x40089e7	    0x660f1f840000	                    nop word [rax + rax]	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x40089f0	        0x41f6c220	                         test r10b, 0x20	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40089f4	            0x745a	                            je 0x4008a50	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40089f6	        0x41f6c201	                            test r10b, 1	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x40089fa	            0x7505	                           jne 0x4008a01	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x40089fc	      0x48834b0804	                   or qword [rbx + 8], 4	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x4008a01	            0x84c9	                             test cl, cl	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4008a03	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4008a08	     0xf848a0c0000	                            je 0x4009698	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4008a0e	    0x488bb7000300	           mov rsi, qword [rdi + 0x300] 	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4008a15	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a19	         0xfb64e01	               movzx ecx, byte [rsi + 1]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a1d	           0xfafcf	                           imul ecx, edi	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a20	          0x4801c8	                            add rax, rcx	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a23	        0x48894328	             mov qword [rbx + 0x28], rax	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a27	         0xfb64e01	               movzx ecx, byte [rsi + 1]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a2b	           0xfafcf	                           imul ecx, edi	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a2e	          0x4801ca	                            add rdx, rcx	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a31	          0x4585c0	                           test r8d, r8d	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008a34	        0x48895330	             mov qword [rbx + 0x30], rdx	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008a38	            0x7416	                            je 0x4008a50	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008a3a	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008a42	          0x4801f8	                            add rax, rdi	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008a45	          0x4801fa	                            add rdx, rdi	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008a48	        0x48894328	             mov qword [rbx + 0x28], rax	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008a4c	        0x48895330	             mov qword [rbx + 0x30], rdx	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008a50	        0x4983fb01	                              cmp r11, 1	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008a54	     0xf844e060000	                            je 0x40090a8	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008a5a	        0x4983fb04	                              cmp r11, 4	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4008a5e	     0xf8424060000	                            je 0x4009088	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4008a64	          0x4585c0	                           test r8d, r8d	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008a67	        0x4d8d7e48	                   lea r15, [r14 + 0x48]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008a6b	          0x488b33	                    mov rsi, qword [rbx]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008a6e	     0xf84df030000	                            je 0x4008e53	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008a74	          0x4531ed	                          xor r13d, r13d	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008a77	    0x41bb01000000	                             mov r11d, 1	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4008a7d	          0x4d89f2	                            mov r10, r14	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4008a80	      0xe999000000	                           jmp 0x4008b1e	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4008a85	           0xf1f00	                         nop dword [rax]	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4008a88	            0x84c0	                             test al, al	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008a8a	     0xf85b5000000	                           jne 0x4008b45	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008a90	        0x4883fe04	                              cmp rsi, 4	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008a94	     0xf8456010000	                            je 0x4008bf0	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008a9a	        0x837d0408	                  cmp dword [rbp + 4], 8	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008a9e	     0xf84ac010000	                            je 0x4008c50	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008aa4	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008aa8	        0x48014328	            add qword [rbx + 0x28], rax 	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x4008aac	        0xf6450802	                  test byte [rbp + 8], 2	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x4008ab0	            0x7404	                            je 0x4008ab6	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x4008ab2	        0x48014330	            add qword [rbx + 0x30], rax 	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008ab6	        0x4c3b7338	            cmp r14, qword [rbx + 0x38] 	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008aba	      0x410fb64240	           movzx eax, byte [r10 + 0x40] 	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008abf	            0x7612	                           jbe 0x4008ad3	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008ac1	            0xa804	                              test al, 4	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008ac3	            0x750e	                           jne 0x4008ad3	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008ac5	        0x4883fe01	                              cmp rsi, 1	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008ac9	     0xf84e9020000	                            je 0x4008db8	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008acf	        0x4c897338	             mov qword [rbx + 0x38], r14	      5676	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008ad3	            0xa801	                              test al, 1	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4008ad5	            0x7530	                           jne 0x4008b07	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4008ad7	        0x488b4b08	                mov rcx, qword [rbx + 8]	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4008adb	          0x4889c8	                            mov rax, rcx	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4008ade	        0x4883c804	                               or rax, 4	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4008ae2	        0x48894308	                mov qword [rbx + 8], rax	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4008ae6	        0x488b5508	                mov rdx, qword [rbp + 8]	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4008aea	          0xf6c204	                              test dl, 4	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4008aed	            0x740b	                            je 0x4008afa	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4008aef	          0x4889c8	                            mov rax, rcx	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4008af2	        0x4883c805	                               or rax, 5	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4008af6	        0x48894308	                mov qword [rbx + 8], rax	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4008afa	          0x83e201	                              and edx, 1	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4008afd	            0x7408	                            je 0x4008b07	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4008aff	        0x4883c802	                               or rax, 2	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4008b03	        0x48894308	                mov qword [rbx + 8], rax	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4008b07	          0x488b33	                    mov rsi, qword [rbx]	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4008b0a	        0x4183c501	                             add r13d, 1	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008b0e	        0x4983c708	                              add r15, 8	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008b12	          0x4589c1	                            mov r9d, r8d	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008b15	          0x4539c5	                           cmp r13d, r8d	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008b18	     0xf8332030000	                           jae 0x4008e50	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008b1e	          0x4d8b27	                    mov r12, qword [r15]	      5562	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008b21	          0x4d89de	                            mov r14, r11	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4008b24	      0x418b4c2470	            mov ecx, dword [r12 + 0x70] 	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4008b29	    0x498bac24e000	            mov rbp, qword [r12 + 0xe0] 	      5563	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_35
0x4008b31	          0x49d3e6	                             shl r14, cl	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4008b34	        0x4883fe07	                              cmp rsi, 7	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b38	           0xf94c0	                                 sete al	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b3b	        0x4883fe01	                              cmp rsi, 1	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b3f	     0xf8543ffffff	                           jne 0x4008a88	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b45	          0x8b5504	                mov edx, dword [rbp + 4]	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b48	          0x83fa08	                              cmp edx, 8	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b4b	     0xf845f010000	                            je 0x4008cb0	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b51	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      5573	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b55	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b59	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	      5575	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b5e	        0x4c8d0c06	                     lea r9, [rsi + rax]	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b62	          0x4989c8	                             mov r8, rcx	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008b65	          0x4d29c8	                              sub r8, r9	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008b68	            0x7412	                            je 0x4008b7c	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008b6a	          0x4939c9	                             cmp r9, rcx	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008b6d	     0xf875d020000	                            ja 0x4008dd0	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008b73	          0x4c39ce	                             cmp rsi, r9	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008b76	     0xf8754020000	                            ja 0x4008dd0	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008b7c	        0x498d0c00	                     lea rcx, [r8 + rax]	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b80	          0x83fa08	                              cmp edx, 8	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4008b83	        0x48894b30	             mov qword [rbx + 0x30], rcx	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008b87	            0x741a	                            je 0x4008ba3	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4008b89	        0x4c8b4b28	              mov r9, qword [rbx + 0x28]	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008b8d	        0x4b8d0408	                      lea rax, [r8 + r9]	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008b91	          0x4839c1	                            cmp rcx, rax	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008b94	     0xf873e010000	                            ja 0x4008cd8	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008b9a	      0x4c01442408	                 add qword [rsp + 8], r8	      5602	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4008b9f	        0x48894328	             mov qword [rbx + 0x28], rax	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4008ba3	          0x488b33	                    mov rsi, qword [rbx]	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4008ba6	        0x458b4244	            mov r8d, dword [r10 + 0x44] 	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4008baa	        0x4883fe04	                              cmp rsi, 4	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008bae	            0x7440	                            je 0x4008bf0	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008bb0	        0x4883fe01	                              cmp rsi, 1	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4008bb4	     0xf85e0feffff	                           jne 0x4008a9a	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4008bba	        0x837d0408	                  cmp dword [rbp + 4], 8	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008bbe	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4008bc3	    0x4989bc249000	             mov qword [r12 + 0x90], rdi	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4008bcb	        0x48897d18	            mov qword [rbp + 0x18], rdi 	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4008bcf	     0xf84cb010000	                            je 0x4008da0	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008bd5	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008bd9	          0x4801c7	                            add rdi, rax	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008bdc	      0x48897c2408	                mov qword [rsp + 8], rdi	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008be1	      0xe9c2feffff	                           jmp 0x4008aa8	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008be6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008bf0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008bf5	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008bf9	        0x88442420	               mov byte [rsp + 0x20], al	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008bfd	          0x83e007	                              and eax, 7	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008c00	            0x3c03	                               cmp al, 3	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008c02	     0xf8592feffff	                           jne 0x4008a9a	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4008c08	          0x4585ed	                         test r13d, r13d	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c0b	     0xf85b7030000	                           jne 0x4008fc8	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c11	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c15	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c1a	    0x4989bc249000	             mov qword [r12 + 0x90], rdi	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c22	        0x48897d18	            mov qword [rbp + 0x18], rdi 	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c26	          0x4801c7	                            add rdi, rax	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c29	        0x48894328	             mov qword [rbx + 0x28], rax	      5615	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c2d	    0x48c743300000	               mov qword [rbx + 0x30], 0	      5616	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c35	    0x48c743380100	               mov qword [rbx + 0x38], 1	      5617	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c3d	      0x48897c2408	                mov qword [rsp + 8], rdi	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c42	      0x410fb64240	           movzx eax, byte [r10 + 0x40] 	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c47	      0xe987feffff	                           jmp 0x4008ad3	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c4c	         0xf1f4000	                         nop dword [rax]	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008c50	        0x488b4d08	                mov rcx, qword [rbp + 8]	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008c54	          0xf6c504	                              test ch, 4	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008c57	            0x742d	                            je 0x4008c86	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008c59	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008c5e	            0x7526	                           jne 0x4008c86	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008c60	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008c62	          0x4d85f6	                           test r14, r14	      5194	elf.c	FUNCTION_67	IF_1
0x4008c65	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_41
0x4008c69	            0x740a	                            je 0x4008c75	      5194	elf.c	FUNCTION_67	IF_1
0x4008c6b	      0x482b442408	                sub rax, qword [rsp + 8]	      5194	elf.c	FUNCTION_67	IF_1
0x4008c70	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008c72	          0x49f7f6	                                 div r14	      5194	elf.c	FUNCTION_67	IF_1
0x4008c75	      0x4803542408	                add rdx, qword [rsp + 8]	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008c7a	    0x498994249000	             mov qword [r12 + 0x90], rdx	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008c82	        0x48895518	            mov qword [rbp + 0x18], rdx 	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008c86	          0xf6c102	                              test cl, 2	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4008c89	     0xf8427feffff	                            je 0x4008ab6	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4008c8f	        0x4883fe07	                              cmp rsi, 7	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x4008c93	            0x7409	                            je 0x4008c9e	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x4008c95	          0x80e504	                               and ch, 4	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008c98	     0xf8518feffff	                           jne 0x4008ab6	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008c9e	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008ca2	      0xe90bfeffff	                           jmp 0x4008ab2	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008ca7	    0x660f1f840000	                    nop word [rax + rax]	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008cb0	        0x488b4d08	                mov rcx, qword [rbp + 8]	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cb4	          0xf6c102	                              test cl, 2	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cb7	     0xf84edfeffff	                            je 0x4008baa	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cbd	          0x80e504	                               and ch, 4	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cc0	     0xf848bfeffff	                            je 0x4008b51	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cc6	            0x84c0	                             test al, al	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cc8	     0xf84dcfeffff	                            je 0x4008baa	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cce	      0xe97efeffff	                           jmp 0x4008b51	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cd3	       0xf1f440000	                   nop dword [rax + rax]	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008cd8	      0x488b742408	                mov rsi, qword [rsp + 8]	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008cdd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008ce2	            0x31d2	                            xor edx, edx	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008ce4	      0x4c89542438	             mov qword [rsp + 0x38], r10	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008ce9	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008cee	      0x4c894c2428	              mov qword [rsp + 0x28], r9	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008cf3	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008cf8	      0xe800000000	                          call 0x4008cfd	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008cfd	            0x85c0	                           test eax, eax	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008cff	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008d04	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008d09	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008d0e	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008d13	     0xf859bf6ffff	                           jne 0x40083b4	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008d19	          0x4c29c9	                             sub rcx, r9	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008d1c	      0x4c89542430	             mov qword [rsp + 0x30], r10	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008d21	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008d26	          0x4889cf	                            mov rdi, rcx	      5235	elf.c	FUNCTION_69	CALL_2
0x4008d29	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      5235	elf.c	FUNCTION_69	CALL_2
0x4008d2e	      0xe800000000	                          call 0x4008d33	      5235	elf.c	FUNCTION_69	CALL_2
0x4008d33	          0x4885c0	                           test rax, rax	      5236	elf.c	FUNCTION_69	IF_2
0x4008d36	     0xf8478f6ffff	                            je 0x40083b4	      5236	elf.c	FUNCTION_69	IF_2
0x4008d3c	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      5238	elf.c	FUNCTION_69	CALL_3
0x4008d41	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5238	elf.c	FUNCTION_69	CALL_3
0x4008d46	          0x4889c7	                            mov rdi, rax	      5238	elf.c	FUNCTION_69	CALL_3
0x4008d49	      0x4889442438	             mov qword [rsp + 0x38], rax	      5238	elf.c	FUNCTION_69	CALL_3
0x4008d4e	          0x4c89c6	                             mov rsi, r8	      5238	elf.c	FUNCTION_69	CALL_3
0x4008d51	      0x4c89442470	              mov qword [rsp + 0x70], r8	      5238	elf.c	FUNCTION_69	CALL_3
0x4008d56	      0xe800000000	                          call 0x4008d5b	      5238	elf.c	FUNCTION_69	CALL_3
0x4008d5b	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      5239	elf.c	FUNCTION_69	CALL_4
0x4008d60	      0x4889442420	             mov qword [rsp + 0x20], rax	      5238	elf.c	FUNCTION_69	CALL_3
0x4008d65	          0x4889cf	                            mov rdi, rcx	      5239	elf.c	FUNCTION_69	CALL_4
0x4008d68	      0xe800000000	                          call 0x4008d6d	      5239	elf.c	FUNCTION_69	CALL_4
0x4008d6d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d72	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d77	          0x4939c0	                             cmp r8, rax	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d7a	     0xf8534f6ffff	                           jne 0x40083b4	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d80	          0x4c89c0	                             mov rax, r8	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d83	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d88	        0x48034328	             add rax, qword [rbx + 0x28]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d8c	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d91	      0xe904feffff	                           jmp 0x4008b9a	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008d96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008da0	        0x488b4d08	                mov rcx, qword [rbp + 8]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008da4	          0xf6c102	                              test cl, 2	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4008da7	     0xf8409fdffff	                            je 0x4008ab6	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4008dad	      0xe9e3feffff	                           jmp 0x4008c95	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4008db2	    0x660f1f440000	                    nop word [rax + rax]	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4008db8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008dbd	        0xf6474520	           test byte [rdi + 0x45], 0x20 	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008dc1	     0xf850cfdffff	                           jne 0x4008ad3	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008dc7	      0xe903fdffff	                           jmp 0x4008acf	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008dcc	         0xf1f4000	                         nop dword [rax]	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4008dd0	      0xba05000000	                              mov edx, 5	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x4008dd5	      0xbe00000000	                              mov esi, 0	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x4008dda	      0xbf00000000	                              mov edi, 0	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x4008ddf	      0x4c89542438	             mov qword [rsp + 0x38], r10	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x4008de4	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x4008de9	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x4008dee	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x4008df3	      0xe800000000	                          call 0x4008df8	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x4008df8	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008dfd	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008e02	          0x4c89e2	                            mov rdx, r12	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008e05	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008e0a	          0x4889c7	                            mov rdi, rax	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008e0d	            0x31c0	                            xor eax, eax	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008e0f	          0x4d89c8	                              mov r8, r9	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008e12	      0xe800000000	                          call 0x4008e17	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008e17	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e1c	          0x8b5504	                mov edx, dword [rbp + 4]	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e1f	          0x4531c0	                            xor r8d, r8d	      5586	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e22	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      5586	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e27	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      5586	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e2c	      0x4d894c2430	              mov qword [r12 + 0x30], r9	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e31	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e35	      0xe942fdffff	                           jmp 0x4008b7c	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e3a	    0x660f1f440000	                    nop word [rax + rax]	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008e40	          0x4885f6	                           test rsi, rsi	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4008e43	     0xf85acf7ffff	                           jne 0x40085f5	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4008e49	      0xe9b1f7ffff	                           jmp 0x40085ff	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4008e4e	            0x6690	                                     nop	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4008e50	          0x4d89d6	                            mov r14, r10	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4008e53	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008e58	      0x48297c2408	                sub qword [rsp + 8], rdi	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008e5d	        0x4883fe01	                              cmp rsi, 1	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008e61	     0xf84f9030000	                            je 0x4009260	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008e67	          0x4d8b36	                    mov r14, qword [r14]	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008e6a	        0x4883c340	                           add rbx, 0x40	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008e6e	      0x8344246001	               add dword [rsp + 0x60], 1	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008e73	          0x4d85f6	                           test r14, r14	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008e76	     0xf8514faffff	                           jne 0x4008890	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008e7c	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008e81	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008e88	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5729	elf.c	FUNCTION_70	CALL_53
0x4008e8d	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5729	elf.c	FUNCTION_70	CALL_53
0x4008e94	          0x4989fc	                            mov r12, rdi	      5729	elf.c	FUNCTION_70	CALL_53
0x4008e97	        0x48897a40	             mov qword [rdx + 0x40], rdi	      5729	elf.c	FUNCTION_70	CALL_53
0x4008e9b	    0x8bb0fc020000	           mov esi, dword [rax + 0x2fc] 	      5752	elf.c	FUNCTION_71	CALL_3
0x4008ea1	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      5751	elf.c	FUNCTION_71	CALL_2
0x4008ea5	        0x498b4f08	                mov rcx, qword [r15 + 8]	      5739	elf.c	FUNCTION_71	CALL_1
0x4008ea9	        0x4c8d7308	                      lea r14, [rbx + 8]	      5754	elf.c	FUNCTION_71	FOR_1
0x4008ead	    0x488bb9680300	           mov rdi, qword [rcx + 0x368] 	      5739	elf.c	FUNCTION_71	CALL_1
0x4008eb4	        0x488d2cf3	                  lea rbp, [rbx + rsi*8]	      5752	elf.c	FUNCTION_71	CALL_3
0x4008eb8	          0x4c39f5	                            cmp rbp, r14	      5754	elf.c	FUNCTION_71	FOR_1
0x4008ebb	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      5739	elf.c	FUNCTION_71	CALL_1
0x4008ec0	     0xf87c5000000	                            ja 0x4008f8b	      5754	elf.c	FUNCTION_71	FOR_1
0x4008ec6	      0xe940170000	                           jmp 0x400a60b	      5754	elf.c	FUNCTION_71	FOR_1
0x4008ecb	       0xf1f440000	                   nop dword [rax + rax]	      5754	elf.c	FUNCTION_71	FOR_1
0x4008ed0	        0x418b5504	                mov edx, dword [r13 + 4]	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008ed4	          0x83fa08	                              cmp edx, 8	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008ed7	     0xf84a0160000	                            je 0x400a57d	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008edd	      0x41f6450802	                  test byte [r13 + 8], 2	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4008ee2	     0xf84bf090000	                            je 0x40098a7	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4008ee8	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008eed	     0xf84970a0000	                            je 0x400998a	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008ef3	          0x4885c9	                           test rcx, rcx	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008ef6	     0xf849a220000	                            je 0x400b196	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008efc	          0x488b01	                    mov rax, qword [rcx]	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008eff	      0x4889442408	                mov qword [rsp + 8], rax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008f04	      0xba05000000	                              mov edx, 5	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4008f09	      0xbe00000000	                              mov esi, 0	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4008f0e	      0xbf00000000	                              mov edi, 0	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4008f13	      0xe800000000	                          call 0x4008f18	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4008f18	      0x488b542408	                mov rdx, qword [rsp + 8]	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008f1d	          0x4889c7	                            mov rdi, rax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008f20	          0x4c89fe	                            mov rsi, r15	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008f23	            0x31c0	                            xor eax, eax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008f25	      0xe800000000	                          call 0x4008f2a	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008f2a	      0x41f6474520	           test byte [r15 + 0x45], 0x20 	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008f2f	     0xf84510a0000	                            je 0x4009986	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008f35	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008f3a	     0xf84460a0000	                            je 0x4009986	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008f40	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008f45	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008f47	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008f4b	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008f4f	          0x4885c9	                           test rcx, rcx	      5194	elf.c	FUNCTION_67	IF_1
0x4008f52	            0x7408	                            je 0x4008f5c	      5194	elf.c	FUNCTION_67	IF_1
0x4008f54	          0x4c29e0	                            sub rax, r12	      5194	elf.c	FUNCTION_67	IF_1
0x4008f57	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008f59	          0x48f7f1	                                 div rcx	      5194	elf.c	FUNCTION_67	IF_1
0x4008f5c	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5194	elf.c	FUNCTION_67	IF_1
0x4008f60	          0x4901d4	                            add r12, rdx	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008f63	          0x4885c9	                           test rcx, rcx	      4203	elf.c	FUNCTION_58	IF_2
0x4008f66	        0x4d896518	             mov qword [r13 + 0x18], r12	      4202	elf.c	FUNCTION_58
0x4008f6a	            0x7407	                            je 0x4008f73	      4203	elf.c	FUNCTION_58	IF_2
0x4008f6c	    0x4c89a1900000	             mov qword [rcx + 0x90], r12	      4204	elf.c	FUNCTION_58	IF_2
0x4008f73	      0x41837d0408	                  cmp dword [r13 + 4], 8	      4205	elf.c	FUNCTION_58	IF_3
0x4008f78	            0x7404	                            je 0x4008f7e	      4205	elf.c	FUNCTION_58	IF_3
0x4008f7a	        0x4d036520	             add r12, qword [r13 + 0x20]	      4206	elf.c	FUNCTION_58	IF_3
0x4008f7e	        0x4983c608	                              add r14, 8	      5754	elf.c	FUNCTION_71	FOR_1
0x4008f82	          0x4c39f5	                            cmp rbp, r14	      5754	elf.c	FUNCTION_71	FOR_1
0x4008f85	     0xf866d160000	                           jbe 0x400a5f8	      5754	elf.c	FUNCTION_71	FOR_1
0x4008f8b	          0x4d8b2e	                    mov r13, qword [r14]	      5758	elf.c	FUNCTION_71	FOR_1
0x4008f8e	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008f92	          0x4885c9	                           test rcx, rcx	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008f95	     0xf8442ffffff	                            je 0x4008edd	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008f9b	    0x488b81900000	            mov rax, qword [rcx + 0x90] 	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008fa2	          0x4885c0	                           test rax, rax	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008fa5	     0xf8425ffffff	                            je 0x4008ed0	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008fab	        0x493b4518	            cmp rax, qword [r13 + 0x18] 	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008faf	            0x74cd	                            je 0x4008f7e	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008fb1	      0xbe83160000	                         mov esi, 0x1683	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008fb6	      0xbf00000000	                              mov edi, 0	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008fbb	      0xe800000000	                          call 0x4008fc0	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008fc0	            0xebbc	                           jmp 0x4008f7e	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008fc2	    0x660f1f440000	                    nop word [rax + rax]	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008fc8	    0x49c784249000	               mov qword [r12 + 0x90], 0	      5622	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x4008fd4	    0x49c744243800	               mov qword [r12 + 0x38], 0	      5623	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x4008fdd	      0xbe04000000	                              mov esi, 4	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x4008fe2	    0x41c744242000	               mov dword [r12 + 0x20], 0	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x4008feb	      0xe91afbffff	                           jmp 0x4008b0a	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x4008ff0	    0x48c703040000	                      mov qword [rbx], 4	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008ff7	        0x4d8b6610	            mov r12, qword [r14 + 0x10] 	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008ffb	        0x4c896308	                mov qword [rbx + 8], r12	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008fff	              0x90	                                     nop	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4009000	        0x498b4e48	            mov rcx, qword [r14 + 0x48] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x4009004	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x4009008	        0x488b4128	            mov rax, qword [rcx + 0x28] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400900c	          0x4829d0	                            sub rax, rdx	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x400900f	        0x48894318	             mov qword [rbx + 0x18], rax	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x4009013	      0x450fb65640	          movzx r10d, byte [r14 + 0x40] 	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4009018	          0x4589d5	                          mov r13d, r10d	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400901b	        0x4183e502	                             and r13d, 2	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400901f	            0x7517	                           jne 0x4009038	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4009021	        0x488b4130	            mov rax, qword [rcx + 0x30] 	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4009025	          0x4829d0	                            sub rax, rdx	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4009028	        0x48894320	             mov qword [rbx + 0x20], rax	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400902c	      0xe9e8f8ffff	                           jmp 0x4008919	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4009031	     0xf1f80000000	                         nop dword [rax]	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4009038	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400903c	        0x48894320	             mov qword [rbx + 0x20], rax	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4009040	      0xe9d4f8ffff	                           jmp 0x4008919	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4009045	           0xf1f00	                         nop dword [rax]	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4009048	            0x31d2	                            xor edx, edx	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400904a	            0x31c0	                            xor eax, eax	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400904c	      0xe99ff9ffff	                           jmp 0x40089f0	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4009051	     0xf1f80000000	                         nop dword [rax]	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4009058	          0x4585c0	                           test r8d, r8d	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400905b	     0xf85df060000	                           jne 0x4009740	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4009061	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4009066	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400906d	         0xfb6480b	            movzx ecx, byte [rax + 0xb] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4009071	      0xb801000000	                              mov eax, 1	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4009076	            0xd3e0	                             shl eax, cl	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4009078	            0x4898	                                    cdqe	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400907a	        0x48894338	             mov qword [rbx + 0x38], rax	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400907e	      0xe9b4f8ffff	                           jmp 0x4008937	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4009083	       0xf1f440000	                   nop dword [rax + rax]	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4009088	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x400908d	         0xfb67f44	           movzx edi, byte [rdi + 0x44] 	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4009091	            0x89f9	                            mov ecx, edi	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4009093	      0x40887c2420	              mov byte [rsp + 0x20], dil	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4009098	          0x83e107	                              and ecx, 7	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x400909b	          0x80f903	                               cmp cl, 3	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x400909e	     0xf85c0f9ffff	                           jne 0x4008a64	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x40090a4	         0xf1f4000	                         nop dword [rax]	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x40090a8	        0x4183e230	                          and r10d, 0x30	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x40090ac	     0xf85ae080000	                           jne 0x4009960	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x40090b2	      0x488b442408	                mov rax, qword [rsp + 8]	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x40090b7	        0x48894310	             mov qword [rbx + 0x10], rax	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x40090bb	      0xe9a4f9ffff	                           jmp 0x4008a64	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x40090c0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40090c5	        0xf6404520	           test byte [rax + 0x45], 0x20 	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40090c9	     0xf8457f8ffff	                            je 0x4008926	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40090cf	          0x83e204	                              and edx, 4	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x40090d2	            0x740c	                            je 0x40090e0	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x40090d4	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x40090d8	    0x488984248000	             mov qword [rsp + 0x80], rax	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x40090e0	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40090e8	    0x8384248c0000	               add dword [rsp + 0x8c], 1	      5385	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40090f0	        0x48894338	             mov qword [rbx + 0x38], rax	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40090f4	          0x4585c0	                           test r8d, r8d	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x40090f7	     0xf843d010000	                            je 0x400923a	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x40090fd	            0x84d2	                             test dl, dl	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40090ff	     0xf84dd190000	                            je 0x400aae2	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4009105	        0x4c8b7b38	            mov r15, qword [rbx + 0x38] 	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4009109	        0x498d7e48	                   lea rdi, [r14 + 0x48]	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x400910d	        0x418d70ff	                       lea esi, [r8 - 1]	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4009111	      0x498d4cf650	          lea rcx, [r14 + rsi*8 + 0x50] 	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4009116	          0x4c89fa	                            mov rdx, r15	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4009119	     0xf1f80000000	                         nop dword [rax]	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4009120	          0x488b07	                    mov rax, qword [rdi]	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x4009123	    0xf74020020100	         test dword [rax + 0x20], 0x102 	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400912a	            0x750e	                           jne 0x400913a	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400912c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x4009133	    0xc74004080000	                  mov dword [rax + 4], 8	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400913a	        0x4883c708	                              add rdi, 8	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400913e	          0x4839cf	                            cmp rdi, rcx	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x4009141	            0x75dd	                           jne 0x4009120	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x4009143	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4009147	          0x4989d7	                            mov r15, rdx	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400914a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4009151	        0x83780408	                  cmp dword [rax + 4], 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4009155	     0xf8580190000	                           jne 0x400aadb	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400915b	        0x498d4650	                   lea rax, [r14 + 0x50]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400915f	            0xeb1f	                           jmp 0x4009180	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4009161	     0xf1f80000000	                         nop dword [rax]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4009168	          0x488b30	                    mov rsi, qword [rax]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400916b	        0x4883c008	                              add rax, 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400916f	    0x488bb6e00000	            mov rsi, qword [rsi + 0xe0] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4009176	        0x837e0408	                  cmp dword [rsi + 4], 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400917a	     0xf8558190000	                           jne 0x400aad8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4009180	          0x4839c8	                            cmp rax, rcx	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x4009183	            0x75e3	                           jne 0x4009168	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x4009185	          0x4989d7	                            mov r15, rdx	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x4009188	      0xbd01000000	                              mov ebp, 1	      5428	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400918d	          0x4d85ff	                           test r15, r15	      5194	elf.c	FUNCTION_67	IF_1
0x4009190	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_25
0x4009194	    0x48c744244000	               mov qword [rsp + 0x40], 0	      5194	elf.c	FUNCTION_67	IF_1
0x400919d	            0x740f	                            je 0x40091ae	      5194	elf.c	FUNCTION_67	IF_1
0x400919f	      0x482b442408	                sub rax, qword [rsp + 8]	      5194	elf.c	FUNCTION_67	IF_1
0x40091a4	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x40091a6	          0x49f7f7	                                 div r15	      5194	elf.c	FUNCTION_67	IF_1
0x40091a9	      0x4889542440	             mov qword [rsp + 0x40], rdx	      5194	elf.c	FUNCTION_67	IF_1
0x40091ae	    0x83bc248c0000	               cmp dword [rsp + 0x8c], 1	      5441	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091b6	     0xf86f8130000	                           jbe 0x400a5b4	      5441	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091bc	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091c1	    0x80b88a030000	               cmp byte [rax + 0x38a], 0	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091c8	     0xf89e6130000	                           jns 0x400a5b4	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091ce	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091d6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091db	        0x4883e801	                              sub rax, 1	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091df	          0x4885c7	                           test rdi, rax	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091e2	     0xf85731d0000	                           jne 0x400af5b	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091e8	          0x4889f8	                            mov rax, rdi	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091eb	      0x4803442440	             add rax, qword [rsp + 0x40]	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40091f0	            0x85ed	                           test ebp, ebp	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x40091f2	      0x4889442408	                mov qword [rsp + 8], rax	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x40091f7	            0x7443	                            je 0x400923c	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x40091f9	      0xbd01000000	                              mov ebp, 1	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x40091fe	      0xe95df7ffff	                           jmp 0x4008960	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x4009203	       0xf1f440000	                   nop dword [rax + rax]	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x4009208	          0x4585c0	                           test r8d, r8d	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400920b	     0xf847a230000	                            je 0x400b58b	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4009211	        0x418d50ff	                       lea edx, [r8 - 1]	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4009215	        0x498d4648	                   lea rax, [r14 + 0x48]	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4009219	      0x498d4cd650	          lea rcx, [r14 + rdx*8 + 0x50] 	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400921e	            0x6690	                                     nop	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4009220	          0x488b10	                    mov rdx, qword [rax]	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4009223	        0x4883c008	                              add rax, 8	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4009227	          0x4839c8	                            cmp rax, rcx	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400922a	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4009231	    0xc74204070000	                  mov dword [rdx + 4], 7	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4009238	            0x75e6	                           jne 0x4009220	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400923a	            0x31ed	                            xor ebp, ebp	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400923c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4009245	      0xe916f7ffff	                           jmp 0x4008960	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400924a	    0x660f1f440000	                    nop word [rax + rax]	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4009250	        0x4d8b5e08	                mov r11, qword [r14 + 8]	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4009254	      0xe98af6ffff	                           jmp 0x40088e3	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4009259	     0xf1f80000000	                         nop dword [rax]	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4009260	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4009265	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4009269	        0x88442420	               mov byte [rsp + 0x20], al	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x400926d	          0x83e007	                              and eax, 7	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4009270	            0x3c03	                               cmp al, 3	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4009272	     0xf84effbffff	                            je 0x4008e67	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4009278	        0x4183f801	                              cmp r8d, 1	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400927c	     0xf8627070000	                           jbe 0x40099a9	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4009282	        0x418d50fe	                       lea edx, [r8 - 2]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4009286	        0x498b4e48	            mov rcx, qword [r14 + 0x48] 	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400928a	        0x498d4650	                   lea rax, [r14 + 0x50]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400928e	      0x498d7cd658	          lea rdi, [r14 + rdx*8 + 0x58] 	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4009293	            0xeb13	                           jmp 0x40092a8	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4009295	           0xf1f00	                         nop dword [rax]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4009298	        0x4883c008	                              add rax, 8	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400929c	          0x4889d1	                            mov rcx, rdx	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400929f	          0x4839f8	                            cmp rax, rdi	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x40092a2	     0xf840a070000	                            je 0x40099b2	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x40092a8	          0x488b10	                    mov rdx, qword [rax]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092ab	        0x4c8b5928	            mov r11, qword [rcx + 0x28] 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092af	        0x4c395a28	            cmp qword [rdx + 0x28], r11 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092b3	            0x75e3	                           jne 0x4009298	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092b5	    0x4c8b82e00000	              mov r8, qword [rdx + 0xe0]	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x40092bc	      0x41f6400904	                   test byte [r8 + 9], 4	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x40092c1	            0x7407	                            je 0x40092ca	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x40092c3	      0x4183780408	                   cmp dword [r8 + 4], 8	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x40092c8	            0x74ce	                            je 0x4009298	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x40092ca	      0x4983782000	                cmp qword [r8 + 0x20], 0	      5700	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092cf	            0x74c7	                            je 0x4009298	      5700	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092d1	    0x488b89e00000	            mov rcx, qword [rcx + 0xe0] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40092d8	        0xf6410904	                  test byte [rcx + 9], 4	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40092dc	            0x7406	                            je 0x40092e4	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40092de	        0x83790408	                  cmp dword [rcx + 4], 8	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40092e2	            0x74b4	                            je 0x4009298	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40092e4	      0x4883792000	               cmp qword [rcx + 0x20], 0	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092e9	            0x74ad	                            je 0x4009298	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092eb	          0x4531ed	                          xor r13d, r13d	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40092ee	            0x31ed	                            xor ebp, ebp	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40092f0	      0x448b642460	           mov r12d, dword [rsp + 0x60] 	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40092f5	      0x44886c2420	             mov byte [rsp + 0x20], r13b	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40092fa	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40092ff	      0xe9ab000000	                           jmp 0x40093af	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4009304	         0xf1f4000	                         nop dword [rax]	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4009308	        0x488d7efa	                      lea rdi, [rsi - 6]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400930c	        0x4883ff01	                              cmp rdi, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009310	     0xf86ea000000	                           jbe 0x4009400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009316	          0x83e002	                              and eax, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009319	     0xf8471020000	                            je 0x4009590	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400931f	        0x448b5204	               mov r10d, dword [rdx + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009323	        0x4183fa08	                             cmp r10d, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009327	            0x7422	                            je 0x400934b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009329	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400932d	        0x4c8b5b10	            mov r11, qword [rbx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009331	          0x4c39df	                            cmp rdi, r11	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009334	     0xf82c6000000	                            jb 0x4009400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400933a	        0x48037a20	             add rdi, qword [rdx + 0x20]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400933e	          0x4c29df	                            sub rdi, r11	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009341	        0x483b7b28	            cmp rdi, qword [rbx + 0x28] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009345	     0xf87b5000000	                            ja 0x4009400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400934b	       0xfb67c2420	           movzx edi, byte [rsp + 0x20] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009350	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009353	           0xf95c0	                                setne al	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009356	          0x4020c7	                             and dil, al	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009359	     0xf8425220000	                            je 0x400b584	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400935f	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009363	        0x4c8b5b18	            mov r11, qword [rbx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009367	          0x4c39d8	                            cmp rax, r11	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400936a	     0xf82b1020000	                            jb 0x4009621	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009370	          0x4c29d8	                            sub rax, r11	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009373	        0x4183fa08	                             cmp r10d, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009377	            0x7509	                           jne 0x4009382	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009379	          0x4885c9	                           test rcx, rcx	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400937c	     0xf8535210000	                           jne 0x400b4b7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009382	        0x4c8b5a20	            mov r11, qword [rdx + 0x20] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009386	          0x4c01d8	                            add rax, r11	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009389	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400938d	     0xf878e020000	                            ja 0x4009621	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009393	        0x4883fe02	                              cmp rsi, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009397	     0xf8426020000	                            je 0x40095c3	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400939d	           0xf1f00	                         nop dword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093a0	          0x83c501	                              add ebp, 1	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40093a3	          0x4439cd	                            cmp ebp, r9d	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40093a6	     0xf83bbfaffff	                           jae 0x4008e67	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40093ac	          0x488b33	                    mov rsi, qword [rbx]	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40093af	            0x89e8	                            mov eax, ebp	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40093b1	      0x4d8b6cc648	    mov r13, qword [r14 + rax*8 + 0x48] 	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40093b6	    0x498b95e00000	            mov rdx, qword [r13 + 0xe0] 	      5715	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	CALL_47
0x40093bd	        0x488b4208	                mov rax, qword [rdx + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093c1	          0x4889c1	                            mov rcx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093c4	    0x81e100040000	                          and ecx, 0x400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093ca	     0xf8438ffffff	                            je 0x4009308	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093d0	        0x4883fe07	                              cmp rsi, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093d4	        0x410f95c2	                              setne r10b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093d8	    0x4881fe52e574	                     cmp rsi, 0x6474e552	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093df	        0x400f95c7	                               setne dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093e3	          0x4184fa	                          test r10b, dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093e6	     0xf842affffff	                            je 0x4009316	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093ec	        0x4883fe01	                              cmp rsi, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093f0	     0xf8420ffffff	                            je 0x4009316	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40093f6	        0x837a0408	                  cmp dword [rdx + 4], 8	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x40093fa	     0xf8430020000	                            je 0x4009630	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4009400	      0xba05000000	                              mov edx, 5	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_51
0x4009405	      0xbe00000000	                              mov esi, 0	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_51
0x400940a	      0xbf00000000	                              mov edi, 0	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_51
0x400940f	      0xe800000000	                          call 0x4009414	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_51
0x4009414	          0x4489e1	                           mov ecx, r12d	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x4009417	          0x4889c7	                            mov rdi, rax	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x400941a	          0x4c89ea	                            mov rdx, r13	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x400941d	            0x31c0	                            xor eax, eax	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x400941f	          0x4c89fe	                            mov rsi, r15	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x4009422	      0xe800000000	                          call 0x4009427	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x4009427	        0x4d8b4e08	                 mov r9, qword [r14 + 8]	      5203	elf.c	FUNCTION_68	CALL_1
0x400942b	        0x4183f905	                              cmp r9d, 5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400942f	     0xf84d6070000	                            je 0x4009c0b	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009435	     0xf87c5000000	                            ja 0x4009500	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400943b	        0x4183f902	                              cmp r9d, 2	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400943f	     0xf84bb070000	                            je 0x4009c00	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009445	     0xf87f5010000	                            ja 0x4009640	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400944b	          0x4585c9	                           test r9d, r9d	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400944e	    0x41bd00000000	                             mov r13d, 0	      1590	elf.c	FUNCTION_32	SWITCH_1
0x4009454	            0x741a	                            je 0x4009470	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009456	        0x4183f901	                              cmp r9d, 1	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400945a	    0x41bd00000000	                             mov r13d, 0	      1591	elf.c	FUNCTION_32	SWITCH_1
0x4009460	     0xf85cd000000	                           jne 0x4009533	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009466	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009470	    0x488b3d000000	            mov rdi, qword [0x04009477] 	      5219	elf.c	FUNCTION_68	CALL_2
0x4009477	      0xe800000000	                          call 0x400947c	      5219	elf.c	FUNCTION_68	CALL_2
0x400947c	    0x488b3d000000	            mov rdi, qword [0x04009483] 	        97	stdio2.h	CALL_63
0x4009483	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_63
0x4009486	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x4009488	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x400948d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x4009492	          0x4531ed	                          xor r13d, r13d	      5221	elf.c	FUNCTION_68	FOR_1
0x4009495	      0xe800000000	                          call 0x400949a	        97	stdio2.h	CALL_63
0x400949a	        0x418b4644	            mov eax, dword [r14 + 0x44] 	      5221	elf.c	FUNCTION_68	FOR_1
0x400949e	            0x85c0	                           test eax, eax	      5221	elf.c	FUNCTION_68	FOR_1
0x40094a0	            0x7433	                            je 0x40094d5	      5221	elf.c	FUNCTION_68	FOR_1
0x40094a2	    0x660f1f440000	                    nop word [rax + rax]	      5221	elf.c	FUNCTION_68	FOR_1
0x40094a8	          0x4489e8	                           mov eax, r13d	      5222	elf.c	FUNCTION_68	FOR_1
0x40094ab	    0x488b3d000000	            mov rdi, qword [0x040094b2] 	        97	stdio2.h	CALL_63
0x40094b2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_63
0x40094b7	      0x498b44c648	    mov rax, qword [r14 + rax*8 + 0x48] 	      5222	elf.c	FUNCTION_68	FOR_1
0x40094bc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_63
0x40094c1	        0x4183c501	                             add r13d, 1	      5221	elf.c	FUNCTION_68	FOR_1
0x40094c5	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_63
0x40094c8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_63
0x40094ca	      0xe800000000	                          call 0x40094cf	        97	stdio2.h	CALL_63
0x40094cf	        0x453b6e44	           cmp r13d, dword [r14 + 0x44] 	      5221	elf.c	FUNCTION_68	FOR_1
0x40094d3	            0x72d3	                            jb 0x40094a8	      5221	elf.c	FUNCTION_68	FOR_1
0x40094d5	    0x488b35000000	            mov rsi, qword [0x040094dc] 	      5223	elf.c	FUNCTION_68	CALL_3
0x40094dc	      0xbf0a000000	                            mov edi, 0xa	      5223	elf.c	FUNCTION_68	CALL_3
0x40094e1	      0xe800000000	                          call 0x40094e6	      5223	elf.c	FUNCTION_68	CALL_3
0x40094e6	    0x488b3d000000	            mov rdi, qword [0x040094ed] 	      5224	elf.c	FUNCTION_68	CALL_4
0x40094ed	      0xe800000000	                          call 0x40094f2	      5224	elf.c	FUNCTION_68	CALL_4
0x40094f2	        0x458b4e44	            mov r9d, dword [r14 + 0x44] 	      5224	elf.c	FUNCTION_68	CALL_4
0x40094f6	      0xe9a5feffff	                           jmp 0x40093a0	      5224	elf.c	FUNCTION_68	CALL_4
0x40094fb	       0xf1f440000	                   nop dword [rax + rax]	      5224	elf.c	FUNCTION_68	CALL_4
0x4009500	    0x4181f950e574	                     cmp r9d, 0x6474e550	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009507	     0xf84e8060000	                            je 0x4009bf5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400950d	     0xf8755010000	                            ja 0x4009668	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009513	        0x4183f906	                              cmp r9d, 6	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009517	    0x41bd00000000	                             mov r13d, 0	      1596	elf.c	FUNCTION_32	SWITCH_1
0x400951d	     0xf844dffffff	                            je 0x4009470	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009523	        0x4183f907	                              cmp r9d, 7	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009527	    0x41bd00000000	                             mov r13d, 0	      1597	elf.c	FUNCTION_32	SWITCH_1
0x400952d	     0xf843dffffff	                            je 0x4009470	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009533	    0x498d81000000	              lea rax, [r9 - 0x70000000]	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400953a	    0x483dffffff0f	                      cmp rax, 0xfffffff	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x4009540	     0xf8612160000	                           jbe 0x400ab58	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x4009546	    0x498d81000000	              lea rax, [r9 - 0x60000000]	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x400954d	    0x483dffffff0f	                      cmp rax, 0xfffffff	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x4009553	     0xf87b9110000	                            ja 0x400a712	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x4009559	    0x458d81000000	              lea r8d, [r9 - 0x60000000]	        33	stdio2.h	FUNCTION_204	CALL_1
0x4009560	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4009565	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400956d	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_204	CALL_1
0x4009572	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x4009577	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_204	CALL_1
0x4009579	    0x4c8dac24c000	                   lea r13, [rsp + 0xc0]	      5217	elf.c	FUNCTION_68	IF_1
0x4009581	      0xe800000000	                          call 0x4009586	        33	stdio2.h	FUNCTION_204	CALL_1
0x4009586	      0xe9e5feffff	                           jmp 0x4009470	        33	stdio2.h	FUNCTION_204	CALL_1
0x400958b	       0xf1f440000	                   nop dword [rax + rax]	        33	stdio2.h	FUNCTION_204	CALL_1
0x4009590	    0x488dbeb01a8b	             lea rdi, [rsi - 0x6474e550]	        33	stdio2.h	FUNCTION_204	CALL_1
0x4009597	        0x4883ff02	                              cmp rdi, 2	        33	stdio2.h	FUNCTION_204	CALL_1
0x400959b	        0x488d7eff	                      lea rdi, [rsi - 1]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400959f	        0x410f96c2	                              setbe r10b	        33	stdio2.h	FUNCTION_204	CALL_1
0x40095a3	        0x4883ff01	                              cmp rdi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x40095a7	        0x400f96c7	                               setbe dil	        33	stdio2.h	FUNCTION_204	CALL_1
0x40095ab	          0x4408d7	                            or dil, r10b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095ae	            0x7571	                           jne 0x4009621	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095b0	        0x448b5204	               mov r10d, dword [rdx + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095b4	        0x4183fa08	                             cmp r10d, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095b8	     0xf856bfdffff	                           jne 0x4009329	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095be	      0xe9d0fdffff	                           jmp 0x4009393	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095c3	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095c8	     0xf85d2fdffff	                           jne 0x40093a0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095ce	        0x4c8b5b30	            mov r11, qword [rbx + 0x30] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095d2	          0x4d85db	                           test r11, r11	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095d5	     0xf84c5fdffff	                            je 0x40093a0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095db	        0x4183fa08	                             cmp r10d, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095df	            0x741e	                            je 0x40095ff	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095e1	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095e5	        0x4c8b5310	            mov r10, qword [rbx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095e9	          0x4c39d0	                            cmp rax, r10	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095ec	     0xf860efeffff	                           jbe 0x4009400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095f2	          0x4c29d0	                            sub rax, r10	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095f5	        0x483b4328	            cmp rax, qword [rbx + 0x28] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095f9	     0xf8301feffff	                           jae 0x4009400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40095ff	          0x4084ff	                           test dil, dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009602	     0xf8498fdffff	                            je 0x40093a0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009608	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400960c	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009610	          0x4839f8	                            cmp rax, rdi	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009613	            0x760c	                           jbe 0x4009621	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009615	          0x4829f8	                            sub rax, rdi	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009618	          0x4939c3	                            cmp r11, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400961b	     0xf877ffdffff	                            ja 0x40093a0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4009621	          0x4885c9	                           test rcx, rcx	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4009624	     0xf85ccfdffff	                           jne 0x40093f6	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x400962a	      0xe9d1fdffff	                           jmp 0x4009400	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x400962f	              0x90	                                     nop	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4009630	        0x4883fe07	                              cmp rsi, 7	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4009634	     0xf8566fdffff	                           jne 0x40093a0	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x400963a	      0xe9c1fdffff	                           jmp 0x4009400	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x400963f	              0x90	                                     nop	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4009640	        0x4183f903	                              cmp r9d, 3	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009644	    0x41bd00000000	                             mov r13d, 0	      1593	elf.c	FUNCTION_32	SWITCH_1
0x400964a	     0xf8420feffff	                            je 0x4009470	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009650	        0x4183f904	                              cmp r9d, 4	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009654	    0x41bd00000000	                             mov r13d, 0	      1594	elf.c	FUNCTION_32	SWITCH_1
0x400965a	     0xf8410feffff	                            je 0x4009470	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009660	      0xe9cefeffff	                           jmp 0x4009533	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009665	           0xf1f00	                         nop dword [rax]	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009668	    0x4181f951e574	                     cmp r9d, 0x6474e551	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400966f	    0x41bd00000000	                             mov r13d, 0	      1599	elf.c	FUNCTION_32	SWITCH_1
0x4009675	     0xf84f5fdffff	                            je 0x4009470	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400967b	    0x4181f952e574	                     cmp r9d, 0x6474e552	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009682	    0x41bd00000000	                             mov r13d, 0	      1600	elf.c	FUNCTION_32	SWITCH_1
0x4009688	     0xf84e2fdffff	                            je 0x4009470	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400968e	      0xe9a0feffff	                           jmp 0x4009533	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009693	       0xf1f440000	                   nop dword [rax + rax]	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4009698	    0x488b8f000300	           mov rcx, qword [rdi + 0x300] 	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x400969f	          0x4585c0	                           test r8d, r8d	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x40096a2	           0xfb631	                   movzx esi, byte [rcx]	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x40096a5	        0x48897310	             mov qword [rbx + 0x10], rsi	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x40096a9	     0xf8413050000	                            je 0x4009bc2	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x40096af	      0x482b742408	                sub rsi, qword [rsp + 8]	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x40096b4	        0x48017318	            add qword [rbx + 0x18], rsi 	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x40096b8	          0x4584ed	                         test r13b, r13b	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x40096bb	            0x7504	                           jne 0x40096c1	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x40096bd	        0x48017320	            add qword [rbx + 0x20], rsi 	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x40096c1	         0xfb67101	               movzx esi, byte [rcx + 1]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096c5	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096c9	           0xfaff7	                           imul esi, edi	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096cc	          0x4801f0	                            add rax, rsi	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096cf	        0x48894328	             mov qword [rbx + 0x28], rax	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096d3	         0xfb64901	               movzx ecx, byte [rcx + 1]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096d7	           0xfafcf	                           imul ecx, edi	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096da	          0x4801ca	                            add rdx, rcx	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096dd	      0xe958f3ffff	                           jmp 0x4008a3a	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096e2	    0x660f1f440000	                    nop word [rax + rax]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40096e8	        0x4183f801	                              cmp r8d, 1	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x40096ec	     0xf8648fbffff	                           jbe 0x400923a	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x40096f2	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x40096f6	      0xbf00000000	                              mov edi, 0	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x40096fb	      0xb909000000	                              mov ecx, 9	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4009700	          0x488b30	                    mov rsi, qword [rax]	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4009703	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4009705	     0xf842ffbffff	                            je 0x400923a	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400970b	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4009710	      0xba05000000	                              mov edx, 5	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x4009715	      0xbe00000000	                              mov esi, 0	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x400971a	      0xbf00000000	                              mov edi, 0	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x400971f	      0xe800000000	                          call 0x4009724	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x4009724	          0x4c89fe	                            mov rsi, r15	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x4009727	          0x4889c7	                            mov rdi, rax	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400972a	            0x31c0	                            xor eax, eax	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400972c	      0xe800000000	                          call 0x4009731	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x4009731	      0xbf11000000	                           mov edi, 0x11	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_33
0x4009736	      0xe800000000	                          call 0x400973b	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_33
0x400973b	      0xe974ecffff	                           jmp 0x40083b4	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_33
0x4009740	    0x48c743380000	               mov qword [rbx + 0x38], 0	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4009748	      0xe9eaf1ffff	                           jmp 0x4008937	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400974d	           0xf1f00	                         nop dword [rax]	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4009750	        0x4d894340	              mov qword [r11 + 0x40], r8	      6110	elf.c	FUNCTION_73	IF_1	CALL_13
0x4009754	        0x8b542478	            mov edx, dword [rsp + 0x78] 	      4284	elf.c	FUNCTION_59	IF_11
0x4009758	            0x85d2	                           test edx, edx	      4284	elf.c	FUNCTION_59	IF_11
0x400975a	     0xf8438010000	                            je 0x4009898	      4284	elf.c	FUNCTION_59	IF_11
0x4009760	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_10
0x4009767	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      4200	elf.c	FUNCTION_58	IF_1
0x400976e	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_10
0x4009775	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x4009779	        0x488b7140	            mov rsi, qword [rcx + 0x40] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_10
0x400977d	            0x7617	                           jbe 0x4009796	      4200	elf.c	FUNCTION_58	IF_1
0x400977f	      0x488d7c16ff	                lea rdi, [rsi + rdx - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x4009784	          0x4839fe	                            cmp rsi, rdi	      4201	elf.c	FUNCTION_58	CALL_1
0x4009787	     0xf873b160000	                            ja 0x400adc8	      4201	elf.c	FUNCTION_58	CALL_1
0x400978d	          0x48f7da	                                 neg rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x4009790	          0x4889d6	                            mov rsi, rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x4009793	          0x4821fe	                            and rsi, rdi	      4201	elf.c	FUNCTION_58	CALL_1
0x4009796	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      4203	elf.c	FUNCTION_58	IF_2
0x400979d	    0x4889b0800000	             mov qword [rax + 0x80], rsi	      4202	elf.c	FUNCTION_58
0x40097a4	          0x4885d2	                           test rdx, rdx	      4203	elf.c	FUNCTION_58	IF_2
0x40097a7	            0x7407	                            je 0x40097b0	      4203	elf.c	FUNCTION_58	IF_2
0x40097a9	    0x4889b2900000	             mov qword [rdx + 0x90], rsi	      4204	elf.c	FUNCTION_58	IF_2
0x40097b0	        0x83786c08	               cmp dword [rax + 0x6c], 8	      4205	elf.c	FUNCTION_58	IF_3
0x40097b4	            0x7407	                            je 0x40097bd	      4205	elf.c	FUNCTION_58	IF_3
0x40097b6	    0x4803b0880000	             add rsi, qword [rax + 0x88]	      4206	elf.c	FUNCTION_58	IF_3
0x40097bd	    0x488b90e80200	           mov rdx, qword [rax + 0x2e8] 	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x40097c4	          0x4885d2	                           test rdx, rdx	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x40097c7	            0x7449	                            je 0x4009812	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x40097c9	        0x488b7a20	            mov rdi, qword [rdx + 0x20] 	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x40097cd	          0x4885ff	                           test rdi, rdi	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x40097d0	            0x7440	                            je 0x4009812	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x40097d2	        0x4c8b4230	              mov r8, qword [rdx + 0x30]	      4200	elf.c	FUNCTION_58	IF_1
0x40097d6	        0x4983f801	                               cmp r8, 1	      4200	elf.c	FUNCTION_58	IF_1
0x40097da	            0x7617	                           jbe 0x40097f3	      4200	elf.c	FUNCTION_58	IF_1
0x40097dc	      0x4e8d4c06ff	                  lea r9, [rsi + r8 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x40097e1	          0x4c39ce	                             cmp rsi, r9	      4201	elf.c	FUNCTION_58	CALL_1
0x40097e4	     0xf8769180000	                            ja 0x400b053	      4201	elf.c	FUNCTION_58	CALL_1
0x40097ea	          0x4c89c6	                             mov rsi, r8	      4201	elf.c	FUNCTION_58	CALL_1
0x40097ed	          0x48f7de	                                 neg rsi	      4201	elf.c	FUNCTION_58	CALL_1
0x40097f0	          0x4c21ce	                             and rsi, r9	      4201	elf.c	FUNCTION_58	CALL_1
0x40097f3	        0x4c8b4240	              mov r8, qword [rdx + 0x40]	      4203	elf.c	FUNCTION_58	IF_2
0x40097f7	        0x48897218	             mov qword [rdx + 0x18], rsi	      4202	elf.c	FUNCTION_58
0x40097fb	          0x4d85c0	                             test r8, r8	      4203	elf.c	FUNCTION_58	IF_2
0x40097fe	            0x7407	                            je 0x4009807	      4203	elf.c	FUNCTION_58	IF_2
0x4009800	    0x4989b0900000	              mov qword [r8 + 0x90], rsi	      4204	elf.c	FUNCTION_58	IF_2
0x4009807	          0x4801f7	                            add rdi, rsi	      4206	elf.c	FUNCTION_58	IF_3
0x400980a	        0x837a0408	                  cmp dword [rdx + 4], 8	      4206	elf.c	FUNCTION_58	IF_3
0x400980e	        0x480f45f7	                         cmovne rsi, rdi	      4206	elf.c	FUNCTION_58	IF_3
0x4009812	    0x488b90380100	           mov rdx, qword [rax + 0x138] 	      4200	elf.c	FUNCTION_58	IF_1
0x4009819	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400981d	            0x7617	                           jbe 0x4009836	      4200	elf.c	FUNCTION_58	IF_1
0x400981f	      0x488d7c16ff	                lea rdi, [rsi + rdx - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x4009824	          0x4839fe	                            cmp rsi, rdi	      4201	elf.c	FUNCTION_58	CALL_1
0x4009827	     0xf87a7150000	                            ja 0x400add4	      4201	elf.c	FUNCTION_58	CALL_1
0x400982d	          0x48f7da	                                 neg rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x4009830	          0x4889d6	                            mov rsi, rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x4009833	          0x4821fe	                            and rsi, rdi	      4201	elf.c	FUNCTION_58	CALL_1
0x4009836	    0x488b90480100	           mov rdx, qword [rax + 0x148] 	      4203	elf.c	FUNCTION_58	IF_2
0x400983d	    0x4889b0200100	            mov qword [rax + 0x120], rsi	      4202	elf.c	FUNCTION_58
0x4009844	          0x4885d2	                           test rdx, rdx	      4203	elf.c	FUNCTION_58	IF_2
0x4009847	            0x7407	                            je 0x4009850	      4203	elf.c	FUNCTION_58	IF_2
0x4009849	    0x4889b2900000	             mov qword [rdx + 0x90], rsi	      4204	elf.c	FUNCTION_58	IF_2
0x4009850	    0x83b80c010000	              cmp dword [rax + 0x10c], 8	      4205	elf.c	FUNCTION_58	IF_3
0x4009857	          0x4889f2	                            mov rdx, rsi	      4205	elf.c	FUNCTION_58	IF_3
0x400985a	            0x7407	                            je 0x4009863	      4205	elf.c	FUNCTION_58	IF_3
0x400985c	    0x480390280100	            add rdx, qword [rax + 0x128]	      4206	elf.c	FUNCTION_58	IF_3
0x4009863	        0x48895140	             mov qword [rcx + 0x40], rdx	      4305	elf.c	FUNCTION_59	IF_11	CALL_18
0x4009867	          0x4c89ff	                            mov rdi, r15	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400986a	            0x31d2	                            xor edx, edx	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400986c	      0xe800000000	                          call 0x4009871	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x4009871	            0x85c0	                           test eax, eax	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x4009873	     0xf853bebffff	                           jne 0x40083b4	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x4009879	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x400987e	          0x4c89ff	                            mov rdi, r15	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x4009881	      0xe800000000	                          call 0x4009886	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x4009886	            0x85c0	                           test eax, eax	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x4009888	     0xf8426ebffff	                            je 0x40083b4	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x400988e	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4312	elf.c	FUNCTION_59	IF_11	CALL_21
0x4009893	      0xe800000000	                          call 0x4009898	      4312	elf.c	FUNCTION_59	IF_11	CALL_21
0x4009898	      0x41804f4740	              or byte [r15 + 0x47], 0x40	      4315	elf.c	FUNCTION_59
0x400989d	      0xb801000000	                              mov eax, 1	      4317	elf.c	FUNCTION_59
0x40098a2	      0xe90febffff	                           jmp 0x40083b6	      4317	elf.c	FUNCTION_59
0x40098a7	        0x418b5504	                mov edx, dword [r13 + 4]	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098ab	          0x83fa09	                              cmp edx, 9	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098ae	     0xf8409010000	                            je 0x40099bd	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098b4	          0x83fa04	                              cmp edx, 4	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098b7	     0xf8400010000	                            je 0x40099bd	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098bd	          0x4885c9	                           test rcx, rcx	      5786	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098c0	            0x740a	                            je 0x40098cc	      5786	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098c2	        0xf6412308	               test byte [rcx + 0x23], 8	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098c6	     0xf85fa000000	                           jne 0x40099c6	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40098cc	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x40098d3	    0x8bb0780c0000	           mov esi, dword [rax + 0xc78] 	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x40098d9	        0x4c3b2cf3	            cmp r13, qword [rbx + rsi*8]	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x40098dd	     0xf84e3000000	                            je 0x40099c6	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x40098e3	    0x488bb0e80200	           mov rsi, qword [rax + 0x2e8] 	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x40098ea	          0x4885f6	                           test rsi, rsi	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x40098ed	            0x740d	                            je 0x40098fc	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x40098ef	          0x8b7650	            mov esi, dword [rsi + 0x50] 	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x40098f2	        0x4c3b2cf3	            cmp r13, qword [rbx + rsi*8]	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x40098f6	     0xf84ca000000	                            je 0x40099c6	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x40098fc	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x4009903	          0x8b7050	            mov esi, dword [rax + 0x50] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x4009906	        0x4c3b2cf3	            cmp r13, qword [rbx + rsi*8]	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x400990a	     0xf84b6000000	                            je 0x40099c6	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x4009910	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x4009913	        0x4c3b2cc3	            cmp r13, qword [rbx + rax*8]	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x4009917	     0xf84a9000000	                            je 0x40099c6	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x400991d	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x4009921	        0x4883f801	                              cmp rax, 1	      4200	elf.c	FUNCTION_58	IF_1
0x4009925	            0x7617	                           jbe 0x400993e	      4200	elf.c	FUNCTION_58	IF_1
0x4009927	      0x498d7404ff	                lea rsi, [r12 + rax - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x400992c	          0x4939f4	                            cmp r12, rsi	      4201	elf.c	FUNCTION_58	CALL_1
0x400992f	     0xf8712170000	                            ja 0x400b047	      4201	elf.c	FUNCTION_58	CALL_1
0x4009935	          0x48f7d8	                                 neg rax	      4201	elf.c	FUNCTION_58	CALL_1
0x4009938	          0x4821f0	                            and rax, rsi	      4201	elf.c	FUNCTION_58	CALL_1
0x400993b	          0x4989c4	                            mov r12, rax	      4201	elf.c	FUNCTION_58	CALL_1
0x400993e	          0x4885c9	                           test rcx, rcx	      4203	elf.c	FUNCTION_58	IF_2
0x4009941	        0x4d896518	             mov qword [r13 + 0x18], r12	      4202	elf.c	FUNCTION_58
0x4009945	            0x7407	                            je 0x400994e	      4203	elf.c	FUNCTION_58	IF_2
0x4009947	    0x4c89a1900000	             mov qword [rcx + 0x90], r12	      4204	elf.c	FUNCTION_58	IF_2
0x400994e	          0x83fa08	                              cmp edx, 8	      4205	elf.c	FUNCTION_58	IF_3
0x4009951	     0xf8523f6ffff	                           jne 0x4008f7a	      4205	elf.c	FUNCTION_58	IF_3
0x4009957	      0xe922f6ffff	                           jmp 0x4008f7e	      4205	elf.c	FUNCTION_58	IF_3
0x400995c	         0xf1f4000	                         nop dword [rax]	      4205	elf.c	FUNCTION_58	IF_3
0x4009960	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4205	elf.c	FUNCTION_58	IF_3
0x4009965	        0x482b4b10	             sub rcx, qword [rbx + 0x10]	      4205	elf.c	FUNCTION_58	IF_3
0x4009969	          0x4889cf	                            mov rdi, rcx	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400996c	          0x4829c7	                            sub rdi, rax	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400996f	            0x85ed	                           test ebp, ebp	      5545	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x4009971	          0x4889f8	                            mov rax, rdi	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4009974	            0x7504	                           jne 0x400997a	      5545	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x4009976	        0x48894b28	             mov qword [rbx + 0x28], rcx	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x400997a	          0x4801c2	                            add rdx, rax	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400997d	        0x48895330	             mov qword [rbx + 0x30], rdx	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4009981	      0xe9def0ffff	                           jmp 0x4008a64	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4009986	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x400998a	        0x498b7530	            mov rsi, qword [r13 + 0x30] 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x400998e	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4009990	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4009994	          0x4885f6	                           test rsi, rsi	      5194	elf.c	FUNCTION_67	IF_1
0x4009997	            0x7408	                            je 0x40099a1	      5194	elf.c	FUNCTION_67	IF_1
0x4009999	          0x4c29e0	                            sub rax, r12	      5194	elf.c	FUNCTION_67	IF_1
0x400999c	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x400999e	          0x48f7f6	                                 div rsi	      5194	elf.c	FUNCTION_67	IF_1
0x40099a1	          0x4901d4	                            add r12, rdx	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x40099a4	      0xe9baf5ffff	                           jmp 0x4008f63	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x40099a9	          0x4585c0	                           test r8d, r8d	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40099ac	     0xf84b5f4ffff	                            je 0x4008e67	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40099b2	    0x41bd01000000	                             mov r13d, 1	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40099b8	      0xe931f9ffff	                           jmp 0x40092ee	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40099bd	          0x4885c9	                           test rcx, rcx	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40099c0	     0xf85fcfeffff	                           jne 0x40098c2	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40099c6	    0x49c74518ffff	mov qword [r13 + 0x18], 0xffffffffffffffff	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40099ce	      0xe9abf5ffff	                           jmp 0x4008f7e	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40099d3	          0xc1e805	                              shr eax, 5	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40099d6	      0x25ffff0f00	                        and eax, 0xfffff	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40099db	        0x89442438	             mov dword [rsp + 0x38], eax	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x40099df	    0x498b87b00000	            mov rax, qword [r15 + 0xb0] 	      4066	elf.c	FUNCTION_56	CALL_2
0x40099e6	            0x31d2	                            xor edx, edx	      4082	elf.c	FUNCTION_56	FOR_1
0x40099e8	      0xbe01000000	                              mov esi, 1	      4082	elf.c	FUNCTION_56	FOR_1
0x40099ed	    0x41bc01000000	                             mov r12d, 1	      4082	elf.c	FUNCTION_56	FOR_1
0x40099f3	      0x4889442408	                mov qword [rsp + 8], rax	      4066	elf.c	FUNCTION_56	CALL_2
0x40099f8	    0x498b87900000	            mov rax, qword [r15 + 0x90] 	      4082	elf.c	FUNCTION_56	FOR_1
0x40099ff	          0x4885c0	                           test rax, rax	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a02	            0x741b	                            je 0x4009a1f	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a04	         0xf1f4000	                         nop dword [rax]	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a08	          0x8b480c	              mov ecx, dword [rax + 0xc]	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x4009a0b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a0f	            0x39ca	                            cmp edx, ecx	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a11	           0xf42d1	                          cmovb edx, ecx	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a14	          0x4885c0	                           test rax, rax	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a17	            0x75ef	                           jne 0x4009a08	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a19	          0x8d7201	                      lea esi, [rdx + 1]	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a1c	          0x4989f4	                            mov r12, rsi	      4082	elf.c	FUNCTION_56	FOR_1
0x4009a1f	      0xba08000000	                              mov edx, 8	      4089	elf.c	FUNCTION_56	CALL_4
0x4009a24	          0x4c89ff	                            mov rdi, r15	      4089	elf.c	FUNCTION_56	CALL_4
0x4009a27	      0xe800000000	                          call 0x4009a2c	      4089	elf.c	FUNCTION_56	CALL_4
0x4009a2c	          0x4885c0	                           test rax, rax	      4090	elf.c	FUNCTION_56	IF_2
0x4009a2f	          0x4889c5	                            mov rbp, rax	      4089	elf.c	FUNCTION_56	CALL_4
0x4009a32	     0xf847ce9ffff	                            je 0x40083b4	      4090	elf.c	FUNCTION_56	IF_2
0x4009a38	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4092	elf.c	FUNCTION_56	CALL_5
0x4009a3f	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4092	elf.c	FUNCTION_56	CALL_5
0x4009a46	        0x48896810	             mov qword [rax + 0x10], rbp	      4092	elf.c	FUNCTION_56	CALL_5
0x4009a4a	        0x44896048	            mov dword [rax + 0x48], r12d	      4093	elf.c	FUNCTION_56	CALL_6
0x4009a4e	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a52	            0x85c0	                           test eax, eax	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a54	     0xf841e180000	                            je 0x400b278	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a5a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a5f	          0x83e801	                              sub eax, 1	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a62	      0x4c8d6cc708	              lea r13, [rdi + rax*8 + 8]	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a67	          0x4889fb	                            mov rbx, rdi	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a6a	          0x4889f8	                            mov rax, rdi	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a6d	           0xf1f00	                         nop dword [rax]	      4097	elf.c	FUNCTION_56	FOR_2
0x4009a70	          0x488b10	                    mov rdx, qword [rax]	      4099	elf.c	FUNCTION_56	FOR_2
0x4009a73	        0xf6421901	               test byte [rdx + 0x19], 1	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x4009a77	            0x744f	                            je 0x4009ac8	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x4009a79	      0x48837a1000	               cmp qword [rdx + 0x10], 0	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x4009a7e	            0x7548	                           jne 0x4009ac8	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x4009a80	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      4045	elf.c	FUNCTION_55	IF_3
0x4009a84	          0x4885c9	                           test rcx, rcx	      4045	elf.c	FUNCTION_55	IF_3
0x4009a87	            0x743f	                            je 0x4009ac8	      4045	elf.c	FUNCTION_55	IF_3
0x4009a89	          0x488b32	                    mov rsi, qword [rdx]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009a8c	          0x4885f6	                           test rsi, rsi	      4048	elf.c	FUNCTION_55	CALL_1
0x4009a8f	            0x740e	                            je 0x4009a9f	      4048	elf.c	FUNCTION_55	CALL_1
0x4009a91	        0x488b7e08	                mov rdi, qword [rsi + 8]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009a95	        0x837f0805	                  cmp dword [rdi + 8], 5	      4048	elf.c	FUNCTION_55	CALL_1
0x4009a99	     0xf8491140000	                            je 0x400af30	      4048	elf.c	FUNCTION_55	CALL_1
0x4009a9f	    0x4c3bb9f00000	            cmp r15, qword [rcx + 0xf0] 	      4052	elf.c	FUNCTION_55
0x4009aa6	     0xf84b3150000	                            je 0x400b05f	      4052	elf.c	FUNCTION_55
0x4009aac	        0x488b7168	            mov rsi, qword [rcx + 0x68] 	      4053	elf.c	FUNCTION_55
0x4009ab0	          0x4885f6	                           test rsi, rsi	      4053	elf.c	FUNCTION_55
0x4009ab3	            0x7413	                            je 0x4009ac8	      4053	elf.c	FUNCTION_55
0x4009ab5	    0x4c3bbef00000	            cmp r15, qword [rsi + 0xf0] 	      4054	elf.c	FUNCTION_55
0x4009abc	     0xf842a170000	                            je 0x400b1ec	      4054	elf.c	FUNCTION_55
0x4009ac2	    0x660f1f440000	                    nop word [rax + rax]	      4054	elf.c	FUNCTION_55
0x4009ac8	        0x4883c008	                              add rax, 8	      4054	elf.c	FUNCTION_55
0x4009acc	          0x4c39e8	                            cmp rax, r13	      4097	elf.c	FUNCTION_56	FOR_2
0x4009acf	            0x759f	                           jne 0x4009a70	      4097	elf.c	FUNCTION_56	FOR_2
0x4009ad1	            0x31c0	                            xor eax, eax	      4097	elf.c	FUNCTION_56	FOR_2
0x4009ad3	      0x4c89742418	             mov qword [rsp + 0x18], r14	      4097	elf.c	FUNCTION_56	FOR_2
0x4009ad8	          0x4531e4	                          xor r12d, r12d	      4097	elf.c	FUNCTION_56	FOR_2
0x4009adb	          0x4d89fe	                            mov r14, r15	      4097	elf.c	FUNCTION_56	FOR_2
0x4009ade	          0x4989ef	                            mov r15, rbp	      4097	elf.c	FUNCTION_56	FOR_2
0x4009ae1	          0x4c89ed	                            mov rbp, r13	      4097	elf.c	FUNCTION_56	FOR_2
0x4009ae4	          0x4189c5	                           mov r13d, eax	      4097	elf.c	FUNCTION_56	FOR_2
0x4009ae7	            0xeb7c	                           jmp 0x4009b65	      4097	elf.c	FUNCTION_56	FOR_2
0x4009ae9	     0xf1f80000000	                         nop dword [rax]	      4097	elf.c	FUNCTION_56	FOR_2
0x4009af0	          0x4c89f7	                            mov rdi, r14	      3986	elf.c	FUNCTION_53	IF_1
0x4009af3	            0xffd0	                                call rax	      3986	elf.c	FUNCTION_53	IF_1
0x4009af5	            0x85c0	                           test eax, eax	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4009af7	     0xf85a3000000	                           jne 0x4009ba0	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4009afd	          0x488b33	                    mov rsi, qword [rbx]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4009b00	          0x4885f6	                           test rsi, rsi	      4039	elf.c	FUNCTION_55	IF_1
0x4009b03	     0xf84a7000000	                            je 0x4009bb0	      4039	elf.c	FUNCTION_55	IF_1
0x4009b09	        0xf6461901	               test byte [rsi + 0x19], 1	      4042	elf.c	FUNCTION_55	IF_2
0x4009b0d	     0xf849d000000	                            je 0x4009bb0	      4042	elf.c	FUNCTION_55	IF_2
0x4009b13	        0x488b4620	            mov rax, qword [rsi + 0x20] 	      4045	elf.c	FUNCTION_55	IF_3
0x4009b17	          0x4885c0	                           test rax, rax	      4045	elf.c	FUNCTION_55	IF_3
0x4009b1a	            0x743c	                            je 0x4009b58	      4045	elf.c	FUNCTION_55	IF_3
0x4009b1c	          0x488b0e	                    mov rcx, qword [rsi]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009b1f	          0x4885c9	                           test rcx, rcx	      4048	elf.c	FUNCTION_55	CALL_1
0x4009b22	            0x740e	                            je 0x4009b32	      4048	elf.c	FUNCTION_55	CALL_1
0x4009b24	        0x488b7908	                mov rdi, qword [rcx + 8]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009b28	        0x837f0805	                  cmp dword [rdi + 8], 5	      4048	elf.c	FUNCTION_55	CALL_1
0x4009b2c	     0xf84ad110000	                            je 0x400acdf	      4048	elf.c	FUNCTION_55	CALL_1
0x4009b32	    0x4c3bb0f00000	            cmp r14, qword [rax + 0xf0] 	      4052	elf.c	FUNCTION_55
0x4009b39	            0x7475	                            je 0x4009bb0	      4052	elf.c	FUNCTION_55
0x4009b3b	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      4053	elf.c	FUNCTION_55
0x4009b3f	          0x4885c9	                           test rcx, rcx	      4053	elf.c	FUNCTION_55
0x4009b42	            0x7409	                            je 0x4009b4d	      4053	elf.c	FUNCTION_55
0x4009b44	    0x4c3bb1f00000	            cmp r14, qword [rcx + 0xf0] 	      4054	elf.c	FUNCTION_55
0x4009b4b	            0x7459	                            je 0x4009ba6	      4054	elf.c	FUNCTION_55
0x4009b4d	    0x483d00000000	                              cmp rax, 0	      4052	elf.c	FUNCTION_55
0x4009b53	            0x745b	                            je 0x4009bb0	      4052	elf.c	FUNCTION_55
0x4009b55	           0xf1f00	                         nop dword [rax]	      4052	elf.c	FUNCTION_55
0x4009b58	        0x4883c308	                              add rbx, 8	      4052	elf.c	FUNCTION_55
0x4009b5c	          0x4839eb	                            cmp rbx, rbp	      4116	elf.c	FUNCTION_56	FOR_3
0x4009b5f	     0xf84b1000000	                            je 0x4009c16	      4116	elf.c	FUNCTION_56	FOR_3
0x4009b65	        0x498b4608	                mov rax, qword [r14 + 8]	      3984	elf.c	FUNCTION_53	CALL_1
0x4009b69	          0x488b33	                    mov rsi, qword [rbx]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4009b6c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3985	elf.c	FUNCTION_53	IF_1
0x4009b73	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3985	elf.c	FUNCTION_53	IF_1
0x4009b77	          0x4885c0	                           test rax, rax	      3985	elf.c	FUNCTION_53	IF_1
0x4009b7a	     0xf8570ffffff	                           jne 0x4009af0	      3985	elf.c	FUNCTION_53	IF_1
0x4009b80	    0xf74618820080	      test dword [rsi + 0x18], 0x800082 	      3990	elf.c	FUNCTION_53	CALL_5
0x4009b87	            0x7517	                           jne 0x4009ba0	      3990	elf.c	FUNCTION_53	CALL_5
0x4009b89	        0x488b4620	            mov rax, qword [rsi + 0x20] 	      3989	elf.c	FUNCTION_53	CALL_3
0x4009b8d	    0x483d00000000	                              cmp rax, 0	      3989	elf.c	FUNCTION_53	CALL_3
0x4009b93	            0x740b	                            je 0x4009ba0	      3989	elf.c	FUNCTION_53	CALL_3
0x4009b95	        0xf6402110	           test byte [rax + 0x21], 0x10 	      3990	elf.c	FUNCTION_53	CALL_5
0x4009b99	     0xf846affffff	                            je 0x4009b09	      3990	elf.c	FUNCTION_53	CALL_5
0x4009b9f	              0x90	                                     nop	      3990	elf.c	FUNCTION_53	CALL_5
0x4009ba0	        0x4183c501	                             add r13d, 1	      4119	elf.c	FUNCTION_56	FOR_3	IF_5
0x4009ba4	            0xebb2	                           jmp 0x4009b58	      4119	elf.c	FUNCTION_56	FOR_3	IF_5
0x4009ba6	      0x4883786000	               cmp qword [rax + 0x60], 0	      4055	elf.c	FUNCTION_55
0x4009bab	            0x75a0	                           jne 0x4009b4d	      4055	elf.c	FUNCTION_55
0x4009bad	           0xf1f00	                         nop dword [rax]	      4055	elf.c	FUNCTION_55
0x4009bb0	        0x4183c401	                             add r12d, 1	      4121	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6
0x4009bb4	            0xeba2	                           jmp 0x4009b58	      4121	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6
0x4009bb6	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x4009bbd	      0xe9e1e9ffff	                           jmp 0x40085a3	      4201	elf.c	FUNCTION_58	CALL_1
0x4009bc2	         0xfb67101	               movzx esi, byte [rcx + 1]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009bc6	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009bca	           0xfaff7	                           imul esi, edi	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009bcd	          0x4801f0	                            add rax, rsi	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009bd0	        0x48894328	             mov qword [rbx + 0x28], rax	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009bd4	         0xfb64901	               movzx ecx, byte [rcx + 1]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009bd8	           0xfafcf	                           imul ecx, edi	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009bdb	          0x4801ca	                            add rdx, rcx	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009bde	        0x48895330	             mov qword [rbx + 0x30], rdx	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009be2	      0xe969eeffff	                           jmp 0x4008a50	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4009be7	      0x482b742408	                sub rsi, qword [rsp + 8]	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4009bec	        0x48897318	             mov qword [rbx + 0x18], rsi	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4009bf0	      0xe9fbedffff	                           jmp 0x40089f0	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4009bf5	    0x41bd00000000	                             mov r13d, 0	      1598	elf.c	FUNCTION_32	SWITCH_1
0x4009bfb	      0xe970f8ffff	                           jmp 0x4009470	      1598	elf.c	FUNCTION_32	SWITCH_1
0x4009c00	    0x41bd00000000	                             mov r13d, 0	      1592	elf.c	FUNCTION_32	SWITCH_1
0x4009c06	      0xe965f8ffff	                           jmp 0x4009470	      1592	elf.c	FUNCTION_32	SWITCH_1
0x4009c0b	    0x41bd00000000	                             mov r13d, 0	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4009c11	      0xe95af8ffff	                           jmp 0x4009470	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4009c16	          0x4c89fd	                            mov rbp, r15	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4009c19	          0x4d89f7	                            mov r15, r14	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4009c1c	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4009c21	    0x498b9f900000	            mov rbx, qword [r15 + 0x90] 	      4128	elf.c	FUNCTION_56	FOR_4
0x4009c28	          0x4885db	                           test rbx, rbx	      4128	elf.c	FUNCTION_56	FOR_4
0x4009c2b	            0x741b	                            je 0x4009c48	      4128	elf.c	FUNCTION_56	FOR_4
0x4009c2d	           0xf1f00	                         nop dword [rax]	      4128	elf.c	FUNCTION_56	FOR_4
0x4009c30	          0x8b430c	              mov eax, dword [rbx + 0xc]	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x4009c33	    0x48837cc50000	              cmp qword [rbp + rax*8], 0	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x4009c39	     0xf8484090000	                            je 0x400a5c3	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x4009c3f	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4128	elf.c	FUNCTION_56	FOR_4
0x4009c43	          0x4885db	                           test rbx, rbx	      4128	elf.c	FUNCTION_56	FOR_4
0x4009c46	            0x75e8	                           jne 0x4009c30	      4128	elf.c	FUNCTION_56	FOR_4
0x4009c48	      0x438d742500	                    lea esi, [r13 + r12]	      4140	elf.c	FUNCTION_56	CALL_12
0x4009c4d	      0xba08000000	                              mov edx, 8	      4140	elf.c	FUNCTION_56	CALL_12
0x4009c52	          0x4c89ff	                            mov rdi, r15	      4140	elf.c	FUNCTION_56	CALL_12
0x4009c55	        0x89742428	             mov dword [rsp + 0x28], esi	      4140	elf.c	FUNCTION_56	CALL_12
0x4009c59	      0xe800000000	                          call 0x4009c5e	      4140	elf.c	FUNCTION_56	CALL_12
0x4009c5e	          0x4885c0	                           test rax, rax	      4143	elf.c	FUNCTION_56	IF_9
0x4009c61	      0x4889442418	             mov qword [rsp + 0x18], rax	      4140	elf.c	FUNCTION_56	CALL_12
0x4009c66	     0xf8448e7ffff	                            je 0x40083b4	      4143	elf.c	FUNCTION_56	IF_9
0x4009c6c	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c70	            0x85c0	                           test eax, eax	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c72	     0xf8445160000	                            je 0x400b2bd	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c78	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c7d	          0x83e801	                              sub eax, 1	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c80	          0x4531ed	                          xor r13d, r13d	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c83	      0x4c89742420	             mov qword [rsp + 0x20], r14	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c88	            0x31db	                            xor ebx, ebx	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c8a	      0x48896c2430	             mov qword [rsp + 0x30], rbp	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c8f	      0x488d44c108	              lea rax, [rcx + rax*8 + 8]	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c94	          0x4989ce	                            mov r14, rcx	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c97	      0x4889442408	                mov qword [rsp + 8], rax	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c9c	          0x4c89f8	                            mov rax, r15	      4146	elf.c	FUNCTION_56	FOR_5
0x4009c9f	          0x4589ef	                          mov r15d, r13d	      4146	elf.c	FUNCTION_56	FOR_5
0x4009ca2	          0x4589e5	                          mov r13d, r12d	      4146	elf.c	FUNCTION_56	FOR_5
0x4009ca5	          0x4989c4	                            mov r12, rax	      4146	elf.c	FUNCTION_56	FOR_5
0x4009ca8	      0xe97e000000	                           jmp 0x4009d2b	      4146	elf.c	FUNCTION_56	FOR_5
0x4009cad	           0xf1f00	                         nop dword [rax]	      4146	elf.c	FUNCTION_56	FOR_5
0x4009cb0	          0x4889ee	                            mov rsi, rbp	      3986	elf.c	FUNCTION_53	IF_1
0x4009cb3	          0x4c89e7	                            mov rdi, r12	      3986	elf.c	FUNCTION_53	IF_1
0x4009cb6	            0xffd0	                                call rax	      3986	elf.c	FUNCTION_53	IF_1
0x4009cb8	            0x85c0	                           test eax, eax	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_13
0x4009cba	     0xf85b0000000	                           jne 0x4009d70	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_13
0x4009cc0	          0x4885ed	                           test rbp, rbp	      4039	elf.c	FUNCTION_55	IF_1
0x4009cc3	     0xf84d7000000	                            je 0x4009da0	      4039	elf.c	FUNCTION_55	IF_1
0x4009cc9	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      4039	elf.c	FUNCTION_55	IF_1
0x4009ccc	          0xf6c401	                              test ah, 1	      4042	elf.c	FUNCTION_55	IF_2
0x4009ccf	     0xf84cb000000	                            je 0x4009da0	      4042	elf.c	FUNCTION_55	IF_2
0x4009cd5	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4045	elf.c	FUNCTION_55	IF_3
0x4009cd9	          0x4885c0	                           test rax, rax	      4045	elf.c	FUNCTION_55	IF_3
0x4009cdc	            0x7442	                            je 0x4009d20	      4045	elf.c	FUNCTION_55	IF_3
0x4009cde	        0x488b7500	                    mov rsi, qword [rbp]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009ce2	          0x4885f6	                           test rsi, rsi	      4048	elf.c	FUNCTION_55	CALL_1
0x4009ce5	            0x740e	                            je 0x4009cf5	      4048	elf.c	FUNCTION_55	CALL_1
0x4009ce7	        0x488b7e08	                mov rdi, qword [rsi + 8]	      4048	elf.c	FUNCTION_55	CALL_1
0x4009ceb	        0x837f0805	                  cmp dword [rdi + 8], 5	      4048	elf.c	FUNCTION_55	CALL_1
0x4009cef	     0xf8437100000	                            je 0x400ad2c	      4048	elf.c	FUNCTION_55	CALL_1
0x4009cf5	    0x4c3ba0f00000	            cmp r12, qword [rax + 0xf0] 	      4052	elf.c	FUNCTION_55
0x4009cfc	     0xf849e000000	                            je 0x4009da0	      4052	elf.c	FUNCTION_55
0x4009d02	        0x488b7068	            mov rsi, qword [rax + 0x68] 	      4053	elf.c	FUNCTION_55
0x4009d06	          0x4885f6	                           test rsi, rsi	      4053	elf.c	FUNCTION_55
0x4009d09	            0x7409	                            je 0x4009d14	      4053	elf.c	FUNCTION_55
0x4009d0b	    0x4c3ba6f00000	            cmp r12, qword [rsi + 0xf0] 	      4054	elf.c	FUNCTION_55
0x4009d12	            0x7479	                            je 0x4009d8d	      4054	elf.c	FUNCTION_55
0x4009d14	    0x483d00000000	                              cmp rax, 0	      4052	elf.c	FUNCTION_55
0x4009d1a	     0xf8480000000	                            je 0x4009da0	      4052	elf.c	FUNCTION_55
0x4009d20	        0x4983c608	                              add r14, 8	      4052	elf.c	FUNCTION_55
0x4009d24	      0x4c3b742408	                cmp r14, qword [rsp + 8]	      4146	elf.c	FUNCTION_56	FOR_5
0x4009d29	            0x747e	                            je 0x4009da9	      4146	elf.c	FUNCTION_56	FOR_5
0x4009d2b	      0x498b442408	                mov rax, qword [r12 + 8]	      3984	elf.c	FUNCTION_53	CALL_1
0x4009d30	          0x498b2e	                    mov rbp, qword [r14]	      4148	elf.c	FUNCTION_56	FOR_5
0x4009d33	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3985	elf.c	FUNCTION_53	IF_1
0x4009d3a	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3985	elf.c	FUNCTION_53	IF_1
0x4009d3e	          0x4885c0	                           test rax, rax	      3985	elf.c	FUNCTION_53	IF_1
0x4009d41	     0xf8569ffffff	                           jne 0x4009cb0	      3985	elf.c	FUNCTION_53	IF_1
0x4009d47	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      3990	elf.c	FUNCTION_53	CALL_5
0x4009d4a	      0xa982008000	                      test eax, 0x800082	      3990	elf.c	FUNCTION_53	CALL_5
0x4009d4f	            0x751f	                           jne 0x4009d70	      3990	elf.c	FUNCTION_53	CALL_5
0x4009d51	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	      3989	elf.c	FUNCTION_53	CALL_3
0x4009d55	    0x4881fe000000	                              cmp rsi, 0	      3989	elf.c	FUNCTION_53	CALL_3
0x4009d5c	            0x7412	                            je 0x4009d70	      3989	elf.c	FUNCTION_53	CALL_3
0x4009d5e	        0xf6462110	           test byte [rsi + 0x21], 0x10 	      3990	elf.c	FUNCTION_53	CALL_5
0x4009d62	     0xf8464ffffff	                            je 0x4009ccc	      3990	elf.c	FUNCTION_53	CALL_5
0x4009d68	     0xf1f84000000	                   nop dword [rax + rax]	      3990	elf.c	FUNCTION_53	CALL_5
0x4009d70	      0x438d443d00	                    lea eax, [r13 + r15]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x4009d75	        0x4183c701	                             add r15d, 1	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x4009d79	          0x8d7001	                      lea esi, [rax + 1]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x4009d7c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4009d81	        0x48892cc7	            mov qword [rdi + rax*8], rbp	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4009d85	            0x89f0	                            mov eax, esi	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4009d87	        0x48894528	            mov qword [rbp + 0x28], rax 	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4009d8b	            0xeb93	                           jmp 0x4009d20	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4009d8d	      0x4883786000	               cmp qword [rax + 0x60], 0	      4055	elf.c	FUNCTION_55
0x4009d92	     0xf857cffffff	                           jne 0x4009d14	      4055	elf.c	FUNCTION_55
0x4009d98	     0xf1f84000000	                   nop dword [rax + rax]	      4055	elf.c	FUNCTION_55
0x4009da0	          0x8d7301	                      lea esi, [rbx + 1]	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009da3	            0x89d8	                            mov eax, ebx	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009da5	            0x89f3	                            mov ebx, esi	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009da7	            0xebd3	                           jmp 0x4009d7c	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009da9	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009dae	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009db3	          0x4c89e0	                            mov rax, r12	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009db6	        0x895c2408	                mov dword [rsp + 8], ebx	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009dba	          0x4589ec	                          mov r12d, r13d	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009dbd	          0x4589fd	                          mov r13d, r15d	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009dc0	          0x4989c7	                            mov r15, rax	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4009dc3	    0x498b9f900000	            mov rbx, qword [r15 + 0x90] 	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4009dca	          0x4489ea	                           mov edx, r13d	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4009dcd	          0x4885db	                           test rbx, rbx	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4009dd0	            0x7421	                            je 0x4009df3	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4009dd2	    0x660f1f440000	                    nop word [rax + rax]	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4009dd8	          0x8b430c	              mov eax, dword [rbx + 0xc]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009ddb	      0x488d44c500	                  lea rax, [rbp + rax*8]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009de0	        0x48833800	                      cmp qword [rax], 0	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009de4	     0xf84c2080000	                            je 0x400a6ac	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009dea	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4009dee	          0x4885db	                           test rbx, rbx	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4009df1	            0x75e5	                           jne 0x4009dd8	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4009df3	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      4177	elf.c	FUNCTION_56	CALL_16
0x4009df7	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4177	elf.c	FUNCTION_56	CALL_16
0x4009dfc	          0x4c89ff	                            mov rdi, r15	      4177	elf.c	FUNCTION_56	CALL_16
0x4009dff	      0xe800000000	                          call 0x4009e04	      4177	elf.c	FUNCTION_56	CALL_16
0x4009e04	      0xe800000000	                          call 0x4009e09	      7772	elf.c	FUNCTION_88	CALL_2
0x4009e09	          0x4885c0	                           test rax, rax	      7773	elf.c	FUNCTION_88	IF_2
0x4009e0c	      0x4889442458	             mov qword [rsp + 0x58], rax	      7772	elf.c	FUNCTION_88	CALL_2
0x4009e11	     0xf849de5ffff	                            je 0x40083b4	      7773	elf.c	FUNCTION_88	IF_2
0x4009e17	        0x498b4708	                mov rax, qword [r15 + 8]	      7776	elf.c	FUNCTION_88	CALL_3
0x4009e1b	        0x4183c401	                             add r12d, 1	      7782	elf.c	FUNCTION_88
0x4009e1f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      7776	elf.c	FUNCTION_88	CALL_3
0x4009e26	          0x4889c1	                            mov rcx, rax	      7776	elf.c	FUNCTION_88	CALL_3
0x4009e29	      0x4889442450	             mov qword [rsp + 0x50], rax	      7776	elf.c	FUNCTION_88	CALL_3
0x4009e2e	    0x418b87b80000	            mov eax, dword [r15 + 0xb8] 	      7777	elf.c	FUNCTION_88	CALL_4
0x4009e35	    0x488b91000300	           mov rdx, qword [rcx + 0x300] 	      7780	elf.c	FUNCTION_88
0x4009e3c	            0x89c6	                            mov esi, eax	      7777	elf.c	FUNCTION_88	CALL_4
0x4009e3e	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	      7777	elf.c	FUNCTION_88	CALL_4
0x4009e45	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      7778	elf.c	FUNCTION_88	CALL_5
0x4009e4c	          0x8d5e01	                      lea ebx, [rsi + 1]	      7781	elf.c	FUNCTION_88
0x4009e4f	    0xc7406c020000	               mov dword [rax + 0x6c], 2	      7779	elf.c	FUNCTION_88
0x4009e56	          0x4889c7	                            mov rdi, rax	      7778	elf.c	FUNCTION_88	CALL_5
0x4009e59	    0x488984249000	             mov qword [rsp + 0x90], rax	      7778	elf.c	FUNCTION_88	CALL_5
0x4009e61	         0xfb64205	               movzx eax, byte [rdx + 5]	      7780	elf.c	FUNCTION_88
0x4009e65	          0x4863db	                         movsxd rbx, ebx	      7781	elf.c	FUNCTION_88
0x4009e68	    0x4489a7940000	            mov dword [rdi + 0x94], r12d	      7782	elf.c	FUNCTION_88
0x4009e6f	    0x488987a00000	             mov qword [rdi + 0xa0], rax	      7780	elf.c	FUNCTION_88
0x4009e76	        0x480fafc3	                           imul rax, rbx	      7781	elf.c	FUNCTION_88
0x4009e7a	    0x488987880000	             mov qword [rdi + 0x88], rax	      7781	elf.c	FUNCTION_88
0x4009e81	         0xfb64a0b	            movzx ecx, byte [rdx + 0xb] 	      7783	elf.c	FUNCTION_88
0x4009e85	      0xb801000000	                              mov eax, 1	      7783	elf.c	FUNCTION_88
0x4009e8a	    0xc7870c010000	              mov dword [rdi + 0x10c], 3	      7786	elf.c	FUNCTION_88
0x4009e94	          0x48d3e0	                             shl rax, cl	      7783	elf.c	FUNCTION_88
0x4009e97	    0x488987980000	             mov qword [rdi + 0x98], rax	      7783	elf.c	FUNCTION_88
0x4009e9e	        0x488d3c5b	                  lea rdi, [rbx + rbx*2]	      7789	elf.c	FUNCTION_88	CALL_7
0x4009ea2	        0x48c1e704	                              shl rdi, 4	      7789	elf.c	FUNCTION_88	CALL_7
0x4009ea6	      0xe800000000	                          call 0x4009eab	      7789	elf.c	FUNCTION_88	CALL_7
0x4009eab	          0x4885c0	                           test rax, rax	      7791	elf.c	FUNCTION_88	IF_3
0x4009eae	    0x488984248000	             mov qword [rsp + 0x80], rax	      7789	elf.c	FUNCTION_88	CALL_7
0x4009eb6	     0xf840d160000	                            je 0x400b4c9	      7791	elf.c	FUNCTION_88	IF_3
0x4009ebc	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7798	elf.c	FUNCTION_88
0x4009ec1	          0x4889de	                            mov rsi, rbx	      7797	elf.c	FUNCTION_88	CALL_9
0x4009ec4	          0x4c89ff	                            mov rdi, r15	      7797	elf.c	FUNCTION_88	CALL_9
0x4009ec7	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      7798	elf.c	FUNCTION_88
0x4009ece	         0xfb65005	               movzx edx, byte [rax + 5]	      7797	elf.c	FUNCTION_88	CALL_9
0x4009ed2	      0xe800000000	                          call 0x4009ed7	      7797	elf.c	FUNCTION_88	CALL_9
0x4009ed7	          0x4885c0	                           test rax, rax	      7799	elf.c	FUNCTION_88	IF_4
0x4009eda	      0x4889442470	             mov qword [rsp + 0x70], rax	      7797	elf.c	FUNCTION_88	CALL_9
0x4009edf	     0xf84de0d0000	                            je 0x400acc3	      7799	elf.c	FUNCTION_88	IF_4
0x4009ee5	          0x4889c7	                            mov rdi, rax	      7799	elf.c	FUNCTION_88	IF_4
0x4009ee8	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      7806	elf.c	FUNCTION_88
0x4009ef0	    0x4889b8b00000	             mov qword [rax + 0xb0], rdi	      7806	elf.c	FUNCTION_88
0x4009ef7	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      7812	elf.c	FUNCTION_88	IF_5	CALL_12
0x4009efe	    0x488ba8e80200	           mov rbp, qword [rax + 0x2e8] 	      7812	elf.c	FUNCTION_88	IF_5	CALL_12
0x4009f05	          0x4885ed	                           test rbp, rbp	      7812	elf.c	FUNCTION_88	IF_5	CALL_12
0x4009f08	            0x740d	                            je 0x4009f17	      7812	elf.c	FUNCTION_88	IF_5	CALL_12
0x4009f0a	        0x448b5500	                   mov r10d, dword [rbp]	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4009f0e	          0x4585d2	                         test r10d, r10d	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4009f11	     0xf8554140000	                           jne 0x400b36b	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4009f17	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      7843	elf.c	FUNCTION_88
0x4009f1f	    0x48c744244000	               mov qword [rsp + 0x40], 0	      7845	elf.c	FUNCTION_88
0x4009f28	    0x48c744240800	                  mov qword [rsp + 8], 0	      7810	elf.c	FUNCTION_88
0x4009f31	    0x48c700000000	                      mov qword [rax], 0	      7843	elf.c	FUNCTION_88
0x4009f38	    0x48c740080000	                  mov qword [rax + 8], 0	      7843	elf.c	FUNCTION_88
0x4009f40	    0x48c740100000	               mov qword [rax + 0x10], 0	      7843	elf.c	FUNCTION_88
0x4009f48	        0xc6401800	                mov byte [rax + 0x18], 0	      7843	elf.c	FUNCTION_88
0x4009f4c	        0xc6401900	                mov byte [rax + 0x19], 0	      7843	elf.c	FUNCTION_88
0x4009f50	        0xc6401a00	                mov byte [rax + 0x1a], 0	      7843	elf.c	FUNCTION_88
0x4009f54	    0xc7401c000000	               mov dword [rax + 0x1c], 0	      7843	elf.c	FUNCTION_88
0x4009f5b	    0x48c740200000	               mov qword [rax + 0x20], 0	      7844	elf.c	FUNCTION_88
0x4009f63	    0x48c740280000	               mov qword [rax + 0x28], 0	      7845	elf.c	FUNCTION_88
0x4009f6b	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7852	elf.c	FUNCTION_88
0x4009f70	    0xc74424480000	               mov dword [rsp + 0x48], 0	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f78	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      7852	elf.c	FUNCTION_88
0x4009f7f	          0x4885c0	                           test rax, rax	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f82	            0x7411	                            je 0x4009f95	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f84	          0x4c89ff	                            mov rdi, r15	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f87	            0xffd0	                                call rax	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f89	            0x85c0	                           test eax, eax	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f8b	           0xf95c0	                                setne al	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f8e	           0xfb6c0	                           movzx eax, al	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f91	        0x89442448	             mov dword [rsp + 0x48], eax	      7853	elf.c	FUNCTION_88	CALL_15
0x4009f95	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      7856	elf.c	FUNCTION_88	FOR_1
0x4009f9c	    0x4d8b97b00000	            mov r10, qword [r15 + 0xb0] 	      7855	elf.c	FUNCTION_88	CALL_16
0x4009fa3	            0x85c0	                           test eax, eax	      7856	elf.c	FUNCTION_88	FOR_1
0x4009fa5	     0xf8e80150000	                           jle 0x400b52b	      7856	elf.c	FUNCTION_88	FOR_1
0x4009fab	        0x8b7c2438	            mov edi, dword [rsp + 0x38] 	      7856	elf.c	FUNCTION_88	FOR_1
0x4009faf	          0x83e801	                              sub eax, 1	      7856	elf.c	FUNCTION_88	FOR_1
0x4009fb2	          0x4d89d4	                            mov r12, r10	      7856	elf.c	FUNCTION_88	FOR_1
0x4009fb5	        0x4883c002	                              add rax, 2	      7856	elf.c	FUNCTION_88	FOR_1
0x4009fb9	    0x48c744241801	               mov qword [rsp + 0x18], 1	      7856	elf.c	FUNCTION_88	FOR_1
0x4009fc2	    0x4c89b4249800	             mov qword [rsp + 0x98], r14	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009fca	      0x4889442460	             mov qword [rsp + 0x60], rax	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009fcf	      0x4c897c2428	             mov qword [rsp + 0x28], r15	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009fd4	          0x83e742	                           and edi, 0x42	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009fd7	        0x897c2468	             mov dword [rsp + 0x68], edi	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009fdb	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009fe3	        0x488d6f30	                   lea rbp, [rdi + 0x30]	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009fe7	      0xe9eb010000	                           jmp 0x400a1d7	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009fec	         0xf1f4000	                         nop dword [rax]	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009ff0	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      7884	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_19
0x4009ff4	        0xf6462110	           test byte [rsi + 0x21], 0x10 	      7884	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_19
0x4009ff8	     0xf8472040000	                            je 0x400a470	      7884	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_19
0x4009ffe	          0x4d85ed	                           test r13, r13	      7890	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x400a001	            0x7409	                            je 0x400a00c	      7890	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x400a003	        0x498b4d30	            mov rcx, qword [r13 + 0x30] 	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x400a007	          0x4885c9	                           test rcx, rcx	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x400a00a	            0x750f	                           jne 0x400a01b	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x400a00c	        0x4983ff0f	                            cmp r15, 0xf	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400a010	      0xb910000000	                           mov ecx, 0x10	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400a015	     0xf86840f0000	                           jbe 0x400af9f	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400a01b	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400a022	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400a025	            0x7410	                            je 0x400a037	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400a027	    0x448bb0880000	           mov r14d, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400a02e	          0x4585f6	                         test r14d, r14d	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400a031	     0xf8591000000	                           jne 0x400a0c8	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400a037	    0x4881fe000000	                              cmp rsi, 0	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400a03e	     0xf846a110000	                            je 0x400b1ae	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400a044	        0xf6462110	           test byte [rsi + 0x21], 0x10 	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400a048	     0xf854d0e0000	                           jne 0x400ae9b	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400a04e	    0x4881fe000000	                              cmp rsi, 0	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400a055	     0xf84b4130000	                            je 0x400b40f	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400a05b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6470	elf.c	FUNCTION_78	CALL_7
0x400a060	        0x488b4008	                mov rax, qword [rax + 8]	      6470	elf.c	FUNCTION_78	CALL_7
0x400a064	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400a06b	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x400a072	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x400a075	     0xf8440110000	                            je 0x400b1bb	      6471	elf.c	FUNCTION_78	IF_5
0x400a07b	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6471	elf.c	FUNCTION_78	IF_5
0x400a080	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      6471	elf.c	FUNCTION_78	IF_5
0x400a085	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a08d	    0xc78424ac0000	     mov dword [rsp + 0xac], 0xfffffeff 	      6473	elf.c	FUNCTION_78	IF_5
0x400a098	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a09d	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a09f	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a0a1	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a0a6	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a0ab	     0xf840a110000	                            je 0x400b1bb	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a0b1	        0x498b0424	                    mov rax, qword [r12]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a0b5	    0x448bb424ac00	           mov r14d, dword [rsp + 0xac] 	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x400a0bd	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x400a0c1	     0xf1f80000000	                         nop dword [rax]	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x400a0c8	    0xf7c300000400	                       test ebx, 0x40000	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x400a0ce	      0xb806000000	                              mov eax, 6	      7982	elf.c	FUNCTION_88	FOR_1	IF_20
0x400a0d3	            0x7543	                           jne 0x400a118	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x400a0d5	    0xf7c300004000	                      test ebx, 0x400000	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x400a0db	      0xb80a000000	                            mov eax, 0xa	      7984	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x400a0e0	            0x7536	                           jne 0x400a118	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x400a0e2	          0xf6c308	                              test bl, 8	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x400a0e5	      0xb802000000	                              mov eax, 2	      7986	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x400a0ea	            0x752c	                           jne 0x400a118	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x400a0ec	    0xf7c300000100	                       test ebx, 0x10000	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x400a0f2	      0xb801000000	                              mov eax, 1	      7988	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x400a0f7	            0x751f	                           jne 0x400a118	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x400a0f9	    0xf7c300000800	                       test ebx, 0x80000	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x400a0ff	      0xb808000000	                              mov eax, 8	      7990	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x400a104	            0x7512	                           jne 0x400a118	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x400a106	            0x89d8	                            mov eax, ebx	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x400a108	          0xc1e00b	                            shl eax, 0xb	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x400a10b	          0xc1f81f	                           sar eax, 0x1f	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x400a10e	          0x83e009	                              and eax, 9	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x400a111	     0xf1f80000000	                         nop dword [rax]	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x400a118	        0xf6462104	               test byte [rsi + 0x21], 4	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x400a11c	      0xba06000000	                              mov edx, 6	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x400a121	           0xf45c2	                         cmovne eax, edx	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x400a124	          0x4d85ed	                           test r13, r13	      8000	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a127	            0x742a	                            je 0x400a153	      8000	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a129	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a12e	        0x488b5770	            mov rdx, qword [rdi + 0x70] 	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a132	          0x4885d2	                           test rdx, rdx	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a135	            0x741c	                            je 0x400a153	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a137	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a13c	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a141	        0x498d7d30	                   lea rdi, [r13 + 0x30]	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a145	            0x89c6	                            mov esi, eax	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a147	            0xffd2	                                call rdx	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a149	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a14e	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x400a153	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x400a157	            0x85ff	                           test edi, edi	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x400a159	     0xf84c1020000	                            je 0x400a420	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x400a15f	          0x83e302	                              and ebx, 2	      8007	elf.c	FUNCTION_88	FOR_1	IF_28	IF_29
0x400a162	          0x83fb01	                              cmp ebx, 1	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_35
0x400a165	            0x19d2	                            sbb edx, edx	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_35
0x400a167	          0x83e2f0	                     and edx, 0xfffffff0	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_35
0x400a16a	          0x83c213	                           add edx, 0x13	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_35
0x400a16d	          0x4d85ed	                           test r13, r13	      8048	elf.c	FUNCTION_88	FOR_1	IF_39
0x400a170	     0xf842d040000	                            je 0x400a5a3	      8048	elf.c	FUNCTION_88	FOR_1	IF_39
0x400a176	      0x410fb67549	           movzx esi, byte [r13 + 0x49] 	      8050	elf.c	FUNCTION_88	FOR_1	IF_39
0x400a17b	      0x410fb6454a	           movzx eax, byte [r13 + 0x4a] 	      8052	elf.c	FUNCTION_88	FOR_1	IF_39
0x400a180	          0x88451a	               mov byte [rbp + 0x1a], al	      8061	elf.c	FUNCTION_88	FOR_1
0x400a183	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8062	elf.c	FUNCTION_88	FOR_1
0x400a188	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8063	elf.c	FUNCTION_88	FOR_1
0x400a18d	        0x48894d00	                    mov qword [rbp], rcx	      8061	elf.c	FUNCTION_88	FOR_1
0x400a191	        0x4c897d08	                mov qword [rbp + 8], r15	      8061	elf.c	FUNCTION_88	FOR_1
0x400a195	        0x4c895d10	            mov qword [rbp + 0x10], r11 	      8061	elf.c	FUNCTION_88	FOR_1
0x400a199	        0x48894520	            mov qword [rbp + 0x20], rax 	      8062	elf.c	FUNCTION_88	FOR_1
0x400a19d	        0x4883c001	                              add rax, 1	      8065	elf.c	FUNCTION_88	FOR_1
0x400a1a1	    0x48837c244001	               cmp qword [rsp + 0x40], 1	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x400a1a7	        0x48897d28	            mov qword [rbp + 0x28], rdi 	      8063	elf.c	FUNCTION_88	FOR_1
0x400a1ab	          0x885518	               mov byte [rbp + 0x18], dl	      8061	elf.c	FUNCTION_88	FOR_1
0x400a1ae	        0x40887519	              mov byte [rbp + 0x19], sil	      8061	elf.c	FUNCTION_88	FOR_1
0x400a1b2	        0x4489751c	           mov dword [rbp + 0x1c], r14d 	      8061	elf.c	FUNCTION_88	FOR_1
0x400a1b6	      0x4889442418	             mov qword [rsp + 0x18], rax	      8065	elf.c	FUNCTION_88	FOR_1
0x400a1bb	        0x4883dfff	             sbb rdi, 0xffffffffffffffff	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x400a1bf	        0x4983c408	                              add r12, 8	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x400a1c3	        0x4883c530	                           add rbp, 0x30	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x400a1c7	      0x483b442460	            cmp rax, qword [rsp + 0x60] 	      7856	elf.c	FUNCTION_88	FOR_1
0x400a1cc	      0x48897c2408	                mov qword [rsp + 8], rdi	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x400a1d1	     0xf84a20e0000	                            je 0x400b079	      7856	elf.c	FUNCTION_88	FOR_1
0x400a1d7	      0x448b4c2448	            mov r9d, dword [rsp + 0x48] 	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a1dc	        0x498b0424	                    mov rax, qword [r12]	      7859	elf.c	FUNCTION_88	FOR_1
0x400a1e0	          0x4585c9	                           test r9d, r9d	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a1e3	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	      7859	elf.c	FUNCTION_88	FOR_1
0x400a1e7	          0x8b5818	            mov ebx, dword [rax + 0x18] 	      7861	elf.c	FUNCTION_88	FOR_1
0x400a1ea	            0x7514	                           jne 0x400a200	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a1ec	            0x89da	                            mov edx, ebx	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a1ee	    0x81e202010000	                          and edx, 0x102	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a1f4	    0x81fa00010000	                          cmp edx, 0x100	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a1fa	     0xf84d6020000	                            je 0x400a4d6	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a200	        0x488b7008	                mov rsi, qword [rax + 8]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x400a204	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x400a209	            0x31d2	                            xor edx, edx	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x400a20b	      0xe800000000	                          call 0x400a210	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x400a210	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x400a214	          0x4989c3	                            mov r11, rax	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x400a217	     0xf84a60a0000	                            je 0x400acc3	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x400a21d	        0x498b0424	                    mov rax, qword [r12]	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x400a221	          0x488b10	                    mov rdx, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a224	          0x4885d2	                           test rdx, rdx	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a227	     0xf847f030000	                            je 0x400a5ac	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a22d	        0x488b4a08	                mov rcx, qword [rdx + 8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a231	          0x4531ed	                          xor r13d, r13d	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a234	        0x83790805	                  cmp dword [rcx + 8], 5	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a238	     0xf8487020000	                            je 0x400a4c5	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a23e	            0x89df	                            mov edi, ebx	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x400a240	    0x81e700010000	                          and edi, 0x100	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x400a246	        0x897c2420	             mov dword [rsp + 0x20], edi	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x400a24a	     0xf84a0fdffff	                            je 0x4009ff0	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x400a250	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x400a254	        0x4c8b4f68	              mov r9, qword [rdi + 0x68]	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400a258	          0x4d85c9	                             test r9, r9	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400a25b	     0xf84d2080000	                            je 0x400ab33	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400a261	          0x4c89f9	                            mov rcx, r15	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400a264	        0x48034f60	             add rcx, qword [rdi + 0x60]	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400a268	      0x448b442468	            mov r8d, dword [rsp + 0x68] 	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400a26d	          0x4585c0	                           test r8d, r8d	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400a270	            0x7404	                            je 0x400a276	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400a272	        0x49034928	              add rcx, qword [r9 + 0x28]	      7911	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400a276	          0x4d85ed	                           test r13, r13	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x400a279	     0xf84d1000000	                            je 0x400a350	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x400a27f	    0x4981f9000000	                               cmp r9, 0	      7916	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400a286	        0x4d8b7d38	            mov r15, qword [r13 + 0x38] 	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x400a28a	     0xf8511130000	                           jne 0x400b5a1	      7916	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400a290	        0x458b754c	           mov r14d, dword [r13 + 0x4c] 	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400a294	          0x4585f6	                         test r14d, r14d	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400a297	     0xf84d50b0000	                            je 0x400ae72	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400a29d	    0x418d86c00000	                   lea eax, [r14 + 0xc0]	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400a2a4	          0x83f804	                              cmp eax, 4	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400a2a7	     0xf87e6120000	                            ja 0x400b593	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400a2ad	    0xff24c5000000	                       jmp qword [rax*8]	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400a2b4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x400a2b9	          0x4889fe	                            mov rsi, rdi	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x400a2bc	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x400a2c3	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x400a2ca	        0x448b704c	           mov r14d, dword [rax + 0x4c] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x400a2ce	      0xe9f5fdffff	                           jmp 0x400a0c8	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x400a2d3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x400a2d8	          0x4889fe	                            mov rsi, rdi	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x400a2db	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x400a2e2	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x400a2e9	        0x448b7050	           mov r14d, dword [rax + 0x50] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x400a2ed	      0xe9d6fdffff	                           jmp 0x400a0c8	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x400a2f2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x400a2f7	          0x4889fe	                            mov rsi, rdi	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x400a2fa	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x400a301	    0x448bb07c0c00	          mov r14d, dword [rax + 0xc7c] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x400a308	      0xe9bbfdffff	                           jmp 0x400a0c8	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x400a30d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x400a312	          0x4889fe	                            mov rsi, rdi	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x400a315	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x400a31c	    0x448bb0780c00	          mov r14d, dword [rax + 0xc78] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x400a323	      0xe9a0fdffff	                           jmp 0x400a0c8	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x400a328	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x400a32d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x400a334	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x400a33b	          0x4885c0	                           test rax, rax	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x400a33e	     0xf84260b0000	                            je 0x400ae6a	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x400a344	        0x448b7050	           mov r14d, dword [rax + 0x50] 	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_28
0x400a348	          0x4889fe	                            mov rsi, rdi	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_28
0x400a34b	      0xe978fdffff	                           jmp 0x400a0c8	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_28
0x400a350	    0x498b81e00000	              mov rax, qword [r9 + 0xe0]	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400a357	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400a35a	            0x7413	                            je 0x400a36f	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400a35c	    0x448bb0880000	           mov r14d, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400a363	          0x4531ff	                          xor r15d, r15d	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x400a366	          0x4585f6	                         test r14d, r14d	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400a369	     0xf8593000000	                           jne 0x400a402	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400a36f	          0x4531ff	                          xor r15d, r15d	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400a372	    0x4981f9000000	                               cmp r9, 0	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400a379	     0xf840f0b0000	                            je 0x400ae8e	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400a37f	      0x41f6412110	            test byte [r9 + 0x21], 0x10 	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400a384	     0xf8558010000	                           jne 0x400a4e2	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400a38a	    0x4981f9000000	                               cmp r9, 0	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400a391	     0xf840d0e0000	                            je 0x400b1a4	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400a397	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6470	elf.c	FUNCTION_78	CALL_7
0x400a39c	        0x488b4008	                mov rax, qword [rax + 8]	      6470	elf.c	FUNCTION_78	CALL_7
0x400a3a0	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400a3a7	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x400a3ae	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x400a3b1	     0xf84b2070000	                            je 0x400ab69	      6471	elf.c	FUNCTION_78	IF_5
0x400a3b7	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      6471	elf.c	FUNCTION_78	IF_5
0x400a3bc	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      6471	elf.c	FUNCTION_78	IF_5
0x400a3c1	          0x4c89ce	                             mov rsi, r9	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3c4	      0x4c894c2430	              mov qword [rsp + 0x30], r9	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3c9	    0xc78424ac0000	     mov dword [rsp + 0xac], 0xfffffeff 	      6473	elf.c	FUNCTION_78	IF_5
0x400a3d4	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3dc	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3e1	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3e3	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3e5	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3ea	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3ef	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3f4	     0xf846f070000	                            je 0x400ab69	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a3fa	    0x448bb424ac00	           mov r14d, dword [rsp + 0xac] 	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x400a402	    0x4181fefffeff	                    cmp r14d, 0xfffffeff	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400a409	     0xf8482070000	                            je 0x400ab91	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400a40f	        0x498b0424	                    mov rax, qword [r12]	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400a413	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400a417	      0xe9acfcffff	                           jmp 0x400a0c8	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400a41c	         0xf1f4000	                         nop dword [rax]	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400a420	        0x498b1424	                    mov rdx, qword [r12]	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_37
0x400a424	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_37
0x400a428	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_37
0x400a42c	            0x744a	                            je 0x400a478	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_37
0x400a42e	          0x83f806	                              cmp eax, 6	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x400a431	      0xba16000000	                           mov edx, 0x16	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x400a436	     0xf8431fdffff	                            je 0x400a16d	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x400a43c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a441	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a444	        0x89442420	             mov dword [rsp + 0x20], eax	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a448	          0xc1e805	                              shr eax, 5	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a44b	      0x25ffff0f00	                        and eax, 0xfffff	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a450	      0xa900000400	                       test eax, 0x40000	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a455	     0xf84ae080000	                            je 0x400ad09	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a45b	      0x2500000800	                        and eax, 0x80000	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a460	          0x83f801	                              cmp eax, 1	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a463	            0x19d2	                            sbb edx, edx	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a465	          0x83e2fc	                     and edx, 0xfffffffc	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a468	          0x83c215	                           add edx, 0x15	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a46b	      0xe9fdfcffff	                           jmp 0x400a16d	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400a470	          0x4889f7	                            mov rdi, rsi	      7884	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_19
0x400a473	      0xe9dcfdffff	                           jmp 0x400a254	      7884	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_19
0x400a478	    0x4881fa000000	                              cmp rdx, 0	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_39
0x400a47f	     0xf84a80b0000	                            je 0x400b02d	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_39
0x400a485	          0xf6c740	                           test bh, 0x40	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x400a488	      0xba04000000	                              mov edx, 4	      8031	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x400a48d	     0xf85dafcffff	                           jne 0x400a16d	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x400a493	            0x31d2	                            xor edx, edx	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x400a495	          0xf6c301	                              test bl, 1	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x400a498	            0x7521	                           jne 0x400a4bb	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x400a49a	    0xf7c300008000	                      test ebx, 0x800000	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x400a4a0	      0xbaa0ffffff	                     mov edx, 0xffffffa0	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x400a4a5	            0x7514	                           jne 0x400a4bb	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x400a4a7	          0xf6c380	                           test bl, 0x80	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x400a4aa	      0xba20000000	                           mov edx, 0x20	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x400a4af	            0x750a	                           jne 0x400a4bb	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x400a4b1	            0x89da	                            mov edx, ebx	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x400a4b3	            0xd1ea	                              shr edx, 1	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x400a4b5	          0x83e201	                              and edx, 1	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x400a4b8	          0xc1e204	                              shl edx, 4	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x400a4bb	          0x83e00f	                            and eax, 0xf	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_42
0x400a4be	             0x1c2	                            add edx, eax	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_42
0x400a4c0	      0xe9a8fcffff	                           jmp 0x400a16d	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_42
0x400a4c5	    0x4883baf80000	               cmp qword [rdx + 0xf8], 0	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a4cd	        0x4c0f45e8	                         cmovne r13, rax	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a4d1	      0xe968fdffff	                           jmp 0x400a23e	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a4d6	    0x49c7c3ffffff	             mov r11, 0xffffffffffffffff	      7868	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a4dd	      0xe93ffdffff	                           jmp 0x400a221	      7868	elf.c	FUNCTION_88	FOR_1	IF_9
0x400a4e2	      0xbaf2ffffff	                     mov edx, 0xfffffff2	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400a4e7	          0x4189d6	                           mov r14d, edx	      6464	elf.c	FUNCTION_78	ELSE_1	IF_3
0x400a4ea	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6470	elf.c	FUNCTION_78	CALL_7
0x400a4ef	        0x488b4008	                mov rax, qword [rax + 8]	      6470	elf.c	FUNCTION_78	CALL_7
0x400a4f3	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400a4fa	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x400a501	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x400a504	     0xf8460090000	                            je 0x400ae6a	      6471	elf.c	FUNCTION_78	IF_5
0x400a50a	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      6471	elf.c	FUNCTION_78	IF_5
0x400a50f	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      6471	elf.c	FUNCTION_78	IF_5
0x400a514	          0x4c89ce	                             mov rsi, r9	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a517	    0x899424ac0000	             mov dword [rsp + 0xac], edx	      6473	elf.c	FUNCTION_78	IF_5
0x400a51e	      0x4c894c2430	              mov qword [rsp + 0x30], r9	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a523	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a52b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a530	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a532	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a534	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a539	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a53e	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a543	     0xf84c6feffff	                            je 0x400a40f	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a549	      0xe9acfeffff	                           jmp 0x400a3fa	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400a54e	    0x48c746180000	               mov qword [rsi + 0x18], 0	      5282	elf.c	FUNCTION_70	ELSE_1	CALL_6
0x400a556	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400a55d	    0xc74424500000	               mov dword [rsp + 0x50], 0	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400a565	    0xc74040000000	               mov dword [rax + 0x40], 0	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400a56c	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400a571	    0x488b88000300	           mov rcx, qword [rax + 0x300] 	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400a578	      0xe9eee1ffff	                           jmp 0x400876b	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x400a57d	      0x49837d4800	               cmp qword [r13 + 0x48], 0	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x400a582	     0xf8423eaffff	                            je 0x4008fab	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x400a588	      0x41f6450802	                  test byte [r13 + 8], 2	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x400a58d	     0xf842ff3ffff	                            je 0x40098c2	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x400a593	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400a598	     0xf855ee9ffff	                           jne 0x4008efc	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400a59e	      0xe9e7f3ffff	                           jmp 0x400998a	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x400a5a3	            0x31c0	                            xor eax, eax	      8057	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400a5a5	            0x31f6	                            xor esi, esi	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400a5a7	      0xe9d4fbffff	                           jmp 0x400a180	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400a5ac	          0x4531ed	                          xor r13d, r13d	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a5af	      0xe98afcffff	                           jmp 0x400a23e	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a5b4	      0x488b442408	                mov rax, qword [rsp + 8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a5b9	      0x4803442440	             add rax, qword [rsp + 0x40]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a5be	      0xe92decffff	                           jmp 0x40091f0	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400a5c3	        0x498b4708	                mov rax, qword [r15 + 8]	      3984	elf.c	FUNCTION_53	CALL_1
0x400a5c7	    0x488bb3f80000	            mov rsi, qword [rbx + 0xf8] 	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_11
0x400a5ce	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3985	elf.c	FUNCTION_53	IF_1
0x400a5d5	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3985	elf.c	FUNCTION_53	IF_1
0x400a5d9	          0x4885c0	                           test rax, rax	      3985	elf.c	FUNCTION_53	IF_1
0x400a5dc	     0xf84fe070000	                            je 0x400ade0	      3985	elf.c	FUNCTION_53	IF_1
0x400a5e2	          0x4c89ff	                            mov rdi, r15	      3986	elf.c	FUNCTION_53	IF_1
0x400a5e5	            0xffd0	                                call rax	      3986	elf.c	FUNCTION_53	IF_1
0x400a5e7	            0x85c0	                           test eax, eax	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_11
0x400a5e9	     0xf8510080000	                           jne 0x400adff	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_11
0x400a5ef	        0x4183c401	                             add r12d, 1	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400a5f3	      0xe947f6ffff	                           jmp 0x4009c3f	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400a5f8	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400a5ff	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400a604	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400a60b	    0x488b8f000300	           mov rcx, qword [rdi + 0x300] 	      5804	elf.c	FUNCTION_71
0x400a612	          0x488b1a	                    mov rbx, qword [rdx]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a615	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5807	elf.c	FUNCTION_71	CALL_17
0x400a619	           0xfb631	                   movzx esi, byte [rcx]	      5804	elf.c	FUNCTION_71
0x400a61c	      0x4889442408	                mov qword [rsp + 8], rax	      5807	elf.c	FUNCTION_71	CALL_17
0x400a621	          0x4889f1	                            mov rcx, rsi	      5804	elf.c	FUNCTION_71
0x400a624	        0x48034f10	             add rcx, qword [rdi + 0x10]	      5804	elf.c	FUNCTION_71
0x400a628	          0x4885db	                           test rbx, rbx	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a62b	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5804	elf.c	FUNCTION_71
0x400a630	     0xf84ca0d0000	                            je 0x400b400	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a636	          0x4889da	                            mov rdx, rbx	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a639	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a642	            0x31ff	                            xor edi, edi	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a644	          0x4531f6	                          xor r14d, r14d	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a647	            0x31ed	                            xor ebp, ebp	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a649	            0xeb15	                           jmp 0x400a660	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a64b	       0xf1f440000	                   nop dword [rax + rax]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a650	          0x488b12	                    mov rdx, qword [rdx]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a653	        0x4883c040	                           add rax, 0x40	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a657	          0x4885d2	                           test rdx, rdx	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a65a	     0xf84e3000000	                            je 0x400a743	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x400a660	        0x48833801	                      cmp qword [rax], 1	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x400a664	            0x75ea	                           jne 0x400a650	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x400a666	         0xfb64a40	           movzx ecx, byte [rdx + 0x40] 	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x400a66a	          0xf6c110	                           test cl, 0x10	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x400a66d	            0x7424	                            je 0x400a693	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x400a66f	          0x83e120	                           and ecx, 0x20	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a672	        0x4c8b7018	            mov r14, qword [rax + 0x18] 	      5816	elf.c	FUNCTION_71	FOR_2	IF_7
0x400a676	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      5817	elf.c	FUNCTION_71	FOR_2	IF_7
0x400a67a	            0x74d4	                            je 0x400a650	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a67c	        0x4a8d0c36	                    lea rcx, [rsi + r14]	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400a680	          0x4889d5	                            mov rbp, rdx	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400a683	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400a688	        0x488d0c3e	                    lea rcx, [rsi + rdi]	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400a68c	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400a691	            0xebbd	                           jmp 0x400a650	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400a693	          0x83e120	                           and ecx, 0x20	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a696	            0x74b8	                            je 0x400a650	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a698	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a69c	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a6a1	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a6a5	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a6aa	            0xeba4	                           jmp 0x400a650	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x400a6ac	    0x4c8babf80000	            mov r13, qword [rbx + 0xf8] 	      4164	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a6b3	          0x4c8928	                    mov qword [rax], r13	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a6b6	        0x498b4708	                mov rax, qword [r15 + 8]	      3984	elf.c	FUNCTION_53	CALL_1
0x400a6ba	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3985	elf.c	FUNCTION_53	IF_1
0x400a6c1	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3985	elf.c	FUNCTION_53	IF_1
0x400a6c5	          0x4885c0	                           test rax, rax	      3985	elf.c	FUNCTION_53	IF_1
0x400a6c8	     0xf846d070000	                            je 0x400ae3b	      3985	elf.c	FUNCTION_53	IF_1
0x400a6ce	        0x89542420	             mov dword [rsp + 0x20], edx	      3985	elf.c	FUNCTION_53	IF_1
0x400a6d2	          0x4c89ee	                            mov rsi, r13	      3986	elf.c	FUNCTION_53	IF_1
0x400a6d5	          0x4c89ff	                            mov rdi, r15	      3986	elf.c	FUNCTION_53	IF_1
0x400a6d8	            0xffd0	                                call rax	      3986	elf.c	FUNCTION_53	IF_1
0x400a6da	            0x85c0	                           test eax, eax	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_15
0x400a6dc	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_15
0x400a6e0	     0xf8575070000	                           jne 0x400ae5b	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_15
0x400a6e6	        0x8b442408	                mov eax, dword [rsp + 8]	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400a6ea	          0x8d4801	                      lea ecx, [rax + 1]	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400a6ed	        0x894c2408	                mov dword [rsp + 8], ecx	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400a6f1	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a6f6	        0x4c892cc7	            mov qword [rdi + rax*8], r13	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a6fa	            0x89c8	                            mov eax, ecx	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a6fc	        0x49894528	             mov qword [r13 + 0x28], rax	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a700	      0xe9e5f6ffff	                           jmp 0x4009dea	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400a705	        0x440fb621	                  movzx r12d, byte [rcx]	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400a709	        0x4c896240	             mov qword [rdx + 0x40], r12	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400a70d	      0xe989e7ffff	                           jmp 0x4008e9b	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x400a712	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	        64	stdio2.h	FUNCTION_206	CALL_1
0x400a71a	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_206	CALL_1
0x400a720	      0xb920000000	                           mov ecx, 0x20	        64	stdio2.h	FUNCTION_206	CALL_1
0x400a725	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_206	CALL_1
0x400a72a	      0xbe20000000	                           mov esi, 0x20	        64	stdio2.h	FUNCTION_206	CALL_1
0x400a72f	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_206	CALL_1
0x400a731	      0xe800000000	                          call 0x400a736	        64	stdio2.h	FUNCTION_206	CALL_1
0x400a736	    0x4c8dac24c000	                   lea r13, [rsp + 0xc0]	      5217	elf.c	FUNCTION_68	IF_1
0x400a73e	      0xe92dedffff	                           jmp 0x4009470	      5217	elf.c	FUNCTION_68	IF_1
0x400a743	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5832	elf.c	FUNCTION_71	IF_10
0x400a749	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      5832	elf.c	FUNCTION_71	IF_10
0x400a74e	        0x410f95c5	                              setne r13b	      5832	elf.c	FUNCTION_71	IF_10
0x400a752	          0x4885ed	                           test rbp, rbp	      5832	elf.c	FUNCTION_71	IF_10
0x400a755	        0x410f95c1	                               setne r9b	      5832	elf.c	FUNCTION_71	IF_10
0x400a759	          0x4520e9	                           and r9b, r13b	      5832	elf.c	FUNCTION_71	IF_10
0x400a75c	     0xf8568080000	                           jne 0x400afca	      5832	elf.c	FUNCTION_71	IF_10
0x400a762	      0x4c89642430	             mov qword [rsp + 0x30], r12	        90	string3.h	FUNCTION_224	CALL_6
0x400a767	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      5832	elf.c	FUNCTION_71	IF_10
0x400a76c	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	        90	string3.h	FUNCTION_224	CALL_6
0x400a771	     0xf1f80000000	                         nop dword [rax]	        90	string3.h	FUNCTION_224	CALL_6
0x400a778	        0x488b5500	                    mov rdx, qword [rbp]	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x400a77c	    0x4881fa52e574	                     cmp rdx, 0x6474e552	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x400a783	     0xf8467010000	                            je 0x400a8f0	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x400a789	    0x4881fa51e574	                     cmp rdx, 0x6474e551	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x400a790	     0xf8492020000	                            je 0x400aa28	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x400a796	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x400a799	            0x85c0	                           test eax, eax	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x400a79b	     0xf845f020000	                            je 0x400aa00	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x400a7a1	        0x4883fa01	                              cmp rdx, 1	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7a5	            0x7469	                            je 0x400a810	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7a7	        0x4883fa04	                              cmp rdx, 4	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7ab	     0xf84cd020000	                            je 0x400aa7e	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7b1	        0x4883fa06	                              cmp rdx, 6	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400a7b5	     0xf84d9020000	                            je 0x400aa94	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400a7bb	        0xf6434030	           test byte [rbx + 0x40], 0x30 	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400a7bf	     0xf85740b0000	                           jne 0x400b339	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400a7c5	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7c9	    0x48c745280000	               mov qword [rbp + 0x28], 0	      6008	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7d1	          0x83e801	                              sub eax, 1	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400a7d4	    0x488bb2900000	            mov rsi, qword [rdx + 0x90] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7db	        0x48897510	            mov qword [rbp + 0x10], rsi 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7df	            0xeb09	                           jmp 0x400a7ea	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7e1	     0xf1f80000000	                         nop dword [rax]	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400a7e8	            0x89d0	                            mov eax, edx	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400a7ea	            0x89c2	                            mov edx, eax	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400a7ec	      0x488b4cd348	    mov rcx, qword [rbx + rdx*8 + 0x48] 	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400a7f1	    0x488b91e00000	            mov rdx, qword [rcx + 0xe0] 	      6013	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	CALL_30
0x400a7f8	        0x837a0408	                  cmp dword [rdx + 4], 8	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400a7fc	     0xf8565020000	                           jne 0x400aa67	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400a802	            0x85c0	                           test eax, eax	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400a804	          0x8d50ff	                      lea edx, [rax - 1]	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400a807	            0x75df	                           jne 0x400a7e8	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400a809	     0xf1f80000000	                         nop dword [rax]	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400a810	          0x488b1b	                    mov rbx, qword [rbx]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400a813	        0x4883c540	                           add rbp, 0x40	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400a817	          0x4885db	                           test rbx, rbx	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400a81a	     0xf8558ffffff	                           jne 0x400a778	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400a820	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400a825	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6037	elf.c	FUNCTION_71	CALL_31
0x400a82c	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a831	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6037	elf.c	FUNCTION_71	CALL_31
0x400a838	        0x4c896240	             mov qword [rdx + 0x40], r12	      6037	elf.c	FUNCTION_71	CALL_31
0x400a83c	    0x488b97580100	           mov rdx, qword [rdi + 0x158] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a843	          0x4885d2	                           test rdx, rdx	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a846	            0x7419	                            je 0x400a861	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a848	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400a84d	          0x4c89ff	                            mov rdi, r15	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400a850	            0xffd2	                                call rdx	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400a852	            0x85c0	                           test eax, eax	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400a854	     0xf845adbffff	                            je 0x40083b4	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400a85a	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400a861	          0x4584ed	                         test r13b, r13b	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400a864	            0x7414	                            je 0x400a87a	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400a866	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400a86b	           0xfb617	                   movzx edx, byte [rdi]	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400a86e	          0x83e203	                              and edx, 3	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400a871	          0x80fa01	                               cmp dl, 1	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400a874	     0xf84670a0000	                            je 0x400b2e1	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x400a87a	          0x8b5844	            mov ebx, dword [rax + 0x44] 	      6151	elf.c	FUNCTION_73	ELSE_2	CALL_19
0x400a87d	            0x85db	                           test ebx, ebx	      6152	elf.c	FUNCTION_73	ELSE_2	IF_10
0x400a87f	     0xf84cfeeffff	                            je 0x4009754	      6152	elf.c	FUNCTION_73	ELSE_2	IF_10
0x400a885	          0x83fb01	                              cmp ebx, 1	      6166	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a888	            0x7613	                           jbe 0x400a89d	      6166	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a88a	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a88f	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a893	        0x48833e06	                      cmp qword [rsi], 6	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a897	     0xf847c0b0000	                            je 0x400b419	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a89d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400a8a2	            0x31d2	                            xor edx, edx	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400a8a4	          0x4c89ff	                            mov rdi, r15	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400a8a7	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400a8ae	           0xfb630	                   movzx esi, byte [rax]	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400a8b1	      0xe800000000	                          call 0x400a8b6	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400a8b6	            0x85c0	                           test eax, eax	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400a8b8	     0xf85f6daffff	                           jne 0x40083b4	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400a8be	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8c3	            0x89da	                            mov edx, ebx	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8c5	          0x4c89ff	                            mov rdi, r15	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8c8	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8cc	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8d1	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8d8	          0xff5010	                 call qword [rax + 0x10]	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8db	            0x85c0	                           test eax, eax	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8dd	     0xf85d1daffff	                           jne 0x40083b4	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8e3	      0xe96ceeffff	                           jmp 0x4009754	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8e8	     0xf1f84000000	                   nop dword [rax + rax]	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400a8f0	          0x4584ed	                         test r13b, r13b	      5885	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400a8f3	     0xf84a7010000	                            je 0x400aaa0	      5885	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400a8f9	    0x4d8b8c24c800	              mov r9, qword [r12 + 0xc8]	      5890	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400a901	    0x4d8b8424d000	              mov r8, qword [r12 + 0xd0]	      5891	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x400a909	          0x4d39c1	                              cmp r9, r8	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400a90c	     0xf83ae000000	                           jae 0x400a9c0	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400a912	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a919	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a920	          0x488b00	                    mov rax, qword [rax]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a923	          0x4885c0	                           test rax, rax	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a926	     0xf848f000000	                            je 0x400a9bb	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a92c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a931	            0xeb11	                           jmp 0x400a944	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a933	       0xf1f440000	                   nop dword [rax + rax]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a938	          0x488b00	                    mov rax, qword [rax]	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x400a93b	        0x4883c140	                           add rcx, 0x40	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x400a93f	          0x4885c0	                           test rax, rax	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a942	            0x7477	                            je 0x400a9bb	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400a944	        0x48833901	                      cmp qword [rcx], 1	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a948	            0x75ee	                           jne 0x400a938	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a94a	          0x8b7844	            mov edi, dword [rax + 0x44] 	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a94d	            0x85ff	                           test edi, edi	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a94f	            0x74e7	                            je 0x400a938	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a951	          0x8d57ff	                      lea edx, [rdi - 1]	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a954	      0x4c8b54d048	    mov r10, qword [rax + rdx*8 + 0x48] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a959	            0x31d2	                            xor edx, edx	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a95b	        0x418b7220	            mov esi, dword [r10 + 0x20] 	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a95f	        0x4d8b5a28	            mov r11, qword [r10 + 0x28] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a963	    0x81e602040000	                          and esi, 0x402	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a969	    0x81fe00040000	                          cmp esi, 0x400	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a96f	            0x7404	                            je 0x400a975	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a971	        0x498b5238	            mov rdx, qword [r10 + 0x38] 	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a975	          0x4c01da	                            add rdx, r11	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a978	          0x4c39ca	                             cmp rdx, r9	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a97b	            0x76bb	                           jbe 0x400a938	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a97d	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a981	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a985	          0x4c39c6	                             cmp rsi, r8	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a988	            0x73ae	                           jae 0x400a938	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a98a	            0x31d2	                            xor edx, edx	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a98c	            0xeb0b	                           jmp 0x400a999	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a98e	            0x6690	                                     nop	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a990	      0x488b74d048	    mov rsi, qword [rax + rdx*8 + 0x48] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a995	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400a999	          0x4939f0	                             cmp r8, rsi	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400a99c	            0x7615	                           jbe 0x400a9b3	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400a99e	          0x4939f1	                             cmp r9, rsi	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400a9a1	            0x7710	                            ja 0x400a9b3	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400a9a3	      0x4c8b5cd048	    mov r11, qword [rax + rdx*8 + 0x48] 	      5934	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400a9a8	      0x49837b3800	               cmp qword [r11 + 0x38], 0	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400a9ad	     0xf85a3030000	                           jne 0x400ad56	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400a9b3	        0x4883c201	                              add rdx, 1	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x400a9b7	            0x39d7	                            cmp edi, edx	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400a9b9	            0x77d5	                            ja 0x400a990	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x400a9bb	          0x4584ed	                         test r13b, r13b	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400a9be	            0x740f	                            je 0x400a9cf	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400a9c0	      0xbe55170000	                         mov esi, 0x1755	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400a9c5	      0xbf00000000	                              mov edi, 0	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400a9ca	      0xe800000000	                          call 0x400a9cf	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400a9cf	        0x488d7d08	                      lea rdi, [rbp + 8]	        90	string3.h	FUNCTION_224	CALL_6
0x400a9d3	          0x4889e9	                            mov rcx, rbp	        90	string3.h	FUNCTION_224	CALL_6
0x400a9d6	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_224	CALL_6
0x400a9d8	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_224	CALL_6
0x400a9e0	    0x48c745380000	               mov qword [rbp + 0x38], 0	        90	string3.h	FUNCTION_224	CALL_6
0x400a9e8	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_224	CALL_6
0x400a9ec	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_224	CALL_6
0x400a9ef	          0x83c140	                           add ecx, 0x40	        90	string3.h	FUNCTION_224	CALL_6
0x400a9f2	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_224	CALL_6
0x400a9f5	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x400a9f8	      0xe913feffff	                           jmp 0x400a810	        90	string3.h	FUNCTION_224	CALL_6
0x400a9fd	           0xf1f00	                         nop dword [rax]	        90	string3.h	FUNCTION_224	CALL_6
0x400aa00	         0xfb64340	           movzx eax, byte [rbx + 0x40] 	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400aa04	            0xa810	                           test al, 0x10	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400aa06	            0x7438	                            je 0x400aa40	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400aa08	            0xa802	                              test al, 2	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400aa0a	        0x4c897518	            mov qword [rbp + 0x18], r14 	      6025	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400aa0e	     0xf85fcfdffff	                           jne 0x400a810	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400aa14	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400aa19	        0x48894520	            mov qword [rbp + 0x20], rax 	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400aa1d	      0xe9eefdffff	                           jmp 0x400a810	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400aa22	    0x660f1f440000	                    nop word [rax + rax]	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400aa28	        0xf6434008	               test byte [rbx + 0x40], 8	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400aa2c	     0xf84defdffff	                            je 0x400a810	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400aa32	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400aa36	        0x48894530	            mov qword [rbp + 0x30], rax 	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400aa3a	      0xe9d1fdffff	                           jmp 0x400a810	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400aa3f	              0x90	                                     nop	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400aa40	            0xa820	                           test al, 0x20	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400aa42	     0xf84c8fdffff	                            je 0x400a810	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400aa48	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400aa4d	            0xa802	                              test al, 2	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400aa4f	        0x48897d18	            mov qword [rbp + 0x18], rdi 	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400aa53	     0xf85b7fdffff	                           jne 0x400a810	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400aa59	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400aa5e	        0x48894520	            mov qword [rbp + 0x20], rax 	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400aa62	      0xe9a9fdffff	                           jmp 0x400a810	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400aa67	    0x488b81900000	            mov rax, qword [rcx + 0x90] 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400aa6e	          0x4829f0	                            sub rax, rsi	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400aa71	        0x48034220	             add rax, qword [rdx + 0x20]	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400aa75	        0x48894528	            mov qword [rbp + 0x28], rax 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400aa79	      0xe992fdffff	                           jmp 0x400a810	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400aa7e	      0x410fb65744	           movzx edx, byte [r15 + 0x44] 	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x400aa83	          0x83e207	                              and edx, 7	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x400aa86	          0x80fa03	                               cmp dl, 3	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x400aa89	     0xf852cfdffff	                           jne 0x400a7bb	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x400aa8f	      0xe97cfdffff	                           jmp 0x400a810	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x400aa94	    0xc74344000000	               mov dword [rbx + 0x44], 0	      5994	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400aa9b	      0xe970fdffff	                           jmp 0x400a810	      5994	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400aaa0	        0x448b4b44	            mov r9d, dword [rbx + 0x44] 	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400aaa4	          0x4585c9	                           test r9d, r9d	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400aaa7	     0xf8422ffffff	                            je 0x400a9cf	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400aaad	        0xf6434008	               test byte [rbx + 0x40], 8	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x400aab1	     0xf84b90a0000	                            je 0x400b570	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x400aab7	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400aabb	        0x4c8b4828	              mov r9, qword [rax + 0x28]	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400aabf	          0x4d89c8	                              mov r8, r9	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400aac2	        0x4c034330	              add r8, qword [rbx + 0x30]	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400aac6	          0x4d39c1	                              cmp r9, r8	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400aac9	     0xf8300ffffff	                           jae 0x400a9cf	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400aacf	      0xe93efeffff	                           jmp 0x400a912	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400aad4	         0xf1f4000	                         nop dword [rax]	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400aad8	          0x4989d7	                            mov r15, rdx	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400aadb	            0x31ed	                            xor ebp, ebp	      5432	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x400aadd	      0xe9abe6ffff	                           jmp 0x400918d	      5432	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x400aae2	        0x498d7e48	                   lea rdi, [r14 + 0x48]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400aae6	        0x418d50ff	                       lea edx, [r8 - 1]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400aaea	            0x31c9	                            xor ecx, ecx	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400aaec	      0x488d6cd708	              lea rbp, [rdi + rdx*8 + 8]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400aaf1	          0x4889f8	                            mov rax, rdi	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400aaf4	          0x4889d6	                            mov rsi, rdx	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400aaf7	    0x660f1f840000	                    nop word [rax + rax]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400ab00	          0x488b10	                    mov rdx, qword [rax]	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	CALL_22
0x400ab03	          0x8b5270	            mov edx, dword [rdx + 0x70] 	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	CALL_22
0x400ab06	            0x39d1	                            cmp ecx, edx	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	CALL_22
0x400ab08	           0xf42ca	                          cmovb ecx, edx	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	CALL_22
0x400ab0b	        0x4883c008	                              add rax, 8	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400ab0f	          0x4839e8	                            cmp rax, rbp	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400ab12	            0x75ec	                           jne 0x400ab00	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400ab14	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400ab1c	      0xba01000000	                              mov edx, 1	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400ab21	          0x48d3e2	                             shl rdx, cl	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400ab24	          0x4839c2	                            cmp rdx, rax	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400ab27	          0x4989c7	                            mov r15, rax	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400ab2a	        0x4c0f43fa	                         cmovae r15, rdx	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400ab2e	      0xe9dee5ffff	                           jmp 0x4009111	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400ab33	          0x4989f9	                             mov r9, rdi	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400ab36	          0x4c89f9	                            mov rcx, r15	      7859	elf.c	FUNCTION_88	FOR_1
0x400ab39	      0xe92af7ffff	                           jmp 0x400a268	      7859	elf.c	FUNCTION_88	FOR_1
0x400ab3e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5262	elf.c	FUNCTION_70	IF_1
0x400ab44	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      5262	elf.c	FUNCTION_70	IF_1
0x400ab49	     0xf85bddbffff	                           jne 0x400870c	      5262	elf.c	FUNCTION_70	IF_1
0x400ab4f	      0xe99fdbffff	                           jmp 0x40086f3	      5262	elf.c	FUNCTION_70	IF_1
0x400ab54	         0xf1f4000	                         nop dword [rax]	      5262	elf.c	FUNCTION_70	IF_1
0x400ab58	    0x458d81000000	              lea r8d, [r9 - 0x70000000]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400ab5f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400ab64	      0xe9fce9ffff	                           jmp 0x4009565	        33	stdio2.h	FUNCTION_204	CALL_1
0x400ab69	      0xbf0f000000	                            mov edi, 0xf	      6480	elf.c	FUNCTION_78	CALL_8
0x400ab6e	      0x4c894c2478	              mov qword [rsp + 0x78], r9	      6480	elf.c	FUNCTION_78	CALL_8
0x400ab73	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6480	elf.c	FUNCTION_78	CALL_8
0x400ab78	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      6480	elf.c	FUNCTION_78	CALL_8
0x400ab7d	      0xe800000000	                          call 0x400ab82	      6480	elf.c	FUNCTION_78	CALL_8
0x400ab82	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      6480	elf.c	FUNCTION_78	CALL_8
0x400ab87	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6480	elf.c	FUNCTION_78	CALL_8
0x400ab8c	      0x4c8b4c2478	              mov r9, qword [rsp + 0x78]	      6480	elf.c	FUNCTION_78	CALL_8
0x400ab91	          0x498b31	                     mov rsi, qword [r9]	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x400ab94	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x400ab99	      0x4c894c2430	              mov qword [rsp + 0x30], r9	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x400ab9e	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x400aba3	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x400aba8	      0xe800000000	                          call 0x400abad	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x400abad	          0x4885c0	                           test rax, rax	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x400abb0	          0x4889c6	                            mov rsi, rax	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x400abb3	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x400abb8	     0xf84c0000000	                            je 0x400ac7e	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x400abbe	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400abc5	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400abca	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400abcf	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400abd2	            0x7410	                            je 0x400abe4	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400abd4	    0x448bb0880000	           mov r14d, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400abdb	          0x4585f6	                         test r14d, r14d	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400abde	     0xf858d000000	                           jne 0x400ac71	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400abe4	    0x4881fe000000	                              cmp rsi, 0	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400abeb	     0xf84a0080000	                            je 0x400b491	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400abf1	        0xf6462110	           test byte [rsi + 0x21], 0x10 	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400abf5	     0xf8511060000	                           jne 0x400b20c	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400abfb	    0x4881fe000000	                              cmp rsi, 0	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400ac02	     0xf840f090000	                            je 0x400b517	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400ac08	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6470	elf.c	FUNCTION_78	CALL_7
0x400ac0d	        0x488b4008	                mov rax, qword [rax + 8]	      6470	elf.c	FUNCTION_78	CALL_7
0x400ac11	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400ac18	    0x4c8bb0b80000	            mov r14, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x400ac1f	          0x4d85f6	                           test r14, r14	      6471	elf.c	FUNCTION_78	IF_5
0x400ac22	     0xf8476080000	                            je 0x400b49e	      6471	elf.c	FUNCTION_78	IF_5
0x400ac28	      0x4c894c2478	              mov qword [rsp + 0x78], r9	      6471	elf.c	FUNCTION_78	IF_5
0x400ac2d	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6471	elf.c	FUNCTION_78	IF_5
0x400ac32	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac3a	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac3f	    0xc78424ac0000	     mov dword [rsp + 0xac], 0xfffffeff 	      6473	elf.c	FUNCTION_78	IF_5
0x400ac4a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac4f	          0x41ffd6	                                call r14	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac52	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac54	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac59	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac5e	      0x4c8b4c2478	              mov r9, qword [rsp + 0x78]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac63	     0xf8435080000	                            je 0x400b49e	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac69	    0x448bb424ac00	           mov r14d, dword [rsp + 0xac] 	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x400ac71	    0x4181fefffeff	                    cmp r14d, 0xfffffeff	      7964	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x400ac78	     0xf8591f7ffff	                           jne 0x400a40f	      7964	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x400ac7e	        0x498b0424	                    mov rax, qword [r12]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x400ac82	          0x498b29	                     mov rbp, qword [r9]	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400ac85	      0xba05000000	                              mov edx, 5	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_33
0x400ac8a	      0xbe00000000	                              mov esi, 0	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_33
0x400ac8f	      0xbf00000000	                              mov edi, 0	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_33
0x400ac94	        0x488b5808	                mov rbx, qword [rax + 8]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x400ac98	      0xb800000000	                              mov eax, 0	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400ac9d	          0x4885db	                           test rbx, rbx	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400aca0	        0x480f44d8	                          cmove rbx, rax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400aca4	      0xe800000000	                          call 0x400aca9	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_33
0x400aca9	          0x4889ea	                            mov rdx, rbp	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400acac	          0x4889c7	                            mov rdi, rax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400acaf	          0x4889de	                            mov rsi, rbx	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400acb2	            0x31c0	                            xor eax, eax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400acb4	      0xe800000000	                          call 0x400acb9	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x400acb9	      0xbf05000000	                              mov edi, 5	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_34
0x400acbe	      0xe800000000	                          call 0x400acc3	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_34
0x400acc3	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      7802	elf.c	FUNCTION_88	IF_4	CALL_10
0x400acc8	      0xe800000000	                          call 0x400accd	      7802	elf.c	FUNCTION_88	IF_4	CALL_10
0x400accd	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      7803	elf.c	FUNCTION_88	IF_4	CALL_11
0x400acd5	      0xe800000000	                          call 0x400acda	      7803	elf.c	FUNCTION_88	IF_4	CALL_11
0x400acda	      0xe9d5d6ffff	                           jmp 0x40083b4	      7803	elf.c	FUNCTION_88	IF_4	CALL_11
0x400acdf	    0x4883b9f80000	               cmp qword [rcx + 0xf8], 0	      4048	elf.c	FUNCTION_55	CALL_1
0x400ace7	     0xf8445eeffff	                            je 0x4009b32	      4048	elf.c	FUNCTION_55	CALL_1
0x400aced	          0x8b764c	            mov esi, dword [rsi + 0x4c] 	      4051	elf.c	FUNCTION_55	CALL_2
0x400acf0	            0x85f6	                           test esi, esi	      4051	elf.c	FUNCTION_55	CALL_2
0x400acf2	     0xf843aeeffff	                            je 0x4009b32	      4051	elf.c	FUNCTION_55	CALL_2
0x400acf8	    0x483d00000000	                              cmp rax, 0	      4051	elf.c	FUNCTION_55	CALL_2
0x400acfe	     0xf852eeeffff	                           jne 0x4009b32	      4051	elf.c	FUNCTION_55	CALL_2
0x400ad04	      0xe94feeffff	                           jmp 0x4009b58	      4051	elf.c	FUNCTION_55	CALL_2
0x400ad09	          0x83e340	                           and ebx, 0x40	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x400ad0c	          0x83fb01	                              cmp ebx, 1	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x400ad0f	            0x19d2	                            sbb edx, edx	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x400ad11	          0x83e2fc	                     and edx, 0xfffffffc	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x400ad14	          0x83c215	                           add edx, 0x15	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x400ad17	      0xe951f4ffff	                           jmp 0x400a16d	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x400ad1c	       0xfaf742450	            imul esi, dword [rsp + 0x50]	      5289	elf.c	FUNCTION_70	CALL_10
0x400ad21	            0x89f7	                            mov edi, esi	      5289	elf.c	FUNCTION_70	CALL_10
0x400ad23	        0x48897a38	             mov qword [rdx + 0x38], rdi	      5289	elf.c	FUNCTION_70	CALL_10
0x400ad27	      0xe97bdaffff	                           jmp 0x40087a7	      5289	elf.c	FUNCTION_70	CALL_10
0x400ad2c	    0x4883bef80000	               cmp qword [rsi + 0xf8], 0	      4048	elf.c	FUNCTION_55	CALL_1
0x400ad34	     0xf84bbefffff	                            je 0x4009cf5	      4048	elf.c	FUNCTION_55	CALL_1
0x400ad3a	          0x8b4d4c	            mov ecx, dword [rbp + 0x4c] 	      4051	elf.c	FUNCTION_55	CALL_2
0x400ad3d	            0x85c9	                           test ecx, ecx	      4051	elf.c	FUNCTION_55	CALL_2
0x400ad3f	     0xf84b0efffff	                            je 0x4009cf5	      4051	elf.c	FUNCTION_55	CALL_2
0x400ad45	    0x483d00000000	                              cmp rax, 0	      4051	elf.c	FUNCTION_55	CALL_2
0x400ad4b	     0xf85a4efffff	                           jne 0x4009cf5	      4051	elf.c	FUNCTION_55	CALL_2
0x400ad51	      0xe9caefffff	                           jmp 0x4009d20	      4051	elf.c	FUNCTION_55	CALL_2
0x400ad56	            0x39d7	                            cmp edi, edx	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad58	            0x765b	                           jbe 0x400adb5	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad5a	        0x48897518	            mov qword [rbp + 0x18], rsi 	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad5e	        0x498b4330	            mov rax, qword [r11 + 0x30] 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad62	          0x4929f0	                             sub r8, rsi	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad65	        0x48894520	            mov qword [rbp + 0x20], rax 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad69	    0x498b83900000	            mov rax, qword [r11 + 0x90] 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad70	        0x4c894530	              mov qword [rbp + 0x30], r8	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad74	        0x4c894528	              mov qword [rbp + 0x28], r8	      5947	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad78	        0x48894510	            mov qword [rbp + 0x10], rax 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x400ad7c	        0x488b4128	            mov rax, qword [rcx + 0x28] 	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ad80	        0x48034118	             add rax, qword [rcx + 0x18]	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ad84	          0x4829f0	                            sub rax, rsi	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ad87	          0x4939c0	                             cmp r8, rax	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ad8a	            0x7604	                           jbe 0x400ad90	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ad8c	        0x48894528	            mov qword [rbp + 0x28], rax 	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x400ad90	         0xfb64340	           movzx eax, byte [rbx + 0x40] 	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ad94	            0xa804	                              test al, 4	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ad96	            0x7508	                           jne 0x400ada0	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ad98	    0x48c745380100	               mov qword [rbp + 0x38], 1	      5965	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x400ada0	            0xa801	                              test al, 1	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400ada2	     0xf8568faffff	                           jne 0x400a810	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400ada8	    0x48c745080400	                  mov qword [rbp + 8], 4	      5967	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400adb0	      0xe95bfaffff	                           jmp 0x400a810	      5967	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x400adb5	          0x4584ed	                         test r13b, r13b	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400adb8	     0xf8411fcffff	                            je 0x400a9cf	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400adbe	      0xe9fdfbffff	                           jmp 0x400a9c0	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400adc3	       0xf1f440000	                   nop dword [rax + rax]	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400adc8	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x400adcf	      0xe9c2e9ffff	                           jmp 0x4009796	      4201	elf.c	FUNCTION_58	CALL_1
0x400add4	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x400addb	      0xe956eaffff	                           jmp 0x4009836	      4201	elf.c	FUNCTION_58	CALL_1
0x400ade0	    0xf74618820080	      test dword [rsi + 0x18], 0x800082 	      3990	elf.c	FUNCTION_53	CALL_5
0x400ade7	            0x7516	                           jne 0x400adff	      3990	elf.c	FUNCTION_53	CALL_5
0x400ade9	        0x488b4620	            mov rax, qword [rsi + 0x20] 	      3989	elf.c	FUNCTION_53	CALL_3
0x400aded	    0x483d00000000	                              cmp rax, 0	      3989	elf.c	FUNCTION_53	CALL_3
0x400adf3	            0x740a	                            je 0x400adff	      3989	elf.c	FUNCTION_53	CALL_3
0x400adf5	        0xf6402110	           test byte [rax + 0x21], 0x10 	      3990	elf.c	FUNCTION_53	CALL_5
0x400adf9	     0xf84f0f7ffff	                            je 0x400a5ef	      3990	elf.c	FUNCTION_53	CALL_5
0x400adff	          0x4489e8	                           mov eax, r13d	      4135	elf.c	FUNCTION_56	FOR_4	IF_7	ELSE_2
0x400ae02	          0x83c001	                              add eax, 1	      4135	elf.c	FUNCTION_56	FOR_4	IF_7	ELSE_2
0x400ae05	          0x4189c5	                           mov r13d, eax	      4135	elf.c	FUNCTION_56	FOR_4	IF_7	ELSE_2
0x400ae08	      0xe932eeffff	                           jmp 0x4009c3f	      4135	elf.c	FUNCTION_56	FOR_4	IF_7	ELSE_2
0x400ae0d	      0xbf00000000	                              mov edi, 0	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ae12	      0xbeac140000	                         mov esi, 0x14ac	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ae17	      0xe800000000	                          call 0x400ae1c	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ae1c	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ae23	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ae28	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ae2f	    0x488b8f000300	           mov rcx, qword [rdi + 0x300] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ae36	      0xe96cd9ffff	                           jmp 0x40087a7	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x400ae3b	    0x41f745188200	      test dword [r13 + 0x18], 0x800082 	      3990	elf.c	FUNCTION_53	CALL_5
0x400ae43	            0x7516	                           jne 0x400ae5b	      3990	elf.c	FUNCTION_53	CALL_5
0x400ae45	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      3989	elf.c	FUNCTION_53	CALL_3
0x400ae49	    0x483d00000000	                              cmp rax, 0	      3989	elf.c	FUNCTION_53	CALL_3
0x400ae4f	            0x740a	                            je 0x400ae5b	      3989	elf.c	FUNCTION_53	CALL_3
0x400ae51	        0xf6402110	           test byte [rax + 0x21], 0x10 	      3990	elf.c	FUNCTION_53	CALL_5
0x400ae55	     0xf848bf8ffff	                            je 0x400a6e6	      3990	elf.c	FUNCTION_53	CALL_5
0x400ae5b	        0x418d0414	                    lea eax, [r12 + rdx]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400ae5f	          0x83c201	                              add edx, 1	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400ae62	          0x8d4801	                      lea ecx, [rax + 1]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400ae65	      0xe987f8ffff	                           jmp 0x400a6f1	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400ae6a	          0x4889fe	                            mov rsi, rdi	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x400ae6d	      0xe956f2ffff	                           jmp 0x400a0c8	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x400ae72	    0x488b05000000	            mov rax, qword [0x0400ae79] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400ae79	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400ae7c	            0x7410	                            je 0x400ae8e	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400ae7e	    0x448bb0880000	           mov r14d, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400ae85	          0x4585f6	                         test r14d, r14d	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400ae88	     0xf8574f5ffff	                           jne 0x400a402	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400ae8e	      0xbaf1ffffff	                     mov edx, 0xfffffff1	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400ae93	          0x4189d6	                           mov r14d, edx	      6462	elf.c	FUNCTION_78	IF_2
0x400ae96	      0xe94ff6ffff	                           jmp 0x400a4ea	      6462	elf.c	FUNCTION_78	IF_2
0x400ae9b	      0xbaf2ffffff	                     mov edx, 0xfffffff2	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400aea0	          0x4189d6	                           mov r14d, edx	      6464	elf.c	FUNCTION_78	ELSE_1	IF_3
0x400aea3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6470	elf.c	FUNCTION_78	CALL_7
0x400aea8	        0x488b4008	                mov rax, qword [rax + 8]	      6470	elf.c	FUNCTION_78	CALL_7
0x400aeac	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400aeb3	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x400aeba	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x400aebd	     0xf8405f2ffff	                            je 0x400a0c8	      6471	elf.c	FUNCTION_78	IF_5
0x400aec3	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6471	elf.c	FUNCTION_78	IF_5
0x400aec8	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      6471	elf.c	FUNCTION_78	IF_5
0x400aecd	    0x899424ac0000	             mov dword [rsp + 0xac], edx	      6473	elf.c	FUNCTION_78	IF_5
0x400aed4	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400aed9	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400aee1	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400aee3	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400aee5	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400aeea	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400aeef	     0xf841af5ffff	                            je 0x400a40f	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400aef5	      0xe9b7f1ffff	                           jmp 0x400a0b1	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400aefa	      0xbebe140000	                         mov esi, 0x14be	      5309	elf.c	FUNCTION_70	CALL_15
0x400aeff	      0xbf00000000	                              mov edi, 0	      5309	elf.c	FUNCTION_70	CALL_15
0x400af04	      0xe800000000	                          call 0x400af09	      5309	elf.c	FUNCTION_70	CALL_15
0x400af09	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400af10	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400af17	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400af1b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400af20	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5309	elf.c	FUNCTION_70	CALL_15
0x400af27	         0xfb64801	               movzx ecx, byte [rax + 1]	      5309	elf.c	FUNCTION_70	CALL_15
0x400af2b	      0xe99cd8ffff	                           jmp 0x40087cc	      5309	elf.c	FUNCTION_70	CALL_15
0x400af30	    0x4883bef80000	               cmp qword [rsi + 0xf8], 0	      4048	elf.c	FUNCTION_55	CALL_1
0x400af38	     0xf8461ebffff	                            je 0x4009a9f	      4048	elf.c	FUNCTION_55	CALL_1
0x400af3e	          0x8b7a4c	            mov edi, dword [rdx + 0x4c] 	      4051	elf.c	FUNCTION_55	CALL_2
0x400af41	            0x85ff	                           test edi, edi	      4051	elf.c	FUNCTION_55	CALL_2
0x400af43	     0xf8456ebffff	                            je 0x4009a9f	      4051	elf.c	FUNCTION_55	CALL_2
0x400af49	    0x4881f9000000	                              cmp rcx, 0	      4051	elf.c	FUNCTION_55	CALL_2
0x400af50	     0xf8549ebffff	                           jne 0x4009a9f	      4051	elf.c	FUNCTION_55	CALL_2
0x400af56	      0xe96debffff	                           jmp 0x4009ac8	      4051	elf.c	FUNCTION_55	CALL_2
0x400af5b	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af60	    0x4c8bbc248000	            mov r15, qword [rsp + 0x80] 	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af68	          0x4889f8	                            mov rax, rdi	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af6b	          0x4889f9	                            mov rcx, rdi	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af6e	          0x4889cf	                            mov rdi, rcx	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af71	          0x4801f0	                            add rax, rsi	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af74	          0x4c89fa	                            mov rdx, r15	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af77	          0x4831c1	                            xor rcx, rax	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af7a	          0x48f7da	                                 neg rdx	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af7d	          0x4885d1	                           test rcx, rdx	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af80	     0xf856ae2ffff	                           jne 0x40091f0	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af86	          0x4889f0	                            mov rax, rsi	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af89	          0x4c01f8	                            add rax, r15	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af8c	          0x4889c1	                            mov rcx, rax	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af8f	      0x4889442440	             mov qword [rsp + 0x40], rax	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af94	          0x4889f8	                            mov rax, rdi	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af97	          0x4801c8	                            add rax, rcx	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af9a	      0xe951e2ffff	                           jmp 0x40091f0	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400af9f	          0x4c89ff	                            mov rdi, r15	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afa2	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afa7	      0xe800000000	                          call 0x400afac	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afac	            0x89c1	                            mov ecx, eax	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afae	        0x498b0424	                    mov rax, qword [r12]	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afb2	      0xbf01000000	                              mov edi, 1	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afb7	            0xd3e7	                             shl edi, cl	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afb9	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afbe	          0x4863cf	                         movsxd rcx, edi	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afc1	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afc5	      0xe951f0ffff	                           jmp 0x400a01b	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400afca	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5838	elf.c	FUNCTION_71	IF_10
0x400afcf	            0x31c9	                            xor ecx, ecx	      5838	elf.c	FUNCTION_71	IF_10
0x400afd1	    0x41b801000000	                              mov r8d, 1	      5838	elf.c	FUNCTION_71	IF_10
0x400afd7	      0xbe00000000	                              mov esi, 0	      5838	elf.c	FUNCTION_71	IF_10
0x400afdc	      0x44884c2430	              mov byte [rsp + 0x30], r9b	      5838	elf.c	FUNCTION_71	IF_10
0x400afe1	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      5838	elf.c	FUNCTION_71	IF_10
0x400afe5	      0xe800000000	                          call 0x400afea	      5838	elf.c	FUNCTION_71	IF_10
0x400afea	          0x4885c0	                           test rax, rax	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x400afed	    0x440fb64c2430	           movzx r9d, byte [rsp + 0x30] 	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x400aff3	            0x7416	                            je 0x400b00b	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x400aff5	         0xfb65018	           movzx edx, byte [rax + 0x18] 	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400aff9	          0x80fa02	                               cmp dl, 2	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400affc	     0xf8681020000	                           jbe 0x400b283	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400b002	          0x80fa05	                               cmp dl, 5	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400b005	     0xf8478020000	                            je 0x400b283	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400b00b	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400b012	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400b019	          0x488b1a	                    mov rbx, qword [rdx]	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x400b01c	          0x4885db	                           test rbx, rbx	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400b01f	     0xf8423050000	                            je 0x400b548	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400b025	          0x4589cd	                           mov r13d, r9d	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400b028	      0xe935f7ffff	                           jmp 0x400a762	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400b02d	    0x81e380000000	                           and ebx, 0x80	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x400b033	          0x83fb01	                              cmp ebx, 1	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x400b036	            0x19d2	                            sbb edx, edx	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x400b038	          0x83e00f	                            and eax, 0xf	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x400b03b	          0x83e2f0	                     and edx, 0xfffffff0	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x400b03e	        0x8d540220	            lea edx, [rdx + rax + 0x20] 	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x400b042	      0xe926f1ffff	                           jmp 0x400a16d	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x400b047	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x400b04e	      0xe9ebe8ffff	                           jmp 0x400993e	      4201	elf.c	FUNCTION_58	CALL_1
0x400b053	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x400b05a	      0xe994e7ffff	                           jmp 0x40097f3	      4201	elf.c	FUNCTION_58	CALL_1
0x400b05f	    0x4881f9000000	                              cmp rcx, 0	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x400b066	     0xf845ceaffff	                            je 0x4009ac8	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x400b06c	          0x8b490c	              mov ecx, dword [rcx + 0xc]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400b06f	      0x488954cd00	            mov qword [rbp + rcx*8], rdx	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400b074	      0xe94feaffff	                           jmp 0x4009ac8	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x400b079	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      8071	elf.c	FUNCTION_88	CALL_43
0x400b07e	    0x4c8bb4249800	            mov r14, qword [rsp + 0x98] 	      8071	elf.c	FUNCTION_88	CALL_43
0x400b086	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      8071	elf.c	FUNCTION_88	CALL_43
0x400b08b	      0xe800000000	                          call 0x400b090	      8071	elf.c	FUNCTION_88	CALL_43
0x400b090	    0x488bac248000	            mov rbp, qword [rsp + 0x80] 	      8071	elf.c	FUNCTION_88	CALL_43
0x400b098	      0x4c89742408	                mov qword [rsp + 8], r14	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400b09d	            0x31db	                            xor ebx, ebx	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400b09f	      0x4c8b642450	            mov r12, qword [rsp + 0x50] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400b0a4	    0x448bb4248c00	           mov r14d, dword [rsp + 0x8c] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400b0ac	          0x4989ed	                            mov r13, rbp	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400b0af	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400b0b4	            0xeb3c	                           jmp 0x400b0f2	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400b0b6	    0x49c745100000	               mov qword [r13 + 0x10], 0	      8078	elf.c	FUNCTION_88	FOR_2	IF_41
0x400b0be	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0c2	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0ca	          0x83c301	                              add ebx, 1	      8074	elf.c	FUNCTION_88	FOR_2
0x400b0cd	          0x4c89ee	                            mov rsi, r13	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0d0	          0x4c89ff	                            mov rdi, r15	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0d3	        0x4983c530	                           add r13, 0x30	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0d7	      0x488d4c9500	                  lea rcx, [rbp + rdx*4]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0dc	         0xfb65005	               movzx edx, byte [rax + 5]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0e0	      0x490faf55f0	            imul rdx, qword [r13 - 0x10]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0e5	      0x4803542470	             add rdx, qword [rsp + 0x70]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0ea	          0xff5038	                 call qword [rax + 0x38]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x400b0ed	          0x4139de	                           cmp r14d, ebx	      8074	elf.c	FUNCTION_88	FOR_2
0x400b0f0	            0x7c1a	                            jl 0x400b10c	      8074	elf.c	FUNCTION_88	FOR_2
0x400b0f2	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x400b0f6	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x400b0fa	            0x74ba	                            je 0x400b0b6	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x400b0fc	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x400b101	      0xe800000000	                          call 0x400b106	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x400b106	        0x49894510	             mov qword [r13 + 0x10], rax	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x400b10a	            0xebb2	                           jmp 0x400b0be	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x400b10c	      0x4c8b742408	                mov r14, qword [rsp + 8]	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x400b111	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      8090	elf.c	FUNCTION_88	CALL_46
0x400b119	      0xe800000000	                          call 0x400b11e	      8090	elf.c	FUNCTION_88	CALL_46
0x400b11e	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      8093	elf.c	FUNCTION_88	CALL_47
0x400b123	      0xe800000000	                          call 0x400b128	      8093	elf.c	FUNCTION_88	CALL_47
0x400b128	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      8093	elf.c	FUNCTION_88	CALL_47
0x400b130	    0xc74424780100	               mov dword [rsp + 0x78], 1	      8100	elf.c	FUNCTION_88
0x400b138	    0x488987280100	            mov qword [rdi + 0x128], rax	      8093	elf.c	FUNCTION_88	CALL_47
0x400b13f	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      8095	elf.c	FUNCTION_88
0x400b144	    0xc7870c010000	              mov dword [rdi + 0x10c], 3	      8094	elf.c	FUNCTION_88
0x400b14e	    0x488b80800300	           mov rax, qword [rax + 0x380] 	      8095	elf.c	FUNCTION_88
0x400b155	    0x48c787180100	              mov qword [rdi + 0x118], 0	      8096	elf.c	FUNCTION_88
0x400b160	    0x48c787400100	              mov qword [rdi + 0x140], 0	      8097	elf.c	FUNCTION_88
0x400b16b	    0xc78730010000	              mov dword [rdi + 0x130], 0	      8098	elf.c	FUNCTION_88
0x400b175	    0xc78734010000	              mov dword [rdi + 0x134], 0	      8099	elf.c	FUNCTION_88
0x400b17f	    0x48c787380100	              mov qword [rdi + 0x138], 1	      8100	elf.c	FUNCTION_88
0x400b18a	    0x488987100100	            mov qword [rdi + 0x110], rax	      8095	elf.c	FUNCTION_88
0x400b191	      0xe9b3d4ffff	                           jmp 0x4008649	      8095	elf.c	FUNCTION_88
0x400b196	    0x48c744240800	                  mov qword [rsp + 8], 0	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400b19f	      0xe960ddffff	                           jmp 0x4008f04	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x400b1a4	            0x31d2	                            xor edx, edx	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400b1a6	          0x4531f6	                          xor r14d, r14d	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x400b1a9	      0xe93cf3ffff	                           jmp 0x400a4ea	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x400b1ae	      0xbaf1ffffff	                     mov edx, 0xfffffff1	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400b1b3	          0x4189d6	                           mov r14d, edx	      6462	elf.c	FUNCTION_78	IF_2
0x400b1b6	      0xe9e8fcffff	                           jmp 0x400aea3	      6462	elf.c	FUNCTION_78	IF_2
0x400b1bb	      0xbf0f000000	                            mov edi, 0xf	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1c0	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1c5	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1ca	      0xe800000000	                          call 0x400b1cf	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1cf	        0x498b0424	                    mov rax, qword [r12]	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1d3	    0x41befffeffff	                    mov r14d, 0xfffffeff	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1d9	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1de	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1e3	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1e7	      0xe9dceeffff	                           jmp 0x400a0c8	      6480	elf.c	FUNCTION_78	CALL_8
0x400b1ec	      0x4883796000	               cmp qword [rcx + 0x60], 0	      4055	elf.c	FUNCTION_55
0x400b1f1	     0xf85d1e8ffff	                           jne 0x4009ac8	      4055	elf.c	FUNCTION_55
0x400b1f7	    0x4881f9000000	                              cmp rcx, 0	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x400b1fe	     0xf84c4e8ffff	                            je 0x4009ac8	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x400b204	          0x4889f1	                            mov rcx, rsi	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x400b207	      0xe960feffff	                           jmp 0x400b06c	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x400b20c	      0xbaf2ffffff	                     mov edx, 0xfffffff2	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3	CALL_5
0x400b211	          0x4189d6	                           mov r14d, edx	      6464	elf.c	FUNCTION_78	ELSE_1	IF_3
0x400b214	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6470	elf.c	FUNCTION_78	CALL_7
0x400b219	        0x488b4008	                mov rax, qword [rax + 8]	      6470	elf.c	FUNCTION_78	CALL_7
0x400b21d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400b224	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x400b22b	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x400b22e	     0xf84dbf1ffff	                            je 0x400a40f	      6471	elf.c	FUNCTION_78	IF_5
0x400b234	      0x4c894c2478	              mov qword [rsp + 0x78], r9	      6471	elf.c	FUNCTION_78	IF_5
0x400b239	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6471	elf.c	FUNCTION_78	IF_5
0x400b23e	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      6471	elf.c	FUNCTION_78	IF_5
0x400b243	    0x899424ac0000	             mov dword [rsp + 0xac], edx	      6473	elf.c	FUNCTION_78	IF_5
0x400b24a	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b252	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b257	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b259	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b25b	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b260	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b265	      0x4c8b4c2478	              mov r9, qword [rsp + 0x78]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b26a	     0xf849ff1ffff	                            je 0x400a40f	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b270	      0xe9f4f9ffff	                           jmp 0x400ac69	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b275	           0xf1f00	                         nop dword [rax]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400b278	          0x4531e4	                          xor r12d, r12d	      4097	elf.c	FUNCTION_56	FOR_2
0x400b27b	          0x4531ed	                          xor r13d, r13d	      4097	elf.c	FUNCTION_56	FOR_2
0x400b27e	      0xe99ee9ffff	                           jmp 0x4009c21	      4097	elf.c	FUNCTION_56	FOR_2
0x400b283	        0x448b5d44	           mov r11d, dword [rbp + 0x44] 	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400b287	          0x4585db	                         test r11d, r11d	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400b28a	     0xf844d020000	                            je 0x400b4dd	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400b290	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	      5851	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x400b294	          0x4885d2	                           test rdx, rdx	      5861	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400b297	          0x4c89f1	                            mov rcx, r14	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400b29a	     0xf8481020000	                            je 0x400b521	      5861	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400b2a0	        0x482b4a28	             sub rcx, qword [rdx + 0x28]	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400b2a4	        0x48895028	             mov qword [rax + 0x28], rdx	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400b2a8	        0x48894830	             mov qword [rax + 0x30], rcx	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x400b2ac	        0xc6401803	                mov byte [rax + 0x18], 3	      5872	elf.c	FUNCTION_71	IF_10	IF_11
0x400b2b0	        0x80486302	                 or byte [rax + 0x63], 2	      5873	elf.c	FUNCTION_71	IF_10	IF_11
0x400b2b4	        0x806064fe	             and byte [rax + 0x64], 0xfe	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x400b2b8	      0xe94efdffff	                           jmp 0x400b00b	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x400b2bd	    0xc74424080000	                  mov dword [rsp + 8], 0	      4146	elf.c	FUNCTION_56	FOR_5
0x400b2c5	          0x4531ed	                          xor r13d, r13d	      4146	elf.c	FUNCTION_56	FOR_5
0x400b2c8	      0xe9f6eaffff	                           jmp 0x4009dc3	      4146	elf.c	FUNCTION_56	FOR_5
0x400b2cd	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      4146	elf.c	FUNCTION_56	FOR_5
0x400b2d2	      0xba05000000	                              mov edx, 5	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x400b2d7	      0xbe00000000	                              mov esi, 0	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x400b2dc	      0xe939e4ffff	                           jmp 0x400971a	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x400b2e1	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400b2e4	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      6135	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_18
0x400b2e8	        0x48c1e106	                              shl rcx, 6	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400b2ec	          0x4801d1	                            add rcx, rdx	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400b2ef	          0x4839ca	                            cmp rdx, rcx	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400b2f2	            0x732e	                           jae 0x400b322	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400b2f4	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400b2fb	            0xeb09	                           jmp 0x400b306	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400b2fd	        0x4883c240	                           add rdx, 0x40	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400b301	          0x4839d1	                            cmp rcx, rdx	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400b304	            0x7613	                           jbe 0x400b319	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400b306	        0x48833a01	                      cmp qword [rdx], 1	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400b30a	            0x75f1	                           jne 0x400b2fd	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400b30c	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400b310	          0x4839fe	                            cmp rsi, rdi	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400b313	        0x480f47f7	                          cmova rsi, rdi	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400b317	            0xebe4	                           jmp 0x400b2fd	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400b319	          0x4885f6	                           test rsi, rsi	      6146	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400b31c	     0xf8458f5ffff	                            je 0x400a87a	      6146	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400b322	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400b327	    0x66c740380200	                mov word [rax + 0x38], 2	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400b32d	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400b334	      0xe941f5ffff	                           jmp 0x400a87a	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x400b339	      0xba05000000	                              mov edx, 5	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_29
0x400b33e	      0xbe00000000	                              mov esi, 0	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_29
0x400b343	      0xbf00000000	                              mov edi, 0	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_29
0x400b348	      0xe800000000	                          call 0x400b34d	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_29
0x400b34d	          0x4889ea	                            mov rdx, rbp	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400b350	      0x482b542408	                sub rdx, qword [rsp + 8]	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400b355	          0x4889c7	                            mov rdi, rax	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400b358	          0x4c89fe	                            mov rsi, r15	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400b35b	            0x31c0	                            xor eax, eax	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400b35d	        0x48c1fa06	                              sar rdx, 6	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400b361	      0xe800000000	                          call 0x400b366	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400b366	      0xe949d0ffff	                           jmp 0x40083b4	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400b36b	      0xba04000000	                              mov edx, 4	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x400b370	          0x4889de	                            mov rsi, rbx	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x400b373	          0x4c89ff	                            mov rdi, r15	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x400b376	      0xe800000000	                          call 0x400b37b	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x400b37b	          0x4885c0	                           test rax, rax	      7820	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x400b37e	    0x4c8d249d0000	                        lea r12, [rbx*4]	      7817	elf.c	FUNCTION_88	IF_5	IF_6
0x400b386	      0x4889442440	             mov qword [rsp + 0x40], rax	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x400b38b	     0xf8432f9ffff	                            je 0x400acc3	      7820	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x400b391	        0x48894548	            mov qword [rbp + 0x48], rax 	      7823	elf.c	FUNCTION_88	IF_5	IF_6
0x400b395	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      7843	elf.c	FUNCTION_88
0x400b39d	    0xc74504120000	               mov dword [rbp + 4], 0x12	      7824	elf.c	FUNCTION_88	IF_5	IF_6
0x400b3a4	        0x4c896520	            mov qword [rbp + 0x20], r12 	      7825	elf.c	FUNCTION_88	IF_5	IF_6
0x400b3a8	    0x48c745300400	               mov qword [rbp + 0x30], 4	      7826	elf.c	FUNCTION_88	IF_5	IF_6
0x400b3b0	    0x48c745380400	               mov qword [rbp + 0x38], 4	      7827	elf.c	FUNCTION_88	IF_5	IF_6
0x400b3b8	    0x48c744240801	                  mov qword [rsp + 8], 1	      7848	elf.c	FUNCTION_88	IF_8
0x400b3c1	    0x48c700000000	                      mov qword [rax], 0	      7843	elf.c	FUNCTION_88
0x400b3c8	    0x48c740080000	                  mov qword [rax + 8], 0	      7843	elf.c	FUNCTION_88
0x400b3d0	    0x48c740100000	               mov qword [rax + 0x10], 0	      7843	elf.c	FUNCTION_88
0x400b3d8	        0xc6401800	                mov byte [rax + 0x18], 0	      7843	elf.c	FUNCTION_88
0x400b3dc	        0xc6401900	                mov byte [rax + 0x19], 0	      7843	elf.c	FUNCTION_88
0x400b3e0	        0xc6401a00	                mov byte [rax + 0x1a], 0	      7843	elf.c	FUNCTION_88
0x400b3e4	    0xc7401c000000	               mov dword [rax + 0x1c], 0	      7843	elf.c	FUNCTION_88
0x400b3eb	    0x48c740200000	               mov qword [rax + 0x20], 0	      7844	elf.c	FUNCTION_88
0x400b3f3	    0x48c740280000	               mov qword [rax + 0x28], 0	      7845	elf.c	FUNCTION_88
0x400b3fb	      0xe96bebffff	                           jmp 0x4009f6b	      7845	elf.c	FUNCTION_88
0x400b400	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5832	elf.c	FUNCTION_71	IF_10
0x400b406	        0x410f95c5	                              setne r13b	      5832	elf.c	FUNCTION_71	IF_10
0x400b40a	      0xe916f4ffff	                           jmp 0x400a825	      5832	elf.c	FUNCTION_71	IF_10
0x400b40f	            0x31d2	                            xor edx, edx	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400b411	          0x4531f6	                          xor r14d, r14d	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x400b414	      0xe98afaffff	                           jmp 0x400aea3	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x400b419	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b41e	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b425	          0x4885c0	                           test rax, rax	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b428	            0x7418	                            je 0x400b442	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b42a	            0x89da	                            mov edx, ebx	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x400b42c	          0x4c89ff	                            mov rdi, r15	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x400b42f	            0xffd0	                                call rax	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x400b431	            0x85c0	                           test eax, eax	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x400b433	     0xf8564f4ffff	                           jne 0x400a89d	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x400b439	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x400b43e	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x400b442	      0x48837e4001	               cmp qword [rsi + 0x40], 1	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b447	     0xf8550f4ffff	                           jne 0x400a89d	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b44d	        0x488b5658	            mov rdx, qword [rsi + 0x58] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b451	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b455	          0x4839c2	                            cmp rdx, rax	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b458	            0x7711	                            ja 0x400b46b	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b45a	        0x48035670	             add rdx, qword [rsi + 0x70]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b45e	        0x48034630	             add rax, qword [rsi + 0x30]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b462	          0x4839c2	                            cmp rdx, rax	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b465	     0xf8332f4ffff	                           jae 0x400a89d	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400b46b	      0xba05000000	                              mov edx, 5	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b470	      0xbe00000000	                              mov esi, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b475	      0xbf00000000	                              mov edi, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b47a	      0xe800000000	                          call 0x400b47f	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b47f	          0x4c89fe	                            mov rsi, r15	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b482	          0x4889c7	                            mov rdi, rax	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b485	            0x31c0	                            xor eax, eax	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b487	      0xe800000000	                          call 0x400b48c	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b48c	      0xe923cfffff	                           jmp 0x40083b4	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400b491	      0xbaf1ffffff	                     mov edx, 0xfffffff1	      6461	elf.c	FUNCTION_78	IF_2	CALL_4
0x400b496	          0x4189d6	                           mov r14d, edx	      6462	elf.c	FUNCTION_78	IF_2
0x400b499	      0xe976fdffff	                           jmp 0x400b214	      6462	elf.c	FUNCTION_78	IF_2
0x400b49e	      0xbf0f000000	                            mov edi, 0xf	      6480	elf.c	FUNCTION_78	CALL_8
0x400b4a3	      0x4c894c2408	                 mov qword [rsp + 8], r9	      6480	elf.c	FUNCTION_78	CALL_8
0x400b4a8	      0xe800000000	                          call 0x400b4ad	      6480	elf.c	FUNCTION_78	CALL_8
0x400b4ad	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      6480	elf.c	FUNCTION_78	CALL_8
0x400b4b2	      0xe9c7f7ffff	                           jmp 0x400ac7e	      6480	elf.c	FUNCTION_78	CALL_8
0x400b4b7	          0x4531db	                          xor r11d, r11d	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400b4ba	        0x4883fe07	                              cmp rsi, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400b4be	     0xf85c2deffff	                           jne 0x4009386	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400b4c4	      0xe9b9deffff	                           jmp 0x4009382	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400b4c9	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      7793	elf.c	FUNCTION_88	IF_3	CALL_8
0x400b4ce	      0xe800000000	                          call 0x400b4d3	      7793	elf.c	FUNCTION_88	IF_3	CALL_8
0x400b4d3	      0xe9dcceffff	                           jmp 0x40083b4	      7793	elf.c	FUNCTION_88	IF_3	CALL_8
0x400b4d8	      0xe800000000	                          call 0x400b4dd	      4318	elf.c	FUNCTION_59
0x400b4dd	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400b4e4	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400b4eb	            0xeb0c	                           jmp 0x400b4f9	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400b4ed	           0xf1f00	                         nop dword [rax]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400b4f0	        0x448b5244	           mov r10d, dword [rdx + 0x44] 	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400b4f4	          0x4585d2	                         test r10d, r10d	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400b4f7	            0x7515	                           jne 0x400b50e	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400b4f9	          0x488b12	                    mov rdx, qword [rdx]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400b4fc	          0x4885d2	                           test rdx, rdx	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400b4ff	            0x75ef	                           jne 0x400b4f0	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400b501	          0x4c89f1	                            mov rcx, r14	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x400b504	      0xba00000000	                              mov edx, 0	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400b509	      0xe996fdffff	                           jmp 0x400b2a4	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400b50e	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400b512	      0xe97dfdffff	                           jmp 0x400b294	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400b517	            0x31d2	                            xor edx, edx	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4	CALL_6
0x400b519	          0x4531f6	                          xor r14d, r14d	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x400b51c	      0xe9f3fcffff	                           jmp 0x400b214	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x400b521	      0xba00000000	                              mov edx, 0	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400b526	      0xe979fdffff	                           jmp 0x400b2a4	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x400b52b	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      8071	elf.c	FUNCTION_88	CALL_43
0x400b530	      0xe800000000	                          call 0x400b535	      8071	elf.c	FUNCTION_88	CALL_43
0x400b535	    0x83bc248c0000	               cmp dword [rsp + 0x8c], 0	      8074	elf.c	FUNCTION_88	FOR_2
0x400b53d	     0xf85cefbffff	                           jne 0x400b111	      8074	elf.c	FUNCTION_88	FOR_2
0x400b543	      0xe948fbffff	                           jmp 0x400b090	      8074	elf.c	FUNCTION_88	FOR_2
0x400b548	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6037	elf.c	FUNCTION_71	CALL_31
0x400b54f	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400b554	          0x4589cd	                           mov r13d, r9d	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400b557	        0x4c896240	             mov qword [rdx + 0x40], r12	      6037	elf.c	FUNCTION_71	CALL_31
0x400b55b	    0x488b97580100	           mov rdx, qword [rdi + 0x158] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400b562	          0x4885d2	                           test rdx, rdx	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400b565	     0xf85ddf2ffff	                           jne 0x400a848	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400b56b	      0xe9f6f2ffff	                           jmp 0x400a866	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400b570	      0xba00000000	                              mov edx, 0	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400b575	      0xbe08170000	                         mov esi, 0x1708	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400b57a	      0xbf00000000	                              mov edi, 0	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400b57f	      0xe800000000	                          call 0x400b584	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400b584	            0x89c7	                            mov edi, eax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400b586	      0xe908deffff	                           jmp 0x4009393	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400b58b	          0x4489c5	                            mov ebp, r8d	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400b58e	      0xe9cdd3ffff	                           jmp 0x4008960	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400b593	          0x4889fe	                            mov rsi, rdi	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400b596	    0x41bef1ffffff	                    mov r14d, 0xfffffff1	      7942	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400b59c	      0xe927ebffff	                           jmp 0x400a0c8	      7942	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400b5a1	    0x498b81e00000	              mov rax, qword [r9 + 0xe0]	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400b5a8	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400b5ab	     0xf84ceedffff	                            je 0x400a37f	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400b5b1	    0x448bb0880000	           mov r14d, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400b5b8	          0x4585f6	                         test r14d, r14d	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400b5bb	     0xf8541eeffff	                           jne 0x400a402	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400b5c1	      0xe9b9edffff	                           jmp 0x400a37f	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
_bfd_elf_find_inliner_info	functions,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	3
0x4010180	    0x4c8b87f80000	              mov r8, qword [rdi + 0xf8]	      8809	elf.c	FUNCTION_105	CALL_1
0x4010187	    0x4981c0300300	                           add r8, 0x330	      8809	elf.c	FUNCTION_105	CALL_1
0x401018e	      0xe900000000	                           jmp 0x4010193	      8809	elf.c	FUNCTION_105	CALL_1
_bfd_elf_get_symbol_info	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	3
0x400fe60	          0x4889f7	                            mov rdi, rsi	      8637	elf.c	FUNCTION_99
0x400fe63	          0x4889d6	                            mov rsi, rdx	      8638	elf.c	FUNCTION_99	CALL_1
0x400fe66	      0xe900000000	                           jmp 0x400fe6b	      8638	elf.c	FUNCTION_99	CALL_1
copy_special_section_fields	functions,0:CALL,12:FOR,0:WHILE,0:SWITCH,0:IF,11:DO,0:ELSE,3	118
0x4001050	            0x4157	                                push r15	      1358	elf.c	FUNCTION_30
0x4001052	            0x4156	                                push r14	      1358	elf.c	FUNCTION_30
0x4001054	            0x4155	                                push r13	      1358	elf.c	FUNCTION_30
0x4001056	            0x4154	                                push r12	      1358	elf.c	FUNCTION_30
0x4001058	              0x55	                                push rbp	      1358	elf.c	FUNCTION_30
0x4001059	              0x53	                                push rbx	      1358	elf.c	FUNCTION_30
0x400105a	        0x4883ec18	                           sub rsp, 0x18	      1358	elf.c	FUNCTION_30
0x400105e	        0x83790408	                  cmp dword [rcx + 4], 8	      1364	elf.c	FUNCTION_30	IF_1
0x4001062	     0xf84b8000000	                            je 0x4001120	      1364	elf.c	FUNCTION_30	IF_1
0x4001068	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1360	elf.c	FUNCTION_30	CALL_2
0x400106f	          0x4589c6	                           mov r14d, r8d	      1360	elf.c	FUNCTION_30	CALL_2
0x4001072	          0x4989cd	                            mov r13, rcx	      1360	elf.c	FUNCTION_30	CALL_2
0x4001075	          0x4889d3	                            mov rbx, rdx	      1360	elf.c	FUNCTION_30	CALL_2
0x4001078	          0x4889f5	                            mov rbp, rsi	      1360	elf.c	FUNCTION_30	CALL_2
0x400107b	          0x4989fc	                            mov r12, rdi	      1360	elf.c	FUNCTION_30	CALL_2
0x400107e	        0x4c8b7858	            mov r15, qword [rax + 0x58] 	      1360	elf.c	FUNCTION_30	CALL_2
0x4001082	        0x488b4608	                mov rax, qword [rsi + 8]	      1359	elf.c	FUNCTION_30	CALL_1
0x4001086	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1390	elf.c	FUNCTION_30	IF_4
0x400108d	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1390	elf.c	FUNCTION_30	IF_4
0x4001094	          0x4885c0	                           test rax, rax	      1390	elf.c	FUNCTION_30	IF_4
0x4001097	            0x7406	                            je 0x400109f	      1390	elf.c	FUNCTION_30	IF_4
0x4001099	            0xffd0	                                call rax	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x400109b	            0x85c0	                           test eax, eax	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x400109d	            0x7521	                           jne 0x40010c0	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x400109f	        0x448b4328	            mov r8d, dword [rbx + 0x28] 	      1399	elf.c	FUNCTION_30	IF_5
0x40010a3	          0x4585c0	                           test r8d, r8d	      1399	elf.c	FUNCTION_30	IF_5
0x40010a6	            0x7538	                           jne 0x40010e0	      1399	elf.c	FUNCTION_30	IF_5
0x40010a8	          0x4531e4	                          xor r12d, r12d	      1361	elf.c	FUNCTION_30
0x40010ab	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1425	elf.c	FUNCTION_30	IF_8
0x40010ae	            0x85c0	                           test eax, eax	      1425	elf.c	FUNCTION_30	IF_8
0x40010b0	            0x7414	                            je 0x40010c6	      1425	elf.c	FUNCTION_30	IF_8
0x40010b2	        0xf6430840	               test byte [rbx + 8], 0x40	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x40010b6	     0xf85cc000000	                           jne 0x4001188	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x40010bc	        0x4189452c	             mov dword [r13 + 0x2c], eax	      1443	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x40010c0	    0x41bc01000000	                             mov r12d, 1	      1444	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x40010c6	        0x4883c418	                           add rsp, 0x18	      1453	elf.c	FUNCTION_30
0x40010ca	          0x4489e0	                           mov eax, r12d	      1453	elf.c	FUNCTION_30
0x40010cd	              0x5b	                                 pop rbx	      1453	elf.c	FUNCTION_30
0x40010ce	              0x5d	                                 pop rbp	      1453	elf.c	FUNCTION_30
0x40010cf	            0x415c	                                 pop r12	      1453	elf.c	FUNCTION_30
0x40010d1	            0x415d	                                 pop r13	      1453	elf.c	FUNCTION_30
0x40010d3	            0x415e	                                 pop r14	      1453	elf.c	FUNCTION_30
0x40010d5	            0x415f	                                 pop r15	      1453	elf.c	FUNCTION_30
0x40010d7	              0xc3	                                     ret	      1453	elf.c	FUNCTION_30
0x40010d8	     0xf1f84000000	                   nop dword [rax + rax]	      1453	elf.c	FUNCTION_30
0x40010e0	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x40010e8	    0x443b80fc0200	           cmp r8d, dword [rax + 0x2fc] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x40010ef	            0x7357	                           jae 0x4001148	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x40010f1	          0x4489c0	                            mov eax, r8d	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40010f4	    0x488dbdf80000	                   lea rdi, [rbp + 0xf8]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40010fb	          0x4489c2	                            mov edx, r8d	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40010fe	        0x498b34c7	            mov rsi, qword [r15 + rax*8]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4001102	      0xe829feffff	               call sym.find_link.isra.9	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4001107	            0x85c0	                           test eax, eax	      1412	elf.c	FUNCTION_30	IF_5	IF_7
0x4001109	     0xf84d1000000	                            je 0x40011e0	      1412	elf.c	FUNCTION_30	IF_5	IF_7
0x400110f	        0x41894528	             mov dword [r13 + 0x28], eax	      1414	elf.c	FUNCTION_30	IF_5	IF_7
0x4001113	    0x41bc01000000	                             mov r12d, 1	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x4001119	            0xeb90	                           jmp 0x40010ab	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x400111b	       0xf1f440000	                   nop dword [rax + rax]	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x4001120	          0x8b7128	            mov esi, dword [rcx + 0x28] 	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x4001123	            0x85f6	                           test esi, esi	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x4001125	            0x7506	                           jne 0x400112d	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x4001127	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x400112a	          0x894128	             mov dword [rcx + 0x28], eax	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x400112d	          0x8b412c	            mov eax, dword [rcx + 0x2c] 	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x4001130	            0x85c0	                           test eax, eax	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x4001132	            0x758c	                           jne 0x40010c0	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x4001134	          0x8b422c	            mov eax, dword [rdx + 0x2c] 	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x4001137	    0x41bc01000000	                             mov r12d, 1	      1386	elf.c	FUNCTION_30	IF_1
0x400113d	          0x89412c	             mov dword [rcx + 0x2c], eax	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x4001140	            0xeb84	                           jmp 0x40010c6	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x4001142	    0x660f1f440000	                    nop word [rax + rax]	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x4001148	      0xba05000000	                              mov edx, 5	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x400114d	      0xbe00000000	                              mov esi, 0	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x4001152	      0xbf00000000	                              mov edi, 0	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x4001157	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x400115c	      0xe800000000	                          call 0x4001161	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x4001161	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4001166	          0x4c89e6	                            mov rsi, r12	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4001169	          0x4889c7	                            mov rdi, rax	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400116c	          0x4489f1	                           mov ecx, r14d	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400116f	            0x31c0	                            xor eax, eax	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4001171	          0x4531e4	                          xor r12d, r12d	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x4001174	          0x4489c2	                            mov edx, r8d	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4001177	      0xe800000000	                          call 0x400117c	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400117c	      0xe945ffffff	                           jmp 0x40010c6	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x4001181	     0xf1f80000000	                         nop dword [rax]	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x4001188	            0x89c2	                            mov edx, eax	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400118a	    0x488dbdf80000	                   lea rdi, [rbp + 0xf8]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4001191	        0x498b34d7	            mov rsi, qword [r15 + rdx*8]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4001195	            0x89c2	                            mov edx, eax	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4001197	      0xe894fdffff	               call sym.find_link.isra.9	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400119c	            0x85c0	                           test eax, eax	      1434	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x400119e	            0x7410	                            je 0x40011b0	      1434	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x40011a0	      0x49834d0840	                or qword [r13 + 8], 0x40	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x40011a5	      0xe912ffffff	                           jmp 0x40010bc	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x40011aa	    0x660f1f440000	                    nop word [rax + rax]	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x40011b0	      0xba05000000	                              mov edx, 5	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x40011b5	      0xbe00000000	                              mov esi, 0	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x40011ba	      0xbf00000000	                              mov edi, 0	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x40011bf	      0xe800000000	                          call 0x40011c4	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x40011c4	          0x4489f2	                           mov edx, r14d	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40011c7	          0x4889c7	                            mov rdi, rax	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40011ca	          0x4889ee	                            mov rsi, rbp	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40011cd	            0x31c0	                            xor eax, eax	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40011cf	      0xe800000000	                          call 0x40011d4	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40011d4	      0xe9edfeffff	                           jmp 0x40010c6	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40011d9	     0xf1f80000000	                         nop dword [rax]	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x40011e0	      0xba05000000	                              mov edx, 5	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40011e5	      0xbe00000000	                              mov esi, 0	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40011ea	      0xbf00000000	                              mov edi, 0	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40011ef	      0xe800000000	                          call 0x40011f4	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40011f4	          0x4489f2	                           mov edx, r14d	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40011f7	          0x4889c7	                            mov rdi, rax	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40011fa	          0x4889ee	                            mov rsi, rbp	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40011fd	            0x31c0	                            xor eax, eax	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40011ff	      0xe800000000	                          call 0x4001204	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x4001204	      0xe99ffeffff	                           jmp 0x40010a8	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
_bfd_elf_swap_versym_in	functions,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0	8
0x4003000	              0x53	                                push rbx	       180	elf.c	FUNCTION_9
0x4003001	        0x488b4708	                mov rax, qword [rdi + 8]	       181	elf.c	FUNCTION_9	CALL_1
0x4003005	          0x4889d3	                            mov rbx, rdx	       180	elf.c	FUNCTION_9
0x4003008	          0x4889f7	                            mov rdi, rsi	       181	elf.c	FUNCTION_9	CALL_1
0x400300b	    0xff9098000000	                 call qword [rax + 0x98]	       181	elf.c	FUNCTION_9	CALL_1
0x4003011	          0x668903	                      mov word [rbx], ax	       181	elf.c	FUNCTION_9	CALL_1
0x4003014	              0x5b	                                 pop rbx	       182	elf.c	FUNCTION_9
0x4003015	              0xc3	                                     ret	       182	elf.c	FUNCTION_9
