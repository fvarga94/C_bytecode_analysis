wrap_output	CALL,4:SWITCH,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0:IF,5	155
0x4000040	            0x4157	                                push r15	       146	depend.c	FUNCTION_4
0x4000042	            0x4156	                                push r14	       146	depend.c	FUNCTION_4
0x4000044	            0x4155	                                push r13	       146	depend.c	FUNCTION_4
0x4000046	            0x4154	                                push r12	       146	depend.c	FUNCTION_4
0x4000048	          0x4989fd	                            mov r13, rdi	       146	depend.c	FUNCTION_4
0x400004b	              0x55	                                push rbp	       146	depend.c	FUNCTION_4
0x400004c	              0x53	                                push rbx	       146	depend.c	FUNCTION_4
0x400004d	          0x4889f5	                            mov rbp, rsi	       146	depend.c	FUNCTION_4
0x4000050	          0x4989f4	                            mov r12, rsi	       146	depend.c	FUNCTION_4
0x4000053	            0x31db	                            xor ebx, ebx	        86	depend.c	FUNCTION_3
0x4000055	        0x4883ec18	                           sub rsp, 0x18	       146	depend.c	FUNCTION_4
0x4000059	        0x8954240c	              mov dword [rsp + 0xc], edx	       146	depend.c	FUNCTION_4
0x400005d	          0x4889f2	                            mov rdx, rsi	       146	depend.c	FUNCTION_4
0x4000060	            0xeb1c	                           jmp 0x400007e	       146	depend.c	FUNCTION_4
0x4000062	    0x660f1f440000	                    nop word [rax + rax]	       146	depend.c	FUNCTION_4
0x4000068	          0x80f920	                            cmp cl, 0x20	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400006b	            0x7422	                            je 0x400008f	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400006d	            0x31c0	                            xor eax, eax	       123	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400006f	          0x80f924	                            cmp cl, 0x24	       123	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000072	           0xf94c0	                                 sete al	       123	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000075	             0x1c3	                            add ebx, eax	       123	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000077	          0x83c301	                              add ebx, 1	       135	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400007a	        0x4883c201	                              add rdx, 1	       135	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400007e	           0xfb60a	                   movzx ecx, byte [rdx]	        90	depend.c	FUNCTION_3	FOR_1
0x4000081	          0x4889d0	                            mov rax, rdx	        90	depend.c	FUNCTION_3	FOR_1
0x4000084	          0x80f909	                               cmp cl, 9	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000087	            0x7406	                            je 0x400008f	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000089	            0x7fdd	                            jg 0x4000068	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400008b	            0x84c9	                             test cl, cl	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400008d	            0x75e8	                           jne 0x4000077	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400008f	          0x4839d5	                            cmp rbp, rdx	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000092	            0x731e	                           jae 0x40000b2	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000094	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000098	            0x740c	                            je 0x40000a6	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x400009a	            0xeb16	                           jmp 0x40000b2	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x400009c	         0xf1f4000	                         nop dword [rax]	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000a0	        0x8078ff5c	                cmp byte [rax - 1], 0x5c	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000a4	            0x750c	                           jne 0x40000b2	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000a6	        0x4883e801	                              sub rax, 1	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000aa	          0x83c301	                              add ebx, 1	       110	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000ad	          0x4839c5	                            cmp rbp, rax	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000b0	            0x75ee	                           jne 0x40000a0	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000b2	            0x84c9	                             test cl, cl	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x40000b4	            0x7405	                            je 0x40000bb	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x40000b6	          0x83c301	                              add ebx, 1	       117	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000b9	            0xebbc	                           jmp 0x4000077	       117	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000bb	            0x85db	                           test ebx, ebx	       149	depend.c	FUNCTION_4	IF_1
0x40000bd	     0xf840f010000	                            je 0x40001d2	       149	depend.c	FUNCTION_4	IF_1
0x40000c3	    0x8b0500000000	            mov eax, dword [0x040000c9] 	       152	depend.c	FUNCTION_4	IF_2
0x40000c9	            0x85c0	                           test eax, eax	       152	depend.c	FUNCTION_4	IF_2
0x40000cb	            0x740b	                            je 0x40000d8	       152	depend.c	FUNCTION_4	IF_2
0x40000cd	             0x1d8	                            add eax, ebx	       153	depend.c	FUNCTION_4	IF_2
0x40000cf	          0x83f845	                           cmp eax, 0x45	       153	depend.c	FUNCTION_4	IF_2
0x40000d2	     0xf8f3c010000	                            jg 0x4000214	       153	depend.c	FUNCTION_4	IF_2
0x40000d8	      0x837c240c20	            cmp dword [rsp + 0xc], 0x20 	       164	depend.c	FUNCTION_4	IF_4
0x40000dd	     0xf85b3000000	                           jne 0x4000196	       164	depend.c	FUNCTION_4	IF_4
0x40000e3	          0x4c89ee	                            mov rsi, r13	       166	depend.c	FUNCTION_4	IF_4	CALL_2
0x40000e6	      0xbf20000000	                           mov edi, 0x20	       166	depend.c	FUNCTION_4	IF_4	CALL_2
0x40000eb	          0x4d89e6	                            mov r14, r12	       166	depend.c	FUNCTION_4	IF_4	CALL_2
0x40000ee	      0xe800000000	                          call 0x40000f3	       166	depend.c	FUNCTION_4	IF_4	CALL_2
0x40000f3	      0x450fb63c24	                  movzx r15d, byte [r12]	        90	depend.c	FUNCTION_3	FOR_1
0x40000f8	    0x830500000000	               add dword [0x040000ff], 1	       167	depend.c	FUNCTION_4	IF_4
0x40000ff	        0x4180ff09	                             cmp r15b, 9	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000103	     0xf859f000000	                           jne 0x40001a8	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000109	     0xf1f80000000	                         nop dword [rax]	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000110	          0x4c39e5	                            cmp rbp, r12	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000113	     0xf83c8000000	                           jae 0x40001e1	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000119	    0x41807c24ff5c	                cmp byte [r12 - 1], 0x5c	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x400011f	     0xf85bc000000	                           jne 0x40001e1	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000125	          0x4d85ed	                           test r13, r13	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000128	            0x750d	                           jne 0x4000137	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x400012a	      0xe991000000	                           jmp 0x40001c0	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x400012f	              0x90	                                     nop	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000130	      0x41807eff5c	                cmp byte [r14 - 1], 0x5c	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000135	            0x7516	                           jne 0x400014d	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000137	          0x4c89ee	                            mov rsi, r13	       109	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2	CALL_1
0x400013a	      0xbf5c000000	                           mov edi, 0x5c	       109	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2	CALL_1
0x400013f	        0x4983ee01	                              sub r14, 1	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x4000143	      0xe800000000	                          call 0x4000148	       109	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2	CALL_1
0x4000148	          0x4c39f5	                            cmp rbp, r14	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x400014b	            0x75e3	                           jne 0x4000130	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x400014d	          0x4584ff	                         test r15b, r15b	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000150	            0x7473	                            je 0x40001c5	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000152	          0x4c89ee	                            mov rsi, r13	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x4000155	      0xbf5c000000	                           mov edi, 0x5c	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x400015a	      0xe800000000	                          call 0x400015f	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x400015f	            0xeb25	                           jmp 0x4000186	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x4000161	     0xf1f80000000	                         nop dword [rax]	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x4000168	        0x4180ff20	                          cmp r15b, 0x20	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400016c	            0x74a2	                            je 0x4000110	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400016e	        0x4180ff24	                          cmp r15b, 0x24	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000172	            0x753f	                           jne 0x40001b3	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000174	          0x4d85ed	                           test r13, r13	       121	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x4000177	            0x7419	                            je 0x4000192	       121	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x4000179	          0x4c89ee	                            mov rsi, r13	       122	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x400017c	      0xbf24000000	                           mov edi, 0x24	       122	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000181	      0xe800000000	                          call 0x4000186	       122	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000186	        0x410fbeff	                         movsx edi, r15b	       134	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x400018a	          0x4c89ee	                            mov rsi, r13	       134	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x400018d	      0xe800000000	                          call 0x4000192	       134	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x4000192	        0x4983c401	                              add r12, 1	       134	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x4000196	      0x450fb63c24	                  movzx r15d, byte [r12]	        90	depend.c	FUNCTION_3	FOR_1
0x400019b	          0x4d89e6	                            mov r14, r12	        90	depend.c	FUNCTION_3	FOR_1
0x400019e	        0x4180ff09	                             cmp r15b, 9	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40001a2	     0xf8468ffffff	                            je 0x4000110	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40001a8	            0x7fbe	                            jg 0x4000168	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40001aa	          0x4584ff	                         test r15b, r15b	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40001ad	     0xf845dffffff	                            je 0x4000110	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40001b3	          0x4d85ed	                           test r13, r13	       133	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40001b6	            0x75ce	                           jne 0x4000186	       133	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40001b8	            0xebd8	                           jmp 0x4000192	       133	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40001ba	    0x660f1f440000	                    nop word [rax + rax]	       133	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x40001c0	          0x4584ff	                         test r15b, r15b	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x40001c3	            0x75cd	                           jne 0x4000192	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x40001c5	     0x11d00000000	             add dword [0x040001cb], ebx	       171	depend.c	FUNCTION_4
0x40001cb	      0x837c240c3a	            cmp dword [rsp + 0xc], 0x3a 	       173	depend.c	FUNCTION_4	IF_5
0x40001d0	            0x741f	                            je 0x40001f1	       173	depend.c	FUNCTION_4	IF_5
0x40001d2	        0x4883c418	                           add rsp, 0x18	       178	depend.c	FUNCTION_4
0x40001d6	              0x5b	                                 pop rbx	       178	depend.c	FUNCTION_4
0x40001d7	              0x5d	                                 pop rbp	       178	depend.c	FUNCTION_4
0x40001d8	            0x415c	                                 pop r12	       178	depend.c	FUNCTION_4
0x40001da	            0x415d	                                 pop r13	       178	depend.c	FUNCTION_4
0x40001dc	            0x415e	                                 pop r14	       178	depend.c	FUNCTION_4
0x40001de	            0x415f	                                 pop r15	       178	depend.c	FUNCTION_4
0x40001e0	              0xc3	                                     ret	       178	depend.c	FUNCTION_4
0x40001e1	          0x4584ff	                         test r15b, r15b	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x40001e4	            0x74df	                            je 0x40001c5	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x40001e6	          0x4d85ed	                           test r13, r13	       115	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001e9	     0xf8563ffffff	                           jne 0x4000152	       115	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001ef	            0xeba1	                           jmp 0x4000192	       115	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001f1	          0x4c89ee	                            mov rsi, r13	       175	depend.c	FUNCTION_4	IF_5	CALL_4
0x40001f4	      0xbf3a000000	                           mov edi, 0x3a	       175	depend.c	FUNCTION_4	IF_5	CALL_4
0x40001f9	      0xe800000000	                          call 0x40001fe	       175	depend.c	FUNCTION_4	IF_5	CALL_4
0x40001fe	    0x830500000000	               add dword [0x04000205], 1	       176	depend.c	FUNCTION_4	IF_5
0x4000205	        0x4883c418	                           add rsp, 0x18	       178	depend.c	FUNCTION_4
0x4000209	              0x5b	                                 pop rbx	       178	depend.c	FUNCTION_4
0x400020a	              0x5d	                                 pop rbp	       178	depend.c	FUNCTION_4
0x400020b	            0x415c	                                 pop r12	       178	depend.c	FUNCTION_4
0x400020d	            0x415d	                                 pop r13	       178	depend.c	FUNCTION_4
0x400020f	            0x415e	                                 pop r14	       178	depend.c	FUNCTION_4
0x4000211	            0x415f	                                 pop r15	       178	depend.c	FUNCTION_4
0x4000213	              0xc3	                                     ret	       178	depend.c	FUNCTION_4
0x4000214	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x4000219	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_11
0x400021e	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_11
0x4000221	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_11
0x4000226	      0xe800000000	                          call 0x400022b	        97	stdio2.h	CALL_11
0x400022b	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       161	depend.c	FUNCTION_4	IF_2	IF_3
0x400022f	      0xb800000000	                              mov eax, 0	       161	depend.c	FUNCTION_4	IF_2	IF_3
0x4000234	    0xc70500000000	               mov dword [0x0400023e], 0	       159	depend.c	FUNCTION_4	IF_2
0x400023e	            0x89c7	                            mov edi, eax	       161	depend.c	FUNCTION_4	IF_2	IF_3
0x4000240	          0x83fe20	                           cmp esi, 0x20	       161	depend.c	FUNCTION_4	IF_2	IF_3
0x4000243	           0xf45fe	                         cmovne edi, esi	       161	depend.c	FUNCTION_4	IF_2	IF_3
0x4000246	        0x897c240c	              mov dword [rsp + 0xc], edi	       161	depend.c	FUNCTION_4	IF_2	IF_3
0x400024a	      0xe947ffffff	                           jmp 0x4000196	       161	depend.c	FUNCTION_4	IF_2	IF_3
register_dependency	CALL,3:SWITCH,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1:IF,2	37
0x4000260	    0x48833d000000	               cmp qword [0x04000268], 0	        61	depend.c	FUNCTION_2	IF_1
0x4000268	            0x743c	                            je 0x40002a6	        61	depend.c	FUNCTION_2	IF_1
0x400026a	              0x55	                                push rbp	        58	depend.c	FUNCTION_2
0x400026b	              0x53	                                push rbx	        58	depend.c	FUNCTION_2
0x400026c	          0x4889fd	                            mov rbp, rdi	        58	depend.c	FUNCTION_2
0x400026f	        0x4883ec08	                              sub rsp, 8	        58	depend.c	FUNCTION_2
0x4000273	    0x488b1d000000	            mov rbx, qword [0x0400027a] 	        64	depend.c	FUNCTION_2	FOR_1
0x400027a	          0x4885db	                           test rbx, rbx	        64	depend.c	FUNCTION_2	FOR_1
0x400027d	            0x7512	                           jne 0x4000291	        64	depend.c	FUNCTION_2	FOR_1
0x400027f	            0xeb2f	                           jmp 0x40002b0	        64	depend.c	FUNCTION_2	FOR_1
0x4000281	     0xf1f80000000	                         nop dword [rax]	        64	depend.c	FUNCTION_2	FOR_1
0x4000288	        0x488b5b08	                mov rbx, qword [rbx + 8]	        64	depend.c	FUNCTION_2	FOR_1
0x400028c	          0x4885db	                           test rbx, rbx	        64	depend.c	FUNCTION_2	FOR_1
0x400028f	            0x741f	                            je 0x40002b0	        64	depend.c	FUNCTION_2	FOR_1
0x4000291	          0x488b33	                    mov rsi, qword [rbx]	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000294	          0x4889ef	                            mov rdi, rbp	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000297	      0xe800000000	                          call 0x400029c	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400029c	            0x85c0	                           test eax, eax	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400029e	            0x75e8	                           jne 0x4000288	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40002a0	        0x4883c408	                              add rsp, 8	        74	depend.c	FUNCTION_2
0x40002a4	              0x5b	                                 pop rbx	        74	depend.c	FUNCTION_2
0x40002a5	              0x5d	                                 pop rbp	        74	depend.c	FUNCTION_2
0x40002a6	            0xf3c3	                                     ret	        74	depend.c	FUNCTION_2
0x40002a8	     0xf1f84000000	                   nop dword [rax + rax]	        74	depend.c	FUNCTION_2
0x40002b0	      0xbf10000000	                           mov edi, 0x10	        70	depend.c	FUNCTION_2	CALL_2
0x40002b5	      0xe800000000	                          call 0x40002ba	        70	depend.c	FUNCTION_2	CALL_2
0x40002ba	          0x4889ef	                            mov rdi, rbp	        71	depend.c	FUNCTION_2	CALL_3
0x40002bd	          0x4889c3	                            mov rbx, rax	        70	depend.c	FUNCTION_2	CALL_2
0x40002c0	      0xe800000000	                          call 0x40002c5	        71	depend.c	FUNCTION_2	CALL_3
0x40002c5	          0x488903	                    mov qword [rbx], rax	        71	depend.c	FUNCTION_2	CALL_3
0x40002c8	    0x488b05000000	            mov rax, qword [0x040002cf] 	        72	depend.c	FUNCTION_2
0x40002cf	    0x48891d000000	            mov qword [0x040002d6], rbx 	        73	depend.c	FUNCTION_2
0x40002d6	        0x48894308	                mov qword [rbx + 8], rax	        72	depend.c	FUNCTION_2
0x40002da	        0x4883c408	                              add rsp, 8	        74	depend.c	FUNCTION_2
0x40002de	              0x5b	                                 pop rbx	        74	depend.c	FUNCTION_2
0x40002df	              0x5d	                                 pop rbp	        74	depend.c	FUNCTION_2
0x40002e0	            0xebc4	                           jmp 0x40002a6	        74	depend.c	FUNCTION_2
start_dependencies	CALL,0:SWITCH,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0:IF,0	2
0x4000250	    0x48893d000000	            mov qword [0x04000257], rdi 	        51	depend.c	FUNCTION_1
0x4000257	              0xc3	                                     ret	        51	depend.c	FUNCTION_1
print_dependencies	CALL,9:SWITCH,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1:IF,3	54
0x40002f0	    0x488b3d000000	            mov rdi, qword [0x040002f7] 	       188	depend.c	FUNCTION_5	IF_1
0x40002f7	          0x4885ff	                           test rdi, rdi	       188	depend.c	FUNCTION_5	IF_1
0x40002fa	     0xf8498000000	                            je 0x4000398	       188	depend.c	FUNCTION_5	IF_1
0x4000300	              0x55	                                push rbp	       184	depend.c	FUNCTION_5
0x4000301	              0x53	                                push rbx	       184	depend.c	FUNCTION_5
0x4000302	      0xbe00000000	                              mov esi, 0	       191	depend.c	FUNCTION_5	CALL_1
0x4000307	        0x4883ec08	                              sub rsp, 8	       184	depend.c	FUNCTION_5
0x400030b	      0xe800000000	                          call 0x4000310	       191	depend.c	FUNCTION_5	CALL_1
0x4000310	          0x4885c0	                           test rax, rax	       192	depend.c	FUNCTION_5	IF_2
0x4000313	          0x4889c5	                            mov rbp, rax	       191	depend.c	FUNCTION_5	CALL_1
0x4000316	    0x488b1d000000	            mov rbx, qword [0x0400031d] 	       194	depend.c	FUNCTION_5	IF_2	CALL_3
0x400031d	      0xba05000000	                              mov edx, 5	       194	depend.c	FUNCTION_5	IF_2	CALL_3
0x4000322	      0xbe00000000	                              mov esi, 0	       194	depend.c	FUNCTION_5	IF_2	CALL_3
0x4000327	     0xf8484000000	                            je 0x40003b1	       192	depend.c	FUNCTION_5	IF_2
0x400032d	    0x488b35000000	            mov rsi, qword [0x04000334] 	       199	depend.c	FUNCTION_5	CALL_4
0x4000334	      0xba3a000000	                           mov edx, 0x3a	       199	depend.c	FUNCTION_5	CALL_4
0x4000339	          0x4889c7	                            mov rdi, rax	       199	depend.c	FUNCTION_5	CALL_4
0x400033c	    0xc70500000000	               mov dword [0x04000346], 0	       198	depend.c	FUNCTION_5
0x4000346	      0xe8f5fcffff	                    call sym.wrap_output	       199	depend.c	FUNCTION_5	CALL_4
0x400034b	    0x488b1d000000	            mov rbx, qword [0x04000352] 	       200	depend.c	FUNCTION_5	FOR_1
0x4000352	          0x4885db	                           test rbx, rbx	       200	depend.c	FUNCTION_5	FOR_1
0x4000355	            0x7422	                            je 0x4000379	       200	depend.c	FUNCTION_5	FOR_1
0x4000357	    0x660f1f840000	                    nop word [rax + rax]	       200	depend.c	FUNCTION_5	FOR_1
0x4000360	          0x488b33	                    mov rsi, qword [rbx]	       201	depend.c	FUNCTION_5	CALL_5
0x4000363	      0xba20000000	                           mov edx, 0x20	       201	depend.c	FUNCTION_5	CALL_5
0x4000368	          0x4889ef	                            mov rdi, rbp	       201	depend.c	FUNCTION_5	CALL_5
0x400036b	      0xe8d0fcffff	                    call sym.wrap_output	       201	depend.c	FUNCTION_5	CALL_5
0x4000370	        0x488b5b08	                mov rbx, qword [rbx + 8]	       200	depend.c	FUNCTION_5	FOR_1
0x4000374	          0x4885db	                           test rbx, rbx	       200	depend.c	FUNCTION_5	FOR_1
0x4000377	            0x75e7	                           jne 0x4000360	       200	depend.c	FUNCTION_5	FOR_1
0x4000379	          0x4889ee	                            mov rsi, rbp	       203	depend.c	FUNCTION_5	CALL_6
0x400037c	      0xbf0a000000	                            mov edi, 0xa	       203	depend.c	FUNCTION_5	CALL_6
0x4000381	      0xe800000000	                          call 0x4000386	       203	depend.c	FUNCTION_5	CALL_6
0x4000386	          0x4889ef	                            mov rdi, rbp	       205	depend.c	FUNCTION_5	IF_3	CALL_7
0x4000389	      0xe800000000	                          call 0x400038e	       205	depend.c	FUNCTION_5	IF_3	CALL_7
0x400038e	            0x85c0	                           test eax, eax	       205	depend.c	FUNCTION_5	IF_3	CALL_7
0x4000390	            0x750e	                           jne 0x40003a0	       205	depend.c	FUNCTION_5	IF_3	CALL_7
0x4000392	        0x4883c408	                              add rsp, 8	       207	depend.c	FUNCTION_5
0x4000396	              0x5b	                                 pop rbx	       207	depend.c	FUNCTION_5
0x4000397	              0x5d	                                 pop rbp	       207	depend.c	FUNCTION_5
0x4000398	            0xf3c3	                                     ret	       207	depend.c	FUNCTION_5
0x400039a	    0x660f1f440000	                    nop word [rax + rax]	       207	depend.c	FUNCTION_5
0x40003a0	    0x488b1d000000	            mov rbx, qword [0x040003a7] 	       206	depend.c	FUNCTION_5	CALL_9
0x40003a7	      0xba05000000	                              mov edx, 5	       206	depend.c	FUNCTION_5	CALL_9
0x40003ac	      0xbe00000000	                              mov esi, 0	       206	depend.c	FUNCTION_5	CALL_9
0x40003b1	            0x31ff	                            xor edi, edi	       206	depend.c	FUNCTION_5	CALL_9
0x40003b3	      0xe800000000	                          call 0x40003b8	       206	depend.c	FUNCTION_5	CALL_9
0x40003b8	        0x4883c408	                              add rsp, 8	       207	depend.c	FUNCTION_5
0x40003bc	          0x4889de	                            mov rsi, rbx	       206	depend.c	FUNCTION_5	CALL_9
0x40003bf	          0x4889c7	                            mov rdi, rax	       206	depend.c	FUNCTION_5	CALL_9
0x40003c2	              0x5b	                                 pop rbx	       207	depend.c	FUNCTION_5
0x40003c3	              0x5d	                                 pop rbp	       207	depend.c	FUNCTION_5
0x40003c4	            0x31c0	                            xor eax, eax	       206	depend.c	FUNCTION_5	CALL_9
0x40003c6	      0xe900000000	                   jmp section_end..data	       206	depend.c	FUNCTION_5	CALL_9
