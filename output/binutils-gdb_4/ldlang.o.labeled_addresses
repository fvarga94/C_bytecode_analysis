lang_finish	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	2
0x4005730	      0xbf00000000	                              mov edi, 0	      1240	ldlang.c	FUNCTION_38	CALL_1
0x4005735	      0xe900000000	                           jmp 0x400573a	      1240	ldlang.c	FUNCTION_38	CALL_1
lang_memory_region_alias	IF,4:ELSE,0:SWITCH,0:functions,0:CALL,8:DO,0:FOR,2:WHILE,0	101
0x4005800	            0x4157	                                push r15	      1351	ldlang.c	FUNCTION_42
0x4005802	            0x4156	                                push r14	      1351	ldlang.c	FUNCTION_42
0x4005804	      0xb800000000	                              mov eax, 0	      1359	ldlang.c	FUNCTION_42	IF_1
0x4005809	            0x4155	                                push r13	      1351	ldlang.c	FUNCTION_42
0x400580b	            0x4154	                                push r12	      1351	ldlang.c	FUNCTION_42
0x400580d	          0x4989fd	                            mov r13, rdi	      1351	ldlang.c	FUNCTION_42
0x4005810	              0x55	                                push rbp	      1351	ldlang.c	FUNCTION_42
0x4005811	              0x53	                                push rbx	      1351	ldlang.c	FUNCTION_42
0x4005812	      0xb90a000000	                            mov ecx, 0xa	      1359	ldlang.c	FUNCTION_42	IF_1
0x4005817	          0x4889c7	                            mov rdi, rax	      1359	ldlang.c	FUNCTION_42	IF_1
0x400581a	          0x4989f7	                            mov r15, rsi	      1351	ldlang.c	FUNCTION_42
0x400581d	        0x4883ec08	                              sub rsp, 8	      1351	ldlang.c	FUNCTION_42
0x4005821	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1359	ldlang.c	FUNCTION_42	IF_1
0x4005823	     0xf84bf000000	                            je 0x40058e8	      1359	ldlang.c	FUNCTION_42	IF_1
0x4005829	      0xb90a000000	                            mov ecx, 0xa	      1360	ldlang.c	FUNCTION_42	IF_1
0x400582e	          0x4c89ee	                            mov rsi, r13	      1360	ldlang.c	FUNCTION_42	IF_1
0x4005831	          0x4889c7	                            mov rdi, rax	      1360	ldlang.c	FUNCTION_42	IF_1
0x4005834	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1360	ldlang.c	FUNCTION_42	IF_1
0x4005836	     0xf84ac000000	                            je 0x40058e8	      1360	ldlang.c	FUNCTION_42	IF_1
0x400583c	    0x4c8b35000000	            mov r14, qword [0x04005843] 	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4005843	          0x4d85f6	                           test r14, r14	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4005846	     0xf84c9000000	                            je 0x4005915	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400584c	          0x4531e4	                          xor r12d, r12d	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400584f	              0x90	                                     nop	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4005850	          0x4c89f3	                            mov rbx, r14	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4005853	            0xeb0c	                           jmp 0x4005861	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4005855	           0xf1f00	                         nop dword [rax]	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4005858	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x400585c	          0x4885db	                           test rbx, rbx	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x400585f	            0x7444	                            je 0x40058a5	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4005861	          0x4d85e4	                           test r12, r12	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4005864	          0x488b2b	                    mov rbp, qword [rbx]	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4005867	     0xf84d3000000	                            je 0x4005940	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x400586d	          0x4c89ee	                            mov rsi, r13	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4005870	          0x4889ef	                            mov rdi, rbp	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4005873	      0xe800000000	                          call 0x4005878	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4005878	            0x85c0	                           test eax, eax	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x400587a	            0x75dc	                           jne 0x4005858	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x400587c	            0x31ff	                            xor edi, edi	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400587e	      0xba05000000	                              mov edx, 5	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4005883	      0xbe00000000	                              mov esi, 0	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4005888	      0xe800000000	                          call 0x400588d	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400588d	            0x31f6	                            xor esi, esi	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400588f	          0x4889c7	                            mov rdi, rax	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4005892	          0x4c89ea	                            mov rdx, r13	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4005895	            0x31c0	                            xor eax, eax	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4005897	      0xe800000000	                          call 0x400589c	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400589c	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x40058a0	          0x4885db	                           test rbx, rbx	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x40058a3	            0x75bc	                           jne 0x4005861	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x40058a5	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40058a9	          0x4d85f6	                           test r14, r14	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40058ac	            0x75a2	                           jne 0x4005850	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40058ae	          0x4d85e4	                           test r12, r12	      1378	ldlang.c	FUNCTION_42	IF_4
0x40058b1	            0x7462	                            je 0x4005915	      1378	ldlang.c	FUNCTION_42	IF_4
0x40058b3	      0xbf10000000	                           mov edi, 0x10	      1384	ldlang.c	FUNCTION_42	CALL_7
0x40058b8	      0xe800000000	                          call 0x40058bd	      1384	ldlang.c	FUNCTION_42	CALL_7
0x40058bd	          0x4c89ef	                            mov rdi, r13	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40058c0	          0x4889c3	                            mov rbx, rax	      1384	ldlang.c	FUNCTION_42	CALL_7
0x40058c3	      0xe800000000	                          call 0x40058c8	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40058c8	          0x488903	                    mov qword [rbx], rax	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40058cb	      0x498b442408	                mov rax, qword [r12 + 8]	      1386	ldlang.c	FUNCTION_42
0x40058d0	        0x48894308	                mov qword [rbx + 8], rax	      1386	ldlang.c	FUNCTION_42
0x40058d4	      0x49895c2408	                mov qword [r12 + 8], rbx	      1387	ldlang.c	FUNCTION_42
0x40058d9	        0x4883c408	                              add rsp, 8	      1388	ldlang.c	FUNCTION_42
0x40058dd	              0x5b	                                 pop rbx	      1388	ldlang.c	FUNCTION_42
0x40058de	              0x5d	                                 pop rbp	      1388	ldlang.c	FUNCTION_42
0x40058df	            0x415c	                                 pop r12	      1388	ldlang.c	FUNCTION_42
0x40058e1	            0x415d	                                 pop r13	      1388	ldlang.c	FUNCTION_42
0x40058e3	            0x415e	                                 pop r14	      1388	ldlang.c	FUNCTION_42
0x40058e5	            0x415f	                                 pop r15	      1388	ldlang.c	FUNCTION_42
0x40058e7	              0xc3	                                     ret	      1388	ldlang.c	FUNCTION_42
0x40058e8	            0x31ff	                            xor edi, edi	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40058ea	      0xba05000000	                              mov edx, 5	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40058ef	      0xbe00000000	                              mov esi, 0	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40058f4	      0xe800000000	                          call 0x40058f9	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40058f9	            0x31f6	                            xor esi, esi	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40058fb	          0x4889c7	                            mov rdi, rax	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40058fe	            0x31c0	                            xor eax, eax	      1361	ldlang.c	FUNCTION_42	CALL_2
0x4005900	      0xe800000000	                          call 0x4005905	      1361	ldlang.c	FUNCTION_42	CALL_2
0x4005905	    0x4c8b35000000	            mov r14, qword [0x0400590c] 	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400590c	          0x4d85f6	                           test r14, r14	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400590f	     0xf8537ffffff	                           jne 0x400584c	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4005915	      0xba05000000	                              mov edx, 5	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x400591a	      0xbe00000000	                              mov esi, 0	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x400591f	            0x31ff	                            xor edi, edi	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4005921	      0xe800000000	                          call 0x4005926	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4005926	          0x4c89e9	                            mov rcx, r13	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4005929	          0x4889c7	                            mov rdi, rax	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x400592c	          0x4c89fa	                            mov rdx, r15	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x400592f	            0x31f6	                            xor esi, esi	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4005931	            0x31c0	                            xor eax, eax	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4005933	          0x4531e4	                          xor r12d, r12d	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4005936	      0xe800000000	                          call 0x400593b	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x400593b	      0xe973ffffff	                           jmp 0x40058b3	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4005940	          0x4c89fe	                            mov rsi, r15	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4005943	          0x4889ef	                            mov rdi, rbp	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4005946	      0xe800000000	                          call 0x400594b	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x400594b	            0x85c0	                           test eax, eax	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x400594d	        0x4d0f44e6	                          cmove r12, r14	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4005951	      0xe917ffffff	                           jmp 0x400586d	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
lang_enter_overlay	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	22
0x400b9b0	              0x55	                                push rbp	      7948	ldlang.c	FUNCTION_188
0x400b9b1	              0x53	                                push rbx	      7948	ldlang.c	FUNCTION_188
0x400b9b2	          0x4889fd	                            mov rbp, rdi	      7948	ldlang.c	FUNCTION_188
0x400b9b5	          0x4889f3	                            mov rbx, rsi	      7948	ldlang.c	FUNCTION_188
0x400b9b8	        0x4883ec08	                              sub rsp, 8	      7948	ldlang.c	FUNCTION_188
0x400b9bc	    0x48833d000000	               cmp qword [0x0400b9c4], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400b9c4	            0x742a	                            je 0x400b9f0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400b9c6	      0xbe101f0000	                         mov esi, 0x1f10	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400b9cb	      0xbf00000000	                              mov edi, 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400b9d0	      0xe800000000	                          call 0x400b9d5	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400b9d5	    0x48892d000000	            mov qword [0x0400b9dc], rbp 	      7954	ldlang.c	FUNCTION_188
0x400b9dc	    0x48891d000000	            mov qword [0x0400b9e3], rbx 	      7955	ldlang.c	FUNCTION_188
0x400b9e3	        0x4883c408	                              add rsp, 8	      7956	ldlang.c	FUNCTION_188
0x400b9e7	              0x5b	                                 pop rbx	      7956	ldlang.c	FUNCTION_188
0x400b9e8	              0x5d	                                 pop rbp	      7956	ldlang.c	FUNCTION_188
0x400b9e9	              0xc3	                                     ret	      7956	ldlang.c	FUNCTION_188
0x400b9ea	    0x660f1f440000	                    nop word [rax + rax]	      7956	ldlang.c	FUNCTION_188
0x400b9f0	    0x48833d000000	               cmp qword [0x0400b9f8], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400b9f8	            0x75cc	                           jne 0x400b9c6	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400b9fa	    0x48833d000000	               cmp qword [0x0400ba02], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400ba02	            0x75c2	                           jne 0x400b9c6	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400ba04	            0xebcf	                           jmp 0x400b9d5	      7950	ldlang.c	FUNCTION_188	CALL_1
get_target	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	8
0x40002e0	        0x4883ec08	                              sub rsp, 8	      2934	ldlang.c	FUNCTION_68
0x40002e4	          0x488b3f	                    mov rdi, qword [rdi]	      2937	ldlang.c	FUNCTION_68
0x40002e7	      0xe800000000	                          call 0x40002ec	      2937	ldlang.c	FUNCTION_68
0x40002ec	            0x85c0	                           test eax, eax	      2937	ldlang.c	FUNCTION_68
0x40002ee	           0xf94c0	                                 sete al	      2937	ldlang.c	FUNCTION_68
0x40002f1	        0x4883c408	                              add rsp, 8	      2938	ldlang.c	FUNCTION_68
0x40002f5	           0xfb6c0	                           movzx eax, al	      2937	ldlang.c	FUNCTION_68
0x40002f8	              0xc3	                                     ret	      2938	ldlang.c	FUNCTION_68
lang_add_map	IF,0:ELSE,0:SWITCH,1:functions,0:CALL,0:DO,0:FOR,0:WHILE,1	6
0x400adf0	            0xeb0a	                           jmp 0x400adfc	      7522	ldlang.c	FUNCTION_169
0x400adf2	    0x660f1f440000	                    nop word [rax + rax]	      7522	ldlang.c	FUNCTION_169
0x400adf8	        0x4883c701	                              add rdi, 1	      7531	ldlang.c	FUNCTION_169	WHILE_1
0x400adfc	          0x803f00	                       cmp byte [rdi], 0	      7523	ldlang.c	FUNCTION_169	WHILE_1
0x400adff	            0x75f7	                           jne 0x400adf8	      7523	ldlang.c	FUNCTION_169	WHILE_1
0x400ae01	            0xf3c3	                                     ret	      7523	ldlang.c	FUNCTION_169	WHILE_1
lang_register_vers_node	IF,12:ELSE,3:SWITCH,0:functions,0:CALL,17:DO,0:FOR,8:WHILE,2	262
0x400c550	            0x4157	                                push r15	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c552	            0x4156	                                push r14	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c554	      0xb800000000	                              mov eax, 0	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x400c559	            0x4155	                                push r13	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c55b	            0x4154	                                push r12	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c55d	          0x4989f4	                            mov r12, rsi	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c560	              0x55	                                push rbp	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c561	              0x53	                                push rbx	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c562	          0x4889fd	                            mov rbp, rdi	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c565	        0x4883ec18	                           sub rsp, 0x18	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c569	    0x488b1d000000	            mov rbx, qword [0x0400c570] 	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400c570	          0x4885ff	                           test rdi, rdi	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x400c573	        0x480f44e8	                          cmove rbp, rax	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x400c577	      0x4889542408	                mov qword [rsp + 8], rdx	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400c57c	          0x4885db	                           test rbx, rbx	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400c57f	            0x747e	                            je 0x400c5ff	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400c581	        0x807d0000	                       cmp byte [rbp], 0	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400c585	            0x7409	                            je 0x400c590	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400c587	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400c58b	          0x803f00	                       cmp byte [rdi], 0	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400c58e	            0x755b	                           jne 0x400c5eb	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400c590	      0xba05000000	                              mov edx, 5	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400c595	      0xbe00000000	                              mov esi, 0	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400c59a	            0x31ff	                            xor edi, edi	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400c59c	      0xe800000000	                          call 0x400c5a1	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400c5a1	          0x4889c7	                            mov rdi, rax	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400c5a4	            0x31c0	                            xor eax, eax	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400c5a6	      0xe800000000	                          call 0x400c5ab	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400c5ab	        0x4883c418	                           add rsp, 0x18	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c5af	          0x4c89e7	                            mov rdi, r12	      8464	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_3
0x400c5b2	              0x5b	                                 pop rbx	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c5b3	              0x5d	                                 pop rbp	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c5b4	            0x415c	                                 pop r12	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c5b6	            0x415d	                                 pop r13	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c5b8	            0x415e	                                 pop r14	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c5ba	            0x415f	                                 pop r15	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c5bc	      0xe900000000	                           jmp 0x400c5c1	      8464	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_3
0x400c5c1	            0x31ff	                            xor edi, edi	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5c3	      0xba05000000	                              mov edx, 5	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5c8	      0xbe00000000	                              mov esi, 0	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5cd	      0xe800000000	                          call 0x400c5d2	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5d2	          0x4889ee	                            mov rsi, rbp	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5d5	          0x4889c7	                            mov rdi, rax	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5d8	            0x31c0	                            xor eax, eax	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5da	      0xe800000000	                          call 0x400c5df	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5df	          0x488b1b	                    mov rbx, qword [rbx]	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400c5e2	          0x4885db	                           test rbx, rbx	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400c5e5	            0x7418	                            je 0x400c5ff	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400c5e7	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400c5eb	          0x4889ee	                            mov rsi, rbp	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5ee	      0xe800000000	                          call 0x400c5f3	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5f3	            0x85c0	                           test eax, eax	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5f5	            0x74ca	                            je 0x400c5c1	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400c5f7	          0x488b1b	                    mov rbx, qword [rbx]	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400c5fa	          0x4885db	                           test rbx, rbx	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400c5fd	            0x75e8	                           jne 0x400c5e7	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400c5ff	      0x498d7c2418	                   lea rdi, [r12 + 0x18]	      8473	ldlang.c	ELSE_4	FUNCTION_199	CALL_6
0x400c604	      0xe8f742ffff	call sym.lang_finalize_version_expr_head	      8473	ldlang.c	ELSE_4	FUNCTION_199	CALL_6
0x400c609	      0x498d7c2438	                   lea rdi, [r12 + 0x38]	      8474	ldlang.c	ELSE_4	FUNCTION_199	CALL_7
0x400c60e	      0xe8ed42ffff	call sym.lang_finalize_version_expr_head	      8474	ldlang.c	ELSE_4	FUNCTION_199	CALL_7
0x400c613	      0x4d8b6c2418	            mov r13, qword [r12 + 0x18] 	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x400c618	          0x4d85ed	                           test r13, r13	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x400c61b	     0xf84b8000000	                            je 0x400c6d9	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x400c621	     0xf1f80000000	                         nop dword [rax]	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x400c628	    0x4c8b35000000	            mov r14, qword [0x0400c62f] 	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c62f	          0x4d85f6	                           test r14, r14	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c632	     0xf8494000000	                            je 0x400c6cc	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c638	     0xf1f84000000	                   nop dword [rax + rax]	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c640	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400c644	          0x4885ff	                           test rdi, rdi	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400c647	     0xf84a3020000	                            je 0x400c8f0	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400c64d	      0x41f6451001	               test byte [r13 + 0x10], 1	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400c652	     0xf8508020000	                           jne 0x400c860	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400c658	        0x498b5e48	            mov rbx, qword [r14 + 0x48] 	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c65c	          0x4885db	                           test rbx, rbx	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c65f	            0x750f	                           jne 0x400c670	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c661	            0xeb5d	                           jmp 0x400c6c0	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c663	       0xf1f440000	                   nop dword [rax + rax]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c668	          0x488b1b	                    mov rbx, qword [rbx]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c66b	          0x4885db	                           test rbx, rbx	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c66e	            0x7450	                            je 0x400c6c0	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c670	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c674	        0x488b7308	                mov rsi, qword [rbx + 8]	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c678	          0x4c89ff	                            mov rdi, r15	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c67b	      0xe800000000	                          call 0x400c680	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c680	            0x85c0	                           test eax, eax	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c682	            0x75e4	                           jne 0x400c668	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c684	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c689	          0x324310	               xor al, byte [rbx + 0x10]	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c68c	            0xa838	                           test al, 0x38	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c68e	            0x75d8	                           jne 0x400c668	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400c690	            0x31ff	                            xor edi, edi	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400c692	      0xba05000000	                              mov edx, 5	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400c697	      0xbe00000000	                              mov esi, 0	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400c69c	      0xe800000000	                          call 0x400c6a1	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400c6a1	          0x4c89fe	                            mov rsi, r15	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400c6a4	          0x4889c7	                            mov rdi, rax	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400c6a7	            0x31c0	                            xor eax, eax	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400c6a9	      0xe800000000	                          call 0x400c6ae	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400c6ae	          0x488b1b	                    mov rbx, qword [rbx]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c6b1	          0x4885db	                           test rbx, rbx	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c6b4	            0x75ba	                           jne 0x400c670	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c6b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400c6c0	          0x4d8b36	                    mov r14, qword [r14]	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c6c3	          0x4d85f6	                           test r14, r14	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c6c6	     0xf8574ffffff	                           jne 0x400c640	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c6cc	        0x4d8b6d00	                    mov r13, qword [r13]	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x400c6d0	          0x4d85ed	                           test r13, r13	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x400c6d3	     0xf854fffffff	                           jne 0x400c628	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x400c6d9	      0x4d8b6c2438	            mov r13, qword [r12 + 0x38] 	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x400c6de	          0x4d85ed	                           test r13, r13	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x400c6e1	     0xf84b2000000	                            je 0x400c799	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x400c6e7	    0x660f1f840000	                    nop word [rax + rax]	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x400c6f0	    0x4c8b35000000	            mov r14, qword [0x0400c6f7] 	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c6f7	          0x4d85f6	                           test r14, r14	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c6fa	     0xf848c000000	                            je 0x400c78c	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c700	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400c704	          0x4885ff	                           test rdi, rdi	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400c707	     0xf84c3010000	                            je 0x400c8d0	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400c70d	      0x41f6451001	               test byte [r13 + 0x10], 1	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400c712	     0xf85d8000000	                           jne 0x400c7f0	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400c718	        0x498b5e28	            mov rbx, qword [r14 + 0x28] 	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c71c	          0x4885db	                           test rbx, rbx	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c71f	            0x750f	                           jne 0x400c730	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c721	            0xeb5d	                           jmp 0x400c780	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c723	       0xf1f440000	                   nop dword [rax + rax]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c728	          0x488b1b	                    mov rbx, qword [rbx]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c72b	          0x4885db	                           test rbx, rbx	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c72e	            0x7450	                            je 0x400c780	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c730	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c734	        0x488b7308	                mov rsi, qword [rbx + 8]	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c738	          0x4c89ff	                            mov rdi, r15	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c73b	      0xe800000000	                          call 0x400c740	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c740	            0x85c0	                           test eax, eax	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c742	            0x75e4	                           jne 0x400c728	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c744	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c749	          0x324310	               xor al, byte [rbx + 0x10]	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c74c	            0xa838	                           test al, 0x38	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c74e	            0x75d8	                           jne 0x400c728	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400c750	            0x31ff	                            xor edi, edi	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400c752	      0xba05000000	                              mov edx, 5	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400c757	      0xbe00000000	                              mov esi, 0	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400c75c	      0xe800000000	                          call 0x400c761	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400c761	          0x4c89fe	                            mov rsi, r15	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400c764	          0x4889c7	                            mov rdi, rax	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400c767	            0x31c0	                            xor eax, eax	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400c769	      0xe800000000	                          call 0x400c76e	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400c76e	          0x488b1b	                    mov rbx, qword [rbx]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c771	          0x4885db	                           test rbx, rbx	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c774	            0x75ba	                           jne 0x400c730	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c776	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400c780	          0x4d8b36	                    mov r14, qword [r14]	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c783	          0x4d85f6	                           test r14, r14	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c786	     0xf8574ffffff	                           jne 0x400c700	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c78c	        0x4d8b6d00	                    mov r13, qword [r13]	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x400c790	          0x4d85ed	                           test r13, r13	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x400c793	     0xf8557ffffff	                           jne 0x400c6f0	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x400c799	      0x488b442408	                mov rax, qword [rsp + 8]	      8534	ldlang.c	ELSE_4	FUNCTION_199
0x400c79e	      0x49896c2408	                mov qword [r12 + 8], rbp	      8535	ldlang.c	ELSE_4	FUNCTION_199
0x400c7a3	      0x4989442458	             mov qword [r12 + 0x58], rax	      8534	ldlang.c	ELSE_4	FUNCTION_199
0x400c7a8	            0x31c0	                            xor eax, eax	      8542	ldlang.c	ELSE_4	FUNCTION_199	ELSE_3
0x400c7aa	        0x807d0000	                       cmp byte [rbp], 0	      8536	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x400c7ae	     0xf8558010000	                           jne 0x400c90c	      8536	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x400c7b4	    0x488b15000000	            mov rdx, qword [0x0400c7bb] 	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7bb	      0x4189442410	             mov dword [r12 + 0x10], eax	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7c0	          0x4885d2	                           test rdx, rdx	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7c3	            0x750e	                           jne 0x400c7d3	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7c5	      0xe956010000	                           jmp 0x400c920	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7ca	    0x660f1f440000	                    nop word [rax + rax]	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7d0	          0x4889c2	                            mov rdx, rax	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7d3	          0x488b02	                    mov rax, qword [rdx]	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7d6	          0x4885c0	                           test rax, rax	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7d9	            0x75f5	                           jne 0x400c7d0	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c7db	          0x4c8922	                    mov qword [rdx], r12	      8546	ldlang.c	ELSE_4	FUNCTION_199
0x400c7de	        0x4883c418	                           add rsp, 0x18	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7e2	              0x5b	                                 pop rbx	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7e3	              0x5d	                                 pop rbp	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7e4	            0x415c	                                 pop r12	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7e6	            0x415d	                                 pop r13	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7e8	            0x415e	                                 pop r14	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7ea	            0x415f	                                 pop r15	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7ec	              0xc3	                                     ret	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7ed	           0xf1f00	                         nop dword [rax]	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400c7f0	          0x4c89ee	                            mov rsi, r13	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400c7f3	      0xe800000000	                          call 0x400c7f8	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400c7f8	          0x4885c0	                           test rax, rax	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c7fb	          0x4889c3	                            mov rbx, rax	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400c7fe	            0x7514	                           jne 0x400c814	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c800	      0xe97bffffff	                           jmp 0x400c780	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c805	           0xf1f00	                         nop dword [rax]	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c808	          0x488b1b	                    mov rbx, qword [rbx]	      8522	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c80b	          0x4885db	                           test rbx, rbx	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c80e	     0xf846cffffff	                            je 0x400c780	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c814	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c818	        0x488b7308	                mov rsi, qword [rbx + 8]	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c81c	          0x4c89ff	                            mov rdi, r15	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c81f	      0xe800000000	                          call 0x400c824	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c824	            0x85c0	                           test eax, eax	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c826	     0xf8554ffffff	                           jne 0x400c780	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400c82c	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x400c831	          0x324310	               xor al, byte [rbx + 0x10]	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x400c834	            0xa838	                           test al, 0x38	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x400c836	            0x75d0	                           jne 0x400c808	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x400c838	            0x31ff	                            xor edi, edi	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c83a	      0xba05000000	                              mov edx, 5	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c83f	      0xbe00000000	                              mov esi, 0	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c844	      0xe800000000	                          call 0x400c849	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c849	          0x4c89fe	                            mov rsi, r15	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c84c	          0x4889c7	                            mov rdi, rax	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c84f	            0x31c0	                            xor eax, eax	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c851	      0xe800000000	                          call 0x400c856	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c856	            0xebb0	                           jmp 0x400c808	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c858	     0xf1f84000000	                   nop dword [rax + rax]	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400c860	          0x4c89ee	                            mov rsi, r13	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400c863	      0xe800000000	                          call 0x400c868	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400c868	          0x4885c0	                           test rax, rax	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c86b	          0x4889c3	                            mov rbx, rax	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400c86e	            0x7514	                           jne 0x400c884	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c870	      0xe94bfeffff	                           jmp 0x400c6c0	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c875	           0xf1f00	                         nop dword [rax]	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c878	          0x488b1b	                    mov rbx, qword [rbx]	      8494	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c87b	          0x4885db	                           test rbx, rbx	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c87e	     0xf843cfeffff	                            je 0x400c6c0	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c884	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c888	        0x488b7308	                mov rsi, qword [rbx + 8]	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c88c	          0x4c89ff	                            mov rdi, r15	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c88f	      0xe800000000	                          call 0x400c894	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c894	            0x85c0	                           test eax, eax	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c896	     0xf8524feffff	                           jne 0x400c6c0	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400c89c	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x400c8a1	          0x324310	               xor al, byte [rbx + 0x10]	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x400c8a4	            0xa838	                           test al, 0x38	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x400c8a6	            0x75d0	                           jne 0x400c878	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x400c8a8	            0x31ff	                            xor edi, edi	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8aa	      0xba05000000	                              mov edx, 5	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8af	      0xbe00000000	                              mov esi, 0	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8b4	      0xe800000000	                          call 0x400c8b9	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8b9	          0x4c89fe	                            mov rsi, r15	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8bc	          0x4889c7	                            mov rdi, rax	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8bf	            0x31c0	                            xor eax, eax	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8c1	      0xe800000000	                          call 0x400c8c6	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8c6	            0xebb0	                           jmp 0x400c878	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8c8	     0xf1f84000000	                   nop dword [rax + rax]	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400c8d0	      0x41f6451001	               test byte [r13 + 0x10], 1	      8525	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10
0x400c8d5	     0xf843dfeffff	                            je 0x400c718	      8525	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10
0x400c8db	          0x4d8b36	                    mov r14, qword [r14]	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c8de	          0x4d85f6	                           test r14, r14	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c8e1	     0xf8519feffff	                           jne 0x400c700	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c8e7	      0xe9a0feffff	                           jmp 0x400c78c	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c8ec	         0xf1f4000	                         nop dword [rax]	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400c8f0	      0x41f6451001	               test byte [r13 + 0x10], 1	      8497	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6
0x400c8f5	     0xf845dfdffff	                            je 0x400c658	      8497	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6
0x400c8fb	          0x4d8b36	                    mov r14, qword [r14]	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c8fe	          0x4d85f6	                           test r14, r14	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c901	     0xf8539fdffff	                           jne 0x400c640	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c907	      0xe9c0fdffff	                           jmp 0x400c6cc	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400c90c	    0x8b0500000000	            mov eax, dword [0x0400c912] 	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x400c912	          0x83c001	                              add eax, 1	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x400c915	    0x890500000000	            mov dword [0x0400c91b], eax 	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x400c91b	      0xe994feffff	                           jmp 0x400c7b4	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x400c920	      0xba00000000	                              mov edx, 0	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400c925	      0xe9b1feffff	                           jmp 0x400c7db	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
sort_sections_by_lma	IF,4:ELSE,3:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	17
0x4000140	          0x488b0f	                    mov rcx, qword [rdi]	      4743	ldlang.c	FUNCTION_110
0x4000143	          0x488b16	                    mov rdx, qword [rsi]	      4744	ldlang.c	FUNCTION_110
0x4000146	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      4746	ldlang.c	FUNCTION_110	IF_1
0x400014a	        0x48394130	            cmp qword [rcx + 0x30], rax 	      4746	ldlang.c	FUNCTION_110	IF_1
0x400014e	            0x7220	                            jb 0x4000170	      4746	ldlang.c	FUNCTION_110	IF_1
0x4000150	      0xb801000000	                              mov eax, 1	      4749	ldlang.c	FUNCTION_110	ELSE_1	IF_2
0x4000155	            0x771e	                            ja 0x4000175	      4748	ldlang.c	FUNCTION_110	ELSE_1	IF_2
0x4000157	          0x8b4208	                mov eax, dword [rdx + 8]	      4750	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x400015a	          0x394108	                cmp dword [rcx + 8], eax	      4750	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x400015d	      0xbaffffffff	                     mov edx, 0xffffffff	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000162	           0xf97c0	                                 seta al	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000165	           0xfb6c0	                           movzx eax, al	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000168	           0xf42c2	                          cmovb eax, edx	      4747	ldlang.c	FUNCTION_110	IF_1
0x400016b	              0xc3	                                     ret	      4747	ldlang.c	FUNCTION_110	IF_1
0x400016c	         0xf1f4000	                         nop dword [rax]	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000170	      0xb8ffffffff	                     mov eax, 0xffffffff	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000175	            0xf3c3	                                     ret	      4756	ldlang.c	FUNCTION_110
walk_wild_section_general	IF,3:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,1:WHILE,1	90
0x4003490	            0x4157	                                push r15	       290	ldlang.c	FUNCTION_8
0x4003492	            0x4156	                                push r14	       290	ldlang.c	FUNCTION_8
0x4003494	            0x4155	                                push r13	       290	ldlang.c	FUNCTION_8
0x4003496	            0x4154	                                push r12	       290	ldlang.c	FUNCTION_8
0x4003498	              0x55	                                push rbp	       290	ldlang.c	FUNCTION_8
0x4003499	              0x53	                                push rbx	       290	ldlang.c	FUNCTION_8
0x400349a	        0x4883ec18	                           sub rsp, 0x18	       290	ldlang.c	FUNCTION_8
0x400349e	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034a2	      0x48894c2408	                mov qword [rsp + 8], rcx	       290	ldlang.c	FUNCTION_8
0x40034a7	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034ae	          0x4885db	                           test rbx, rbx	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034b1	     0xf848e000000	                            je 0x4003545	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034b7	          0x4989fc	                            mov r12, rdi	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034ba	          0x4889f5	                            mov rbp, rsi	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034bd	          0x4989d6	                            mov r14, rdx	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034c0	    0x49bf01002000	             movabs r15, 0x2000000200001	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034ca	    0x660f1f440000	                    nop word [rax + rax]	       294	ldlang.c	FUNCTION_8	FOR_1
0x40034d0	      0x4d8b6c2420	            mov r13, qword [r12 + 0x20] 	       296	ldlang.c	FUNCTION_8	FOR_1
0x40034d5	          0x4d85ed	                           test r13, r13	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x40034d8	     0xf84b1000000	                            je 0x400358f	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x40034de	            0x6690	                                     nop	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x40034e0	        0x498b7d08	                mov rdi, qword [r13 + 8]	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x40034e4	          0x4885ff	                           test rdi, rdi	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x40034e7	            0x746f	                            je 0x4003558	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x40034e9	           0xfb607	                   movzx eax, byte [rdi]	      1114	string2.h	FUNCTION_223	WHILE_1
0x40034ec	          0x488b33	                    mov rsi, qword [rbx]	       306	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x40034ef	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x40034f1	     0xf8491000000	                            je 0x4003588	      1114	string2.h	FUNCTION_223	WHILE_1
0x40034f7	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x40034fa	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x40034fc	            0x7706	                            ja 0x4003504	      1114	string2.h	FUNCTION_223	WHILE_1
0x40034fe	        0x490fa3c7	                             bt r15, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003502	            0x7224	                            jb 0x4003528	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003504	          0x4889fa	                            mov rdx, rdi	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003507	    0x660f1f840000	                    nop word [rax + rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003510	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4003514	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003517	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003519	            0x746d	                            je 0x4003588	      1114	string2.h	FUNCTION_223	WHILE_1
0x400351b	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400351e	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003520	            0x77ee	                            ja 0x4003510	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003522	        0x490fa3c7	                             bt r15, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003526	            0x73e8	                           jae 0x4003510	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003528	            0x31d2	                            xor edx, edx	       147	ldlang.c	FUNCTION_2	CALL_1
0x400352a	      0xe800000000	                          call 0x400352f	       147	ldlang.c	FUNCTION_2	CALL_1
0x400352f	            0x85c0	                           test eax, eax	       311	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_3
0x4003531	            0x7425	                            je 0x4003558	       311	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_3
0x4003533	        0x4d8b6d00	                    mov r13, qword [r13]	       314	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x4003537	          0x4d85ed	                           test r13, r13	       300	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x400353a	            0x75a4	                           jne 0x40034e0	       300	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x400353c	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x4003540	          0x4885db	                           test rbx, rbx	       294	ldlang.c	FUNCTION_8	FOR_1
0x4003543	            0x758b	                           jne 0x40034d0	       294	ldlang.c	FUNCTION_8	FOR_1
0x4003545	        0x4883c418	                           add rsp, 0x18	       317	ldlang.c	FUNCTION_8
0x4003549	              0x5b	                                 pop rbx	       317	ldlang.c	FUNCTION_8
0x400354a	              0x5d	                                 pop rbp	       317	ldlang.c	FUNCTION_8
0x400354b	            0x415c	                                 pop r12	       317	ldlang.c	FUNCTION_8
0x400354d	            0x415d	                                 pop r13	       317	ldlang.c	FUNCTION_8
0x400354f	            0x415e	                                 pop r14	       317	ldlang.c	FUNCTION_8
0x4003551	            0x415f	                                 pop r15	       317	ldlang.c	FUNCTION_8
0x4003553	              0xc3	                                     ret	       317	ldlang.c	FUNCTION_8
0x4003554	         0xf1f4000	                         nop dword [rax]	       317	ldlang.c	FUNCTION_8
0x4003558	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x400355c	          0x4889ee	                            mov rsi, rbp	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x400355f	      0xe80cfcffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003564	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003566	            0x75cb	                           jne 0x4003533	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003568	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x400356d	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       279	ldlang.c	FUNCTION_7
0x4003572	          0x4989e8	                             mov r8, rbp	       279	ldlang.c	FUNCTION_7
0x4003575	          0x4889da	                            mov rdx, rbx	       279	ldlang.c	FUNCTION_7
0x4003578	          0x4c89ee	                            mov rsi, r13	       279	ldlang.c	FUNCTION_7
0x400357b	          0x4c89e7	                            mov rdi, r12	       279	ldlang.c	FUNCTION_7
0x400357e	          0x41ffd6	                                call r14	       279	ldlang.c	FUNCTION_7
0x4003581	            0xebb0	                           jmp 0x4003533	       279	ldlang.c	FUNCTION_7
0x4003583	       0xf1f440000	                   nop dword [rax + rax]	       279	ldlang.c	FUNCTION_7
0x4003588	      0xe800000000	                          call 0x400358d	       148	ldlang.c	FUNCTION_2
0x400358d	            0xeba0	                           jmp 0x400352f	       148	ldlang.c	FUNCTION_2
0x400358f	          0x4889da	                            mov rdx, rbx	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4003592	            0x31f6	                            xor esi, esi	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4003594	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4003599	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400359e	          0x4989e8	                             mov r8, rbp	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x40035a1	          0x4c89e7	                            mov rdi, r12	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x40035a4	          0x41ffd6	                                call r14	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x40035a7	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x40035ab	          0x4885db	                           test rbx, rbx	       294	ldlang.c	FUNCTION_8	FOR_1
0x40035ae	     0xf851cffffff	                           jne 0x40034d0	       294	ldlang.c	FUNCTION_8	FOR_1
0x40035b4	            0xeb8f	                           jmp 0x4003545	       294	ldlang.c	FUNCTION_8	FOR_1
walk_wild_file_in_exclude_list	IF,4:ELSE,2:SWITCH,0:functions,0:CALL,4:DO,0:FOR,1:WHILE,0	175
0x4003170	          0x4885ff	                           test rdi, rdi	       234	ldlang.c	FUNCTION_6	FOR_1
0x4003173	     0xf8443020000	                            je 0x40033bc	       234	ldlang.c	FUNCTION_6	FOR_1
0x4003179	            0x4156	                                push r14	       231	ldlang.c	FUNCTION_6
0x400317b	            0x4155	                                push r13	       231	ldlang.c	FUNCTION_6
0x400317d	          0x4989fd	                            mov r13, rdi	       231	ldlang.c	FUNCTION_6
0x4003180	            0x4154	                                push r12	       231	ldlang.c	FUNCTION_6
0x4003182	              0x55	                                push rbp	       231	ldlang.c	FUNCTION_6
0x4003183	    0x48bd01002000	             movabs rbp, 0x2000000200001	       231	ldlang.c	FUNCTION_6
0x400318d	              0x53	                                push rbx	       231	ldlang.c	FUNCTION_6
0x400318e	          0x4889f3	                            mov rbx, rsi	       231	ldlang.c	FUNCTION_6
0x4003191	     0xf1f80000000	                         nop dword [rax]	       231	ldlang.c	FUNCTION_6
0x4003198	     0xfbe35000000	           movsx esi, byte [0x0400319f] 	       159	ldlang.c	FUNCTION_3	IF_1
0x400319f	        0x4d8b6500	                    mov r12, qword [r13]	       238	ldlang.c	FUNCTION_6	FOR_1	CALL_1
0x40031a3	          0x4084f6	                           test sil, sil	       159	ldlang.c	FUNCTION_3	IF_1
0x40031a6	     0xf8424010000	                            je 0x40032d0	       159	ldlang.c	FUNCTION_3	IF_1
0x40031ac	          0x4c89e7	                            mov rdi, r12	       162	ldlang.c	FUNCTION_3
0x40031af	      0xe800000000	                          call 0x40031b4	       162	ldlang.c	FUNCTION_3
0x40031b4	          0x4885c0	                           test rax, rax	       240	ldlang.c	FUNCTION_6	FOR_1	IF_1
0x40031b7	          0x4989c6	                            mov r14, rax	       162	ldlang.c	FUNCTION_3
0x40031ba	     0xf8410010000	                            je 0x40032d0	       240	ldlang.c	FUNCTION_6	FOR_1	IF_1
0x40031c0	         0xfb64001	               movzx eax, byte [rax + 1]	       184	ldlang.c	FUNCTION_4	IF_1
0x40031c4	            0x84c0	                             test al, al	       184	ldlang.c	FUNCTION_4	IF_1
0x40031c6	     0xf85a4000000	                           jne 0x4003270	       184	ldlang.c	FUNCTION_4	IF_1
0x40031cc	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       187	ldlang.c	FUNCTION_4	IF_1
0x40031d0	          0x4d39f4	                            cmp r12, r14	       187	ldlang.c	FUNCTION_4	IF_1
0x40031d3	           0xf94c2	                                 sete dl	       187	ldlang.c	FUNCTION_4	IF_1
0x40031d6	            0x31c9	                            xor ecx, ecx	       187	ldlang.c	FUNCTION_4	IF_1
0x40031d8	          0x4885c0	                           test rax, rax	       187	ldlang.c	FUNCTION_4	IF_1
0x40031db	            0x740b	                            je 0x40031e8	       187	ldlang.c	FUNCTION_4	IF_1
0x40031dd	    0x4883b8d00000	               cmp qword [rax + 0xd0], 0	       187	ldlang.c	FUNCTION_4	IF_1
0x40031e5	           0xf95c1	                                setne cl	       187	ldlang.c	FUNCTION_4	IF_1
0x40031e8	            0x38ca	                              cmp dl, cl	       186	ldlang.c	FUNCTION_4	IF_1
0x40031ea	            0x746c	                            je 0x4003258	       186	ldlang.c	FUNCTION_4	IF_1
0x40031ec	          0x4d39f4	                            cmp r12, r14	       191	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40031ef	     0xf8492010000	                            je 0x4003387	       191	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40031f5	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       193	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40031fc	          0x488b30	                    mov rsi, qword [rax]	       193	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40031ff	        0x41c60600	                       mov byte [r14], 0	       194	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4003203	      0x410fb60424	                   movzx eax, byte [r12]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003208	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400320a	     0xf84b0000000	                            je 0x40032c0	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003210	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003213	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003215	            0x7706	                            ja 0x400321d	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003217	        0x480fa3c5	                             bt rbp, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400321b	            0x721f	                            jb 0x400323c	      1115	string2.h	FUNCTION_223	WHILE_1
0x400321d	          0x4c89e2	                            mov rdx, r12	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003220	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4003224	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003227	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003229	     0xf8491000000	                            je 0x40032c0	      1114	string2.h	FUNCTION_223	WHILE_1
0x400322f	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003232	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003234	            0x77ea	                            ja 0x4003220	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003236	        0x480fa3c5	                             bt rbp, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400323a	            0x73e4	                           jae 0x4003220	      1115	string2.h	FUNCTION_223	WHILE_1
0x400323c	            0x31d2	                            xor edx, edx	       147	ldlang.c	FUNCTION_2	CALL_1
0x400323e	          0x4c89e7	                            mov rdi, r12	       147	ldlang.c	FUNCTION_2	CALL_1
0x4003241	      0xe800000000	                          call 0x4003246	       147	ldlang.c	FUNCTION_2	CALL_1
0x4003246	     0xfb615000000	           movzx edx, byte [0x0400324d] 	       196	ldlang.c	FUNCTION_4	IF_1	IF_2
0x400324d	            0x85c0	                           test eax, eax	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x400324f	          0x418816	                      mov byte [r14], dl	       196	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4003252	     0xf842f010000	                            je 0x4003387	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4003258	        0x4d8b6d08	                mov r13, qword [r13 + 8]	       236	ldlang.c	FUNCTION_6	FOR_1
0x400325c	          0x4d85ed	                           test r13, r13	       234	ldlang.c	FUNCTION_6	FOR_1
0x400325f	     0xf8533ffffff	                           jne 0x4003198	       234	ldlang.c	FUNCTION_6	FOR_1
0x4003265	              0x5b	                                 pop rbx	       260	ldlang.c	FUNCTION_6
0x4003266	            0x31c0	                            xor eax, eax	       259	ldlang.c	FUNCTION_6
0x4003268	              0x5d	                                 pop rbp	       260	ldlang.c	FUNCTION_6
0x4003269	            0x415c	                                 pop r12	       260	ldlang.c	FUNCTION_6
0x400326b	            0x415d	                                 pop r13	       260	ldlang.c	FUNCTION_6
0x400326d	            0x415e	                                 pop r14	       260	ldlang.c	FUNCTION_6
0x400326f	              0xc3	                                     ret	       260	ldlang.c	FUNCTION_6
0x4003270	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003273	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003277	        0x498d7e01	                      lea rdi, [r14 + 1]	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x400327b	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x400327d	            0x770a	                            ja 0x4003289	      1114	string2.h	FUNCTION_223	WHILE_1
0x400327f	        0x480fa3c5	                             bt rbp, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003283	     0xf820c010000	                            jb 0x4003395	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003289	          0x4889fa	                            mov rdx, rdi	      1114	string2.h	FUNCTION_223	WHILE_1
0x400328c	         0xf1f4000	                         nop dword [rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003290	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4003294	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003297	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003299	     0xf84ff000000	                            je 0x400339e	      1114	string2.h	FUNCTION_223	WHILE_1
0x400329f	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032a2	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032a4	            0x77ea	                            ja 0x4003290	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032a6	        0x480fa3c5	                             bt rbp, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x40032aa	            0x73e4	                           jae 0x4003290	      1115	string2.h	FUNCTION_223	WHILE_1
0x40032ac	            0x31d2	                            xor edx, edx	       147	ldlang.c	FUNCTION_2	CALL_1
0x40032ae	      0xe800000000	                          call 0x40032b3	       147	ldlang.c	FUNCTION_2	CALL_1
0x40032b3	            0x85c0	                           test eax, eax	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x40032b5	     0xf8411ffffff	                            je 0x40031cc	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x40032bb	            0xeb9b	                           jmp 0x4003258	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x40032bd	           0xf1f00	                         nop dword [rax]	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x40032c0	          0x4c89e7	                            mov rdi, r12	       148	ldlang.c	FUNCTION_2
0x40032c3	      0xe800000000	                          call 0x40032c8	       148	ldlang.c	FUNCTION_2
0x40032c8	      0xe979ffffff	                           jmp 0x4003246	       148	ldlang.c	FUNCTION_2
0x40032cd	           0xf1f00	                         nop dword [rax]	       148	ldlang.c	FUNCTION_2
0x40032d0	      0x410fb60424	                   movzx eax, byte [r12]	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032d5	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x40032d9	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032db	     0xf84c7000000	                            je 0x40033a8	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032e1	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032e4	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032e6	            0x7706	                            ja 0x40032ee	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032e8	        0x480fa3c5	                             bt rbp, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x40032ec	            0x7226	                            jb 0x4003314	      1115	string2.h	FUNCTION_223	WHILE_1
0x40032ee	          0x4c89e2	                            mov rdx, r12	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032f1	     0xf1f80000000	                         nop dword [rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032f8	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x40032fc	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x40032ff	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003301	     0xf84a1000000	                            je 0x40033a8	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003307	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400330a	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x400330c	            0x77ea	                            ja 0x40032f8	      1114	string2.h	FUNCTION_223	WHILE_1
0x400330e	        0x480fa3c5	                             bt rbp, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003312	            0x73e4	                           jae 0x40032f8	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003314	            0x31d2	                            xor edx, edx	       147	ldlang.c	FUNCTION_2	CALL_1
0x4003316	          0x4c89e7	                            mov rdi, r12	       147	ldlang.c	FUNCTION_2	CALL_1
0x4003319	      0xe800000000	                          call 0x400331e	       147	ldlang.c	FUNCTION_2	CALL_1
0x400331e	            0x85c0	                           test eax, eax	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x4003320	            0x7465	                            je 0x4003387	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x4003322	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4003326	          0x4885c0	                           test rax, rax	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4003329	     0xf8429ffffff	                            je 0x4003258	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x400332f	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4003336	          0x4885c0	                           test rax, rax	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4003339	     0xf8419ffffff	                            je 0x4003258	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x400333f	        0x498b7d00	                    mov rdi, qword [r13]	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4003343	          0x488b30	                    mov rsi, qword [rax]	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4003346	           0xfb607	                   movzx eax, byte [rdi]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003349	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400334b	            0x7468	                            je 0x40033b5	      1114	string2.h	FUNCTION_223	WHILE_1
0x400334d	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003350	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003352	            0x7706	                            ja 0x400335a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003354	        0x480fa3c5	                             bt rbp, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003358	            0x721e	                            jb 0x4003378	      1115	string2.h	FUNCTION_223	WHILE_1
0x400335a	          0x4889fa	                            mov rdx, rdi	      1114	string2.h	FUNCTION_223	WHILE_1
0x400335d	           0xf1f00	                         nop dword [rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003360	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4003364	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003367	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003369	            0x744a	                            je 0x40033b5	      1114	string2.h	FUNCTION_223	WHILE_1
0x400336b	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400336e	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003370	            0x77ee	                            ja 0x4003360	      1114	string2.h	FUNCTION_223	WHILE_1
0x4003372	        0x480fa3c5	                             bt rbp, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003376	            0x73e8	                           jae 0x4003360	      1115	string2.h	FUNCTION_223	WHILE_1
0x4003378	            0x31d2	                            xor edx, edx	       147	ldlang.c	FUNCTION_2	CALL_1
0x400337a	      0xe800000000	                          call 0x400337f	       147	ldlang.c	FUNCTION_2	CALL_1
0x400337f	            0x85c0	                           test eax, eax	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4003381	     0xf85d1feffff	                           jne 0x4003258	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4003387	              0x5b	                                 pop rbx	       260	ldlang.c	FUNCTION_6
0x4003388	      0xb801000000	                              mov eax, 1	       243	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2
0x400338d	              0x5d	                                 pop rbp	       260	ldlang.c	FUNCTION_6
0x400338e	            0x415c	                                 pop r12	       260	ldlang.c	FUNCTION_6
0x4003390	            0x415d	                                 pop r13	       260	ldlang.c	FUNCTION_6
0x4003392	            0x415e	                                 pop r14	       260	ldlang.c	FUNCTION_6
0x4003394	              0xc3	                                     ret	       260	ldlang.c	FUNCTION_6
0x4003395	          0x4885ff	                           test rdi, rdi	       146	ldlang.c	FUNCTION_2	IF_1
0x4003398	     0xf850effffff	                           jne 0x40032ac	       146	ldlang.c	FUNCTION_2	IF_1
0x400339e	      0xe800000000	                          call 0x40033a3	       148	ldlang.c	FUNCTION_2
0x40033a3	      0xe90bffffff	                           jmp 0x40032b3	       148	ldlang.c	FUNCTION_2
0x40033a8	          0x4c89e7	                            mov rdi, r12	       148	ldlang.c	FUNCTION_2
0x40033ab	      0xe800000000	                          call 0x40033b0	       148	ldlang.c	FUNCTION_2
0x40033b0	      0xe969ffffff	                           jmp 0x400331e	       148	ldlang.c	FUNCTION_2
0x40033b5	      0xe800000000	                          call 0x40033ba	       148	ldlang.c	FUNCTION_2
0x40033ba	            0xebc3	                           jmp 0x400337f	       148	ldlang.c	FUNCTION_2
0x40033bc	            0x31c0	                            xor eax, eax	       259	ldlang.c	FUNCTION_6
0x40033be	              0xc3	                                     ret	       260	ldlang.c	FUNCTION_6
lang_add_output	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	9
0x4009ea0	    0x8b0500000000	            mov eax, dword [0x04009ea6] 	      6668	ldlang.c	FUNCTION_144	IF_1
0x4009ea6	            0x85c0	                           test eax, eax	      6668	ldlang.c	FUNCTION_144	IF_1
0x4009ea8	            0x7406	                            je 0x4009eb0	      6668	ldlang.c	FUNCTION_144	IF_1
0x4009eaa	            0x85f6	                           test esi, esi	      6668	ldlang.c	FUNCTION_144	IF_1
0x4009eac	            0x7402	                            je 0x4009eb0	      6668	ldlang.c	FUNCTION_144	IF_1
0x4009eae	            0xf3c3	                                     ret	      6668	ldlang.c	FUNCTION_144	IF_1
0x4009eb0	    0x48893d000000	            mov qword [0x04009eb7], rdi 	      6670	ldlang.c	FUNCTION_144	IF_1
0x4009eb7	    0xc70500000000	               mov dword [0x04009ec1], 1	      6671	ldlang.c	FUNCTION_144	IF_1
0x4009ec1	              0xc3	                                     ret	      6671	ldlang.c	FUNCTION_144	IF_1
walk_wild_section_specs4_wild2	IF,6:ELSE,3:SWITCH,0:functions,0:CALL,10:DO,0:FOR,1:WHILE,0	184
0x4003b50	            0x4157	                                push r15	       690	ldlang.c	FUNCTION_22
0x4003b52	            0x4156	                                push r14	       690	ldlang.c	FUNCTION_22
0x4003b54	            0x4155	                                push r13	       690	ldlang.c	FUNCTION_22
0x4003b56	            0x4154	                                push r12	       690	ldlang.c	FUNCTION_22
0x4003b58	              0x55	                                push rbp	       690	ldlang.c	FUNCTION_22
0x4003b59	              0x53	                                push rbx	       690	ldlang.c	FUNCTION_22
0x4003b5a	          0x4889fd	                            mov rbp, rdi	       690	ldlang.c	FUNCTION_22
0x4003b5d	          0x4889f3	                            mov rbx, rsi	       690	ldlang.c	FUNCTION_22
0x4003b60	        0x4883ec58	                           sub rsp, 0x58	       690	ldlang.c	FUNCTION_22
0x4003b64	        0x4c8b6760	            mov r12, qword [rdi + 0x60] 	       694	ldlang.c	FUNCTION_22
0x4003b68	        0x4c8b7768	            mov r14, qword [rdi + 0x68] 	       695	ldlang.c	FUNCTION_22
0x4003b6c	    0x64488b042528	                mov rax, qword fs:[0x28]	       690	ldlang.c	FUNCTION_22
0x4003b75	      0x4889442448	             mov qword [rsp + 0x48], rax	       690	ldlang.c	FUNCTION_22
0x4003b7a	            0x31c0	                            xor eax, eax	       690	ldlang.c	FUNCTION_22
0x4003b7c	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       692	ldlang.c	FUNCTION_22
0x4003b80	      0x4889542410	             mov qword [rsp + 0x10], rdx	       690	ldlang.c	FUNCTION_22
0x4003b85	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	       693	ldlang.c	FUNCTION_22
0x4003b89	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       693	ldlang.c	FUNCTION_22
0x4003b8d	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       690	ldlang.c	FUNCTION_22
0x4003b92	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003b97	        0x488b7008	                mov rsi, qword [rax + 8]	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003b9b	      0x4889442428	             mov qword [rsp + 0x28], rax	       692	ldlang.c	FUNCTION_22
0x4003ba0	      0x4889542420	             mov qword [rsp + 0x20], rdx	       693	ldlang.c	FUNCTION_22
0x4003ba5	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003baa	    0x48c744243000	               mov qword [rsp + 0x30], 0	       348	ldlang.c	FUNCTION_10
0x4003bb3	    0xc74424380000	               mov dword [rsp + 0x38], 0	       348	ldlang.c	FUNCTION_10
0x4003bbb	      0xe800000000	                          call 0x4003bc0	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003bc0	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       699	ldlang.c	FUNCTION_22	IF_1
0x4003bc4	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	       353	ldlang.c	FUNCTION_10
0x4003bc9	            0x85d2	                           test edx, edx	       699	ldlang.c	FUNCTION_22	IF_1
0x4003bcb	     0xf851f010000	                           jne 0x4003cf0	       699	ldlang.c	FUNCTION_22	IF_1
0x4003bd1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       699	ldlang.c	FUNCTION_22	IF_1
0x4003bd6	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       699	ldlang.c	FUNCTION_22	IF_1
0x4003bda	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003bdf	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003be4	        0x488b7008	                mov rsi, qword [rax + 8]	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003be8	    0x48c744243000	               mov qword [rsp + 0x30], 0	       348	ldlang.c	FUNCTION_10
0x4003bf1	    0xc74424380000	               mov dword [rsp + 0x38], 0	       348	ldlang.c	FUNCTION_10
0x4003bf9	      0xe800000000	                          call 0x4003bfe	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003bfe	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       353	ldlang.c	FUNCTION_10
0x4003c03	      0x4889442408	                mov qword [rsp + 8], rax	       353	ldlang.c	FUNCTION_10
0x4003c08	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       706	ldlang.c	FUNCTION_22	IF_2
0x4003c0c	            0x85c0	                           test eax, eax	       706	ldlang.c	FUNCTION_22	IF_2
0x4003c0e	     0xf85dc000000	                           jne 0x4003cf0	       706	ldlang.c	FUNCTION_22	IF_2
0x4003c14	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c18	    0x4c8bb8900000	            mov r15, qword [rax + 0x90] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c1f	          0x4d85ff	                           test r15, r15	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c22	     0xf84dd000000	                            je 0x4003d05	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c28	          0x4889e8	                            mov rax, rbp	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c2b	          0x4c89fd	                            mov rbp, r15	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c2e	          0x4989c7	                            mov r15, rax	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c31	            0xeb1e	                           jmp 0x4003c51	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c33	       0xf1f440000	                   nop dword [rax + rax]	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c38	        0x498b4e08	                mov rcx, qword [r14 + 8]	       730	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	CALL_9
0x4003c3c	            0x3a11	                      cmp dl, byte [rcx]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003c3e	     0xf84ec000000	                            je 0x4003d30	       374	ldlang.c	FUNCTION_12	IF_1
0x4003c44	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c48	          0x4885ed	                           test rbp, rbp	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c4b	     0xf84b4000000	                            je 0x4003d05	       712	ldlang.c	FUNCTION_22	FOR_1
0x4003c51	          0x4939ed	                            cmp r13, rbp	       714	ldlang.c	FUNCTION_22	FOR_1	IF_3
0x4003c54	     0xf84a6010000	                            je 0x4003e00	       714	ldlang.c	FUNCTION_22	FOR_1	IF_3
0x4003c5a	      0x48396c2408	                cmp qword [rsp + 8], rbp	       717	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4003c5f	     0xf8453010000	                            je 0x4003db8	       717	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4003c65	        0x488b4500	                    mov rax, qword [rbp]	       721	ldlang.c	FUNCTION_22	FOR_1	ELSE_2
0x4003c69	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       722	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	CALL_7
0x4003c6e	           0xfb610	                   movzx edx, byte [rax]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003c71	            0x3811	                      cmp byte [rcx], dl	       374	ldlang.c	FUNCTION_12	IF_1
0x4003c73	            0x75c3	                           jne 0x4003c38	       374	ldlang.c	FUNCTION_12	IF_1
0x4003c75	         0xfb67001	               movzx esi, byte [rax + 1]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003c79	        0x40387101	                 cmp byte [rcx + 1], sil	       374	ldlang.c	FUNCTION_12	IF_1
0x4003c7d	            0x75b9	                           jne 0x4003c38	       374	ldlang.c	FUNCTION_12	IF_1
0x4003c7f	         0xfb67002	               movzx esi, byte [rax + 2]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003c83	        0x40387102	                 cmp byte [rcx + 2], sil	       375	ldlang.c	FUNCTION_12	IF_1
0x4003c87	            0x75af	                           jne 0x4003c38	       375	ldlang.c	FUNCTION_12	IF_1
0x4003c89	         0xfb67003	               movzx esi, byte [rax + 3]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003c8d	        0x40387103	                 cmp byte [rcx + 3], sil	       375	ldlang.c	FUNCTION_12	IF_1
0x4003c91	            0x75a5	                           jne 0x4003c38	       375	ldlang.c	FUNCTION_12	IF_1
0x4003c93	            0x31f6	                            xor esi, esi	       375	ldlang.c	FUNCTION_12	IF_1
0x4003c95	            0xeb18	                           jmp 0x4003caf	       375	ldlang.c	FUNCTION_12	IF_1
0x4003c97	    0x660f1f840000	                    nop word [rax + rax]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003ca0	    0x440fb6443004	        movzx r8d, byte [rax + rsi + 4] 	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003ca6	        0x4883c601	                              add rsi, 1	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003caa	          0x4138f8	                            cmp r8b, dil	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003cad	            0x7589	                           jne 0x4003c38	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003caf	       0xfb67c3104	        movzx edi, byte [rcx + rsi + 4] 	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003cb4	        0x4080ff2a	                           cmp dil, 0x2a	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003cb8	            0x75e6	                           jne 0x4003ca0	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003cba	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003cbf	          0x4889de	                            mov rsi, rbx	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003cc2	      0xe8a9f4ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003cc7	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003cc9	     0xf8575ffffff	                           jne 0x4003c44	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003ccf	        0x498b4f78	            mov rcx, qword [r15 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4003cd3	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       279	ldlang.c	FUNCTION_7
0x4003cd8	          0x4989d8	                             mov r8, rbx	       279	ldlang.c	FUNCTION_7
0x4003cdb	          0x4889ea	                            mov rdx, rbp	       279	ldlang.c	FUNCTION_7
0x4003cde	          0x4c89e6	                            mov rsi, r12	       279	ldlang.c	FUNCTION_7
0x4003ce1	          0x4c89ff	                            mov rdi, r15	       279	ldlang.c	FUNCTION_7
0x4003ce4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       279	ldlang.c	FUNCTION_7
0x4003ce9	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x4003ceb	      0xe954ffffff	                           jmp 0x4003c44	       279	ldlang.c	FUNCTION_7
0x4003cf0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4003cf5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4003cfa	          0x4889de	                            mov rsi, rbx	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4003cfd	          0x4889ef	                            mov rdi, rbp	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4003d00	      0xe88bf7ffff	      call sym.walk_wild_section_general	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4003d05	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       737	ldlang.c	FUNCTION_22
0x4003d0a	    0x644833042528	                xor rax, qword fs:[0x28]	       737	ldlang.c	FUNCTION_22
0x4003d13	     0xf8523010000	                           jne 0x4003e3c	       737	ldlang.c	FUNCTION_22
0x4003d19	        0x4883c458	                           add rsp, 0x58	       737	ldlang.c	FUNCTION_22
0x4003d1d	              0x5b	                                 pop rbx	       737	ldlang.c	FUNCTION_22
0x4003d1e	              0x5d	                                 pop rbp	       737	ldlang.c	FUNCTION_22
0x4003d1f	            0x415c	                                 pop r12	       737	ldlang.c	FUNCTION_22
0x4003d21	            0x415d	                                 pop r13	       737	ldlang.c	FUNCTION_22
0x4003d23	            0x415e	                                 pop r14	       737	ldlang.c	FUNCTION_22
0x4003d25	            0x415f	                                 pop r15	       737	ldlang.c	FUNCTION_22
0x4003d27	              0xc3	                                     ret	       737	ldlang.c	FUNCTION_22
0x4003d28	     0xf1f84000000	                   nop dword [rax + rax]	       737	ldlang.c	FUNCTION_22
0x4003d30	         0xfb67001	               movzx esi, byte [rax + 1]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003d34	        0x40387101	                 cmp byte [rcx + 1], sil	       374	ldlang.c	FUNCTION_12	IF_1
0x4003d38	     0xf8506ffffff	                           jne 0x4003c44	       374	ldlang.c	FUNCTION_12	IF_1
0x4003d3e	         0xfb65002	               movzx edx, byte [rax + 2]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d42	          0x385102	                  cmp byte [rcx + 2], dl	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d45	     0xf85f9feffff	                           jne 0x4003c44	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d4b	         0xfb65003	               movzx edx, byte [rax + 3]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d4f	          0x385103	                  cmp byte [rcx + 3], dl	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d52	     0xf85ecfeffff	                           jne 0x4003c44	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d58	            0x31d2	                            xor edx, edx	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d5a	            0xeb16	                           jmp 0x4003d72	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d5c	         0xf1f4000	                         nop dword [rax]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003d60	       0xfb67c1004	        movzx edi, byte [rax + rdx + 4] 	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003d65	        0x4883c201	                              add rdx, 1	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003d69	          0x4038f7	                            cmp dil, sil	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003d6c	     0xf85d2feffff	                           jne 0x4003c44	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003d72	       0xfb6741104	        movzx esi, byte [rcx + rdx + 4] 	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003d77	        0x4080fe2a	                           cmp sil, 0x2a	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003d7b	            0x75e3	                           jne 0x4003d60	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003d7d	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003d81	          0x4889de	                            mov rsi, rbx	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003d84	      0xe8e7f3ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003d89	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003d8b	     0xf85b3feffff	                           jne 0x4003c44	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003d91	        0x498b4f78	            mov rcx, qword [r15 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4003d95	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       279	ldlang.c	FUNCTION_7
0x4003d9a	          0x4989d8	                             mov r8, rbx	       279	ldlang.c	FUNCTION_7
0x4003d9d	          0x4889ea	                            mov rdx, rbp	       279	ldlang.c	FUNCTION_7
0x4003da0	          0x4c89f6	                            mov rsi, r14	       279	ldlang.c	FUNCTION_7
0x4003da3	          0x4c89ff	                            mov rdi, r15	       279	ldlang.c	FUNCTION_7
0x4003da6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       279	ldlang.c	FUNCTION_7
0x4003dab	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x4003dad	      0xe992feffff	                           jmp 0x4003c44	       279	ldlang.c	FUNCTION_7
0x4003db2	    0x660f1f440000	                    nop word [rax + rax]	       279	ldlang.c	FUNCTION_7
0x4003db8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003dbd	          0x4889de	                            mov rsi, rbx	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003dc0	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003dc4	      0xe8a7f3ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003dc9	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003dcb	     0xf8573feffff	                           jne 0x4003c44	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003dd1	        0x498b4f78	            mov rcx, qword [r15 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4003dd5	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       279	ldlang.c	FUNCTION_7
0x4003dda	          0x4989d8	                             mov r8, rbx	       279	ldlang.c	FUNCTION_7
0x4003ddd	      0x488b542408	                mov rdx, qword [rsp + 8]	       279	ldlang.c	FUNCTION_7
0x4003de2	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       279	ldlang.c	FUNCTION_7
0x4003de7	          0x4c89ff	                            mov rdi, r15	       279	ldlang.c	FUNCTION_7
0x4003dea	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       279	ldlang.c	FUNCTION_7
0x4003def	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x4003df1	      0xe94efeffff	                           jmp 0x4003c44	       279	ldlang.c	FUNCTION_7
0x4003df6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       279	ldlang.c	FUNCTION_7
0x4003e00	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003e05	          0x4889de	                            mov rsi, rbx	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003e08	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003e0c	      0xe85ff3ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003e11	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003e13	     0xf852bfeffff	                           jne 0x4003c44	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003e19	        0x498b4f78	            mov rcx, qword [r15 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4003e1d	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       279	ldlang.c	FUNCTION_7
0x4003e22	          0x4989d8	                             mov r8, rbx	       279	ldlang.c	FUNCTION_7
0x4003e25	          0x4c89ea	                            mov rdx, r13	       279	ldlang.c	FUNCTION_7
0x4003e28	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       279	ldlang.c	FUNCTION_7
0x4003e2d	          0x4c89ff	                            mov rdi, r15	       279	ldlang.c	FUNCTION_7
0x4003e30	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       279	ldlang.c	FUNCTION_7
0x4003e35	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x4003e37	      0xe908feffff	                           jmp 0x4003c44	       279	ldlang.c	FUNCTION_7
0x4003e3c	      0xe800000000	                          call 0x4003e41	       737	ldlang.c	FUNCTION_22
lookup_name	IF,4:ELSE,0:SWITCH,0:functions,0:CALL,3:DO,0:FOR,1:WHILE,0	55
0x4008360	              0x55	                                push rbp	      2646	ldlang.c	FUNCTION_63
0x4008361	              0x53	                                push rbx	      2646	ldlang.c	FUNCTION_63
0x4008362	          0x4889fd	                            mov rbp, rdi	      2646	ldlang.c	FUNCTION_63
0x4008365	        0x4883ec08	                              sub rsp, 8	      2646	ldlang.c	FUNCTION_63
0x4008369	    0x488b1d000000	            mov rbx, qword [0x04008370] 	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4008370	          0x4885db	                           test rbx, rbx	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4008373	            0x7421	                            je 0x4008396	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4008375	           0xf1f00	                         nop dword [rax]	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4008378	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2656	ldlang.c	FUNCTION_63	FOR_1
0x400837c	          0x4885ff	                           test rdi, rdi	      2658	ldlang.c	FUNCTION_63	FOR_1	IF_1
0x400837f	            0x740c	                            je 0x400838d	      2658	ldlang.c	FUNCTION_63	FOR_1	IF_1
0x4008381	          0x4889ee	                            mov rsi, rbp	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4008384	      0xe800000000	                          call 0x4008389	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4008389	            0x85c0	                           test eax, eax	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x400838b	            0x7422	                            je 0x40083af	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x400838d	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2651	ldlang.c	FUNCTION_63	FOR_1
0x4008391	          0x4885db	                           test rbx, rbx	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4008394	            0x75e2	                           jne 0x4008378	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4008396	    0x488b15000000	            mov rdx, qword [0x0400839d] 	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x400839d	            0x31c9	                            xor ecx, ecx	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x400839f	      0xbe04000000	                              mov esi, 4	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x40083a4	          0x4889ef	                            mov rdi, rbp	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x40083a7	      0xe8b4cdffff	                      call sym.new_afile	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x40083ac	          0x4889c3	                            mov rbx, rax	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x40083af	         0xfb64349	           movzx eax, byte [rbx + 0x49] 	      2669	ldlang.c	FUNCTION_63	IF_3
0x40083b3	          0x4889dd	                            mov rbp, rbx	      2669	ldlang.c	FUNCTION_63	IF_3
0x40083b6	            0x89c2	                            mov edx, eax	      2669	ldlang.c	FUNCTION_63	IF_3
0x40083b8	          0x83e206	                              and edx, 6	      2669	ldlang.c	FUNCTION_63	IF_3
0x40083bb	          0x80fa04	                               cmp dl, 4	      2669	ldlang.c	FUNCTION_63	IF_3
0x40083be	            0x7410	                            je 0x40083d0	      2669	ldlang.c	FUNCTION_63	IF_3
0x40083c0	        0x4883c408	                              add rsp, 8	      2676	ldlang.c	FUNCTION_63
0x40083c4	          0x4889e8	                            mov rax, rbp	      2676	ldlang.c	FUNCTION_63
0x40083c7	              0x5b	                                 pop rbx	      2676	ldlang.c	FUNCTION_63
0x40083c8	              0x5d	                                 pop rbp	      2676	ldlang.c	FUNCTION_63
0x40083c9	              0xc3	                                     ret	      2676	ldlang.c	FUNCTION_63
0x40083ca	    0x660f1f440000	                    nop word [rax + rax]	      2676	ldlang.c	FUNCTION_63
0x40083d0	            0xa802	                              test al, 2	      2747	ldlang.c	FUNCTION_66	IF_1
0x40083d2	            0x740d	                            je 0x40083e1	      2747	ldlang.c	FUNCTION_66	IF_1
0x40083d4	          0x4889dd	                            mov rbp, rbx	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x40083d7	        0x4883c408	                              add rsp, 8	      2676	ldlang.c	FUNCTION_63
0x40083db	          0x4889e8	                            mov rax, rbp	      2676	ldlang.c	FUNCTION_63
0x40083de	              0x5b	                                 pop rbx	      2676	ldlang.c	FUNCTION_63
0x40083df	              0x5d	                                 pop rbp	      2676	ldlang.c	FUNCTION_63
0x40083e0	              0xc3	                                     ret	      2676	ldlang.c	FUNCTION_63
0x40083e1	          0x4889df	                            mov rdi, rbx	      2750	ldlang.c	FUNCTION_66	CALL_1
0x40083e4	      0xe800000000	                          call 0x40083e9	      2750	ldlang.c	FUNCTION_66	CALL_1
0x40083e9	        0xf6434908	               test byte [rbx + 0x49], 8	      2753	ldlang.c	FUNCTION_66	IF_2
0x40083ed	            0x75e5	                           jne 0x40083d4	      2753	ldlang.c	FUNCTION_66	IF_2
0x40083ef	            0x31f6	                            xor esi, esi	      2753	ldlang.c	FUNCTION_66	IF_2
0x40083f1	          0x4889df	                            mov rdi, rbx	      2753	ldlang.c	FUNCTION_66	IF_2
0x40083f4	      0xe8f7f9ffff	           call sym.load_symbols.part.47	      2753	ldlang.c	FUNCTION_66	IF_2
0x40083f9	            0x85c0	                           test eax, eax	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x40083fb	      0xb800000000	                              mov eax, 0	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4008400	        0x480f44e8	                          cmove rbp, rax	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4008404	            0xebba	                           jmp 0x40083c0	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
lang_set_flags	IF,0:ELSE,0:SWITCH,1:functions,0:CALL,2:DO,0:FOR,0:WHILE,1	69
0x4007bf0	            0x4156	                                push r14	      6561	ldlang.c	FUNCTION_140
0x4007bf2	            0x4155	                                push r13	      6561	ldlang.c	FUNCTION_140
0x4007bf4	        0x488d4748	                   lea rax, [rdi + 0x48]	      6564	ldlang.c	FUNCTION_140
0x4007bf8	            0x4154	                                push r12	      6561	ldlang.c	FUNCTION_140
0x4007bfa	              0x55	                                push rbp	      6561	ldlang.c	FUNCTION_140
0x4007bfb	          0x4889f5	                            mov rbp, rsi	      6561	ldlang.c	FUNCTION_140
0x4007bfe	              0x53	                                push rbx	      6561	ldlang.c	FUNCTION_140
0x4007bff	           0xfb636	                   movzx esi, byte [rsi]	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c02	        0x4c8d674c	                   lea r12, [rdi + 0x4c]	      6564	ldlang.c	FUNCTION_140
0x4007c06	            0x85d2	                           test edx, edx	      6564	ldlang.c	FUNCTION_140
0x4007c08	        0x4c0f44e0	                          cmove r12, rax	      6564	ldlang.c	FUNCTION_140
0x4007c0c	          0x4084f6	                           test sil, sil	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c0f	            0x743c	                            je 0x4007c4d	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c11	          0x4989fe	                            mov r14, rdi	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c14	          0x4189d5	                           mov r13d, edx	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c17	    0x660f1f840000	                    nop word [rax + rax]	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c20	          0x8d46df	                   lea eax, [rsi - 0x21]	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c23	            0x3c57	                            cmp al, 0x57	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c25	     0xf878d000000	                            ja 0x4007cb8	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c2b	           0xfb6c0	                           movzx eax, al	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c2e	    0xff24c5000000	                       jmp qword [rax*8]	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c35	           0xf1f00	                         nop dword [rax]	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c38	      0x41830c2410	                    or dword [r12], 0x10	      6590	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c3d	           0xf1f00	                         nop dword [rax]	      6590	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c40	        0x4883c501	                              add rbp, 1	      6603	ldlang.c	FUNCTION_140	WHILE_1
0x4007c44	         0xfb67500	                   movzx esi, byte [rbp]	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c48	          0x4084f6	                           test sil, sil	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c4b	            0x75d3	                           jne 0x4007c20	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4007c4d	              0x5b	                                 pop rbx	      6605	ldlang.c	FUNCTION_140
0x4007c4e	              0x5d	                                 pop rbp	      6605	ldlang.c	FUNCTION_140
0x4007c4f	            0x415c	                                 pop r12	      6605	ldlang.c	FUNCTION_140
0x4007c51	            0x415d	                                 pop r13	      6605	ldlang.c	FUNCTION_140
0x4007c53	            0x415e	                                 pop r14	      6605	ldlang.c	FUNCTION_140
0x4007c55	              0xc3	                                     ret	      6605	ldlang.c	FUNCTION_140
0x4007c56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6605	ldlang.c	FUNCTION_140
0x4007c60	      0x41830c2420	                    or dword [r12], 0x20	      6586	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c65	            0xebd9	                           jmp 0x4007c40	      6587	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c67	    0x660f1f840000	                    nop word [rax + rax]	      6587	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c70	      0x41830c2408	                       or dword [r12], 8	      6582	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c75	            0xebc9	                           jmp 0x4007c40	      6583	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c77	    0x660f1f840000	                    nop word [rax + rax]	      6583	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c80	      0x41830c2402	                       or dword [r12], 2	      6595	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c85	            0xebb9	                           jmp 0x4007c40	      6596	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c87	    0x660f1f840000	                    nop word [rax + rax]	      6596	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c90	      0x41830c2401	                       or dword [r12], 1	      6578	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c95	            0xeba9	                           jmp 0x4007c40	      6579	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007c97	    0x660f1f840000	                    nop word [rax + rax]	      6579	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007ca0	            0x31c0	                            xor eax, eax	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007ca2	          0x4585ed	                         test r13d, r13d	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007ca5	           0xf94c0	                                 sete al	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007ca8	            0x7536	                           jne 0x4007ce0	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007caa	        0x4d8d664c	                   lea r12, [r14 + 0x4c]	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007cae	          0x4189c5	                           mov r13d, eax	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007cb1	            0xeb8d	                           jmp 0x4007c40	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007cb3	       0xf1f440000	                   nop dword [rax + rax]	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007cb8	        0x400fbede	                          movsx ebx, sil	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007cbc	            0x31ff	                            xor edi, edi	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007cbe	      0xba05000000	                              mov edx, 5	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007cc3	      0xbe00000000	                              mov esi, 0	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007cc8	      0xe800000000	                          call 0x4007ccd	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007ccd	            0x89da	                            mov edx, ebx	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007ccf	          0x4889c7	                            mov rdi, rax	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007cd2	            0x89de	                            mov esi, ebx	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007cd4	            0x31c0	                            xor eax, eax	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007cd6	      0xe800000000	                          call 0x4007cdb	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4007cdb	      0xe960ffffff	                           jmp 0x4007c40	      6601	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007ce0	        0x4d8d6648	                   lea r12, [r14 + 0x48]	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007ce4	          0x4189c5	                           mov r13d, eax	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4007ce7	      0xe954ffffff	                           jmp 0x4007c40	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
lang_enter_overlay_section	IF,2:ELSE,1:SWITCH,0:functions,0:CALL,5:DO,0:FOR,0:WHILE,0	39
0x400ba10	    0x4c8b05000000	              mov r8, qword [0x0400ba17]	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400ba17	    0x488b35000000	            mov rsi, qword [0x0400ba1e] 	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400ba1e	          0x4531c9	                            xor r9d, r9d	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400ba21	              0x53	                                push rbx	      7964	ldlang.c	FUNCTION_189
0x400ba22	            0x6a00	                                  push 0	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400ba24	            0x31c9	                            xor ecx, ecx	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400ba26	            0x6a00	                                  push 0	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400ba28	      0xba01000000	                              mov edx, 1	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400ba2d	          0x4889fb	                            mov rbx, rdi	      7964	ldlang.c	FUNCTION_189
0x400ba30	      0xe800000000	                          call 0x400ba35	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400ba35	    0x48833d000000	               cmp qword [0x0400ba3d], 0	      7974	ldlang.c	FUNCTION_189	IF_1
0x400ba3d	              0x58	                                 pop rax	      7974	ldlang.c	FUNCTION_189	IF_1
0x400ba3e	              0x5a	                                 pop rdx	      7974	ldlang.c	FUNCTION_189	IF_1
0x400ba3f	            0x745f	                            je 0x400baa0	      7974	ldlang.c	FUNCTION_189	IF_1
0x400ba41	      0xbf10000000	                           mov edi, 0x10	      7978	ldlang.c	FUNCTION_189	CALL_3
0x400ba46	      0xe800000000	                          call 0x400ba4b	      7978	ldlang.c	FUNCTION_189	CALL_3
0x400ba4b	    0x488b15000000	            mov rdx, qword [0x0400ba52] 	      7979	ldlang.c	FUNCTION_189
0x400ba52	          0x4889de	                            mov rsi, rbx	      7983	ldlang.c	FUNCTION_189	CALL_4
0x400ba55	      0xbf41010000	                          mov edi, 0x141	      7983	ldlang.c	FUNCTION_189	CALL_4
0x400ba5a	        0x48895008	                mov qword [rax + 8], rdx	      7979	ldlang.c	FUNCTION_189
0x400ba5e	    0x488b15000000	            mov rdx, qword [0x0400ba65] 	      7980	ldlang.c	FUNCTION_189
0x400ba65	    0x488905000000	            mov qword [0x0400ba6c], rax 	      7981	ldlang.c	FUNCTION_189
0x400ba6c	          0x488910	                    mov qword [rax], rdx	      7980	ldlang.c	FUNCTION_189
0x400ba6f	      0xe800000000	                          call 0x400ba74	      7983	ldlang.c	FUNCTION_189	CALL_4
0x400ba74	    0x488b35000000	            mov rsi, qword [0x0400ba7b] 	      7986	ldlang.c	FUNCTION_189	IF_2
0x400ba7b	          0x4885f6	                           test rsi, rsi	      7986	ldlang.c	FUNCTION_189	IF_2
0x400ba7e	            0x740d	                            je 0x400ba8d	      7986	ldlang.c	FUNCTION_189	IF_2
0x400ba80	          0x4889c2	                            mov rdx, rax	      7989	ldlang.c	FUNCTION_189	CALL_5
0x400ba83	      0xbf45010000	                          mov edi, 0x145	      7989	ldlang.c	FUNCTION_189	CALL_5
0x400ba88	      0xe800000000	                          call 0x400ba8d	      7989	ldlang.c	FUNCTION_189	CALL_5
0x400ba8d	    0x488905000000	            mov qword [0x0400ba94], rax 	      7989	ldlang.c	FUNCTION_189	CALL_5
0x400ba94	              0x5b	                                 pop rbx	      7990	ldlang.c	FUNCTION_189
0x400ba95	              0xc3	                                     ret	      7990	ldlang.c	FUNCTION_189
0x400ba96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7990	ldlang.c	FUNCTION_189
0x400baa0	          0x4889de	                            mov rsi, rbx	      7975	ldlang.c	FUNCTION_189	CALL_2
0x400baa3	      0xbf43010000	                          mov edi, 0x143	      7975	ldlang.c	FUNCTION_189	CALL_2
0x400baa8	      0xe800000000	                          call 0x400baad	      7975	ldlang.c	FUNCTION_189	CALL_2
0x400baad	    0x488905000000	            mov qword [0x0400bab4], rax 	      7975	ldlang.c	FUNCTION_189	CALL_2
0x400bab4	            0xeb8b	                           jmp 0x400ba41	      7975	ldlang.c	FUNCTION_189	CALL_2
version_expr_head_eq	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	9
0x4000300	        0x4883ec08	                              sub rsp, 8	      8357	ldlang.c	FUNCTION_197
0x4000304	        0x488b7608	                mov rsi, qword [rsi + 8]	      8363	ldlang.c	FUNCTION_197
0x4000308	        0x488b7f08	                mov rdi, qword [rdi + 8]	      8363	ldlang.c	FUNCTION_197
0x400030c	      0xe800000000	                          call 0x4000311	      8363	ldlang.c	FUNCTION_197
0x4000311	            0x85c0	                           test eax, eax	      8363	ldlang.c	FUNCTION_197
0x4000313	           0xf94c0	                                 sete al	      8363	ldlang.c	FUNCTION_197
0x4000316	        0x4883c408	                              add rsp, 8	      8364	ldlang.c	FUNCTION_197
0x400031a	           0xfb6c0	                           movzx eax, al	      8363	ldlang.c	FUNCTION_197
0x400031d	              0xc3	                                     ret	      8364	ldlang.c	FUNCTION_197
lang_append_dynamic_list_cpp_typeinfo	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,3:DO,0:FOR,1:WHILE,0	35
0x400ed70	              0x53	                                push rbx	      8689	ldlang.c	FUNCTION_205
0x400ed71	            0x31c9	                            xor ecx, ecx	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed73	            0x31ff	                            xor edi, edi	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed75	      0xba00000000	                              mov edx, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed7a	      0xbe00000000	                              mov esi, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed7f	      0xe800000000	                          call 0x400ed84	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed84	            0x31c9	                            xor ecx, ecx	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed86	      0xba00000000	                              mov edx, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed8b	      0xbe00000000	                              mov esi, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed90	          0x4889c7	                            mov rdi, rax	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed93	      0xe800000000	                          call 0x400ed98	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400ed98	    0x488b0d000000	            mov rcx, qword [0x0400ed9f] 	      8665	ldlang.c	FUNCTION_204	IF_1
0x400ed9f	          0x4889c3	                            mov rbx, rax	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400eda2	          0x4885c9	                           test rcx, rcx	      8665	ldlang.c	FUNCTION_204	IF_1
0x400eda5	            0x741f	                            je 0x400edc6	      8665	ldlang.c	FUNCTION_204	IF_1
0x400eda7	          0x4889c2	                            mov rdx, rax	      8665	ldlang.c	FUNCTION_204	IF_1
0x400edaa	            0xeb07	                           jmp 0x400edb3	      8665	ldlang.c	FUNCTION_204	IF_1
0x400edac	         0xf1f4000	                         nop dword [rax]	      8665	ldlang.c	FUNCTION_204	IF_1
0x400edb0	          0x4889c2	                            mov rdx, rax	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400edb3	          0x488b02	                    mov rax, qword [rdx]	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400edb6	          0x4885c0	                           test rax, rax	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400edb9	            0x75f5	                           jne 0x400edb0	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400edbb	          0x488b01	                    mov rax, qword [rcx]	      8670	ldlang.c	FUNCTION_204	IF_1
0x400edbe	          0x488902	                    mov qword [rdx], rax	      8670	ldlang.c	FUNCTION_204	IF_1
0x400edc1	          0x488919	                    mov qword [rcx], rbx	      8671	ldlang.c	FUNCTION_204	IF_1
0x400edc4	              0x5b	                                 pop rbx	      8703	ldlang.c	FUNCTION_205
0x400edc5	              0xc3	                                     ret	      8703	ldlang.c	FUNCTION_205
0x400edc6	      0xbe28000000	                           mov esi, 0x28	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400edcb	      0xbf01000000	                              mov edi, 1	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400edd0	      0xe800000000	                          call 0x400edd5	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400edd5	          0x488918	                    mov qword [rax], rbx	      8678	ldlang.c	FUNCTION_204	ELSE_1
0x400edd8	    0x48c740200000	               mov qword [rax + 0x20], 0	      8679	ldlang.c	FUNCTION_204	ELSE_1
0x400ede0	    0x488905000000	            mov qword [0x0400ede7], rax 	      8680	ldlang.c	FUNCTION_204	ELSE_1
0x400ede7	              0x5b	                                 pop rbx	      8703	ldlang.c	FUNCTION_205
0x400ede8	              0xc3	                                     ret	      8703	ldlang.c	FUNCTION_205
lang_leave_group	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	10
0x400b800	    0x488b05000000	            mov rax, qword [0x0400b807] 	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b807	    0x483d00000000	                              cmp rax, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b80d	            0x7617	                           jbe 0x400b826	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b80f	        0x488d50f8	                      lea rdx, [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x400b813	        0x488b40f8	                mov rax, qword [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x400b817	    0x488915000000	            mov qword [0x0400b81e], rdx 	      1027	ldlang.c	FUNCTION_32
0x400b81e	    0x488905000000	            mov qword [0x0400b825], rax 	      1027	ldlang.c	FUNCTION_32
0x400b825	              0xc3	                                     ret	      1027	ldlang.c	FUNCTION_32
0x400b826	              0x50	                                push rax	      7729	ldlang.c	FUNCTION_183
0x400b827	      0xe800000000	                          call 0x400b82c	      7729	ldlang.c	FUNCTION_183
lang_output_section_get	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	2
0x4005960	    0x488b87a80000	            mov rax, qword [rdi + 0xa8] 	      1417	ldlang.c	FUNCTION_44	CALL_1
0x4005967	              0xc3	                                     ret	      1418	ldlang.c	FUNCTION_44
walk_wild_section_specs1_wild1	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,1:WHILE,0	67
0x40035c0	            0x4157	                                push r15	       591	ldlang.c	FUNCTION_19
0x40035c2	            0x4156	                                push r14	       591	ldlang.c	FUNCTION_19
0x40035c4	            0x4155	                                push r13	       591	ldlang.c	FUNCTION_19
0x40035c6	            0x4154	                                push r12	       591	ldlang.c	FUNCTION_19
0x40035c8	              0x55	                                push rbp	       591	ldlang.c	FUNCTION_19
0x40035c9	              0x53	                                push rbx	       591	ldlang.c	FUNCTION_19
0x40035ca	        0x4883ec08	                              sub rsp, 8	       591	ldlang.c	FUNCTION_19
0x40035ce	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035d2	        0x4c8b7f50	            mov r15, qword [rdi + 0x50] 	       593	ldlang.c	FUNCTION_19
0x40035d6	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035dd	          0x4885db	                           test rbx, rbx	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035e0	            0x744e	                            je 0x4003630	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035e2	          0x4989fc	                            mov r12, rdi	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035e5	          0x4889f5	                            mov rbp, rsi	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035e8	          0x4989d6	                            mov r14, rdx	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035eb	          0x4989cd	                            mov r13, rcx	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035ee	            0xeb09	                           jmp 0x40035f9	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035f0	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035f4	          0x4885db	                           test rbx, rbx	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035f7	            0x7437	                            je 0x4003630	       595	ldlang.c	FUNCTION_19	FOR_1
0x40035f9	          0x488b13	                    mov rdx, qword [rbx]	       597	ldlang.c	FUNCTION_19	FOR_1
0x40035fc	        0x498b4708	                mov rax, qword [r15 + 8]	       598	ldlang.c	FUNCTION_19	FOR_1	CALL_1
0x4003600	           0xfb60a	                   movzx ecx, byte [rdx]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003603	            0x3808	                      cmp byte [rax], cl	       374	ldlang.c	FUNCTION_12	IF_1
0x4003605	            0x75e9	                           jne 0x40035f0	       374	ldlang.c	FUNCTION_12	IF_1
0x4003607	         0xfb67201	               movzx esi, byte [rdx + 1]	       374	ldlang.c	FUNCTION_12	IF_1
0x400360b	        0x40387001	                 cmp byte [rax + 1], sil	       374	ldlang.c	FUNCTION_12	IF_1
0x400360f	            0x75df	                           jne 0x40035f0	       374	ldlang.c	FUNCTION_12	IF_1
0x4003611	         0xfb67a02	               movzx edi, byte [rdx + 2]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003615	        0x40387802	                 cmp byte [rax + 2], dil	       375	ldlang.c	FUNCTION_12	IF_1
0x4003619	            0x75d5	                           jne 0x40035f0	       375	ldlang.c	FUNCTION_12	IF_1
0x400361b	         0xfb67a03	               movzx edi, byte [rdx + 3]	       375	ldlang.c	FUNCTION_12	IF_1
0x400361f	            0x31c9	                            xor ecx, ecx	       375	ldlang.c	FUNCTION_12	IF_1
0x4003621	        0x40387803	                 cmp byte [rax + 3], dil	       375	ldlang.c	FUNCTION_12	IF_1
0x4003625	            0x7427	                            je 0x400364e	       375	ldlang.c	FUNCTION_12	IF_1
0x4003627	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x400362b	          0x4885db	                           test rbx, rbx	       595	ldlang.c	FUNCTION_19	FOR_1
0x400362e	            0x75c9	                           jne 0x40035f9	       595	ldlang.c	FUNCTION_19	FOR_1
0x4003630	        0x4883c408	                              add rsp, 8	       603	ldlang.c	FUNCTION_19
0x4003634	              0x5b	                                 pop rbx	       603	ldlang.c	FUNCTION_19
0x4003635	              0x5d	                                 pop rbp	       603	ldlang.c	FUNCTION_19
0x4003636	            0x415c	                                 pop r12	       603	ldlang.c	FUNCTION_19
0x4003638	            0x415d	                                 pop r13	       603	ldlang.c	FUNCTION_19
0x400363a	            0x415e	                                 pop r14	       603	ldlang.c	FUNCTION_19
0x400363c	            0x415f	                                 pop r15	       603	ldlang.c	FUNCTION_19
0x400363e	              0xc3	                                     ret	       603	ldlang.c	FUNCTION_19
0x400363f	              0x90	                                     nop	       603	ldlang.c	FUNCTION_19
0x4003640	       0xfb67c0a04	        movzx edi, byte [rdx + rcx + 4] 	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003645	        0x4883c101	                              add rcx, 1	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003649	          0x4038f7	                            cmp dil, sil	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x400364c	            0x75a2	                           jne 0x40035f0	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x400364e	       0xfb6740804	        movzx esi, byte [rax + rcx + 4] 	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003653	        0x4080fe2a	                           cmp sil, 0x2a	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003657	            0x75e7	                           jne 0x4003640	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003659	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x400365d	          0x4889ee	                            mov rsi, rbp	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003660	      0xe80bfbffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003665	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003667	            0x7587	                           jne 0x40035f0	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003669	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x400366e	          0x4d89e9	                             mov r9, r13	       279	ldlang.c	FUNCTION_7
0x4003671	          0x4989e8	                             mov r8, rbp	       279	ldlang.c	FUNCTION_7
0x4003674	          0x4889da	                            mov rdx, rbx	       279	ldlang.c	FUNCTION_7
0x4003677	          0x4c89fe	                            mov rsi, r15	       279	ldlang.c	FUNCTION_7
0x400367a	          0x4c89e7	                            mov rdi, r12	       279	ldlang.c	FUNCTION_7
0x400367d	          0x41ffd6	                                call r14	       279	ldlang.c	FUNCTION_7
0x4003680	      0xe96bffffff	                           jmp 0x40035f0	       279	ldlang.c	FUNCTION_7
lang_add_vers_depend	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,3:DO,0:FOR,1:WHILE,0	43
0x400ec00	            0x4154	                                push r12	      8553	ldlang.c	FUNCTION_200
0x400ec02	              0x55	                                push rbp	      8553	ldlang.c	FUNCTION_200
0x400ec03	          0x4889f5	                            mov rbp, rsi	      8553	ldlang.c	FUNCTION_200
0x400ec06	              0x53	                                push rbx	      8553	ldlang.c	FUNCTION_200
0x400ec07	          0x4889fb	                            mov rbx, rdi	      8553	ldlang.c	FUNCTION_200
0x400ec0a	      0xbf10000000	                           mov edi, 0x10	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400ec0f	      0xe800000000	                          call 0x400ec14	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400ec14	          0x488918	                    mov qword [rax], rbx	      8558	ldlang.c	FUNCTION_200
0x400ec17	    0x488b1d000000	            mov rbx, qword [0x0400ec1e] 	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400ec1e	          0x4989c4	                            mov r12, rax	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400ec21	          0x4885db	                           test rbx, rbx	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400ec24	            0x7512	                           jne 0x400ec38	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400ec26	            0xeb30	                           jmp 0x400ec58	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400ec28	     0xf1f84000000	                   nop dword [rax + rax]	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400ec30	          0x488b1b	                    mov rbx, qword [rbx]	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400ec33	          0x4885db	                           test rbx, rbx	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400ec36	            0x7420	                            je 0x400ec58	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400ec38	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400ec3c	          0x4889ee	                            mov rsi, rbp	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400ec3f	      0xe800000000	                          call 0x400ec44	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400ec44	            0x85c0	                           test eax, eax	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400ec46	            0x75e8	                           jne 0x400ec30	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400ec48	      0x49895c2408	                mov qword [r12 + 8], rbx	      8564	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400ec4d	          0x4c89e0	                            mov rax, r12	      8573	ldlang.c	FUNCTION_200
0x400ec50	              0x5b	                                 pop rbx	      8573	ldlang.c	FUNCTION_200
0x400ec51	              0x5d	                                 pop rbp	      8573	ldlang.c	FUNCTION_200
0x400ec52	            0x415c	                                 pop r12	      8573	ldlang.c	FUNCTION_200
0x400ec54	              0xc3	                                     ret	      8573	ldlang.c	FUNCTION_200
0x400ec55	           0xf1f00	                         nop dword [rax]	      8573	ldlang.c	FUNCTION_200
0x400ec58	      0xba05000000	                              mov edx, 5	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400ec5d	      0xbe00000000	                              mov esi, 0	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400ec62	            0x31ff	                            xor edi, edi	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400ec64	      0xe800000000	                          call 0x400ec69	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400ec69	          0x4889ee	                            mov rsi, rbp	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400ec6c	          0x4889c7	                            mov rdi, rax	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400ec6f	            0x31c0	                            xor eax, eax	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400ec71	      0xe800000000	                          call 0x400ec76	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400ec76	          0x4c89e0	                            mov rax, r12	      8573	ldlang.c	FUNCTION_200
0x400ec79	    0x49c744240800	                  mov qword [r12 + 8], 0	      8571	ldlang.c	FUNCTION_200
0x400ec82	              0x5b	                                 pop rbx	      8573	ldlang.c	FUNCTION_200
0x400ec83	              0x5d	                                 pop rbp	      8573	ldlang.c	FUNCTION_200
0x400ec84	            0x415c	                                 pop r12	      8573	ldlang.c	FUNCTION_200
0x400ec86	              0xc3	                                     ret	      8573	ldlang.c	FUNCTION_200
init_os	IF,7:ELSE,0:SWITCH,0:functions,0:CALL,9:DO,0:FOR,0:WHILE,0	74
0x4002200	            0x4154	                                push r12	      2165	ldlang.c	FUNCTION_55
0x4002202	              0x55	                                push rbp	      2165	ldlang.c	FUNCTION_55
0x4002203	            0x89f5	                            mov ebp, esi	      2165	ldlang.c	FUNCTION_55
0x4002205	              0x53	                                push rbx	      2165	ldlang.c	FUNCTION_55
0x4002206	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	      2166	ldlang.c	FUNCTION_55	IF_1
0x400220a	          0x4889fb	                            mov rbx, rdi	      2165	ldlang.c	FUNCTION_55
0x400220d	      0xb90a000000	                            mov ecx, 0xa	      2166	ldlang.c	FUNCTION_55	IF_1
0x4002212	      0xbf00000000	                              mov edi, 0	      2166	ldlang.c	FUNCTION_55	IF_1
0x4002217	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2166	ldlang.c	FUNCTION_55	IF_1
0x4002219	     0xf8481000000	                            je 0x40022a0	      2166	ldlang.c	FUNCTION_55	IF_1
0x400221f	    0x81bb84000000	          cmp dword [rbx + 0x84], 0x17e 	      2169	ldlang.c	FUNCTION_55	IF_2
0x4002229	            0x7465	                            je 0x4002290	      2169	ldlang.c	FUNCTION_55	IF_2
0x400222b	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2170	ldlang.c	FUNCTION_55	CALL_3
0x400222f	    0x488b3d000000	            mov rdi, qword [0x04002236] 	      2170	ldlang.c	FUNCTION_55	CALL_3
0x4002236	      0xe800000000	                          call 0x400223b	      2170	ldlang.c	FUNCTION_55	CALL_3
0x400223b	        0x48894338	             mov qword [rbx + 0x38], rax	      2170	ldlang.c	FUNCTION_55	CALL_3
0x400223f	          0x4885c0	                           test rax, rax	      2171	ldlang.c	FUNCTION_55	IF_3
0x4002242	     0xf8480000000	                            je 0x40022c8	      2171	ldlang.c	FUNCTION_55	IF_3
0x4002248	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2189	ldlang.c	FUNCTION_55	IF_5
0x400224c	        0x48894068	             mov qword [rax + 0x68], rax	      2180	ldlang.c	FUNCTION_55
0x4002250	    0x48c740600000	               mov qword [rax + 0x60], 0	      2181	ldlang.c	FUNCTION_55
0x4002258	    0x488998a80000	             mov qword [rax + 0xa8], rbx	      2185	ldlang.c	FUNCTION_55	CALL_7
0x400225f	          0x4885ff	                           test rdi, rdi	      2189	ldlang.c	FUNCTION_55	IF_5
0x4002262	            0x7405	                            je 0x4002269	      2189	ldlang.c	FUNCTION_55	IF_5
0x4002264	      0xe8f7feffff	                    call sym.exp_init_os	      2190	ldlang.c	FUNCTION_55	CALL_8
0x4002269	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      2192	ldlang.c	FUNCTION_55	IF_6
0x400226d	          0x4885ff	                           test rdi, rdi	      2192	ldlang.c	FUNCTION_55	IF_6
0x4002270	            0x7405	                            je 0x4002277	      2192	ldlang.c	FUNCTION_55	IF_6
0x4002272	      0xe8e9feffff	                    call sym.exp_init_os	      2193	ldlang.c	FUNCTION_55	CALL_9
0x4002277	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      2196	ldlang.c	FUNCTION_55	IF_7
0x400227d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2196	ldlang.c	FUNCTION_55	IF_7
0x4002280	            0x7407	                            je 0x4002289	      2196	ldlang.c	FUNCTION_55	IF_7
0x4002282	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      2197	ldlang.c	FUNCTION_55	IF_7
0x4002286	          0x894270	             mov dword [rdx + 0x70], eax	      2197	ldlang.c	FUNCTION_55	IF_7
0x4002289	              0x5b	                                 pop rbx	      2198	ldlang.c	FUNCTION_55
0x400228a	              0x5d	                                 pop rbp	      2198	ldlang.c	FUNCTION_55
0x400228b	            0x415c	                                 pop r12	      2198	ldlang.c	FUNCTION_55
0x400228d	              0xc3	                                     ret	      2198	ldlang.c	FUNCTION_55
0x400228e	            0x6690	                                     nop	      2198	ldlang.c	FUNCTION_55
0x4002290	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2198	ldlang.c	FUNCTION_55
0x4002294	            0xeba9	                           jmp 0x400223f	      2198	ldlang.c	FUNCTION_55
0x4002296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2198	ldlang.c	FUNCTION_55
0x40022a0	            0x31ff	                            xor edi, edi	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022a2	      0xba05000000	                              mov edx, 5	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022a7	      0xbe00000000	                              mov esi, 0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022ac	      0xe800000000	                          call 0x40022b1	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022b1	      0xbe00000000	                              mov esi, 0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022b6	          0x4889c7	                            mov rdi, rax	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022b9	            0x31c0	                            xor eax, eax	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022bb	      0xe800000000	                          call 0x40022c0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022c0	      0xe95affffff	                           jmp 0x400221f	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022c5	           0xf1f00	                         nop dword [rax]	      2167	ldlang.c	FUNCTION_55	CALL_2
0x40022c8	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x40022cc	    0x488b3d000000	            mov rdi, qword [0x040022d3] 	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x40022d3	            0x89ea	                            mov edx, ebp	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x40022d5	      0xe800000000	                          call 0x40022da	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x40022da	          0x4885c0	                           test rax, rax	      2174	ldlang.c	FUNCTION_55	IF_4
0x40022dd	        0x48894338	             mov qword [rbx + 0x38], rax	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x40022e1	     0xf8561ffffff	                           jne 0x4002248	      2174	ldlang.c	FUNCTION_55	IF_4
0x40022e7	    0x488b05000000	            mov rax, qword [0x040022ee] 	      2178	ldlang.c	FUNCTION_55	IF_4
0x40022ee	        0x4c8b6330	            mov r12, qword [rbx + 0x30] 	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40022f2	      0xba05000000	                              mov edx, 5	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40022f7	      0xbe00000000	                              mov esi, 0	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40022fc	            0x31ff	                            xor edi, edi	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40022fe	        0x488b4008	                mov rax, qword [rax + 8]	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4002302	          0x488b28	                    mov rbp, qword [rax]	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4002305	      0xe800000000	                          call 0x400230a	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x400230a	          0x4c89e2	                            mov rdx, r12	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x400230d	          0x4889c7	                            mov rdi, rax	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4002310	            0x31c0	                            xor eax, eax	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4002312	          0x4889ee	                            mov rsi, rbp	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4002315	      0xe800000000	                          call 0x400231a	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x400231a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x400231e	      0xe925ffffff	                           jmp 0x4002248	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
lang_add_attribute	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	16
0x400af60	              0x55	                                push rbp	      7593	ldlang.c	FUNCTION_174
0x400af61	              0x53	                                push rbx	      7593	ldlang.c	FUNCTION_174
0x400af62	            0x89fd	                            mov ebp, edi	      7593	ldlang.c	FUNCTION_174
0x400af64	      0xbf10000000	                           mov edi, 0x10	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400af69	        0x4883ec08	                              sub rsp, 8	      7593	ldlang.c	FUNCTION_174
0x400af6d	    0x488b1d000000	            mov rbx, qword [0x0400af74] 	      7594	ldlang.c	FUNCTION_174	CALL_1
0x400af74	      0xe800000000	                          call 0x400af79	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400af79	          0x896808	                mov dword [rax + 8], ebp	      1040	ldlang.c	FUNCTION_33
0x400af7c	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400af83	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400af87	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400af8a	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400af8e	        0x4883c408	                              add rsp, 8	      7595	ldlang.c	FUNCTION_174
0x400af92	              0x5b	                                 pop rbx	      7595	ldlang.c	FUNCTION_174
0x400af93	              0x5d	                                 pop rbp	      7595	ldlang.c	FUNCTION_174
0x400af94	              0xc3	                                     ret	      7595	ldlang.c	FUNCTION_174
lang_enter_output_section_statement	IF,3:ELSE,1:SWITCH,0:functions,0:CALL,8:DO,0:FOR,0:WHILE,0	110
0x4009ed0	            0x4157	                                push r15	      6703	ldlang.c	FUNCTION_146
0x4009ed2	            0x4156	                                push r14	      6703	ldlang.c	FUNCTION_146
0x4009ed4	          0x4989f7	                            mov r15, rsi	      6703	ldlang.c	FUNCTION_146
0x4009ed7	            0x4155	                                push r13	      6703	ldlang.c	FUNCTION_146
0x4009ed9	            0x4154	                                push r12	      6703	ldlang.c	FUNCTION_146
0x4009edb	          0x4189d6	                           mov r14d, edx	      6703	ldlang.c	FUNCTION_146
0x4009ede	              0x55	                                push rbp	      6703	ldlang.c	FUNCTION_146
0x4009edf	              0x53	                                push rbx	      6703	ldlang.c	FUNCTION_146
0x4009ee0	      0xba01000000	                              mov edx, 1	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4009ee5	          0x4989cc	                            mov r12, rcx	      6703	ldlang.c	FUNCTION_146
0x4009ee8	          0x4d89c5	                             mov r13, r8	      6703	ldlang.c	FUNCTION_146
0x4009eeb	          0x4c89cb	                             mov rbx, r9	      6703	ldlang.c	FUNCTION_146
0x4009eee	        0x4883ec08	                              sub rsp, 8	      6703	ldlang.c	FUNCTION_146
0x4009ef2	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4009ef6	      0xe800000000	                          call 0x4009efb	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4009efb	      0x4883785800	               cmp qword [rax + 0x58], 0	      6710	ldlang.c	FUNCTION_146	IF_1
0x4009f00	          0x4889c5	                            mov rbp, rax	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4009f03	    0x488905000000	            mov qword [0x04009f0a], rax 	      6708	ldlang.c	FUNCTION_146
0x4009f0a	     0xf8440010000	                            je 0x400a050	      6710	ldlang.c	FUNCTION_146	IF_1
0x4009f10	        0x4183fe02	                             cmp r14d, 2	      6716	ldlang.c	FUNCTION_146	IF_2
0x4009f14	      0xba00000000	                              mov edx, 0	      6716	ldlang.c	FUNCTION_146	IF_2
0x4009f19	      0xb800020000	                          mov eax, 0x200	      6716	ldlang.c	FUNCTION_146	IF_2
0x4009f1e	           0xf45c2	                         cmovne eax, edx	      6716	ldlang.c	FUNCTION_146	IF_2
0x4009f21	    0x4489b58c0000	           mov dword [rbp + 0x8c], r14d 	      6714	ldlang.c	FUNCTION_146
0x4009f28	    0xc74578010000	               mov dword [rbp + 0x78], 1	      6719	ldlang.c	FUNCTION_146
0x4009f2f	    0x898588000000	            mov dword [rbp + 0x88], eax 	      6719	ldlang.c	FUNCTION_146
0x4009f35	    0x488b05000000	            mov rax, qword [0x04009f3c] 	      1016	ldlang.c	FUNCTION_31	IF_1
0x4009f3c	        0x488d5510	                   lea rdx, [rbp + 0x10]	      6722	ldlang.c	FUNCTION_146	CALL_2
0x4009f40	    0x483d00000000	                              cmp rax, 0	      1016	ldlang.c	FUNCTION_31	IF_1
0x4009f46	     0xf830d010000	                           jae 0x400a059	      1016	ldlang.c	FUNCTION_31	IF_1
0x4009f4c	        0x488d4808	                      lea rcx, [rax + 8]	      1018	ldlang.c	FUNCTION_31
0x4009f50	    0x817c24488001	          cmp dword [rsp + 0x48], 0x180 	      6724	ldlang.c	FUNCTION_146
0x4009f58	    0x48890d000000	            mov qword [0x04009f5f], rcx 	      1018	ldlang.c	FUNCTION_31
0x4009f5f	    0x488b0d000000	            mov rcx, qword [0x04009f66] 	      1018	ldlang.c	FUNCTION_31
0x4009f66	          0x488908	                    mov qword [rax], rcx	      1018	ldlang.c	FUNCTION_31
0x4009f69	    0x488915000000	            mov qword [0x04009f70], rdx 	      1019	ldlang.c	FUNCTION_31
0x4009f70	           0xf94c0	                                 sete al	      6724	ldlang.c	FUNCTION_146
0x4009f73	     0xfb695900000	           movzx edx, byte [rbp + 0x90] 	      6724	ldlang.c	FUNCTION_146
0x4009f7a	          0xc1e006	                              shl eax, 6	      6724	ldlang.c	FUNCTION_146
0x4009f7d	          0x83e2bf	                     and edx, 0xffffffbf	      6724	ldlang.c	FUNCTION_146
0x4009f80	             0x9d0	                             or eax, edx	      6724	ldlang.c	FUNCTION_146
0x4009f82	            0xa840	                           test al, 0x40	      6725	ldlang.c	FUNCTION_146	IF_3
0x4009f84	    0x888590000000	               mov byte [rbp + 0x90], al	      6724	ldlang.c	FUNCTION_146
0x4009f8a	            0x7422	                            je 0x4009fae	      6725	ldlang.c	FUNCTION_146	IF_3
0x4009f8c	          0x4d85e4	                           test r12, r12	      6725	ldlang.c	FUNCTION_146	IF_3
0x4009f8f	            0x741d	                            je 0x4009fae	      6725	ldlang.c	FUNCTION_146	IF_3
0x4009f91	      0xbe00000000	                              mov esi, 0	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4009f96	            0x31ff	                            xor edi, edi	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4009f98	      0xba05000000	                              mov edx, 5	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4009f9d	      0xe800000000	                          call 0x4009fa2	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4009fa2	            0x31f6	                            xor esi, esi	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4009fa4	          0x4889c7	                            mov rdi, rax	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4009fa7	            0x31c0	                            xor eax, eax	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4009fa9	      0xe800000000	                          call 0x4009fae	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4009fae	      0xba00000000	                              mov edx, 0	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4009fb3	      0xbeffffffff	                     mov esi, 0xffffffff	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4009fb8	          0x4c89ef	                            mov rdi, r13	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4009fbb	      0xe800000000	                          call 0x4009fc0	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4009fc0	            0x85c0	                           test eax, eax	      6681	ldlang.c	FUNCTION_145	IF_1
0x4009fc2	      0xbaffffffff	                     mov edx, 0xffffffff	      6682	ldlang.c	FUNCTION_145	IF_1
0x4009fc7	            0x781d	                            js 0x4009fe6	      6681	ldlang.c	FUNCTION_145	IF_1
0x4009fc9	            0x31d2	                            xor edx, edx	      6681	ldlang.c	FUNCTION_145	IF_1
0x4009fcb	      0xb901000000	                              mov ecx, 1	      6681	ldlang.c	FUNCTION_145	IF_1
0x4009fd0	            0xeb10	                           jmp 0x4009fe2	      6681	ldlang.c	FUNCTION_145	IF_1
0x4009fd2	    0x660f1f440000	                    nop word [rax + rax]	      6681	ldlang.c	FUNCTION_145	IF_1
0x4009fd8	          0x83c201	                              add edx, 1	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4009fdb	             0x1c9	                            add ecx, ecx	      6688	ldlang.c	FUNCTION_145	FOR_1
0x4009fdd	          0x83fa20	                           cmp edx, 0x20	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4009fe0	            0x7466	                            je 0x400a048	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4009fe2	            0x39c8	                            cmp eax, ecx	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4009fe4	            0x77f2	                            ja 0x4009fd8	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4009fe6	          0x89557c	            mov dword [rbp + 0x7c], edx 	      6729	ldlang.c	FUNCTION_146
0x4009fe9	      0xbeffffffff	                     mov esi, 0xffffffff	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4009fee	      0xba00000000	                              mov edx, 0	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4009ff3	          0x4c89e7	                            mov rdi, r12	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4009ff6	      0xe800000000	                          call 0x4009ffb	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4009ffb	            0x85c0	                           test eax, eax	      6681	ldlang.c	FUNCTION_145	IF_1
0x4009ffd	      0xbaffffffff	                     mov edx, 0xffffffff	      6682	ldlang.c	FUNCTION_145	IF_1
0x400a002	            0x781a	                            js 0x400a01e	      6681	ldlang.c	FUNCTION_145	IF_1
0x400a004	            0x31d2	                            xor edx, edx	      6681	ldlang.c	FUNCTION_145	IF_1
0x400a006	      0xb901000000	                              mov ecx, 1	      6681	ldlang.c	FUNCTION_145	IF_1
0x400a00b	            0xeb0d	                           jmp 0x400a01a	      6681	ldlang.c	FUNCTION_145	IF_1
0x400a00d	           0xf1f00	                         nop dword [rax]	      6681	ldlang.c	FUNCTION_145	IF_1
0x400a010	          0x83c201	                              add edx, 1	      6684	ldlang.c	FUNCTION_145	FOR_1
0x400a013	             0x1c9	                            add ecx, ecx	      6688	ldlang.c	FUNCTION_145	FOR_1
0x400a015	          0x83fa20	                           cmp edx, 0x20	      6684	ldlang.c	FUNCTION_145	FOR_1
0x400a018	            0x7426	                            je 0x400a040	      6684	ldlang.c	FUNCTION_145	FOR_1
0x400a01a	            0x39c8	                            cmp eax, ecx	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x400a01c	            0x77f2	                            ja 0x400a010	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x400a01e	    0x899580000000	            mov dword [rbp + 0x80], edx 	      6731	ldlang.c	FUNCTION_146
0x400a024	        0x48895d60	            mov qword [rbp + 0x60], rbx 	      6734	ldlang.c	FUNCTION_146
0x400a028	        0x4883c408	                              add rsp, 8	      6736	ldlang.c	FUNCTION_146
0x400a02c	              0x5b	                                 pop rbx	      6736	ldlang.c	FUNCTION_146
0x400a02d	          0x4889e8	                            mov rax, rbp	      6736	ldlang.c	FUNCTION_146
0x400a030	              0x5d	                                 pop rbp	      6736	ldlang.c	FUNCTION_146
0x400a031	            0x415c	                                 pop r12	      6736	ldlang.c	FUNCTION_146
0x400a033	            0x415d	                                 pop r13	      6736	ldlang.c	FUNCTION_146
0x400a035	            0x415e	                                 pop r14	      6736	ldlang.c	FUNCTION_146
0x400a037	            0x415f	                                 pop r15	      6736	ldlang.c	FUNCTION_146
0x400a039	              0xc3	                                     ret	      6736	ldlang.c	FUNCTION_146
0x400a03a	    0x660f1f440000	                    nop word [rax + rax]	      6736	ldlang.c	FUNCTION_146
0x400a040	            0x31d2	                            xor edx, edx	      6691	ldlang.c	FUNCTION_145
0x400a042	            0xebda	                           jmp 0x400a01e	      6691	ldlang.c	FUNCTION_145
0x400a044	         0xf1f4000	                         nop dword [rax]	      6691	ldlang.c	FUNCTION_145
0x400a048	            0x31d2	                            xor edx, edx	      6691	ldlang.c	FUNCTION_145
0x400a04a	            0xeb9a	                           jmp 0x4009fe6	      6691	ldlang.c	FUNCTION_145
0x400a04c	         0xf1f4000	                         nop dword [rax]	      6691	ldlang.c	FUNCTION_145
0x400a050	        0x4c897858	             mov qword [rax + 0x58], r15	      6712	ldlang.c	FUNCTION_146	IF_1
0x400a054	      0xe9b7feffff	                           jmp 0x4009f10	      6712	ldlang.c	FUNCTION_146	IF_1
0x400a059	      0xe800000000	                          call 0x400a05e	      6712	ldlang.c	FUNCTION_146	IF_1
insert_pad	IF,5:ELSE,2:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	60
0x4004060	          0x4885ff	                           test rdi, rdi	      4649	ldlang.c	FUNCTION_108	IF_2
0x4004063	            0x4156	                                push r14	      4642	ldlang.c	FUNCTION_108
0x4004065	          0x4989d6	                            mov r14, rdx	      4642	ldlang.c	FUNCTION_108
0x4004068	            0x4155	                                push r13	      4642	ldlang.c	FUNCTION_108
0x400406a	          0x4989f5	                            mov r13, rsi	      4642	ldlang.c	FUNCTION_108
0x400406d	            0x4154	                                push r12	      4642	ldlang.c	FUNCTION_108
0x400406f	          0x4989cc	                            mov r12, rcx	      4642	ldlang.c	FUNCTION_108
0x4004072	              0x55	                                push rbp	      4642	ldlang.c	FUNCTION_108
0x4004073	          0x4c89c5	                             mov rbp, r8	      4642	ldlang.c	FUNCTION_108
0x4004076	              0x53	                                push rbx	      4642	ldlang.c	FUNCTION_108
0x4004077	          0x4889fb	                            mov rbx, rdi	      4642	ldlang.c	FUNCTION_108
0x400407a	            0x7413	                            je 0x400408f	      4649	ldlang.c	FUNCTION_108	IF_2
0x400407c	    0x4881ff000000	                              cmp rdi, 0	      4649	ldlang.c	FUNCTION_108	IF_2
0x4004083	            0x740a	                            je 0x400408f	      4649	ldlang.c	FUNCTION_108	IF_2
0x4004085	        0x837f080c	                cmp dword [rdi + 8], 0xc	      4650	ldlang.c	FUNCTION_108	IF_2
0x4004089	     0xf8491000000	                            je 0x4004120	      4650	ldlang.c	FUNCTION_108	IF_2
0x400408f	          0x488b03	                    mov rax, qword [rbx]	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4004092	          0x4885c0	                           test rax, rax	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4004095	            0x7406	                            je 0x400409d	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4004097	        0x8378080c	                cmp dword [rax + 8], 0xc	      4656	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x400409b	            0x7473	                            je 0x4004110	      4656	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x400409d	      0xbf30000000	                           mov edi, 0x30	      4664	ldlang.c	FUNCTION_108	ELSE_2
0x40040a2	      0xe800000000	                          call 0x40040a7	      4664	ldlang.c	FUNCTION_108	ELSE_2
0x40040a7	          0x488b13	                    mov rdx, qword [rbx]	      4666	ldlang.c	FUNCTION_108	ELSE_2
0x40040aa	          0x4d85ed	                           test r13, r13	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x40040ad	          0x488910	                    mov qword [rax], rdx	      4666	ldlang.c	FUNCTION_108	ELSE_2
0x40040b0	      0xba00000000	                              mov edx, 0	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x40040b5	          0x488903	                    mov qword [rbx], rax	      4667	ldlang.c	FUNCTION_108	ELSE_2
0x40040b8	        0x4c0f44ea	                          cmove r13, rdx	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x40040bc	    0xc740080c0000	                mov dword [rax + 8], 0xc	      4668	ldlang.c	FUNCTION_108	ELSE_2
0x40040c3	        0x4c896020	             mov qword [rax + 0x20], r12	      4669	ldlang.c	FUNCTION_108	ELSE_2
0x40040c7	        0x4c896828	             mov qword [rax + 0x28], r13	      4672	ldlang.c	FUNCTION_108	ELSE_2
0x40040cb	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      4674	ldlang.c	FUNCTION_108
0x40040d0	          0x4889e9	                            mov rcx, rbp	      4674	ldlang.c	FUNCTION_108
0x40040d3	        0x4c897018	             mov qword [rax + 0x18], r14	      4675	ldlang.c	FUNCTION_108
0x40040d7	          0x4829d1	                            sub rcx, rdx	      4674	ldlang.c	FUNCTION_108
0x40040da	        0x48894810	             mov qword [rax + 0x10], rcx	      4674	ldlang.c	FUNCTION_108
0x40040de	    0x41f644242108	               test byte [r12 + 0x21], 8	      4676	ldlang.c	FUNCTION_108	IF_5
0x40040e4	            0x7517	                           jne 0x40040fd	      4676	ldlang.c	FUNCTION_108	IF_5
0x40040e6	    0x8b0d00000000	            mov ecx, dword [0x040040ec] 	      4677	ldlang.c	FUNCTION_108	IF_5
0x40040ec	          0x49d3ee	                             shr r14, cl	      4677	ldlang.c	FUNCTION_108	IF_5
0x40040ef	          0x4c01f5	                            add rbp, r14	      4677	ldlang.c	FUNCTION_108	IF_5
0x40040f2	          0x4829d5	                            sub rbp, rdx	      4677	ldlang.c	FUNCTION_108	IF_5
0x40040f5	          0x48d3e5	                             shl rbp, cl	      4677	ldlang.c	FUNCTION_108	IF_5
0x40040f8	      0x49896c2438	             mov qword [r12 + 0x38], rbp	      4677	ldlang.c	FUNCTION_108	IF_5
0x40040fd	              0x5b	                                 pop rbx	      4679	ldlang.c	FUNCTION_108
0x40040fe	              0x5d	                                 pop rbp	      4679	ldlang.c	FUNCTION_108
0x40040ff	            0x415c	                                 pop r12	      4679	ldlang.c	FUNCTION_108
0x4004101	            0x415d	                                 pop r13	      4679	ldlang.c	FUNCTION_108
0x4004103	            0x415e	                                 pop r14	      4679	ldlang.c	FUNCTION_108
0x4004105	              0xc3	                                     ret	      4679	ldlang.c	FUNCTION_108
0x4004106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4679	ldlang.c	FUNCTION_108
0x4004110	        0x4c3b6020	            cmp r12, qword [rax + 0x20] 	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4004114	            0x7587	                           jne 0x400409d	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4004116	            0xebb3	                           jmp 0x40040cb	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4004118	     0xf1f84000000	                   nop dword [rax + rax]	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4004120	        0x48394f20	            cmp qword [rdi + 0x20], rcx 	      4651	ldlang.c	FUNCTION_108	IF_2
0x4004124	     0xf8565ffffff	                           jne 0x400408f	      4651	ldlang.c	FUNCTION_108	IF_2
0x400412a	          0x4889f8	                            mov rax, rdi	      4651	ldlang.c	FUNCTION_108	IF_2
0x400412d	            0xeb9c	                           jmp 0x40040cb	      4651	ldlang.c	FUNCTION_108	IF_2
lang_add_reloc	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	36
0x400ae90	            0x4157	                                push r15	      7567	ldlang.c	FUNCTION_172
0x400ae92	            0x4156	                                push r14	      7567	ldlang.c	FUNCTION_172
0x400ae94	          0x4189ff	                           mov r15d, edi	      7567	ldlang.c	FUNCTION_172
0x400ae97	            0x4155	                                push r13	      7567	ldlang.c	FUNCTION_172
0x400ae99	            0x4154	                                push r12	      7567	ldlang.c	FUNCTION_172
0x400ae9b	      0xbf50000000	                           mov edi, 0x50	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400aea0	              0x55	                                push rbp	      7567	ldlang.c	FUNCTION_172
0x400aea1	              0x53	                                push rbx	      7567	ldlang.c	FUNCTION_172
0x400aea2	          0x4989d5	                            mov r13, rdx	      7567	ldlang.c	FUNCTION_172
0x400aea5	          0x4989f6	                            mov r14, rsi	      7567	ldlang.c	FUNCTION_172
0x400aea8	          0x4989cc	                            mov r12, rcx	      7567	ldlang.c	FUNCTION_172
0x400aeab	          0x4c89c5	                             mov rbp, r8	      7567	ldlang.c	FUNCTION_172
0x400aeae	        0x4883ec08	                              sub rsp, 8	      7567	ldlang.c	FUNCTION_172
0x400aeb2	    0x488b1d000000	            mov rbx, qword [0x0400aeb9] 	      7568	ldlang.c	FUNCTION_172
0x400aeb9	      0xe800000000	                          call 0x400aebe	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400aebe	    0xc74008090000	                  mov dword [rax + 8], 9	      1040	ldlang.c	FUNCTION_33
0x400aec5	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400aecc	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400aed0	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400aed3	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400aed7	        0x44897810	            mov dword [rax + 0x10], r15d	      7570	ldlang.c	FUNCTION_172
0x400aedb	        0x4c897018	             mov qword [rax + 0x18], r14	      7571	ldlang.c	FUNCTION_172
0x400aedf	        0x4c896820	             mov qword [rax + 0x20], r13	      7572	ldlang.c	FUNCTION_172
0x400aee3	        0x4c896028	             mov qword [rax + 0x28], r12	      7573	ldlang.c	FUNCTION_172
0x400aee7	        0x48896830	             mov qword [rax + 0x30], rbp	      7574	ldlang.c	FUNCTION_172
0x400aeeb	    0x48c740380000	               mov qword [rax + 0x38], 0	      7576	ldlang.c	FUNCTION_172
0x400aef3	    0x48c740400000	               mov qword [rax + 0x40], 0	      7577	ldlang.c	FUNCTION_172
0x400aefb	    0x48c740480000	               mov qword [rax + 0x48], 0	      7578	ldlang.c	FUNCTION_172
0x400af03	        0x4883c408	                              add rsp, 8	      7579	ldlang.c	FUNCTION_172
0x400af07	              0x5b	                                 pop rbx	      7579	ldlang.c	FUNCTION_172
0x400af08	              0x5d	                                 pop rbp	      7579	ldlang.c	FUNCTION_172
0x400af09	            0x415c	                                 pop r12	      7579	ldlang.c	FUNCTION_172
0x400af0b	            0x415d	                                 pop r13	      7579	ldlang.c	FUNCTION_172
0x400af0d	            0x415e	                                 pop r14	      7579	ldlang.c	FUNCTION_172
0x400af0f	            0x415f	                                 pop r15	      7579	ldlang.c	FUNCTION_172
0x400af11	              0xc3	                                     ret	      7579	ldlang.c	FUNCTION_172
walk_wild	IF,4:ELSE,3:SWITCH,0:functions,3:CALL,3:DO,0:FOR,0:WHILE,0	271
0x4008410	            0x4157	                                push r15	       909	ldlang.c	FUNCTION_27
0x4008412	            0x4156	                                push r14	       909	ldlang.c	FUNCTION_27
0x4008414	            0x4155	                                push r13	       909	ldlang.c	FUNCTION_27
0x4008416	            0x4154	                                push r12	       909	ldlang.c	FUNCTION_27
0x4008418	              0x55	                                push rbp	       909	ldlang.c	FUNCTION_27
0x4008419	              0x53	                                push rbx	       909	ldlang.c	FUNCTION_27
0x400841a	          0x4889fd	                            mov rbp, rdi	       909	ldlang.c	FUNCTION_27
0x400841d	        0x4883ec28	                           sub rsp, 0x28	       909	ldlang.c	FUNCTION_27
0x4008421	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       910	ldlang.c	FUNCTION_27
0x4008425	      0x4889742408	                mov qword [rsp + 8], rsi	       909	ldlang.c	FUNCTION_27
0x400842a	      0x4889542410	             mov qword [rsp + 0x10], rdx	       909	ldlang.c	FUNCTION_27
0x400842f	          0x4885db	                           test rbx, rbx	       913	ldlang.c	FUNCTION_27	IF_1
0x4008432	     0xf84b4010000	                            je 0x40085ec	       913	ldlang.c	FUNCTION_27	IF_1
0x4008438	     0xfbe35000000	           movsx esi, byte [0x0400843f] 	       159	ldlang.c	FUNCTION_3	IF_1
0x400843f	          0x4084f6	                           test sil, sil	       159	ldlang.c	FUNCTION_3	IF_1
0x4008442	     0xf84cb020000	                            je 0x4008713	       159	ldlang.c	FUNCTION_3	IF_1
0x4008448	          0x4889df	                            mov rdi, rbx	       162	ldlang.c	FUNCTION_3
0x400844b	      0xe800000000	                          call 0x4008450	       162	ldlang.c	FUNCTION_3
0x4008450	          0x4885c0	                           test rax, rax	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4008453	          0x4989c5	                            mov r13, rax	       162	ldlang.c	FUNCTION_3
0x4008456	     0xf84b7020000	                            je 0x4008713	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x400845c	    0x4c8b35000000	            mov r14, qword [0x04008463] 	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4008463	          0x4d85f6	                           test r14, r14	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4008466	     0xf84b6000000	                            je 0x4008522	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x400846c	        0x4c8d6001	                      lea r12, [rax + 1]	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x4008470	    0x49bf01002000	             movabs r15, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x400847a	    0x660f1f440000	                    nop word [rax + rax]	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008480	      0x410fb64501	               movzx eax, byte [r13 + 1]	       184	ldlang.c	FUNCTION_4	IF_1
0x4008485	            0x84c0	                             test al, al	       184	ldlang.c	FUNCTION_4	IF_1
0x4008487	     0xf85f3000000	                           jne 0x4008580	       184	ldlang.c	FUNCTION_4	IF_1
0x400848d	        0x498b4620	            mov rax, qword [r14 + 0x20] 	       187	ldlang.c	FUNCTION_4	IF_1
0x4008491	          0x4c39eb	                            cmp rbx, r13	       187	ldlang.c	FUNCTION_4	IF_1
0x4008494	           0xf94c2	                                 sete dl	       187	ldlang.c	FUNCTION_4	IF_1
0x4008497	            0x31c9	                            xor ecx, ecx	       187	ldlang.c	FUNCTION_4	IF_1
0x4008499	          0x4885c0	                           test rax, rax	       187	ldlang.c	FUNCTION_4	IF_1
0x400849c	            0x740b	                            je 0x40084a9	       187	ldlang.c	FUNCTION_4	IF_1
0x400849e	    0x4883b8d00000	               cmp qword [rax + 0xd0], 0	       187	ldlang.c	FUNCTION_4	IF_1
0x40084a6	           0xf95c1	                                setne cl	       187	ldlang.c	FUNCTION_4	IF_1
0x40084a9	            0x38d1	                              cmp cl, dl	       186	ldlang.c	FUNCTION_4	IF_1
0x40084ab	            0x7468	                            je 0x4008515	       186	ldlang.c	FUNCTION_4	IF_1
0x40084ad	          0x4c39eb	                            cmp rbx, r13	       191	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40084b0	     0xf8482000000	                            je 0x4008538	       191	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40084b6	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       193	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40084bd	          0x488b30	                    mov rsi, qword [rax]	       193	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40084c0	      0x41c6450000	                       mov byte [r13], 0	       194	ldlang.c	FUNCTION_4	IF_1	IF_2
0x40084c5	           0xfb603	                   movzx eax, byte [rbx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084c8	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084ca	     0xf8400010000	                            je 0x40085d0	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084d0	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084d3	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084d5	            0x7706	                            ja 0x40084dd	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084d7	        0x490fa3c7	                             bt r15, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x40084db	            0x721f	                            jb 0x40084fc	      1115	string2.h	FUNCTION_223	WHILE_1
0x40084dd	          0x4889da	                            mov rdx, rbx	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084e0	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x40084e4	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084e7	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084e9	     0xf84e1000000	                            je 0x40085d0	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084ef	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084f2	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084f4	            0x77ea	                            ja 0x40084e0	      1114	string2.h	FUNCTION_223	WHILE_1
0x40084f6	        0x490fa3c7	                             bt r15, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x40084fa	            0x73e4	                           jae 0x40084e0	      1115	string2.h	FUNCTION_223	WHILE_1
0x40084fc	            0x31d2	                            xor edx, edx	       147	ldlang.c	FUNCTION_2	CALL_1
0x40084fe	          0x4889df	                            mov rdi, rbx	       147	ldlang.c	FUNCTION_2	CALL_1
0x4008501	      0xe800000000	                          call 0x4008506	       147	ldlang.c	FUNCTION_2	CALL_1
0x4008506	     0xfb615000000	           movzx edx, byte [0x0400850d] 	       196	ldlang.c	FUNCTION_4	IF_1	IF_2
0x400850d	            0x85c0	                           test eax, eax	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x400850f	        0x41885500	                      mov byte [r13], dl	       196	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4008513	            0x7423	                            je 0x4008538	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x4008515	        0x4d8b7630	            mov r14, qword [r14 + 0x30] 	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4008519	          0x4d85f6	                           test r14, r14	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x400851c	     0xf855effffff	                           jne 0x4008480	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4008522	        0x4883c428	                           add rsp, 0x28	       946	ldlang.c	FUNCTION_27
0x4008526	              0x5b	                                 pop rbx	       946	ldlang.c	FUNCTION_27
0x4008527	              0x5d	                                 pop rbp	       946	ldlang.c	FUNCTION_27
0x4008528	            0x415c	                                 pop r12	       946	ldlang.c	FUNCTION_27
0x400852a	            0x415d	                                 pop r13	       946	ldlang.c	FUNCTION_27
0x400852c	            0x415e	                                 pop r14	       946	ldlang.c	FUNCTION_27
0x400852e	            0x415f	                                 pop r15	       946	ldlang.c	FUNCTION_27
0x4008530	              0xc3	                                     ret	       946	ldlang.c	FUNCTION_27
0x4008531	     0xf1f80000000	                         nop dword [rax]	       946	ldlang.c	FUNCTION_27
0x4008538	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x400853c	          0x4c89f6	                            mov rsi, r14	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x400853f	      0xe82cacffff	 call sym.walk_wild_file_in_exclude_list	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4008544	            0x85c0	                           test eax, eax	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4008546	            0x75cd	                           jne 0x4008515	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4008548	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       878	ldlang.c	FUNCTION_26	IF_2
0x400854c	          0x4885ff	                           test rdi, rdi	       878	ldlang.c	FUNCTION_26	IF_2
0x400854f	            0x7412	                            je 0x4008563	       878	ldlang.c	FUNCTION_26	IF_2
0x4008551	      0xbe02000000	                              mov esi, 2	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4008556	      0xe800000000	                          call 0x400855b	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x400855b	            0x85c0	                           test eax, eax	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x400855d	     0xf8544010000	                           jne 0x40086a7	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4008563	      0x41f6464810	           test byte [r14 + 0x48], 0x10 	       745	ldlang.c	FUNCTION_23	IF_1
0x4008568	            0x75ab	                           jne 0x4008515	       745	ldlang.c	FUNCTION_23	IF_1
0x400856a	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       748	ldlang.c	FUNCTION_23
0x400856f	      0x488b542408	                mov rdx, qword [rsp + 8]	       748	ldlang.c	FUNCTION_23
0x4008574	          0x4c89f6	                            mov rsi, r14	       748	ldlang.c	FUNCTION_23
0x4008577	          0x4889ef	                            mov rdi, rbp	       748	ldlang.c	FUNCTION_23
0x400857a	          0xff5548	                 call qword [rbp + 0x48]	       748	ldlang.c	FUNCTION_23
0x400857d	            0xeb96	                           jmp 0x4008515	       748	ldlang.c	FUNCTION_23
0x400857f	              0x90	                                     nop	       748	ldlang.c	FUNCTION_23
0x4008580	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008583	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008587	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008589	            0x7706	                            ja 0x4008591	      1114	string2.h	FUNCTION_223	WHILE_1
0x400858b	        0x490fa3c7	                             bt r15, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400858f	            0x724c	                            jb 0x40085dd	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008591	          0x4c89e2	                            mov rdx, r12	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008594	         0xf1f4000	                         nop dword [rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008598	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x400859c	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400859f	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x40085a1	            0x743f	                            je 0x40085e2	      1114	string2.h	FUNCTION_223	WHILE_1
0x40085a3	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x40085a6	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x40085a8	            0x77ee	                            ja 0x4008598	      1114	string2.h	FUNCTION_223	WHILE_1
0x40085aa	        0x490fa3c7	                             bt r15, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x40085ae	            0x73e8	                           jae 0x4008598	      1115	string2.h	FUNCTION_223	WHILE_1
0x40085b0	            0x31d2	                            xor edx, edx	       147	ldlang.c	FUNCTION_2	CALL_1
0x40085b2	          0x4c89e7	                            mov rdi, r12	       147	ldlang.c	FUNCTION_2	CALL_1
0x40085b5	      0xe800000000	                          call 0x40085ba	       147	ldlang.c	FUNCTION_2	CALL_1
0x40085ba	            0x85c0	                           test eax, eax	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x40085bc	     0xf84cbfeffff	                            je 0x400848d	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x40085c2	      0xe94effffff	                           jmp 0x4008515	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x40085c7	    0x660f1f840000	                    nop word [rax + rax]	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x40085d0	          0x4889df	                            mov rdi, rbx	       148	ldlang.c	FUNCTION_2
0x40085d3	      0xe800000000	                          call 0x40085d8	       148	ldlang.c	FUNCTION_2
0x40085d8	      0xe929ffffff	                           jmp 0x4008506	       148	ldlang.c	FUNCTION_2
0x40085dd	          0x4d85e4	                           test r12, r12	       146	ldlang.c	FUNCTION_2	IF_1
0x40085e0	            0x75ce	                           jne 0x40085b0	       146	ldlang.c	FUNCTION_2	IF_1
0x40085e2	          0x4c89e7	                            mov rdi, r12	       148	ldlang.c	FUNCTION_2
0x40085e5	      0xe800000000	                          call 0x40085ea	       148	ldlang.c	FUNCTION_2
0x40085ea	            0xebce	                           jmp 0x40085ba	       148	ldlang.c	FUNCTION_2
0x40085ec	    0x488b1d000000	            mov rbx, qword [0x040085f3] 	       916	ldlang.c	FUNCTION_27	IF_1
0x40085f3	          0x4885db	                           test rbx, rbx	       916	ldlang.c	FUNCTION_27	IF_1
0x40085f6	            0x7515	                           jne 0x400860d	       916	ldlang.c	FUNCTION_27	IF_1
0x40085f8	      0xe925ffffff	                           jmp 0x4008522	       916	ldlang.c	FUNCTION_27	IF_1
0x40085fd	           0xf1f00	                         nop dword [rax]	       916	ldlang.c	FUNCTION_27	IF_1
0x4008600	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       916	ldlang.c	FUNCTION_27	IF_1
0x4008604	          0x4885db	                           test rbx, rbx	       916	ldlang.c	FUNCTION_27	IF_1
0x4008607	     0xf8415ffffff	                            je 0x4008522	       916	ldlang.c	FUNCTION_27	IF_1
0x400860d	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4008611	          0x4889de	                            mov rsi, rbx	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4008614	      0xe857abffff	 call sym.walk_wild_file_in_exclude_list	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4008619	            0x85c0	                           test eax, eax	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x400861b	            0x75e3	                           jne 0x4008600	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x400861d	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       878	ldlang.c	FUNCTION_26	IF_2
0x4008621	          0x4885ff	                           test rdi, rdi	       878	ldlang.c	FUNCTION_26	IF_2
0x4008624	            0x740e	                            je 0x4008634	       878	ldlang.c	FUNCTION_26	IF_2
0x4008626	      0xbe02000000	                              mov esi, 2	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x400862b	      0xe800000000	                          call 0x4008630	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4008630	            0x85c0	                           test eax, eax	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4008632	            0x751c	                           jne 0x4008650	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4008634	        0xf6434810	           test byte [rbx + 0x48], 0x10 	       745	ldlang.c	FUNCTION_23	IF_1
0x4008638	            0x75c6	                           jne 0x4008600	       745	ldlang.c	FUNCTION_23	IF_1
0x400863a	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       748	ldlang.c	FUNCTION_23
0x400863f	      0x488b542408	                mov rdx, qword [rsp + 8]	       748	ldlang.c	FUNCTION_23
0x4008644	          0x4889de	                            mov rsi, rbx	       748	ldlang.c	FUNCTION_23
0x4008647	          0x4889ef	                            mov rdi, rbp	       748	ldlang.c	FUNCTION_23
0x400864a	          0xff5548	                 call qword [rbp + 0x48]	       748	ldlang.c	FUNCTION_23
0x400864d	            0xebb1	                           jmp 0x4008600	       748	ldlang.c	FUNCTION_23
0x400864f	              0x90	                                     nop	       748	ldlang.c	FUNCTION_23
0x4008650	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x4008654	            0x31f6	                            xor esi, esi	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x4008656	      0xe800000000	                          call 0x400865b	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x400865b	          0x4885c0	                           test rax, rax	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x400865e	            0x7519	                           jne 0x4008679	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4008660	            0xeb9e	                           jmp 0x4008600	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4008662	    0x660f1f440000	                    nop word [rax + rax]	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4008668	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x400866c	          0x4889c6	                            mov rsi, rax	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x400866f	      0xe800000000	                          call 0x4008674	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x4008674	          0x4885c0	                           test rax, rax	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4008677	            0x7487	                            je 0x4008600	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4008679	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x4008680	          0x4885f6	                           test rsi, rsi	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x4008683	            0x74e3	                            je 0x4008668	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x4008685	        0xf6464810	           test byte [rsi + 0x48], 0x10 	       745	ldlang.c	FUNCTION_23	IF_1
0x4008689	            0x75dd	                           jne 0x4008668	       745	ldlang.c	FUNCTION_23	IF_1
0x400868b	      0x4889442418	             mov qword [rsp + 0x18], rax	       745	ldlang.c	FUNCTION_23	IF_1
0x4008690	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       748	ldlang.c	FUNCTION_23
0x4008695	          0x4889ef	                            mov rdi, rbp	       748	ldlang.c	FUNCTION_23
0x4008698	      0x488b542408	                mov rdx, qword [rsp + 8]	       748	ldlang.c	FUNCTION_23
0x400869d	          0xff5548	                 call qword [rbp + 0x48]	       748	ldlang.c	FUNCTION_23
0x40086a0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       748	ldlang.c	FUNCTION_23
0x40086a5	            0xebc1	                           jmp 0x4008668	       748	ldlang.c	FUNCTION_23
0x40086a7	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x40086ab	            0x31f6	                            xor esi, esi	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x40086ad	      0xe800000000	                          call 0x40086b2	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x40086b2	          0x4885c0	                           test rax, rax	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x40086b5	     0xf845afeffff	                            je 0x4008515	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x40086bb	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x40086c2	          0x4885f6	                           test rsi, rsi	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x40086c5	            0x752a	                           jne 0x40086f1	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x40086c7	    0x660f1f840000	                    nop word [rax + rax]	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x40086d0	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x40086d4	          0x4889c6	                            mov rsi, rax	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x40086d7	      0xe800000000	                          call 0x40086dc	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x40086dc	          0x4885c0	                           test rax, rax	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x40086df	     0xf8430feffff	                            je 0x4008515	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x40086e5	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x40086ec	          0x4885f6	                           test rsi, rsi	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x40086ef	            0x74df	                            je 0x40086d0	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x40086f1	        0xf6464810	           test byte [rsi + 0x48], 0x10 	       745	ldlang.c	FUNCTION_23	IF_1
0x40086f5	            0x75d9	                           jne 0x40086d0	       745	ldlang.c	FUNCTION_23	IF_1
0x40086f7	      0x4889442418	             mov qword [rsp + 0x18], rax	       745	ldlang.c	FUNCTION_23	IF_1
0x40086fc	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       748	ldlang.c	FUNCTION_23
0x4008701	          0x4889ef	                            mov rdi, rbp	       748	ldlang.c	FUNCTION_23
0x4008704	      0x488b542408	                mov rdx, qword [rsp + 8]	       748	ldlang.c	FUNCTION_23
0x4008709	          0xff5548	                 call qword [rbp + 0x48]	       748	ldlang.c	FUNCTION_23
0x400870c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       748	ldlang.c	FUNCTION_23
0x4008711	            0xebbd	                           jmp 0x40086d0	       748	ldlang.c	FUNCTION_23
0x4008713	           0xfb603	                   movzx eax, byte [rbx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008716	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008718	     0xf8492000000	                            je 0x40087b0	      1114	string2.h	FUNCTION_223	WHILE_1
0x400871e	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008721	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008723	            0x7710	                            ja 0x4008735	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008725	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x400872f	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008733	            0x722b	                            jb 0x4008760	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008735	          0x4889da	                            mov rdx, rbx	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008738	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008742	    0x660f1f440000	                    nop word [rax + rax]	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008748	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x400874c	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400874f	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008751	            0x745d	                            je 0x40087b0	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008753	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008756	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008758	            0x77ee	                            ja 0x4008748	      1114	string2.h	FUNCTION_223	WHILE_1
0x400875a	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400875e	            0x73e8	                           jae 0x4008748	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008760	    0x4c8b25000000	            mov r12, qword [0x04008767] 	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4008767	          0x4d85e4	                           test r12, r12	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x400876a	            0x751a	                           jne 0x4008786	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x400876c	      0xe9b1fdffff	                           jmp 0x4008522	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4008771	     0xf1f80000000	                         nop dword [rax]	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4008778	      0x4d8b642430	            mov r12, qword [r12 + 0x30] 	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x400877d	          0x4d85e4	                           test r12, r12	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4008780	     0xf849cfdffff	                            je 0x4008522	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4008786	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x400878b	            0x31d2	                            xor edx, edx	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x400878d	          0x4889df	                            mov rdi, rbx	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4008790	      0xe800000000	                          call 0x4008795	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4008795	            0x85c0	                           test eax, eax	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4008797	            0x75df	                           jne 0x4008778	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4008799	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x400879e	      0x488b542408	                mov rdx, qword [rsp + 8]	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x40087a3	          0x4c89e6	                            mov rsi, r12	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x40087a6	          0x4889ef	                            mov rdi, rbp	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x40087a9	      0xe812acffff	                 call sym.walk_wild_file	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x40087ae	            0xebc8	                           jmp 0x4008778	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x40087b0	          0x4889df	                            mov rdi, rbx	       942	ldlang.c	FUNCTION_27	ELSE_3	CALL_2
0x40087b3	      0xe8a8fbffff	                    call sym.lookup_name	       942	ldlang.c	FUNCTION_27	ELSE_3	CALL_2
0x40087b8	          0x4885c0	                           test rax, rax	       943	ldlang.c	FUNCTION_27	ELSE_3	IF_4
0x40087bb	     0xf8461fdffff	                            je 0x4008522	       943	ldlang.c	FUNCTION_27	ELSE_3	IF_4
0x40087c1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x40087c6	      0x488b542408	                mov rdx, qword [rsp + 8]	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x40087cb	        0x4883c428	                           add rsp, 0x28	       946	ldlang.c	FUNCTION_27
0x40087cf	              0x5b	                                 pop rbx	       946	ldlang.c	FUNCTION_27
0x40087d0	          0x4889ef	                            mov rdi, rbp	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x40087d3	          0x4889c6	                            mov rsi, rax	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x40087d6	              0x5d	                                 pop rbp	       946	ldlang.c	FUNCTION_27
0x40087d7	            0x415c	                                 pop r12	       946	ldlang.c	FUNCTION_27
0x40087d9	            0x415d	                                 pop r13	       946	ldlang.c	FUNCTION_27
0x40087db	            0x415e	                                 pop r14	       946	ldlang.c	FUNCTION_27
0x40087dd	            0x415f	                                 pop r15	       946	ldlang.c	FUNCTION_27
0x40087df	      0xe9dcabffff	                  jmp sym.walk_wild_file	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
print_statement	IF,3:ELSE,1:SWITCH,1:functions,0:CALL,21:DO,0:FOR,0:WHILE,0	652
0x4001290	            0x4156	                                push r14	      4534	ldlang.c	FUNCTION_105
0x4001292	            0x4155	                                push r13	      4534	ldlang.c	FUNCTION_105
0x4001294	            0x4154	                                push r12	      4534	ldlang.c	FUNCTION_105
0x4001296	              0x55	                                push rbp	      4534	ldlang.c	FUNCTION_105
0x4001297	              0x53	                                push rbx	      4534	ldlang.c	FUNCTION_105
0x4001298	          0x8b5f08	                mov ebx, dword [rdi + 8]	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x400129b	          0x83fb0f	                            cmp ebx, 0xf	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x400129e	     0xf87dd070000	                            ja 0x4001a81	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x40012a4	          0x4989fc	                            mov r12, rdi	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x40012a7	          0x4989f5	                            mov r13, rsi	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x40012aa	    0xff24dd000000	                       jmp qword [rbx*8]	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x40012b1	          0x8b4718	            mov eax, dword [rdi + 0x18] 	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012b4	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012b8	      0xbe00000000	                              mov esi, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012bd	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x40012be	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x40012bf	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x40012c1	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x40012c3	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x40012c5	            0x85c0	                           test eax, eax	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012c7	      0xb800000000	                              mov eax, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012cc	      0xbf00000000	                              mov edi, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012d1	        0x480f45f0	                         cmovne rsi, rax	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012d5	            0x31c0	                            xor eax, eax	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012d7	      0xe900000000	                           jmp 0x40012dc	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40012dc	    0x48833d000000	               cmp qword [0x040012e4], 0	      4542	ldlang.c	FUNCTION_105	SWITCH_1	IF_1
0x40012e4	     0xf8475040000	                            je 0x400175f	      4542	ldlang.c	FUNCTION_105	SWITCH_1	IF_1
0x40012ea	    0x8b3d00000000	            mov edi, dword [0x040012f0] 	      4544	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	IF_2
0x40012f0	            0x85ff	                           test edi, edi	      4544	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	IF_2
0x40012f2	     0xf85d7070000	                           jne 0x4001acf	      4544	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	IF_2
0x40012f8	      0xbf00000000	                              mov edi, 0	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x40012fd	            0x31c0	                            xor eax, eax	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x40012ff	      0xe800000000	                          call 0x4001304	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x4001304	    0x488b1d000000	            mov rbx, qword [0x0400130b] 	      4548	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_5
0x400130b	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x400130e	     0xf844b040000	                            je 0x400175f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001314	         0xf1f4000	                         nop dword [rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001318	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400131b	          0x4c89ee	                            mov rsi, r13	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400131e	      0xe86dffffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001323	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x4001326	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001329	            0x75ed	                           jne 0x4001318	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x400132b	      0xe92f040000	                           jmp 0x400175f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001330	    0x483b3d000000	            cmp rdi, qword [0x04001337] 	      3988	ldlang.c	FUNCTION_90	IF_1
0x4001337	     0xf84b3000000	                            je 0x40013f0	      3988	ldlang.c	FUNCTION_90	IF_1
0x400133d	        0x488b6f38	            mov rbp, qword [rdi + 0x38] 	      3985	ldlang.c	FUNCTION_90
0x4001341	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001345	            0x31c0	                            xor eax, eax	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001347	      0xbf00000000	                              mov edi, 0	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x400134c	      0xe800000000	                          call 0x4001351	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001351	          0x4885ed	                           test rbp, rbp	      3992	ldlang.c	FUNCTION_90	IF_1	IF_2
0x4001354	     0xf8491000000	                            je 0x40013eb	      3992	ldlang.c	FUNCTION_90	IF_1	IF_2
0x400135a	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      3994	ldlang.c	FUNCTION_90	IF_1	IF_2
0x400135e	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001363	    0x488905000000	            mov qword [0x0400136a], rax 	      3994	ldlang.c	FUNCTION_90	IF_1	IF_2
0x400136a	      0xe800000000	                          call 0x400136f	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x400136f	          0x83f80e	                            cmp eax, 0xe	      3997	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x4001372	            0x89c3	                            mov ebx, eax	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001374	     0xf8ff3080000	                            jg 0x4001c6d	      3997	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x400137a	    0x660f1f440000	                    nop word [rax + rax]	      3997	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x4001380	          0x83c301	                              add ebx, 1	      4005	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x4001383	      0xe800000000	                          call 0x4001388	      4004	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1	CALL_4
0x4001388	          0x83fb10	                           cmp ebx, 0x10	      4002	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x400138b	            0x75f3	                           jne 0x4001380	      4002	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x400138d	    0x8b0d00000000	            mov ecx, dword [0x04001393] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x4001393	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x4001397	            0x31c0	                            xor eax, eax	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x4001399	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x400139d	      0xbf00000000	                              mov edi, 0	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40013a2	          0x48d3ea	                             shr rdx, cl	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40013a5	      0xe800000000	                          call 0x40013aa	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40013aa	        0x488b5d30	            mov rbx, qword [rbp + 0x30] 	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x40013ae	        0x48395d28	            cmp qword [rbp + 0x28], rbx 	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x40013b2	            0x741e	                            je 0x40013d2	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x40013b4	      0xbe00000000	                              mov esi, 0	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40013b9	            0x31ff	                            xor edi, edi	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40013bb	      0xba05000000	                              mov edx, 5	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40013c0	      0xe800000000	                          call 0x40013c5	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40013c5	          0x4889de	                            mov rsi, rbx	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40013c8	          0x4889c7	                            mov rdi, rax	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40013cb	            0x31c0	                            xor eax, eax	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40013cd	      0xe800000000	                          call 0x40013d2	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40013d2	      0x498b7c2468	            mov rdi, qword [r12 + 0x68] 	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x40013d7	          0x4885ff	                           test rdi, rdi	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x40013da	            0x740f	                            je 0x40013eb	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x40013dc	      0xba00000000	                              mov edx, 0	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x40013e1	      0xbe00000000	                              mov esi, 0	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x40013e6	      0xe800000000	                          call 0x40013eb	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x40013eb	      0xe800000000	                          call 0x40013f0	      4018	ldlang.c	FUNCTION_90	IF_1	CALL_9
0x40013f0	      0x498b5c2410	            mov rbx, qword [r12 + 0x10] 	      4021	ldlang.c	FUNCTION_90	CALL_10
0x40013f5	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40013f8	     0xf8461030000	                            je 0x400175f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40013fe	            0x6690	                                     nop	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001400	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001403	          0x4c89e6	                            mov rsi, r12	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001406	      0xe885feffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400140b	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x400140e	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001411	            0x75ed	                           jne 0x4001400	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001413	      0xe947030000	                           jmp 0x400175f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001418	      0xbb10000000	                           mov ebx, 0x10	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x400141d	           0xf1f00	                         nop dword [rax]	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4001420	      0xe800000000	                          call 0x4001425	      4035	ldlang.c	FUNCTION_91	CALL_1
0x4001425	          0x83eb01	                              sub ebx, 1	      4034	ldlang.c	FUNCTION_91	FOR_1
0x4001428	            0x75f6	                           jne 0x4001420	      4034	ldlang.c	FUNCTION_91	FOR_1
0x400142a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4037	ldlang.c	FUNCTION_91	IF_1
0x400142f	          0x8b5010	            mov edx, dword [rax + 0x10] 	      4037	ldlang.c	FUNCTION_91	IF_1
0x4001432	          0x83fa08	                              cmp edx, 8	      4037	ldlang.c	FUNCTION_91	IF_1
0x4001435	     0xf84c7060000	                            je 0x4001b02	      4037	ldlang.c	FUNCTION_91	IF_1
0x400143b	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      4044	ldlang.c	FUNCTION_91	ELSE_1
0x400143f	          0x80392e	                    cmp byte [rcx], 0x2e	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001442	     0xf8411080000	                            je 0x4001c59	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001448	    0x48890d000000	            mov qword [0x0400144f], rcx 	      4048	ldlang.c	FUNCTION_91	ELSE_1	IF_2
0x400144f	            0x31db	                            xor ebx, ebx	      4048	ldlang.c	FUNCTION_91	ELSE_1	IF_2
0x4001451	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      4052	ldlang.c	FUNCTION_91
0x4001455	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4049	ldlang.c	FUNCTION_91	ELSE_1
0x4001459	      0xb800000000	                              mov eax, 0	      4054	ldlang.c	FUNCTION_91	IF_3
0x400145e	          0x4885f6	                           test rsi, rsi	      4054	ldlang.c	FUNCTION_91	IF_3
0x4001461	        0x480f44f0	                          cmove rsi, rax	      4054	ldlang.c	FUNCTION_91	IF_3
0x4001465	          0x83fa05	                              cmp edx, 5	      4056	ldlang.c	FUNCTION_91	IF_4
0x4001468	     0xf85aa060000	                           jne 0x4001b18	      4056	ldlang.c	FUNCTION_91	IF_4
0x400146e	    0xc70500000000	               mov dword [0x04001478], 0	      4059	ldlang.c	FUNCTION_91	ELSE_2
0x4001478	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x400147d	        0x83781005	               cmp dword [rax + 0x10], 5	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x4001481	     0xf8403080000	                            je 0x4001c8a	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x4001487	      0xbf00000000	                              mov edi, 0	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x400148c	            0x31c0	                            xor eax, eax	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x400148e	      0xe800000000	                          call 0x4001493	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x4001493	      0xbf00000000	                              mov edi, 0	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x4001498	            0x31c0	                            xor eax, eax	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x400149a	      0xe800000000	                          call 0x400149f	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x400149f	      0xbf00000000	                              mov edi, 0	      4108	ldlang.c	FUNCTION_91	CALL_10
0x40014a4	            0x31c0	                            xor eax, eax	      4108	ldlang.c	FUNCTION_91	CALL_10
0x40014a6	    0x48c705000000	               mov qword [0x040014b1], 0	      4106	ldlang.c	FUNCTION_91
0x40014b1	      0xe800000000	                          call 0x40014b6	      4108	ldlang.c	FUNCTION_91	CALL_10
0x40014b6	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      4109	ldlang.c	FUNCTION_91	CALL_11
0x40014bb	            0xeb51	                           jmp 0x400150e	      4109	ldlang.c	FUNCTION_91	CALL_11
0x40014bd	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	      4109	ldlang.c	FUNCTION_91	CALL_11
0x40014c1	          0x4885c9	                           test rcx, rcx	      4116	ldlang.c	FUNCTION_92	IF_1
0x40014c4	     0xf8495020000	                            je 0x400175f	      4116	ldlang.c	FUNCTION_92	IF_1
0x40014ca	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      4117	ldlang.c	FUNCTION_92	IF_1
0x40014ce	          0x4885c0	                           test rax, rax	      4117	ldlang.c	FUNCTION_92	IF_1
0x40014d1	            0x740a	                            je 0x40014dd	      4117	ldlang.c	FUNCTION_92	IF_1
0x40014d3	        0xf6404602	               test byte [rax + 0x46], 2	      4118	ldlang.c	FUNCTION_92	IF_1
0x40014d7	     0xf8582020000	                           jne 0x400175f	      4118	ldlang.c	FUNCTION_92	IF_1
0x40014dd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_42
0x40014e2	      0xe98a020000	                           jmp 0x4001771	        97	stdio2.h	CALL_42
0x40014e7	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	        97	stdio2.h	CALL_42
0x40014eb	      0xba05000000	                              mov edx, 5	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40014f0	      0xbe00000000	                              mov esi, 0	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40014f5	            0x31ff	                            xor edi, edi	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40014f7	      0xe800000000	                          call 0x40014fc	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40014fc	          0x4889de	                            mov rsi, rbx	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40014ff	          0x4889c7	                            mov rdi, rax	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001502	            0x31c0	                            xor eax, eax	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001504	      0xe800000000	                          call 0x4001509	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001509	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4341	ldlang.c	FUNCTION_99	CALL_3
0x400150e	      0xe800000000	                          call 0x4001513	      4109	ldlang.c	FUNCTION_91	CALL_11
0x4001513	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001514	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001515	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001517	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001519	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x400151b	      0xe900000000	                           jmp 0x4001520	      4110	ldlang.c	FUNCTION_91	CALL_12
0x4001520	      0xe800000000	                          call 0x4001525	      4418	ldlang.c	FUNCTION_102	CALL_1
0x4001525	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4420	ldlang.c	FUNCTION_102	IF_1
0x400152a	          0x4885c0	                           test rax, rax	      4420	ldlang.c	FUNCTION_102	IF_1
0x400152d	            0x7445	                            je 0x4001574	      4420	ldlang.c	FUNCTION_102	IF_1
0x400152f	          0x488b30	                    mov rsi, qword [rax]	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4001532	      0xbf00000000	                              mov edi, 0	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4001537	            0x31c0	                            xor eax, eax	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4001539	      0xe800000000	                          call 0x400153e	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x400153e	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001543	        0x488b5808	                mov rbx, qword [rax + 8]	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001547	          0x4885db	                           test rbx, rbx	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x400154a	            0x741c	                            je 0x4001568	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x400154c	         0xf1f4000	                         nop dword [rax]	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001550	          0x488b33	                    mov rsi, qword [rbx]	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4001553	            0x31c0	                            xor eax, eax	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4001555	      0xbf00000000	                              mov edi, 0	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x400155a	      0xe800000000	                          call 0x400155f	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x400155f	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001563	          0x4885db	                           test rbx, rbx	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001566	            0x75e8	                           jne 0x4001550	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001568	      0xbf00000000	                              mov edi, 0	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x400156d	            0x31c0	                            xor eax, eax	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x400156f	      0xe800000000	                          call 0x4001574	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x4001574	      0x418b742418	            mov esi, dword [r12 + 0x18] 	      4429	ldlang.c	FUNCTION_102	IF_2
0x4001579	            0x85f6	                           test esi, esi	      4429	ldlang.c	FUNCTION_102	IF_2
0x400157b	     0xf8570050000	                           jne 0x4001af1	      4429	ldlang.c	FUNCTION_102	IF_2
0x4001581	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      4431	ldlang.c	FUNCTION_102	IF_3
0x4001586	          0x4885f6	                           test rsi, rsi	      4431	ldlang.c	FUNCTION_102	IF_3
0x4001589	     0xf84ea060000	                            je 0x4001c79	      4431	ldlang.c	FUNCTION_102	IF_3
0x400158f	      0xbf00000000	                              mov edi, 0	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4001594	            0x31c0	                            xor eax, eax	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4001596	      0xe800000000	                          call 0x400159b	      4432	ldlang.c	FUNCTION_102	CALL_6
0x400159b	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	      4435	ldlang.c	FUNCTION_102	IF_4
0x40015a0	            0x85c9	                           test ecx, ecx	      4435	ldlang.c	FUNCTION_102	IF_4
0x40015a2	     0xf8538050000	                           jne 0x4001ae0	      4435	ldlang.c	FUNCTION_102	IF_4
0x40015a8	            0x31c0	                            xor eax, eax	      4438	ldlang.c	FUNCTION_102	CALL_9
0x40015aa	      0xbf00000000	                              mov edi, 0	      4438	ldlang.c	FUNCTION_102	CALL_9
0x40015af	      0xe800000000	                          call 0x40015b4	      4438	ldlang.c	FUNCTION_102	CALL_9
0x40015b4	      0x4d8b742420	            mov r14, qword [r12 + 0x20] 	      4439	ldlang.c	FUNCTION_102	FOR_2
0x40015b9	          0x4d85f6	                           test r14, r14	      4439	ldlang.c	FUNCTION_102	FOR_2
0x40015bc	     0xf84ce030000	                            je 0x4001990	      4439	ldlang.c	FUNCTION_102	FOR_2
0x40015c2	    0x660f1f440000	                    nop word [rax + rax]	      4439	ldlang.c	FUNCTION_102	FOR_2
0x40015c8	      0x41837e1806	               cmp dword [r14 + 0x18], 6	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x40015cd	     0xf87f5040000	                            ja 0x4001ac8	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x40015d3	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x40015d7	    0xff24c5000000	                       jmp qword [rax*8]	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x40015de	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x40015df	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x40015e0	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x40015e2	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x40015e4	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x40015e6	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x40015ea	            0x31f6	                            xor esi, esi	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x40015ec	      0xe94ff9ffff	             jmp sym.print_input_section	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x40015f1	      0xbf00000000	                              mov edi, 0	      4558	ldlang.c	FUNCTION_105	SWITCH_1	CALL_8
0x40015f6	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x40015f7	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x40015f8	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x40015fa	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x40015fc	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x40015fe	            0x31c0	                            xor eax, eax	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x4001600	      0xe900000000	                           jmp 0x4001605	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x4001605	    0x488b0d000000	            mov rcx, qword [0x0400160c] 	      4271	ldlang.c	FUNCTION_97	CALL_1
0x400160c	      0xba0d000000	                            mov edx, 0xd	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001611	      0xbe01000000	                              mov esi, 1	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001616	      0xbf00000000	                              mov edi, 0	      4271	ldlang.c	FUNCTION_97	CALL_1
0x400161b	      0xe800000000	                          call 0x4001620	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001620	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001625	          0x488b18	                    mov rbx, qword [rax]	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001628	        0x488d6808	                      lea rbp, [rax + 8]	      4272	ldlang.c	FUNCTION_97	FOR_1
0x400162c	          0x4885db	                           test rbx, rbx	      4272	ldlang.c	FUNCTION_97	FOR_1
0x400162f	            0x742d	                            je 0x400165e	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001631	     0xf1f80000000	                         nop dword [rax]	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001638	         0xfb64d00	                   movzx ecx, byte [rbp]	        97	stdio2.h	CALL_42
0x400163c	    0x488b3d000000	            mov rdi, qword [0x04001643] 	        97	stdio2.h	CALL_42
0x4001643	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x4001645	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_42
0x400164a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x400164f	        0x4883c501	                              add rbp, 1	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001653	      0xe800000000	                          call 0x4001658	        97	stdio2.h	CALL_42
0x4001658	        0x4883eb01	                              sub rbx, 1	      4272	ldlang.c	FUNCTION_97	FOR_1
0x400165c	            0x75da	                           jne 0x4001638	      4272	ldlang.c	FUNCTION_97	FOR_1
0x400165e	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x400165f	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001660	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001662	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001664	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001666	    0x488b35000000	            mov rsi, qword [0x0400166d] 	      4274	ldlang.c	FUNCTION_97	CALL_2
0x400166d	      0xbf0a000000	                            mov edi, 0xa	      4274	ldlang.c	FUNCTION_97	CALL_2
0x4001672	      0xe900000000	                           jmp 0x4001677	      4274	ldlang.c	FUNCTION_97	CALL_2
0x4001677	      0xbb10000000	                           mov ebx, 0x10	      4285	ldlang.c	FUNCTION_98	CALL_1
0x400167c	      0xe84ff8ffff	                       call sym.init_opb	      4285	ldlang.c	FUNCTION_98	CALL_1
0x4001681	     0xf1f80000000	                         nop dword [rax]	      4285	ldlang.c	FUNCTION_98	CALL_1
0x4001688	      0xe800000000	                          call 0x400168d	      4287	ldlang.c	FUNCTION_98	CALL_2
0x400168d	          0x83eb01	                              sub ebx, 1	      4286	ldlang.c	FUNCTION_98	FOR_1
0x4001690	            0x75f6	                           jne 0x4001688	      4286	ldlang.c	FUNCTION_98	FOR_1
0x4001692	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      4290	ldlang.c	FUNCTION_98	IF_1
0x4001697	      0x498b6c2430	            mov rbp, qword [r12 + 0x30] 	      4289	ldlang.c	FUNCTION_98
0x400169c	          0x4885c0	                           test rax, rax	      4290	ldlang.c	FUNCTION_98	IF_1
0x400169f	            0x7404	                            je 0x40016a5	      4290	ldlang.c	FUNCTION_98	IF_1
0x40016a1	        0x48036828	             add rbp, qword [rax + 0x28]	      4291	ldlang.c	FUNCTION_98	IF_1
0x40016a5	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40016aa	      0x2d1a010000	                          sub eax, 0x11a	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40016af	          0x83f804	                              cmp eax, 4	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40016b2	     0xf8751050000	                            ja 0x4001c09	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40016b8	    0xff24c5000000	                       jmp qword [rax*8]	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40016bf	      0xbb10000000	                           mov ebx, 0x10	      4354	ldlang.c	FUNCTION_100	CALL_1
0x40016c4	      0xe807f8ffff	                       call sym.init_opb	      4354	ldlang.c	FUNCTION_100	CALL_1
0x40016c9	     0xf1f80000000	                         nop dword [rax]	      4354	ldlang.c	FUNCTION_100	CALL_1
0x40016d0	      0xe800000000	                          call 0x40016d5	      4356	ldlang.c	FUNCTION_100	CALL_2
0x40016d5	          0x83eb01	                              sub ebx, 1	      4355	ldlang.c	FUNCTION_100	FOR_1
0x40016d8	            0x75f6	                           jne 0x40016d0	      4355	ldlang.c	FUNCTION_100	FOR_1
0x40016da	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4359	ldlang.c	FUNCTION_100	IF_1
0x40016df	      0x498b6c2448	            mov rbp, qword [r12 + 0x48] 	      4358	ldlang.c	FUNCTION_100
0x40016e4	          0x4885c0	                           test rax, rax	      4359	ldlang.c	FUNCTION_100	IF_1
0x40016e7	            0x7404	                            je 0x40016ed	      4359	ldlang.c	FUNCTION_100	IF_1
0x40016e9	        0x48036828	             add rbp, qword [rax + 0x28]	      4360	ldlang.c	FUNCTION_100	IF_1
0x40016ed	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4362	ldlang.c	FUNCTION_100	CALL_3
0x40016f2	      0xe800000000	                          call 0x40016f7	      4362	ldlang.c	FUNCTION_100	CALL_3
0x40016f7	            0x89c3	                            mov ebx, eax	      4362	ldlang.c	FUNCTION_100	CALL_3
0x40016f9	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x40016fe	    0x8b0d00000000	            mov ecx, dword [0x04001704] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001704	          0x4889da	                            mov rdx, rbx	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001707	          0x4889ee	                            mov rsi, rbp	      4364	ldlang.c	FUNCTION_100	CALL_4
0x400170a	      0xbf00000000	                              mov edi, 0	      4364	ldlang.c	FUNCTION_100	CALL_4
0x400170f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001713	          0x48d3ea	                             shr rdx, cl	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001716	          0x4889c1	                            mov rcx, rax	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001719	            0x31c0	                            xor eax, eax	      4364	ldlang.c	FUNCTION_100	CALL_4
0x400171b	      0xe800000000	                          call 0x4001720	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001720	      0x498b742428	            mov rsi, qword [r12 + 0x28] 	      4366	ldlang.c	FUNCTION_100	IF_2
0x4001725	          0x4885f6	                           test rsi, rsi	      4366	ldlang.c	FUNCTION_100	IF_2
0x4001728	     0xf8459040000	                            je 0x4001b87	      4366	ldlang.c	FUNCTION_100	IF_2
0x400172e	            0x31c0	                            xor eax, eax	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001730	      0xbf00000000	                              mov edi, 0	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001735	      0xe800000000	                          call 0x400173a	      4369	ldlang.c	FUNCTION_100	CALL_6
0x400173a	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      4371	ldlang.c	FUNCTION_100	CALL_7
0x400173f	      0xe800000000	                          call 0x4001744	      4371	ldlang.c	FUNCTION_100	CALL_7
0x4001744	      0xe800000000	                          call 0x4001749	      4373	ldlang.c	FUNCTION_100	CALL_8
0x4001749	    0x8b0d00000000	            mov ecx, dword [0x0400174f] 	      4375	ldlang.c	FUNCTION_100
0x400174f	          0x4889d8	                            mov rax, rbx	      4375	ldlang.c	FUNCTION_100
0x4001752	          0x48d3e8	                             shr rax, cl	      4375	ldlang.c	FUNCTION_100
0x4001755	          0x4801e8	                            add rax, rbp	      4375	ldlang.c	FUNCTION_100
0x4001758	    0x488905000000	            mov qword [0x0400175f], rax 	      4375	ldlang.c	FUNCTION_100
0x400175f	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001760	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001761	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001763	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001765	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001767	              0xc3	                                     ret	      4602	ldlang.c	FUNCTION_105
0x4001768	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	        97	stdio2.h	CALL_42
0x400176c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_42
0x4001771	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001772	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001773	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001775	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001777	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001779	    0x488b3d000000	            mov rdi, qword [0x04001780] 	        97	stdio2.h	CALL_42
0x4001780	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x4001785	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x4001787	      0xe900000000	                           jmp 0x400178c	        97	stdio2.h	CALL_42
0x400178c	      0xe83ff7ffff	                       call sym.init_opb	      4384	ldlang.c	FUNCTION_101	CALL_1
0x4001791	      0xbb09000000	                              mov ebx, 9	      4385	ldlang.c	FUNCTION_101	CALL_2
0x4001796	      0xbf00000000	                              mov edi, 0	      4385	ldlang.c	FUNCTION_101	CALL_2
0x400179b	            0x31c0	                            xor eax, eax	      4385	ldlang.c	FUNCTION_101	CALL_2
0x400179d	      0xe800000000	                          call 0x40017a2	      4385	ldlang.c	FUNCTION_101	CALL_2
0x40017a2	    0x660f1f440000	                    nop word [rax + rax]	      4385	ldlang.c	FUNCTION_101	CALL_2
0x40017a8	      0xe800000000	                          call 0x40017ad	      4390	ldlang.c	FUNCTION_101	WHILE_1	CALL_3
0x40017ad	          0x83eb01	                              sub ebx, 1	      4388	ldlang.c	FUNCTION_101	WHILE_1
0x40017b0	            0x75f6	                           jne 0x40017a8	      4388	ldlang.c	FUNCTION_101	WHILE_1
0x40017b2	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      4395	ldlang.c	FUNCTION_101	IF_1
0x40017b7	      0x4d8b6c2410	            mov r13, qword [r12 + 0x10] 	      4394	ldlang.c	FUNCTION_101
0x40017bc	          0x4885c0	                           test rax, rax	      4395	ldlang.c	FUNCTION_101	IF_1
0x40017bf	            0x7404	                            je 0x40017c5	      4395	ldlang.c	FUNCTION_101	IF_1
0x40017c1	        0x4c036828	             add r13, qword [rax + 0x28]	      4396	ldlang.c	FUNCTION_101	IF_1
0x40017c5	    0x8b0d00000000	            mov ecx, dword [0x040017cb] 	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40017cb	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40017d0	            0x31c0	                            xor eax, eax	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40017d2	          0x4c89ee	                            mov rsi, r13	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40017d5	      0xbf00000000	                              mov edi, 0	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40017da	          0x48d3ea	                             shr rdx, cl	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40017dd	      0xe800000000	                          call 0x40017e2	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40017e2	      0x498b5c2428	            mov rbx, qword [r12 + 0x28] 	      4399	ldlang.c	FUNCTION_101	IF_2
0x40017e7	          0x488b2b	                    mov rbp, qword [rbx]	      4399	ldlang.c	FUNCTION_101	IF_2
0x40017ea	        0x4883c308	                              add rbx, 8	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x40017ee	          0x4885ed	                           test rbp, rbp	      4399	ldlang.c	FUNCTION_101	IF_2
0x40017f1	            0x742a	                            je 0x400181d	      4399	ldlang.c	FUNCTION_101	IF_2
0x40017f3	       0xf1f440000	                   nop dword [rax + rax]	      4399	ldlang.c	FUNCTION_101	IF_2
0x40017f8	           0xfb60b	                   movzx ecx, byte [rbx]	        97	stdio2.h	CALL_42
0x40017fb	    0x488b3d000000	            mov rdi, qword [0x04001802] 	        97	stdio2.h	CALL_42
0x4001802	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x4001804	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_42
0x4001809	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x400180e	        0x4883c301	                              add rbx, 1	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x4001812	      0xe800000000	                          call 0x4001817	        97	stdio2.h	CALL_42
0x4001817	        0x4883ed01	                              sub rbp, 1	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x400181b	            0x75db	                           jne 0x40017f8	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x400181d	      0xe800000000	                          call 0x4001822	      4407	ldlang.c	FUNCTION_101	CALL_5
0x4001822	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4409	ldlang.c	FUNCTION_101
0x4001827	    0x8b0d00000000	            mov ecx, dword [0x0400182d] 	      4409	ldlang.c	FUNCTION_101
0x400182d	          0x48d3e8	                             shr rax, cl	      4409	ldlang.c	FUNCTION_101
0x4001830	          0x4901c5	                            add r13, rax	      4409	ldlang.c	FUNCTION_101
0x4001833	    0x4c892d000000	            mov qword [0x0400183a], r13 	      4409	ldlang.c	FUNCTION_101
0x400183a	      0xe920ffffff	                           jmp 0x400175f	      4409	ldlang.c	FUNCTION_101
0x400183f	    0x488b0d000000	            mov rcx, qword [0x04001846] 	        97	stdio2.h	CALL_42
0x4001846	      0xba0c000000	                            mov edx, 0xc	        97	stdio2.h	CALL_42
0x400184b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x4001850	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_42
0x4001855	      0xe800000000	                          call 0x400185a	        97	stdio2.h	CALL_42
0x400185a	      0x498b5c2410	            mov rbx, qword [r12 + 0x10] 	      4510	ldlang.c	FUNCTION_103	CALL_1
0x400185f	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001862	            0x7417	                            je 0x400187b	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001864	         0xf1f4000	                         nop dword [rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001868	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400186b	          0x4c89ee	                            mov rsi, r13	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400186e	      0xe81dfaffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001873	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x4001876	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001879	            0x75ed	                           jne 0x4001868	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x400187b	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x400187c	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x400187d	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x400187f	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001881	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001883	    0x488b0d000000	            mov rcx, qword [0x0400188a] 	        97	stdio2.h	CALL_42
0x400188a	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_42
0x400188f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x4001894	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_42
0x4001899	      0xe900000000	                           jmp 0x400189e	        97	stdio2.h	CALL_42
0x400189e	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x40018a2	            0x31c0	                            xor eax, eax	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x40018a4	      0xbf00000000	                              mov edi, 0	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x40018a9	      0xe800000000	                          call 0x40018ae	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x40018ae	    0x488b35000000	            mov rsi, qword [0x040018b5] 	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x40018b5	          0x4885f6	                           test rsi, rsi	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x40018b8	            0x740c	                            je 0x40018c6	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x40018ba	      0xbf00000000	                              mov edi, 0	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x40018bf	            0x31c0	                            xor eax, eax	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x40018c1	      0xe800000000	                          call 0x40018c6	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x40018c6	      0xbf00000000	                              mov edi, 0	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x40018cb	      0xe926fdffff	                           jmp 0x40015f6	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x40018d0	      0xbf00000000	                              mov edi, 0	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x40018d5	            0x31c0	                            xor eax, eax	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x40018d7	      0xbb01000000	                              mov ebx, 1	      4470	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x40018dc	      0xe800000000	                          call 0x40018e1	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x40018e1	     0xf1f80000000	                         nop dword [rax]	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x40018e8	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x40018ec	          0x4885c0	                           test rax, rax	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x40018ef	            0x7444	                            je 0x4001935	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x40018f1	          0x488b30	                    mov rsi, qword [rax]	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x40018f4	      0xbf00000000	                              mov edi, 0	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x40018f9	            0x31c0	                            xor eax, eax	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x40018fb	      0xe800000000	                          call 0x4001900	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x4001900	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001904	        0x488b6808	                mov rbp, qword [rax + 8]	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001908	          0x4885ed	                           test rbp, rbp	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x400190b	            0x741c	                            je 0x4001929	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x400190d	           0xf1f00	                         nop dword [rax]	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001910	        0x488b7500	                    mov rsi, qword [rbp]	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001914	            0x31c0	                            xor eax, eax	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001916	      0xbf00000000	                              mov edi, 0	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x400191b	      0xe800000000	                          call 0x4001920	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001920	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001924	          0x4885ed	                           test rbp, rbp	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001927	            0x75e7	                           jne 0x4001910	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001929	      0xbf00000000	                              mov edi, 0	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x400192e	            0x31c0	                            xor eax, eax	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x4001930	      0xe800000000	                          call 0x4001935	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x4001935	        0x498b7608	                mov rsi, qword [r14 + 8]	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x4001939	          0x4885f6	                           test rsi, rsi	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x400193c	     0xf842e010000	                            je 0x4001a70	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x4001942	      0xbf00000000	                              mov edi, 0	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x4001947	            0x31c0	                            xor eax, eax	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x4001949	      0xe800000000	                          call 0x400194e	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x400194e	            0x85db	                           test ebx, ebx	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001950	            0x7417	                            je 0x4001969	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001952	    0x660f1f440000	                    nop word [rax + rax]	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001958	            0x31c0	                            xor eax, eax	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x400195a	      0xbf00000000	                              mov edi, 0	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x400195f	      0xe800000000	                          call 0x4001964	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x4001964	          0x83eb01	                              sub ebx, 1	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001967	            0x75ef	                           jne 0x4001958	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001969	        0x49833e00	                      cmp qword [r14], 0	      4493	ldlang.c	FUNCTION_102	FOR_2	IF_7
0x400196d	            0x7421	                            je 0x4001990	      4493	ldlang.c	FUNCTION_102	FOR_2	IF_7
0x400196f	            0x31c0	                            xor eax, eax	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x4001971	      0xbf00000000	                              mov edi, 0	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x4001976	      0xe800000000	                          call 0x400197b	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x400197b	          0x4d8b36	                    mov r14, qword [r14]	      4439	ldlang.c	FUNCTION_102	FOR_2
0x400197e	          0x4d85f6	                           test r14, r14	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001981	     0xf8541fcffff	                           jne 0x40015c8	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001987	    0x660f1f840000	                    nop word [rax + rax]	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001990	            0x31c0	                            xor eax, eax	      4496	ldlang.c	FUNCTION_102	CALL_23
0x4001992	      0xbf00000000	                              mov edi, 0	      4496	ldlang.c	FUNCTION_102	CALL_23
0x4001997	      0xe800000000	                          call 0x400199c	      4496	ldlang.c	FUNCTION_102	CALL_23
0x400199c	      0xe800000000	                          call 0x40019a1	      4498	ldlang.c	FUNCTION_102	CALL_24
0x40019a1	      0x498b5c2430	            mov rbx, qword [r12 + 0x30] 	      4500	ldlang.c	FUNCTION_102	CALL_25
0x40019a6	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40019a9	     0xf84b0fdffff	                            je 0x400175f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40019af	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40019b2	          0x4c89ee	                            mov rsi, r13	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40019b5	      0xe8d6f8ffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40019ba	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x40019bd	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40019c0	            0x75ed	                           jne 0x40019af	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40019c2	      0xe998fdffff	                           jmp 0x400175f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40019c7	    0x660f1f840000	                    nop word [rax + rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40019d0	      0xbf00000000	                              mov edi, 0	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x40019d5	            0x31c0	                            xor eax, eax	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x40019d7	      0xbb02000000	                              mov ebx, 2	      4465	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x40019dc	      0xe800000000	                          call 0x40019e1	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x40019e1	      0xe902ffffff	                           jmp 0x40018e8	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x40019e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x40019f0	      0xbf00000000	                              mov edi, 0	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x40019f5	            0x31c0	                            xor eax, eax	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x40019f7	      0xbb02000000	                              mov ebx, 2	      4460	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x40019fc	      0xe800000000	                          call 0x4001a01	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4001a01	      0xe9e2feffff	                           jmp 0x40018e8	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4001a06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4001a10	      0xbf00000000	                              mov edi, 0	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001a15	            0x31c0	                            xor eax, eax	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001a17	      0xbb01000000	                              mov ebx, 1	      4455	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001a1c	      0xe800000000	                          call 0x4001a21	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001a21	      0xe9c2feffff	                           jmp 0x40018e8	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001a26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001a30	      0xbf00000000	                              mov edi, 0	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001a35	            0x31c0	                            xor eax, eax	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001a37	      0xbb01000000	                              mov ebx, 1	      4450	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001a3c	      0xe800000000	                          call 0x4001a41	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001a41	      0xe9a2feffff	                           jmp 0x40018e8	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001a46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001a50	      0xbf00000000	                              mov edi, 0	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001a55	            0x31c0	                            xor eax, eax	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001a57	      0xbb01000000	                              mov ebx, 1	      4475	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001a5c	      0xe800000000	                          call 0x4001a61	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001a61	      0xe982feffff	                           jmp 0x40018e8	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001a66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001a70	      0xbf00000000	                              mov edi, 0	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x4001a75	            0x31c0	                            xor eax, eax	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x4001a77	      0xe800000000	                          call 0x4001a7c	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x4001a7c	      0xe9cdfeffff	                           jmp 0x400194e	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x4001a81	      0xba05000000	                              mov edx, 5	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4001a86	      0xbe00000000	                              mov esi, 0	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4001a8b	            0x31ff	                            xor edi, edi	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4001a8d	      0xe800000000	                          call 0x4001a92	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4001a92	    0x488b3d000000	            mov rdi, qword [0x04001a99] 	        97	stdio2.h	CALL_42
0x4001a99	            0x89d9	                            mov ecx, ebx	        97	stdio2.h	CALL_42
0x4001a9b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_42
0x4001a9e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x4001aa3	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x4001aa5	      0xe800000000	                          call 0x4001aaa	        97	stdio2.h	CALL_42
0x4001aaa	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001aab	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001aac	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001aae	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001ab0	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001ab2	      0xbebb110000	                         mov esi, 0x11bb	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4001ab7	      0xbf00000000	                              mov edi, 0	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4001abc	      0xe900000000	                           jmp 0x4001ac1	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4001ac1	     0xf1f80000000	                         nop dword [rax]	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4001ac8	            0x31db	                            xor ebx, ebx	      4441	ldlang.c	FUNCTION_102	FOR_2
0x4001aca	      0xe919feffff	                           jmp 0x40018e8	      4441	ldlang.c	FUNCTION_102	FOR_2
0x4001acf	      0xbf00000000	                              mov edi, 0	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4001ad4	            0x31c0	                            xor eax, eax	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4001ad6	      0xe800000000	                          call 0x4001adb	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4001adb	      0xe924f8ffff	                           jmp 0x4001304	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4001ae0	      0xbf00000000	                              mov edi, 0	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4001ae5	            0x31c0	                            xor eax, eax	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4001ae7	      0xe800000000	                          call 0x4001aec	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4001aec	      0xe9b7faffff	                           jmp 0x40015a8	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4001af1	      0xbf00000000	                              mov edi, 0	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4001af6	            0x31c0	                            xor eax, eax	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4001af8	      0xe800000000	                          call 0x4001afd	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4001afd	      0xe97ffaffff	                           jmp 0x4001581	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4001b02	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      4052	ldlang.c	FUNCTION_91
0x4001b06	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      4040	ldlang.c	FUNCTION_91	IF_1
0x4001b0a	            0x31db	                            xor ebx, ebx	      4039	ldlang.c	FUNCTION_91	IF_1
0x4001b0c	      0xb800000000	                              mov eax, 0	      4054	ldlang.c	FUNCTION_91	IF_3
0x4001b11	          0x4885f6	                           test rsi, rsi	      4053	ldlang.c	FUNCTION_91	IF_3
0x4001b14	        0x480f44f0	                          cmove rsi, rax	      4054	ldlang.c	FUNCTION_91	IF_3
0x4001b18	      0xba00000000	                              mov edx, 0	      4057	ldlang.c	FUNCTION_91	CALL_2
0x4001b1d	      0xe800000000	                          call 0x4001b22	      4057	ldlang.c	FUNCTION_91	CALL_2
0x4001b22	    0x8b1500000000	            mov edx, dword [0x04001b28] 	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x4001b28	            0x85d2	                           test edx, edx	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x4001b2a	     0xf8448f9ffff	                            je 0x4001478	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x4001b30	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4065	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4001b35	        0x83781008	               cmp dword [rax + 0x10], 8	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4001b39	            0x7412	                            je 0x4001b4d	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4001b3b	            0x85db	                           test ebx, ebx	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4001b3d	            0x750e	                           jne 0x4001b4d	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4001b3f	    0x48833d000000	               cmp qword [0x04001b47], 0	      4067	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4001b47	     0xf844e010000	                            je 0x4001c9b	      4067	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4001b4d	    0x488b05000000	            mov rax, qword [0x04001b54] 	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4001b54	    0x488b2d000000	            mov rbp, qword [0x04001b5b] 	      4069	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4001b5b	          0x4885c0	                           test rax, rax	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4001b5e	            0x7404	                            je 0x4001b64	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4001b60	        0x48036828	             add rbp, qword [rax + 0x28]	      4072	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4001b64	            0x31c0	                            xor eax, eax	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4001b66	          0x4889ee	                            mov rsi, rbp	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4001b69	      0xbf00000000	                              mov edi, 0	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4001b6e	      0xe800000000	                          call 0x4001b73	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4001b73	            0x85db	                           test ebx, ebx	      4075	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4001b75	     0xf8424f9ffff	                            je 0x400149f	      4075	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4001b7b	    0x48892d000000	            mov qword [0x04001b82], rbp 	      4076	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4001b82	      0xe918f9ffff	                           jmp 0x400149f	      4076	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4001b87	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001b8c	          0x488b30	                    mov rsi, qword [rax]	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001b8f	      0xe99afbffff	                           jmp 0x400172e	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001b94	      0xbe00000000	                              mov esi, 0	      4299	ldlang.c	FUNCTION_98	SWITCH_1
0x4001b99	      0xba01000000	                              mov edx, 1	      4298	ldlang.c	FUNCTION_98	SWITCH_1
0x4001b9e	    0x8b0d00000000	            mov ecx, dword [0x04001ba4] 	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001ba4	      0xbb01000000	                              mov ebx, 1	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001ba9	      0x4d8b442420	              mov r8, qword [r12 + 0x20]	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001bae	            0x89d8	                            mov eax, ebx	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001bb0	      0xbf00000000	                              mov edi, 0	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001bb5	            0xd3e0	                             shl eax, cl	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001bb7	          0x4839d0	                            cmp rax, rdx	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001bba	        0x480f43d0	                         cmovae rdx, rax	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001bbe	            0x31c0	                            xor eax, eax	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001bc0	          0x4889d3	                            mov rbx, rdx	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001bc3	          0x48d3ea	                             shr rdx, cl	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001bc6	          0x4889f1	                            mov rcx, rsi	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001bc9	          0x4889ee	                            mov rsi, rbp	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001bcc	      0xe800000000	                          call 0x4001bd1	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001bd1	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4323	ldlang.c	FUNCTION_98	IF_3
0x4001bd6	        0x83781007	               cmp dword [rax + 0x10], 7	      4323	ldlang.c	FUNCTION_98	IF_3
0x4001bda	            0x740f	                            je 0x4001beb	      4323	ldlang.c	FUNCTION_98	IF_3
0x4001bdc	      0xe800000000	                          call 0x4001be1	      4325	ldlang.c	FUNCTION_98	IF_3	CALL_5
0x4001be1	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4326	ldlang.c	FUNCTION_98	IF_3	CALL_6
0x4001be6	      0xe800000000	                          call 0x4001beb	      4326	ldlang.c	FUNCTION_98	IF_3	CALL_6
0x4001beb	      0xe800000000	                          call 0x4001bf0	      4329	ldlang.c	FUNCTION_98	CALL_7
0x4001bf0	    0x8b0d00000000	            mov ecx, dword [0x04001bf6] 	      4331	ldlang.c	FUNCTION_98
0x4001bf6	          0x48d3eb	                             shr rbx, cl	      4331	ldlang.c	FUNCTION_98
0x4001bf9	        0x488d042b	                    lea rax, [rbx + rbp]	      4331	ldlang.c	FUNCTION_98
0x4001bfd	    0x488905000000	            mov qword [0x04001c04], rax 	      4331	ldlang.c	FUNCTION_98
0x4001c04	      0xe956fbffff	                           jmp 0x400175f	      4331	ldlang.c	FUNCTION_98
0x4001c09	      0xba00000000	                              mov edx, 0	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x4001c0e	      0xbec8100000	                         mov esi, 0x10c8	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x4001c13	      0xbf00000000	                              mov edi, 0	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x4001c18	      0xe800000000	                          call 0x4001c1d	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x4001c1d	      0xbe00000000	                              mov esi, 0	      4303	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c22	      0xba02000000	                              mov edx, 2	      4302	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c27	      0xe972ffffff	                           jmp 0x4001b9e	      4302	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c2c	      0xbe00000000	                              mov esi, 0	      4311	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c31	      0xba08000000	                              mov edx, 8	      4310	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c36	      0xe963ffffff	                           jmp 0x4001b9e	      4310	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c3b	      0xbe00000000	                              mov esi, 0	      4307	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c40	      0xba04000000	                              mov edx, 4	      4306	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c45	      0xe954ffffff	                           jmp 0x4001b9e	      4306	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c4a	      0xbe00000000	                              mov esi, 0	      4315	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c4f	      0xba08000000	                              mov edx, 8	      4314	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c54	      0xe945ffffff	                           jmp 0x4001b9e	      4314	ldlang.c	FUNCTION_98	SWITCH_1
0x4001c59	        0x80790100	                   cmp byte [rcx + 1], 0	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001c5d	     0xf85e5f7ffff	                           jne 0x4001448	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001c63	      0xbb01000000	                              mov ebx, 1	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001c68	      0xe9e4f7ffff	                           jmp 0x4001451	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001c6d	      0xe800000000	                          call 0x4001c72	      3999	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3	CALL_3
0x4001c72	            0x31db	                            xor ebx, ebx	      4000	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x4001c74	      0xe907f7ffff	                           jmp 0x4001380	      4000	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x4001c79	      0xbf00000000	                              mov edi, 0	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4001c7e	            0x31c0	                            xor eax, eax	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4001c80	      0xe800000000	                          call 0x4001c85	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4001c85	      0xe911f9ffff	                           jmp 0x400159b	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4001c8a	      0xbf00000000	                              mov edi, 0	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x4001c8f	            0x31c0	                            xor eax, eax	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x4001c91	      0xe800000000	                          call 0x4001c96	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x4001c96	      0xe9f8f7ffff	                           jmp 0x4001493	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x4001c9b	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001c9f	    0x488b3d000000	            mov rdi, qword [0x04001ca6] 	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001ca6	            0x31c9	                            xor ecx, ecx	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001ca8	            0x31d2	                            xor edx, edx	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001caa	    0x41b801000000	                              mov r8d, 1	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001cb0	      0xe800000000	                          call 0x4001cb5	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001cb5	          0x4885c0	                           test rax, rax	      4084	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001cb8	            0x7425	                            je 0x4001cdf	      4084	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001cba	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001cbe	      0xbf00000000	                              mov edi, 0	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x4001cc3	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001cc7	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001ccb	        0x48037030	             add rsi, qword [rax + 0x30]	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001ccf	            0x31c0	                            xor eax, eax	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x4001cd1	        0x48037260	             add rsi, qword [rdx + 0x60]	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x4001cd5	      0xe800000000	                          call 0x4001cda	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x4001cda	      0xe9c0f7ffff	                           jmp 0x400149f	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x4001cdf	      0xbf00000000	                              mov edi, 0	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x4001ce4	            0x31c0	                            xor eax, eax	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x4001ce6	      0xe800000000	                          call 0x4001ceb	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x4001ceb	      0xe9aff7ffff	                           jmp 0x400149f	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
output_section_statement_newfunc	IF,4:ELSE,0:SWITCH,0:functions,0:CALL,5:DO,0:FOR,0:WHILE,0	57
0x40001e0	              0x53	                                push rbx	      1183	ldlang.c	FUNCTION_36
0x40001e1	          0x4889f3	                            mov rbx, rsi	      1183	ldlang.c	FUNCTION_36
0x40001e4	        0x4883ec10	                           sub rsp, 0x10	      1183	ldlang.c	FUNCTION_36
0x40001e8	          0x4885ff	                           test rdi, rdi	      1187	ldlang.c	FUNCTION_36	IF_1
0x40001eb	     0xf84bf000000	                            je 0x40002b0	      1187	ldlang.c	FUNCTION_36	IF_1
0x40001f1	          0x4889de	                            mov rsi, rbx	      1195	ldlang.c	FUNCTION_36	CALL_2
0x40001f4	      0xe800000000	                          call 0x40001f9	      1195	ldlang.c	FUNCTION_36	CALL_2
0x40001f9	          0x4885c0	                           test rax, rax	      1196	ldlang.c	FUNCTION_36	IF_3
0x40001fc	          0x4889c2	                            mov rdx, rax	      1195	ldlang.c	FUNCTION_36	CALL_2
0x40001ff	     0xf84ce000000	                            je 0x40002d3	      1196	ldlang.c	FUNCTION_36	IF_3
0x4000205	        0x488d7018	                   lea rsi, [rax + 0x18]	      1200	ldlang.c	FUNCTION_36
0x4000209	        0x488d7820	                   lea rdi, [rax + 0x20]	        90	string3.h	FUNCTION_248	CALL_5
0x400020d	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_248	CALL_5
0x4000215	    0x48c780a80000	               mov qword [rax + 0xa8], 0	        90	string3.h	FUNCTION_248	CALL_5
0x4000220	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_248	CALL_5
0x4000222	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_248	CALL_5
0x4000226	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_248	CALL_5
0x4000229	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_248	CALL_5
0x400022c	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_248	CALL_5
0x4000232	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_248	CALL_5
0x4000235	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_248	CALL_5
0x4000238	        0x488d4228	                   lea rax, [rdx + 0x28]	      1010	ldlang.c	FUNCTION_30
0x400023c	    0xc74220000000	               mov dword [rdx + 0x20], 0	      1201	ldlang.c	FUNCTION_36
0x4000243	    0xc78294000000	     mov dword [rdx + 0x94], 0xffffffff 	      1202	ldlang.c	FUNCTION_36
0x400024d	    0xc78298000000	     mov dword [rdx + 0x98], 0xffffffff 	      1203	ldlang.c	FUNCTION_36
0x4000257	    0xc78290000000	               mov dword [rdx + 0x90], 1	      1204	ldlang.c	FUNCTION_36
0x4000261	        0x48894230	             mov qword [rdx + 0x30], rax	      1010	ldlang.c	FUNCTION_30
0x4000265	    0x488b05000000	            mov rax, qword [0x0400026c] 	      1206	ldlang.c	FUNCTION_36	CALL_4
0x400026c	    0x48c742280000	               mov qword [rdx + 0x28], 0	      1009	ldlang.c	FUNCTION_30
0x4000274	        0x488b4808	                mov rcx, qword [rax + 8]	      7673	ldlang.c	FUNCTION_179
0x4000278	          0x488931	                    mov qword [rcx], rsi	      7673	ldlang.c	FUNCTION_179
0x400027b	    0x48833d000000	               cmp qword [0x04000283], 0	      1211	ldlang.c	FUNCTION_36	IF_4
0x4000283	        0x48897008	                mov qword [rax + 8], rsi	      7674	ldlang.c	FUNCTION_179
0x4000287	    0x488b05000000	            mov rax, qword [0x0400028e] 	      1214	ldlang.c	FUNCTION_36	IF_4
0x400028e	            0x7408	                            je 0x4000298	      1211	ldlang.c	FUNCTION_36	IF_4
0x4000290	        0x488d48e0	                   lea rcx, [rax - 0x20]	      1213	ldlang.c	FUNCTION_36	IF_4
0x4000294	        0x48894a40	             mov qword [rdx + 0x40], rcx	      1213	ldlang.c	FUNCTION_36	IF_4
0x4000298	          0x488930	                    mov qword [rax], rsi	      7673	ldlang.c	FUNCTION_179
0x400029b	        0x488d4238	                   lea rax, [rdx + 0x38]	      1220	ldlang.c	FUNCTION_36
0x400029f	    0x488905000000	            mov qword [0x040002a6], rax 	      1220	ldlang.c	FUNCTION_36
0x40002a6	        0x4883c410	                           add rsp, 0x10	      1225	ldlang.c	FUNCTION_36
0x40002aa	          0x4889d0	                            mov rax, rdx	      1224	ldlang.c	FUNCTION_36
0x40002ad	              0x5b	                                 pop rbx	      1225	ldlang.c	FUNCTION_36
0x40002ae	              0xc3	                                     ret	      1225	ldlang.c	FUNCTION_36
0x40002af	              0x90	                                     nop	      1225	ldlang.c	FUNCTION_36
0x40002b0	          0x4889df	                            mov rdi, rbx	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x40002b3	      0xbeb0000000	                           mov esi, 0xb0	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x40002b8	      0x4889542408	                mov qword [rsp + 8], rdx	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x40002bd	      0xe800000000	                          call 0x40002c2	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x40002c2	          0x4885c0	                           test rax, rax	      1191	ldlang.c	FUNCTION_36	IF_1	IF_2
0x40002c5	          0x4889c7	                            mov rdi, rax	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x40002c8	      0x488b542408	                mov rdx, qword [rsp + 8]	      1191	ldlang.c	FUNCTION_36	IF_1	IF_2
0x40002cd	     0xf851effffff	                           jne 0x40001f1	      1191	ldlang.c	FUNCTION_36	IF_1	IF_2
0x40002d3	        0x4883c410	                           add rsp, 0x10	      1225	ldlang.c	FUNCTION_36
0x40002d7	            0x31c0	                            xor eax, eax	      1183	ldlang.c	FUNCTION_36
0x40002d9	              0x5b	                                 pop rbx	      1225	ldlang.c	FUNCTION_36
0x40002da	              0xc3	                                     ret	      1225	ldlang.c	FUNCTION_36
lang_vers_match	IF,21:ELSE,6:SWITCH,1:functions,0:CALL,12:DO,0:FOR,1:WHILE,3	206
0x4000af0	            0x4157	                                push r15	      8126	ldlang.c	FUNCTION_192
0x4000af2	            0x4156	                                push r14	      8126	ldlang.c	FUNCTION_192
0x4000af4	          0x4989fe	                            mov r14, rdi	      8126	ldlang.c	FUNCTION_192
0x4000af7	            0x4155	                                push r13	      8126	ldlang.c	FUNCTION_192
0x4000af9	            0x4154	                                push r12	      8126	ldlang.c	FUNCTION_192
0x4000afb	      0xbfffffffff	                     mov edi, 0xffffffff	      8134	ldlang.c	FUNCTION_192	CALL_1
0x4000b00	              0x55	                                push rbp	      8126	ldlang.c	FUNCTION_192
0x4000b01	              0x53	                                push rbx	      8126	ldlang.c	FUNCTION_192
0x4000b02	          0x4989d5	                            mov r13, rdx	      8126	ldlang.c	FUNCTION_192
0x4000b05	          0x4d89ec	                            mov r12, r13	      8126	ldlang.c	FUNCTION_192
0x4000b08	        0x4883ec38	                           sub rsp, 0x38	      8126	ldlang.c	FUNCTION_192
0x4000b0c	    0x8b1d00000000	            mov ebx, dword [0x04000b12] 	      8133	ldlang.c	FUNCTION_192
0x4000b12	      0x4889742408	                mov qword [rsp + 8], rsi	      8126	ldlang.c	FUNCTION_192
0x4000b17	    0x64488b042528	                mov rax, qword fs:[0x28]	      8126	ldlang.c	FUNCTION_192
0x4000b20	      0x4889442428	             mov qword [rsp + 0x28], rax	      8126	ldlang.c	FUNCTION_192
0x4000b25	            0x31c0	                            xor eax, eax	      8126	ldlang.c	FUNCTION_192
0x4000b27	      0xe800000000	                          call 0x4000b2c	      8134	ldlang.c	FUNCTION_192	CALL_1
0x4000b2c	    0x488b3d000000	            mov rdi, qword [0x04000b33] 	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000b33	            0x31d2	                            xor edx, edx	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000b35	          0x4c89ee	                            mov rsi, r13	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000b38	      0xe800000000	                          call 0x4000b3d	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000b3d	            0x89df	                            mov edi, ebx	      8138	ldlang.c	FUNCTION_192	CALL_3
0x4000b3f	          0x4885c0	                           test rax, rax	      8138	ldlang.c	FUNCTION_192	CALL_3
0x4000b42	          0x4889c5	                            mov rbp, rax	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000b45	        0x490f44ed	                          cmove rbp, r13	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000b49	      0xe800000000	                          call 0x4000b4e	      8138	ldlang.c	FUNCTION_192	CALL_3
0x4000b4e	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8140	ldlang.c	FUNCTION_192	IF_2
0x4000b52	            0xa802	                              test al, 2	      8140	ldlang.c	FUNCTION_192	IF_2
0x4000b54	     0xf8596010000	                           jne 0x4000cf0	      8140	ldlang.c	FUNCTION_192	IF_2
0x4000b5a	            0xa804	                              test al, 4	      8147	ldlang.c	FUNCTION_192	IF_4
0x4000b5c	     0xf8566010000	                           jne 0x4000cc8	      8147	ldlang.c	FUNCTION_192	IF_4
0x4000b62	          0x4c89eb	                            mov rbx, r13	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000b65	        0x498b7e08	                mov rdi, qword [r14 + 8]	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b69	          0x4885ff	                           test rdi, rdi	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b6c	     0xf848e000000	                            je 0x4000c00	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b72	      0x488b442408	                mov rax, qword [rsp + 8]	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b77	          0x4885c0	                           test rax, rax	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b7a	     0xf84a0010000	                            je 0x4000d20	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b80	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b84	            0xa801	                              test al, 1	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b86	     0xf8424010000	                            je 0x4000cb0	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000b8c	          0xc0e803	                               shr al, 3	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000b8f	          0x83e007	                              and eax, 7	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000b92	            0x3c01	                               cmp al, 1	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000b94	     0xf84d6010000	                            je 0x4000d70	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000b9a	     0xf8280010000	                            jb 0x4000d20	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000ba0	            0x3c02	                               cmp al, 2	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000ba2	            0x755c	                           jne 0x4000c00	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000ba4	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000ba8	            0xa804	                              test al, 4	      8187	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000baa	            0x7454	                            je 0x4000c00	      8187	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000bac	        0x498b7e08	                mov rdi, qword [r14 + 8]	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000bb0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000bb5	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      8189	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000bba	      0xe800000000	                          call 0x4000bbf	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000bbf	          0x4885c0	                           test rax, rax	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bc2	          0x4989c7	                            mov r15, rax	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000bc5	            0x7521	                           jne 0x4000be8	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bc7	            0xeb37	                           jmp 0x4000c00	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bc9	     0xf1f80000000	                         nop dword [rax]	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bd0	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4000bd5	          0x83e038	                           and eax, 0x38	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4000bd8	            0x3c20	                            cmp al, 0x20	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4000bda	     0xf8480000000	                            je 0x4000c60	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4000be0	          0x4d8b3f	                    mov r15, qword [r15]	      8196	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	ELSE_3
0x4000be3	          0x4d85ff	                           test r15, r15	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000be6	            0x7418	                            je 0x4000c00	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000be8	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bec	          0x4889de	                            mov rsi, rbx	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bef	      0xe800000000	                          call 0x4000bf4	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bf4	            0x85c0	                           test eax, eax	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bf6	            0x74d8	                            je 0x4000bd0	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000bf8	     0xf1f84000000	                   nop dword [rax + rax]	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000c00	      0x488b442408	                mov rax, qword [rsp + 8]	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000c05	          0x4885c0	                           test rax, rax	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000c08	            0x740a	                            je 0x4000c14	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000c0a	        0xf6401001	               test byte [rax + 0x10], 1	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000c0e	     0xf849c000000	                            je 0x4000cb0	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000c14	        0x4d8b7e10	            mov r15, qword [r14 + 0x10] 	      8206	ldlang.c	FUNCTION_192	IF_13
0x4000c18	            0xeb2c	                           jmp 0x4000c46	      8206	ldlang.c	FUNCTION_192	IF_13
0x4000c1a	    0x660f1f440000	                    nop word [rax + rax]	      8206	ldlang.c	FUNCTION_192	IF_13
0x4000c20	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000c25	          0x4889de	                            mov rsi, rbx	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000c28	          0x83e038	                           and eax, 0x38	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000c2b	            0x3c20	                            cmp al, 0x20	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000c2d	            0x7409	                            je 0x4000c38	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000c2f	            0x3c10	                            cmp al, 0x10	      8221	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_5	IF_17
0x4000c31	          0x4c89e6	                            mov rsi, r12	      8221	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_5	IF_17
0x4000c34	        0x480f45f5	                         cmovne rsi, rbp	      8221	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_5	IF_17
0x4000c38	            0x31d2	                            xor edx, edx	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4000c3a	      0xe800000000	                          call 0x4000c3f	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4000c3f	            0x85c0	                           test eax, eax	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4000c41	            0x741d	                            je 0x4000c60	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4000c43	          0x4d8b3f	                    mov r15, qword [r15]	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000c46	          0x4d85ff	                           test r15, r15	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000c49	            0x7475	                            je 0x4000cc0	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000c4b	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4000c4f	          0x4885ff	                           test rdi, rdi	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4000c52	            0x74ef	                            je 0x4000c43	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4000c54	          0x803f2a	                    cmp byte [rdi], 0x2a	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000c57	            0x75c7	                           jne 0x4000c20	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000c59	        0x807f0100	                   cmp byte [rdi + 1], 0	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000c5d	            0x75c1	                           jne 0x4000c20	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000c5f	              0x90	                                     nop	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000c60	          0x4c39ed	                            cmp rbp, r13	      8230	ldlang.c	FUNCTION_192	IF_19
0x4000c63	            0x7408	                            je 0x4000c6d	      8230	ldlang.c	FUNCTION_192	IF_19
0x4000c65	          0x4889ef	                            mov rdi, rbp	      8231	ldlang.c	FUNCTION_192	CALL_10
0x4000c68	      0xe800000000	                          call 0x4000c6d	      8231	ldlang.c	FUNCTION_192	CALL_10
0x4000c6d	          0x4d39ec	                            cmp r12, r13	      8232	ldlang.c	FUNCTION_192	IF_20
0x4000c70	            0x7408	                            je 0x4000c7a	      8232	ldlang.c	FUNCTION_192	IF_20
0x4000c72	          0x4c89e7	                            mov rdi, r12	      8233	ldlang.c	FUNCTION_192	CALL_11
0x4000c75	      0xe800000000	                          call 0x4000c7a	      8233	ldlang.c	FUNCTION_192	CALL_11
0x4000c7a	          0x4c39eb	                            cmp rbx, r13	      8234	ldlang.c	FUNCTION_192	IF_21
0x4000c7d	            0x7408	                            je 0x4000c87	      8234	ldlang.c	FUNCTION_192	IF_21
0x4000c7f	          0x4889df	                            mov rdi, rbx	      8235	ldlang.c	FUNCTION_192	CALL_12
0x4000c82	      0xe800000000	                          call 0x4000c87	      8235	ldlang.c	FUNCTION_192	CALL_12
0x4000c87	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8237	ldlang.c	FUNCTION_192
0x4000c8c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8237	ldlang.c	FUNCTION_192
0x4000c95	          0x4c89f8	                            mov rax, r15	      8237	ldlang.c	FUNCTION_192
0x4000c98	     0xf8533010000	                           jne 0x4000dd1	      8237	ldlang.c	FUNCTION_192
0x4000c9e	        0x4883c438	                           add rsp, 0x38	      8237	ldlang.c	FUNCTION_192
0x4000ca2	              0x5b	                                 pop rbx	      8237	ldlang.c	FUNCTION_192
0x4000ca3	              0x5d	                                 pop rbp	      8237	ldlang.c	FUNCTION_192
0x4000ca4	            0x415c	                                 pop r12	      8237	ldlang.c	FUNCTION_192
0x4000ca6	            0x415d	                                 pop r13	      8237	ldlang.c	FUNCTION_192
0x4000ca8	            0x415e	                                 pop r14	      8237	ldlang.c	FUNCTION_192
0x4000caa	            0x415f	                                 pop r15	      8237	ldlang.c	FUNCTION_192
0x4000cac	              0xc3	                                     ret	      8237	ldlang.c	FUNCTION_192
0x4000cad	           0xf1f00	                         nop dword [rax]	      8237	ldlang.c	FUNCTION_192
0x4000cb0	      0x488b442408	                mov rax, qword [rsp + 8]	      8208	ldlang.c	FUNCTION_192	ELSE_4
0x4000cb5	          0x4c8b38	                    mov r15, qword [rax]	      8208	ldlang.c	FUNCTION_192	ELSE_4
0x4000cb8	          0x4d85ff	                           test r15, r15	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000cbb	            0x758e	                           jne 0x4000c4b	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000cbd	           0xf1f00	                         nop dword [rax]	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000cc0	          0x4531ff	                          xor r15d, r15d	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000cc3	            0xeb9b	                           jmp 0x4000c60	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000cc5	           0xf1f00	                         nop dword [rax]	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000cc8	    0x488b3d000000	            mov rdi, qword [0x04000ccf] 	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000ccf	      0xba04000000	                              mov edx, 4	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000cd4	          0x4c89ee	                            mov rsi, r13	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000cd7	      0xe800000000	                          call 0x4000cdc	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000cdc	          0x4885c0	                           test rax, rax	      8150	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4000cdf	          0x4889c3	                            mov rbx, rax	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000ce2	     0xf857dfeffff	                           jne 0x4000b65	      8150	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4000ce8	      0xe975feffff	                           jmp 0x4000b62	      8150	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4000ced	           0xf1f00	                         nop dword [rax]	      8150	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4000cf0	    0x488b3d000000	            mov rdi, qword [0x04000cf7] 	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000cf7	      0xba03000000	                              mov edx, 3	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000cfc	          0x4c89ee	                            mov rsi, r13	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000cff	      0xe800000000	                          call 0x4000d04	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000d04	          0x4989c4	                            mov r12, rax	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000d07	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000d0b	          0x4d85e4	                           test r12, r12	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000d0e	     0xf8546feffff	                           jne 0x4000b5a	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000d14	          0x4d89ec	                            mov r12, r13	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000d17	      0xe93efeffff	                           jmp 0x4000b5a	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000d1c	         0xf1f4000	                         nop dword [rax]	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000d20	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8161	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000d24	            0xa801	                              test al, 1	      8161	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000d26	            0x744c	                            je 0x4000d74	      8161	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000d28	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000d2d	      0x48896c2418	             mov qword [rsp + 0x18], rbp	      8163	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000d32	      0xe800000000	                          call 0x4000d37	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000d37	          0x4885c0	                           test rax, rax	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d3a	          0x4989c7	                            mov r15, rax	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000d3d	            0x7521	                           jne 0x4000d60	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d3f	            0xeb2f	                           jmp 0x4000d70	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d41	     0xf1f80000000	                         nop dword [rax]	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d48	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4000d4d	          0x83e038	                           and eax, 0x38	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4000d50	            0x3c08	                               cmp al, 8	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4000d52	     0xf8408ffffff	                            je 0x4000c60	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4000d58	          0x4d8b3f	                    mov r15, qword [r15]	      8170	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	ELSE_1
0x4000d5b	          0x4d85ff	                           test r15, r15	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d5e	            0x7410	                            je 0x4000d70	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d60	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d64	          0x4889ee	                            mov rsi, rbp	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d67	      0xe800000000	                          call 0x4000d6c	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d6c	            0x85c0	                           test eax, eax	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d6e	            0x74d8	                            je 0x4000d48	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d70	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000d74	            0xa802	                              test al, 2	      8174	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4000d76	     0xf842cfeffff	                            je 0x4000ba8	      8174	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4000d7c	        0x498b7e08	                mov rdi, qword [r14 + 8]	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4000d80	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4000d85	      0x4c89642418	             mov qword [rsp + 0x18], r12	      8176	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4000d8a	      0xe800000000	                          call 0x4000d8f	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4000d8f	          0x4885c0	                           test rax, rax	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000d92	          0x4989c7	                            mov r15, rax	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4000d95	            0x7525	                           jne 0x4000dbc	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000d97	      0xe908feffff	                           jmp 0x4000ba4	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000d9c	         0xf1f4000	                         nop dword [rax]	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000da0	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x4000da5	          0x83e038	                           and eax, 0x38	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x4000da8	            0x3c10	                            cmp al, 0x10	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x4000daa	     0xf84b0feffff	                            je 0x4000c60	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x4000db0	          0x4d8b3f	                    mov r15, qword [r15]	      8183	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	ELSE_2
0x4000db3	          0x4d85ff	                           test r15, r15	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000db6	     0xf84e8fdffff	                            je 0x4000ba4	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000dbc	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000dc0	          0x4c89e6	                            mov rsi, r12	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000dc3	      0xe800000000	                          call 0x4000dc8	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000dc8	            0x85c0	                           test eax, eax	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000dca	            0x74d4	                            je 0x4000da0	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000dcc	      0xe9d3fdffff	                           jmp 0x4000ba4	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4000dd1	      0xe800000000	                          call 0x4000dd6	      8237	ldlang.c	FUNCTION_192
lang_output_section_find_by_flags	IF,34:ELSE,8:SWITCH,0:functions,0:CALL,7:DO,0:FOR,8:WHILE,0	500
0x4005b10	            0x4157	                                push r15	      1529	ldlang.c	FUNCTION_47
0x4005b12	            0x4156	                                push r14	      1529	ldlang.c	FUNCTION_47
0x4005b14	            0x89f0	                            mov eax, esi	      1564	ldlang.c	FUNCTION_47	IF_6
0x4005b16	            0x4155	                                push r13	      1529	ldlang.c	FUNCTION_47
0x4005b18	            0x4154	                                push r12	      1529	ldlang.c	FUNCTION_47
0x4005b1a	          0x4989fc	                            mov r12, rdi	      1529	ldlang.c	FUNCTION_47
0x4005b1d	              0x55	                                push rbp	      1529	ldlang.c	FUNCTION_47
0x4005b1e	              0x53	                                push rbx	      1529	ldlang.c	FUNCTION_47
0x4005b1f	            0x89f7	                            mov edi, esi	      1529	ldlang.c	FUNCTION_47
0x4005b21	          0x83e709	                              and edi, 9	      1585	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4005b24	          0x83e011	                           and eax, 0x11	      1564	ldlang.c	FUNCTION_47	IF_6
0x4005b27	          0x4889cd	                            mov rbp, rcx	      1529	ldlang.c	FUNCTION_47
0x4005b2a	        0x4883ec38	                           sub rsp, 0x38	      1529	ldlang.c	FUNCTION_47
0x4005b2e	          0x4d89e6	                            mov r14, r12	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005b31	        0x897c2418	             mov dword [rsp + 0x18], edi	      1585	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4005b35	            0x89f7	                            mov edi, esi	      1609	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4005b37	        0x8944240c	              mov dword [rsp + 0xc], eax	      1564	ldlang.c	FUNCTION_47	IF_6
0x4005b3b	    0x81e701004000	                       and edi, 0x400001	      1642	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4005b41	            0x89f0	                            mov eax, esi	      1585	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4005b43	        0x89742408	                mov dword [rsp + 8], esi	      1529	ldlang.c	FUNCTION_47
0x4005b47	        0x897c2420	             mov dword [rsp + 0x20], edi	      1642	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4005b4b	            0x89f7	                            mov edi, esi	      1665	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4005b4d	      0x2501040000	                          and eax, 0x401	      1609	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4005b52	          0x83e701	                              and edi, 1	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4005b55	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1609	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4005b59	            0x89f0	                            mov eax, esi	      1642	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4005b5b	        0x897c2428	             mov dword [rsp + 0x28], edi	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4005b5f	            0x89f7	                            mov edi, esi	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005b61	      0x2501010000	                          and eax, 0x101	      1665	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4005b66	    0x81e700010000	                          and edi, 0x100	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005b6c	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1529	ldlang.c	FUNCTION_47
0x4005b71	        0x89442424	             mov dword [rsp + 0x24], eax	      1665	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4005b75	        0x897c242c	             mov dword [rsp + 0x2c], edi	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005b79	     0xf1f80000000	                         nop dword [rax]	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005b80	    0x488b05000000	            mov rax, qword [0x04005b87] 	      1536	ldlang.c	FUNCTION_47
0x4005b87	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	      1536	ldlang.c	FUNCTION_47
0x4005b8b	          0x4d85ed	                           test r13, r13	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005b8e	     0xf841c040000	                            je 0x4005fb0	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005b94	          0x4531e4	                          xor r12d, r12d	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005b97	          0x4885ed	                           test rbp, rbp	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005b9a	          0x4d89ef	                            mov r15, r13	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005b9d	     0xf8495010000	                            je 0x4005d38	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005ba3	        0x4c892c24	                    mov qword [rsp], r13	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005ba7	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bac	            0xeb23	                           jmp 0x4005bd1	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bae	            0x6690	                                     nop	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bb0	          0x4431eb	                           xor ebx, r13d	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4005bb3	    0x81e31b054000	                       and ebx, 0x40051b	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4005bb9	            0x753d	                           jne 0x4005bf8	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4005bbb	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bbf	          0x4885d2	                           test rdx, rdx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bc2	     0xf846f050000	                            je 0x4006137	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bc8	          0x4c89f8	                            mov rax, r15	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bcb	          0x4989d7	                            mov r15, rdx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bce	          0x4989c4	                            mov r12, rax	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bd1	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4005bd5	          0x4885f6	                           test rsi, rsi	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4005bd8	     0xf84e2000000	                            je 0x4005cc0	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4005bde	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1545	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4005be1	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4005be8	          0x4c89f1	                            mov rcx, r14	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4005beb	    0x488b3d000000	            mov rdi, qword [0x04005bf2] 	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4005bf2	            0xffd5	                                call rbp	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4005bf4	            0x85c0	                           test eax, eax	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4005bf6	            0x75b8	                           jne 0x4005bb0	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4005bf8	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bfc	          0x4c89e0	                            mov rax, r12	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005bff	          0x4d85ff	                           test r15, r15	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005c02	            0x75ca	                           jne 0x4005bce	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005c04	        0x4c8b2c24	                    mov r13, qword [rsp]	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005c08	          0x4d85e4	                           test r12, r12	      1556	ldlang.c	FUNCTION_47	IF_4
0x4005c0b	     0xf8523050000	                           jne 0x4006134	      1556	ldlang.c	FUNCTION_47	IF_4
0x4005c11	      0x837c240c11	            cmp dword [rsp + 0xc], 0x11 	      1563	ldlang.c	FUNCTION_47	IF_6
0x4005c16	     0xf8474010000	                            je 0x4005d90	      1563	ldlang.c	FUNCTION_47	IF_6
0x4005c1c	      0x837c241809	               cmp dword [rsp + 0x18], 9	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4005c21	     0xf84c9010000	                            je 0x4005df0	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4005c27	    0x817c241c0104	          cmp dword [rsp + 0x1c], 0x401 	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4005c2f	     0xf844b020000	                            je 0x4005e80	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4005c35	    0x817c24200100	       cmp dword [rsp + 0x20], 0x400001 	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4005c3d	     0xf84fd020000	                            je 0x4005f40	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4005c43	    0x817c24240101	          cmp dword [rsp + 0x24], 0x101 	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4005c4b	     0xf8487030000	                            je 0x4005fd8	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4005c51	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4005c55	            0x85c0	                           test eax, eax	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4005c57	     0xf84b8050000	                            je 0x4006215	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4005c5d	          0x4531e4	                          xor r12d, r12d	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005c60	          0x4d85ed	                           test r13, r13	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005c63	     0xf8455030000	                            je 0x4005fbe	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005c69	          0x4885ed	                           test rbp, rbp	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005c6c	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005c71	            0x753a	                           jne 0x4005cad	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005c73	      0xe911040000	                           jmp 0x4006089	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005c78	     0xf1f84000000	                   nop dword [rax + rax]	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005c80	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1693	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4005c83	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005c8a	          0x4c89f1	                            mov rcx, r14	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005c8d	    0x488b3d000000	            mov rdi, qword [0x04005c94] 	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005c94	            0xffd5	                                call rbp	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005c96	            0x85c0	                           test eax, eax	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005c98	            0x740a	                            je 0x4005ca4	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005c9a	          0x4431fb	                           xor ebx, r15d	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4005c9d	          0x83e301	                              and ebx, 1	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4005ca0	        0x4d0f44e5	                          cmove r12, r13	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4005ca4	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005ca8	          0x4d85ed	                           test r13, r13	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005cab	            0x7453	                            je 0x4005d00	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005cad	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4005cb1	          0x4885f6	                           test rsi, rsi	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4005cb4	            0x75ca	                           jne 0x4005c80	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4005cb6	    0x418b9d880000	            mov ebx, dword [r13 + 0x88] 	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005cbd	            0xebdb	                           jmp 0x4005c9a	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005cbf	              0x90	                                     nop	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005cc0	    0x418b9f880000	            mov ebx, dword [r15 + 0x88] 	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005cc7	      0xe9e4feffff	                           jmp 0x4005bb0	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005ccc	         0xf1f4000	                         nop dword [rax]	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005cd0	        0x8b542408	                mov edx, dword [rsp + 8]	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005cd4	         0xf1f4000	                         nop dword [rax]	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005cd8	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4005cdc	          0x4885c0	                           test rax, rax	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4005cdf	     0xf84e3020000	                            je 0x4005fc8	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4005ce5	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1572	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4005ce8	            0x31d0	                            xor eax, edx	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4005cea	      0xa913054000	                      test eax, 0x400513	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4005cef	        0x4d0f44e5	                          cmove r12, r13	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4005cf3	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005cf7	          0x4d85ed	                           test r13, r13	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005cfa	            0x75dc	                           jne 0x4005cd8	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005cfc	         0xf1f4000	                         nop dword [rax]	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005d00	          0x4d85e4	                           test r12, r12	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005d03	           0xf95c2	                                setne dl	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005d06	          0x4885ed	                           test rbp, rbp	      1719	ldlang.c	FUNCTION_47	IF_34
0x4005d09	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4005d12	           0xf94c0	                                 sete al	      1719	ldlang.c	FUNCTION_47	IF_34
0x4005d15	            0x31ed	                            xor ebp, ebp	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4005d17	             0x8d0	                               or al, dl	      1719	ldlang.c	FUNCTION_47	IF_34
0x4005d19	     0xf8461feffff	                            je 0x4005b80	      1719	ldlang.c	FUNCTION_47	IF_34
0x4005d1f	          0x4d89e7	                            mov r15, r12	      1719	ldlang.c	FUNCTION_47	IF_34
0x4005d22	        0x4883c438	                           add rsp, 0x38	      1723	ldlang.c	FUNCTION_47
0x4005d26	          0x4c89f8	                            mov rax, r15	      1723	ldlang.c	FUNCTION_47
0x4005d29	              0x5b	                                 pop rbx	      1723	ldlang.c	FUNCTION_47
0x4005d2a	              0x5d	                                 pop rbp	      1723	ldlang.c	FUNCTION_47
0x4005d2b	            0x415c	                                 pop r12	      1723	ldlang.c	FUNCTION_47
0x4005d2d	            0x415d	                                 pop r13	      1723	ldlang.c	FUNCTION_47
0x4005d2f	            0x415e	                                 pop r14	      1723	ldlang.c	FUNCTION_47
0x4005d31	            0x415f	                                 pop r15	      1723	ldlang.c	FUNCTION_47
0x4005d33	              0xc3	                                     ret	      1723	ldlang.c	FUNCTION_47
0x4005d34	         0xf1f4000	                         nop dword [rax]	      1723	ldlang.c	FUNCTION_47
0x4005d38	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1723	ldlang.c	FUNCTION_47
0x4005d3c	            0xeb18	                           jmp 0x4005d56	      1723	ldlang.c	FUNCTION_47
0x4005d3e	            0x6690	                                     nop	      1723	ldlang.c	FUNCTION_47
0x4005d40	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d44	          0x4885d2	                           test rdx, rdx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d47	     0xf84ea030000	                            je 0x4006137	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d4d	          0x4c89f8	                            mov rax, r15	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d50	          0x4989d7	                            mov r15, rdx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d53	          0x4989c4	                            mov r12, rax	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d56	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4005d5a	          0x4885c0	                           test rax, rax	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4005d5d	            0x7421	                            je 0x4005d80	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4005d5f	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1545	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4005d62	            0x31c8	                            xor eax, ecx	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4005d64	      0xa91b054000	                      test eax, 0x40051b	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4005d69	            0x74d5	                            je 0x4005d40	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4005d6b	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d6f	          0x4c89e0	                            mov rax, r12	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4005d72	          0x4d85ff	                           test r15, r15	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d75	            0x75dc	                           jne 0x4005d53	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d77	      0xe98cfeffff	                           jmp 0x4005c08	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d7c	         0xf1f4000	                         nop dword [rax]	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4005d80	    0x418b87880000	            mov eax, dword [r15 + 0x88] 	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005d87	            0xebd9	                           jmp 0x4005d62	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005d89	     0xf1f80000000	                         nop dword [rax]	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005d90	          0x4885ed	                           test rbp, rbp	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005d93	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005d98	            0x753a	                           jne 0x4005dd4	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005d9a	      0xe931ffffff	                           jmp 0x4005cd0	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005d9f	              0x90	                                     nop	      1542	ldlang.c	FUNCTION_47	FOR_1
0x4005da0	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1572	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4005da3	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005daa	          0x4c89f1	                            mov rcx, r14	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005dad	    0x488b3d000000	            mov rdi, qword [0x04005db4] 	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005db4	            0xffd5	                                call rbp	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005db6	            0x85c0	                           test eax, eax	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005db8	            0x740d	                            je 0x4005dc7	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005dba	          0x4431fb	                           xor ebx, r15d	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4005dbd	    0x81e313054000	                       and ebx, 0x400513	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4005dc3	        0x4d0f44e5	                          cmove r12, r13	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4005dc7	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005dcb	          0x4d85ed	                           test r13, r13	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005dce	     0xf842cffffff	                            je 0x4005d00	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005dd4	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4005dd8	          0x4885f6	                           test rsi, rsi	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4005ddb	            0x75c3	                           jne 0x4005da0	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4005ddd	    0x418b9d880000	            mov ebx, dword [r13 + 0x88] 	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005de4	            0xebd4	                           jmp 0x4005dba	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005de6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005df0	          0x4531e4	                          xor r12d, r12d	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005df3	          0x4d85ed	                           test r13, r13	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005df6	     0xf84c2010000	                            je 0x4005fbe	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005dfc	          0x4885ed	                           test rbp, rbp	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005dff	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e04	            0x752f	                           jne 0x4005e35	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e06	      0xe92b020000	                           jmp 0x4006036	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e0b	       0xf1f440000	                   nop dword [rax + rax]	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e10	      0xa90b010000	                         test eax, 0x10b	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e15	            0x7511	                           jne 0x4005e28	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e17	    0x81e300004000	                       and ebx, 0x400000	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e1d	        0x4d0f44e5	                          cmove r12, r13	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e21	     0xf1f80000000	                         nop dword [rax]	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e28	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e2c	          0x4d85ed	                           test r13, r13	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e2f	     0xf84cbfeffff	                            je 0x4005d00	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e35	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4005e39	          0x4885f6	                           test rsi, rsi	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4005e3c	            0x7432	                            je 0x4005e70	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4005e3e	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1593	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4005e41	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005e48	          0x4c89f1	                            mov rcx, r14	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005e4b	    0x488b3d000000	            mov rdi, qword [0x04005e52] 	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005e52	            0xffd5	                                call rbp	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005e54	            0x85c0	                           test eax, eax	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005e56	            0x74d0	                            je 0x4005e28	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005e58	            0x89d8	                            mov eax, ebx	      1599	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e5a	          0x4431f8	                           xor eax, r15d	      1599	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e5d	      0xa90b014000	                      test eax, 0x40010b	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e62	            0x75ac	                           jne 0x4005e10	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e64	          0x4d89ec	                            mov r12, r13	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e67	            0xebbf	                           jmp 0x4005e28	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e69	     0xf1f80000000	                         nop dword [rax]	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005e70	    0x418b9d880000	            mov ebx, dword [r13 + 0x88] 	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e77	            0xebdf	                           jmp 0x4005e58	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e79	     0xf1f80000000	                         nop dword [rax]	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005e80	          0x4d85ed	                           test r13, r13	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005e83	          0x4d89ee	                            mov r14, r13	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005e86	     0xf84c6030000	                            je 0x4006252	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005e8c	        0x8b442408	                mov eax, dword [rsp + 8]	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005e90	            0x31f6	                            xor esi, esi	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005e92	          0x4531ff	                          xor r15d, r15d	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005e95	            0x89c1	                            mov ecx, eax	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005e97	    0x81c902010000	                           or ecx, 0x102	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005e9d	            0xa802	                              test al, 2	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005e9f	            0x7425	                            je 0x4005ec6	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005ea1	            0xeb68	                           jmp 0x4005f0b	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005ea3	       0xf1f440000	                   nop dword [rax + rax]	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005ea8	            0x85f6	                           test esi, esi	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4005eaa	     0xf8572feffff	                           jne 0x4005d22	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4005eb0	      0xa903010000	                         test eax, 0x103	      1637	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_4	IF_19
0x4005eb5	        0x4d0f44fe	                          cmove r15, r14	      1637	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_4	IF_19
0x4005eb9	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005ebd	          0x4d85f6	                           test r14, r14	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005ec0	     0xf845cfeffff	                            je 0x4005d22	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005ec6	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4005eca	    0x418b86880000	            mov eax, dword [r14 + 0x88] 	      1618	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005ed1	          0x4885d2	                           test rdx, rdx	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4005ed4	            0x7403	                            je 0x4005ed9	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4005ed6	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      1620	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4005ed9	            0x31c8	                            xor eax, ecx	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005edb	      0xa901040000	                         test eax, 0x401	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005ee0	            0x75c6	                           jne 0x4005ea8	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005ee2	          0x4d89f7	                            mov r15, r14	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005ee5	      0xbe01000000	                              mov esi, 1	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005eea	            0xebcd	                           jmp 0x4005eb9	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005eec	            0x85f6	                           test esi, esi	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4005eee	     0xf852efeffff	                           jne 0x4005d22	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4005ef4	    0x81e203010000	                          and edx, 0x103	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4005efa	        0x4d0f44fe	                          cmove r15, r14	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4005efe	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005f02	          0x4d85f6	                           test r14, r14	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005f05	     0xf8417feffff	                            je 0x4005d22	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005f0b	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4005f0f	    0x418b86880000	            mov eax, dword [r14 + 0x88] 	      1618	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005f16	          0x4885d2	                           test rdx, rdx	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4005f19	            0x7403	                            je 0x4005f1e	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4005f1b	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      1620	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4005f1e	            0x89c2	                            mov edx, eax	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005f20	            0x31ca	                            xor edx, ecx	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005f22	    0xf7c201040000	                         test edx, 0x401	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005f28	            0x75c2	                           jne 0x4005eec	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005f2a	            0xa802	                              test al, 2	      1626	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005f2c	     0xf84f0fdffff	                            je 0x4005d22	      1626	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005f32	          0x4d89f7	                            mov r15, r14	      1626	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4005f35	      0xbe01000000	                              mov esi, 1	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005f3a	            0xebc2	                           jmp 0x4005efe	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005f3c	         0xf1f4000	                         nop dword [rax]	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4005f40	          0x4d85ed	                           test r13, r13	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f43	            0x7476	                            je 0x4005fbb	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f45	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f49	          0x4531e4	                          xor r12d, r12d	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f4c	            0x85d2	                           test edx, edx	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f4e	     0xf8476010000	                            je 0x40060ca	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f54	          0x4885ed	                           test rbp, rbp	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f57	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f5c	            0x753e	                           jne 0x4005f9c	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f5e	      0xe96f020000	                           jmp 0x40061d2	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f63	       0xf1f440000	                   nop dword [rax + rax]	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f68	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1650	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4005f6b	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005f72	          0x4c89f1	                            mov rcx, r14	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005f75	    0x488b3d000000	            mov rdi, qword [0x04005f7c] 	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005f7c	            0xffd5	                                call rbp	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005f7e	            0x85c0	                           test eax, eax	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005f80	            0x740d	                            je 0x4005f8f	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005f82	          0x4431fb	                           xor ebx, r15d	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005f85	    0x81e303050000	                          and ebx, 0x503	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005f8b	        0x4d0f44e5	                          cmove r12, r13	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005f8f	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f93	          0x4d85ed	                           test r13, r13	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f96	     0xf8464fdffff	                            je 0x4005d00	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005f9c	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4005fa0	          0x4885f6	                           test rsi, rsi	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4005fa3	            0x75c3	                           jne 0x4005f68	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4005fa5	    0x418b9d880000	            mov ebx, dword [r13 + 0x88] 	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005fac	            0xebd4	                           jmp 0x4005f82	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005fae	            0x6690	                                     nop	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005fb0	      0x837c240c11	            cmp dword [rsp + 0xc], 0x11 	      1563	ldlang.c	FUNCTION_47	IF_6
0x4005fb5	     0xf8561fcffff	                           jne 0x4005c1c	      1563	ldlang.c	FUNCTION_47	IF_6
0x4005fbb	          0x4531e4	                          xor r12d, r12d	      1563	ldlang.c	FUNCTION_47	IF_6
0x4005fbe	            0x31d2	                            xor edx, edx	      1563	ldlang.c	FUNCTION_47	IF_6
0x4005fc0	      0xe941fdffff	                           jmp 0x4005d06	      1563	ldlang.c	FUNCTION_47	IF_6
0x4005fc5	           0xf1f00	                         nop dword [rax]	      1563	ldlang.c	FUNCTION_47	IF_6
0x4005fc8	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005fcf	      0xe914fdffff	                           jmp 0x4005ce8	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005fd4	         0xf1f4000	                         nop dword [rax]	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4005fd8	          0x4531e4	                          xor r12d, r12d	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005fdb	          0x4d85ed	                           test r13, r13	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005fde	            0x74de	                            je 0x4005fbe	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005fe0	          0x4885ed	                           test rbp, rbp	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005fe3	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005fe8	            0x753a	                           jne 0x4006024	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005fea	      0xe95e010000	                           jmp 0x400614d	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005fef	              0x90	                                     nop	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005ff0	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1673	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4005ff3	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4005ffa	          0x4c89f1	                            mov rcx, r14	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4005ffd	    0x488b3d000000	            mov rdi, qword [0x04006004] 	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4006004	            0xffd5	                                call rbp	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4006006	            0x85c0	                           test eax, eax	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4006008	            0x740d	                            je 0x4006017	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x400600a	          0x4431fb	                           xor ebx, r15d	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x400600d	    0x81e303054000	                       and ebx, 0x400503	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x4006013	        0x4d0f44e5	                          cmove r12, r13	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x4006017	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x400601b	          0x4d85ed	                           test r13, r13	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x400601e	     0xf84dcfcffff	                            je 0x4005d00	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4006024	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4006028	          0x4885f6	                           test rsi, rsi	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x400602b	            0x75c3	                           jne 0x4005ff0	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x400602d	    0x418b9d880000	            mov ebx, dword [r13 + 0x88] 	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4006034	            0xebd4	                           jmp 0x400600a	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4006036	          0x4989ec	                            mov r12, rbp	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4006039	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400603d	            0xeb1f	                           jmp 0x400605e	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400603f	              0x90	                                     nop	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4006040	    0x81e20b010000	                          and edx, 0x10b	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4006046	            0x7509	                           jne 0x4006051	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4006048	      0xa900004000	                      test eax, 0x400000	      1604	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x400604d	        0x4d0f44e5	                          cmove r12, r13	      1604	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4006051	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4006055	          0x4d85ed	                           test r13, r13	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4006058	     0xf84a2fcffff	                            je 0x4005d00	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400605e	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4006062	          0x4885c0	                           test rax, rax	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4006065	            0x7419	                            je 0x4006080	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4006067	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1593	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x400606a	            0x89ca	                            mov edx, ecx	      1599	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400606c	            0x31c2	                            xor edx, eax	      1599	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400606e	    0xf7c20b014000	                      test edx, 0x40010b	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4006074	            0x75ca	                           jne 0x4006040	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4006076	          0x4d89ec	                            mov r12, r13	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4006079	            0xebd6	                           jmp 0x4006051	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x400607b	       0xf1f440000	                   nop dword [rax + rax]	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4006080	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4006087	            0xebe1	                           jmp 0x400606a	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4006089	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x400608d	          0x4989ec	                            mov r12, rbp	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4006090	        0x8b542408	                mov edx, dword [rsp + 8]	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4006094	          0x4885c0	                           test rax, rax	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4006097	            0x7428	                            je 0x40060c1	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4006099	     0xf1f80000000	                         nop dword [rax]	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x40060a0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1693	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x40060a3	            0x31d0	                            xor eax, edx	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x40060a5	            0xa801	                              test al, 1	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x40060a7	        0x4d0f44e5	                          cmove r12, r13	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x40060ab	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060af	          0x4d85ed	                           test r13, r13	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060b2	     0xf8448fcffff	                            je 0x4005d00	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060b8	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x40060bc	          0x4885c0	                           test rax, rax	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x40060bf	            0x75df	                           jne 0x40060a0	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x40060c1	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060c8	            0xebd9	                           jmp 0x40060a3	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060ca	          0x4885ed	                           test rbp, rbp	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060cd	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060d2	            0x7523	                           jne 0x40060f7	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060d4	      0xe9b4000000	                           jmp 0x400618d	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060d9	     0xf1f80000000	                         nop dword [rax]	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060e0	    0x81e300004000	                       and ebx, 0x400000	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060e6	        0x4d0f45e5	                         cmovne r12, r13	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x40060ea	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40060ee	          0x4d85ed	                           test r13, r13	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40060f1	     0xf8409fcffff	                            je 0x4005d00	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40060f7	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40060fb	          0x4885f6	                           test rsi, rsi	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40060fe	            0x742b	                            je 0x400612b	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4006100	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1650	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4006103	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x400610a	          0x4c89f1	                            mov rcx, r14	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x400610d	    0x488b3d000000	            mov rdi, qword [0x04006114] 	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4006114	            0xffd5	                                call rbp	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4006116	            0x85c0	                           test eax, eax	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4006118	            0x74d0	                            je 0x40060ea	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x400611a	            0x89d8	                            mov eax, ebx	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400611c	          0x4431f8	                           xor eax, r15d	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400611f	      0xa903050000	                         test eax, 0x503	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4006124	            0x75ba	                           jne 0x40060e0	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4006126	          0x4d89ec	                            mov r12, r13	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4006129	            0xebbf	                           jmp 0x40060ea	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400612b	    0x418b9d880000	            mov ebx, dword [r13 + 0x88] 	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006132	            0xebe6	                           jmp 0x400611a	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006134	          0x4d89e7	                            mov r15, r12	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006137	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x400613c	          0x4885c0	                           test rax, rax	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x400613f	     0xf84ddfbffff	                            je 0x4005d22	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4006145	          0x4c8938	                    mov qword [rax], r15	      1559	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4006148	      0xe9d5fbffff	                           jmp 0x4005d22	      1559	ldlang.c	FUNCTION_47	IF_4	IF_5
0x400614d	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4006151	          0x4989ec	                            mov r12, rbp	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4006154	        0x8b542408	                mov edx, dword [rsp + 8]	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4006158	          0x4885c0	                           test rax, rax	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x400615b	            0x7427	                            je 0x4006184	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x400615d	           0xf1f00	                         nop dword [rax]	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4006160	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1673	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4006163	            0x31d0	                            xor eax, edx	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x4006165	      0xa903054000	                      test eax, 0x400503	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x400616a	        0x4d0f44e5	                          cmove r12, r13	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x400616e	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4006172	          0x4d85ed	                           test r13, r13	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4006175	     0xf8485fbffff	                            je 0x4005d00	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x400617b	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x400617f	          0x4885c0	                           test rax, rax	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4006182	            0x75dc	                           jne 0x4006160	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4006184	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x400618b	            0xebd6	                           jmp 0x4006163	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x400618d	          0x4989ec	                            mov r12, rbp	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006190	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006194	            0xeb16	                           jmp 0x40061ac	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006196	      0xa900004000	                      test eax, 0x400000	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400619b	        0x4d0f45e5	                         cmovne r12, r13	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400619f	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061a3	          0x4d85ed	                           test r13, r13	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061a6	     0xf8454fbffff	                            je 0x4005d00	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061ac	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061b0	          0x4885c0	                           test rax, rax	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061b3	            0x7414	                            je 0x40061c9	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061b5	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1650	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061b8	            0x89ca	                            mov edx, ecx	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061ba	            0x31c2	                            xor edx, eax	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061bc	    0x81e203050000	                          and edx, 0x503	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061c2	            0x75d2	                           jne 0x4006196	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061c4	          0x4d89ec	                            mov r12, r13	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061c7	            0xebd6	                           jmp 0x400619f	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061c9	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061d0	            0xebe6	                           jmp 0x40061b8	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061d2	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061d6	          0x4989ec	                            mov r12, rbp	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061d9	        0x8b542408	                mov edx, dword [rsp + 8]	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061dd	          0x4885c0	                           test rax, rax	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061e0	            0x742a	                            je 0x400620c	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061e2	    0x660f1f440000	                    nop word [rax + rax]	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061e8	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1650	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x40061eb	            0x31d0	                            xor eax, edx	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061ed	      0xa903050000	                         test eax, 0x503	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061f2	        0x4d0f44e5	                          cmove r12, r13	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x40061f6	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061fa	          0x4d85ed	                           test r13, r13	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x40061fd	     0xf84fdfaffff	                            je 0x4005d00	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006203	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4006207	          0x4885c0	                           test rax, rax	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x400620a	            0x75dc	                           jne 0x40061e8	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x400620c	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006213	            0xebd6	                           jmp 0x40061eb	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4006215	          0x4531ff	                          xor r15d, r15d	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4006218	          0x4d85ed	                           test r13, r13	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x400621b	          0x4d89ee	                            mov r14, r13	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x400621e	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4006222	     0xf84fafaffff	                            je 0x4005d22	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4006228	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x400622c	    0x418b86880000	            mov eax, dword [r14 + 0x88] 	      1709	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4006233	          0x4885d2	                           test rdx, rdx	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4006236	            0x7403	                            je 0x400623b	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4006238	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      1711	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x400623b	            0x31c8	                            xor eax, ecx	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x400623d	          0xf6c420	                           test ah, 0x20	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x4006240	        0x4d0f44fe	                          cmove r15, r14	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x4006244	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4006248	          0x4d85f6	                           test r14, r14	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x400624b	            0x75db	                           jne 0x4006228	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x400624d	      0xe9d0faffff	                           jmp 0x4005d22	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4006252	          0x4531ff	                          xor r15d, r15d	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4006255	      0xe9c8faffff	                           jmp 0x4005d22	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
lang_add_nocrossref_to	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	12
0x400b970	              0x53	                                push rbx	      7920	ldlang.c	FUNCTION_187
0x400b971	          0x4889fb	                            mov rbx, rdi	      7920	ldlang.c	FUNCTION_187
0x400b974	      0xbf18000000	                           mov edi, 0x18	      7906	ldlang.c	FUNCTION_186	CALL_1
0x400b979	      0xe800000000	                          call 0x400b97e	      7906	ldlang.c	FUNCTION_186	CALL_1
0x400b97e	    0x488b15000000	            mov rdx, qword [0x0400b985] 	      7907	ldlang.c	FUNCTION_186
0x400b985	        0x48895808	                mov qword [rax + 8], rbx	      7908	ldlang.c	FUNCTION_186
0x400b989	    0xc74010010000	               mov dword [rax + 0x10], 1	      7922	ldlang.c	FUNCTION_187
0x400b990	    0x488905000000	            mov qword [0x0400b997], rax 	      7910	ldlang.c	FUNCTION_186
0x400b997	    0x800d00000000	                 or byte [0x0400b99e], 1	      7913	ldlang.c	FUNCTION_186
0x400b99e	          0x488910	                    mov qword [rax], rdx	      7907	ldlang.c	FUNCTION_186
0x400b9a1	              0x5b	                                 pop rbx	      7923	ldlang.c	FUNCTION_187
0x400b9a2	              0xc3	                                     ret	      7923	ldlang.c	FUNCTION_187
lang_new_phdr	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,4:DO,0:FOR,1:WHILE,0	76
0x400b830	            0x4157	                                push r15	      7743	ldlang.c	FUNCTION_184
0x400b832	            0x4156	                                push r14	      7743	ldlang.c	FUNCTION_184
0x400b834	          0x4989ff	                            mov r15, rdi	      7743	ldlang.c	FUNCTION_184
0x400b837	            0x4155	                                push r13	      7743	ldlang.c	FUNCTION_184
0x400b839	            0x4154	                                push r12	      7743	ldlang.c	FUNCTION_184
0x400b83b	      0xbf30000000	                           mov edi, 0x30	      7747	ldlang.c	FUNCTION_184	CALL_1
0x400b840	              0x55	                                push rbp	      7743	ldlang.c	FUNCTION_184
0x400b841	              0x53	                                push rbx	      7743	ldlang.c	FUNCTION_184
0x400b842	          0x4189d4	                           mov r12d, edx	      7743	ldlang.c	FUNCTION_184
0x400b845	            0x89cb	                            mov ebx, ecx	      7743	ldlang.c	FUNCTION_184
0x400b847	          0x4d89c6	                             mov r14, r8	      7743	ldlang.c	FUNCTION_184
0x400b84a	          0x4d89cd	                             mov r13, r9	      7743	ldlang.c	FUNCTION_184
0x400b84d	        0x4883ec18	                           sub rsp, 0x18	      7743	ldlang.c	FUNCTION_184
0x400b851	      0x4889742408	                mov qword [rsp + 8], rsi	      7743	ldlang.c	FUNCTION_184
0x400b856	      0xe800000000	                          call 0x400b85b	      7747	ldlang.c	FUNCTION_184	CALL_1
0x400b85b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7750	ldlang.c	FUNCTION_184	CALL_2
0x400b860	      0xba00000000	                              mov edx, 0	      7750	ldlang.c	FUNCTION_184	CALL_2
0x400b865	            0x31f6	                            xor esi, esi	      7750	ldlang.c	FUNCTION_184	CALL_2
0x400b867	    0x48c700000000	                      mov qword [rax], 0	      7748	ldlang.c	FUNCTION_184
0x400b86e	        0x4c897808	                mov qword [rax + 8], r15	      7749	ldlang.c	FUNCTION_184
0x400b872	          0x4889c5	                            mov rbp, rax	      7747	ldlang.c	FUNCTION_184	CALL_1
0x400b875	      0xe800000000	                          call 0x400b87a	      7750	ldlang.c	FUNCTION_184	CALL_2
0x400b87a	            0x4898	                                    cdqe	      7750	ldlang.c	FUNCTION_184	CALL_2
0x400b87c	            0x31d2	                            xor edx, edx	      7750	ldlang.c	FUNCTION_184	CALL_2
0x400b87e	        0x44896518	           mov dword [rbp + 0x18], r12d 	      7751	ldlang.c	FUNCTION_184
0x400b882	        0x4883f801	                              cmp rax, 1	      7756	ldlang.c	FUNCTION_184
0x400b886	        0x48894510	            mov qword [rbp + 0x10], rax 	      7750	ldlang.c	FUNCTION_184	CALL_2
0x400b88a	          0x895d1c	            mov dword [rbp + 0x1c], ebx 	      7752	ldlang.c	FUNCTION_184
0x400b88d	        0x4c897520	            mov qword [rbp + 0x20], r14 	      7753	ldlang.c	FUNCTION_184
0x400b891	        0x4c896d28	            mov qword [rbp + 0x28], r13 	      7754	ldlang.c	FUNCTION_184
0x400b895	     0xf847d000000	                            je 0x400b918	      7756	ldlang.c	FUNCTION_184
0x400b89b	    0x488b05000000	            mov rax, qword [0x0400b8a2] 	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8a2	      0xbb00000000	                              mov ebx, 0	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8a7	          0x4885c0	                           test rax, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8aa	            0x750f	                           jne 0x400b8bb	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8ac	            0xeb51	                           jmp 0x400b8ff	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8ae	            0x6690	                                     nop	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8b0	          0x4889c3	                            mov rbx, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8b3	          0x488b00	                    mov rax, qword [rax]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8b6	          0x4885c0	                           test rax, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8b9	            0x7444	                            je 0x400b8ff	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8bb	            0x85d2	                           test edx, edx	      7759	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400b8bd	            0x74f1	                            je 0x400b8b0	      7759	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400b8bf	      0x4883781001	               cmp qword [rax + 0x10], 1	      7760	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400b8c4	      0xba01000000	                              mov edx, 1	      7760	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400b8c9	            0x75e5	                           jne 0x400b8b0	      7760	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400b8cb	      0x4883781800	               cmp qword [rax + 0x18], 0	      7761	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400b8d0	            0x75de	                           jne 0x400b8b0	      7761	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400b8d2	      0xba05000000	                              mov edx, 5	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8d7	            0x31ff	                            xor edi, edi	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8d9	      0xbe00000000	                              mov esi, 0	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8de	      0xe800000000	                          call 0x400b8e3	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8e3	            0x31f6	                            xor esi, esi	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8e5	          0x4889c7	                            mov rdi, rax	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8e8	            0x31c0	                            xor eax, eax	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8ea	      0xe800000000	                          call 0x400b8ef	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8ef	          0x488b03	                    mov rax, qword [rbx]	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400b8f2	            0x31d2	                            xor edx, edx	      7765	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400b8f4	          0x4889c3	                            mov rbx, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8f7	          0x488b00	                    mov rax, qword [rax]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8fa	          0x4885c0	                           test rax, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8fd	            0x75bc	                           jne 0x400b8bb	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400b8ff	          0x48892b	                    mov qword [rbx], rbp	      7768	ldlang.c	FUNCTION_184
0x400b902	        0x4883c418	                           add rsp, 0x18	      7769	ldlang.c	FUNCTION_184
0x400b906	              0x5b	                                 pop rbx	      7769	ldlang.c	FUNCTION_184
0x400b907	              0x5d	                                 pop rbp	      7769	ldlang.c	FUNCTION_184
0x400b908	            0x415c	                                 pop r12	      7769	ldlang.c	FUNCTION_184
0x400b90a	            0x415d	                                 pop r13	      7769	ldlang.c	FUNCTION_184
0x400b90c	            0x415e	                                 pop r14	      7769	ldlang.c	FUNCTION_184
0x400b90e	            0x415f	                                 pop r15	      7769	ldlang.c	FUNCTION_184
0x400b910	              0xc3	                                     ret	      7769	ldlang.c	FUNCTION_184
0x400b911	     0xf1f80000000	                         nop dword [rax]	      7769	ldlang.c	FUNCTION_184
0x400b918	            0x31d2	                            xor edx, edx	      7756	ldlang.c	FUNCTION_184
0x400b91a	          0x4109dc	                            or r12d, ebx	      7756	ldlang.c	FUNCTION_184
0x400b91d	           0xf95c2	                                setne dl	      7756	ldlang.c	FUNCTION_184
0x400b920	      0xe976ffffff	                           jmp 0x400b89b	      7756	ldlang.c	FUNCTION_184
walk_wild_section_specs1_wild0	IF,2:ELSE,1:SWITCH,0:functions,0:CALL,3:DO,0:FOR,0:WHILE,0	61
0x4003830	            0x4157	                                push r15	       570	ldlang.c	FUNCTION_18
0x4003832	            0x4156	                                push r14	       570	ldlang.c	FUNCTION_18
0x4003834	          0x4989cf	                            mov r15, rcx	       570	ldlang.c	FUNCTION_18
0x4003837	            0x4155	                                push r13	       570	ldlang.c	FUNCTION_18
0x4003839	            0x4154	                                push r12	       570	ldlang.c	FUNCTION_18
0x400383b	          0x4989fc	                            mov r12, rdi	       570	ldlang.c	FUNCTION_18
0x400383e	              0x55	                                push rbp	       570	ldlang.c	FUNCTION_18
0x400383f	              0x53	                                push rbx	       570	ldlang.c	FUNCTION_18
0x4003840	          0x4889f3	                            mov rbx, rsi	       570	ldlang.c	FUNCTION_18
0x4003843	          0x4989d6	                            mov r14, rdx	       570	ldlang.c	FUNCTION_18
0x4003846	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x400384b	        0x4883ec28	                           sub rsp, 0x28	       570	ldlang.c	FUNCTION_18
0x400384f	        0x488b6f50	            mov rbp, qword [rdi + 0x50] 	       577	ldlang.c	FUNCTION_18
0x4003853	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       577	ldlang.c	FUNCTION_18
0x4003857	          0x4889e1	                            mov rcx, rsp	       350	ldlang.c	FUNCTION_10	CALL_1
0x400385a	    0x48c704240000	                      mov qword [rsp], 0	       348	ldlang.c	FUNCTION_10
0x4003862	    0x64488b042528	                mov rax, qword fs:[0x28]	       570	ldlang.c	FUNCTION_18
0x400386b	      0x4889442418	             mov qword [rsp + 0x18], rax	       570	ldlang.c	FUNCTION_18
0x4003870	            0x31c0	                            xor eax, eax	       570	ldlang.c	FUNCTION_18
0x4003872	        0x488b7508	                mov rsi, qword [rbp + 8]	       570	ldlang.c	FUNCTION_18
0x4003876	    0xc74424080000	                  mov dword [rsp + 8], 0	       348	ldlang.c	FUNCTION_10
0x400387e	      0xe800000000	                          call 0x4003883	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003883	        0x8b442408	                mov eax, dword [rsp + 8]	       580	ldlang.c	FUNCTION_18	IF_1
0x4003887	        0x4c8b2c24	                    mov r13, qword [rsp]	       353	ldlang.c	FUNCTION_10
0x400388b	            0x85c0	                           test eax, eax	       580	ldlang.c	FUNCTION_18	IF_1
0x400388d	            0x7559	                           jne 0x40038e8	       580	ldlang.c	FUNCTION_18	IF_1
0x400388f	          0x4d85ed	                           test r13, r13	       582	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4003892	            0x7410	                            je 0x40038a4	       582	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4003894	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003898	          0x4889de	                            mov rsi, rbx	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x400389b	      0xe8d0f8ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x40038a0	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x40038a2	            0x7424	                            je 0x40038c8	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x40038a4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       584	ldlang.c	FUNCTION_18
0x40038a9	    0x644833042528	                xor rax, qword fs:[0x28]	       584	ldlang.c	FUNCTION_18
0x40038b2	            0x7547	                           jne 0x40038fb	       584	ldlang.c	FUNCTION_18
0x40038b4	        0x4883c428	                           add rsp, 0x28	       584	ldlang.c	FUNCTION_18
0x40038b8	              0x5b	                                 pop rbx	       584	ldlang.c	FUNCTION_18
0x40038b9	              0x5d	                                 pop rbp	       584	ldlang.c	FUNCTION_18
0x40038ba	            0x415c	                                 pop r12	       584	ldlang.c	FUNCTION_18
0x40038bc	            0x415d	                                 pop r13	       584	ldlang.c	FUNCTION_18
0x40038be	            0x415e	                                 pop r14	       584	ldlang.c	FUNCTION_18
0x40038c0	            0x415f	                                 pop r15	       584	ldlang.c	FUNCTION_18
0x40038c2	              0xc3	                                     ret	       584	ldlang.c	FUNCTION_18
0x40038c3	       0xf1f440000	                   nop dword [rax + rax]	       584	ldlang.c	FUNCTION_18
0x40038c8	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x40038cd	          0x4d89f9	                             mov r9, r15	       279	ldlang.c	FUNCTION_7
0x40038d0	          0x4989d8	                             mov r8, rbx	       279	ldlang.c	FUNCTION_7
0x40038d3	          0x4c89ea	                            mov rdx, r13	       279	ldlang.c	FUNCTION_7
0x40038d6	          0x4889ee	                            mov rsi, rbp	       279	ldlang.c	FUNCTION_7
0x40038d9	          0x4c89e7	                            mov rdi, r12	       279	ldlang.c	FUNCTION_7
0x40038dc	          0x41ffd6	                                call r14	       279	ldlang.c	FUNCTION_7
0x40038df	            0xebc3	                           jmp 0x40038a4	       584	ldlang.c	FUNCTION_18
0x40038e1	     0xf1f80000000	                         nop dword [rax]	       584	ldlang.c	FUNCTION_18
0x40038e8	          0x4c89f9	                            mov rcx, r15	       581	ldlang.c	FUNCTION_18	CALL_2
0x40038eb	          0x4c89f2	                            mov rdx, r14	       581	ldlang.c	FUNCTION_18	CALL_2
0x40038ee	          0x4889de	                            mov rsi, rbx	       581	ldlang.c	FUNCTION_18	CALL_2
0x40038f1	          0x4c89e7	                            mov rdi, r12	       581	ldlang.c	FUNCTION_18	CALL_2
0x40038f4	      0xe897fbffff	      call sym.walk_wild_section_general	       581	ldlang.c	FUNCTION_18	CALL_2
0x40038f9	            0xeba9	                           jmp 0x40038a4	       581	ldlang.c	FUNCTION_18	CALL_2
0x40038fb	      0xe800000000	 call sym.walk_wild_section_specs3_wild2	       584	ldlang.c	FUNCTION_18
add_excluded_libs	IF,2:ELSE,0:SWITCH,0:functions,0:CALL,4:DO,0:FOR,0:WHILE,1	62
0x4007450	           0xfbe07	                   movsx eax, byte [rdi]	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4007453	            0x84c0	                             test al, al	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4007455	     0xf84cd000000	                            je 0x4007528	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x400745b	            0x4155	                                push r13	      2689	ldlang.c	FUNCTION_64
0x400745d	            0x4154	                                push r12	      2689	ldlang.c	FUNCTION_64
0x400745f	              0x55	                                push rbp	      2689	ldlang.c	FUNCTION_64
0x4007460	              0x53	                                push rbx	      2689	ldlang.c	FUNCTION_64
0x4007461	          0x4889fd	                            mov rbp, rdi	      2689	ldlang.c	FUNCTION_64
0x4007464	        0x4883ec08	                              sub rsp, 8	      2689	ldlang.c	FUNCTION_64
0x4007468	     0xf1f84000000	                   nop dword [rax + rax]	      2689	ldlang.c	FUNCTION_64
0x4007470	          0x83f82c	                           cmp eax, 0x2c	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007473	     0xf84a5000000	                            je 0x400751e	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007479	          0x83f83a	                           cmp eax, 0x3a	      1103	string2.h	FUNCTION_222	WHILE_1
0x400747c	     0xf849c000000	                            je 0x400751e	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007482	          0x4889eb	                            mov rbx, rbp	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007485	            0xeb13	                           jmp 0x400749a	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007487	    0x660f1f840000	                    nop word [rax + rax]	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007490	          0x83f83a	                           cmp eax, 0x3a	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007493	            0x7423	                            je 0x40074b8	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007495	          0x83f82c	                           cmp eax, 0x2c	      1103	string2.h	FUNCTION_222	WHILE_1
0x4007498	            0x741e	                            je 0x40074b8	      1103	string2.h	FUNCTION_222	WHILE_1
0x400749a	        0x4883c301	                              add rbx, 1	      1104	string2.h	FUNCTION_222	WHILE_1
0x400749e	           0xfbe03	                   movsx eax, byte [rbx]	      1103	string2.h	FUNCTION_222	WHILE_1
0x40074a1	            0x84c0	                             test al, al	      1103	string2.h	FUNCTION_222	WHILE_1
0x40074a3	            0x75eb	                           jne 0x4007490	      1103	string2.h	FUNCTION_222	WHILE_1
0x40074a5	          0x4889ef	                            mov rdi, rbp	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x40074a8	      0xe800000000	                          call 0x40074ad	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x40074ad	      0x488d5c0500	                    lea rbx, [rbp + rax]	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x40074b2	    0x660f1f440000	                    nop word [rax + rax]	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x40074b8	      0xbf10000000	                           mov edi, 0x10	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x40074bd	          0x4989dd	                            mov r13, rbx	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x40074c0	      0xe800000000	                          call 0x40074c5	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x40074c5	          0x4929ed	                            sub r13, rbp	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x40074c8	          0x4989c4	                            mov r12, rax	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x40074cb	    0x488b05000000	            mov rax, qword [0x040074d2] 	      2699	ldlang.c	FUNCTION_64	WHILE_1
0x40074d2	        0x498d7d01	                      lea rdi, [r13 + 1]	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x40074d6	      0x4989442408	                mov qword [r12 + 8], rax	      2699	ldlang.c	FUNCTION_64	WHILE_1
0x40074db	      0xe800000000	                          call 0x40074e0	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x40074e0	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_245	CALL_3
0x40074e3	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_245	CALL_3
0x40074e6	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_245	CALL_3
0x40074e9	        0x49890424	                    mov qword [r12], rax	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x40074ed	      0xe800000000	                          call 0x40074f2	        53	string3.h	FUNCTION_245	CALL_3
0x40074f2	          0x803b00	                       cmp byte [rbx], 0	      2704	ldlang.c	FUNCTION_64	WHILE_1	IF_2
0x40074f5	      0x42c6042800	                 mov byte [rax + r13], 0	      2702	ldlang.c	FUNCTION_64	WHILE_1
0x40074fa	    0x4c8925000000	            mov qword [0x04007501], r12 	      2703	ldlang.c	FUNCTION_64	WHILE_1
0x4007501	            0x7410	                            je 0x4007513	      2704	ldlang.c	FUNCTION_64	WHILE_1	IF_2
0x4007503	         0xfbe4301	               movsx eax, byte [rbx + 1]	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4007507	        0x488d6b01	                      lea rbp, [rbx + 1]	      2706	ldlang.c	FUNCTION_64	WHILE_1
0x400750b	            0x84c0	                             test al, al	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x400750d	     0xf855dffffff	                           jne 0x4007470	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4007513	        0x4883c408	                              add rsp, 8	      2708	ldlang.c	FUNCTION_64
0x4007517	              0x5b	                                 pop rbx	      2708	ldlang.c	FUNCTION_64
0x4007518	              0x5d	                                 pop rbp	      2708	ldlang.c	FUNCTION_64
0x4007519	            0x415c	                                 pop r12	      2708	ldlang.c	FUNCTION_64
0x400751b	            0x415d	                                 pop r13	      2708	ldlang.c	FUNCTION_64
0x400751d	              0xc3	                                     ret	      2708	ldlang.c	FUNCTION_64
0x400751e	          0x4885ed	                           test rbp, rbp	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x4007521	            0x7482	                            je 0x40074a5	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x4007523	          0x4889eb	                            mov rbx, rbp	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x4007526	            0xeb90	                           jmp 0x40074b8	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x4007528	            0xf3c3	                                     ret	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
map_input_to_output_sections	IF,9:ELSE,2:SWITCH,2:functions,0:CALL,12:DO,0:FOR,1:WHILE,0	172
0x4009090	          0x4885ff	                           test rdi, rdi	      3594	ldlang.c	FUNCTION_86	FOR_1
0x4009093	            0x7455	                            je 0x40090ea	      3594	ldlang.c	FUNCTION_86	FOR_1
0x4009095	            0x4155	                                push r13	      3593	ldlang.c	FUNCTION_86
0x4009097	            0x4154	                                push r12	      3593	ldlang.c	FUNCTION_86
0x4009099	    0x41bd01020000	                         mov r13d, 0x201	      3593	ldlang.c	FUNCTION_86
0x400909f	              0x55	                                push rbp	      3593	ldlang.c	FUNCTION_86
0x40090a0	              0x53	                                push rbx	      3593	ldlang.c	FUNCTION_86
0x40090a1	          0x4989f4	                            mov r12, rsi	      3593	ldlang.c	FUNCTION_86
0x40090a4	          0x4889fb	                            mov rbx, rdi	      3593	ldlang.c	FUNCTION_86
0x40090a7	          0x4889d5	                            mov rbp, rdx	      3593	ldlang.c	FUNCTION_86
0x40090aa	        0x4883ec08	                              sub rsp, 8	      3593	ldlang.c	FUNCTION_86
0x40090ae	            0x6690	                                     nop	      3593	ldlang.c	FUNCTION_86
0x40090b0	        0x837b080f	                cmp dword [rbx + 8], 0xf	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40090b4	            0x7722	                            ja 0x40090d8	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40090b6	          0x8b4308	                mov eax, dword [rbx + 8]	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40090b9	    0xff24c5000000	                       jmp qword [rax*8]	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40090c0	    0x488b3d000000	            mov rdi, qword [0x040090c7] 	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40090c7	          0x4889ea	                            mov rdx, rbp	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40090ca	          0x4c89e6	                            mov rsi, r12	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40090cd	      0xe8beffffff	   call sym.map_input_to_output_sections	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40090d2	    0x660f1f440000	                    nop word [rax + rax]	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40090d8	          0x488b1b	                    mov rbx, qword [rbx]	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40090db	          0x4885db	                           test rbx, rbx	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40090de	            0x75d0	                           jne 0x40090b0	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40090e0	        0x4883c408	                              add rsp, 8	      3715	ldlang.c	FUNCTION_86
0x40090e4	              0x5b	                                 pop rbx	      3715	ldlang.c	FUNCTION_86
0x40090e5	              0x5d	                                 pop rbp	      3715	ldlang.c	FUNCTION_86
0x40090e6	            0x415c	                                 pop r12	      3715	ldlang.c	FUNCTION_86
0x40090e8	            0x415d	                                 pop r13	      3715	ldlang.c	FUNCTION_86
0x40090ea	            0xf3c3	                                     ret	      3715	ldlang.c	FUNCTION_86
0x40090ec	         0xf1f4000	                         nop dword [rax]	      3715	ldlang.c	FUNCTION_86
0x40090f0	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      3631	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40090f4	            0xebe2	                           jmp 0x40090d8	      3632	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40090f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3632	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4009100	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3641	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_6
0x4009104	      0xe85790ffff	                    call sym.exp_init_os	      3641	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_6
0x4009109	    0x8b858c000000	            mov eax, dword [rbp + 0x8c] 	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x400910f	          0x83f802	                              cmp eax, 2	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x4009112	     0xf84b0010000	                            je 0x40092c8	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x4009118	            0x31f6	                            xor esi, esi	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400911a	          0x83f803	                              cmp eax, 3	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400911d	        0x400f95c6	                               setne sil	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4009121	    0x8db476000100	         lea esi, [rsi + rsi*2 + 0x100] 	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4009128	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x400912c	          0x4885c0	                           test rax, rax	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x400912f	     0xf8481010000	                            je 0x40092b6	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x4009135	           0x97020	              or dword [rax + 0x20], esi	      3664	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	ELSE_2
0x4009138	            0xeb9e	                           jmp 0x40090d8	      3664	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	ELSE_2
0x400913a	    0x660f1f440000	                    nop word [rax + rax]	      3664	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	ELSE_2
0x4009140	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x4009144	          0x4889ea	                            mov rdx, rbp	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x4009147	          0x4c89e6	                            mov rsi, r12	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x400914a	      0xe841ffffff	   call sym.map_input_to_output_sections	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x400914f	            0xeb87	                           jmp 0x40090d8	      3637	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4009151	     0xf1f80000000	                         nop dword [rax]	      3637	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4009158	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2901	ldlang.c	FUNCTION_67	IF_1
0x400915c	          0x4885c0	                           test rax, rax	      2901	ldlang.c	FUNCTION_67	IF_1
0x400915f	            0x740a	                            je 0x400916b	      2901	ldlang.c	FUNCTION_67	IF_1
0x4009161	        0x83781801	               cmp dword [rax + 0x18], 1	      2902	ldlang.c	FUNCTION_67	IF_1
0x4009165	     0xf8495010000	                            je 0x4009300	      2902	ldlang.c	FUNCTION_67	IF_1
0x400916b	          0x4889ea	                            mov rdx, rbp	      2917	ldlang.c	FUNCTION_67	CALL_3
0x400916e	      0xbe00000000	                              mov esi, 0	      2917	ldlang.c	FUNCTION_67	CALL_3
0x4009173	          0x4889df	                            mov rdi, rbx	      2917	ldlang.c	FUNCTION_67	CALL_3
0x4009176	      0xe895f2ffff	                      call sym.walk_wild	      2917	ldlang.c	FUNCTION_67	CALL_3
0x400917b	    0x48833d000000	               cmp qword [0x04009183], 0	      2919	ldlang.c	FUNCTION_67	IF_3
0x4009183	     0xf854fffffff	                           jne 0x40090d8	      2919	ldlang.c	FUNCTION_67	IF_3
0x4009189	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x400918d	          0x4885c0	                           test rax, rax	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x4009190	            0x751a	                           jne 0x40091ac	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x4009192	      0xe941ffffff	                           jmp 0x40090d8	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x4009197	    0x660f1f840000	                    nop word [rax + rax]	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40091a0	          0x488b00	                    mov rax, qword [rax]	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40091a3	          0x4885c0	                           test rax, rax	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40091a6	     0xf842cffffff	                            je 0x40090d8	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40091ac	        0x488b7008	                mov rsi, qword [rax + 8]	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091b0	          0x4885f6	                           test rsi, rsi	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091b3	            0x74eb	                            je 0x40091a0	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091b5	      0xbf00000000	                              mov edi, 0	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091ba	      0xb907000000	                              mov ecx, 7	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091bf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091c1	            0x75dd	                           jne 0x40091a0	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091c3	    0x48892d000000	            mov qword [0x040091ca], rbp 	      2925	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091ca	      0xe909ffffff	                           jmp 0x40090d8	      2925	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091cf	              0x90	                                     nop	      2925	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40091d0	          0x4885ed	                           test rbp, rbp	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x40091d3	            0x740b	                            je 0x40091e0	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x40091d5	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x40091da	     0xf8460010000	                            je 0x4009340	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x40091e0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3682	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_10
0x40091e4	      0xe8778fffff	                    call sym.exp_init_os	      3682	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_10
0x40091e9	      0xe9eafeffff	                           jmp 0x40090d8	      3683	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40091ee	            0x6690	                                     nop	      3683	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40091f0	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x40091f6	            0x85c0	                           test eax, eax	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x40091f8	     0xf84ea000000	                            je 0x40092e8	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x40091fe	      0x2d7c010000	                          sub eax, 0x17c	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x4009203	          0x83f801	                              cmp eax, 1	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x4009206	     0xf87ccfeffff	                            ja 0x40090d8	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x400920c	    0x808b90000000	                 or byte [rbx + 0x90], 4	      3616	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x4009213	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x4009217	          0x4889de	                            mov rsi, rbx	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x400921a	      0xe871f6ffff	           call sym.check_input_sections	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x400921f	     0xfb683900000	           movzx eax, byte [rbx + 0x90] 	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4009226	            0x31d2	                            xor edx, edx	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4009228	          0xc0e802	                               shr al, 2	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400922b	          0x83e001	                              and eax, 1	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400922e	    0x81bb84000000	          cmp dword [rbx + 0x84], 0x17c 	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4009238	           0xf94c2	                                 sete dl	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400923b	            0x39d0	                            cmp eax, edx	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400923d	     0xf84a5000000	                            je 0x40092e8	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4009243	    0xc78384000000	     mov dword [rbx + 0x84], 0xffffffff 	      3620	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400924d	      0xe986feffff	                           jmp 0x40090d8	      3621	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4009252	    0x660f1f440000	                    nop word [rax + rax]	      3621	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4009258	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x400925c	          0x4885c0	                           test rax, rax	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x400925f	            0x740b	                            je 0x400926c	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4009261	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3695	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4009264	            0x85c0	                           test eax, eax	      3695	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4009266	     0xf856cfeffff	                           jne 0x40090d8	      3695	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x400926c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x4009270	      0xbe01000000	                              mov esi, 1	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x4009275	      0xe8c68dffff	call sym.lang_output_section_statement_lookup.constprop.62	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x400927a	      0x4883783800	               cmp qword [rax + 0x38], 0	      3707	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	IF_9
0x400927f	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3706	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4009283	        0x48895058	             mov qword [rax + 0x58], rdx	      3706	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4009287	     0xf854bfeffff	                           jne 0x40090d8	      3707	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	IF_9
0x400928d	            0x31f6	                            xor esi, esi	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x400928f	          0x4889c7	                            mov rdi, rax	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x4009292	      0xe8698fffff	                        call sym.init_os	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x4009297	      0xe93cfeffff	                           jmp 0x40090d8	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x400929c	         0xf1f4000	                         nop dword [rax]	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40092a0	          0x4885ed	                           test rbp, rbp	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x40092a3	     0xf842ffeffff	                            je 0x40090d8	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x40092a9	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x40092ae	     0xf8524feffff	                           jne 0x40090d8	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x40092b4	            0x31f6	                            xor esi, esi	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40092b6	          0x4889ef	                            mov rdi, rbp	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40092b9	      0xe8428fffff	                        call sym.init_os	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40092be	      0xe915feffff	                           jmp 0x40090d8	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40092c3	       0xf1f440000	                   nop dword [rax + rax]	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40092c8	    0x488b05000000	            mov rax, qword [0x040092cf] 	      3654	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	IF_4
0x40092cf	      0xbe00030000	                          mov esi, 0x300	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40092d4	        0x488b4008	                mov rax, qword [rax + 8]	      3654	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	IF_4
0x40092d8	        0x83780805	                  cmp dword [rax + 8], 5	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40092dc	        0x410f44f5	                         cmove esi, r13d	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40092e0	      0xe943feffff	                           jmp 0x4009128	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40092e5	           0xf1f00	                         nop dword [rax]	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40092e8	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40092ec	          0x4889da	                            mov rdx, rbx	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40092ef	          0x4c89e6	                            mov rsi, r12	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40092f2	      0xe899fdffff	   call sym.map_input_to_output_sections	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40092f7	      0xe9dcfdffff	                           jmp 0x40090d8	      3627	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40092fc	         0xf1f4000	                         nop dword [rax]	      3627	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4009300	          0x8b5318	            mov edx, dword [rbx + 0x18] 	      2903	ldlang.c	FUNCTION_67	IF_1
0x4009303	            0x85d2	                           test edx, edx	      2903	ldlang.c	FUNCTION_67	IF_1
0x4009305	     0xf8560feffff	                           jne 0x400916b	      2903	ldlang.c	FUNCTION_67	IF_1
0x400930b	      0xbe00000000	                              mov esi, 0	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x4009310	          0x4889ea	                            mov rdx, rbp	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x4009313	          0x4889df	                            mov rdi, rbx	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x4009316	      0xe8f5f0ffff	                      call sym.walk_wild	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x400931b	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	      2909	ldlang.c	FUNCTION_67	IF_1
0x400931f	          0x4885f6	                           test rsi, rsi	      2910	ldlang.c	FUNCTION_67	IF_1	IF_2
0x4009322	     0xf8453feffff	                            je 0x400917b	      2910	ldlang.c	FUNCTION_67	IF_1	IF_2
0x4009328	          0x4889ea	                            mov rdx, rbp	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x400932b	          0x4889df	                            mov rdi, rbx	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x400932e	      0xe8bdd9ffff	call sym.output_section_callback_tree_to_list	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x4009333	    0x48c743700000	               mov qword [rbx + 0x70], 0	      2913	ldlang.c	FUNCTION_67	IF_1	IF_2
0x400933b	      0xe93bfeffff	                           jmp 0x400917b	      2913	ldlang.c	FUNCTION_67	IF_1	IF_2
0x4009340	            0x31f6	                            xor esi, esi	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x4009342	          0x4889ef	                            mov rdi, rbp	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x4009345	      0xe8b68effff	                        call sym.init_os	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x400934a	      0xe991feffff	                           jmp 0x40091e0	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
next_matching_output_section_statement	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,1:FOR,0:WHILE,0	36
0x4005ab0	            0x4154	                                push r12	      1496	ldlang.c	FUNCTION_46
0x4005ab2	              0x55	                                push rbp	      1496	ldlang.c	FUNCTION_46
0x4005ab3	            0x89f5	                            mov ebp, esi	      1496	ldlang.c	FUNCTION_46
0x4005ab5	              0x53	                                push rbx	      1496	ldlang.c	FUNCTION_46
0x4005ab6	        0x4c8b6730	            mov r12, qword [rdi + 0x30] 	      1502	ldlang.c	FUNCTION_46
0x4005aba	        0x488d5fe8	                   lea rbx, [rdi - 0x18]	      1499	ldlang.c	FUNCTION_46
0x4005abe	        0x4c3b67f0	             cmp r12, qword [rdi - 0x10]	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4005ac2	            0x7414	                            je 0x4005ad8	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4005ac4	      0xbee0050000	                          mov esi, 0x5e0	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4005ac9	      0xbf00000000	                              mov edi, 0	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4005ace	      0xe800000000	                          call 0x4005ad3	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4005ad3	       0xf1f440000	                   nop dword [rax + rax]	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4005ad8	          0x488b1b	                    mov rbx, qword [rbx]	      1507	ldlang.c	FUNCTION_46	DO_1
0x4005adb	          0x4885db	                           test rbx, rbx	      1508	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4005ade	            0x7428	                            je 0x4005b08	      1508	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4005ae0	        0x4c3b6348	            cmp r12, qword [rbx + 0x48] 	      1509	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4005ae4	            0x7522	                           jne 0x4005b08	      1509	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4005ae6	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1512	ldlang.c	FUNCTION_46
0x4005aec	            0x39e8	                            cmp eax, ebp	      1514	ldlang.c	FUNCTION_46
0x4005aee	            0x740b	                            je 0x4005afb	      1514	ldlang.c	FUNCTION_46
0x4005af0	          0xc1e81f	                           shr eax, 0x1f	      1514	ldlang.c	FUNCTION_46
0x4005af3	            0x84c0	                             test al, al	      1514	ldlang.c	FUNCTION_46
0x4005af5	            0x75e1	                           jne 0x4005ad8	      1514	ldlang.c	FUNCTION_46
0x4005af7	            0x85ed	                           test ebp, ebp	      1514	ldlang.c	FUNCTION_46
0x4005af9	            0x75dd	                           jne 0x4005ad8	      1514	ldlang.c	FUNCTION_46
0x4005afb	        0x488d4318	                   lea rax, [rbx + 0x18]	      1516	ldlang.c	FUNCTION_46
0x4005aff	              0x5b	                                 pop rbx	      1517	ldlang.c	FUNCTION_46
0x4005b00	              0x5d	                                 pop rbp	      1517	ldlang.c	FUNCTION_46
0x4005b01	            0x415c	                                 pop r12	      1517	ldlang.c	FUNCTION_46
0x4005b03	              0xc3	                                     ret	      1517	ldlang.c	FUNCTION_46
0x4005b04	         0xf1f4000	                         nop dword [rax]	      1517	ldlang.c	FUNCTION_46
0x4005b08	              0x5b	                                 pop rbx	      1517	ldlang.c	FUNCTION_46
0x4005b09	            0x31c0	                            xor eax, eax	      1510	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4005b0b	              0x5d	                                 pop rbp	      1517	ldlang.c	FUNCTION_46
0x4005b0c	            0x415c	                                 pop r12	      1517	ldlang.c	FUNCTION_46
0x4005b0e	              0xc3	                                     ret	      1517	ldlang.c	FUNCTION_46
lang_finalize_version_expr_head	IF,6:ELSE,4:SWITCH,0:functions,0:CALL,3:DO,1:FOR,2:WHILE,0	104
0x4000900	          0x4c8b0f	                     mov r9, qword [rdi]	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000903	          0x4d85c9	                             test r9, r9	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000906	            0x7433	                            je 0x400093b	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000908	          0x8b7718	            mov esi, dword [rdi + 0x18] 	      8373	ldlang.c	FUNCTION_198	FOR_1
0x400090b	          0x4c89ca	                             mov rdx, r9	      8373	ldlang.c	FUNCTION_198	FOR_1
0x400090e	            0x31c9	                            xor ecx, ecx	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000910	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	      8375	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4000914	          0x488b12	                    mov rdx, qword [rdx]	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000917	          0x4189c0	                            mov r8d, eax	      8375	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x400091a	        0x4183e001	                              and r8d, 1	      8375	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x400091e	        0x4180f801	                              cmp r8b, 1	      8376	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4000922	        0x4883d9ff	             sbb rcx, 0xffffffffffffffff	      8376	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4000926	          0xc0e803	                               shr al, 3	      8377	ldlang.c	FUNCTION_198	FOR_1
0x4000929	          0x83e007	                              and eax, 7	      8377	ldlang.c	FUNCTION_198	FOR_1
0x400092c	             0x9c6	                             or esi, eax	      8377	ldlang.c	FUNCTION_198	FOR_1
0x400092e	          0x4885d2	                           test rdx, rdx	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000931	            0x75dd	                           jne 0x4000910	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000933	          0x4885c9	                           test rcx, rcx	      8380	ldlang.c	FUNCTION_198	IF_2
0x4000936	          0x897718	             mov dword [rdi + 0x18], esi	      8380	ldlang.c	FUNCTION_198	IF_2
0x4000939	            0x7505	                           jne 0x4000940	      8380	ldlang.c	FUNCTION_198	IF_2
0x400093b	        0x4c894f10	              mov qword [rdi + 0x10], r9	      8442	ldlang.c	FUNCTION_198	ELSE_4
0x400093f	              0xc3	                                     ret	      8442	ldlang.c	FUNCTION_198	ELSE_4
0x4000940	            0x4157	                                push r15	      8368	ldlang.c	FUNCTION_198
0x4000942	            0x4156	                                push r14	      8368	ldlang.c	FUNCTION_198
0x4000944	      0xba00000000	                              mov edx, 0	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000949	            0x4155	                                push r13	      8368	ldlang.c	FUNCTION_198
0x400094b	            0x4154	                                push r12	      8368	ldlang.c	FUNCTION_198
0x400094d	      0xbe00000000	                              mov esi, 0	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000952	              0x55	                                push rbp	      8368	ldlang.c	FUNCTION_198
0x4000953	              0x53	                                push rbx	      8368	ldlang.c	FUNCTION_198
0x4000954	          0x4889fb	                            mov rbx, rdi	      8368	ldlang.c	FUNCTION_198
0x4000957	        0x4c8d7310	                   lea r14, [rbx + 0x10]	      8385	ldlang.c	FUNCTION_198	IF_2
0x400095b	        0x4883ec18	                           sub rsp, 0x18	      8368	ldlang.c	FUNCTION_198
0x400095f	        0x48893c24	                    mov qword [rsp], rdi	      8368	ldlang.c	FUNCTION_198
0x4000963	        0x488d3c09	                    lea rdi, [rcx + rcx]	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000967	            0x31c9	                            xor ecx, ecx	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000969	      0xe800000000	                          call 0x400096e	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x400096e	          0x4c8b3b	                    mov r15, qword [rbx]	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000971	        0x48894308	                mov qword [rbx + 8], rax	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000975	      0x48895c2408	                mov qword [rsp + 8], rbx	      8384	ldlang.c	FUNCTION_198	IF_2
0x400097a	          0x4d85ff	                           test r15, r15	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x400097d	            0x7517	                           jne 0x4000996	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x400097f	      0xe984000000	                           jmp 0x4000a08	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000984	         0xf1f4000	                         nop dword [rax]	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000988	          0x4d893e	                    mov qword [r14], r15	      8391	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x400098b	          0x4d89fe	                            mov r14, r15	      8392	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x400098e	          0x4d85ed	                           test r13, r13	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000991	          0x4d89ef	                            mov r15, r13	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000994	            0x7472	                            je 0x4000a08	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000996	      0x41f6471001	               test byte [r15 + 0x10], 1	      8389	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x400099b	          0x4d8b2f	                    mov r13, qword [r15]	      8388	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x400099e	            0x74e8	                            je 0x4000988	      8389	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x40009a0	        0x488b0424	                    mov rax, qword [rsp]	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40009a4	      0xba01000000	                              mov edx, 1	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40009a9	          0x4c89fe	                            mov rsi, r15	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40009ac	        0x488b7808	                mov rdi, qword [rax + 8]	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40009b0	      0xe800000000	                          call 0x40009b5	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40009b5	          0x4c8b20	                    mov r12, qword [rax]	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009b8	          0x4d85e4	                           test r12, r12	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009bb	     0xf847f000000	                            je 0x4000a40	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009c1	      0x410fb66f10	           movzx ebp, byte [r15 + 0x10] 	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009c6	            0xeb25	                           jmp 0x40009ed	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009c8	     0xf1f84000000	                   nop dword [rax + rax]	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009d0	        0x498b1c24	                    mov rbx, qword [r12]	      8412	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1
0x40009d4	          0x4885db	                           test rbx, rbx	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009d7	            0x7457	                            je 0x4000a30	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009d9	        0x498b7708	                mov rsi, qword [r15 + 8]	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009dd	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009e1	      0xe800000000	                          call 0x40009e6	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009e6	            0x85c0	                           test eax, eax	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009e8	            0x7546	                           jne 0x4000a30	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009ea	          0x4989dc	                            mov r12, rbx	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40009ed	            0x89e8	                            mov eax, ebp	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x40009ef	      0x4132442410	               xor al, byte [r12 + 0x10]	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x40009f4	            0xa838	                           test al, 0x38	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x40009f6	            0x75d8	                           jne 0x40009d0	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x40009f8	          0x4c89ff	                            mov rdi, r15	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x40009fb	          0x4d89ef	                            mov r15, r13	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x40009fe	      0xe800000000	                          call 0x4000a03	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x4000a03	          0x4d85ed	                           test r13, r13	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000a06	            0x758e	                           jne 0x4000996	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000a08	        0x488b0424	                    mov rax, qword [rsp]	      8439	ldlang.c	FUNCTION_198	IF_2
0x4000a0c	    0x49c706000000	                      mov qword [r14], 0	      8438	ldlang.c	FUNCTION_198	IF_2
0x4000a13	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8439	ldlang.c	FUNCTION_198	IF_2
0x4000a18	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8439	ldlang.c	FUNCTION_198	IF_2
0x4000a1c	          0x488901	                    mov qword [rcx], rax	      8439	ldlang.c	FUNCTION_198	IF_2
0x4000a1f	        0x4883c418	                           add rsp, 0x18	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a23	              0x5b	                                 pop rbx	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a24	              0x5d	                                 pop rbp	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a25	            0x415c	                                 pop r12	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a27	            0x415d	                                 pop r13	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a29	            0x415e	                                 pop r14	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a2b	            0x415f	                                 pop r15	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a2d	              0xc3	                                     ret	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a2e	            0x6690	                                     nop	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000a30	          0x49891f	                    mov qword [r15], rbx	      8426	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4000a33	        0x4d893c24	                    mov qword [r12], r15	      8427	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4000a37	      0xe952ffffff	                           jmp 0x400098e	      8427	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4000a3c	         0xf1f4000	                         nop dword [rax]	      8427	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4000a40	          0x4c8938	                    mov qword [rax], r15	      8432	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4000a43	      0x488b442408	                mov rax, qword [rsp + 8]	      8433	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4000a48	      0x4c897c2408	                mov qword [rsp + 8], r15	      8434	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4000a4d	          0x4c8938	                    mov qword [rax], r15	      8433	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4000a50	      0xe939ffffff	                           jmp 0x400098e	      8433	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
walk_wild_section_specs3_wild2	IF,4:ELSE,2:SWITCH,0:functions,0:CALL,7:DO,0:FOR,1:WHILE,0	153
0x4003900	            0x4157	                                push r15	       649	ldlang.c	FUNCTION_21
0x4003902	            0x4156	                                push r14	       649	ldlang.c	FUNCTION_21
0x4003904	          0x4989fe	                            mov r14, rdi	       649	ldlang.c	FUNCTION_21
0x4003907	            0x4155	                                push r13	       649	ldlang.c	FUNCTION_21
0x4003909	            0x4154	                                push r12	       649	ldlang.c	FUNCTION_21
0x400390b	              0x55	                                push rbp	       649	ldlang.c	FUNCTION_21
0x400390c	              0x53	                                push rbx	       649	ldlang.c	FUNCTION_21
0x400390d	          0x4889f5	                            mov rbp, rsi	       649	ldlang.c	FUNCTION_21
0x4003910	        0x4883ec48	                           sub rsp, 0x48	       649	ldlang.c	FUNCTION_21
0x4003914	        0x488b5f58	            mov rbx, qword [rdi + 0x58] 	       652	ldlang.c	FUNCTION_21
0x4003918	        0x4c8b6f60	            mov r13, qword [rdi + 0x60] 	       653	ldlang.c	FUNCTION_21
0x400391c	    0x64488b042528	                mov rax, qword fs:[0x28]	       649	ldlang.c	FUNCTION_21
0x4003925	      0x4889442438	             mov qword [rsp + 0x38], rax	       649	ldlang.c	FUNCTION_21
0x400392a	            0x31c0	                            xor eax, eax	       649	ldlang.c	FUNCTION_21
0x400392c	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       651	ldlang.c	FUNCTION_21
0x4003930	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       651	ldlang.c	FUNCTION_21
0x4003934	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       649	ldlang.c	FUNCTION_21
0x4003939	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	       350	ldlang.c	FUNCTION_10	CALL_1
0x400393e	      0x4889542408	                mov qword [rsp + 8], rdx	       649	ldlang.c	FUNCTION_21
0x4003943	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003948	    0x48c744242000	               mov qword [rsp + 0x20], 0	       348	ldlang.c	FUNCTION_10
0x4003951	        0x488b7008	                mov rsi, qword [rax + 8]	       348	ldlang.c	FUNCTION_10
0x4003955	      0x4889442418	             mov qword [rsp + 0x18], rax	       651	ldlang.c	FUNCTION_21
0x400395a	    0xc74424280000	               mov dword [rsp + 0x28], 0	       348	ldlang.c	FUNCTION_10
0x4003962	      0xe800000000	                          call 0x4003967	       350	ldlang.c	FUNCTION_10	CALL_1
0x4003967	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       657	ldlang.c	FUNCTION_21	IF_1
0x400396b	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       353	ldlang.c	FUNCTION_10
0x4003970	            0x85c0	                           test eax, eax	       657	ldlang.c	FUNCTION_21	IF_1
0x4003972	     0xf85b8010000	                           jne 0x4003b30	       657	ldlang.c	FUNCTION_21	IF_1
0x4003978	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x400397c	    0x4c8bb8900000	            mov r15, qword [rax + 0x90] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x4003983	          0x4d85ff	                           test r15, r15	       663	ldlang.c	FUNCTION_21	FOR_1
0x4003986	            0x7521	                           jne 0x40039a9	       663	ldlang.c	FUNCTION_21	FOR_1
0x4003988	      0xe9b3000000	                           jmp 0x4003a40	       663	ldlang.c	FUNCTION_21	FOR_1
0x400398d	           0xf1f00	                         nop dword [rax]	       663	ldlang.c	FUNCTION_21	FOR_1
0x4003990	        0x498b4d08	                mov rcx, qword [r13 + 8]	       676	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	CALL_6
0x4003994	            0x3a11	                      cmp dl, byte [rcx]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003996	     0xf84cc000000	                            je 0x4003a68	       374	ldlang.c	FUNCTION_12	IF_1
0x400399c	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x40039a0	          0x4d85ff	                           test r15, r15	       663	ldlang.c	FUNCTION_21	FOR_1
0x40039a3	     0xf8497000000	                            je 0x4003a40	       663	ldlang.c	FUNCTION_21	FOR_1
0x40039a9	          0x4d39fc	                            cmp r12, r15	       665	ldlang.c	FUNCTION_21	FOR_1	IF_2
0x40039ac	     0xf843e010000	                            je 0x4003af0	       665	ldlang.c	FUNCTION_21	FOR_1	IF_2
0x40039b2	          0x498b07	                    mov rax, qword [r15]	       669	ldlang.c	FUNCTION_21	FOR_1	ELSE_1
0x40039b5	        0x488b4b08	                mov rcx, qword [rbx + 8]	       670	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_4
0x40039b9	           0xfb610	                   movzx edx, byte [rax]	       374	ldlang.c	FUNCTION_12	IF_1
0x40039bc	            0x3811	                      cmp byte [rcx], dl	       374	ldlang.c	FUNCTION_12	IF_1
0x40039be	            0x75d0	                           jne 0x4003990	       374	ldlang.c	FUNCTION_12	IF_1
0x40039c0	         0xfb67001	               movzx esi, byte [rax + 1]	       374	ldlang.c	FUNCTION_12	IF_1
0x40039c4	        0x40387101	                 cmp byte [rcx + 1], sil	       374	ldlang.c	FUNCTION_12	IF_1
0x40039c8	            0x75c6	                           jne 0x4003990	       374	ldlang.c	FUNCTION_12	IF_1
0x40039ca	         0xfb67002	               movzx esi, byte [rax + 2]	       375	ldlang.c	FUNCTION_12	IF_1
0x40039ce	        0x40387102	                 cmp byte [rcx + 2], sil	       375	ldlang.c	FUNCTION_12	IF_1
0x40039d2	            0x75bc	                           jne 0x4003990	       375	ldlang.c	FUNCTION_12	IF_1
0x40039d4	         0xfb67003	               movzx esi, byte [rax + 3]	       375	ldlang.c	FUNCTION_12	IF_1
0x40039d8	        0x40387103	                 cmp byte [rcx + 3], sil	       375	ldlang.c	FUNCTION_12	IF_1
0x40039dc	            0x75b2	                           jne 0x4003990	       375	ldlang.c	FUNCTION_12	IF_1
0x40039de	            0x31f6	                            xor esi, esi	       375	ldlang.c	FUNCTION_12	IF_1
0x40039e0	            0xeb15	                           jmp 0x40039f7	       375	ldlang.c	FUNCTION_12	IF_1
0x40039e2	    0x660f1f440000	                    nop word [rax + rax]	       375	ldlang.c	FUNCTION_12	IF_1
0x40039e8	    0x440fb6443004	        movzx r8d, byte [rax + rsi + 4] 	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40039ee	        0x4883c601	                              add rsi, 1	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40039f2	          0x4138f8	                            cmp r8b, dil	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40039f5	            0x7599	                           jne 0x4003990	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40039f7	       0xfb67c3104	        movzx edi, byte [rcx + rsi + 4] 	       380	ldlang.c	FUNCTION_12	WHILE_1
0x40039fc	        0x4080ff2a	                           cmp dil, 0x2a	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003a00	            0x75e6	                           jne 0x40039e8	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003a02	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003a06	          0x4889ee	                            mov rsi, rbp	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003a09	      0xe862f7ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003a0e	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003a10	            0x758a	                           jne 0x400399c	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003a12	          0x4c89fa	                            mov rdx, r15	       279	ldlang.c	FUNCTION_7
0x4003a15	        0x498b4e78	            mov rcx, qword [r14 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4003a19	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       279	ldlang.c	FUNCTION_7
0x4003a1e	          0x4989e8	                             mov r8, rbp	       279	ldlang.c	FUNCTION_7
0x4003a21	          0x4889de	                            mov rsi, rbx	       279	ldlang.c	FUNCTION_7
0x4003a24	          0x4c89f7	                            mov rdi, r14	       279	ldlang.c	FUNCTION_7
0x4003a27	      0x488b442408	                mov rax, qword [rsp + 8]	       279	ldlang.c	FUNCTION_7
0x4003a2c	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x4003a2e	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x4003a32	          0x4d85ff	                           test r15, r15	       663	ldlang.c	FUNCTION_21	FOR_1
0x4003a35	     0xf856effffff	                           jne 0x40039a9	       663	ldlang.c	FUNCTION_21	FOR_1
0x4003a3b	       0xf1f440000	                   nop dword [rax + rax]	       663	ldlang.c	FUNCTION_21	FOR_1
0x4003a40	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       683	ldlang.c	FUNCTION_21
0x4003a45	    0x644833042528	                xor rax, qword fs:[0x28]	       683	ldlang.c	FUNCTION_21
0x4003a4e	     0xf85f6000000	                           jne 0x4003b4a	       683	ldlang.c	FUNCTION_21
0x4003a54	        0x4883c448	                           add rsp, 0x48	       683	ldlang.c	FUNCTION_21
0x4003a58	              0x5b	                                 pop rbx	       683	ldlang.c	FUNCTION_21
0x4003a59	              0x5d	                                 pop rbp	       683	ldlang.c	FUNCTION_21
0x4003a5a	            0x415c	                                 pop r12	       683	ldlang.c	FUNCTION_21
0x4003a5c	            0x415d	                                 pop r13	       683	ldlang.c	FUNCTION_21
0x4003a5e	            0x415e	                                 pop r14	       683	ldlang.c	FUNCTION_21
0x4003a60	            0x415f	                                 pop r15	       683	ldlang.c	FUNCTION_21
0x4003a62	              0xc3	                                     ret	       683	ldlang.c	FUNCTION_21
0x4003a63	       0xf1f440000	                   nop dword [rax + rax]	       683	ldlang.c	FUNCTION_21
0x4003a68	         0xfb67001	               movzx esi, byte [rax + 1]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003a6c	        0x40387101	                 cmp byte [rcx + 1], sil	       374	ldlang.c	FUNCTION_12	IF_1
0x4003a70	     0xf8526ffffff	                           jne 0x400399c	       374	ldlang.c	FUNCTION_12	IF_1
0x4003a76	         0xfb65002	               movzx edx, byte [rax + 2]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a7a	          0x385102	                  cmp byte [rcx + 2], dl	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a7d	     0xf8519ffffff	                           jne 0x400399c	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a83	         0xfb65003	               movzx edx, byte [rax + 3]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a87	          0x385103	                  cmp byte [rcx + 3], dl	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a8a	     0xf850cffffff	                           jne 0x400399c	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a90	            0x31d2	                            xor edx, edx	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a92	            0xeb16	                           jmp 0x4003aaa	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a94	         0xf1f4000	                         nop dword [rax]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003a98	       0xfb67c1004	        movzx edi, byte [rax + rdx + 4] 	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003a9d	        0x4883c201	                              add rdx, 1	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003aa1	          0x4038f7	                            cmp dil, sil	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003aa4	     0xf85f2feffff	                           jne 0x400399c	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4003aaa	       0xfb6741104	        movzx esi, byte [rcx + rdx + 4] 	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003aaf	        0x4080fe2a	                           cmp sil, 0x2a	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003ab3	            0x75e3	                           jne 0x4003a98	       380	ldlang.c	FUNCTION_12	WHILE_1
0x4003ab5	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003ab9	          0x4889ee	                            mov rsi, rbp	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003abc	      0xe8aff6ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003ac1	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003ac3	     0xf85d3feffff	                           jne 0x400399c	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003ac9	        0x498b4e78	            mov rcx, qword [r14 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4003acd	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       279	ldlang.c	FUNCTION_7
0x4003ad2	          0x4989e8	                             mov r8, rbp	       279	ldlang.c	FUNCTION_7
0x4003ad5	          0x4c89fa	                            mov rdx, r15	       279	ldlang.c	FUNCTION_7
0x4003ad8	          0x4c89ee	                            mov rsi, r13	       279	ldlang.c	FUNCTION_7
0x4003adb	          0x4c89f7	                            mov rdi, r14	       279	ldlang.c	FUNCTION_7
0x4003ade	      0x488b442408	                mov rax, qword [rsp + 8]	       279	ldlang.c	FUNCTION_7
0x4003ae3	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x4003ae5	      0xe9b2feffff	                           jmp 0x400399c	       279	ldlang.c	FUNCTION_7
0x4003aea	    0x660f1f440000	                    nop word [rax + rax]	       279	ldlang.c	FUNCTION_7
0x4003af0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003af5	          0x4889ee	                            mov rsi, rbp	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003af8	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003afc	      0xe86ff6ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003b01	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003b03	     0xf8593feffff	                           jne 0x400399c	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003b09	        0x498b4e78	            mov rcx, qword [r14 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4003b0d	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       279	ldlang.c	FUNCTION_7
0x4003b12	          0x4989e8	                             mov r8, rbp	       279	ldlang.c	FUNCTION_7
0x4003b15	          0x4c89e2	                            mov rdx, r12	       279	ldlang.c	FUNCTION_7
0x4003b18	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       279	ldlang.c	FUNCTION_7
0x4003b1d	          0x4c89f7	                            mov rdi, r14	       279	ldlang.c	FUNCTION_7
0x4003b20	      0x488b442408	                mov rax, qword [rsp + 8]	       279	ldlang.c	FUNCTION_7
0x4003b25	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x4003b27	      0xe970feffff	                           jmp 0x400399c	       279	ldlang.c	FUNCTION_7
0x4003b2c	         0xf1f4000	                         nop dword [rax]	       279	ldlang.c	FUNCTION_7
0x4003b30	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4003b35	      0x488b542408	                mov rdx, qword [rsp + 8]	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4003b3a	          0x4889ee	                            mov rsi, rbp	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4003b3d	          0x4c89f7	                            mov rdi, r14	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4003b40	      0xe84bf9ffff	      call sym.walk_wild_section_general	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4003b45	      0xe9f6feffff	                           jmp 0x4003a40	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4003b4a	      0xe800000000	                          call 0x4003b4f	       683	ldlang.c	FUNCTION_21
dprint_statement	IF,1:ELSE,1:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,1	46
0x4007820	    0x488b05000000	            mov rax, qword [0x04007827] 	      4620	ldlang.c	FUNCTION_107
0x4007827	            0x85f6	                           test esi, esi	      4622	ldlang.c	FUNCTION_107	IF_1
0x4007829	            0x4154	                                push r12	      4617	ldlang.c	FUNCTION_107
0x400782b	    0x4c8b25000000	            mov r12, qword [0x04007832] 	      4618	ldlang.c	FUNCTION_107
0x4007832	              0x55	                                push rbp	      4617	ldlang.c	FUNCTION_107
0x4007833	              0x53	                                push rbx	      4617	ldlang.c	FUNCTION_107
0x4007834	          0x4889fb	                            mov rbx, rdi	      4617	ldlang.c	FUNCTION_107
0x4007837	    0x488905000000	            mov qword [0x0400783e], rax 	      4620	ldlang.c	FUNCTION_107
0x400783e	            0x7840	                            js 0x4007880	      4622	ldlang.c	FUNCTION_107	IF_1
0x4007840	          0x4885ff	                           test rdi, rdi	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4007843	            0x742a	                            je 0x400786f	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4007845	          0x8d6eff	                      lea ebp, [rsi - 1]	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4007848	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400784b	            0x750b	                           jne 0x4007858	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400784d	            0xeb20	                           jmp 0x400786f	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400784f	              0x90	                                     nop	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4007850	          0x83ed01	                              sub ebp, 1	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4007853	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4007856	            0x7417	                            je 0x400786f	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4007858	    0x488b35000000	            mov rsi, qword [0x0400785f] 	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x400785f	          0x4889df	                            mov rdi, rbx	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x4007862	      0xe8299affff	                call sym.print_statement	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x4007867	          0x488b1b	                    mov rbx, qword [rbx]	      4629	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400786a	          0x4885db	                           test rbx, rbx	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400786d	            0x75e1	                           jne 0x4007850	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400786f	              0x5b	                                 pop rbx	      4634	ldlang.c	FUNCTION_107
0x4007870	    0x4c8925000000	            mov qword [0x04007877], r12 	      4633	ldlang.c	FUNCTION_107
0x4007877	              0x5d	                                 pop rbp	      4634	ldlang.c	FUNCTION_107
0x4007878	            0x415c	                                 pop r12	      4634	ldlang.c	FUNCTION_107
0x400787a	              0xc3	                                     ret	      4634	ldlang.c	FUNCTION_107
0x400787b	       0xf1f440000	                   nop dword [rax + rax]	      4634	ldlang.c	FUNCTION_107
0x4007880	          0x4885ff	                           test rdi, rdi	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4007883	    0x488b2d000000	            mov rbp, qword [0x0400788a] 	      4623	ldlang.c	FUNCTION_107	CALL_1
0x400788a	            0x74e3	                            je 0x400786f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x400788c	         0xf1f4000	                         nop dword [rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4007890	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4007893	          0x4889ee	                            mov rsi, rbp	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4007896	      0xe8f599ffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400789b	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x400789e	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40078a1	            0x75ed	                           jne 0x4007890	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40078a3	              0x5b	                                 pop rbx	      4634	ldlang.c	FUNCTION_107
0x40078a4	    0x4c8925000000	            mov qword [0x040078ab], r12 	      4633	ldlang.c	FUNCTION_107
0x40078ab	              0x5d	                                 pop rbp	      4634	ldlang.c	FUNCTION_107
0x40078ac	            0x415c	                                 pop r12	      4634	ldlang.c	FUNCTION_107
0x40078ae	              0xc3	                                     ret	      4634	ldlang.c	FUNCTION_107
lang_init	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,8:DO,0:FOR,0:WHILE,0	91
0x4005560	              0x53	                                push rbx	      1247	ldlang.c	FUNCTION_39
0x4005561	            0x31d2	                            xor edx, edx	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4005563	    0x41b800000000	                              mov r8d, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4005569	      0xb900000000	                              mov ecx, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x400556e	      0xbee8030000	                          mov esi, 0x3e8	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4005573	      0xbf00000000	                              mov edi, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4005578	      0xe800000000	                          call 0x400557d	      1248	ldlang.c	FUNCTION_39	CALL_1
0x400557d	      0xb93d000000	                           mov ecx, 0x3d	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4005582	      0xbab0000000	                           mov edx, 0xb0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4005587	      0xbe00000000	                              mov esi, 0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x400558c	      0xbf00000000	                              mov edi, 0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4005591	    0x48c705000000	               mov qword [0x0400559c], 0	      1250	ldlang.c	FUNCTION_39
0x400559c	      0xe800000000	                          call 0x40055a1	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x40055a1	            0x85c0	                           test eax, eax	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x40055a3	            0x751b	                           jne 0x40055c0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x40055a5	            0x31ff	                            xor edi, edi	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40055a7	      0xba05000000	                              mov edx, 5	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40055ac	      0xbe00000000	                              mov esi, 0	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40055b1	      0xe800000000	                          call 0x40055b6	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40055b6	          0x4889c7	                            mov rdi, rax	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40055b9	            0x31c0	                            xor eax, eax	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40055bb	      0xe800000000	                          call 0x40055c0	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40055c0	    0x488b1d000000	            mov rbx, qword [0x040055c7] 	      1254	ldlang.c	FUNCTION_39	CALL_3
0x40055c7	      0xbf58000000	                           mov edi, 0x58	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40055cc	    0x48c703000000	                      mov qword [rbx], 0	      1009	ldlang.c	FUNCTION_30
0x40055d3	        0x48895b08	                mov qword [rbx + 8], rbx	      1010	ldlang.c	FUNCTION_30
0x40055d7	    0x48c705000000	               mov qword [0x040055e2], 0	      1009	ldlang.c	FUNCTION_30
0x40055e2	    0x48c705000000	               mov qword [0x040055ed], 0	      1010	ldlang.c	FUNCTION_30
0x40055ed	    0x48c705000000	               mov qword [0x040055f8], 0	      1009	ldlang.c	FUNCTION_30
0x40055f8	    0x48c705000000	               mov qword [0x04005603], 0	      1010	ldlang.c	FUNCTION_30
0x4005603	    0x48c705000000	               mov qword [0x0400560e], 0	      1009	ldlang.c	FUNCTION_30
0x400560e	    0x48c705000000	               mov qword [0x04005619], 0	      1010	ldlang.c	FUNCTION_30
0x4005619	    0xc70500000000	               mov dword [0x04005623], 1	      1063	ldlang.c	FUNCTION_34
0x4005623	      0xe800000000	                          call 0x4005628	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4005628	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400562f	          0x4889c2	                            mov rdx, rax	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4005632	    0xc74008020000	                  mov dword [rax + 8], 2	      1040	ldlang.c	FUNCTION_33
0x4005639	        0x488b4308	                mov rax, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400563d	        0x488d7a28	                   lea rdi, [rdx + 0x28]	        90	string3.h	FUNCTION_248	CALL_5
0x4005641	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_248	CALL_5
0x4005645	          0x488910	                    mov qword [rax], rdx	      7673	ldlang.c	FUNCTION_179
0x4005648	            0x89d0	                            mov eax, edx	        90	string3.h	FUNCTION_248	CALL_5
0x400564a	        0x48895308	                mov qword [rbx + 8], rdx	      7674	ldlang.c	FUNCTION_179
0x400564e	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_248	CALL_5
0x4005650	    0x48c742200000	               mov qword [rdx + 0x20], 0	        90	string3.h	FUNCTION_248	CALL_5
0x4005658	    0x48c742500000	               mov qword [rdx + 0x50], 0	        90	string3.h	FUNCTION_248	CALL_5
0x4005660	          0x8d4858	                   lea ecx, [rax + 0x58]	        90	string3.h	FUNCTION_248	CALL_5
0x4005663	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_248	CALL_5
0x4005665	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_248	CALL_5
0x4005668	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_248	CALL_5
0x400566b	    0x48c742400000	               mov qword [rdx + 0x40], 0	      1077	ldlang.c	FUNCTION_34
0x4005673	    0x48c742180000	               mov qword [rdx + 0x18], 0	      1111	ldlang.c	FUNCTION_34	SWITCH_1
0x400567b	     0xfb60d000000	           movzx ecx, byte [0x04005682] 	      1078	ldlang.c	FUNCTION_34
0x4005682	         0xfb67a48	           movzx edi, byte [rdx + 0x48] 	      1078	ldlang.c	FUNCTION_34
0x4005686	            0x89c8	                            mov eax, ecx	      1078	ldlang.c	FUNCTION_34
0x4005688	          0x83e79f	                     and edi, 0xffffff9f	      1078	ldlang.c	FUNCTION_34
0x400568b	            0x89ce	                            mov esi, ecx	      1079	ldlang.c	FUNCTION_34
0x400568d	          0x83e020	                           and eax, 0x20	      1078	ldlang.c	FUNCTION_34
0x4005690	          0x83e640	                           and esi, 0x40	      1079	ldlang.c	FUNCTION_34
0x4005693	             0x9f8	                             or eax, edi	      1079	ldlang.c	FUNCTION_34
0x4005695	         0xfb67a49	           movzx edi, byte [rdx + 0x49] 	      1081	ldlang.c	FUNCTION_34
0x4005699	             0x9f0	                             or eax, esi	      1079	ldlang.c	FUNCTION_34
0x400569b	            0x89ce	                            mov esi, ecx	      1080	ldlang.c	FUNCTION_34
0x400569d	     0xfb60d000000	           movzx ecx, byte [0x040056a4] 	      1081	ldlang.c	FUNCTION_34
0x40056a4	          0x83e680	                     and esi, 0xffffff80	      1080	ldlang.c	FUNCTION_34
0x40056a7	          0x83e077	                           and eax, 0x77	      1080	ldlang.c	FUNCTION_34
0x40056aa	    0x48c742100000	               mov qword [rdx + 0x10], 0	      1110	ldlang.c	FUNCTION_34	SWITCH_1
0x40056b2	             0x9f0	                             or eax, esi	      1082	ldlang.c	FUNCTION_34
0x40056b4	      0xbe01000000	                              mov esi, 1	      1262	ldlang.c	FUNCTION_39	CALL_8
0x40056b9	          0x83e7fe	                     and edi, 0xfffffffe	      1081	ldlang.c	FUNCTION_34
0x40056bc	          0x83e101	                              and ecx, 1	      1081	ldlang.c	FUNCTION_34
0x40056bf	             0x9f9	                             or ecx, edi	      1081	ldlang.c	FUNCTION_34
0x40056c1	      0xbf00000000	                              mov edi, 0	      1262	ldlang.c	FUNCTION_39	CALL_8
0x40056c6	          0x884a49	               mov byte [rdx + 0x49], cl	      1081	ldlang.c	FUNCTION_34
0x40056c9	     0xfb60d000000	           movzx ecx, byte [0x040056d0] 	      1082	ldlang.c	FUNCTION_34
0x40056d0	    0x488915000000	            mov qword [0x040056d7], rdx 	      1259	ldlang.c	FUNCTION_39	CALL_7
0x40056d7	          0x83e108	                              and ecx, 8	      1082	ldlang.c	FUNCTION_34
0x40056da	             0x9c8	                             or eax, ecx	      1082	ldlang.c	FUNCTION_34
0x40056dc	          0x83c804	                               or eax, 4	      1112	ldlang.c	FUNCTION_34	SWITCH_1
0x40056df	          0x884248	               mov byte [rdx + 0x48], al	      1112	ldlang.c	FUNCTION_34	SWITCH_1
0x40056e2	    0x488b05000000	            mov rax, qword [0x040056e9] 	      7673	ldlang.c	FUNCTION_179
0x40056e9	          0x488910	                    mov qword [rax], rdx	      7673	ldlang.c	FUNCTION_179
0x40056ec	        0x488d4238	                   lea rax, [rdx + 0x38]	      1131	ldlang.c	FUNCTION_34
0x40056f0	    0x488905000000	            mov qword [0x040056f7], rax 	      1131	ldlang.c	FUNCTION_34
0x40056f7	      0xe844c9ffff	call sym.lang_output_section_statement_lookup.constprop.62	      1262	ldlang.c	FUNCTION_39	CALL_8
0x40056fc	    0x48c705000000	               mov qword [0x04005707], 0	      1266	ldlang.c	FUNCTION_39
0x4005707	    0x48c740380000	               mov qword [rax + 0x38], 0	      1264	ldlang.c	FUNCTION_39
0x400570f	    0x488905000000	            mov qword [0x04005716], rax 	      1261	ldlang.c	FUNCTION_39
0x4005716	    0x48c705000000	               mov qword [0x04005721], 0	      1267	ldlang.c	FUNCTION_39
0x4005721	              0x5b	                                 pop rbx	      1268	ldlang.c	FUNCTION_39
0x4005722	              0xc3	                                     ret	      1268	ldlang.c	FUNCTION_39
lang_section_start	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	25
0x400ad10	            0x4155	                                push r13	      7475	ldlang.c	FUNCTION_165
0x400ad12	            0x4154	                                push r12	      7475	ldlang.c	FUNCTION_165
0x400ad14	          0x4989fd	                            mov r13, rdi	      7475	ldlang.c	FUNCTION_165
0x400ad17	              0x55	                                push rbp	      7475	ldlang.c	FUNCTION_165
0x400ad18	              0x53	                                push rbx	      7475	ldlang.c	FUNCTION_165
0x400ad19	      0xbf28000000	                           mov edi, 0x28	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ad1e	          0x4889d5	                            mov rbp, rdx	      7475	ldlang.c	FUNCTION_165
0x400ad21	          0x4989f4	                            mov r12, rsi	      7475	ldlang.c	FUNCTION_165
0x400ad24	        0x4883ec08	                              sub rsp, 8	      7475	ldlang.c	FUNCTION_165
0x400ad28	    0x488b1d000000	            mov rbx, qword [0x0400ad2f] 	      7478	ldlang.c	FUNCTION_165
0x400ad2f	      0xe800000000	                          call 0x400ad34	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ad34	    0xc74008030000	                  mov dword [rax + 8], 3	      1040	ldlang.c	FUNCTION_33
0x400ad3b	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400ad42	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400ad46	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400ad49	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400ad4d	        0x4c896810	             mov qword [rax + 0x10], r13	      7479	ldlang.c	FUNCTION_165
0x400ad51	        0x4c896018	             mov qword [rax + 0x18], r12	      7480	ldlang.c	FUNCTION_165
0x400ad55	        0x48896820	             mov qword [rax + 0x20], rbp	      7481	ldlang.c	FUNCTION_165
0x400ad59	        0x4883c408	                              add rsp, 8	      7482	ldlang.c	FUNCTION_165
0x400ad5d	              0x5b	                                 pop rbx	      7482	ldlang.c	FUNCTION_165
0x400ad5e	              0x5d	                                 pop rbp	      7482	ldlang.c	FUNCTION_165
0x400ad5f	            0x415c	                                 pop r12	      7482	ldlang.c	FUNCTION_165
0x400ad61	            0x415d	                                 pop r13	      7482	ldlang.c	FUNCTION_165
0x400ad63	              0xc3	                                     ret	      7482	ldlang.c	FUNCTION_165
lang_add_wild	IF,4:ELSE,1:SWITCH,0:functions,0:CALL,2:DO,0:FOR,1:WHILE,0	351
0x400a7b0	            0x4157	                                push r15	      7433	ldlang.c	FUNCTION_164
0x400a7b2	            0x4156	                                push r14	      7433	ldlang.c	FUNCTION_164
0x400a7b4	          0x4989f7	                            mov r15, rsi	      7433	ldlang.c	FUNCTION_164
0x400a7b7	            0x4155	                                push r13	      7433	ldlang.c	FUNCTION_164
0x400a7b9	            0x4154	                                push r12	      7433	ldlang.c	FUNCTION_164
0x400a7bb	          0x4189d4	                           mov r12d, edx	      7433	ldlang.c	FUNCTION_164
0x400a7be	              0x55	                                push rbp	      7433	ldlang.c	FUNCTION_164
0x400a7bf	              0x53	                                push rbx	      7433	ldlang.c	FUNCTION_164
0x400a7c0	          0x4889fb	                            mov rbx, rdi	      7433	ldlang.c	FUNCTION_164
0x400a7c3	        0x4883ec28	                           sub rsp, 0x28	      7433	ldlang.c	FUNCTION_164
0x400a7c7	          0x4885f6	                           test rsi, rsi	      7438	ldlang.c	FUNCTION_164	FOR_1
0x400a7ca	            0x7415	                            je 0x400a7e1	      7438	ldlang.c	FUNCTION_164	FOR_1
0x400a7cc	            0x31c9	                            xor ecx, ecx	      7438	ldlang.c	FUNCTION_164	FOR_1
0x400a7ce	            0xeb03	                           jmp 0x400a7d3	      7438	ldlang.c	FUNCTION_164	FOR_1
0x400a7d0	          0x4989c7	                            mov r15, rax	      7438	ldlang.c	FUNCTION_164	FOR_1
0x400a7d3	          0x498b07	                    mov rax, qword [r15]	      7442	ldlang.c	FUNCTION_164	FOR_1
0x400a7d6	          0x49890f	                    mov qword [r15], rcx	      7443	ldlang.c	FUNCTION_164	FOR_1
0x400a7d9	          0x4c89f9	                            mov rcx, r15	      7443	ldlang.c	FUNCTION_164	FOR_1
0x400a7dc	          0x4885c0	                           test rax, rax	      7438	ldlang.c	FUNCTION_164	FOR_1
0x400a7df	            0x75ef	                           jne 0x400a7d0	      7438	ldlang.c	FUNCTION_164	FOR_1
0x400a7e1	          0x4885db	                           test rbx, rbx	      7446	ldlang.c	FUNCTION_164	IF_1
0x400a7e4	     0xf8468030000	                            je 0x400ab52	      7446	ldlang.c	FUNCTION_164	IF_1
0x400a7ea	          0x488b0b	                    mov rcx, qword [rbx]	      7446	ldlang.c	FUNCTION_164	IF_1
0x400a7ed	          0x4885c9	                           test rcx, rcx	      7446	ldlang.c	FUNCTION_164	IF_1
0x400a7f0	            0x741c	                            je 0x400a80e	      7446	ldlang.c	FUNCTION_164	IF_1
0x400a7f2	           0xfb601	                   movzx eax, byte [rcx]	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400a7f5	            0x3c2a	                            cmp al, 0x2a	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400a7f7	     0xf85af010000	                           jne 0x400a9ac	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400a7fd	        0x80790100	                   cmp byte [rcx + 1], 0	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400a801	     0xf85a9010000	                           jne 0x400a9b0	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400a807	    0x48c703000000	                      mov qword [rbx], 0	      7449	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400a80e	    0x488b2d000000	            mov rbp, qword [0x0400a815] 	      7454	ldlang.c	FUNCTION_164
0x400a815	      0xbf80000000	                           mov edi, 0x80	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400a81a	      0xe800000000	                          call 0x400a81f	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400a81f	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400a826	    0xc74008040000	                  mov dword [rax + 8], 4	      1040	ldlang.c	FUNCTION_33
0x400a82d	          0x4989c5	                            mov r13, rax	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400a830	        0x488b4508	                mov rax, qword [rbp + 8]	      7673	ldlang.c	FUNCTION_179
0x400a834	          0x4c8928	                    mov qword [rax], r13	      7673	ldlang.c	FUNCTION_179
0x400a837	        0x4c896d08	                mov qword [rbp + 8], r13	      7674	ldlang.c	FUNCTION_179
0x400a83b	          0x488b03	                    mov rax, qword [rbx]	      7461	ldlang.c	FUNCTION_164	IF_4
0x400a83e	        0x49894510	             mov qword [r13 + 0x10], rax	      7461	ldlang.c	FUNCTION_164	IF_4
0x400a842	            0x31c0	                            xor eax, eax	      7462	ldlang.c	FUNCTION_164	IF_4
0x400a844	        0x837b1001	               cmp dword [rbx + 0x10], 1	      7462	ldlang.c	FUNCTION_164	IF_4
0x400a848	           0xf94c0	                                 sete al	      7462	ldlang.c	FUNCTION_164	IF_4
0x400a84b	        0x41894518	             mov dword [r13 + 0x18], eax	      7462	ldlang.c	FUNCTION_164	IF_4
0x400a84f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      7463	ldlang.c	FUNCTION_164	IF_4
0x400a853	        0x49894578	             mov qword [r13 + 0x78], rax	      7463	ldlang.c	FUNCTION_164	IF_4
0x400a857	        0x488b4308	                mov rax, qword [rbx + 8]	      7464	ldlang.c	FUNCTION_164	IF_4
0x400a85b	        0x49894540	             mov qword [r13 + 0x40], rax	      7464	ldlang.c	FUNCTION_164	IF_4
0x400a85f	        0x498d4530	                   lea rax, [r13 + 0x30]	      1010	ldlang.c	FUNCTION_30
0x400a863	          0x4d85ff	                           test r15, r15	       801	ldlang.c	FUNCTION_25	FOR_1
0x400a866	        0x4d897d20	             mov qword [r13 + 0x20], r15	      7466	ldlang.c	FUNCTION_164
0x400a86a	        0x45896528	            mov dword [r13 + 0x28], r12d	      7467	ldlang.c	FUNCTION_164
0x400a86e	    0x49c745300000	               mov qword [r13 + 0x30], 0	      1009	ldlang.c	FUNCTION_30
0x400a876	        0x49894538	             mov qword [r13 + 0x38], rax	      1010	ldlang.c	FUNCTION_30
0x400a87a	    0x49c745480000	               mov qword [r13 + 0x48], 0	       788	ldlang.c	FUNCTION_25
0x400a882	    0x49c745500000	               mov qword [r13 + 0x50], 0	       789	ldlang.c	FUNCTION_25
0x400a88a	    0x49c745580000	               mov qword [r13 + 0x58], 0	       790	ldlang.c	FUNCTION_25
0x400a892	    0x49c745600000	               mov qword [r13 + 0x60], 0	       791	ldlang.c	FUNCTION_25
0x400a89a	    0x49c745680000	               mov qword [r13 + 0x68], 0	       792	ldlang.c	FUNCTION_25
0x400a8a2	    0x49c745700000	               mov qword [r13 + 0x70], 0	       793	ldlang.c	FUNCTION_25
0x400a8aa	     0xf84b2000000	                            je 0x400a962	       801	ldlang.c	FUNCTION_25	FOR_1
0x400a8b0	        0x498b4708	                mov rax, qword [r15 + 8]	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a8b4	          0x4885c0	                           test rax, rax	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a8b7	        0x48890424	                    mov qword [rsp], rax	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a8bb	     0xf84a1000000	                            je 0x400a962	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a8c1	          0x4d89fb	                            mov r11, r15	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a8c4	          0x4989c2	                            mov r10, rax	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a8c7	    0xc74424080000	                  mov dword [rsp + 8], 0	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a8cf	    0x41bc01000000	                             mov r12d, 1	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a8d5	    0x48be01002000	             movabs rsi, 0x2000000200001	       975	string2.h	FUNCTION_218	WHILE_1
0x400a8df	              0x90	                                     nop	       975	string2.h	FUNCTION_218	WHILE_1
0x400a8e0	        0x410fb60a	                   movzx ecx, byte [r10]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a8e4	            0x84c9	                             test cl, cl	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a8e6	     0xf8494000000	                            je 0x400a980	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a8ec	          0x83e92a	                           sub ecx, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a8ef	          0x80f931	                            cmp cl, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a8f2	            0x7706	                            ja 0x400a8fa	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a8f4	        0x480fa3ce	                             bt rsi, rcx	      1115	string2.h	FUNCTION_223	WHILE_1
0x400a8f8	            0x721e	                            jb 0x400a918	      1115	string2.h	FUNCTION_223	WHILE_1
0x400a8fa	          0x4c89d2	                            mov rdx, r10	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a8fd	           0xf1f00	                         nop dword [rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a900	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x400a904	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a907	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a909	            0x7475	                            je 0x400a980	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a90b	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a90e	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a910	            0x77ee	                            ja 0x400a900	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a912	        0x480fa3c6	                             bt rsi, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400a916	            0x73e8	                           jae 0x400a900	      1115	string2.h	FUNCTION_223	WHILE_1
0x400a918	          0x80f931	                            cmp cl, 0x31	       974	string2.h	FUNCTION_218	WHILE_1
0x400a91b	            0x7706	                            ja 0x400a923	       974	string2.h	FUNCTION_218	WHILE_1
0x400a91d	        0x480fa3ce	                             bt rsi, rcx	       975	string2.h	FUNCTION_218	WHILE_1
0x400a921	            0x723f	                            jb 0x400a962	       975	string2.h	FUNCTION_218	WHILE_1
0x400a923	            0x31c0	                            xor eax, eax	       974	string2.h	FUNCTION_218	WHILE_1
0x400a925	            0xeb0c	                           jmp 0x400a933	       974	string2.h	FUNCTION_218	WHILE_1
0x400a927	    0x660f1f840000	                    nop word [rax + rax]	       974	string2.h	FUNCTION_218	WHILE_1
0x400a930	          0x4889f8	                            mov rax, rdi	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a933	    0x410fb6540201	        movzx edx, byte [r10 + rax + 1] 	       974	string2.h	FUNCTION_218	WHILE_1
0x400a939	        0x488d7801	                      lea rdi, [rax + 1]	       976	string2.h	FUNCTION_218	WHILE_1
0x400a93d	            0x84d2	                             test dl, dl	       974	string2.h	FUNCTION_218	WHILE_1
0x400a93f	            0x7421	                            je 0x400a962	       974	string2.h	FUNCTION_218	WHILE_1
0x400a941	          0x8d4ad6	                   lea ecx, [rdx - 0x2a]	       974	string2.h	FUNCTION_218	WHILE_1
0x400a944	          0x80f931	                            cmp cl, 0x31	       974	string2.h	FUNCTION_218	WHILE_1
0x400a947	            0x77e7	                            ja 0x400a930	       974	string2.h	FUNCTION_218	WHILE_1
0x400a949	        0x480fa3ce	                             bt rsi, rcx	       975	string2.h	FUNCTION_218	WHILE_1
0x400a94d	            0x73e1	                           jae 0x400a930	       975	string2.h	FUNCTION_218	WHILE_1
0x400a94f	          0x80fa2a	                            cmp dl, 0x2a	       366	ldlang.c	FUNCTION_11
0x400a952	            0x750e	                           jne 0x400a962	       366	ldlang.c	FUNCTION_11
0x400a954	        0x4883ff03	                              cmp rdi, 3	       366	ldlang.c	FUNCTION_11
0x400a958	            0x7608	                           jbe 0x400a962	       366	ldlang.c	FUNCTION_11
0x400a95a	    0x41807c020200	             cmp byte [r10 + rax + 2], 0	       366	ldlang.c	FUNCTION_11
0x400a960	            0x740f	                            je 0x400a971	       366	ldlang.c	FUNCTION_11
0x400a962	        0x4883c428	                           add rsp, 0x28	      7470	ldlang.c	FUNCTION_164
0x400a966	              0x5b	                                 pop rbx	      7470	ldlang.c	FUNCTION_164
0x400a967	              0x5d	                                 pop rbp	      7470	ldlang.c	FUNCTION_164
0x400a968	            0x415c	                                 pop r12	      7470	ldlang.c	FUNCTION_164
0x400a96a	            0x415d	                                 pop r13	      7470	ldlang.c	FUNCTION_164
0x400a96c	            0x415e	                                 pop r14	      7470	ldlang.c	FUNCTION_164
0x400a96e	            0x415f	                                 pop r15	      7470	ldlang.c	FUNCTION_164
0x400a970	              0xc3	                                     ret	      7470	ldlang.c	FUNCTION_164
0x400a971	      0x8344240801	                  add dword [rsp + 8], 1	       808	ldlang.c	FUNCTION_25	FOR_1	IF_2
0x400a976	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       808	ldlang.c	FUNCTION_25	FOR_1	IF_2
0x400a980	          0x4d8b1b	                    mov r11, qword [r11]	       801	ldlang.c	FUNCTION_25	FOR_1
0x400a983	          0x4d85db	                           test r11, r11	       801	ldlang.c	FUNCTION_25	FOR_1
0x400a986	     0xf8484000000	                            je 0x400aa10	       801	ldlang.c	FUNCTION_25	FOR_1
0x400a98c	        0x4d8b5308	                mov r10, qword [r11 + 8]	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a990	        0x4183c401	                             add r12d, 1	       803	ldlang.c	FUNCTION_25	FOR_1
0x400a994	          0x4d85d2	                           test r10, r10	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a997	     0xf8543ffffff	                           jne 0x400a8e0	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400a99d	        0x4883c428	                           add rsp, 0x28	      7470	ldlang.c	FUNCTION_164
0x400a9a1	              0x5b	                                 pop rbx	      7470	ldlang.c	FUNCTION_164
0x400a9a2	              0x5d	                                 pop rbp	      7470	ldlang.c	FUNCTION_164
0x400a9a3	            0x415c	                                 pop r12	      7470	ldlang.c	FUNCTION_164
0x400a9a5	            0x415d	                                 pop r13	      7470	ldlang.c	FUNCTION_164
0x400a9a7	            0x415e	                                 pop r14	      7470	ldlang.c	FUNCTION_164
0x400a9a9	            0x415f	                                 pop r15	      7470	ldlang.c	FUNCTION_164
0x400a9ab	              0xc3	                                     ret	      7470	ldlang.c	FUNCTION_164
0x400a9ac	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9ae	            0x743c	                            je 0x400a9ec	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9b0	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9b3	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9b5	            0x7644	                           jbe 0x400a9fb	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9b7	    0x48be01002000	             movabs rsi, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x400a9c1	        0x4883c101	                              add rcx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x400a9c5	           0xfb601	                   movzx eax, byte [rcx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9c8	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9ca	            0x7420	                            je 0x400a9ec	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9cc	         0xf1f4000	                         nop dword [rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9d0	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9d3	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9d5	            0x77ea	                            ja 0x400a9c1	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9d7	        0x480fa3c6	                             bt rsi, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400a9db	     0xf822dfeffff	                            jb 0x400a80e	      1115	string2.h	FUNCTION_223	WHILE_1
0x400a9e1	        0x4883c101	                              add rcx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x400a9e5	           0xfb601	                   movzx eax, byte [rcx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9e8	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9ea	            0x75e4	                           jne 0x400a9d0	      1114	string2.h	FUNCTION_223	WHILE_1
0x400a9ec	    0xc70500000000	               mov dword [0x0400a9f6], 1	      7451	ldlang.c	FUNCTION_164	IF_1	ELSE_1	IF_3
0x400a9f6	      0xe913feffff	                           jmp 0x400a80e	      7451	ldlang.c	FUNCTION_164	IF_1	ELSE_1	IF_3
0x400a9fb	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x400aa05	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400aa09	            0x73ac	                           jae 0x400a9b7	      1115	string2.h	FUNCTION_223	WHILE_1
0x400aa0b	      0xe9fefdffff	                           jmp 0x400a80e	      1115	string2.h	FUNCTION_223	WHILE_1
0x400aa10	        0x4183fc04	                             cmp r12d, 4	       817	ldlang.c	FUNCTION_25	IF_4
0x400aa14	     0xf8f48ffffff	                            jg 0x400a962	       817	ldlang.c	FUNCTION_25	IF_4
0x400aa1a	          0x4c89f8	                            mov rax, r15	       817	ldlang.c	FUNCTION_25	IF_4
0x400aa1d	    0x48bb01002000	             movabs rbx, 0x2000000200001	       817	ldlang.c	FUNCTION_25	IF_4
0x400aa27	      0x448964240c	             mov dword [rsp + 0xc], r12d	       817	ldlang.c	FUNCTION_25	IF_4
0x400aa2c	      0x4c896c2410	             mov qword [rsp + 0x10], r13	       817	ldlang.c	FUNCTION_25	IF_4
0x400aa31	      0x4c897c2418	             mov qword [rsp + 0x18], r15	       817	ldlang.c	FUNCTION_25	IF_4
0x400aa36	          0x4c8b30	                    mov r14, qword [rax]	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400aa39	          0x4d85f6	                           test r14, r14	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400aa3c	     0xf846c010000	                            je 0x400abae	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400aa42	        0x4c8b7808	                mov r15, qword [rax + 8]	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400aa46	          0x4889dd	                            mov rbp, rbx	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400aa49	      0xb801000000	                              mov eax, 1	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400aa4e	          0x4d89f5	                            mov r13, r14	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa51	        0x450fb627	                  movzx r12d, byte [r15]	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa55	      0x418d4c24d6	                   lea ecx, [r12 - 0x2a]	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa5a	          0x48d3ed	                             shr rbp, cl	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa5d	          0x83e501	                              and ebp, 1	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa60	        0x4883f501	                              xor rbp, 1	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa64	          0x80f931	                            cmp cl, 0x31	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa67	           0xf47e8	                          cmova ebp, eax	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa6a	    0x660f1f440000	                    nop word [rax + rax]	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa70	          0x4584e4	                         test r12b, r12b	       974	string2.h	FUNCTION_218	WHILE_1
0x400aa73	        0x498b7508	                mov rsi, qword [r13 + 8]	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x400aa77	     0xf84a9000000	                            je 0x400ab26	       974	string2.h	FUNCTION_218	WHILE_1
0x400aa7d	          0x4084ed	                           test bpl, bpl	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa80	     0xf841e010000	                            je 0x400aba4	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa86	            0x31ff	                            xor edi, edi	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa88	     0xf1f84000000	                   nop dword [rax + rax]	       975	string2.h	FUNCTION_218	WHILE_1
0x400aa90	        0x4883c701	                              add rdi, 1	       976	string2.h	FUNCTION_218	WHILE_1
0x400aa94	      0x450fb6043f	             movzx r8d, byte [r15 + rdi]	       974	string2.h	FUNCTION_218	WHILE_1
0x400aa99	          0x4584c0	                           test r8b, r8b	       974	string2.h	FUNCTION_218	WHILE_1
0x400aa9c	     0xf8486000000	                            je 0x400ab28	       974	string2.h	FUNCTION_218	WHILE_1
0x400aaa2	        0x418d40d6	                    lea eax, [r8 - 0x2a]	       975	string2.h	FUNCTION_218	WHILE_1
0x400aaa6	            0x3c31	                            cmp al, 0x31	       975	string2.h	FUNCTION_218	WHILE_1
0x400aaa8	            0x77e6	                            ja 0x400aa90	       975	string2.h	FUNCTION_218	WHILE_1
0x400aaaa	        0x480fa3c3	                             bt rbx, rax	       975	string2.h	FUNCTION_218	WHILE_1
0x400aaae	            0x73e0	                           jae 0x400aa90	       975	string2.h	FUNCTION_218	WHILE_1
0x400aab0	           0xfb606	                   movzx eax, byte [rsi]	       974	string2.h	FUNCTION_218	WHILE_1
0x400aab3	            0x84c0	                             test al, al	       974	string2.h	FUNCTION_218	WHILE_1
0x400aab5	     0xf841a020000	                            je 0x400acd5	       974	string2.h	FUNCTION_218	WHILE_1
0x400aabb	          0x83e82a	                           sub eax, 0x2a	       975	string2.h	FUNCTION_218	WHILE_1
0x400aabe	            0x3c31	                            cmp al, 0x31	       975	string2.h	FUNCTION_218	WHILE_1
0x400aac0	            0x7706	                            ja 0x400aac8	       975	string2.h	FUNCTION_218	WHILE_1
0x400aac2	        0x480fa3c3	                             bt rbx, rax	       975	string2.h	FUNCTION_218	WHILE_1
0x400aac6	            0x725a	                            jb 0x400ab22	       975	string2.h	FUNCTION_218	WHILE_1
0x400aac8	            0x31c0	                            xor eax, eax	       975	string2.h	FUNCTION_218	WHILE_1
0x400aaca	            0xeb07	                           jmp 0x400aad3	       975	string2.h	FUNCTION_218	WHILE_1
0x400aacc	         0xf1f4000	                         nop dword [rax]	       975	string2.h	FUNCTION_218	WHILE_1
0x400aad0	          0x4889d0	                            mov rax, rdx	       975	string2.h	FUNCTION_218	WHILE_1
0x400aad3	       0xfb64c0601	        movzx ecx, byte [rsi + rax + 1] 	       974	string2.h	FUNCTION_218	WHILE_1
0x400aad8	        0x488d5001	                      lea rdx, [rax + 1]	       976	string2.h	FUNCTION_218	WHILE_1
0x400aadc	            0x84c9	                             test cl, cl	       974	string2.h	FUNCTION_218	WHILE_1
0x400aade	            0x7460	                            je 0x400ab40	       974	string2.h	FUNCTION_218	WHILE_1
0x400aae0	          0x83e92a	                           sub ecx, 0x2a	       975	string2.h	FUNCTION_218	WHILE_1
0x400aae3	          0x80f931	                            cmp cl, 0x31	       975	string2.h	FUNCTION_218	WHILE_1
0x400aae6	            0x77e8	                            ja 0x400aad0	       975	string2.h	FUNCTION_218	WHILE_1
0x400aae8	        0x480fa3cb	                             bt rbx, rcx	       975	string2.h	FUNCTION_218	WHILE_1
0x400aaec	            0x73e2	                           jae 0x400aad0	       975	string2.h	FUNCTION_218	WHILE_1
0x400aaee	        0x4180f801	                              cmp r8b, 1	       767	ldlang.c	FUNCTION_24	IF_1
0x400aaf2	        0x4883d700	                              adc rdi, 0	       767	ldlang.c	FUNCTION_24	IF_1
0x400aaf6	          0x4839fa	                            cmp rdx, rdi	       773	ldlang.c	FUNCTION_24	CALL_1
0x400aaf9	        0x480f47d7	                          cmova rdx, rdi	       773	ldlang.c	FUNCTION_24	CALL_1
0x400aafd	          0x4c89ff	                            mov rdi, r15	       773	ldlang.c	FUNCTION_24	CALL_1
0x400ab00	      0xe800000000	                          call 0x400ab05	       773	ldlang.c	FUNCTION_24	CALL_1
0x400ab05	            0x85c0	                           test eax, eax	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x400ab07	     0xf8455feffff	                            je 0x400a962	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x400ab0d	        0x4d8b6d00	                    mov r13, qword [r13]	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400ab11	          0x4d85ed	                           test r13, r13	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400ab14	     0xf8556ffffff	                           jne 0x400aa70	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400ab1a	          0x4c89f0	                            mov rax, r14	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400ab1d	      0xe914ffffff	                           jmp 0x400aa36	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400ab22	            0x31d2	                            xor edx, edx	       975	string2.h	FUNCTION_218	WHILE_1
0x400ab24	            0xebc8	                           jmp 0x400aaee	       975	string2.h	FUNCTION_218	WHILE_1
0x400ab26	            0x31ff	                            xor edi, edi	       973	string2.h	FUNCTION_218
0x400ab28	           0xfb606	                   movzx eax, byte [rsi]	       974	string2.h	FUNCTION_218	WHILE_1
0x400ab2b	          0x4531c0	                            xor r8d, r8d	       974	string2.h	FUNCTION_218	WHILE_1
0x400ab2e	            0x84c0	                             test al, al	       974	string2.h	FUNCTION_218	WHILE_1
0x400ab30	            0x7589	                           jne 0x400aabb	       974	string2.h	FUNCTION_218	WHILE_1
0x400ab32	      0xb801000000	                              mov eax, 1	       974	string2.h	FUNCTION_218	WHILE_1
0x400ab37	            0xeb10	                           jmp 0x400ab49	       974	string2.h	FUNCTION_218	WHILE_1
0x400ab39	     0xf1f80000000	                         nop dword [rax]	       974	string2.h	FUNCTION_218	WHILE_1
0x400ab40	        0x4883c002	                              add rax, 2	       974	string2.h	FUNCTION_218	WHILE_1
0x400ab44	          0x4584c0	                           test r8b, r8b	       766	ldlang.c	FUNCTION_24	IF_1
0x400ab47	            0x7504	                           jne 0x400ab4d	       766	ldlang.c	FUNCTION_24	IF_1
0x400ab49	        0x4883c701	                              add rdi, 1	       767	ldlang.c	FUNCTION_24	IF_1
0x400ab4d	          0x4889c2	                            mov rdx, rax	       767	ldlang.c	FUNCTION_24	IF_1
0x400ab50	            0xeba4	                           jmp 0x400aaf6	       767	ldlang.c	FUNCTION_24	IF_1
0x400ab52	    0x488b1d000000	            mov rbx, qword [0x0400ab59] 	      7454	ldlang.c	FUNCTION_164
0x400ab59	      0xbf80000000	                           mov edi, 0x80	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ab5e	      0xe800000000	                          call 0x400ab63	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ab63	          0x4989c5	                            mov r13, rax	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ab66	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400ab6d	    0xc74008040000	                  mov dword [rax + 8], 4	      1040	ldlang.c	FUNCTION_33
0x400ab74	        0x488b4308	                mov rax, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400ab78	          0x4c8928	                    mov qword [rax], r13	      7673	ldlang.c	FUNCTION_179
0x400ab7b	        0x4c896b08	                mov qword [rbx + 8], r13	      7674	ldlang.c	FUNCTION_179
0x400ab7f	    0x49c745100000	               mov qword [r13 + 0x10], 0	      7455	ldlang.c	FUNCTION_164
0x400ab87	    0x41c745180000	               mov dword [r13 + 0x18], 0	      7456	ldlang.c	FUNCTION_164
0x400ab8f	    0x49c745780000	               mov qword [r13 + 0x78], 0	      7457	ldlang.c	FUNCTION_164
0x400ab97	    0x49c745400000	               mov qword [r13 + 0x40], 0	      7458	ldlang.c	FUNCTION_164
0x400ab9f	      0xe9bbfcffff	                           jmp 0x400a85f	      7458	ldlang.c	FUNCTION_164
0x400aba4	          0x4589e0	                           mov r8d, r12d	       975	string2.h	FUNCTION_218	WHILE_1
0x400aba7	            0x31ff	                            xor edi, edi	       973	string2.h	FUNCTION_218
0x400aba9	      0xe902ffffff	                           jmp 0x400aab0	       973	string2.h	FUNCTION_218
0x400abae	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	       973	string2.h	FUNCTION_218
0x400abb3	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       973	string2.h	FUNCTION_218
0x400abb8	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       973	string2.h	FUNCTION_218
0x400abbd	          0x4589e0	                           mov r8d, r12d	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abc0	        0x41c1e008	                              shl r8d, 8	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abc4	      0x4403442408	                add r8d, dword [rsp + 8]	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abc9	    0x4181f8010200	                          cmp r8d, 0x201	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abd0	     0xf8409010000	                            je 0x400acdf	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abd6	            0x7e7b	                           jle 0x400ac53	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abd8	    0x4181f8020300	                          cmp r8d, 0x302	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abdf	     0xf8407010000	                            je 0x400acec	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abe5	    0x4181f8020400	                          cmp r8d, 0x402	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abec	     0xf8570fdffff	                           jne 0x400a962	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400abf2	    0x49c745480000	               mov qword [r13 + 0x48], 0	       847	ldlang.c	FUNCTION_25	SWITCH_1
0x400abfa	        0x488b1424	                    mov rdx, qword [rsp]	       767	ldlang.c	FUNCTION_24	IF_1
0x400abfe	          0x4c89ff	                            mov rdi, r15	       767	ldlang.c	FUNCTION_24	IF_1
0x400ac01	            0x31f6	                            xor esi, esi	       767	ldlang.c	FUNCTION_24	IF_1
0x400ac03	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x400ac0d	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac10	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac12	            0x7517	                           jne 0x400ac2b	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac14	            0xeb30	                           jmp 0x400ac46	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac20	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x400ac24	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac27	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac29	            0x741b	                            je 0x400ac46	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac2b	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac2e	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac30	            0x77ee	                            ja 0x400ac20	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac32	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400ac36	            0x73e8	                           jae 0x400ac20	      1115	string2.h	FUNCTION_223	WHILE_1
0x400ac38	          0x488b3f	                    mov rdi, qword [rdi]	       859	ldlang.c	FUNCTION_25	FOR_4
0x400ac3b	          0x4885ff	                           test rdi, rdi	       859	ldlang.c	FUNCTION_25	FOR_4
0x400ac3e	            0x7440	                            je 0x400ac80	       859	ldlang.c	FUNCTION_25	FOR_4
0x400ac40	        0x488b5708	                mov rdx, qword [rdi + 8]	       859	ldlang.c	FUNCTION_25	FOR_4
0x400ac44	            0xebc7	                           jmp 0x400ac0d	       859	ldlang.c	FUNCTION_25	FOR_4
0x400ac46	          0x4863c6	                         movsxd rax, esi	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x400ac49	          0x83c601	                              add esi, 1	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x400ac4c	      0x49897cc550	     mov qword [r13 + rax*8 + 0x50], rdi	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x400ac51	            0xebe5	                           jmp 0x400ac38	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x400ac53	    0x4181f8000100	                          cmp r8d, 0x100	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400ac5a	     0xf8499000000	                            je 0x400acf9	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400ac60	    0x4181f8010100	                          cmp r8d, 0x101	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400ac67	     0xf85f5fcffff	                           jne 0x400a962	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400ac6d	    0x49c745480000	               mov qword [r13 + 0x48], 0	       838	ldlang.c	FUNCTION_25	SWITCH_1
0x400ac75	            0xeb83	                           jmp 0x400abfa	       838	ldlang.c	FUNCTION_25	SWITCH_1
0x400ac77	    0x660f1f840000	                    nop word [rax + rax]	       838	ldlang.c	FUNCTION_25	SWITCH_1
0x400ac80	        0x488b1424	                    mov rdx, qword [rsp]	       859	ldlang.c	FUNCTION_25	FOR_4
0x400ac84	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x400ac8e	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac91	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac93	            0x7516	                           jne 0x400acab	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac95	            0xeb2c	                           jmp 0x400acc3	      1114	string2.h	FUNCTION_223	WHILE_1
0x400ac97	    0x660f1f840000	                    nop word [rax + rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400aca0	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x400aca4	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400aca7	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400aca9	            0x7418	                            je 0x400acc3	      1114	string2.h	FUNCTION_223	WHILE_1
0x400acab	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400acae	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x400acb0	            0x77ee	                            ja 0x400aca0	      1114	string2.h	FUNCTION_223	WHILE_1
0x400acb2	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400acb6	            0x73e8	                           jae 0x400aca0	      1115	string2.h	FUNCTION_223	WHILE_1
0x400acb8	          0x4863c6	                         movsxd rax, esi	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x400acbb	          0x83c601	                              add esi, 1	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x400acbe	      0x4d897cc550	     mov qword [r13 + rax*8 + 0x50], r15	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x400acc3	          0x4d8b3f	                    mov r15, qword [r15]	       862	ldlang.c	FUNCTION_25	FOR_5
0x400acc6	          0x4d85ff	                           test r15, r15	       862	ldlang.c	FUNCTION_25	FOR_5
0x400acc9	     0xf8493fcffff	                            je 0x400a962	       862	ldlang.c	FUNCTION_25	FOR_5
0x400accf	        0x498b5708	                mov rdx, qword [r15 + 8]	       862	ldlang.c	FUNCTION_25	FOR_5
0x400acd3	            0xebb9	                           jmp 0x400ac8e	       862	ldlang.c	FUNCTION_25	FOR_5
0x400acd5	      0xba01000000	                              mov edx, 1	       974	string2.h	FUNCTION_218	WHILE_1
0x400acda	      0xe917feffff	                           jmp 0x400aaf6	       974	string2.h	FUNCTION_218	WHILE_1
0x400acdf	    0x49c745480000	               mov qword [r13 + 0x48], 0	       841	ldlang.c	FUNCTION_25	SWITCH_1
0x400ace7	      0xe90effffff	                           jmp 0x400abfa	       841	ldlang.c	FUNCTION_25	SWITCH_1
0x400acec	    0x49c745480000	               mov qword [r13 + 0x48], 0	       844	ldlang.c	FUNCTION_25	SWITCH_1
0x400acf4	      0xe901ffffff	                           jmp 0x400abfa	       844	ldlang.c	FUNCTION_25	SWITCH_1
0x400acf9	    0x49c745480000	               mov qword [r13 + 0x48], 0	       835	ldlang.c	FUNCTION_25	SWITCH_1
0x400ad01	      0xe9f4feffff	                           jmp 0x400abfa	       835	ldlang.c	FUNCTION_25	SWITCH_1
lang_add_target	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	17
0x400adb0	              0x55	                                push rbp	      7513	ldlang.c	FUNCTION_168
0x400adb1	              0x53	                                push rbx	      7513	ldlang.c	FUNCTION_168
0x400adb2	          0x4889fd	                            mov rbp, rdi	      7513	ldlang.c	FUNCTION_168
0x400adb5	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400adba	        0x4883ec08	                              sub rsp, 8	      7513	ldlang.c	FUNCTION_168
0x400adbe	    0x488b1d000000	            mov rbx, qword [0x0400adc5] 	      7516	ldlang.c	FUNCTION_168
0x400adc5	      0xe800000000	                          call 0x400adca	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400adca	    0xc740080a0000	                mov dword [rax + 8], 0xa	      1040	ldlang.c	FUNCTION_33
0x400add1	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400add8	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400addc	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400addf	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400ade3	        0x48896810	             mov qword [rax + 0x10], rbp	      7517	ldlang.c	FUNCTION_168
0x400ade7	        0x4883c408	                              add rsp, 8	      7518	ldlang.c	FUNCTION_168
0x400adeb	              0x5b	                                 pop rbx	      7518	ldlang.c	FUNCTION_168
0x400adec	              0x5d	                                 pop rbp	      7518	ldlang.c	FUNCTION_168
0x400aded	              0xc3	                                     ret	      7518	ldlang.c	FUNCTION_168
lang_append_dynamic_list_cpp_new	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,3:DO,0:FOR,1:WHILE,0	35
0x400edf0	              0x53	                                push rbx	      8710	ldlang.c	FUNCTION_206
0x400edf1	            0x31c9	                            xor ecx, ecx	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400edf3	            0x31ff	                            xor edi, edi	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400edf5	      0xba00000000	                              mov edx, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400edfa	      0xbe00000000	                              mov esi, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400edff	      0xe800000000	                          call 0x400ee04	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400ee04	            0x31c9	                            xor ecx, ecx	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400ee06	      0xba00000000	                              mov edx, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400ee0b	      0xbe00000000	                              mov esi, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400ee10	          0x4889c7	                            mov rdi, rax	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400ee13	      0xe800000000	                          call 0x400ee18	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400ee18	    0x488b0d000000	            mov rcx, qword [0x0400ee1f] 	      8665	ldlang.c	FUNCTION_204	IF_1
0x400ee1f	          0x4889c3	                            mov rbx, rax	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400ee22	          0x4885c9	                           test rcx, rcx	      8665	ldlang.c	FUNCTION_204	IF_1
0x400ee25	            0x741f	                            je 0x400ee46	      8665	ldlang.c	FUNCTION_204	IF_1
0x400ee27	          0x4889c2	                            mov rdx, rax	      8665	ldlang.c	FUNCTION_204	IF_1
0x400ee2a	            0xeb07	                           jmp 0x400ee33	      8665	ldlang.c	FUNCTION_204	IF_1
0x400ee2c	         0xf1f4000	                         nop dword [rax]	      8665	ldlang.c	FUNCTION_204	IF_1
0x400ee30	          0x4889c2	                            mov rdx, rax	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400ee33	          0x488b02	                    mov rax, qword [rdx]	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400ee36	          0x4885c0	                           test rax, rax	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400ee39	            0x75f5	                           jne 0x400ee30	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400ee3b	          0x488b01	                    mov rax, qword [rcx]	      8670	ldlang.c	FUNCTION_204	IF_1
0x400ee3e	          0x488902	                    mov qword [rdx], rax	      8670	ldlang.c	FUNCTION_204	IF_1
0x400ee41	          0x488919	                    mov qword [rcx], rbx	      8671	ldlang.c	FUNCTION_204	IF_1
0x400ee44	              0x5b	                                 pop rbx	      8724	ldlang.c	FUNCTION_206
0x400ee45	              0xc3	                                     ret	      8724	ldlang.c	FUNCTION_206
0x400ee46	      0xbe28000000	                           mov esi, 0x28	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400ee4b	      0xbf01000000	                              mov edi, 1	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400ee50	      0xe800000000	                          call 0x400ee55	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400ee55	          0x488918	                    mov qword [rax], rbx	      8678	ldlang.c	FUNCTION_204	ELSE_1
0x400ee58	    0x48c740200000	               mov qword [rax + 0x20], 0	      8679	ldlang.c	FUNCTION_204	ELSE_1
0x400ee60	    0x488905000000	            mov qword [0x0400ee67], rax 	      8680	ldlang.c	FUNCTION_204	ELSE_1
0x400ee67	              0x5b	                                 pop rbx	      8724	ldlang.c	FUNCTION_206
0x400ee68	              0xc3	                                     ret	      8724	ldlang.c	FUNCTION_206
lang_add_unique	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,1:WHILE,0	35
0x400ec90	              0x55	                                push rbp	      8647	ldlang.c	FUNCTION_203
0x400ec91	              0x53	                                push rbx	      8647	ldlang.c	FUNCTION_203
0x400ec92	          0x4889fd	                            mov rbp, rdi	      8647	ldlang.c	FUNCTION_203
0x400ec95	        0x4883ec08	                              sub rsp, 8	      8647	ldlang.c	FUNCTION_203
0x400ec99	    0x488b1d000000	            mov rbx, qword [0x0400eca0] 	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400eca0	          0x4885db	                           test rbx, rbx	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400eca3	            0x7513	                           jne 0x400ecb8	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400eca5	            0xeb29	                           jmp 0x400ecd0	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400eca7	    0x660f1f840000	                    nop word [rax + rax]	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400ecb0	          0x488b1b	                    mov rbx, qword [rbx]	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400ecb3	          0x4885db	                           test rbx, rbx	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400ecb6	            0x7418	                            je 0x400ecd0	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400ecb8	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400ecbc	          0x4889ee	                            mov rsi, rbp	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400ecbf	      0xe800000000	                          call 0x400ecc4	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400ecc4	            0x85c0	                           test eax, eax	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400ecc6	            0x75e8	                           jne 0x400ecb0	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400ecc8	        0x4883c408	                              add rsp, 8	      8658	ldlang.c	FUNCTION_203
0x400eccc	              0x5b	                                 pop rbx	      8658	ldlang.c	FUNCTION_203
0x400eccd	              0x5d	                                 pop rbp	      8658	ldlang.c	FUNCTION_203
0x400ecce	              0xc3	                                     ret	      8658	ldlang.c	FUNCTION_203
0x400eccf	              0x90	                                     nop	      8658	ldlang.c	FUNCTION_203
0x400ecd0	      0xbf10000000	                           mov edi, 0x10	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400ecd5	      0xe800000000	                          call 0x400ecda	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400ecda	          0x4889ef	                            mov rdi, rbp	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400ecdd	          0x4889c3	                            mov rbx, rax	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400ece0	      0xe800000000	                          call 0x400ece5	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400ece5	        0x48894308	                mov qword [rbx + 8], rax	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400ece9	    0x488b05000000	            mov rax, qword [0x0400ecf0] 	      8656	ldlang.c	FUNCTION_203
0x400ecf0	    0x48891d000000	            mov qword [0x0400ecf7], rbx 	      8657	ldlang.c	FUNCTION_203
0x400ecf7	          0x488903	                    mov qword [rbx], rax	      8656	ldlang.c	FUNCTION_203
0x400ecfa	        0x4883c408	                              add rsp, 8	      8658	ldlang.c	FUNCTION_203
0x400ecfe	              0x5b	                                 pop rbx	      8658	ldlang.c	FUNCTION_203
0x400ecff	              0x5d	                                 pop rbp	      8658	ldlang.c	FUNCTION_203
0x400ed00	              0xc3	                                     ret	      8658	ldlang.c	FUNCTION_203
name_compare	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,12:DO,0:FOR,1:WHILE,0	131
0x4002ec0	            0x4155	                                push r13	      2977	ldlang.c	FUNCTION_71
0x4002ec2	            0x4154	                                push r12	      2977	ldlang.c	FUNCTION_71
0x4002ec4	          0x4989fd	                            mov r13, rdi	      2977	ldlang.c	FUNCTION_71
0x4002ec7	              0x55	                                push rbp	      2977	ldlang.c	FUNCTION_71
0x4002ec8	              0x53	                                push rbx	      2977	ldlang.c	FUNCTION_71
0x4002ec9	          0x4989f4	                            mov r12, rsi	      2977	ldlang.c	FUNCTION_71
0x4002ecc	        0x4883ec08	                              sub rsp, 8	      2977	ldlang.c	FUNCTION_71
0x4002ed0	      0xe800000000	                          call 0x4002ed5	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002ed5	        0x488d7801	                      lea rdi, [rax + 1]	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002ed9	      0xe800000000	                          call 0x4002ede	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002ede	          0x4c89e7	                            mov rdi, r12	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002ee1	          0x4889c5	                            mov rbp, rax	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002ee4	      0xe800000000	                          call 0x4002ee9	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002ee9	        0x488d7801	                      lea rdi, [rax + 1]	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002eed	      0xe800000000	                          call 0x4002ef2	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002ef2	          0x4889c3	                            mov rbx, rax	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002ef5	      0x410fb64500	                   movzx eax, byte [r13]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002efa	            0x84c0	                             test al, al	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002efc	     0xf8467010000	                            je 0x4003069	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f02	        0x498d4d01	                      lea rcx, [r13 + 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f06	          0x4889ea	                            mov rdx, rbp	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002f09	     0xf1f80000000	                         nop dword [rax]	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002f10	     0xfb680000000	                   movzx eax, byte [rax]	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002f17	        0x4883c201	                              add rdx, 1	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002f1b	        0x4883c101	                              add rcx, 1	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f1f	          0x8842ff	                  mov byte [rdx - 1], al	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002f22	         0xfb641ff	               movzx eax, byte [rcx - 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f26	            0x84c0	                             test al, al	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f28	            0x75e6	                           jne 0x4002f10	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f2a	      0x410fb60424	                   movzx eax, byte [r12]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f2f	          0xc60200	                       mov byte [rdx], 0	      2950	ldlang.c	FUNCTION_69
0x4002f32	      0x498d4c2401	                      lea rcx, [r12 + 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f37	          0x4889da	                            mov rdx, rbx	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002f3a	            0x84c0	                             test al, al	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f3c	            0x741c	                            je 0x4002f5a	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f3e	            0x6690	                                     nop	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f40	     0xfb680000000	                   movzx eax, byte [rax]	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002f47	        0x4883c201	                              add rdx, 1	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002f4b	        0x4883c101	                              add rcx, 1	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f4f	          0x8842ff	                  mov byte [rdx - 1], al	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002f52	         0xfb641ff	               movzx eax, byte [rcx - 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f56	            0x84c0	                             test al, al	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f58	            0x75e6	                           jne 0x4002f40	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002f5a	          0xc60200	                       mov byte [rdx], 0	      2950	ldlang.c	FUNCTION_69
0x4002f5d	      0xbe00000000	                              mov esi, 0	      2959	ldlang.c	FUNCTION_70
0x4002f62	          0x4889ef	                            mov rdi, rbp	      2959	ldlang.c	FUNCTION_70
0x4002f65	      0xe800000000	                          call 0x4002f6a	      2959	ldlang.c	FUNCTION_70
0x4002f6a	          0x4885c0	                           test rax, rax	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002f6d	            0x7510	                           jne 0x4002f7f	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002f6f	            0xeb19	                           jmp 0x4002f8a	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002f71	     0xf1f80000000	                         nop dword [rax]	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002f78	        0x4883c001	                              add rax, 1	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4002f7c	          0x8850ff	                  mov byte [rax - 1], dl	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4002f7f	         0xfb65003	               movzx edx, byte [rax + 3]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002f83	            0x84d2	                             test dl, dl	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002f85	            0x75f1	                           jne 0x4002f78	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002f87	          0xc60000	                       mov byte [rax], 0	      2968	ldlang.c	FUNCTION_70	IF_1
0x4002f8a	      0xbe00000000	                              mov esi, 0	      2959	ldlang.c	FUNCTION_70
0x4002f8f	          0x4889ef	                            mov rdi, rbp	      2959	ldlang.c	FUNCTION_70
0x4002f92	      0xe800000000	                          call 0x4002f97	      2959	ldlang.c	FUNCTION_70
0x4002f97	          0x4885c0	                           test rax, rax	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002f9a	            0x750b	                           jne 0x4002fa7	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002f9c	            0xeb14	                           jmp 0x4002fb2	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002f9e	            0x6690	                                     nop	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002fa0	        0x4883c001	                              add rax, 1	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4002fa4	          0x8850ff	                  mov byte [rax - 1], dl	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4002fa7	         0xfb65006	               movzx edx, byte [rax + 6]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002fab	            0x84d2	                             test dl, dl	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002fad	            0x75f1	                           jne 0x4002fa0	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002faf	          0xc60000	                       mov byte [rax], 0	      2968	ldlang.c	FUNCTION_70	IF_1
0x4002fb2	      0xbe00000000	                              mov esi, 0	      2959	ldlang.c	FUNCTION_70
0x4002fb7	          0x4889df	                            mov rdi, rbx	      2959	ldlang.c	FUNCTION_70
0x4002fba	      0xe800000000	                          call 0x4002fbf	      2959	ldlang.c	FUNCTION_70
0x4002fbf	          0x4885c0	                           test rax, rax	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002fc2	            0x7513	                           jne 0x4002fd7	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002fc4	            0xeb1c	                           jmp 0x4002fe2	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002fc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002fd0	        0x4883c001	                              add rax, 1	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4002fd4	          0x8850ff	                  mov byte [rax - 1], dl	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4002fd7	         0xfb65003	               movzx edx, byte [rax + 3]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002fdb	            0x84d2	                             test dl, dl	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002fdd	            0x75f1	                           jne 0x4002fd0	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4002fdf	          0xc60000	                       mov byte [rax], 0	      2968	ldlang.c	FUNCTION_70	IF_1
0x4002fe2	      0xbe00000000	                              mov esi, 0	      2959	ldlang.c	FUNCTION_70
0x4002fe7	          0x4889df	                            mov rdi, rbx	      2959	ldlang.c	FUNCTION_70
0x4002fea	      0xe800000000	                          call 0x4002fef	      2959	ldlang.c	FUNCTION_70
0x4002fef	          0x4885c0	                           test rax, rax	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002ff2	            0x7513	                           jne 0x4003007	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002ff4	            0xeb1c	                           jmp 0x4003012	      2961	ldlang.c	FUNCTION_70	IF_1
0x4002ff6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2961	ldlang.c	FUNCTION_70	IF_1
0x4003000	        0x4883c001	                              add rax, 1	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4003004	          0x8850ff	                  mov byte [rax - 1], dl	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4003007	         0xfb65006	               movzx edx, byte [rax + 6]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x400300b	            0x84d2	                             test dl, dl	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x400300d	            0x75f1	                           jne 0x4003000	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x400300f	          0xc60000	                       mov byte [rax], 0	      2968	ldlang.c	FUNCTION_70	IF_1
0x4003012	           0xfb603	                   movzx eax, byte [rbx]	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4003015	          0x3a4500	                      cmp al, byte [rbp]	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4003018	            0x7557	                           jne 0x4003071	      2998	ldlang.c	FUNCTION_71	FOR_1
0x400301a	            0x84c0	                             test al, al	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x400301c	            0x7453	                            je 0x4003071	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x400301e	            0x31d2	                            xor edx, edx	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4003020	          0x4531e4	                          xor r12d, r12d	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4003023	            0xeb0b	                           jmp 0x4003030	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4003025	           0xf1f00	                         nop dword [rax]	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4003028	        0x4883c201	                              add rdx, 1	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x400302c	            0x84c9	                             test cl, cl	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x400302e	            0x7430	                            je 0x4003060	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4003030	       0xfb64c1501	        movzx ecx, byte [rbp + rdx + 1] 	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4003035	        0x4183c401	                             add r12d, 1	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4003039	        0x3a4c1301	           cmp cl, byte [rbx + rdx + 1] 	      2998	ldlang.c	FUNCTION_71	FOR_1
0x400303d	            0x74e9	                            je 0x4003028	      2998	ldlang.c	FUNCTION_71	FOR_1
0x400303f	          0x4889ef	                            mov rdi, rbp	      3005	ldlang.c	FUNCTION_71	CALL_11
0x4003042	      0xe800000000	                          call 0x4003047	      3005	ldlang.c	FUNCTION_71	CALL_11
0x4003047	          0x4889df	                            mov rdi, rbx	      3006	ldlang.c	FUNCTION_71	CALL_12
0x400304a	      0xe800000000	                          call 0x400304f	      3006	ldlang.c	FUNCTION_71	CALL_12
0x400304f	        0x4883c408	                              add rsp, 8	      3009	ldlang.c	FUNCTION_71
0x4003053	          0x4489e0	                           mov eax, r12d	      3009	ldlang.c	FUNCTION_71
0x4003056	              0x5b	                                 pop rbx	      3009	ldlang.c	FUNCTION_71
0x4003057	              0x5d	                                 pop rbp	      3009	ldlang.c	FUNCTION_71
0x4003058	            0x415c	                                 pop r12	      3009	ldlang.c	FUNCTION_71
0x400305a	            0x415d	                                 pop r13	      3009	ldlang.c	FUNCTION_71
0x400305c	              0xc3	                                     ret	      3009	ldlang.c	FUNCTION_71
0x400305d	           0xf1f00	                         nop dword [rax]	      3009	ldlang.c	FUNCTION_71
0x4003060	        0x478d24a4	                 lea r12d, [r12 + r12*4]	      3009	ldlang.c	FUNCTION_71
0x4003064	          0x4501e4	                          add r12d, r12d	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4003067	            0xebd6	                           jmp 0x400303f	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4003069	          0x4889ea	                            mov rdx, rbp	      2982	ldlang.c	FUNCTION_71	CALL_2
0x400306c	      0xe9b9feffff	                           jmp 0x4002f2a	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4003071	          0x4531e4	                          xor r12d, r12d	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4003074	            0xebc9	                           jmp 0x400303f	      2998	ldlang.c	FUNCTION_71	FOR_1
lang_insert_orphan	IF,17:ELSE,3:SWITCH,0:functions,0:CALL,11:DO,0:FOR,0:WHILE,0	294
0x400b1b0	            0x4157	                                push r15	      1829	ldlang.c	FUNCTION_50
0x400b1b2	            0x4156	                                push r14	      1829	ldlang.c	FUNCTION_50
0x400b1b4	          0x4989ff	                            mov r15, rdi	      1829	ldlang.c	FUNCTION_50
0x400b1b7	            0x4155	                                push r13	      1829	ldlang.c	FUNCTION_50
0x400b1b9	            0x4154	                                push r12	      1829	ldlang.c	FUNCTION_50
0x400b1bb	          0x4989f5	                            mov r13, rsi	      1829	ldlang.c	FUNCTION_50
0x400b1be	              0x55	                                push rbp	      1829	ldlang.c	FUNCTION_50
0x400b1bf	              0x53	                                push rbx	      1829	ldlang.c	FUNCTION_50
0x400b1c0	          0x4989ce	                            mov r14, rcx	      1829	ldlang.c	FUNCTION_50
0x400b1c3	          0x4c89c3	                             mov rbx, r8	      1829	ldlang.c	FUNCTION_50
0x400b1c6	          0x4c89ce	                             mov rsi, r9	      1829	ldlang.c	FUNCTION_50
0x400b1c9	        0x4883ec38	                           sub rsp, 0x38	      1829	ldlang.c	FUNCTION_50
0x400b1cd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1829	ldlang.c	FUNCTION_50
0x400b1d6	      0x4889442428	             mov qword [rsp + 0x28], rax	      1829	ldlang.c	FUNCTION_50
0x400b1db	            0x31c0	                            xor eax, eax	      1829	ldlang.c	FUNCTION_50
0x400b1dd	          0x4885c9	                           test rcx, rcx	      1837	ldlang.c	FUNCTION_50	IF_1
0x400b1e0	      0x488b6c2470	            mov rbp, qword [rsp + 0x70] 	      1829	ldlang.c	FUNCTION_50
0x400b1e5	            0x7448	                            je 0x400b22f	      1837	ldlang.c	FUNCTION_50	IF_1
0x400b1e7	    0x488b0d000000	            mov rcx, qword [0x0400b1ee] 	      1016	ldlang.c	FUNCTION_31	IF_1
0x400b1ee	      0x488d442410	                   lea rax, [rsp + 0x10]	      1010	ldlang.c	FUNCTION_30
0x400b1f3	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1009	ldlang.c	FUNCTION_30
0x400b1fc	      0x4889442418	             mov qword [rsp + 0x18], rax	      1010	ldlang.c	FUNCTION_30
0x400b201	    0x4881f9000000	                              cmp rcx, 0	      1016	ldlang.c	FUNCTION_31	IF_1
0x400b208	     0xf83cb040000	                           jae 0x400b6d9	      1016	ldlang.c	FUNCTION_31	IF_1
0x400b20e	        0x488d4108	                      lea rax, [rcx + 8]	      1018	ldlang.c	FUNCTION_31
0x400b212	    0x488905000000	            mov qword [0x0400b219], rax 	      1018	ldlang.c	FUNCTION_31
0x400b219	    0x488b05000000	            mov rax, qword [0x0400b220] 	      1018	ldlang.c	FUNCTION_31
0x400b220	          0x488901	                    mov qword [rcx], rax	      1018	ldlang.c	FUNCTION_31
0x400b223	      0x488d442410	                   lea rax, [rsp + 0x10]	      1019	ldlang.c	FUNCTION_31
0x400b228	    0x488905000000	            mov qword [0x0400b22f], rax 	      1019	ldlang.c	FUNCTION_31
0x400b22f	     0xfb60d000000	           movzx ecx, byte [0x0400b236] 	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x400b236	          0x83e103	                              and ecx, 3	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x400b239	          0x80f902	                               cmp cl, 2	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x400b23c	     0xf840e020000	                            je 0x400b450	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x400b242	      0x41f6472003	               test byte [r15 + 0x20], 3	      1844	ldlang.c	FUNCTION_50	IF_2
0x400b247	     0xf8403020000	                            je 0x400b450	      1844	ldlang.c	FUNCTION_50	IF_2
0x400b24d	            0x6a00	                                  push 0	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b24f	              0x52	                                push rdx	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b250	          0x4531c9	                            xor r9d, r9d	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b253	          0x4531c0	                            xor r8d, r8d	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b256	            0x31c9	                            xor ecx, ecx	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b258	            0x31d2	                            xor edx, edx	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b25a	          0x4c89ef	                            mov rdi, r13	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b25d	    0x4c8b25000000	            mov r12, qword [0x0400b264] 	      1847	ldlang.c	FUNCTION_50
0x400b264	      0xe800000000	                          call 0x400b269	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b269	              0x59	                                 pop rcx	      1852	ldlang.c	FUNCTION_50	IF_3
0x400b26a	          0x4989c5	                            mov r13, rax	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400b26d	        0x488d4010	                   lea rax, [rax + 0x10]	      1853	ldlang.c	FUNCTION_50	IF_3
0x400b271	          0x4885ed	                           test rbp, rbp	      1853	ldlang.c	FUNCTION_50	IF_3
0x400b274	              0x5e	                                 pop rsi	      1852	ldlang.c	FUNCTION_50	IF_3
0x400b275	        0x480f44e8	                          cmove rbp, rax	      1853	ldlang.c	FUNCTION_50	IF_3
0x400b279	          0x4c89e9	                            mov rcx, r13	      1854	ldlang.c	FUNCTION_50	CALL_6
0x400b27c	            0x31d2	                            xor edx, edx	      1854	ldlang.c	FUNCTION_50	CALL_6
0x400b27e	          0x4c89fe	                            mov rsi, r15	      1854	ldlang.c	FUNCTION_50	CALL_6
0x400b281	          0x4889ef	                            mov rdi, rbp	      1854	ldlang.c	FUNCTION_50	CALL_6
0x400b284	      0xe800000000	                          call 0x400b289	      1854	ldlang.c	FUNCTION_50	CALL_6
0x400b289	          0x4d85f6	                           test r14, r14	      1856	ldlang.c	FUNCTION_50	IF_4
0x400b28c	     0xf842e030000	                            je 0x400b5c0	      1856	ldlang.c	FUNCTION_50	IF_4
0x400b292	      0x41f6472003	               test byte [r15 + 0x20], 3	      1856	ldlang.c	FUNCTION_50	IF_4
0x400b297	     0xf85d3010000	                           jne 0x400b470	      1856	ldlang.c	FUNCTION_50	IF_4
0x400b29d	    0x488b2d000000	            mov rbp, qword [0x0400b2a4] 	      7661	ldlang.c	FUNCTION_178
0x400b2a4	      0xbf00000000	                              mov edi, 0	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400b2a9	    0x48c745480000	               mov qword [rbp + 0x48], 0	      7635	ldlang.c	FUNCTION_177	CALL_1
0x400b2b1	      0xe85a8fffff	call sym.lang_memory_region_lookup.constprop.61	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400b2b6	    0x488b15000000	            mov rdx, qword [0x0400b2bd] 	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b2bd	        0x48894540	            mov qword [rbp + 0x40], rax 	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400b2c1	    0x488b05000000	            mov rax, qword [0x0400b2c8] 	      7663	ldlang.c	FUNCTION_178
0x400b2c8	    0x4881fa000000	                              cmp rdx, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b2cf	    0x48c740500000	               mov qword [rax + 0x50], 0	      7663	ldlang.c	FUNCTION_178
0x400b2d7	    0x48c740700000	               mov qword [rax + 0x70], 0	      7664	ldlang.c	FUNCTION_178
0x400b2df	     0xf86ea030000	                           jbe 0x400b6cf	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b2e5	        0x488d42f8	                      lea rax, [rdx - 8]	      1027	ldlang.c	FUNCTION_32
0x400b2e9	        0x488b52f8	                mov rdx, qword [rdx - 8]	      1027	ldlang.c	FUNCTION_32
0x400b2ed	    0x488905000000	            mov qword [0x0400b2f4], rax 	      1027	ldlang.c	FUNCTION_32
0x400b2f4	    0x488915000000	            mov qword [0x0400b2fb], rdx 	      1027	ldlang.c	FUNCTION_32
0x400b2fb	    0x483d00000000	                              cmp rax, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b301	     0xf86c8030000	                           jbe 0x400b6cf	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b307	        0x488d50f8	                      lea rdx, [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x400b30b	        0x488b40f8	                mov rax, qword [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x400b30f	    0x488915000000	            mov qword [0x0400b316], rdx 	      1027	ldlang.c	FUNCTION_32
0x400b316	    0x488905000000	            mov qword [0x0400b31d], rax 	      1027	ldlang.c	FUNCTION_32
0x400b31d	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1875	ldlang.c	FUNCTION_50	IF_6
0x400b321	          0x4885c0	                           test rax, rax	      1875	ldlang.c	FUNCTION_50	IF_6
0x400b324	     0xf84fe000000	                            je 0x400b428	      1875	ldlang.c	FUNCTION_50	IF_6
0x400b32a	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1883	ldlang.c	FUNCTION_50	IF_6	IF_7
0x400b32e	          0x4885d2	                           test rdx, rdx	      1883	ldlang.c	FUNCTION_50	IF_6	IF_7
0x400b331	     0xf84e1010000	                            je 0x400b518	      1883	ldlang.c	FUNCTION_50	IF_6	IF_7
0x400b337	          0x488b12	                    mov rdx, qword [rdx]	      1903	ldlang.c	FUNCTION_50	IF_6
0x400b33a	          0x4885d2	                           test rdx, rdx	      1905	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b33d	     0xf847d010000	                            je 0x400b4c0	      1905	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b343	          0x4839d0	                            cmp rax, rdx	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b346	            0x7448	                            je 0x400b390	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b348	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b34c	          0x4839c8	                            cmp rax, rcx	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b34f	            0x743f	                            je 0x400b390	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b351	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b355	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b359	          0x4885f6	                           test rsi, rsi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b35c	     0xf842e020000	                            je 0x400b590	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b362	        0x48897e10	             mov qword [rsi + 0x10], rdi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b366	          0x4885ff	                           test rdi, rdi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b369	     0xf8409020000	                            je 0x400b578	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b36f	        0x48897718	             mov qword [rdi + 0x18], rsi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b373	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b377	          0x4885c9	                           test rcx, rcx	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b37a	        0x48894818	             mov qword [rax + 0x18], rcx	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b37e	        0x48895010	             mov qword [rax + 0x10], rdx	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b382	        0x48894218	             mov qword [rdx + 0x18], rax	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b386	     0xf84d4010000	                            je 0x400b560	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b38c	        0x48894110	             mov qword [rcx + 0x10], rax	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b390	        0x4883c010	                           add rax, 0x10	      1926	ldlang.c	FUNCTION_50	IF_6
0x400b394	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1937	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b39a	        0x48894318	             mov qword [rbx + 0x18], rax	      1926	ldlang.c	FUNCTION_50	IF_6
0x400b39e	     0xf8484000000	                            je 0x400b428	      1937	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b3a4	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b3a8	          0x4885c0	                           test rax, rax	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b3ab	     0xf8477020000	                            je 0x400b628	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b3b1	          0x488b10	                    mov rdx, qword [rax]	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x400b3b4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x400b3b9	          0x488910	                    mov qword [rax], rdx	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x400b3bc	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x400b3c0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x400b3c5	          0x488910	                    mov qword [rax], rdx	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x400b3c8	    0x488b05000000	            mov rax, qword [0x0400b3cf] 	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b3cf	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b3d4	        0x488b5008	                mov rdx, qword [rax + 8]	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b3d8	          0x48393a	                    cmp qword [rdx], rdi	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b3db	     0xf846f010000	                            je 0x400b550	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b3e1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1963	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b3e6	        0x48894320	             mov qword [rbx + 0x20], rax	      1963	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b3ea	        0x498b0424	                    mov rax, qword [r12]	      1966	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b3ee	    0x49c704240000	                      mov qword [r12], 0	      1967	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b3f6	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1969	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b3fa	        0x488d4ae0	                   lea rcx, [rdx - 0x20]	      1968	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b3fe	        0x48894828	             mov qword [rax + 0x28], rcx	      1968	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b402	          0x488b0a	                    mov rcx, qword [rdx]	      1971	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b405	          0x4885c9	                           test rcx, rcx	      1972	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x400b408	        0x48894820	             mov qword [rax + 0x20], rcx	      1971	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b40c	            0x7404	                            je 0x400b412	      1972	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x400b40e	        0x48894128	             mov qword [rcx + 0x28], rax	      1973	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x400b412	          0x488902	                    mov qword [rdx], rax	      1974	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b415	        0x4883c020	                           add rax, 0x20	      1975	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b419	        0x48894328	             mov qword [rbx + 0x28], rax	      1975	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400b41d	      0x49833c2400	                      cmp qword [r12], 0	      1982	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x400b422	     0xf8488000000	                            je 0x400b4b0	      1982	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x400b428	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1988	ldlang.c	FUNCTION_50
0x400b42d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1988	ldlang.c	FUNCTION_50
0x400b436	          0x4c89e8	                            mov rax, r13	      1988	ldlang.c	FUNCTION_50
0x400b439	     0xf8595020000	                           jne 0x400b6d4	      1988	ldlang.c	FUNCTION_50
0x400b43f	        0x4883c438	                           add rsp, 0x38	      1988	ldlang.c	FUNCTION_50
0x400b443	              0x5b	                                 pop rbx	      1988	ldlang.c	FUNCTION_50
0x400b444	              0x5d	                                 pop rbp	      1988	ldlang.c	FUNCTION_50
0x400b445	            0x415c	                                 pop r12	      1988	ldlang.c	FUNCTION_50
0x400b447	            0x415d	                                 pop r13	      1988	ldlang.c	FUNCTION_50
0x400b449	            0x415e	                                 pop r14	      1988	ldlang.c	FUNCTION_50
0x400b44b	            0x415f	                                 pop r15	      1988	ldlang.c	FUNCTION_50
0x400b44d	              0xc3	                                     ret	      1988	ldlang.c	FUNCTION_50
0x400b44e	            0x6690	                                     nop	      1988	ldlang.c	FUNCTION_50
0x400b450	            0x31ff	                            xor edi, edi	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400b452	        0x8954240c	              mov dword [rsp + 0xc], edx	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400b456	      0xe800000000	                          call 0x400b45b	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400b45b	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400b45f	          0x4889c6	                            mov rsi, rax	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400b462	      0xe9e6fdffff	                           jmp 0x400b24d	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400b467	    0x660f1f840000	                    nop word [rax + rax]	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400b470	        0x498b4640	            mov rax, qword [r14 + 0x40] 	      1858	ldlang.c	FUNCTION_50	IF_4
0x400b474	          0x4885c0	                           test rax, rax	      1860	ldlang.c	FUNCTION_50	IF_4
0x400b477	     0xf8433010000	                            je 0x400b5b0	      1860	ldlang.c	FUNCTION_50	IF_4
0x400b47d	          0x488b30	                    mov rsi, qword [rax]	      1860	ldlang.c	FUNCTION_50	IF_4
0x400b480	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      1861	ldlang.c	FUNCTION_50	IF_4
0x400b484	          0x4885c0	                           test rax, rax	      1863	ldlang.c	FUNCTION_50	IF_4
0x400b487	     0xf841b010000	                            je 0x400b5a8	      1863	ldlang.c	FUNCTION_50	IF_4
0x400b48d	          0x488b08	                    mov rcx, qword [rax]	      1863	ldlang.c	FUNCTION_50	IF_4
0x400b490	        0x498b5670	            mov rdx, qword [r14 + 0x70] 	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x400b494	            0x31ff	                            xor edi, edi	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x400b496	      0xe800000000	                          call 0x400b49b	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x400b49b	    0x488b05000000	            mov rax, qword [0x0400b4a2] 	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x400b4a2	      0xe954feffff	                           jmp 0x400b2fb	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x400b4a7	    0x660f1f840000	                    nop word [rax + rax]	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x400b4b0	    0x4c8925000000	            mov qword [0x0400b4b7], r12 	      1984	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x400b4b7	      0xe96cffffff	                           jmp 0x400b428	      1984	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x400b4bc	         0xf1f4000	                         nop dword [rax]	      1984	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x400b4c0	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4c4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4c8	          0x4885d2	                           test rdx, rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4cb	     0xf84a7010000	                            je 0x400b678	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4d1	    0x488b35000000	            mov rsi, qword [0x0400b4d8] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4d8	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4dc	          0x4885c9	                           test rcx, rcx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4df	     0xf8483010000	                            je 0x400b668	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4e5	        0x48895118	             mov qword [rcx + 0x18], rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4e9	    0x488b96980000	            mov rdx, qword [rsi + 0x98] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4f0	          0x4885d2	                           test rdx, rdx	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4f3	    0x48c740100000	               mov qword [rax + 0x10], 0	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b4fb	     0xf844f010000	                            je 0x400b650	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b501	        0x48895018	             mov qword [rax + 0x18], rdx	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b505	        0x48894210	             mov qword [rdx + 0x10], rax	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b509	    0x488986980000	             mov qword [rsi + 0x98], rax	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b510	      0xe97bfeffff	                           jmp 0x400b390	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b515	           0xf1f00	                         nop dword [rax]	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b518	    0x4c3b35000000	            cmp r14, qword [0x0400b51f] 	      1884	ldlang.c	FUNCTION_50	IF_6	IF_7
0x400b51f	            0x7416	                            je 0x400b537	      1884	ldlang.c	FUNCTION_50	IF_6	IF_7
0x400b521	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      1887	ldlang.c	FUNCTION_50	IF_6	IF_7
0x400b525	          0x4885d2	                           test rdx, rdx	      1893	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_8
0x400b528	     0xf8462010000	                            je 0x400b690	      1893	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_8
0x400b52e	          0x4839d0	                            cmp rax, rdx	      1896	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x400b531	     0xf85a7010000	                           jne 0x400b6de	      1896	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x400b537	    0x488b3d000000	            mov rdi, qword [0x0400b53e] 	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x400b53e	    0x488d97900000	                   lea rdx, [rdi + 0x90]	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x400b545	        0x48895318	             mov qword [rbx + 0x18], rdx	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x400b549	      0xe9e9fdffff	                           jmp 0x400b337	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x400b54e	            0x6690	                                     nop	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x400b550	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b555	        0x48895008	                mov qword [rax + 8], rdx	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b559	      0xe983feffff	                           jmp 0x400b3e1	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b55e	            0x6690	                                     nop	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x400b560	    0x488b15000000	            mov rdx, qword [0x0400b567] 	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b567	    0x488982900000	             mov qword [rdx + 0x90], rax	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b56e	      0xe91dfeffff	                           jmp 0x400b390	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b573	       0xf1f440000	                   nop dword [rax + rax]	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b578	    0x488b3d000000	            mov rdi, qword [0x0400b57f] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b57f	    0x4889b7980000	             mov qword [rdi + 0x98], rsi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b586	      0xe9ecfdffff	                           jmp 0x400b377	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b58b	       0xf1f440000	                   nop dword [rax + rax]	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b590	    0x4c8b05000000	              mov r8, qword [0x0400b597]	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b597	    0x4989b8900000	              mov qword [r8 + 0x90], rdi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b59e	      0xe9c3fdffff	                           jmp 0x400b366	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b5a3	       0xf1f440000	                   nop dword [rax + rax]	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400b5a8	            0x31c9	                            xor ecx, ecx	      1863	ldlang.c	FUNCTION_50	IF_4
0x400b5aa	      0xe9e1feffff	                           jmp 0x400b490	      1863	ldlang.c	FUNCTION_50	IF_4
0x400b5af	              0x90	                                     nop	      1863	ldlang.c	FUNCTION_50	IF_4
0x400b5b0	      0xbe00000000	                              mov esi, 0	      1860	ldlang.c	FUNCTION_50	IF_4
0x400b5b5	      0xe9c6feffff	                           jmp 0x400b480	      1860	ldlang.c	FUNCTION_50	IF_4
0x400b5ba	    0x660f1f440000	                    nop word [rax + rax]	      1860	ldlang.c	FUNCTION_50	IF_4
0x400b5c0	    0x488b1d000000	            mov rbx, qword [0x0400b5c7] 	      7661	ldlang.c	FUNCTION_178
0x400b5c7	      0xbf00000000	                              mov edi, 0	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400b5cc	    0x48c743480000	               mov qword [rbx + 0x48], 0	      7635	ldlang.c	FUNCTION_177	CALL_1
0x400b5d4	      0xe8378cffff	call sym.lang_memory_region_lookup.constprop.61	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400b5d9	        0x48894340	             mov qword [rbx + 0x40], rax	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400b5dd	    0x488b05000000	            mov rax, qword [0x0400b5e4] 	      7663	ldlang.c	FUNCTION_178
0x400b5e4	    0x48c740500000	               mov qword [rax + 0x50], 0	      7663	ldlang.c	FUNCTION_178
0x400b5ec	    0x48c740700000	               mov qword [rax + 0x70], 0	      7664	ldlang.c	FUNCTION_178
0x400b5f4	    0x488b05000000	            mov rax, qword [0x0400b5fb] 	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b5fb	    0x483d00000000	                              cmp rax, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b601	     0xf86c8000000	                           jbe 0x400b6cf	      1025	ldlang.c	FUNCTION_32	IF_1
0x400b607	        0x488d50f8	                      lea rdx, [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x400b60b	        0x488b40f8	                mov rax, qword [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x400b60f	    0x488915000000	            mov qword [0x0400b616], rdx 	      1027	ldlang.c	FUNCTION_32
0x400b616	    0x488905000000	            mov qword [0x0400b61d], rax 	      1027	ldlang.c	FUNCTION_32
0x400b61d	      0xe906feffff	                           jmp 0x400b428	      1027	ldlang.c	FUNCTION_32
0x400b622	    0x660f1f440000	                    nop word [rax + rax]	      1027	ldlang.c	FUNCTION_32
0x400b628	          0x4c89f7	                            mov rdi, r14	      1943	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14	CALL_11
0x400b62b	        0x4983c620	                           add r14, 0x20	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b62f	      0xe82c4affff	                call sym.insert_os_after	      1943	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14	CALL_11
0x400b634	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b639	          0x488b08	                    mov rcx, qword [rax]	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b63c	          0x48890a	                    mov qword [rdx], rcx	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b63f	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1946	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b644	          0x488910	                    mov qword [rax], rdx	      1946	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b647	        0x4c897328	             mov qword [rbx + 0x28], r14	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b64b	      0xe978fdffff	                           jmp 0x400b3c8	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x400b650	    0x48c740180000	               mov qword [rax + 0x18], 0	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b658	    0x488986900000	             mov qword [rsi + 0x90], rax	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b65f	      0xe9a5feffff	                           jmp 0x400b509	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b664	         0xf1f4000	                         nop dword [rax]	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b668	    0x488996980000	             mov qword [rsi + 0x98], rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b66f	      0xe97cfeffff	                           jmp 0x400b4f0	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b674	         0xf1f4000	                         nop dword [rax]	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b678	    0x488b35000000	            mov rsi, qword [0x0400b67f] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b67f	    0x48898e900000	             mov qword [rsi + 0x90], rcx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b686	      0xe951feffff	                           jmp 0x400b4dc	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b68b	       0xf1f440000	                   nop dword [rax + rax]	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b690	        0x498b4e28	            mov rcx, qword [r14 + 0x28] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400b694	          0x4885c9	                           test rcx, rcx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b697	     0xf849afeffff	                            je 0x400b537	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b69d	           0xf1f00	                         nop dword [rax]	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b6a0	    0x8b9184000000	            mov edx, dword [rcx + 0x84] 	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400b6a6	            0x85d2	                           test edx, edx	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400b6a8	            0x7817	                            js 0x400b6c1	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400b6aa	        0x488b5138	            mov rdx, qword [rcx + 0x38] 	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b6ae	          0x4885d2	                           test rdx, rdx	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b6b1	            0x740e	                            je 0x400b6c1	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b6b3	    0x4883baf00000	               cmp qword [rdx + 0xf0], 0	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b6bb	     0xf856dfeffff	                           jne 0x400b52e	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b6c1	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b6c5	          0x4885c9	                           test rcx, rcx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b6c8	            0x75d6	                           jne 0x400b6a0	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b6ca	      0xe968feffff	                           jmp 0x400b537	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b6cf	      0xe800000000	                          call 0x400b6d4	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b6d4	      0xe800000000	                          call 0x400b6d9	      1988	ldlang.c	FUNCTION_50
0x400b6d9	      0xe800000000	                          call 0x400b6de	      1988	ldlang.c	FUNCTION_50
0x400b6de	        0x4883c210	                           add rdx, 0x10	      1897	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x400b6e2	        0x48895318	             mov qword [rbx + 0x18], rdx	      1897	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x400b6e6	      0xe94cfcffff	                           jmp 0x400b337	      1897	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
gc_section_callback	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	5
0x40001d0	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      6791	ldlang.c	FUNCTION_149	IF_1
0x40001d3	            0x85c0	                           test eax, eax	      6791	ldlang.c	FUNCTION_149	IF_1
0x40001d5	            0x7407	                            je 0x40001de	      6791	ldlang.c	FUNCTION_149	IF_1
0x40001d7	    0x814a20000020	         or dword [rdx + 0x20], 0x200000	      6792	ldlang.c	FUNCTION_149	IF_1
0x40001de	            0xf3c3	                                     ret	      6792	ldlang.c	FUNCTION_149	IF_1
ldlang_add_require_defined	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0	59
0x40076c0	              0x55	                                push rbp	      3453	ldlang.c	FUNCTION_82
0x40076c1	              0x53	                                push rbx	      3453	ldlang.c	FUNCTION_82
0x40076c2	          0x4889fd	                            mov rbp, rdi	      3453	ldlang.c	FUNCTION_82
0x40076c5	      0xbf10000000	                           mov edi, 0x10	      3392	ldlang.c	FUNCTION_79	CALL_1
0x40076ca	        0x4883ec08	                              sub rsp, 8	      3453	ldlang.c	FUNCTION_82
0x40076ce	    0xc70500000000	               mov dword [0x040076d8], 1	      3391	ldlang.c	FUNCTION_79
0x40076d8	      0xe800000000	                          call 0x40076dd	      3392	ldlang.c	FUNCTION_79	CALL_1
0x40076dd	          0x4889c3	                            mov rbx, rax	      3392	ldlang.c	FUNCTION_79	CALL_1
0x40076e0	    0x488b05000000	            mov rax, qword [0x040076e7] 	      3393	ldlang.c	FUNCTION_79
0x40076e7	          0x4889ef	                            mov rdi, rbp	      3396	ldlang.c	FUNCTION_79	CALL_2
0x40076ea	          0x488903	                    mov qword [rbx], rax	      3393	ldlang.c	FUNCTION_79
0x40076ed	    0x48891d000000	            mov qword [0x040076f4], rbx 	      3394	ldlang.c	FUNCTION_79
0x40076f4	      0xe800000000	                          call 0x40076f9	      3396	ldlang.c	FUNCTION_79	CALL_2
0x40076f9	    0x48833d000000	               cmp qword [0x04007701], 0	      3398	ldlang.c	FUNCTION_79	IF_1
0x4007701	        0x48894308	                mov qword [rbx + 8], rax	      3396	ldlang.c	FUNCTION_79	CALL_2
0x4007705	            0x744b	                            je 0x4007752	      3398	ldlang.c	FUNCTION_79	IF_1
0x4007707	    0x488b3d000000	            mov rdi, qword [0x0400770e] 	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400770e	            0x31c9	                            xor ecx, ecx	      3409	ldlang.c	FUNCTION_80	CALL_1
0x4007710	    0x41b801000000	                              mov r8d, 1	      3409	ldlang.c	FUNCTION_80	CALL_1
0x4007716	      0xba01000000	                              mov edx, 1	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400771b	          0x4889c6	                            mov rsi, rax	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400771e	      0xe800000000	                          call 0x4007723	      3409	ldlang.c	FUNCTION_80	CALL_1
0x4007723	          0x4885c0	                           test rax, rax	      3410	ldlang.c	FUNCTION_80	IF_1
0x4007726	          0x4889c3	                            mov rbx, rax	      3409	ldlang.c	FUNCTION_80	CALL_1
0x4007729	            0x7465	                            je 0x4007790	      3410	ldlang.c	FUNCTION_80	IF_1
0x400772b	        0x807b1800	                cmp byte [rbx + 0x18], 0	      3412	ldlang.c	FUNCTION_80	IF_2
0x400772f	            0x7521	                           jne 0x4007752	      3412	ldlang.c	FUNCTION_80	IF_2
0x4007731	    0x48c743280000	               mov qword [rbx + 0x28], 0	      3415	ldlang.c	FUNCTION_80	IF_2
0x4007739	    0x488b3d000000	            mov rdi, qword [0x04007740] 	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x4007740	        0xc6431801	                mov byte [rbx + 0x18], 1	      3414	ldlang.c	FUNCTION_80	IF_2
0x4007744	        0x837f4001	               cmp dword [rdi + 0x40], 1	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x4007748	            0x743e	                            je 0x4007788	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x400774a	          0x4889de	                            mov rsi, rbx	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x400774d	      0xe800000000	                          call 0x4007752	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x4007752	      0xbf10000000	                           mov edi, 0x10	      3457	ldlang.c	FUNCTION_82	CALL_2
0x4007757	      0xe800000000	                          call 0x400775c	      3457	ldlang.c	FUNCTION_82	CALL_2
0x400775c	          0x4889c3	                            mov rbx, rax	      3457	ldlang.c	FUNCTION_82	CALL_2
0x400775f	    0x488b05000000	            mov rax, qword [0x04007766] 	      3458	ldlang.c	FUNCTION_82
0x4007766	          0x4889ef	                            mov rdi, rbp	      3459	ldlang.c	FUNCTION_82
0x4007769	        0x48894308	                mov qword [rbx + 8], rax	      3458	ldlang.c	FUNCTION_82
0x400776d	      0xe800000000	                          call 0x4007772	      3459	ldlang.c	FUNCTION_82
0x4007772	    0x48891d000000	            mov qword [0x04007779], rbx 	      3460	ldlang.c	FUNCTION_82
0x4007779	          0x488903	                    mov qword [rbx], rax	      3459	ldlang.c	FUNCTION_82
0x400777c	        0x4883c408	                              add rsp, 8	      3461	ldlang.c	FUNCTION_82
0x4007780	              0x5b	                                 pop rbx	      3461	ldlang.c	FUNCTION_82
0x4007781	              0x5d	                                 pop rbp	      3461	ldlang.c	FUNCTION_82
0x4007782	              0xc3	                                     ret	      3461	ldlang.c	FUNCTION_82
0x4007783	       0xf1f440000	                   nop dword [rax + rax]	      3461	ldlang.c	FUNCTION_82
0x4007788	        0x804b6420	              or byte [rbx + 0x64], 0x20	      3417	ldlang.c	FUNCTION_80	IF_2	IF_3
0x400778c	            0xebbc	                           jmp 0x400774a	      3417	ldlang.c	FUNCTION_80	IF_2	IF_3
0x400778e	            0x6690	                                     nop	      3417	ldlang.c	FUNCTION_80	IF_2	IF_3
0x4007790	            0x31ff	                            xor edi, edi	      3411	ldlang.c	FUNCTION_80	CALL_3
0x4007792	      0xba05000000	                              mov edx, 5	      3411	ldlang.c	FUNCTION_80	CALL_3
0x4007797	      0xbe00000000	                              mov esi, 0	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400779c	      0xe800000000	                          call 0x40077a1	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40077a1	          0x4889c7	                            mov rdi, rax	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40077a4	            0x31c0	                            xor eax, eax	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40077a6	      0xe800000000	                          call 0x40077ab	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40077ab	      0xe97bffffff	                           jmp 0x400772b	      3411	ldlang.c	FUNCTION_80	CALL_3
lang_clear_os_map	IF,3:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,1:WHILE,0	22
0x40077b0	    0x8b0d00000000	            mov ecx, dword [0x040077b6] 	      3955	ldlang.c	FUNCTION_89	IF_1
0x40077b6	            0x85c9	                           test ecx, ecx	      3955	ldlang.c	FUNCTION_89	IF_1
0x40077b8	            0x7556	                           jne 0x4007810	      3955	ldlang.c	FUNCTION_89	IF_1
0x40077ba	    0x488b05000000	            mov rax, qword [0x040077c1] 	      3958	ldlang.c	FUNCTION_89	FOR_1
0x40077c1	          0x4885c0	                           test rax, rax	      3958	ldlang.c	FUNCTION_89	FOR_1
0x40077c4	            0x743c	                            je 0x4007802	      3958	ldlang.c	FUNCTION_89	FOR_1
0x40077c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3958	ldlang.c	FUNCTION_89	FOR_1
0x40077d0	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      3964	ldlang.c	FUNCTION_89	FOR_1	IF_2
0x40077d6	            0x85d2	                           test edx, edx	      3964	ldlang.c	FUNCTION_89	FOR_1	IF_2
0x40077d8	            0x781f	                            js 0x40077f9	      3964	ldlang.c	FUNCTION_89	FOR_1	IF_2
0x40077da	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3967	ldlang.c	FUNCTION_89	FOR_1
0x40077de	          0x4885d2	                           test rdx, rdx	      3968	ldlang.c	FUNCTION_89	FOR_1	IF_3
0x40077e1	            0x7416	                            je 0x40077f9	      3968	ldlang.c	FUNCTION_89	FOR_1	IF_3
0x40077e3	    0x48c782080100	              mov qword [rdx + 0x108], 0	      3972	ldlang.c	FUNCTION_89	FOR_1
0x40077ee	    0x48c782100100	              mov qword [rdx + 0x110], 0	      3973	ldlang.c	FUNCTION_89	FOR_1
0x40077f9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3960	ldlang.c	FUNCTION_89	FOR_1
0x40077fd	          0x4885c0	                           test rax, rax	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4007800	            0x75ce	                           jne 0x40077d0	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4007802	    0xc70500000000	               mov dword [0x0400780c], 1	      3978	ldlang.c	FUNCTION_89
0x400780c	              0xc3	                                     ret	      3978	ldlang.c	FUNCTION_89
0x400780d	           0xf1f00	                         nop dword [rax]	      3978	ldlang.c	FUNCTION_89
0x4007810	            0xf3c3	                                     ret	      3978	ldlang.c	FUNCTION_89
ldlang_override_segment_assignment	IF,4:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0	43
0x40078b0	              0x55	                                push rbp	      5561	ldlang.c	FUNCTION_116
0x40078b1	              0x53	                                push rbx	      5561	ldlang.c	FUNCTION_116
0x40078b2	      0xb801000000	                              mov eax, 1	      5568	ldlang.c	FUNCTION_116	IF_1
0x40078b7	        0x4883ec08	                              sub rsp, 8	      5561	ldlang.c	FUNCTION_116
0x40078bb	          0x4585c0	                           test r8d, r8d	      5567	ldlang.c	FUNCTION_116	IF_1
0x40078be	            0x7551	                           jne 0x4007911	      5567	ldlang.c	FUNCTION_116	IF_1
0x40078c0	          0x4885d2	                           test rdx, rdx	      5571	ldlang.c	FUNCTION_116	IF_2
0x40078c3	            0x745b	                            je 0x4007920	      5571	ldlang.c	FUNCTION_116	IF_2
0x40078c5	          0x4885c9	                           test rcx, rcx	      5571	ldlang.c	FUNCTION_116	IF_2
0x40078c8	            0x7456	                            je 0x4007920	      5571	ldlang.c	FUNCTION_116	IF_2
0x40078ca	    0x8b3500000000	            mov esi, dword [0x040078d0] 	      5576	ldlang.c	FUNCTION_116	IF_3
0x40078d0	            0x85f6	                           test esi, esi	      5576	ldlang.c	FUNCTION_116	IF_3
0x40078d2	            0x740b	                            je 0x40078df	      5576	ldlang.c	FUNCTION_116	IF_3
0x40078d4	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      5577	ldlang.c	FUNCTION_116	IF_3
0x40078d7	          0x337120	             xor esi, dword [rcx + 0x20]	      5577	ldlang.c	FUNCTION_116	IF_3
0x40078da	          0x83e610	                           and esi, 0x10	      5577	ldlang.c	FUNCTION_116	IF_3
0x40078dd	            0x7532	                           jne 0x4007911	      5577	ldlang.c	FUNCTION_116	IF_3
0x40078df	          0x488b3a	                    mov rdi, qword [rdx]	      5584	ldlang.c	FUNCTION_116	CALL_1
0x40078e2	          0x4889cb	                            mov rbx, rcx	      5584	ldlang.c	FUNCTION_116	CALL_1
0x40078e5	            0x31f6	                            xor esi, esi	      5584	ldlang.c	FUNCTION_116	CALL_1
0x40078e7	      0xe854a7ffff	call sym.lang_output_section_statement_lookup.constprop.62	      5584	ldlang.c	FUNCTION_116	CALL_1
0x40078ec	          0x488b3b	                    mov rdi, qword [rbx]	      5585	ldlang.c	FUNCTION_116	CALL_2
0x40078ef	          0x4889c5	                            mov rbp, rax	      5584	ldlang.c	FUNCTION_116	CALL_1
0x40078f2	            0x31f6	                            xor esi, esi	      5585	ldlang.c	FUNCTION_116	CALL_2
0x40078f4	      0xe847a7ffff	call sym.lang_output_section_statement_lookup.constprop.62	      5585	ldlang.c	FUNCTION_116	CALL_2
0x40078f9	          0x4885ed	                           test rbp, rbp	      5588	ldlang.c	FUNCTION_116	IF_4
0x40078fc	            0x7422	                            je 0x4007920	      5588	ldlang.c	FUNCTION_116	IF_4
0x40078fe	          0x4885c0	                           test rax, rax	      5588	ldlang.c	FUNCTION_116	IF_4
0x4007901	            0x741d	                            je 0x4007920	      5588	ldlang.c	FUNCTION_116	IF_4
0x4007903	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5595	ldlang.c	FUNCTION_116
0x4007907	        0x48394540	            cmp qword [rbp + 0x40], rax 	      5595	ldlang.c	FUNCTION_116
0x400790b	           0xf95c0	                                setne al	      5595	ldlang.c	FUNCTION_116
0x400790e	           0xfb6c0	                           movzx eax, al	      5595	ldlang.c	FUNCTION_116
0x4007911	        0x4883c408	                              add rsp, 8	      5596	ldlang.c	FUNCTION_116
0x4007915	              0x5b	                                 pop rbx	      5596	ldlang.c	FUNCTION_116
0x4007916	              0x5d	                                 pop rbp	      5596	ldlang.c	FUNCTION_116
0x4007917	              0xc3	                                     ret	      5596	ldlang.c	FUNCTION_116
0x4007918	     0xf1f84000000	                   nop dword [rax + rax]	      5596	ldlang.c	FUNCTION_116
0x4007920	        0x4883c408	                              add rsp, 8	      5596	ldlang.c	FUNCTION_116
0x4007924	            0x31c0	                            xor eax, eax	      5568	ldlang.c	FUNCTION_116	IF_1
0x4007926	              0x5b	                                 pop rbx	      5596	ldlang.c	FUNCTION_116
0x4007927	              0x5d	                                 pop rbp	      5596	ldlang.c	FUNCTION_116
0x4007928	              0xc3	                                     ret	      5596	ldlang.c	FUNCTION_116
lang_add_entry	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	10
0x400ad70	    0x48833d000000	               cmp qword [0x0400ad78], 0	      7493	ldlang.c	FUNCTION_166	IF_1
0x400ad78	            0x740e	                            je 0x400ad88	      7493	ldlang.c	FUNCTION_166	IF_1
0x400ad7a	            0x85f6	                           test esi, esi	      7493	ldlang.c	FUNCTION_166	IF_1
0x400ad7c	            0x750a	                           jne 0x400ad88	      7493	ldlang.c	FUNCTION_166	IF_1
0x400ad7e	    0x8b0500000000	            mov eax, dword [0x0400ad84] 	      7494	ldlang.c	FUNCTION_166	IF_1
0x400ad84	            0x85c0	                           test eax, eax	      7494	ldlang.c	FUNCTION_166	IF_1
0x400ad86	            0x750d	                           jne 0x400ad95	      7494	ldlang.c	FUNCTION_166	IF_1
0x400ad88	    0x48893d000000	            mov qword [0x0400ad8f], rdi 	      7496	ldlang.c	FUNCTION_166	IF_1
0x400ad8f	    0x893500000000	            mov dword [0x0400ad95], esi 	      7497	ldlang.c	FUNCTION_166	IF_1
0x400ad95	            0xf3c3	                                     ret	      7497	ldlang.c	FUNCTION_166	IF_1
lang_default_entry	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	2
0x400ada0	    0x48893d000000	            mov qword [0x0400ada7], rdi 	      7508	ldlang.c	FUNCTION_167
0x400ada7	              0xc3	                                     ret	      7508	ldlang.c	FUNCTION_167
lang_enter_group	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0	23
0x400b790	              0x53	                                push rbx	      7714	ldlang.c	FUNCTION_182
0x400b791	    0x488b1d000000	            mov rbx, qword [0x0400b798] 	      7717	ldlang.c	FUNCTION_182
0x400b798	      0xbf20000000	                           mov edi, 0x20	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400b79d	      0xe800000000	                          call 0x400b7a2	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400b7a2	    0xc740080d0000	                mov dword [rax + 8], 0xd	      1040	ldlang.c	FUNCTION_33
0x400b7a9	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400b7b0	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400b7b4	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400b7b7	        0x488d5010	                   lea rdx, [rax + 0x10]	      1010	ldlang.c	FUNCTION_30
0x400b7bb	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400b7bf	    0x48c740100000	               mov qword [rax + 0x10], 0	      1009	ldlang.c	FUNCTION_30
0x400b7c7	        0x48895018	             mov qword [rax + 0x18], rdx	      1010	ldlang.c	FUNCTION_30
0x400b7cb	    0x488b05000000	            mov rax, qword [0x0400b7d2] 	      1016	ldlang.c	FUNCTION_31	IF_1
0x400b7d2	    0x483d00000000	                              cmp rax, 0	      1016	ldlang.c	FUNCTION_31	IF_1
0x400b7d8	            0x731e	                           jae 0x400b7f8	      1016	ldlang.c	FUNCTION_31	IF_1
0x400b7da	        0x488d4808	                      lea rcx, [rax + 8]	      1018	ldlang.c	FUNCTION_31
0x400b7de	    0x48890d000000	            mov qword [0x0400b7e5], rcx 	      1018	ldlang.c	FUNCTION_31
0x400b7e5	    0x488b0d000000	            mov rcx, qword [0x0400b7ec] 	      1018	ldlang.c	FUNCTION_31
0x400b7ec	          0x488908	                    mov qword [rax], rcx	      1018	ldlang.c	FUNCTION_31
0x400b7ef	    0x488915000000	            mov qword [0x0400b7f6], rdx 	      1019	ldlang.c	FUNCTION_31
0x400b7f6	              0x5b	                                 pop rbx	      7720	ldlang.c	FUNCTION_182
0x400b7f7	              0xc3	                                     ret	      7720	ldlang.c	FUNCTION_182
0x400b7f8	      0xe800000000	                          call 0x400b7fd	      7720	ldlang.c	FUNCTION_182
exp_init_os	IF,1:ELSE,0:SWITCH,2:functions,0:CALL,10:DO,0:FOR,0:WHILE,0	44
0x4002160	              0x53	                                push rbx	      2205	ldlang.c	FUNCTION_56
0x4002161	          0x4889fb	                            mov rbx, rdi	      2205	ldlang.c	FUNCTION_56
0x4002164	        0x837b1008	               cmp dword [rbx + 0x10], 8	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4002168	            0x7718	                            ja 0x4002182	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x400216a	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x400216d	    0xff24c5000000	                       jmp qword [rax*8]	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4002174	         0xf1f4000	                         nop dword [rax]	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4002178	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      2230	ldlang.c	FUNCTION_56	SWITCH_1	CALL_8
0x400217c	        0x837b1008	               cmp dword [rbx + 0x10], 8	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4002180	            0x76e8	                           jbe 0x400216a	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4002182	              0x5b	                                 pop rbx	      2252	ldlang.c	FUNCTION_56
0x4002183	              0xc3	                                     ret	      2252	ldlang.c	FUNCTION_56
0x4002184	         0xf1f4000	                         nop dword [rax]	      2252	ldlang.c	FUNCTION_56
0x4002188	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2215	ldlang.c	FUNCTION_56	SWITCH_1	CALL_2
0x400218c	      0xe8cfffffff	                    call sym.exp_init_os	      2215	ldlang.c	FUNCTION_56	SWITCH_1	CALL_2
0x4002191	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2216	ldlang.c	FUNCTION_56	SWITCH_1	CALL_3
0x4002195	            0xebcd	                           jmp 0x4002164	      2217	ldlang.c	FUNCTION_56	SWITCH_1
0x4002197	    0x660f1f840000	                    nop word [rax + rax]	      2217	ldlang.c	FUNCTION_56	SWITCH_1
0x40021a0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2220	ldlang.c	FUNCTION_56	SWITCH_1	CALL_4
0x40021a4	      0xe8b7ffffff	                    call sym.exp_init_os	      2220	ldlang.c	FUNCTION_56	SWITCH_1	CALL_4
0x40021a9	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2221	ldlang.c	FUNCTION_56	SWITCH_1	CALL_5
0x40021ad	      0xe8aeffffff	                    call sym.exp_init_os	      2221	ldlang.c	FUNCTION_56	SWITCH_1	CALL_5
0x40021b2	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      2222	ldlang.c	FUNCTION_56	SWITCH_1	CALL_6
0x40021b6	            0xebac	                           jmp 0x4002164	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021b8	     0xf1f84000000	                   nop dword [rax + rax]	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021c0	            0x8b03	                    mov eax, dword [rbx]	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021c2	    0x8d88bffeffff	                  lea ecx, [rax - 0x141]	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021c8	          0x83f903	                              cmp ecx, 3	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021cb	            0x77b5	                            ja 0x4002182	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021cd	      0xb801000000	                              mov eax, 1	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021d2	          0x48d3e0	                             shl rax, cl	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021d5	            0xa80d	                            test al, 0xd	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021d7	            0x74a9	                            je 0x4002182	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40021d9	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x40021dd	            0x31f6	                            xor esi, esi	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x40021df	      0xe85cfeffff	call sym.lang_output_section_statement_lookup.constprop.62	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x40021e4	          0x4885c0	                           test rax, rax	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x40021e7	            0x7499	                            je 0x4002182	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x40021e9	      0x4883783800	               cmp qword [rax + 0x38], 0	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x40021ee	            0x7592	                           jne 0x4002182	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x40021f0	              0x5b	                                 pop rbx	      2252	ldlang.c	FUNCTION_56
0x40021f1	            0x31f6	                            xor esi, esi	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
0x40021f3	          0x4889c7	                            mov rdi, rax	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
0x40021f6	            0xeb08	                         jmp sym.init_os	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
sort_sections_by_vma	IF,4:ELSE,3:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	17
0x4000180	          0x488b0f	                    mov rcx, qword [rdi]	      4761	ldlang.c	FUNCTION_111
0x4000183	          0x488b16	                    mov rdx, qword [rsi]	      4762	ldlang.c	FUNCTION_111
0x4000186	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      4764	ldlang.c	FUNCTION_111	IF_1
0x400018a	        0x48394128	            cmp qword [rcx + 0x28], rax 	      4764	ldlang.c	FUNCTION_111	IF_1
0x400018e	            0x7220	                            jb 0x40001b0	      4764	ldlang.c	FUNCTION_111	IF_1
0x4000190	      0xb801000000	                              mov eax, 1	      4767	ldlang.c	FUNCTION_111	ELSE_1	IF_2
0x4000195	            0x771e	                            ja 0x40001b5	      4766	ldlang.c	FUNCTION_111	ELSE_1	IF_2
0x4000197	          0x8b4208	                mov eax, dword [rdx + 8]	      4768	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x400019a	          0x394108	                cmp dword [rcx + 8], eax	      4768	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x400019d	      0xbaffffffff	                     mov edx, 0xffffffff	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001a2	           0xf97c0	                                 seta al	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001a5	           0xfb6c0	                           movzx eax, al	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001a8	           0xf42c2	                          cmovb eax, edx	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001ab	              0xc3	                                     ret	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001ac	         0xf1f4000	                         nop dword [rax]	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001b0	      0xb8ffffffff	                     mov eax, 0xffffffff	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001b5	            0xf3c3	                                     ret	      4774	ldlang.c	FUNCTION_111
lang_ld_feature	IF,2:ELSE,1:SWITCH,0:functions,0:CALL,5:DO,0:FOR,0:WHILE,3	58
0x400ee70	          0x803f00	                       cmp byte [rdi], 0	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400ee73	     0xf84b7000000	                            je 0x400ef30	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400ee79	            0x4154	                                push r12	      8730	ldlang.c	FUNCTION_207
0x400ee7b	              0x55	                                push rbp	      8730	ldlang.c	FUNCTION_207
0x400ee7c	          0x4989fc	                            mov r12, rdi	      8730	ldlang.c	FUNCTION_207
0x400ee7f	              0x53	                                push rbx	      8730	ldlang.c	FUNCTION_207
0x400ee80	          0x4c89e3	                            mov rbx, r12	      8730	ldlang.c	FUNCTION_207
0x400ee83	            0xeb07	                           jmp 0x400ee8c	      8730	ldlang.c	FUNCTION_207
0x400ee85	           0xf1f00	                         nop dword [rax]	      8730	ldlang.c	FUNCTION_207
0x400ee88	        0x4883c301	                              add rbx, 1	      8738	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2
0x400ee8c	           0xfb603	                   movzx eax, byte [rbx]	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400ee8f	            0x3c2c	                            cmp al, 0x2c	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400ee91	            0x74f5	                            je 0x400ee88	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400ee93	           0xfb6d0	                           movzx edx, al	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400ee96	    0xf68412000000	            test byte [rdx + rdx], 0x40 	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400ee9e	            0x75e8	                           jne 0x400ee88	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400eea0	            0x84c0	                             test al, al	      8739	ldlang.c	FUNCTION_207	WHILE_1	IF_1
0x400eea2	            0x7463	                            je 0x400ef07	      8739	ldlang.c	FUNCTION_207	WHILE_1	IF_1
0x400eea4	         0xfb66b01	               movzx ebp, byte [rbx + 1]	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eea8	        0x4c8d6301	                      lea r12, [rbx + 1]	      8741	ldlang.c	FUNCTION_207	WHILE_1
0x400eeac	          0x4084ed	                           test bpl, bpl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eeaf	            0x7515	                           jne 0x400eec6	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eeb1	            0xeb27	                           jmp 0x400eeda	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eeb3	       0xf1f440000	                   nop dword [rax + rax]	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eeb8	        0x4983c401	                              add r12, 1	      8743	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3
0x400eebc	      0x410fb62c24	                   movzx ebp, byte [r12]	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eec1	          0x4084ed	                           test bpl, bpl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eec4	            0x7414	                            je 0x400eeda	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eec6	        0x4080fd2c	                           cmp bpl, 0x2c	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eeca	            0x740e	                            je 0x400eeda	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eecc	        0x400fb6c5	                          movzx eax, bpl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eed0	    0xf68400000000	            test byte [rax + rax], 0x40 	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eed8	            0x74de	                            je 0x400eeb8	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400eeda	      0x41c6042400	                       mov byte [r12], 0	      8745	ldlang.c	FUNCTION_207	WHILE_1
0x400eedf	      0xbe00000000	                              mov esi, 0	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400eee4	          0x4889df	                            mov rdi, rbx	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400eee7	      0xe800000000	                          call 0x400eeec	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400eeec	            0x85c0	                           test eax, eax	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400eeee	            0x7520	                           jne 0x400ef10	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400eef0	    0xc70500000000	               mov dword [0x0400eefa], 1	      8747	ldlang.c	FUNCTION_207	WHILE_1	IF_2
0x400eefa	          0x4084ed	                           test bpl, bpl	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400eefd	        0x41882c24	                     mov byte [r12], bpl	      8750	ldlang.c	FUNCTION_207	WHILE_1
0x400ef01	     0xf8579ffffff	                           jne 0x400ee80	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400ef07	              0x5b	                                 pop rbx	      8753	ldlang.c	FUNCTION_207
0x400ef08	              0x5d	                                 pop rbp	      8753	ldlang.c	FUNCTION_207
0x400ef09	            0x415c	                                 pop r12	      8753	ldlang.c	FUNCTION_207
0x400ef0b	              0xc3	                                     ret	      8753	ldlang.c	FUNCTION_207
0x400ef0c	         0xf1f4000	                         nop dword [rax]	      8753	ldlang.c	FUNCTION_207
0x400ef10	            0x31ff	                            xor edi, edi	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef12	      0xba05000000	                              mov edx, 5	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef17	      0xbe00000000	                              mov esi, 0	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef1c	      0xe800000000	                          call 0x400ef21	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef21	          0x4889de	                            mov rsi, rbx	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef24	          0x4889c7	                            mov rdi, rax	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef27	            0x31c0	                            xor eax, eax	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef29	      0xe800000000	                          call 0x400ef2e	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef2e	            0xebca	                           jmp 0x400eefa	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ef30	            0xf3c3	                                     ret	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
lang_startup	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0	18
0x400afa0	    0x488b05000000	            mov rax, qword [0x0400afa7] 	      7600	ldlang.c	FUNCTION_175	IF_1
0x400afa7	              0x53	                                push rbx	      7599	ldlang.c	FUNCTION_175
0x400afa8	          0x4889fb	                            mov rbx, rdi	      7599	ldlang.c	FUNCTION_175
0x400afab	      0x4883781000	               cmp qword [rax + 0x10], 0	      7600	ldlang.c	FUNCTION_175	IF_1
0x400afb0	            0x7422	                            je 0x400afd4	      7600	ldlang.c	FUNCTION_175	IF_1
0x400afb2	      0xba05000000	                              mov edx, 5	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400afb7	      0xbe00000000	                              mov esi, 0	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400afbc	            0x31ff	                            xor edi, edi	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400afbe	      0xe800000000	                          call 0x400afc3	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400afc3	          0x4889c7	                            mov rdi, rax	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400afc6	            0x31c0	                            xor eax, eax	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400afc8	      0xe800000000	                          call 0x400afcd	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400afcd	    0x488b05000000	            mov rax, qword [0x0400afd4] 	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400afd4	        0x80484904	                 or byte [rax + 0x49], 4	      7606	ldlang.c	FUNCTION_175
0x400afd8	        0x48895810	             mov qword [rax + 0x10], rbx	      7604	ldlang.c	FUNCTION_175
0x400afdc	        0x48895818	             mov qword [rax + 0x18], rbx	      7605	ldlang.c	FUNCTION_175
0x400afe0	              0x5b	                                 pop rbx	      7607	ldlang.c	FUNCTION_175
0x400afe1	              0xc3	                                     ret	      7607	ldlang.c	FUNCTION_175
strip_excluded_output_sections	IF,7:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,2:WHILE,0	88
0x400a130	        0x4883ec08	                              sub rsp, 8	      3885	ldlang.c	FUNCTION_88
0x400a134	    0x833d00000000	               cmp dword [0x0400a13b], 1	      3889	ldlang.c	FUNCTION_88	IF_1
0x400a13b	            0x743b	                            je 0x400a178	      3889	ldlang.c	FUNCTION_88	IF_1
0x400a13d	    0x488b35000000	            mov rsi, qword [0x0400a144] 	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a144	          0x4531c9	                            xor r9d, r9d	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a147	          0x4531c0	                            xor r8d, r8d	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a14a	            0x31c9	                            xor ecx, ecx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a14c	            0x31d2	                            xor edx, edx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a14e	      0xbf00000000	                              mov edi, 0	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a153	    0xc70500000000	               mov dword [0x0400a15d], 1	      3891	ldlang.c	FUNCTION_88	IF_1
0x400a15d	    0xc70500000000	               mov dword [0x0400a167], 0	      3892	ldlang.c	FUNCTION_88	IF_1
0x400a167	    0x830500000000	               add dword [0x0400a16e], 1	      5601	ldlang.c	FUNCTION_117
0x400a16e	      0xe8fda0ffff	           call sym.lang_size_sections_1	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a173	      0xe800000000	                          call 0x400a178	      3894	ldlang.c	FUNCTION_88	IF_1	CALL_2
0x400a178	    0x440fb6150000	          movzx r10d, byte [0x0400a180] 	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a180	    0x488b0d000000	            mov rcx, qword [0x0400a187] 	      3897	ldlang.c	FUNCTION_88	FOR_1
0x400a187	    0x4c8b0d000000	              mov r9, qword [0x0400a18e]	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a18e	        0x4183e208	                             and r10d, 8	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a192	          0x4885c9	                           test rcx, rcx	      3897	ldlang.c	FUNCTION_88	FOR_1
0x400a195	            0x744a	                            je 0x400a1e1	      3897	ldlang.c	FUNCTION_88	FOR_1
0x400a197	    0x660f1f840000	                    nop word [rax + rax]	      3897	ldlang.c	FUNCTION_88	FOR_1
0x400a1a0	    0x8b8184000000	            mov eax, dword [rcx + 0x84] 	      3904	ldlang.c	FUNCTION_88	FOR_1	IF_2
0x400a1a6	            0x85c0	                           test eax, eax	      3904	ldlang.c	FUNCTION_88	FOR_1	IF_2
0x400a1a8	            0x782e	                            js 0x400a1d8	      3904	ldlang.c	FUNCTION_88	FOR_1	IF_2
0x400a1aa	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      3907	ldlang.c	FUNCTION_88	FOR_1
0x400a1ae	          0x4885f6	                           test rsi, rsi	      3908	ldlang.c	FUNCTION_88	FOR_1	IF_3
0x400a1b1	            0x7425	                            je 0x400a1d8	      3908	ldlang.c	FUNCTION_88	FOR_1	IF_3
0x400a1b3	      0x48837e4000	               cmp qword [rsi + 0x40], 0	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1b8	            0x751e	                           jne 0x400a1d8	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1ba	          0x8b7e20	            mov edi, dword [rsi + 0x20] 	      3912	ldlang.c	FUNCTION_88	FOR_1
0x400a1bd	    0xf7c700002000	                      test edi, 0x200000	      3912	ldlang.c	FUNCTION_88	FOR_1
0x400a1c3	            0x7513	                           jne 0x400a1d8	      3912	ldlang.c	FUNCTION_88	FOR_1
0x400a1c5	        0x4c8b4610	              mov r8, qword [rsi + 0x10]	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1c9	          0x4d85c0	                             test r8, r8	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1cc	            0x7418	                            je 0x400a1e6	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1ce	        0x493b7018	              cmp rsi, qword [r8 + 0x18]	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1d2	            0x741b	                            je 0x400a1ef	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1d4	         0xf1f4000	                         nop dword [rax]	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1d8	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	      3899	ldlang.c	FUNCTION_88	FOR_1
0x400a1dc	          0x4885c9	                           test rcx, rcx	      3897	ldlang.c	FUNCTION_88	FOR_1
0x400a1df	            0x75bf	                           jne 0x400a1a0	      3897	ldlang.c	FUNCTION_88	FOR_1
0x400a1e1	        0x4883c408	                              add rsp, 8	      3945	ldlang.c	FUNCTION_88
0x400a1e5	              0xc3	                                     ret	      3945	ldlang.c	FUNCTION_88
0x400a1e6	    0x493bb1980000	              cmp rsi, qword [r9 + 0x98]	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1ed	            0x75e9	                           jne 0x400a1d8	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400a1ef	    0x488b86080100	           mov rax, qword [rsi + 0x108] 	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x400a1f6	          0x4885c0	                           test rax, rax	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x400a1f9	            0x7421	                            je 0x400a21c	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x400a1fb	          0x4584d2	                         test r10b, r10b	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x400a1fe	            0x7560	                           jne 0x400a260	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x400a200	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a203	          0xf6c680	                           test dh, 0x80	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a206	            0x7508	                           jne 0x400a210	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a208	    0x81e200001000	                       and edx, 0x100000	      3926	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a20e	            0x75c8	                           jne 0x400a1d8	      3926	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a210	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400a217	          0x4885c0	                           test rax, rax	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400a21a	            0x75e4	                           jne 0x400a200	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400a21c	     0xfb681900000	           movzx eax, byte [rcx + 0x90] 	      3938	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x400a223	            0xa810	                           test al, 0x10	      3938	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x400a225	            0x7509	                           jne 0x400a230	      3938	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x400a227	          0x83c808	                               or eax, 8	      3939	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x400a22a	    0x888190000000	               mov byte [rcx + 0x90], al	      3939	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x400a230	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a234	    0x81cf00800000	                          or edi, 0x8000	      3940	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a23a	          0x897e20	             mov dword [rsi + 0x20], edi	      3940	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a23d	          0x4885c0	                           test rax, rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a240	            0x743e	                            je 0x400a280	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a242	          0x4d85c0	                             test r8, r8	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a245	        0x4c894010	              mov qword [rax + 0x10], r8	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a249	            0x7445	                            je 0x400a290	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a24b	        0x49894018	              mov qword [r8 + 0x18], rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a24f	    0x4183a9a00000	                sub dword [r9 + 0xa0], 1	      3942	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a257	      0xe97cffffff	                           jmp 0x400a1d8	      3942	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a25c	         0xf1f4000	                         nop dword [rax]	      3942	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a260	        0xf6402180	           test byte [rax + 0x21], 0x80 	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a264	     0xf846effffff	                            je 0x400a1d8	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400a26a	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400a271	          0x4885c0	                           test rax, rax	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400a274	            0x75ea	                           jne 0x400a260	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400a276	            0xeba4	                           jmp 0x400a21c	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400a278	     0xf1f84000000	                   nop dword [rax + rax]	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400a280	          0x4d85c0	                             test r8, r8	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a283	    0x4d8981900000	               mov qword [r9 + 0x90], r8	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a28a	            0x75bf	                           jne 0x400a24b	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a28c	         0xf1f4000	                         nop dword [rax]	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a290	    0x498981980000	              mov qword [r9 + 0x98], rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400a297	            0xebb6	                           jmp 0x400a24f	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
lang_leave_overlay_section	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,17:DO,0:FOR,1:WHILE,0	148
0x400bac0	            0x4155	                                push r13	      7998	ldlang.c	FUNCTION_190
0x400bac2	            0x4154	                                push r12	      7998	ldlang.c	FUNCTION_190
0x400bac4	          0x4989fd	                            mov r13, rdi	      7998	ldlang.c	FUNCTION_190
0x400bac7	              0x55	                                push rbp	      7998	ldlang.c	FUNCTION_190
0x400bac8	              0x53	                                push rbx	      7998	ldlang.c	FUNCTION_190
0x400bac9	          0x4989f4	                            mov r12, rsi	      7998	ldlang.c	FUNCTION_190
0x400bacc	        0x4883ec08	                              sub rsp, 8	      7998	ldlang.c	FUNCTION_190
0x400bad0	    0x488b05000000	            mov rax, qword [0x0400bad7] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bad7	    0x488b2d000000	            mov rbp, qword [0x0400bade] 	      8004	ldlang.c	FUNCTION_190
0x400bade	          0x4885c0	                           test rax, rax	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bae1	        0x488b5d30	            mov rbx, qword [rbp + 0x30] 	      8004	ldlang.c	FUNCTION_190
0x400bae5	    0x48c745480000	               mov qword [rbp + 0x48], 0	      7635	ldlang.c	FUNCTION_177	CALL_1
0x400baed	            0x7432	                            je 0x400bb21	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400baef	    0x41b800000000	                              mov r8d, 0	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400baf5	          0x4889c2	                            mov rdx, rax	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400baf8	     0xf1f84000000	                   nop dword [rax + rax]	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bb00	          0x488b32	                    mov rsi, qword [rdx]	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bb03	      0xb90a000000	                            mov ecx, 0xa	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bb08	          0x4c89c7	                             mov rdi, r8	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bb0b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bb0d	            0x7431	                            je 0x400bb40	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bb0f	        0x488b5208	                mov rdx, qword [rdx + 8]	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bb13	          0x4885d2	                           test rdx, rdx	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bb16	            0x75e8	                           jne 0x400bb00	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bb18	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb1c	          0x4885c0	                           test rax, rax	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb1f	            0x75d4	                           jne 0x400baf5	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb21	            0x31f6	                            xor esi, esi	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb23	      0xbf00000000	                              mov edi, 0	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb28	      0xe80386ffff	call sym.lang_memory_region_lookup.part.38	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb2d	    0x488b15000000	            mov rdx, qword [0x0400bb34] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb34	            0xeb0d	                           jmp 0x400bb43	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bb40	          0x4889ea	                            mov rdx, rbp	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bb43	        0x48894540	            mov qword [rbp + 0x40], rax 	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400bb47	    0x488b05000000	            mov rax, qword [0x0400bb4e] 	      1025	ldlang.c	FUNCTION_32	IF_1
0x400bb4e	        0x4c896a50	             mov qword [rdx + 0x50], r13	      7663	ldlang.c	FUNCTION_178
0x400bb52	        0x4c896270	             mov qword [rdx + 0x70], r12	      7664	ldlang.c	FUNCTION_178
0x400bb56	    0x483d00000000	                              cmp rax, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x400bb5c	     0xf86a4010000	                           jbe 0x400bd06	      1025	ldlang.c	FUNCTION_32	IF_1
0x400bb62	        0x488d50f8	                      lea rdx, [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x400bb66	        0x488b40f8	                mov rax, qword [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x400bb6a	          0x4889df	                            mov rdi, rbx	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bb6d	    0x488915000000	            mov qword [0x0400bb74], rdx 	      1027	ldlang.c	FUNCTION_32
0x400bb74	    0x488905000000	            mov qword [0x0400bb7b], rax 	      1027	ldlang.c	FUNCTION_32
0x400bb7b	      0xe800000000	                          call 0x400bb80	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bb80	        0x488d7801	                      lea rdi, [rax + 1]	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bb84	      0xe800000000	                          call 0x400bb89	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bb89	          0x4889c5	                            mov rbp, rax	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bb8c	           0xfb603	                   movzx eax, byte [rbx]	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bb8f	            0x84c0	                             test al, al	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bb91	     0xf8467010000	                            je 0x400bcfe	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bb97	          0x4889da	                            mov rdx, rbx	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bb9a	          0x4889e9	                            mov rcx, rbp	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bb9d	            0xeb10	                           jmp 0x400bbaf	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bb9f	              0x90	                                     nop	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bba0	            0x3c5f	                            cmp al, 0x5f	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x400bba2	            0x7418	                            je 0x400bbbc	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x400bba4	        0x4883c201	                              add rdx, 1	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bba8	           0xfb602	                   movzx eax, byte [rdx]	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bbab	            0x84c0	                             test al, al	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bbad	            0x741e	                            je 0x400bbcd	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bbaf	           0xfb6f0	                           movzx esi, al	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x400bbb2	    0xf68436000000	            test byte [rsi + rsi], 0x8c 	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x400bbba	            0x74e4	                            je 0x400bba0	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x400bbbc	        0x4883c201	                              add rdx, 1	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bbc0	            0x8801	                      mov byte [rcx], al	      8018	ldlang.c	FUNCTION_190	FOR_1	IF_1
0x400bbc2	        0x4883c101	                              add rcx, 1	      8018	ldlang.c	FUNCTION_190	FOR_1	IF_1
0x400bbc6	           0xfb602	                   movzx eax, byte [rdx]	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bbc9	            0x84c0	                             test al, al	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bbcb	            0x75e2	                           jne 0x400bbaf	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400bbcd	          0xc60100	                       mov byte [rcx], 0	      8019	ldlang.c	FUNCTION_190
0x400bbd0	          0x4889ef	                            mov rdi, rbp	      8021	ldlang.c	FUNCTION_190	CALL_6
0x400bbd3	      0xe800000000	                          call 0x400bbd8	      8021	ldlang.c	FUNCTION_190	CALL_6
0x400bbd8	        0x488d780e	                    lea rdi, [rax + 0xe]	      8021	ldlang.c	FUNCTION_190	CALL_6
0x400bbdc	      0xe800000000	                          call 0x400bbe1	      8021	ldlang.c	FUNCTION_190	CALL_6
0x400bbe1	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bbe4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bbe9	          0x4989c4	                            mov r12, rax	      8021	ldlang.c	FUNCTION_190	CALL_6
0x400bbec	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bbf3	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bbf6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bbfb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bbfd	      0xe800000000	                          call 0x400bc02	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bc02	          0x4889de	                            mov rsi, rbx	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400bc05	      0xbf44010000	                          mov edi, 0x144	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400bc0a	      0xe800000000	                          call 0x400bc0f	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400bc0f	            0x31d2	                            xor edx, edx	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400bc11	          0x4889c6	                            mov rsi, rax	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400bc14	          0x4c89e7	                            mov rdi, r12	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400bc17	      0xe800000000	                          call 0x400bc1c	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400bc1c	    0x4c8b25000000	            mov r12, qword [0x0400bc23] 	      7586	ldlang.c	FUNCTION_173
0x400bc23	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400bc28	          0x4989c5	                            mov r13, rax	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400bc2b	      0xe800000000	                          call 0x400bc30	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400bc30	    0xc74008010000	                  mov dword [rax + 8], 1	      1040	ldlang.c	FUNCTION_33
0x400bc37	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400bc3e	          0x4889ef	                            mov rdi, rbp	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400bc41	      0x498b542408	                mov rdx, qword [r12 + 8]	      7673	ldlang.c	FUNCTION_179
0x400bc46	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400bc49	      0x4989442408	                mov qword [r12 + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400bc4e	        0x4c896810	             mov qword [rax + 0x10], r13	      7587	ldlang.c	FUNCTION_173
0x400bc52	      0xe800000000	                          call 0x400bc57	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400bc57	        0x488d780d	                    lea rdi, [rax + 0xd]	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400bc5b	      0xe800000000	                          call 0x400bc60	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400bc60	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bc63	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bc68	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bc6f	          0x4989c4	                            mov r12, rax	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400bc72	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bc75	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bc7a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bc7c	      0xe800000000	                          call 0x400bc81	        33	stdio2.h	FUNCTION_228	CALL_1
0x400bc81	          0x4889de	                            mov rsi, rbx	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bc84	      0xbf41010000	                          mov edi, 0x141	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bc89	      0xe800000000	                          call 0x400bc8e	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bc8e	          0x4889de	                            mov rsi, rbx	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bc91	          0x4989c5	                            mov r13, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bc94	      0xbf44010000	                          mov edi, 0x144	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bc99	      0xe800000000	                          call 0x400bc9e	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bc9e	          0x4c89ea	                            mov rdx, r13	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bca1	          0x4889c6	                            mov rsi, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bca4	      0xbf2b000000	                           mov edi, 0x2b	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bca9	      0xe800000000	                          call 0x400bcae	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bcae	            0x31d2	                            xor edx, edx	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bcb0	          0x4c89e7	                            mov rdi, r12	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bcb3	          0x4889c6	                            mov rsi, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bcb6	      0xe800000000	                          call 0x400bcbb	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bcbb	    0x488b1d000000	            mov rbx, qword [0x0400bcc2] 	      7586	ldlang.c	FUNCTION_173
0x400bcc2	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400bcc7	          0x4989c4	                            mov r12, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400bcca	      0xe800000000	                          call 0x400bccf	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400bccf	    0xc74008010000	                  mov dword [rax + 8], 1	      1040	ldlang.c	FUNCTION_33
0x400bcd6	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400bcdd	          0x4889ef	                            mov rdi, rbp	      8035	ldlang.c	FUNCTION_190	CALL_17
0x400bce0	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400bce4	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400bce7	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400bceb	        0x4c896010	             mov qword [rax + 0x10], r12	      7587	ldlang.c	FUNCTION_173
0x400bcef	        0x4883c408	                              add rsp, 8	      8036	ldlang.c	FUNCTION_190
0x400bcf3	              0x5b	                                 pop rbx	      8036	ldlang.c	FUNCTION_190
0x400bcf4	              0x5d	                                 pop rbp	      8036	ldlang.c	FUNCTION_190
0x400bcf5	            0x415c	                                 pop r12	      8036	ldlang.c	FUNCTION_190
0x400bcf7	            0x415d	                                 pop r13	      8036	ldlang.c	FUNCTION_190
0x400bcf9	      0xe900000000	                           jmp 0x400bcfe	      8035	ldlang.c	FUNCTION_190	CALL_17
0x400bcfe	          0x4889e9	                            mov rcx, rbp	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bd01	      0xe9c7feffff	                           jmp 0x400bbcd	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400bd06	      0xe800000000	                          call 0x400bd0b	      8014	ldlang.c	FUNCTION_190	CALL_3
lang_print_memory_usage	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,1:WHILE,0	124
0x400ef40	              0x55	                                push rbp	      8774	ldlang.c	FUNCTION_209
0x400ef41	              0x53	                                push rbx	      8774	ldlang.c	FUNCTION_209
0x400ef42	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400ef44	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400ef49	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400ef4e	        0x4883ec08	                              sub rsp, 8	      8774	ldlang.c	FUNCTION_209
0x400ef52	      0xe800000000	                          call 0x400ef57	       104	stdio2.h	CALL_45
0x400ef57	    0x488b2d000000	            mov rbp, qword [0x0400ef5e] 	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400ef5e	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400ef63	     0xf85a8000000	                           jne 0x400f011	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400ef69	      0xe9f2010000	                           jmp 0x400f160	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400ef6e	            0x6690	                                     nop	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400ef70	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400ef75	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400ef7a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400ef7c	      0xe800000000	                          call 0x400ef81	       104	stdio2.h	CALL_45
0x400ef81	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	      8785	ldlang.c	FUNCTION_209	FOR_1	CALL_2
0x400ef85	    0xf7c2ffffff3f	                    test edx, 0x3fffffff	      8760	ldlang.c	FUNCTION_208	IF_1
0x400ef8b	     0xf84e9000000	                            je 0x400f07a	      8760	ldlang.c	FUNCTION_208	IF_1
0x400ef91	    0xf7c2ffff0f00	                       test edx, 0xfffff	      8762	ldlang.c	FUNCTION_208	ELSE_1	IF_2
0x400ef97	     0xf84a3010000	                            je 0x400f140	      8762	ldlang.c	FUNCTION_208	ELSE_1	IF_2
0x400ef9d	    0xf7c2ff030000	                         test edx, 0x3ff	      8764	ldlang.c	FUNCTION_208	ELSE_2	IF_3
0x400efa3	     0xf8417010000	                            je 0x400f0c0	      8764	ldlang.c	FUNCTION_208	ELSE_2	IF_3
0x400efa9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400efae	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400efb3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400efb5	      0xe800000000	                          call 0x400efba	       104	stdio2.h	CALL_45
0x400efba	          0x4885db	                           test rbx, rbx	       104	stdio2.h	CALL_45
0x400efbd	     0xf88d5000000	                            js 0x400f098	       104	stdio2.h	CALL_45
0x400efc3	        0x660fefc0	                         pxor xmm0, xmm0	       104	stdio2.h	CALL_45
0x400efc7	      0xf2480f2ac3	                      cvtsi2sd xmm0, rbx	       104	stdio2.h	CALL_45
0x400efcc	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       104	stdio2.h	CALL_45
0x400efd0	    0xf20f59050000	          mulsd xmm0, qword [0x0400efd8]	       104	stdio2.h	CALL_45
0x400efd8	          0x4885c0	                           test rax, rax	       104	stdio2.h	CALL_45
0x400efdb	     0xf88ff000000	                            js 0x400f0e0	       104	stdio2.h	CALL_45
0x400efe1	        0x660fefc9	                         pxor xmm1, xmm1	       104	stdio2.h	CALL_45
0x400efe5	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	       104	stdio2.h	CALL_45
0x400efea	        0xf20f5ec1	                        divsd xmm0, xmm1	       104	stdio2.h	CALL_45
0x400efee	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400eff3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400eff8	      0xb801000000	                              mov eax, 1	       104	stdio2.h	CALL_45
0x400effd	      0xe800000000	                          call 0x400f002	       104	stdio2.h	CALL_45
0x400f002	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400f006	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400f00b	     0xf844f010000	                            je 0x400f160	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400f011	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	      8780	ldlang.c	FUNCTION_209	FOR_1
0x400f015	        0x482b5d20	             sub rbx, qword [rbp + 0x20]	      8780	ldlang.c	FUNCTION_209	FOR_1
0x400f019	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400f01b	        0x488b5500	                    mov rdx, qword [rbp]	       104	stdio2.h	CALL_45
0x400f01f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400f024	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400f029	      0xe800000000	                          call 0x400f02e	       104	stdio2.h	CALL_45
0x400f02e	    0xf7c3ffffff3f	                    test ebx, 0x3fffffff	      8760	ldlang.c	FUNCTION_208	IF_1
0x400f034	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_45
0x400f037	     0xf84c3000000	                            je 0x400f100	      8760	ldlang.c	FUNCTION_208	IF_1
0x400f03d	    0xf7c3ffff0f00	                       test ebx, 0xfffff	      8762	ldlang.c	FUNCTION_208	ELSE_1	IF_2
0x400f043	     0xf84d7000000	                            je 0x400f120	      8762	ldlang.c	FUNCTION_208	ELSE_1	IF_2
0x400f049	    0xf7c3ff030000	                         test ebx, 0x3ff	      8764	ldlang.c	FUNCTION_208	ELSE_2	IF_3
0x400f04f	     0xf851bffffff	                           jne 0x400ef70	      8764	ldlang.c	FUNCTION_208	ELSE_2	IF_3
0x400f055	        0x48c1ea0a	                            shr rdx, 0xa	       104	stdio2.h	CALL_45
0x400f059	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400f05b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400f060	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400f065	      0xe800000000	                          call 0x400f06a	       104	stdio2.h	CALL_45
0x400f06a	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	      8785	ldlang.c	FUNCTION_209	FOR_1	CALL_2
0x400f06e	    0xf7c2ffffff3f	                    test edx, 0x3fffffff	      8760	ldlang.c	FUNCTION_208	IF_1
0x400f074	     0xf8517ffffff	                           jne 0x400ef91	      8760	ldlang.c	FUNCTION_208	IF_1
0x400f07a	        0x48c1ea1e	                           shr rdx, 0x1e	       104	stdio2.h	CALL_45
0x400f07e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400f080	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400f085	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400f08a	      0xe800000000	                          call 0x400f08f	       104	stdio2.h	CALL_45
0x400f08f	          0x4885db	                           test rbx, rbx	       104	stdio2.h	CALL_45
0x400f092	     0xf892bffffff	                           jns 0x400efc3	       104	stdio2.h	CALL_45
0x400f098	          0x4889d8	                            mov rax, rbx	       104	stdio2.h	CALL_45
0x400f09b	        0x660fefc0	                         pxor xmm0, xmm0	       104	stdio2.h	CALL_45
0x400f09f	          0x48d1e8	                              shr rax, 1	       104	stdio2.h	CALL_45
0x400f0a2	          0x83e301	                              and ebx, 1	       104	stdio2.h	CALL_45
0x400f0a5	          0x4809d8	                             or rax, rbx	       104	stdio2.h	CALL_45
0x400f0a8	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       104	stdio2.h	CALL_45
0x400f0ad	        0xf20f58c0	                        addsd xmm0, xmm0	       104	stdio2.h	CALL_45
0x400f0b1	      0xe916ffffff	                           jmp 0x400efcc	       104	stdio2.h	CALL_45
0x400f0b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_45
0x400f0c0	        0x48c1ea0a	                            shr rdx, 0xa	       104	stdio2.h	CALL_45
0x400f0c4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400f0c9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400f0ce	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400f0d0	      0xe800000000	                          call 0x400f0d5	       104	stdio2.h	CALL_45
0x400f0d5	      0xe9e0feffff	                           jmp 0x400efba	       104	stdio2.h	CALL_45
0x400f0da	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_45
0x400f0e0	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_45
0x400f0e3	        0x660fefc9	                         pxor xmm1, xmm1	       104	stdio2.h	CALL_45
0x400f0e7	          0x48d1ea	                              shr rdx, 1	       104	stdio2.h	CALL_45
0x400f0ea	          0x83e001	                              and eax, 1	       104	stdio2.h	CALL_45
0x400f0ed	          0x4809c2	                             or rdx, rax	       104	stdio2.h	CALL_45
0x400f0f0	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       104	stdio2.h	CALL_45
0x400f0f5	        0xf20f58c9	                        addsd xmm1, xmm1	       104	stdio2.h	CALL_45
0x400f0f9	      0xe9ecfeffff	                           jmp 0x400efea	       104	stdio2.h	CALL_45
0x400f0fe	            0x6690	                                     nop	       104	stdio2.h	CALL_45
0x400f100	        0x48c1ea1e	                           shr rdx, 0x1e	       104	stdio2.h	CALL_45
0x400f104	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400f109	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400f10e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400f110	      0xe800000000	                          call 0x400f115	       104	stdio2.h	CALL_45
0x400f115	      0xe967feffff	                           jmp 0x400ef81	       104	stdio2.h	CALL_45
0x400f11a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_45
0x400f120	        0x48c1ea14	                           shr rdx, 0x14	       104	stdio2.h	CALL_45
0x400f124	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400f129	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400f12e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400f130	      0xe800000000	                          call 0x400f135	       104	stdio2.h	CALL_45
0x400f135	      0xe947feffff	                           jmp 0x400ef81	       104	stdio2.h	CALL_45
0x400f13a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_45
0x400f140	        0x48c1ea14	                           shr rdx, 0x14	       104	stdio2.h	CALL_45
0x400f144	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_45
0x400f149	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_45
0x400f14e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_45
0x400f150	      0xe800000000	                          call 0x400f155	       104	stdio2.h	CALL_45
0x400f155	      0xe960feffff	                           jmp 0x400efba	       104	stdio2.h	CALL_45
0x400f15a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_45
0x400f160	        0x4883c408	                              add rsp, 8	      8791	ldlang.c	FUNCTION_209
0x400f164	              0x5b	                                 pop rbx	      8791	ldlang.c	FUNCTION_209
0x400f165	              0x5d	                                 pop rbp	      8791	ldlang.c	FUNCTION_209
0x400f166	              0xc3	                                     ret	      8791	ldlang.c	FUNCTION_209
lang_final	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	13
0x400a060	              0x53	                                push rbx	      6740	ldlang.c	FUNCTION_147
0x400a061	    0x488b1d000000	            mov rbx, qword [0x0400a068] 	      6743	ldlang.c	FUNCTION_147
0x400a068	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400a06d	      0xe800000000	                          call 0x400a072	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400a072	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400a079	    0xc740080b0000	                mov dword [rax + 8], 0xb	      1040	ldlang.c	FUNCTION_33
0x400a080	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400a084	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400a087	    0x488b15000000	            mov rdx, qword [0x0400a08e] 	      6744	ldlang.c	FUNCTION_147
0x400a08e	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400a092	        0x48895010	             mov qword [rax + 0x10], rdx	      6744	ldlang.c	FUNCTION_147
0x400a096	              0x5b	                                 pop rbx	      6745	ldlang.c	FUNCTION_147
0x400a097	              0xc3	                                     ret	      6745	ldlang.c	FUNCTION_147
ldlang_add_file	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,5:DO,0:FOR,0:WHILE,0	34
0x4007d50	    0x488b05000000	            mov rax, qword [0x04007d57] 	      7673	ldlang.c	FUNCTION_179
0x4007d57	              0x53	                                push rbx	      6636	ldlang.c	FUNCTION_143
0x4007d58	          0x4889fb	                            mov rbx, rdi	      6636	ldlang.c	FUNCTION_143
0x4007d5b	          0x488938	                    mov qword [rax], rdi	      7673	ldlang.c	FUNCTION_179
0x4007d5e	        0x488d4730	                   lea rax, [rdi + 0x30]	      6639	ldlang.c	FUNCTION_143
0x4007d62	    0x488905000000	            mov qword [0x04007d69], rax 	      6639	ldlang.c	FUNCTION_143
0x4007d69	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4007d6d	    0x4883b8f00000	               cmp qword [rax + 0xf0], 0	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4007d75	            0x7413	                            je 0x4007d8a	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4007d77	      0xbef3190000	                         mov esi, 0x19f3	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4007d7c	      0xbf00000000	                              mov edi, 0	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4007d81	      0xe800000000	                          call 0x4007d86	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4007d86	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4007d8a	    0x483905000000	            cmp qword [0x04007d91], rax 	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4007d91	            0x7445	                            je 0x4007dd8	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4007d93	    0x488b15000000	            mov rdx, qword [0x04007d9a] 	      6646	ldlang.c	FUNCTION_143
0x4007d9a	    0x8b3500000000	            mov esi, dword [0x04007da0] 	      6649	ldlang.c	FUNCTION_143	CALL_4
0x4007da0	          0x488902	                    mov qword [rdx], rax	      6646	ldlang.c	FUNCTION_143
0x4007da3	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      6647	ldlang.c	FUNCTION_143
0x4007da7	    0x488d87f00000	                   lea rax, [rdi + 0xf0]	      6647	ldlang.c	FUNCTION_143
0x4007dae	    0x48899f000100	            mov qword [rdi + 0x100], rbx	      6648	ldlang.c	FUNCTION_143
0x4007db5	    0x488905000000	            mov qword [0x04007dbc], rax 	      6647	ldlang.c	FUNCTION_143
0x4007dbc	      0xe800000000	                          call 0x4007dc1	      6649	ldlang.c	FUNCTION_143	CALL_4
0x4007dc1	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4007dc5	          0x4889da	                            mov rdx, rbx	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4007dc8	      0xbe00000000	                              mov esi, 0	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4007dcd	              0x5b	                                 pop rbx	      6662	ldlang.c	FUNCTION_143
0x4007dce	      0xe900000000	                           jmp 0x4007dd3	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4007dd3	       0xf1f440000	                   nop dword [rax + rax]	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4007dd8	      0xbef4190000	                         mov esi, 0x19f4	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4007ddd	      0xbf00000000	                              mov edi, 0	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4007de2	      0xe800000000	                          call 0x4007de7	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4007de7	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4007deb	            0xeba6	                           jmp 0x4007d93	      6644	ldlang.c	FUNCTION_143	CALL_3
walk_wild_section_specs2_wild1	IF,3:ELSE,1:SWITCH,0:functions,0:CALL,5:DO,0:FOR,1:WHILE,0	112
0x4003690	            0x4157	                                push r15	       610	ldlang.c	FUNCTION_20
0x4003692	            0x4156	                                push r14	       610	ldlang.c	FUNCTION_20
0x4003694	            0x4155	                                push r13	       610	ldlang.c	FUNCTION_20
0x4003696	            0x4154	                                push r12	       610	ldlang.c	FUNCTION_20
0x4003698	          0x4989fc	                            mov r12, rdi	       610	ldlang.c	FUNCTION_20
0x400369b	              0x55	                                push rbp	       610	ldlang.c	FUNCTION_20
0x400369c	              0x53	                                push rbx	       610	ldlang.c	FUNCTION_20
0x400369d	          0x4889f5	                            mov rbp, rsi	       610	ldlang.c	FUNCTION_20
0x40036a0	        0x4883ec38	                           sub rsp, 0x38	       610	ldlang.c	FUNCTION_20
0x40036a4	        0x4c8b6f50	            mov r13, qword [rdi + 0x50] 	       612	ldlang.c	FUNCTION_20
0x40036a8	        0x4c8b7758	            mov r14, qword [rdi + 0x58] 	       613	ldlang.c	FUNCTION_20
0x40036ac	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       613	ldlang.c	FUNCTION_20
0x40036b0	      0x48894c2408	                mov qword [rsp + 8], rcx	       610	ldlang.c	FUNCTION_20
0x40036b5	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       350	ldlang.c	FUNCTION_10	CALL_1
0x40036ba	        0x48891424	                    mov qword [rsp], rdx	       610	ldlang.c	FUNCTION_20
0x40036be	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x40036c3	    0x48c744241000	               mov qword [rsp + 0x10], 0	       348	ldlang.c	FUNCTION_10
0x40036cc	        0x498b7508	                mov rsi, qword [r13 + 8]	       348	ldlang.c	FUNCTION_10
0x40036d0	    0xc74424180000	               mov dword [rsp + 0x18], 0	       348	ldlang.c	FUNCTION_10
0x40036d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       610	ldlang.c	FUNCTION_20
0x40036e1	      0x4889442428	             mov qword [rsp + 0x28], rax	       610	ldlang.c	FUNCTION_20
0x40036e6	            0x31c0	                            xor eax, eax	       610	ldlang.c	FUNCTION_20
0x40036e8	      0xe800000000	                          call 0x40036ed	       350	ldlang.c	FUNCTION_10	CALL_1
0x40036ed	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       617	ldlang.c	FUNCTION_20	IF_1
0x40036f1	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       353	ldlang.c	FUNCTION_10
0x40036f6	            0x85c0	                           test eax, eax	       617	ldlang.c	FUNCTION_20	IF_1
0x40036f8	     0xf8512010000	                           jne 0x4003810	       617	ldlang.c	FUNCTION_20	IF_1
0x40036fe	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003702	    0x4c8bb8900000	            mov r15, qword [rax + 0x90] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003709	          0x4d85ff	                           test r15, r15	       625	ldlang.c	FUNCTION_20	FOR_1
0x400370c	            0x750b	                           jne 0x4003719	       625	ldlang.c	FUNCTION_20	FOR_1
0x400370e	            0xeb48	                           jmp 0x4003758	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003710	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003714	          0x4d85ff	                           test r15, r15	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003717	            0x743f	                            je 0x4003758	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003719	          0x4c39fb	                            cmp rbx, r15	       630	ldlang.c	FUNCTION_20	FOR_1	IF_2
0x400371c	            0x7462	                            je 0x4003780	       630	ldlang.c	FUNCTION_20	FOR_1	IF_2
0x400371e	          0x498b17	                    mov rdx, qword [r15]	       634	ldlang.c	FUNCTION_20	FOR_1	ELSE_1
0x4003721	        0x498b4608	                mov rax, qword [r14 + 8]	       635	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	CALL_4
0x4003725	           0xfb60a	                   movzx ecx, byte [rdx]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003728	            0x3808	                      cmp byte [rax], cl	       374	ldlang.c	FUNCTION_12	IF_1
0x400372a	            0x75e4	                           jne 0x4003710	       374	ldlang.c	FUNCTION_12	IF_1
0x400372c	         0xfb67201	               movzx esi, byte [rdx + 1]	       374	ldlang.c	FUNCTION_12	IF_1
0x4003730	        0x40387001	                 cmp byte [rax + 1], sil	       374	ldlang.c	FUNCTION_12	IF_1
0x4003734	            0x75da	                           jne 0x4003710	       374	ldlang.c	FUNCTION_12	IF_1
0x4003736	         0xfb67a02	               movzx edi, byte [rdx + 2]	       375	ldlang.c	FUNCTION_12	IF_1
0x400373a	        0x40387802	                 cmp byte [rax + 2], dil	       375	ldlang.c	FUNCTION_12	IF_1
0x400373e	            0x75d0	                           jne 0x4003710	       375	ldlang.c	FUNCTION_12	IF_1
0x4003740	         0xfb67203	               movzx esi, byte [rdx + 3]	       375	ldlang.c	FUNCTION_12	IF_1
0x4003744	            0x31c9	                            xor ecx, ecx	       375	ldlang.c	FUNCTION_12	IF_1
0x4003746	        0x40387003	                 cmp byte [rax + 3], sil	       375	ldlang.c	FUNCTION_12	IF_1
0x400374a	            0x747e	                            je 0x40037ca	       375	ldlang.c	FUNCTION_12	IF_1
0x400374c	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003750	          0x4d85ff	                           test r15, r15	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003753	            0x75c4	                           jne 0x4003719	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003755	           0xf1f00	                         nop dword [rax]	       625	ldlang.c	FUNCTION_20	FOR_1
0x4003758	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       642	ldlang.c	FUNCTION_20
0x400375d	    0x644833042528	                xor rax, qword fs:[0x28]	       642	ldlang.c	FUNCTION_20
0x4003766	     0xf85bd000000	                           jne 0x4003829	       642	ldlang.c	FUNCTION_20
0x400376c	        0x4883c438	                           add rsp, 0x38	       642	ldlang.c	FUNCTION_20
0x4003770	              0x5b	                                 pop rbx	       642	ldlang.c	FUNCTION_20
0x4003771	              0x5d	                                 pop rbp	       642	ldlang.c	FUNCTION_20
0x4003772	            0x415c	                                 pop r12	       642	ldlang.c	FUNCTION_20
0x4003774	            0x415d	                                 pop r13	       642	ldlang.c	FUNCTION_20
0x4003776	            0x415e	                                 pop r14	       642	ldlang.c	FUNCTION_20
0x4003778	            0x415f	                                 pop r15	       642	ldlang.c	FUNCTION_20
0x400377a	              0xc3	                                     ret	       642	ldlang.c	FUNCTION_20
0x400377b	       0xf1f440000	                   nop dword [rax + rax]	       642	ldlang.c	FUNCTION_20
0x4003780	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003784	          0x4889ee	                            mov rsi, rbp	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003787	      0xe8e4f9ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x400378c	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x400378e	            0x7580	                           jne 0x4003710	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4003790	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4003795	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       279	ldlang.c	FUNCTION_7
0x400379a	          0x4989e8	                             mov r8, rbp	       279	ldlang.c	FUNCTION_7
0x400379d	          0x4889da	                            mov rdx, rbx	       279	ldlang.c	FUNCTION_7
0x40037a0	          0x4c89ee	                            mov rsi, r13	       279	ldlang.c	FUNCTION_7
0x40037a3	          0x4c89e7	                            mov rdi, r12	       279	ldlang.c	FUNCTION_7
0x40037a6	        0x488b0424	                    mov rax, qword [rsp]	       279	ldlang.c	FUNCTION_7
0x40037aa	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x40037ac	      0xe95fffffff	                           jmp 0x4003710	       279	ldlang.c	FUNCTION_7
0x40037b1	     0xf1f80000000	                         nop dword [rax]	       279	ldlang.c	FUNCTION_7
0x40037b8	       0xfb67c0a04	        movzx edi, byte [rdx + rcx + 4] 	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40037bd	        0x4883c101	                              add rcx, 1	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40037c1	          0x4038f7	                            cmp dil, sil	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40037c4	     0xf8546ffffff	                           jne 0x4003710	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40037ca	       0xfb6740804	        movzx esi, byte [rax + rcx + 4] 	       380	ldlang.c	FUNCTION_12	WHILE_1
0x40037cf	        0x4080fe2a	                           cmp sil, 0x2a	       380	ldlang.c	FUNCTION_12	WHILE_1
0x40037d3	            0x75e3	                           jne 0x40037b8	       380	ldlang.c	FUNCTION_12	WHILE_1
0x40037d5	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x40037d9	          0x4889ee	                            mov rsi, rbp	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x40037dc	      0xe88ff9ffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x40037e1	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x40037e3	     0xf8527ffffff	                           jne 0x4003710	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x40037e9	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x40037ee	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       279	ldlang.c	FUNCTION_7
0x40037f3	          0x4989e8	                             mov r8, rbp	       279	ldlang.c	FUNCTION_7
0x40037f6	          0x4c89fa	                            mov rdx, r15	       279	ldlang.c	FUNCTION_7
0x40037f9	          0x4c89f6	                            mov rsi, r14	       279	ldlang.c	FUNCTION_7
0x40037fc	          0x4c89e7	                            mov rdi, r12	       279	ldlang.c	FUNCTION_7
0x40037ff	        0x488b0424	                    mov rax, qword [rsp]	       279	ldlang.c	FUNCTION_7
0x4003803	            0xffd0	                                call rax	       279	ldlang.c	FUNCTION_7
0x4003805	      0xe906ffffff	                           jmp 0x4003710	       279	ldlang.c	FUNCTION_7
0x400380a	    0x660f1f440000	                    nop word [rax + rax]	       279	ldlang.c	FUNCTION_7
0x4003810	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4003815	        0x488b1424	                    mov rdx, qword [rsp]	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4003819	          0x4889ee	                            mov rsi, rbp	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x400381c	          0x4c89e7	                            mov rdi, r12	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x400381f	      0xe86cfcffff	      call sym.walk_wild_section_general	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4003824	      0xe92fffffff	                           jmp 0x4003758	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4003829	      0xe800000000	                          call 0x400382e	       642	ldlang.c	FUNCTION_20
lang_add_data	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	19
0x400ae50	            0x4154	                                push r12	      7546	ldlang.c	FUNCTION_171
0x400ae52	              0x55	                                push rbp	      7546	ldlang.c	FUNCTION_171
0x400ae53	            0x89fd	                            mov ebp, edi	      7546	ldlang.c	FUNCTION_171
0x400ae55	              0x53	                                push rbx	      7546	ldlang.c	FUNCTION_171
0x400ae56	    0x488b1d000000	            mov rbx, qword [0x0400ae5d] 	      7549	ldlang.c	FUNCTION_171
0x400ae5d	      0xbf38000000	                           mov edi, 0x38	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ae62	          0x4989f4	                            mov r12, rsi	      7546	ldlang.c	FUNCTION_171
0x400ae65	      0xe800000000	                          call 0x400ae6a	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ae6a	    0xc74008080000	                  mov dword [rax + 8], 8	      1040	ldlang.c	FUNCTION_33
0x400ae71	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400ae78	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400ae7c	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400ae7f	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400ae83	        0x4c896018	             mov qword [rax + 0x18], r12	      7550	ldlang.c	FUNCTION_171
0x400ae87	          0x896810	             mov dword [rax + 0x10], ebp	      7551	ldlang.c	FUNCTION_171
0x400ae8a	              0x5b	                                 pop rbx	      7552	ldlang.c	FUNCTION_171
0x400ae8b	              0x5d	                                 pop rbp	      7552	ldlang.c	FUNCTION_171
0x400ae8c	            0x415c	                                 pop r12	      7552	ldlang.c	FUNCTION_171
0x400ae8e	              0xc3	                                     ret	      7552	ldlang.c	FUNCTION_171
lang_add_section	IF,19:ELSE,4:SWITCH,1:functions,0:CALL,4:DO,0:FOR,0:WHILE,0	183
0x40066b0	            0x4155	                                push r13	      2319	ldlang.c	FUNCTION_59
0x40066b2	            0x4154	                                push r12	      2319	ldlang.c	FUNCTION_59
0x40066b4	          0x4989c9	                             mov r9, rcx	      2319	ldlang.c	FUNCTION_59
0x40066b7	              0x55	                                push rbp	      2319	ldlang.c	FUNCTION_59
0x40066b8	              0x53	                                push rbx	      2319	ldlang.c	FUNCTION_59
0x40066b9	          0x4989fa	                            mov r10, rdi	      2319	ldlang.c	FUNCTION_59
0x40066bc	          0x4889f0	                            mov rax, rsi	      2319	ldlang.c	FUNCTION_59
0x40066bf	        0x4883ec08	                              sub rsp, 8	      2319	ldlang.c	FUNCTION_59
0x40066c3	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      2320	ldlang.c	FUNCTION_59
0x40066c6	            0x89d9	                            mov ecx, ebx	      2288	ldlang.c	FUNCTION_58
0x40066c8	          0xc1e90f	                            shr ecx, 0xf	      2288	ldlang.c	FUNCTION_58
0x40066cb	          0x83e101	                              and ecx, 1	      2288	ldlang.c	FUNCTION_58
0x40066ce	    0xf7c300000002	                     test ebx, 0x2000000	      2292	ldlang.c	FUNCTION_58	IF_1
0x40066d4	          0x4189c8	                            mov r8d, ecx	      2288	ldlang.c	FUNCTION_58
0x40066d7	     0xfb60d000000	           movzx ecx, byte [0x040066de] 	      2293	ldlang.c	FUNCTION_58	IF_1
0x40066de	            0x7430	                            je 0x4006710	      2292	ldlang.c	FUNCTION_58	IF_1
0x40066e0	          0xf6c110	                           test cl, 0x10	      2293	ldlang.c	FUNCTION_58	IF_1
0x40066e3	            0x742b	                            je 0x4006710	      2293	ldlang.c	FUNCTION_58	IF_1
0x40066e5	          0x83e120	                           and ecx, 0x20	      2298	ldlang.c	FUNCTION_58	IF_2
0x40066e8	          0x80f920	                            cmp cl, 0x20	      2298	ldlang.c	FUNCTION_58	IF_2
0x40066eb	            0x750b	                           jne 0x40066f8	      2298	ldlang.c	FUNCTION_58	IF_2
0x40066ed	    0x41b801000000	                              mov r8d, 1	      2294	ldlang.c	FUNCTION_58	IF_1
0x40066f3	          0xf6c720	                           test bh, 0x20	      2299	ldlang.c	FUNCTION_58	IF_2
0x40066f6	            0x7420	                            je 0x4006718	      2299	ldlang.c	FUNCTION_58	IF_2
0x40066f8	      0x4883786800	               cmp qword [rax + 0x68], 0	      2336	ldlang.c	FUNCTION_59	IF_2	IF_3
0x40066fd	     0xf84ad010000	                            je 0x40068b0	      2336	ldlang.c	FUNCTION_59	IF_2	IF_3
0x4006703	        0x4883c408	                              add rsp, 8	      2465	ldlang.c	FUNCTION_59
0x4006707	              0x5b	                                 pop rbx	      2465	ldlang.c	FUNCTION_59
0x4006708	              0x5d	                                 pop rbp	      2465	ldlang.c	FUNCTION_59
0x4006709	            0x415c	                                 pop r12	      2465	ldlang.c	FUNCTION_59
0x400670b	            0x415d	                                 pop r13	      2465	ldlang.c	FUNCTION_59
0x400670d	              0xc3	                                     ret	      2465	ldlang.c	FUNCTION_59
0x400670e	            0x6690	                                     nop	      2465	ldlang.c	FUNCTION_59
0x4006710	          0x83e120	                           and ecx, 0x20	      2298	ldlang.c	FUNCTION_58	IF_2
0x4006713	          0x80f920	                            cmp cl, 0x20	      2298	ldlang.c	FUNCTION_58	IF_2
0x4006716	            0x74db	                            je 0x40066f3	      2298	ldlang.c	FUNCTION_58	IF_2
0x4006718	        0x498b7130	              mov rsi, qword [r9 + 0x30]	      2331	ldlang.c	FUNCTION_59	IF_1
0x400671c	      0xbf00000000	                              mov edi, 0	      2331	ldlang.c	FUNCTION_59	IF_1
0x4006721	      0xb90a000000	                            mov ecx, 0xa	      2331	ldlang.c	FUNCTION_59	IF_1
0x4006726	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2334	ldlang.c	FUNCTION_59	IF_2
0x4006728	            0x74ce	                            je 0x40066f8	      2334	ldlang.c	FUNCTION_59	IF_2
0x400672a	          0x4585c0	                           test r8d, r8d	      2334	ldlang.c	FUNCTION_59	IF_2
0x400672d	            0x75c9	                           jne 0x40066f8	      2334	ldlang.c	FUNCTION_59	IF_2
0x400672f	          0x4885d2	                           test rdx, rdx	      2344	ldlang.c	FUNCTION_59	IF_4
0x4006732	          0x4d89cc	                             mov r12, r9	      2344	ldlang.c	FUNCTION_59	IF_4
0x4006735	          0x4889d6	                            mov rsi, rdx	      2344	ldlang.c	FUNCTION_59	IF_4
0x4006738	          0x4889c5	                            mov rbp, rax	      2344	ldlang.c	FUNCTION_59	IF_4
0x400673b	          0x4d89d5	                            mov r13, r10	      2344	ldlang.c	FUNCTION_59	IF_4
0x400673e	            0x741d	                            je 0x400675d	      2344	ldlang.c	FUNCTION_59	IF_4
0x4006740	    0x488b05000000	            mov rax, qword [0x04006747] 	      2348	ldlang.c	FUNCTION_59	IF_4
0x4006747	          0x4889ea	                            mov rdx, rbp	      2348	ldlang.c	FUNCTION_59	IF_4
0x400674a	      0xbf00000000	                              mov edi, 0	      2348	ldlang.c	FUNCTION_59	IF_4
0x400674f	        0x488b4008	                mov rax, qword [rax + 8]	      2348	ldlang.c	FUNCTION_59	IF_4
0x4006753	    0xff90f8020000	                call qword [rax + 0x2f8]	      2348	ldlang.c	FUNCTION_59	IF_4
0x4006759	            0x85c0	                           test eax, eax	      2349	ldlang.c	FUNCTION_59	IF_4	IF_5
0x400675b	            0x74a6	                            je 0x4006703	      2349	ldlang.c	FUNCTION_59	IF_4	IF_5
0x400675d	      0x48837d6800	               cmp qword [rbp + 0x68], 0	      2353	ldlang.c	FUNCTION_59	IF_6
0x4006762	            0x759f	                           jne 0x4006703	      2353	ldlang.c	FUNCTION_59	IF_6
0x4006764	            0x89d8	                            mov eax, ebx	      2368	ldlang.c	FUNCTION_59	IF_7
0x4006766	      0x2500000202	                      and eax, 0x2020000	      2368	ldlang.c	FUNCTION_59	IF_7
0x400676b	      0x3d00000202	                      cmp eax, 0x2020000	      2368	ldlang.c	FUNCTION_59	IF_7
0x4006770	     0xf84d2010000	                            je 0x4006948	      2368	ldlang.c	FUNCTION_59	IF_7
0x4006776	     0xfb605000000	           movzx eax, byte [0x0400677d] 	      2375	ldlang.c	FUNCTION_59	ELSE_2	IF_9	CALL_2
0x400677d	            0x89da	                            mov edx, ebx	      2362	ldlang.c	FUNCTION_59
0x400677f	    0x81e3fbfdf1ff	                     and ebx, 0xfff1fdfb	      2362	ldlang.c	FUNCTION_59
0x4006785	          0x80e6fd	                            and dh, 0xfd	      2362	ldlang.c	FUNCTION_59
0x4006788	          0x83e003	                              and eax, 3	      2375	ldlang.c	FUNCTION_59	ELSE_2	IF_9	CALL_2
0x400678b	            0x3c02	                               cmp al, 2	      2362	ldlang.c	FUNCTION_59
0x400678d	           0xf44da	                          cmove ebx, edx	      2362	ldlang.c	FUNCTION_59
0x4006790	    0x418b84248c00	            mov eax, dword [r12 + 0x8c] 	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x4006798	          0x83f802	                              cmp eax, 2	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x400679b	     0xf845f010000	                            je 0x4006900	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x40067a1	            0x89da	                            mov edx, ebx	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40067a3	          0x83e2fe	                     and edx, 0xfffffffe	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40067a6	          0x83f803	                              cmp eax, 3	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40067a9	           0xf44da	                          cmove ebx, edx	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40067ac	      0x498b4c2438	            mov rcx, qword [r12 + 0x38] 	      2400	ldlang.c	FUNCTION_59	IF_11
0x40067b1	          0x4885c9	                           test rcx, rcx	      2400	ldlang.c	FUNCTION_59	IF_11
0x40067b4	     0xf84cc010000	                            je 0x4006986	      2400	ldlang.c	FUNCTION_59	IF_11
0x40067ba	            0x89d8	                            mov eax, ebx	      2405	ldlang.c	FUNCTION_59
0x40067bc	         0xfb65124	           movzx edx, byte [rcx + 0x24] 	      2407	ldlang.c	FUNCTION_59	IF_12
0x40067c0	          0x83c8f7	                      or eax, 0xfffffff7	      2405	ldlang.c	FUNCTION_59
0x40067c3	          0x234120	             and eax, dword [rcx + 0x20]	      2405	ldlang.c	FUNCTION_59
0x40067c6	          0xf6c204	                              test dl, 4	      2407	ldlang.c	FUNCTION_59	IF_12
0x40067c9	          0x894120	             mov dword [rcx + 0x20], eax	      2405	ldlang.c	FUNCTION_59
0x40067cc	     0xf85ee000000	                           jne 0x40068c0	      2407	ldlang.c	FUNCTION_59	IF_12
0x40067d2	          0x83ca04	                               or edx, 4	      2426	ldlang.c	FUNCTION_59	IF_14
0x40067d5	             0x9d8	                             or eax, ebx	      2422	ldlang.c	FUNCTION_59
0x40067d7	    0x41b800000000	                              mov r8d, 0	      2430	ldlang.c	FUNCTION_59	IF_14
0x40067dd	          0x885124	               mov byte [rcx + 0x24], dl	      2426	ldlang.c	FUNCTION_59	IF_14
0x40067e0	    0x488b15000000	            mov rdx, qword [0x040067e7] 	      2430	ldlang.c	FUNCTION_59	IF_14
0x40067e7	          0x4889ee	                            mov rsi, rbp	      2430	ldlang.c	FUNCTION_59	IF_14
0x40067ea	          0x894120	             mov dword [rcx + 0x20], eax	      2422	ldlang.c	FUNCTION_59
0x40067ed	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	      2430	ldlang.c	FUNCTION_59	IF_14
0x40067f4	        0x488b4208	                mov rax, qword [rdx + 8]	      2430	ldlang.c	FUNCTION_59	IF_14
0x40067f8	    0xff9048010000	                call qword [rax + 0x148]	      2430	ldlang.c	FUNCTION_59	IF_14
0x40067fe	    0xf7c300008000	                      test ebx, 0x800000	      2434	ldlang.c	FUNCTION_59	IF_14	IF_15
0x4006804	            0x741a	                            je 0x4006820	      2434	ldlang.c	FUNCTION_59	IF_14	IF_15
0x4006806	    0x8b95c4000000	            mov edx, dword [rbp + 0xc4] 	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x400680c	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x4006811	    0x8990c4000000	             mov dword [rax + 0xc4], edx	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x4006817	    0x660f1f840000	                    nop word [rax + rax]	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x4006820	    0x81e300000010	                     and ebx, 0x10000000	      2438	ldlang.c	FUNCTION_59	IF_16
0x4006826	     0xf85f4000000	                           jne 0x4006920	      2438	ldlang.c	FUNCTION_59	IF_16
0x400682c	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x4006831	          0x8b5570	            mov edx, dword [rbp + 0x70] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x4006834	          0x3b5070	            cmp edx, dword [rax + 0x70] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x4006837	            0x7603	                           jbe 0x400683c	      2445	ldlang.c	FUNCTION_59	IF_17
0x4006839	          0x895070	             mov dword [rax + 0x70], edx	      2446	ldlang.c	FUNCTION_59	IF_17
0x400683c	    0x8b1500000000	            mov edx, dword [0x04006842] 	      2450	ldlang.c	FUNCTION_59	IF_18
0x4006842	        0x48894568	            mov qword [rbp + 0x68], rax 	      2448	ldlang.c	FUNCTION_59
0x4006846	            0x85d2	                           test edx, edx	      2450	ldlang.c	FUNCTION_59	IF_18
0x4006848	            0x7530	                           jne 0x400687a	      2450	ldlang.c	FUNCTION_59	IF_18
0x400684a	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	      2452	ldlang.c	FUNCTION_59	IF_18
0x4006851	    0x4889a8100100	            mov qword [rax + 0x110], rbp	      2453	ldlang.c	FUNCTION_59	IF_18
0x4006858	    0x48c785080100	              mov qword [rbp + 0x108], 0	      2454	ldlang.c	FUNCTION_59	IF_18
0x4006863	          0x4885d2	                           test rdx, rdx	      2456	ldlang.c	FUNCTION_59	IF_18	IF_19
0x4006866	    0x488995100100	           mov qword [rbp + 0x110], rdx 	      2455	ldlang.c	FUNCTION_59	IF_18
0x400686d	     0xf8407010000	                            je 0x400697a	      2456	ldlang.c	FUNCTION_59	IF_18	IF_19
0x4006873	    0x4889aa080100	            mov qword [rdx + 0x108], rbp	      2457	ldlang.c	FUNCTION_59	IF_18	IF_19
0x400687a	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400687f	      0xe800000000	                          call 0x4006884	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4006884	    0xc74008050000	                  mov dword [rax + 8], 5	      1040	ldlang.c	FUNCTION_33
0x400688b	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x4006892	        0x498b5508	                mov rdx, qword [r13 + 8]	      7673	ldlang.c	FUNCTION_179
0x4006896	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x4006899	        0x49894508	                mov qword [r13 + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400689d	        0x48896810	             mov qword [rax + 0x10], rbp	      2464	ldlang.c	FUNCTION_59
0x40068a1	      0xe95dfeffff	                           jmp 0x4006703	      2464	ldlang.c	FUNCTION_59
0x40068a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2464	ldlang.c	FUNCTION_59
0x40068b0	    0x48c740680000	               mov qword [rax + 0x68], 0	      2339	ldlang.c	FUNCTION_59	IF_2	IF_3
0x40068b8	      0xe946feffff	                           jmp 0x4006703	      2339	ldlang.c	FUNCTION_59	IF_2	IF_3
0x40068bd	           0xf1f00	                         nop dword [rax]	      2339	ldlang.c	FUNCTION_59	IF_2	IF_3
0x40068c0	            0x89da	                            mov edx, ebx	      2410	ldlang.c	FUNCTION_59	IF_12
0x40068c2	            0x89c6	                            mov esi, eax	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068c4	          0x83e2f7	                     and edx, 0xfffffff7	      2410	ldlang.c	FUNCTION_59	IF_12
0x40068c7	            0x31d6	                            xor esi, edx	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068c9	    0x81e600008001	                      and esi, 0x1800000	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068cf	            0x751a	                           jne 0x40068eb	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068d1	    0xf7c300008000	                      test ebx, 0x800000	      2415	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068d7	     0xf848b000000	                            je 0x4006968	      2415	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068dd	    0x8bbdc4000000	            mov edi, dword [rbp + 0xc4] 	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068e3	    0x39b9c4000000	            cmp dword [rcx + 0xc4], edi 	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068e9	            0x747d	                            je 0x4006968	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068eb	      0x25ffff7ffe	                     and eax, 0xfe7fffff	      2418	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068f0	    0x81e3f7ff7ffe	                     and ebx, 0xfe7ffff7	      2419	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40068f6	             0x9d8	                             or eax, ebx	      2422	ldlang.c	FUNCTION_59
0x40068f8	          0x894120	             mov dword [rcx + 0x20], eax	      2422	ldlang.c	FUNCTION_59
0x40068fb	      0xe920ffffff	                           jmp 0x4006820	      2422	ldlang.c	FUNCTION_59
0x4006900	    0x488b05000000	            mov rax, qword [0x04006907] 	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x4006907	        0x488b4008	                mov rax, qword [rax + 8]	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x400690b	        0x83780805	                  cmp dword [rax + 8], 5	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x400690f	            0x745b	                            je 0x400696c	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x4006911	          0x83e3fc	                     and ebx, 0xfffffffc	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x4006914	          0x80cf02	                                or bh, 2	      2396	ldlang.c	FUNCTION_59	SWITCH_1	ELSE_3
0x4006917	      0xe990feffff	                           jmp 0x40067ac	      2396	ldlang.c	FUNCTION_59	SWITCH_1	ELSE_3
0x400691c	         0xf1f4000	                         nop dword [rax]	      2396	ldlang.c	FUNCTION_59	SWITCH_1	ELSE_3
0x4006920	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x4006927	      0xe800000000	                          call 0x400692c	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x400692c	          0x83f826	                           cmp eax, 0x26	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x400692f	     0xf85f7feffff	                           jne 0x400682c	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x4006935	    0x41c744247880	           mov dword [r12 + 0x78], 0x80 	      2442	ldlang.c	FUNCTION_59	IF_16
0x400693e	      0xe9e9feffff	                           jmp 0x400682c	      2442	ldlang.c	FUNCTION_59	IF_16
0x4006943	       0xf1f440000	                   nop dword [rax + rax]	      2442	ldlang.c	FUNCTION_59	IF_16
0x4006948	            0x89d8	                            mov eax, ebx	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400694a	    0x81e3fbfdf3ff	                     and ebx, 0xfff3fdfb	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4006950	      0x25fbfdf1ff	                     and eax, 0xfff1fdfb	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4006955	    0xf60500000000	           test byte [0x0400695c], 0x10 	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400695c	           0xf45d8	                         cmovne ebx, eax	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400695f	      0xe92cfeffff	                           jmp 0x4006790	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4006964	         0xf1f4000	                         nop dword [rax]	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4006968	            0x89d3	                            mov ebx, edx	      2410	ldlang.c	FUNCTION_59	IF_12
0x400696a	            0xeb8a	                           jmp 0x40068f6	      2410	ldlang.c	FUNCTION_59	IF_12
0x400696c	    0x81e3fdfeffff	                     and ebx, 0xfffffefd	      2410	ldlang.c	FUNCTION_59	IF_12
0x4006972	          0x80cf02	                                or bh, 2	      2394	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x4006975	      0xe932feffff	                           jmp 0x40067ac	      2394	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x400697a	    0x4889a8080100	            mov qword [rax + 0x108], rbp	      2459	ldlang.c	FUNCTION_59	IF_18	ELSE_4
0x4006981	      0xe9f4feffff	                           jmp 0x400687a	      2459	ldlang.c	FUNCTION_59	IF_18	ELSE_4
0x4006986	            0x89de	                            mov esi, ebx	      2401	ldlang.c	FUNCTION_59	CALL_3
0x4006988	          0x4c89e7	                            mov rdi, r12	      2401	ldlang.c	FUNCTION_59	CALL_3
0x400698b	      0xe870b8ffff	                        call sym.init_os	      2401	ldlang.c	FUNCTION_59	CALL_3
0x4006990	      0x498b4c2438	            mov rcx, qword [r12 + 0x38] 	      2401	ldlang.c	FUNCTION_59	CALL_3
0x4006995	      0xe920feffff	                           jmp 0x40067ba	      2401	ldlang.c	FUNCTION_59	CALL_3
lang_for_each_input_file	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,1:WHILE,0	17
0x4007cf0	              0x55	                                push rbp	      6612	ldlang.c	FUNCTION_141
0x4007cf1	              0x53	                                push rbx	      6612	ldlang.c	FUNCTION_141
0x4007cf2	        0x4883ec08	                              sub rsp, 8	      6612	ldlang.c	FUNCTION_141
0x4007cf6	    0x488b1d000000	            mov rbx, qword [0x04007cfd] 	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4007cfd	          0x4885db	                           test rbx, rbx	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4007d00	            0x7414	                            je 0x4007d16	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4007d02	          0x4889fd	                            mov rbp, rdi	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4007d05	           0xf1f00	                         nop dword [rax]	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4007d08	          0x4889df	                            mov rdi, rbx	      6618	ldlang.c	FUNCTION_141	CALL_1
0x4007d0b	            0xffd5	                                call rbp	      6618	ldlang.c	FUNCTION_141	CALL_1
0x4007d0d	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      6617	ldlang.c	FUNCTION_141	FOR_1
0x4007d11	          0x4885db	                           test rbx, rbx	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4007d14	            0x75f2	                           jne 0x4007d08	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4007d16	        0x4883c408	                              add rsp, 8	      6619	ldlang.c	FUNCTION_141
0x4007d1a	              0x5b	                                 pop rbx	      6619	ldlang.c	FUNCTION_141
0x4007d1b	              0x5d	                                 pop rbp	      6619	ldlang.c	FUNCTION_141
0x4007d1c	              0xc3	                                     ret	      6619	ldlang.c	FUNCTION_141
lang_relax_sections	IF,2:ELSE,0:SWITCH,0:functions,0:CALL,6:DO,1:FOR,0:WHILE,1	133
0x400a510	              0x55	                                push rbp	      6931	ldlang.c	FUNCTION_155
0x400a511	              0x53	                                push rbx	      6931	ldlang.c	FUNCTION_155
0x400a512	        0x4883ec18	                           sub rsp, 0x18	      6931	ldlang.c	FUNCTION_155
0x400a516	    0x64488b042528	                mov rax, qword fs:[0x28]	      6931	ldlang.c	FUNCTION_155
0x400a51f	      0x4889442408	                mov qword [rsp + 8], rax	      6931	ldlang.c	FUNCTION_155
0x400a524	            0x31c0	                            xor eax, eax	      6931	ldlang.c	FUNCTION_155
0x400a526	    0x833d00000000	               cmp dword [0x0400a52d], 1	      6932	ldlang.c	FUNCTION_155	IF_1
0x400a52d	     0xf868e000000	                           jbe 0x400a5c1	      6932	ldlang.c	FUNCTION_155	IF_1
0x400a533	            0x85ff	                           test edi, edi	      6974	ldlang.c	FUNCTION_155	IF_2
0x400a535	      0x488d5c2404	                      lea rbx, [rsp + 4]	      6974	ldlang.c	FUNCTION_155	IF_2
0x400a53a	            0x7527	                           jne 0x400a563	      6974	ldlang.c	FUNCTION_155	IF_2
0x400a53c	      0x488b442408	                mov rax, qword [rsp + 8]	      6981	ldlang.c	FUNCTION_155
0x400a541	    0x644833042528	                xor rax, qword fs:[0x28]	      6981	ldlang.c	FUNCTION_155
0x400a54a	     0xf852b020000	                           jne 0x400a77b	      6981	ldlang.c	FUNCTION_155
0x400a550	        0x4883c418	                           add rsp, 0x18	      6981	ldlang.c	FUNCTION_155
0x400a554	              0x5b	                                 pop rbx	      6981	ldlang.c	FUNCTION_155
0x400a555	              0x5d	                                 pop rbp	      6981	ldlang.c	FUNCTION_155
0x400a556	              0xc3	                                     ret	      6981	ldlang.c	FUNCTION_155
0x400a557	    0x830500000000	               add dword [0x0400a55e], 1	      6969	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a55e	          0x83ed01	                              sub ebp, 1	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a561	            0x7577	                           jne 0x400a5da	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a563	    0x488b35000000	            mov rsi, qword [0x0400a56a] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a56a	    0x488b3d000000	            mov rdi, qword [0x0400a571] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a571	          0x4989d8	                             mov r8, rbx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a574	            0x31c9	                            xor ecx, ecx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a576	            0x31d2	                            xor edx, edx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a578	    0xc74424040000	                  mov dword [rsp + 4], 0	      5916	ldlang.c	FUNCTION_123
0x400a580	    0x830500000000	               add dword [0x0400a587], 1	      5921	ldlang.c	FUNCTION_123
0x400a587	    0x48c705000000	               mov qword [0x0400a592], 0	      5918	ldlang.c	FUNCTION_123
0x400a592	    0xc70500000000	               mov dword [0x0400a59c], 0	      5919	ldlang.c	FUNCTION_123
0x400a59c	    0xc70500000000	               mov dword [0x0400a5a6], 3	      5920	ldlang.c	FUNCTION_123
0x400a5a6	      0xe8c55effff	          call sym.lang_do_assignments_1	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a5ab	      0xe800000000	                          call 0x400a5b0	      6978	ldlang.c	FUNCTION_155	IF_2	CALL_5
0x400a5b0	      0xbe01000000	                              mov esi, 1	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x400a5b5	            0x31ff	                            xor edi, edi	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x400a5b7	      0xe800000000	                          call 0x400a5bc	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x400a5bc	      0xe97bffffff	                           jmp 0x400a53c	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x400a5c1	    0x8b2d00000000	            mov ebp, dword [0x0400a5c7] 	      6935	ldlang.c	FUNCTION_155	IF_1
0x400a5c7	      0x488d5c2404	                      lea rbx, [rsp + 4]	      6935	ldlang.c	FUNCTION_155	IF_1
0x400a5cc	    0xc70500000000	               mov dword [0x0400a5d6], 0	      6938	ldlang.c	FUNCTION_155	IF_1
0x400a5d6	            0x85ed	                           test ebp, ebp	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a5d8	            0x7489	                            je 0x400a563	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a5da	      0xb8ffffffff	                     mov eax, 0xffffffff	      6931	ldlang.c	FUNCTION_155
0x400a5df	              0x90	                                     nop	      6931	ldlang.c	FUNCTION_155
0x400a5e0	    0x488b35000000	            mov rsi, qword [0x0400a5e7] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a5e7	    0x488b3d000000	            mov rdi, qword [0x0400a5ee] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a5ee	          0x83c001	                              add eax, 1	      6948	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1
0x400a5f1	            0x31c9	                            xor ecx, ecx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a5f3	            0x31d2	                            xor edx, edx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a5f5	          0x4989d8	                             mov r8, rbx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a5f8	    0x830500000000	               add dword [0x0400a5ff], 1	      5921	ldlang.c	FUNCTION_123
0x400a5ff	    0x890500000000	            mov dword [0x0400a605], eax 	      6948	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1
0x400a605	    0xc74424040000	                  mov dword [rsp + 4], 0	      5916	ldlang.c	FUNCTION_123
0x400a60d	    0x48c705000000	               mov qword [0x0400a618], 0	      5918	ldlang.c	FUNCTION_123
0x400a618	    0xc70500000000	               mov dword [0x0400a622], 0	      5919	ldlang.c	FUNCTION_123
0x400a622	    0xc70500000000	               mov dword [0x0400a62c], 3	      5920	ldlang.c	FUNCTION_123
0x400a62c	      0xe83f5effff	          call sym.lang_do_assignments_1	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400a631	    0x488b05000000	            mov rax, qword [0x0400a638] 	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400a638	          0x4885c0	                           test rax, rax	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400a63b	            0x741c	                            je 0x400a659	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400a63d	           0xf1f00	                         nop dword [rax]	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400a640	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      6758	ldlang.c	FUNCTION_148	FOR_1
0x400a644	    0x48c740400000	               mov qword [rax + 0x40], 0	      6759	ldlang.c	FUNCTION_148	FOR_1
0x400a64c	        0x48895038	             mov qword [rax + 0x38], rdx	      6758	ldlang.c	FUNCTION_148	FOR_1
0x400a650	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400a654	          0x4885c0	                           test rax, rax	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400a657	            0x75e7	                           jne 0x400a640	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400a659	    0x488b05000000	            mov rax, qword [0x0400a660] 	      6762	ldlang.c	FUNCTION_148	FOR_2
0x400a660	          0x4885c0	                           test rax, rax	      6762	ldlang.c	FUNCTION_148	FOR_2
0x400a663	            0x7413	                            je 0x400a678	      6762	ldlang.c	FUNCTION_148	FOR_2
0x400a665	           0xf1f00	                         nop dword [rax]	      6762	ldlang.c	FUNCTION_148	FOR_2
0x400a668	    0x80a090000000	             and byte [rax + 0x90], 0xfc	      6767	ldlang.c	FUNCTION_148	FOR_2
0x400a66f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6764	ldlang.c	FUNCTION_148	FOR_2
0x400a673	          0x4885c0	                           test rax, rax	      6762	ldlang.c	FUNCTION_148	FOR_2
0x400a676	            0x75f0	                           jne 0x400a668	      6762	ldlang.c	FUNCTION_148	FOR_2
0x400a678	    0x488b05000000	            mov rax, qword [0x0400a67f] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400a67f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400a686	          0x4885c0	                           test rax, rax	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400a689	            0x7424	                            je 0x400a6af	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400a68b	       0xf1f440000	                   nop dword [rax + rax]	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400a690	        0xf6402108	               test byte [rax + 0x21], 8	      6774	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x400a694	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      6773	ldlang.c	FUNCTION_148	FOR_3
0x400a698	        0x48895040	             mov qword [rax + 0x40], rdx	      6773	ldlang.c	FUNCTION_148	FOR_3
0x400a69c	            0x7508	                           jne 0x400a6a6	      6774	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x400a69e	    0x48c740380000	               mov qword [rax + 0x38], 0	      6775	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x400a6a6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400a6aa	          0x4885c0	                           test rax, rax	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400a6ad	            0x75e1	                           jne 0x400a690	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400a6af	    0x488b35000000	            mov rsi, qword [0x0400a6b6] 	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a6b6	          0x4531c9	                            xor r9d, r9d	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a6b9	            0x31c9	                            xor ecx, ecx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a6bb	            0x31d2	                            xor edx, edx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a6bd	          0x4989e0	                             mov r8, rsp	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a6c0	      0xbf00000000	                              mov edi, 0	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a6c5	    0x830500000000	               add dword [0x0400a6cc], 1	      5601	ldlang.c	FUNCTION_117
0x400a6cc	    0xc70424000000	                      mov dword [rsp], 0	      6964	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1
0x400a6d3	    0xc70500000000	               mov dword [0x0400a6dd], 2	      5711	ldlang.c	FUNCTION_121
0x400a6dd	    0xc70500000000	               mov dword [0x0400a6e7], 0	      5712	ldlang.c	FUNCTION_121
0x400a6e7	      0xe8849bffff	           call sym.lang_size_sections_1	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a6ec	    0x833d00000000	               cmp dword [0x0400a6f3], 3	      5716	ldlang.c	FUNCTION_121	IF_1
0x400a6f3	            0x7423	                            je 0x400a718	      5716	ldlang.c	FUNCTION_121	IF_1
0x400a6f5	    0xc70500000000	               mov dword [0x0400a6ff], 6	      5717	ldlang.c	FUNCTION_121	IF_1
0x400a6ff	          0x8b0424	                    mov eax, dword [rsp]	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a702	            0x85c0	                           test eax, eax	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a704	     0xf844dfeffff	                            je 0x400a557	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a70a	    0x8b0500000000	            mov eax, dword [0x0400a710] 	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a710	      0xe9cbfeffff	                           jmp 0x400a5e0	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a715	           0xf1f00	                         nop dword [rax]	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400a718	            0x31f6	                            xor esi, esi	      5721	ldlang.c	FUNCTION_121	IF_2
0x400a71a	          0x4889e7	                            mov rdi, rsp	      5721	ldlang.c	FUNCTION_121	IF_2
0x400a71d	      0xe87efbffff	        call sym.lang_size_relro_segment	      5721	ldlang.c	FUNCTION_121	IF_2
0x400a722	            0x85c0	                           test eax, eax	      5724	ldlang.c	FUNCTION_121	IF_2	IF_3
0x400a724	            0x752c	                           jne 0x400a752	      5724	ldlang.c	FUNCTION_121	IF_2	IF_3
0x400a726	    0xf60500000000	           test byte [0x0400a72d], 0x10 	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a72d	            0x74d0	                            je 0x400a6ff	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a72f	    0x488b05000000	            mov rax, qword [0x0400a736] 	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a736	          0x4885c0	                           test rax, rax	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a739	            0x74c4	                            je 0x400a6ff	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a73b	    0x488b15000000	            mov rdx, qword [0x0400a742] 	      5732	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a742	    0x488905000000	            mov qword [0x0400a749], rax 	      5733	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a749	    0x488915000000	            mov qword [0x0400a750], rdx 	      5732	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a750	            0xebad	                           jmp 0x400a6ff	      5732	ldlang.c	FUNCTION_121	IF_2	IF_4
0x400a752	      0xe800000000	                          call 0x400a757	      5726	ldlang.c	FUNCTION_121	IF_2	IF_3	CALL_3
0x400a757	    0x488b35000000	            mov rsi, qword [0x0400a75e] 	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a75e	          0x4531c9	                            xor r9d, r9d	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a761	          0x4989e0	                             mov r8, rsp	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a764	            0x31c9	                            xor ecx, ecx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a766	            0x31d2	                            xor edx, edx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a768	      0xbf00000000	                              mov edi, 0	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a76d	    0x830500000000	               add dword [0x0400a774], 1	      5601	ldlang.c	FUNCTION_117
0x400a774	      0xe8f79affff	           call sym.lang_size_sections_1	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a779	            0xebab	                           jmp 0x400a726	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a77b	      0xe800000000	               call sym.lang_add_gc_name	      6981	ldlang.c	FUNCTION_155
insert_os_after	IF,4:ELSE,0:SWITCH,1:functions,0:CALL,0:DO,0:FOR,1:WHILE,0	55
0x4000060	          0x4531c0	                            xor r8d, r8d	      1764	ldlang.c	FUNCTION_49
0x4000063	    0x48393d000000	            cmp qword [0x0400006a], rdi 	      1764	ldlang.c	FUNCTION_49
0x400006a	          0x488b17	                    mov rdx, qword [rdi]	      1766	ldlang.c	FUNCTION_49	FOR_1
0x400006d	          0x4889f8	                            mov rax, rdi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000070	        0x410f94c0	                                sete r8b	      1764	ldlang.c	FUNCTION_49
0x4000074	          0x4885d2	                           test rdx, rdx	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000077	            0x744a	                            je 0x40000c3	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000079	            0x31f6	                            xor esi, esi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x400007b	        0x837a080f	                cmp dword [rdx + 8], 0xf	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x400007f	            0x7742	                            ja 0x40000c3	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000081	          0x8b4a08	                mov ecx, dword [rdx + 8]	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000084	    0xff24cd000000	                       jmp qword [rcx*8]	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x400008b	       0xf1f440000	                   nop dword [rax + rax]	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000090	          0x4885f6	                           test rsi, rsi	      1773	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1
0x4000093	            0x745b	                            je 0x40000f0	      1773	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1
0x4000095	          0x4531c0	                            xor r8d, r8d	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000098	          0x4889d0	                            mov rax, rdx	      1768	ldlang.c	FUNCTION_49	FOR_1
0x400009b	          0x488b12	                    mov rdx, qword [rdx]	      1768	ldlang.c	FUNCTION_49	FOR_1
0x400009e	          0x4885d2	                           test rdx, rdx	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000a1	            0x75d8	                           jne 0x400007b	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000a3	            0xf3c3	                                     ret	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000a5	           0xf1f00	                         nop dword [rax]	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000a8	          0x4889d0	                            mov rax, rdx	      1768	ldlang.c	FUNCTION_49	FOR_1
0x40000ab	          0x488b12	                    mov rdx, qword [rdx]	      1768	ldlang.c	FUNCTION_49	FOR_1
0x40000ae	            0x31f6	                            xor esi, esi	      1794	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x40000b0	          0x4885d2	                           test rdx, rdx	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000b3	            0x75c6	                           jne 0x400007b	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000b5	            0xebec	                           jmp 0x40000a3	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000b7	    0x660f1f840000	                    nop word [rax + rax]	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000c0	          0x4889f0	                            mov rax, rsi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000c3	            0xf3c3	                                     ret	      1819	ldlang.c	FUNCTION_49
0x40000c5	           0xf1f00	                         nop dword [rax]	      1819	ldlang.c	FUNCTION_49
0x40000c8	          0x4885f6	                           test rsi, rsi	      1797	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x40000cb	            0x74f6	                            je 0x40000c3	      1797	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x40000cd	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1799	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x40000d1	          0x4885d2	                           test rdx, rdx	      1801	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000d4	            0x74ea	                            je 0x40000c0	      1801	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000d6	    0x4883ba080100	              cmp qword [rdx + 0x108], 0	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000de	            0x74e0	                            je 0x40000c0	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000e0	        0xf6422001	               test byte [rdx + 0x20], 1	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000e4	        0x480f45c6	                         cmovne rax, rsi	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000e8	              0xc3	                                     ret	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000e9	     0xf1f80000000	                         nop dword [rax]	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000f0	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x40000f4	        0x83791008	               cmp dword [rcx + 0x10], 8	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x40000f8	            0x749b	                            je 0x4000095	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x40000fa	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x40000fe	          0x80392e	                    cmp byte [rcx], 0x2e	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000101	            0x7592	                           jne 0x4000095	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000103	        0x80790100	                   cmp byte [rcx + 1], 0	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000107	            0x758c	                           jne 0x4000095	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000109	          0x4585c0	                           test r8d, r8d	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x400010c	            0x7587	                           jne 0x4000095	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x400010e	          0x4889c6	                            mov rsi, rax	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000111	            0xeb82	                           jmp 0x4000095	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
stat_alloc	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	41
0x4003e50	    0x488b0d000000	            mov rcx, qword [0x04003e57] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e57	              0x53	                                push rbx	       139	ldlang.c	FUNCTION_1
0x4003e58	          0x4889fb	                            mov rbx, rdi	       139	ldlang.c	FUNCTION_1
0x4003e5b	    0x488b3d000000	            mov rdi, qword [0x04003e62] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e62	          0x4889c8	                            mov rax, rcx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e65	          0x4829f8	                            sub rax, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e68	          0x4839c3	                            cmp rbx, rax	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e6b	            0x7753	                            ja 0x4003ec0	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e6d	    0x488b05000000	            mov rax, qword [0x04003e74] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e74	          0x4801fb	                            add rbx, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e77	          0x4839c3	                            cmp rbx, rax	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e7a	            0x746e	                            je 0x4003eea	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e7c	    0x488b15000000	            mov rdx, qword [0x04003e83] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e83	        0x488d3c13	                    lea rdi, [rbx + rdx]	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e87	          0x48f7d2	                                 not rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e8a	          0x4889cb	                            mov rbx, rcx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e8d	          0x4821d7	                            and rdi, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e90	    0x488b15000000	            mov rdx, qword [0x04003e97] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e97	          0x4889fe	                            mov rsi, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003e9a	    0x48893d000000	            mov qword [0x04003ea1], rdi 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ea1	          0x4829d6	                            sub rsi, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ea4	          0x4829d3	                            sub rbx, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ea7	          0x4839de	                            cmp rsi, rbx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003eaa	            0x760a	                           jbe 0x4003eb6	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003eac	    0x48890d000000	            mov qword [0x04003eb3], rcx 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003eb3	          0x4889cf	                            mov rdi, rcx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003eb6	    0x48893d000000	            mov qword [0x04003ebd], rdi 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ebd	              0x5b	                                 pop rbx	       141	ldlang.c	FUNCTION_1
0x4003ebe	              0xc3	                                     ret	       141	ldlang.c	FUNCTION_1
0x4003ebf	              0x90	                                     nop	       141	ldlang.c	FUNCTION_1
0x4003ec0	          0x4889de	                            mov rsi, rbx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ec3	      0xbf00000000	                              mov edi, 0	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ec8	      0xe800000000	                          call 0x4003ecd	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ecd	    0x488b3d000000	            mov rdi, qword [0x04003ed4] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ed4	    0x488b05000000	            mov rax, qword [0x04003edb] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003edb	    0x488b0d000000	            mov rcx, qword [0x04003ee2] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ee2	          0x4801fb	                            add rbx, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ee5	          0x4839c3	                            cmp rbx, rax	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ee8	            0x7592	                           jne 0x4003e7c	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003eea	    0x800d00000000	                 or byte [0x04003ef1], 2	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003ef1	            0xeb89	                           jmp 0x4003e7c	       140	ldlang.c	FUNCTION_1	CALL_1
lang_add_output_format	IF,3:ELSE,1:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	18
0x400b700	    0x48833d000000	               cmp qword [0x0400b708], 0	      7685	ldlang.c	FUNCTION_180	IF_1
0x400b708	            0x7406	                            je 0x400b710	      7685	ldlang.c	FUNCTION_180	IF_1
0x400b70a	            0x85c9	                           test ecx, ecx	      7685	ldlang.c	FUNCTION_180	IF_1
0x400b70c	            0x7402	                            je 0x400b710	      7685	ldlang.c	FUNCTION_180	IF_1
0x400b70e	            0xf3c3	                                     ret	      7685	ldlang.c	FUNCTION_180	IF_1
0x400b710	    0x8b0500000000	            mov eax, dword [0x0400b716] 	      7687	ldlang.c	FUNCTION_180	IF_1	IF_2
0x400b716	          0x83f801	                              cmp eax, 1	      7687	ldlang.c	FUNCTION_180	IF_1	IF_2
0x400b719	            0x7415	                            je 0x400b730	      7687	ldlang.c	FUNCTION_180	IF_1	IF_2
0x400b71b	          0x83f802	                              cmp eax, 2	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x400b71e	            0x7507	                           jne 0x400b727	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x400b720	          0x4885d2	                           test rdx, rdx	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x400b723	        0x480f45fa	                         cmovne rdi, rdx	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x400b727	    0x48893d000000	            mov qword [0x0400b72e], rdi 	      7694	ldlang.c	FUNCTION_180	IF_1
0x400b72e	              0xc3	                                     ret	      7694	ldlang.c	FUNCTION_180	IF_1
0x400b72f	              0x90	                                     nop	      7694	ldlang.c	FUNCTION_180	IF_1
0x400b730	          0x4885f6	                           test rsi, rsi	      7694	ldlang.c	FUNCTION_180	IF_1
0x400b733	        0x480f45fe	                         cmovne rdi, rsi	      7694	ldlang.c	FUNCTION_180	IF_1
0x400b737	            0xebee	                           jmp 0x400b727	      7694	ldlang.c	FUNCTION_180	IF_1
version_expr_head_hash	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0	2
0x4000a60	        0x488b7f08	                mov rdi, qword [rdi + 8]	      8352	ldlang.c	FUNCTION_196	CALL_1
0x4000a64	      0xe900000000	                           jmp 0x4000a69	      8352	ldlang.c	FUNCTION_196	CALL_1
lang_float	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	2
0x400aff0	    0x893d00000000	            mov dword [0x0400aff6], edi 	      7612	ldlang.c	FUNCTION_176
0x400aff6	              0xc3	                                     ret	      7612	ldlang.c	FUNCTION_176
lang_process	IF,21:ELSE,2:SWITCH,0:functions,0:CALL,66:DO,0:FOR,1:WHILE,1	2113
0x400c930	            0x4157	                                push r15	      7157	ldlang.c	FUNCTION_163
0x400c932	            0x4156	                                push r14	      7157	ldlang.c	FUNCTION_163
0x400c934	            0x4155	                                push r13	      7157	ldlang.c	FUNCTION_163
0x400c936	            0x4154	                                push r12	      7157	ldlang.c	FUNCTION_163
0x400c938	              0x55	                                push rbp	      7157	ldlang.c	FUNCTION_163
0x400c939	              0x53	                                push rbx	      7157	ldlang.c	FUNCTION_163
0x400c93a	        0x4883ec48	                           sub rsp, 0x48	      7157	ldlang.c	FUNCTION_163
0x400c93e	    0x488b3d000000	            mov rdi, qword [0x0400c945] 	      7159	ldlang.c	FUNCTION_163	IF_1
0x400c945	    0x64488b042528	                mov rax, qword fs:[0x28]	      7157	ldlang.c	FUNCTION_163
0x400c94e	      0x4889442438	             mov qword [rsp + 0x38], rax	      7157	ldlang.c	FUNCTION_163
0x400c953	            0x31c0	                            xor eax, eax	      7157	ldlang.c	FUNCTION_163
0x400c955	          0x4885ff	                           test rdi, rdi	      7159	ldlang.c	FUNCTION_163	IF_1
0x400c958	            0x7405	                            je 0x400c95f	      7159	ldlang.c	FUNCTION_163	IF_1
0x400c95a	      0xe8a13fffff	call sym.lang_finalize_version_expr_head	      7160	ldlang.c	FUNCTION_163	CALL_1
0x400c95f	    0x488b05000000	            mov rax, qword [0x0400c966] 	      7162	ldlang.c	FUNCTION_163
0x400c966	    0x488b3d000000	            mov rdi, qword [0x0400c96d] 	      1001	ldlang.c	FUNCTION_29	CALL_1
0x400c96d	    0x488905000000	            mov qword [0x0400c974], rax 	      7162	ldlang.c	FUNCTION_163
0x400c974	      0xe8b759ffff	call sym.lang_for_each_statement_worker.constprop.59	      1001	ldlang.c	FUNCTION_29	CALL_1
0x400c979	      0xe85245ffff	                       call sym.init_opb	      7166	ldlang.c	FUNCTION_163	CALL_3
0x400c97e	      0xe800000000	                          call 0x400c983	      7168	ldlang.c	FUNCTION_163	CALL_4
0x400c983	    0x488b2d000000	            mov rbp, qword [0x0400c98a] 	      3431	ldlang.c	FUNCTION_81	FOR_1
0x400c98a	          0x4885ed	                           test rbp, rbp	      3431	ldlang.c	FUNCTION_81	FOR_1
0x400c98d	            0x751a	                           jne 0x400c9a9	      3431	ldlang.c	FUNCTION_81	FOR_1
0x400c98f	            0xeb66	                           jmp 0x400c9f7	      3431	ldlang.c	FUNCTION_81	FOR_1
0x400c991	     0xf1f80000000	                         nop dword [rax]	      3431	ldlang.c	FUNCTION_81	FOR_1
0x400c998	          0x4889de	                            mov rsi, rbx	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x400c99b	      0xe800000000	                          call 0x400c9a0	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x400c9a0	        0x488b6d00	                    mov rbp, qword [rbp]	      3431	ldlang.c	FUNCTION_81	FOR_1
0x400c9a4	          0x4885ed	                           test rbp, rbp	      3431	ldlang.c	FUNCTION_81	FOR_1
0x400c9a7	            0x744e	                            je 0x400c9f7	      3431	ldlang.c	FUNCTION_81	FOR_1
0x400c9a9	        0x488b7508	                mov rsi, qword [rbp + 8]	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400c9ad	    0x488b3d000000	            mov rdi, qword [0x0400c9b4] 	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400c9b4	            0x31c9	                            xor ecx, ecx	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400c9b6	    0x41b801000000	                              mov r8d, 1	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400c9bc	      0xba01000000	                              mov edx, 1	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400c9c1	      0xe800000000	                          call 0x400c9c6	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400c9c6	          0x4885c0	                           test rax, rax	      3410	ldlang.c	FUNCTION_80	IF_1
0x400c9c9	          0x4889c3	                            mov rbx, rax	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400c9cc	     0xf847e130000	                            je 0x400dd50	      3410	ldlang.c	FUNCTION_80	IF_1
0x400c9d2	        0x807b1800	                cmp byte [rbx + 0x18], 0	      3412	ldlang.c	FUNCTION_80	IF_2
0x400c9d6	            0x75c8	                           jne 0x400c9a0	      3412	ldlang.c	FUNCTION_80	IF_2
0x400c9d8	    0x48c743280000	               mov qword [rbx + 0x28], 0	      3415	ldlang.c	FUNCTION_80	IF_2
0x400c9e0	    0x488b3d000000	            mov rdi, qword [0x0400c9e7] 	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x400c9e7	        0xc6431801	                mov byte [rbx + 0x18], 1	      3414	ldlang.c	FUNCTION_80	IF_2
0x400c9eb	        0x837f4001	               cmp dword [rdi + 0x40], 1	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x400c9ef	            0x75a7	                           jne 0x400c998	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x400c9f1	        0x804b6420	              or byte [rbx + 0x64], 0x20	      3417	ldlang.c	FUNCTION_80	IF_2	IF_3
0x400c9f5	            0xeba1	                           jmp 0x400c998	      3417	ldlang.c	FUNCTION_80	IF_2	IF_3
0x400c9f7	      0xe800000000	                          call 0x400c9fc	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x400c9fc	            0x85c0	                           test eax, eax	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x400c9fe	     0xf842c1d0000	                            je 0x400e730	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x400ca04	    0x488b05000000	            mov rax, qword [0x0400ca0b] 	      7177	ldlang.c	FUNCTION_163
0x400ca0b	    0x488b3d000000	            mov rdi, qword [0x0400ca12] 	      7179	ldlang.c	FUNCTION_163	CALL_9
0x400ca12	            0x31f6	                            xor esi, esi	      7179	ldlang.c	FUNCTION_163	CALL_9
0x400ca14	    0x830500000000	               add dword [0x0400ca1b], 1	      7178	ldlang.c	FUNCTION_163
0x400ca1b	    0x488905000000	            mov qword [0x0400ca22], rax 	      7177	ldlang.c	FUNCTION_163
0x400ca22	      0xe8c9d0ffff	                call sym.open_input_bfds	      7179	ldlang.c	FUNCTION_163	CALL_9
0x400ca27	    0xf60500000000	               test byte [0x0400ca2e], 2	      7182	ldlang.c	FUNCTION_163	IF_3
0x400ca2e	     0xf85ce190000	                           jne 0x400e402	      7182	ldlang.c	FUNCTION_163	IF_3
0x400ca34	    0x48833d000000	               cmp qword [0x0400ca3c], 0	      7270	ldlang.c	FUNCTION_163	CALL_27
0x400ca3c	            0x740f	                            je 0x400ca4d	      7270	ldlang.c	FUNCTION_163	CALL_27
0x400ca3e	      0xbe661c0000	                         mov esi, 0x1c66	      7270	ldlang.c	FUNCTION_163	CALL_27
0x400ca43	      0xbf00000000	                              mov edi, 0	      7270	ldlang.c	FUNCTION_163	CALL_27
0x400ca48	      0xe800000000	                          call 0x400ca4d	      7270	ldlang.c	FUNCTION_163	CALL_27
0x400ca4d	    0x48833d000000	               cmp qword [0x0400ca55], 0	      7274	ldlang.c	FUNCTION_163	IF_11
0x400ca55	    0x48c705000000	               mov qword [0x0400ca60], 0	      7272	ldlang.c	FUNCTION_163
0x400ca60	     0xf84361e0000	                            je 0x400e89c	      7274	ldlang.c	FUNCTION_163	IF_11
0x400ca66	    0x488b1d000000	            mov rbx, qword [0x0400ca6d] 	      7289	ldlang.c	FUNCTION_163	CALL_29
0x400ca6d	          0x4885db	                           test rbx, rbx	      7102	ldlang.c	FUNCTION_160	IF_1
0x400ca70	            0x741f	                            je 0x400ca91	      7102	ldlang.c	FUNCTION_160	IF_1
0x400ca72	      0xbf10000000	                           mov edi, 0x10	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400ca77	      0xe800000000	                          call 0x400ca7c	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400ca7c	    0x488b15000000	            mov rdx, qword [0x0400ca83] 	      7107	ldlang.c	FUNCTION_160
0x400ca83	        0x48895808	                mov qword [rax + 8], rbx	      7108	ldlang.c	FUNCTION_160
0x400ca87	          0x488910	                    mov qword [rax], rdx	      7107	ldlang.c	FUNCTION_160
0x400ca8a	    0x488905000000	            mov qword [0x0400ca91], rax 	      7109	ldlang.c	FUNCTION_160
0x400ca91	    0x488b1d000000	            mov rbx, qword [0x0400ca98] 	      7290	ldlang.c	FUNCTION_163	CALL_30
0x400ca98	          0x4885db	                           test rbx, rbx	      7102	ldlang.c	FUNCTION_160	IF_1
0x400ca9b	            0x741f	                            je 0x400cabc	      7102	ldlang.c	FUNCTION_160	IF_1
0x400ca9d	      0xbf10000000	                           mov edi, 0x10	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400caa2	      0xe800000000	                          call 0x400caa7	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400caa7	    0x488b15000000	            mov rdx, qword [0x0400caae] 	      7107	ldlang.c	FUNCTION_160
0x400caae	        0x48895808	                mov qword [rax + 8], rbx	      7108	ldlang.c	FUNCTION_160
0x400cab2	          0x488910	                    mov qword [rax], rdx	      7107	ldlang.c	FUNCTION_160
0x400cab5	    0x488905000000	            mov qword [0x0400cabc], rax 	      7109	ldlang.c	FUNCTION_160
0x400cabc	      0xe800000000	                          call 0x400cac1	      7292	ldlang.c	FUNCTION_163	CALL_31
0x400cac1	    0x48833d000000	               cmp qword [0x0400cac9], 0	      7293	ldlang.c	FUNCTION_163	IF_12
0x400cac9	     0xf849e000000	                            je 0x400cb6d	      7293	ldlang.c	FUNCTION_163	IF_12
0x400cacf	    0x48833d000000	               cmp qword [0x0400cad7], 0	      1995	ldlang.c	FUNCTION_51	IF_1
0x400cad7	     0xf8490000000	                            je 0x400cb6d	      1995	ldlang.c	FUNCTION_51	IF_1
0x400cadd	            0x31ff	                            xor edi, edi	      1998	ldlang.c	FUNCTION_51	CALL_2
0x400cadf	      0xba05000000	                              mov edx, 5	      1998	ldlang.c	FUNCTION_51	CALL_2
0x400cae4	      0xbe00000000	                              mov esi, 0	      1998	ldlang.c	FUNCTION_51	CALL_2
0x400cae9	      0xe800000000	                          call 0x400caee	      1998	ldlang.c	FUNCTION_51	CALL_2
0x400caee	          0x4889c7	                            mov rdi, rax	      1998	ldlang.c	FUNCTION_51	CALL_2
0x400caf1	            0x31c0	                            xor eax, eax	      1998	ldlang.c	FUNCTION_51	CALL_2
0x400caf3	      0xe800000000	                          call 0x400caf8	      1998	ldlang.c	FUNCTION_51	CALL_2
0x400caf8	    0x488b2d000000	            mov rbp, qword [0x0400caff] 	      2000	ldlang.c	FUNCTION_51	FOR_1
0x400caff	          0x4885ed	                           test rbp, rbp	      2000	ldlang.c	FUNCTION_51	FOR_1
0x400cb02	            0x7469	                            je 0x400cb6d	      2000	ldlang.c	FUNCTION_51	FOR_1
0x400cb04	        0x488b7508	                mov rsi, qword [rbp + 8]	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x400cb08	            0x31c0	                            xor eax, eax	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x400cb0a	      0xbf00000000	                              mov edi, 0	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x400cb0f	      0xe800000000	                          call 0x400cb14	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x400cb14	        0x488b7d08	                mov rdi, qword [rbp + 8]	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x400cb18	      0xe800000000	                          call 0x400cb1d	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x400cb1d	        0x4883f81c	                           cmp rax, 0x1c	      2007	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x400cb21	          0x4889c3	                            mov rbx, rax	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x400cb24	     0xf87fa020000	                            ja 0x400ce24	      2007	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x400cb2a	    0x660f1f440000	                    nop word [rax + rax]	      2007	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x400cb30	        0x4883c301	                              add rbx, 1	      2015	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x400cb34	      0xe800000000	                          call 0x400cb39	      2014	ldlang.c	FUNCTION_51	FOR_1	WHILE_1	CALL_6
0x400cb39	        0x4883fb1e	                           cmp rbx, 0x1e	      2012	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x400cb3d	            0x75f1	                           jne 0x400cb30	      2012	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x400cb3f	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x400cb43	          0x4885f6	                           test rsi, rsi	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x400cb46	            0x740c	                            je 0x400cb54	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x400cb48	      0xbf00000000	                              mov edi, 0	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x400cb4d	            0x31c0	                            xor eax, eax	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x400cb4f	      0xe800000000	                          call 0x400cb54	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x400cb54	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x400cb58	            0x31c0	                            xor eax, eax	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x400cb5a	      0xbf00000000	                              mov edi, 0	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x400cb5f	      0xe800000000	                          call 0x400cb64	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x400cb64	        0x488b6d00	                    mov rbp, qword [rbp]	      2000	ldlang.c	FUNCTION_51	FOR_1
0x400cb68	          0x4885ed	                           test rbp, rbp	      2000	ldlang.c	FUNCTION_51	FOR_1
0x400cb6b	            0x7597	                           jne 0x400cb04	      2000	ldlang.c	FUNCTION_51	FOR_1
0x400cb6d	      0xe800000000	                          call 0x400cb72	      7296	ldlang.c	FUNCTION_163	CALL_33
0x400cb72	    0x488b1d000000	            mov rbx, qword [0x0400cb79] 	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cb79	          0x4885db	                           test rbx, rbx	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cb7c	            0x7517	                           jne 0x400cb95	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cb7e	      0xe9bb000000	                           jmp 0x400cc3e	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cb83	       0xf1f440000	                   nop dword [rax + rax]	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cb88	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cb8c	          0x4885db	                           test rbx, rbx	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cb8f	     0xf84a9000000	                            je 0x400cc3e	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cb95	        0xf6434920	           test byte [rbx + 0x49], 0x20 	      6279	ldlang.c	FUNCTION_135	FOR_1	IF_1
0x400cb99	            0x75ed	                           jne 0x400cb88	      6279	ldlang.c	FUNCTION_135	FOR_1	IF_1
0x400cb9b	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      6282	ldlang.c	FUNCTION_135	FOR_1
0x400cb9f	    0x8b1500000000	            mov edx, dword [0x0400cba5] 	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x400cba5	    0x488b35000000	            mov rsi, qword [0x0400cbac] 	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x400cbac	          0x4889ef	                            mov rdi, rbp	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x400cbaf	      0xe800000000	                          call 0x400cbb4	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x400cbb4	          0x4989c4	                            mov r12, rax	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x400cbb7	     0xfb605000000	           movzx eax, byte [0x0400cbbe] 	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x400cbbe	          0x83e003	                              and eax, 3	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x400cbc1	            0x3c02	                               cmp al, 2	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x400cbc3	     0xf84a6010000	                            je 0x400cd6f	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x400cbc9	    0xf60500000000	               test byte [0x0400cbd0], 8	      6294	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cbd0	     0xf8599010000	                           jne 0x400cd6f	      6294	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cbd6	          0x4d85e4	                           test r12, r12	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x400cbd9	     0xf84f4010000	                            je 0x400cdd3	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x400cbdf	    0x8b85a0000000	            mov eax, dword [rbp + 0xa0] 	      6315	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x400cbe5	            0x85c0	                           test eax, eax	      6315	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x400cbe7	            0x749f	                            je 0x400cb88	      6315	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x400cbe9	    0x8b0500000000	            mov eax, dword [0x0400cbef] 	      6327	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_6
0x400cbef	          0x4531e4	                          xor r12d, r12d	      6320	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x400cbf2	            0x85c0	                           test eax, eax	      6327	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_6
0x400cbf4	     0xf8452150000	                            je 0x400e14c	      6327	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_6
0x400cbfa	    0x488b05000000	            mov rax, qword [0x0400cc01] 	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x400cc01	      0xbe00000000	                              mov esi, 0	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x400cc06	          0x4889ef	                            mov rdi, rbp	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x400cc09	        0x488b4008	                mov rax, qword [rax + 8]	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x400cc0d	    0xff9040010000	                call qword [rax + 0x140]	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x400cc13	            0x85c0	                           test eax, eax	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x400cc15	     0xf8522110000	                           jne 0x400dd3d	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x400cc1b	    0x8b0500000000	            mov eax, dword [0x0400cc21] 	      6331	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8
0x400cc21	            0x85c0	                           test eax, eax	      6331	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8
0x400cc23	     0xf85f6100000	                           jne 0x400dd1f	      6331	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8
0x400cc29	          0x4c89e7	                            mov rdi, r12	      6336	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_12
0x400cc2c	      0xe800000000	                          call 0x400cc31	      6336	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_12
0x400cc31	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cc35	          0x4885db	                           test rbx, rbx	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cc38	     0xf8557ffffff	                           jne 0x400cb95	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400cc3e	    0x48833d000000	               cmp qword [0x0400cc46], 0	      7306	ldlang.c	FUNCTION_163	IF_13
0x400cc46	     0xf84ca020000	                            je 0x400cf16	      7306	ldlang.c	FUNCTION_163	IF_13
0x400cc4c	    0x4c8b25000000	            mov r12, qword [0x0400cc53] 	      8580	ldlang.c	FUNCTION_201
0x400cc53	          0x4531ff	                          xor r15d, r15d	      8580	ldlang.c	FUNCTION_201
0x400cc56	          0x4d85e4	                           test r12, r12	      8580	ldlang.c	FUNCTION_201
0x400cc59	     0xf842d020000	                            je 0x400ce8c	      8580	ldlang.c	FUNCTION_201
0x400cc5f	    0x49be01002000	             movabs r14, 0x2000000200001	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x400cc69	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x400cc6e	      0xbe00000000	                              mov esi, 0	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x400cc73	      0xe800000000	                          call 0x400cc78	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x400cc78	          0x4885c0	                           test rax, rax	      8586	ldlang.c	FUNCTION_201	FUNCTION_1	IF_1
0x400cc7b	      0x4889442408	                mov qword [rsp + 8], rax	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x400cc80	          0x4989c5	                            mov r13, rax	      8586	ldlang.c	FUNCTION_201	FUNCTION_1	IF_1
0x400cc83	     0xf84f5010000	                            je 0x400ce7e	      8586	ldlang.c	FUNCTION_201	FUNCTION_1	IF_1
0x400cc89	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      8589	ldlang.c	FUNCTION_201	FUNCTION_1
0x400cc8d	          0x4889ef	                            mov rdi, rbp	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x400cc90	      0xe800000000	                          call 0x400cc95	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x400cc95	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400cc9a	            0x31c9	                            xor ecx, ecx	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400cc9c	          0x4989e8	                             mov r8, rbp	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400cc9f	          0x4889c2	                            mov rdx, rax	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400cca2	          0x4c89ee	                            mov rsi, r13	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400cca5	          0x4889c3	                            mov rbx, rax	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x400cca8	      0xe800000000	                          call 0x400ccad	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400ccad	            0x85c0	                           test eax, eax	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400ccaf	     0xf847b060000	                            je 0x400d330	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400ccb5	          0x4801dd	                            add rbp, rbx	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ccb8	          0x4839eb	                            cmp rbx, rbp	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ccbb	     0xf83b1010000	                           jae 0x400ce72	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ccc1	     0xf1f80000000	                         nop dword [rax]	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ccc8	      0xbf18000000	                           mov edi, 0x18	      8297	ldlang.c	FUNCTION_194	CALL_1
0x400cccd	      0xe800000000	                          call 0x400ccd2	      8297	ldlang.c	FUNCTION_194	CALL_1
0x400ccd2	          0x4c8938	                    mov qword [rax], r15	      8298	ldlang.c	FUNCTION_194
0x400ccd5	          0x4989c5	                            mov r13, rax	      8297	ldlang.c	FUNCTION_194	CALL_1
0x400ccd8	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      8300	ldlang.c	FUNCTION_194
0x400ccdc	          0x4889df	                            mov rdi, rbx	      8247	ldlang.c	FUNCTION_193	CALL_2
0x400ccdf	          0x83e0f9	                     and eax, 0xfffffff9	      8300	ldlang.c	FUNCTION_194
0x400cce2	          0x83c801	                               or eax, 1	      8301	ldlang.c	FUNCTION_194
0x400cce5	        0x41884510	               mov byte [r13 + 0x10], al	      8301	ldlang.c	FUNCTION_194
0x400cce9	      0xe800000000	                          call 0x400ccee	      8247	ldlang.c	FUNCTION_193	CALL_2
0x400ccee	        0x488d7801	                      lea rdi, [rax + 1]	      8247	ldlang.c	FUNCTION_193	CALL_2
0x400ccf2	      0xe800000000	                          call 0x400ccf7	      8247	ldlang.c	FUNCTION_193	CALL_2
0x400ccf7	           0xfb613	                   movzx edx, byte [rbx]	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400ccfa	            0x84d2	                             test dl, dl	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400ccfc	     0xf840e030000	                            je 0x400d010	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd02	          0x4889d9	                            mov rcx, rbx	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd05	          0x4989c0	                             mov r8, rax	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd08	          0x4531c9	                            xor r9d, r9d	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd0b	            0x31f6	                            xor esi, esi	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd0d	            0xeb18	                           jmp 0x400cd27	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd0f	              0x90	                                     nop	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd10	        0x4883c101	                              add rcx, 1	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd14	        0x418850ff	                   mov byte [r8 - 1], dl	      8256	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x400cd18	            0x31f6	                            xor esi, esi	      8257	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x400cd1a	           0xfb611	                   movzx edx, byte [rcx]	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd1d	    0x41b901000000	                              mov r9d, 1	      8258	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x400cd23	            0x84d2	                             test dl, dl	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd25	            0x7432	                            je 0x400cd59	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd27	            0x85f6	                           test esi, esi	      8253	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x400cd29	            0x75e5	                           jne 0x400cd10	      8253	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x400cd2b	          0x8d72d6	                   lea esi, [rdx - 0x2a]	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x400cd2e	        0x4080fe31	                           cmp sil, 0x31	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x400cd32	            0x770a	                            ja 0x400cd3e	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x400cd34	        0x490fa3f6	                             bt r14, rsi	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x400cd38	     0xf82f2000000	                            jb 0x400ce30	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x400cd3e	            0x31f6	                            xor esi, esi	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x400cd40	          0x80fa5c	                            cmp dl, 0x5c	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x400cd43	          0x418810	                       mov byte [r8], dl	      8268	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x400cd46	        0x400f94c6	                                sete sil	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x400cd4a	        0x4883c101	                              add rcx, 1	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd4e	           0xfb611	                   movzx edx, byte [rcx]	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd51	        0x4983c001	                               add r8, 1	      8268	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x400cd55	            0x84d2	                             test dl, dl	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd57	            0x75ce	                           jne 0x400cd27	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400cd59	          0x4585c9	                           test r9d, r9d	      8273	ldlang.c	FUNCTION_193	IF_3
0x400cd5c	     0xf84ae020000	                            je 0x400d010	      8273	ldlang.c	FUNCTION_193	IF_3
0x400cd62	        0x41c60000	                        mov byte [r8], 0	      8275	ldlang.c	FUNCTION_193	IF_3
0x400cd66	        0x49894508	                mov qword [r13 + 8], rax	      8302	ldlang.c	FUNCTION_194	CALL_2
0x400cd6a	      0xe9d2000000	                           jmp 0x400ce41	      8302	ldlang.c	FUNCTION_194	CALL_2
0x400cd6f	          0x4d85e4	                           test r12, r12	      6295	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd72	     0xf846c160000	                            je 0x400e3e4	      6295	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd78	    0x4c8b2d000000	            mov r13, qword [0x0400cd7f] 	      6297	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd7f	        0x488b4508	                mov rax, qword [rbp + 8]	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd83	        0x498b5508	                mov rdx, qword [r13 + 8]	      6297	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd87	          0x8b7a08	                mov edi, dword [rdx + 8]	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd8a	          0x397808	                cmp dword [rax + 8], edi	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd8d	     0xf844cfeffff	                            je 0x400cbdf	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd93	        0xf6454420	           test byte [rbp + 0x44], 0x20 	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd97	     0xf8442feffff	                            je 0x400cbdf	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400cd9d	          0x4c8b3a	                    mov r15, qword [rdx]	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cda0	          0x4c8b30	                    mov r14, qword [rax]	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cda3	            0x31ff	                            xor edi, edi	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cda5	      0xba05000000	                              mov edx, 5	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdaa	      0xbe00000000	                              mov esi, 0	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdaf	      0xe800000000	                          call 0x400cdb4	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdb4	          0x4d89e8	                             mov r8, r13	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdb7	          0x4889c7	                            mov rdi, rax	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdba	          0x4c89f9	                            mov rcx, r15	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdbd	            0x31c0	                            xor eax, eax	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdbf	          0x4889ea	                            mov rdx, rbp	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdc2	          0x4c89f6	                            mov rsi, r14	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdc5	      0xe800000000	                          call 0x400cdca	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400cdca	          0x4d85e4	                           test r12, r12	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x400cdcd	     0xf850cfeffff	                           jne 0x400cbdf	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x400cdd3	    0x8b0500000000	            mov eax, dword [0x0400cdd9] 	      6309	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4
0x400cdd9	            0x85c0	                           test eax, eax	      6309	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4
0x400cddb	     0xf84a7fdffff	                            je 0x400cb88	      6309	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4
0x400cde1	    0x488b3d000000	            mov rdi, qword [0x0400cde8] 	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400cde8	      0xe800000000	                          call 0x400cded	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400cded	          0x4889ef	                            mov rdi, rbp	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400cdf0	          0x4989c5	                            mov r13, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400cdf3	      0xe800000000	                          call 0x400cdf8	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400cdf8	            0x31ff	                            xor edi, edi	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400cdfa	          0x4989c4	                            mov r12, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400cdfd	      0xba05000000	                              mov edx, 5	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce02	      0xbe00000000	                              mov esi, 0	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce07	      0xe800000000	                          call 0x400ce0c	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce0c	          0x4c89e9	                            mov rcx, r13	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce0f	          0x4889c7	                            mov rdi, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce12	          0x4889ea	                            mov rdx, rbp	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce15	          0x4c89e6	                            mov rsi, r12	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce18	            0x31c0	                            xor eax, eax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce1a	      0xe800000000	                          call 0x400ce1f	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce1f	      0xe964fdffff	                           jmp 0x400cb88	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400ce24	      0xe800000000	                          call 0x400ce29	      2009	ldlang.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x400ce29	            0x31db	                            xor ebx, ebx	      2010	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x400ce2b	      0xe900fdffff	                           jmp 0x400cb30	      2010	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x400ce30	          0x4889c7	                            mov rdi, rax	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x400ce33	      0xe800000000	                          call 0x400ce38	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x400ce38	      0x41806510fe	             and byte [r13 + 0x10], 0xfe	      8306	ldlang.c	FUNCTION_194	IF_1
0x400ce3d	        0x49895d08	                mov qword [r13 + 8], rbx	      8305	ldlang.c	FUNCTION_194	IF_1
0x400ce41	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8310	ldlang.c	FUNCTION_194	IF_2
0x400ce46	          0x4c89ef	                            mov rdi, r13	      8322	ldlang.c	FUNCTION_194	CALL_8
0x400ce49	          0x83e0c7	                     and eax, 0xffffffc7	      8310	ldlang.c	FUNCTION_194	IF_2
0x400ce4c	          0x83c808	                               or eax, 8	      8310	ldlang.c	FUNCTION_194	IF_2
0x400ce4f	        0x41884510	               mov byte [r13 + 0x10], al	      8310	ldlang.c	FUNCTION_194	IF_2
0x400ce53	      0xe800000000	                          call 0x400ce58	      8322	ldlang.c	FUNCTION_194	CALL_8
0x400ce58	            0x31f6	                            xor esi, esi	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ce5a	          0x4889df	                            mov rdi, rbx	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ce5d	          0x4989c7	                            mov r15, rax	      8322	ldlang.c	FUNCTION_194	CALL_8
0x400ce60	      0xe800000000	                          call 0x400ce65	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ce65	        0x488d5801	                      lea rbx, [rax + 1]	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ce69	          0x4839eb	                            cmp rbx, rbp	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ce6c	     0xf8256feffff	                            jb 0x400ccc8	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x400ce72	      0x488b442408	                mov rax, qword [rsp + 8]	      8604	ldlang.c	FUNCTION_201	FUNCTION_1
0x400ce77	    0x814820008020	         or dword [rax + 0x20], 0x208000	      8604	ldlang.c	FUNCTION_201	FUNCTION_1
0x400ce7e	      0x4d8b642430	            mov r12, qword [r12 + 0x30] 	      8580	ldlang.c	FUNCTION_201
0x400ce83	          0x4d85e4	                           test r12, r12	      8580	ldlang.c	FUNCTION_201
0x400ce86	     0xf85ddfdffff	                           jne 0x400cc69	      8580	ldlang.c	FUNCTION_201
0x400ce8c	      0xbf18000000	                           mov edi, 0x18	      8297	ldlang.c	FUNCTION_194	CALL_1
0x400ce91	      0xe800000000	                          call 0x400ce96	      8297	ldlang.c	FUNCTION_194	CALL_1
0x400ce96	          0x4889c3	                            mov rbx, rax	      8297	ldlang.c	FUNCTION_194	CALL_1
0x400ce99	    0x48c700000000	                      mov qword [rax], 0	      8298	ldlang.c	FUNCTION_194
0x400cea0	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      8300	ldlang.c	FUNCTION_194
0x400cea4	      0xbf02000000	                              mov edi, 2	      8247	ldlang.c	FUNCTION_193	CALL_2
0x400cea9	          0x83e0f9	                     and eax, 0xfffffff9	      8300	ldlang.c	FUNCTION_194
0x400ceac	          0x83c801	                               or eax, 1	      8301	ldlang.c	FUNCTION_194
0x400ceaf	          0x884310	               mov byte [rbx + 0x10], al	      8301	ldlang.c	FUNCTION_194
0x400ceb2	      0xe800000000	                          call 0x400ceb7	      8247	ldlang.c	FUNCTION_193	CALL_2
0x400ceb7	          0x4889c7	                            mov rdi, rax	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x400ceba	      0xe800000000	                          call 0x400cebf	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x400cebf	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8310	ldlang.c	FUNCTION_194	IF_2
0x400cec3	          0x4889df	                            mov rdi, rbx	      8322	ldlang.c	FUNCTION_194	CALL_8
0x400cec6	    0x48c743080000	                  mov qword [rbx + 8], 0	      8305	ldlang.c	FUNCTION_194	IF_1
0x400cece	          0x83e0c6	                     and eax, 0xffffffc6	      8310	ldlang.c	FUNCTION_194	IF_2
0x400ced1	          0x83c808	                               or eax, 8	      8310	ldlang.c	FUNCTION_194	IF_2
0x400ced4	          0x884310	               mov byte [rbx + 0x10], al	      8310	ldlang.c	FUNCTION_194	IF_2
0x400ced7	      0xe800000000	                          call 0x400cedc	      8322	ldlang.c	FUNCTION_194	CALL_8
0x400cedc	      0xbe70000000	                           mov esi, 0x70	      8334	ldlang.c	FUNCTION_195	CALL_1
0x400cee1	      0xbf01000000	                              mov edi, 1	      8334	ldlang.c	FUNCTION_195	CALL_1
0x400cee6	          0x4889c3	                            mov rbx, rax	      8322	ldlang.c	FUNCTION_194	CALL_8
0x400cee9	      0xe800000000	                          call 0x400ceee	      8334	ldlang.c	FUNCTION_195	CALL_1
0x400ceee	    0x488b3d000000	            mov rdi, qword [0x0400cef5] 	      8608	ldlang.c	FUNCTION_201	CALL_2
0x400cef5	        0x4c897818	             mov qword [rax + 0x18], r15	      8335	ldlang.c	FUNCTION_195
0x400cef9	            0x31d2	                            xor edx, edx	      8608	ldlang.c	FUNCTION_201	CALL_2
0x400cefb	        0x48895838	             mov qword [rax + 0x38], rbx	      8336	ldlang.c	FUNCTION_195
0x400ceff	    0x48c740680000	               mov qword [rax + 0x68], 0	      8337	ldlang.c	FUNCTION_195
0x400cf07	          0x4889c6	                            mov rsi, rax	      8608	ldlang.c	FUNCTION_201	CALL_2
0x400cf0a	    0xc74060ffffff	     mov dword [rax + 0x60], 0xffffffff 	      8338	ldlang.c	FUNCTION_195
0x400cf11	      0xe800000000	                          call 0x400cf16	      8608	ldlang.c	FUNCTION_201	CALL_2
0x400cf16	      0xe800000000	                          call 0x400cf1b	      7311	ldlang.c	FUNCTION_163	CALL_36
0x400cf1b	    0x448b3d000000	           mov r15d, dword [0x0400cf22] 	      7316	ldlang.c	FUNCTION_163	IF_14
0x400cf22	          0x4585ff	                         test r15d, r15d	      7316	ldlang.c	FUNCTION_163	IF_14
0x400cf25	     0xf8533120000	                           jne 0x400e15e	      7316	ldlang.c	FUNCTION_163	IF_14
0x400cf2b	    0x488b35000000	            mov rsi, qword [0x0400cf32] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400cf32	    0x488b3d000000	            mov rdi, qword [0x0400cf39] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400cf39	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400cf3e	            0x31c9	                            xor ecx, ecx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400cf40	            0x31d2	                            xor edx, edx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400cf42	    0x830500000000	               add dword [0x0400cf49], 1	      5921	ldlang.c	FUNCTION_123
0x400cf49	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5916	ldlang.c	FUNCTION_123
0x400cf51	    0x48c705000000	               mov qword [0x0400cf5c], 0	      5918	ldlang.c	FUNCTION_123
0x400cf5c	    0xc70500000000	               mov dword [0x0400cf66], 0	      5919	ldlang.c	FUNCTION_123
0x400cf66	    0xc70500000000	               mov dword [0x0400cf70], 1	      5920	ldlang.c	FUNCTION_123
0x400cf70	      0xe8fb34ffff	          call sym.lang_do_assignments_1	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400cf75	    0x488b1d000000	            mov rbx, qword [0x0400cf7c] 	      8617	ldlang.c	FUNCTION_202
0x400cf7c	          0x4885db	                           test rbx, rbx	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400cf7f	            0x754c	                           jne 0x400cfcd	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400cf81	      0xe9c4000000	                           jmp 0x400d04a	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400cf86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400cf90	    0x488b05000000	            mov rax, qword [0x0400cf97] 	      8626	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x400cf97	        0x48894320	             mov qword [rbx + 0x20], rax	      8626	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x400cf9b	        0x48894338	             mov qword [rbx + 0x38], rax	      8627	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x400cf9f	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x400cfa3	          0x4885ff	                           test rdi, rdi	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x400cfa6	            0x741c	                            je 0x400cfc4	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x400cfa8	      0xe800000000	                          call 0x400cfad	      8635	ldlang.c	FUNCTION_202	FOR_1	IF_3	CALL_4
0x400cfad	    0x448b1d000000	           mov r11d, dword [0x0400cfb4] 	      8636	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x400cfb4	          0x4585db	                         test r11d, r11d	      8636	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x400cfb7	            0x7467	                            je 0x400d020	      8636	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x400cfb9	    0x488b05000000	            mov rax, qword [0x0400cfc0] 	      8637	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x400cfc0	        0x48894328	             mov qword [rbx + 0x28], rax	      8637	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x400cfc4	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400cfc8	          0x4885db	                           test rbx, rbx	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400cfcb	            0x747d	                            je 0x400d04a	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400cfcd	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x400cfd1	          0x4885ff	                           test rdi, rdi	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x400cfd4	            0x74c9	                            je 0x400cf9f	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x400cfd6	      0xe800000000	                          call 0x400cfdb	      8623	ldlang.c	FUNCTION_202	FOR_1	IF_1	CALL_1
0x400cfdb	    0x8b2d00000000	            mov ebp, dword [0x0400cfe1] 	      8624	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x400cfe1	            0x85ed	                           test ebp, ebp	      8624	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x400cfe3	            0x75ab	                           jne 0x400cf90	      8624	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x400cfe5	          0x488b2b	                    mov rbp, qword [rbx]	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400cfe8	            0x31ff	                            xor edi, edi	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400cfea	      0xba05000000	                              mov edx, 5	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400cfef	      0xbe00000000	                              mov esi, 0	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400cff4	      0xe800000000	                          call 0x400cff9	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400cff9	          0x4889ee	                            mov rsi, rbp	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400cffc	          0x4889c7	                            mov rdi, rax	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400cfff	            0x31c0	                            xor eax, eax	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400d001	      0xe800000000	                          call 0x400d006	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400d006	            0xeb97	                           jmp 0x400cf9f	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400d008	     0xf1f84000000	                   nop dword [rax + rax]	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400d010	          0x4889c7	                            mov rdi, rax	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x400d013	      0xe800000000	                          call 0x400d018	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x400d018	          0x4889d8	                            mov rax, rbx	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x400d01b	      0xe946fdffff	                           jmp 0x400cd66	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x400d020	          0x488b2b	                    mov rbp, qword [rbx]	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d023	            0x31ff	                            xor edi, edi	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d025	      0xba05000000	                              mov edx, 5	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d02a	      0xbe00000000	                              mov esi, 0	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d02f	      0xe800000000	                          call 0x400d034	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d034	          0x4889ee	                            mov rsi, rbp	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d037	          0x4889c7	                            mov rdi, rax	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d03a	            0x31c0	                            xor eax, eax	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d03c	      0xe800000000	                          call 0x400d041	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x400d041	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400d045	          0x4885db	                           test rbx, rbx	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400d048	            0x7583	                           jne 0x400cfcd	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400d04a	    0xf60500000000	           test byte [0x0400d051], 0x20 	      6348	ldlang.c	FUNCTION_136	IF_1
0x400d051	    0xc70500000000	               mov dword [0x0400d05b], 0	      7324	ldlang.c	FUNCTION_163
0x400d05b	            0x7577	                           jne 0x400d0d4	      6348	ldlang.c	FUNCTION_136	IF_1
0x400d05d	     0xfb635000000	           movzx esi, byte [0x0400d064] 	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x400d064	            0x89f0	                            mov eax, esi	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x400d066	          0x83e003	                              and eax, 3	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x400d069	            0x3c02	                               cmp al, 2	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x400d06b	     0xf84860d0000	                            je 0x400ddf7	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x400d071	    0x8b0500000000	            mov eax, dword [0x0400d077] 	      6354	ldlang.c	FUNCTION_136	IF_3
0x400d077	            0x85c0	                           test eax, eax	      6354	ldlang.c	FUNCTION_136	IF_3
0x400d079	     0xf8488180000	                            je 0x400e907	      6354	ldlang.c	FUNCTION_136	IF_3
0x400d07f	          0x83f802	                              cmp eax, 2	      6360	ldlang.c	FUNCTION_136	ELSE_1	IF_4
0x400d082	     0xf84601a0000	                            je 0x400eae8	      6360	ldlang.c	FUNCTION_136	ELSE_1	IF_4
0x400d088	    0xc74424300000	               mov dword [rsp + 0x30], 0	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x400d090	    0x488b3d000000	            mov rdi, qword [0x0400d097] 	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x400d097	      0x488d542430	                   lea rdx, [rsp + 0x30]	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x400d09c	      0xbe00000000	                              mov esi, 0	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x400d0a1	      0xe800000000	                          call 0x400d0a6	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x400d0a6	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x400d0aa	          0x83c001	                              add eax, 1	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x400d0ad	          0x83f804	                              cmp eax, 4	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x400d0b0	        0x89442430	             mov dword [rsp + 0x30], eax	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x400d0b4	            0x76da	                           jbe 0x400d090	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x400d0b6	    0xc7442430ffff	     mov dword [rsp + 0x30], 0xffffffff 	      6373	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2
0x400d0be	    0x488b3d000000	            mov rdi, qword [0x0400d0c5] 	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x400d0c5	      0x488d542430	                   lea rdx, [rsp + 0x30]	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x400d0ca	      0xbe00000000	                              mov esi, 0	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x400d0cf	      0xe800000000	                          call 0x400d0d4	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x400d0d4	    0x488b1d000000	            mov rbx, qword [0x0400d0db] 	      6826	ldlang.c	FUNCTION_151	CALL_1
0x400d0db	          0x4885db	                           test rbx, rbx	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d0de	            0x7526	                           jne 0x400d106	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d0e0	            0xeb47	                           jmp 0x400d129	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d0e2	    0x660f1f440000	                    nop word [rax + rax]	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d0e8	          0x83f80d	                            cmp eax, 0xd	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d0eb	            0x742b	                            je 0x400d118	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d0ed	          0x83f80f	                            cmp eax, 0xf	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d0f0	            0x750c	                           jne 0x400d0fe	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d0f2	    0x488b3d000000	            mov rdi, qword [0x0400d0f9] 	      6808	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_2
0x400d0f9	      0xe852c2ffff	             call sym.lang_gc_sections_1	      6808	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_2
0x400d0fe	          0x488b1b	                    mov rbx, qword [rbx]	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d101	          0x4885db	                           test rbx, rbx	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d104	            0x7423	                            je 0x400d129	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d106	          0x8b4308	                mov eax, dword [rbx + 8]	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d109	          0x83f804	                              cmp eax, 4	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d10c	     0xf8443020000	                            je 0x400d355	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d112	            0x77d4	                            ja 0x400d0e8	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d114	            0x85c0	                           test eax, eax	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d116	            0x75e6	                           jne 0x400d0fe	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x400d118	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      6814	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_4
0x400d11c	      0xe82fc2ffff	             call sym.lang_gc_sections_1	      6814	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_4
0x400d121	          0x488b1b	                    mov rbx, qword [rbx]	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d124	          0x4885db	                           test rbx, rbx	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d127	            0x75dd	                           jne 0x400d106	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400d129	     0xfb635000000	           movzx esi, byte [0x0400d130] 	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x400d130	            0x89f0	                            mov eax, esi	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x400d132	          0x83e003	                              and eax, 3	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x400d135	            0x3c02	                               cmp al, 2	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x400d137	     0xf84da0c0000	                            je 0x400de17	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x400d13d	          0x83e640	                           and esi, 0x40	      6846	ldlang.c	FUNCTION_151	IF_2
0x400d140	            0x7416	                            je 0x400d158	      6846	ldlang.c	FUNCTION_151	IF_2
0x400d142	    0x488b3d000000	            mov rdi, qword [0x0400d149] 	      6847	ldlang.c	FUNCTION_151	IF_2
0x400d149	      0xbe00000000	                              mov esi, 0	      6847	ldlang.c	FUNCTION_151	IF_2
0x400d14e	        0x488b4708	                mov rax, qword [rdi + 8]	      6847	ldlang.c	FUNCTION_151	IF_2
0x400d152	    0xff90f0020000	                call qword [rax + 0x2f0]	      6847	ldlang.c	FUNCTION_151	IF_2
0x400d158	    0xf60500000000	           test byte [0x0400d15f], 0x20 	      7117	ldlang.c	FUNCTION_161	IF_1
0x400d15f	            0x7433	                            je 0x400d194	      7117	ldlang.c	FUNCTION_161	IF_1
0x400d161	    0x488b1d000000	            mov rbx, qword [0x0400d168] 	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400d168	          0x4885db	                           test rbx, rbx	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400d16b	            0x7427	                            je 0x400d194	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400d16d	      0xbe00000000	                              mov esi, 0	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x400d172	          0x4889df	                            mov rdi, rbx	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x400d175	      0xe800000000	                          call 0x400d17a	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x400d17a	            0x85c0	                           test eax, eax	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x400d17c	            0x750a	                           jne 0x400d188	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x400d17e	    0xc70500000000	               mov dword [0x0400d188], 0	      7126	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2
0x400d188	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      7122	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400d18f	          0x4885db	                           test rbx, rbx	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400d192	            0x75d9	                           jne 0x400d16d	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400d194	      0xe800000000	                          call 0x400d199	      7335	ldlang.c	FUNCTION_163	CALL_43
0x400d199	    0x488b3d000000	            mov rdi, qword [0x0400d1a0] 	      7338	ldlang.c	FUNCTION_163	CALL_44
0x400d1a0	          0x4531e4	                          xor r12d, r12d	      3728	ldlang.c	FUNCTION_87
0x400d1a3	            0x31db	                            xor ebx, ebx	      3727	ldlang.c	FUNCTION_87
0x400d1a5	    0x41bffeffffff	                    mov r15d, 0xfffffffe	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400d1ab	      0xe87031ffff	         call sym.update_wild_statements	      7338	ldlang.c	FUNCTION_163	CALL_44
0x400d1b0	    0x488b3d000000	            mov rdi, qword [0x0400d1b7] 	      7343	ldlang.c	FUNCTION_163	CALL_45
0x400d1b7	            0x31d2	                            xor edx, edx	      7343	ldlang.c	FUNCTION_163	CALL_45
0x400d1b9	            0x31f6	                            xor esi, esi	      7343	ldlang.c	FUNCTION_163	CALL_45
0x400d1bb	    0x830500000000	               add dword [0x0400d1c2], 1	      7342	ldlang.c	FUNCTION_163
0x400d1c2	      0xe8c9beffff	   call sym.map_input_to_output_sections	      7343	ldlang.c	FUNCTION_163	CALL_45
0x400d1c7	    0x4c8b2d000000	            mov r13, qword [0x0400d1ce] 	      7343	ldlang.c	FUNCTION_163	CALL_45
0x400d1ce	            0x6690	                                     nop	      7343	ldlang.c	FUNCTION_163	CALL_45
0x400d1d0	        0x498b6d00	                    mov rbp, qword [r13]	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400d1d4	          0x4885ed	                           test rbp, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400d1d7	          0x4989ee	                            mov r14, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400d1da	            0x7455	                            je 0x400d231	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400d1dc	          0x8b4508	                mov eax, dword [rbp + 8]	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x400d1df	            0x85c0	                           test eax, eax	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x400d1e1	     0xf8589010000	                           jne 0x400d370	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x400d1e7	          0x4d85e4	                           test r12, r12	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x400d1ea	            0x741a	                            je 0x400d206	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x400d1ec	      0x493b6c2420	            cmp rbp, qword [r12 + 0x20] 	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x400d1f1	            0x7413	                            je 0x400d206	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x400d1f3	      0xbe9f0e0000	                          mov esi, 0xe9f	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x400d1f8	      0xbf00000000	                              mov edi, 0	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x400d1fd	      0xe800000000	                          call 0x400d202	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x400d202	        0x498b6d00	                    mov rbp, qword [r13]	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x400d206	          0x4489f8	                           mov eax, r15d	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x400d209	    0x412b86840000	             sub eax, dword [r14 + 0x84]	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x400d210	          0x4885db	                           test rbx, rbx	      3751	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x400d213	          0x4989ed	                            mov r13, rbp	      3751	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x400d216	          0x4d89f4	                            mov r12, r14	      3741	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x400d219	    0x418986840000	             mov dword [r14 + 0x84], eax	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x400d220	            0x75ae	                           jne 0x400d1d0	      3751	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x400d222	        0x498b6d00	                    mov rbp, qword [r13]	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400d226	          0x4c89f3	                            mov rbx, r14	      3741	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x400d229	          0x4885ed	                           test rbp, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400d22c	          0x4989ee	                            mov r14, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400d22f	            0x75ab	                           jne 0x400d1dc	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400d231	          0x4885db	                           test rbx, rbx	      3871	ldlang.c	FUNCTION_87	FOR_2
0x400d234	     0xf84d5020000	                            je 0x400d50f	      3871	ldlang.c	FUNCTION_87	FOR_2
0x400d23a	      0xbafeffffff	                     mov edx, 0xfffffffe	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400d23f	            0xeb14	                           jmp 0x400d255	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400d241	     0xf1f80000000	                         nop dword [rax]	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400d248	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3871	ldlang.c	FUNCTION_87	FOR_2
0x400d24c	          0x4885db	                           test rbx, rbx	      3871	ldlang.c	FUNCTION_87	FOR_2
0x400d24f	     0xf84ba020000	                            je 0x400d50f	      3871	ldlang.c	FUNCTION_87	FOR_2
0x400d255	            0x89d0	                            mov eax, edx	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400d257	    0x2b8384000000	             sub eax, dword [rbx + 0x84]	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400d25d	          0x4939dc	                            cmp r12, rbx	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x400d260	    0x898384000000	             mov dword [rbx + 0x84], eax	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400d266	            0x75e0	                           jne 0x400d248	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x400d268	    0x488b2d000000	            mov rbp, qword [0x0400d26f] 	      6521	ldlang.c	FUNCTION_139
0x400d26f	          0x4885ed	                           test rbp, rbp	      6521	ldlang.c	FUNCTION_139
0x400d272	     0xf85a8020000	                           jne 0x400d520	      6521	ldlang.c	FUNCTION_139
0x400d278	     0xfb61d000000	           movzx ebx, byte [0x0400d27f] 	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x400d27f	          0x83e303	                              and ebx, 3	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x400d282	          0x80fb02	                               cmp bl, 2	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x400d285	            0x744c	                            je 0x400d2d3	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x400d287	    0x488b3d000000	            mov rdi, qword [0x0400d28e] 	      7358	ldlang.c	FUNCTION_163	IF_15
0x400d28e	      0xbe00000000	                              mov esi, 0	      7358	ldlang.c	FUNCTION_163	IF_15
0x400d293	        0x488b4708	                mov rax, qword [rdi + 8]	      7358	ldlang.c	FUNCTION_163	IF_15
0x400d297	    0xff9000030000	                call qword [rax + 0x300]	      7358	ldlang.c	FUNCTION_163	IF_15
0x400d29d	    0x488b3d000000	            mov rdi, qword [0x0400d2a4] 	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x400d2a4	      0xbe00000000	                              mov esi, 0	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x400d2a9	      0xe800000000	                          call 0x400d2ae	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x400d2ae	          0x4885c0	                           test rax, rax	      7363	ldlang.c	FUNCTION_163	IF_15	IF_16
0x400d2b1	     0xf84b20b0000	                            je 0x400de69	      7363	ldlang.c	FUNCTION_163	IF_15	IF_16
0x400d2b7	    0x8b1500000000	            mov edx, dword [0x0400d2bd] 	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400d2bd	            0x85d2	                           test edx, edx	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400d2bf	     0xf84a00b0000	                            je 0x400de65	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400d2c5	     0xfb61d000000	           movzx ebx, byte [0x0400d2cc] 	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400d2cc	        0x83482008	                or dword [rax + 0x20], 8	      7366	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400d2d0	          0x83e303	                              and ebx, 3	      7366	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400d2d3	    0x488b05000000	            mov rax, qword [0x0400d2da] 	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400d2da	          0x4885c0	                           test rax, rax	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400d2dd	            0x7516	                           jne 0x400d2f5	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400d2df	      0xe9e2030000	                           jmp 0x400d6c6	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400d2e4	         0xf1f4000	                         nop dword [rax]	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400d2e8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7144	ldlang.c	FUNCTION_162	FOR_1
0x400d2ec	          0x4885c0	                           test rax, rax	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400d2ef	     0xf84d1030000	                            je 0x400d6c6	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400d2f5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d2f9	          0x4885d2	                           test rdx, rdx	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d2fc	            0x74ea	                            je 0x400d2e8	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d2fe	      0x4883784800	               cmp qword [rax + 0x48], 0	      7147	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d303	            0x75e3	                           jne 0x400d2e8	      7147	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d305	      0x4883786000	               cmp qword [rax + 0x60], 0	      7148	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d30a	            0x75dc	                           jne 0x400d2e8	      7148	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d30c	      0x4883785800	               cmp qword [rax + 0x58], 0	      7149	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d311	            0x75d5	                           jne 0x400d2e8	      7149	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d313	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d317	        0x48397840	            cmp qword [rax + 0x40], rdi 	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d31b	            0x75cb	                           jne 0x400d2e8	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d31d	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d321	        0x48895048	             mov qword [rax + 0x48], rdx	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d325	            0xebc1	                           jmp 0x400d2e8	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d327	    0x660f1f840000	                    nop word [rax + rax]	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400d330	            0x31ff	                            xor edi, edi	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d332	      0xba05000000	                              mov edx, 5	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d337	      0xbe00000000	                              mov esi, 0	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d33c	      0xe800000000	                          call 0x400d341	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d341	      0x488b742408	                mov rsi, qword [rsp + 8]	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d346	          0x4889c7	                            mov rdi, rax	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d349	            0x31c0	                            xor eax, eax	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d34b	      0xe800000000	                          call 0x400d350	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d350	      0xe960f9ffff	                           jmp 0x400ccb5	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400d355	            0x31d2	                            xor edx, edx	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x400d357	      0xbe00000000	                              mov esi, 0	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x400d35c	          0x4889df	                            mov rdi, rbx	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x400d35f	      0xe8acb0ffff	                      call sym.walk_wild	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x400d364	      0xe995fdffff	                           jmp 0x400d0fe	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x400d369	     0xf1f80000000	                         nop dword [rax]	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x400d370	          0x83f80e	                            cmp eax, 0xe	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d373	            0x7408	                            je 0x400d37d	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d375	          0x4989ed	                            mov r13, rbp	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d378	      0xe953feffff	                           jmp 0x400d1d0	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d37d	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x400d381	            0x31f6	                            xor esi, esi	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x400d383	      0xe8b84cffff	call sym.lang_output_section_statement_lookup.constprop.62	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x400d388	          0x4885c0	                           test rax, rax	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d38b	     0xf845c010000	                            je 0x400d4ed	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d391	        0x448b4d18	            mov r9d, dword [rbp + 0x18] 	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d395	          0x4585c9	                           test r9d, r9d	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d398	     0xf8546010000	                           jne 0x400d4e4	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d39e	          0x4d85e4	                           test r12, r12	      3775	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400d3a1	     0xf84ef000000	                            je 0x400d496	      3775	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400d3a7	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400d3ac	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400d3b0	        0x48894a20	             mov qword [rdx + 0x20], rcx	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400d3b4	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400d3b9	          0x4885c9	                           test rcx, rcx	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400d3bc	     0xf8435150000	                            je 0x400e8f7	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400d3c2	        0x48895128	             mov qword [rcx + 0x28], rdx	      3789	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x400d3c6	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3791	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x400d3ca	      0x4989542420	             mov qword [r12 + 0x20], rdx	      3791	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x400d3cf	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400d3d3	          0x4885d2	                           test rdx, rdx	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400d3d6	     0xf840a150000	                            je 0x400e8e6	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400d3dc	        0x4c896228	             mov qword [rdx + 0x28], r12	      3799	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400d3e0	        0x48894328	             mov qword [rbx + 0x28], rax	      3800	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400d3e4	            0x31c9	                            xor ecx, ecx	      3805	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400d3e6	        0x48895820	             mov qword [rax + 0x20], rbx	      3801	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400d3ea	            0x31f6	                            xor esi, esi	      3804	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400d3ec	            0xeb10	                           jmp 0x400d3fe	      3804	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400d3ee	            0x6690	                                     nop	      3804	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400d3f0	          0x4939dc	                            cmp r12, rbx	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x400d3f3	            0x743b	                            je 0x400d430	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x400d3f5	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400d3f9	          0x4885db	                           test rbx, rbx	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400d3fc	            0x7432	                            je 0x400d430	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400d3fe	          0x4489fa	                           mov edx, r15d	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400d401	    0x2b9384000000	             sub edx, dword [rbx + 0x84]	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400d407	    0x899384000000	             mov dword [rbx + 0x84], edx	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400d40d	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400d411	          0x4885d2	                           test rdx, rdx	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400d414	            0x74da	                            je 0x400d3f0	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400d416	    0x4883baf00000	               cmp qword [rdx + 0xf0], 0	      3810	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400d41e	            0x74d0	                            je 0x400d3f0	      3810	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400d420	          0x4885f6	                           test rsi, rsi	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x400d423	          0x4889d1	                            mov rcx, rdx	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x400d426	            0x75c8	                           jne 0x400d3f0	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x400d428	          0x4939dc	                            cmp r12, rbx	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x400d42b	          0x4889d6	                            mov rsi, rdx	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x400d42e	            0x75c5	                           jne 0x400d3f5	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x400d430	          0x4885c9	                           test rcx, rcx	      3819	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x400d433	     0xf847f130000	                            je 0x400e7b8	      3819	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x400d439	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3821	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x400d43d	          0x4885ff	                           test rdi, rdi	      3822	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_13
0x400d440	     0xf843f130000	                            je 0x400e785	      3822	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_13
0x400d446	            0x31db	                            xor ebx, ebx	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400d448	          0x4839cf	                            cmp rdi, rcx	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400d44b	            0x7449	                            je 0x400d496	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400d44d	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400d451	        0x4c8b4110	              mov r8, qword [rcx + 0x10]	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400d455	          0x4885d2	                           test rdx, rdx	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400d458	     0xf84c1140000	                            je 0x400e91f	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400d45e	        0x4c894210	              mov qword [rdx + 0x10], r8	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400d462	        0x4c8b4110	              mov r8, qword [rcx + 0x10]	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400d466	          0x4d85c0	                             test r8, r8	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400d469	     0xf84c7140000	                            je 0x400e936	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400d46f	        0x49895018	              mov qword [r8 + 0x18], rdx	      3837	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400d473	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      3841	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400d477	        0x48895110	             mov qword [rcx + 0x10], rdx	      3841	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400d47b	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400d47f	          0x4885d2	                           test rdx, rdx	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400d482	     0xf848a160000	                            je 0x400eb12	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400d488	        0x48894a18	             mov qword [rdx + 0x18], rcx	      3843	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400d48c	        0x48897e18	             mov qword [rsi + 0x18], rdi	      3846	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400d490	            0x31db	                            xor ebx, ebx	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400d492	        0x48897710	             mov qword [rdi + 0x10], rsi	      3847	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400d496	          0x4889c7	                            mov rdi, rax	      3855	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_6
0x400d499	      0xe8c22bffff	                call sym.insert_os_after	      3855	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_6
0x400d49e	        0x498b7500	                    mov rsi, qword [r13]	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4a2	    0x488b15000000	            mov rdx, qword [0x0400d4a9] 	      3859	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4a9	          0x488b36	                    mov rsi, qword [rsi]	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4ac	          0x488b0a	                    mov rcx, qword [rdx]	      3859	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4af	          0x488932	                    mov qword [rdx], rsi	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4b2	          0x488b10	                    mov rdx, qword [rax]	      3862	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4b5	          0x4885d2	                           test rdx, rdx	      3863	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x400d4b8	        0x49895500	                    mov qword [r13], rdx	      3862	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4bc	     0xf848c130000	                            je 0x400e84e	      3863	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x400d4c2	          0x488908	                    mov qword [rax], rcx	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4c5	          0x4531e4	                          xor r12d, r12d	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4c8	    0x4c8b2d000000	            mov r13, qword [0x0400d4cf] 	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4cf	      0xe9fcfcffff	                           jmp 0x400d1d0	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400d4d4	    0x448b80840000	            mov r8d, dword [rax + 0x84] 	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d4db	          0x4585c0	                           test r8d, r8d	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d4de	     0xf89bafeffff	                           jns 0x400d39e	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d4e4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3765	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4	DO_1
0x400d4e8	          0x4885c0	                           test rax, rax	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d4eb	            0x75e7	                           jne 0x400d4d4	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400d4ed	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d4f1	      0xbe00000000	                              mov esi, 0	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d4f6	            0x31ff	                            xor edi, edi	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d4f8	      0xba05000000	                              mov edx, 5	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d4fd	      0xe800000000	                          call 0x400d502	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d502	          0x4889de	                            mov rsi, rbx	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d505	          0x4889c7	                            mov rdi, rax	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d508	            0x31c0	                            xor eax, eax	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d50a	      0xe800000000	                          call 0x400d50f	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400d50f	    0x488b2d000000	            mov rbp, qword [0x0400d516] 	      6521	ldlang.c	FUNCTION_139
0x400d516	          0x4885ed	                           test rbp, rbp	      6521	ldlang.c	FUNCTION_139
0x400d519	     0xf8459fdffff	                            je 0x400d278	      6521	ldlang.c	FUNCTION_139
0x400d51f	              0x90	                                     nop	      6521	ldlang.c	FUNCTION_139
0x400d520	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d524	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d52b	          0x4885db	                           test rbx, rbx	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d52e	            0x7511	                           jne 0x400d541	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d530	            0xeb4e	                           jmp 0x400d580	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d532	    0x660f1f440000	                    nop word [rax + rax]	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d538	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d53c	          0x4885db	                           test rbx, rbx	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d53f	            0x743f	                            je 0x400d580	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d541	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      6527	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1
0x400d546	            0x75f0	                           jne 0x400d538	      6527	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1
0x400d548	        0xf6454810	           test byte [rbp + 0x48], 0x10 	      6532	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d54c	     0xf8596000000	                           jne 0x400d5e8	      6532	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d552	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      6532	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d555	     0xfb605000000	           movzx eax, byte [0x0400d55c] 	      2293	ldlang.c	FUNCTION_58	IF_1
0x400d55c	    0xf7c200000002	                     test edx, 0x2000000	      2292	ldlang.c	FUNCTION_58	IF_1
0x400d562	            0x742a	                            je 0x400d58e	      2292	ldlang.c	FUNCTION_58	IF_1
0x400d564	            0xa810	                           test al, 0x10	      2293	ldlang.c	FUNCTION_58	IF_1
0x400d566	            0x7426	                            je 0x400d58e	      2293	ldlang.c	FUNCTION_58	IF_1
0x400d568	    0x48c743680000	               mov qword [rbx + 0x68], 0	      6535	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3
0x400d570	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d574	          0x4885db	                           test rbx, rbx	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d577	            0x75c8	                           jne 0x400d541	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d579	     0xf1f80000000	                         nop dword [rax]	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400d580	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	      6521	ldlang.c	FUNCTION_139
0x400d584	          0x4885ed	                           test rbp, rbp	      6521	ldlang.c	FUNCTION_139
0x400d587	            0x7597	                           jne 0x400d520	      6521	ldlang.c	FUNCTION_139
0x400d589	      0xe9eafcffff	                           jmp 0x400d278	      6521	ldlang.c	FUNCTION_139
0x400d58e	          0x83e020	                           and eax, 0x20	      2298	ldlang.c	FUNCTION_58	IF_2
0x400d591	            0x3c20	                            cmp al, 0x20	      2298	ldlang.c	FUNCTION_58	IF_2
0x400d593	            0x7505	                           jne 0x400d59a	      2298	ldlang.c	FUNCTION_58	IF_2
0x400d595	          0xf6c620	                           test dh, 0x20	      2299	ldlang.c	FUNCTION_58	IF_2
0x400d598	            0x75ce	                           jne 0x400d568	      2299	ldlang.c	FUNCTION_58	IF_2
0x400d59a	          0x80e680	                            and dh, 0x80	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x400d59d	            0x75c9	                           jne 0x400d568	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x400d59f	          0x4c8b23	                    mov r12, qword [rbx]	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400d5a2	      0xbf00000000	                              mov edi, 0	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400d5a7	      0xb907000000	                              mov ecx, 7	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400d5ac	          0x4c89e6	                            mov rsi, r12	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400d5af	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400d5b1	            0x7550	                           jne 0x400d603	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400d5b3	     0xfb605000000	           movzx eax, byte [0x0400d5ba] 	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x400d5ba	          0x83e003	                              and eax, 3	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x400d5bd	            0x3c02	                               cmp al, 2	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x400d5bf	     0xf84c5000000	                            je 0x400d68a	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x400d5c5	    0x488b0d000000	            mov rcx, qword [0x0400d5cc] 	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400d5cc	          0x4885c9	                           test rcx, rcx	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400d5cf	     0xf84d3000000	                            je 0x400d6a8	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400d5d5	        0x488d7910	                   lea rdi, [rcx + 0x10]	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400d5d9	            0x31d2	                            xor edx, edx	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400d5db	          0x4889de	                            mov rsi, rbx	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400d5de	      0xe800000000	                          call 0x400d5e3	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400d5e3	      0xe950ffffff	                           jmp 0x400d538	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400d5e8	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d5ec	      0xbe00000000	                              mov esi, 0	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d5f1	          0x4889df	                            mov rdi, rbx	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d5f4	        0x488b4008	                mov rax, qword [rax + 8]	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d5f8	    0xff90c8020000	                call qword [rax + 0x2c8]	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d5fe	      0xe935ffffff	                           jmp 0x400d538	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400d603	    0x8b0500000000	            mov eax, dword [0x0400d609] 	      6472	ldlang.c	FUNCTION_138	IF_1
0x400d609	          0x83f801	                              cmp eax, 1	      6472	ldlang.c	FUNCTION_138	IF_1
0x400d60c	     0xf8408120000	                            je 0x400e81a	      6472	ldlang.c	FUNCTION_138	IF_1
0x400d612	          0x83f803	                              cmp eax, 3	      6489	ldlang.c	FUNCTION_138	ELSE_1	IF_3
0x400d615	     0xf8454120000	                            je 0x400e86f	      6489	ldlang.c	FUNCTION_138	ELSE_1	IF_3
0x400d61b	    0x8b0d00000000	            mov ecx, dword [0x0400d621] 	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400d621	            0x85c9	                           test ecx, ecx	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400d623	     0xf84090b0000	                            je 0x400e132	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400d629	    0x41be7e010000	                         mov r14d, 0x17e	      6494	ldlang.c	FUNCTION_138	ELSE_1	IF_4
0x400d62f	          0x4489f2	                           mov edx, r14d	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400d632	          0x4c89e6	                            mov rsi, r12	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400d635	          0x4889df	                            mov rdi, rbx	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400d638	      0xe800000000	                          call 0x400d63d	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400d63d	          0x4885c0	                           test rax, rax	      6497	ldlang.c	FUNCTION_138	ELSE_1	IF_5
0x400d640	          0x4989c5	                            mov r13, rax	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400d643	     0xf844c130000	                            je 0x400e995	      6497	ldlang.c	FUNCTION_138	ELSE_1	IF_5
0x400d649	    0x833d00000000	               cmp dword [0x0400d650], 2	      6507	ldlang.c	FUNCTION_138	ELSE_1	IF_7
0x400d650	     0xf85e2feffff	                           jne 0x400d538	      6507	ldlang.c	FUNCTION_138	ELSE_1	IF_7
0x400d656	        0x4d8b6d30	            mov r13, qword [r13 + 0x30] 	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d65a	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d661	            0x31ff	                            xor edi, edi	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d663	      0xba05000000	                              mov edx, 5	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d668	      0xbe00000000	                              mov esi, 0	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d66d	      0xe800000000	                          call 0x400d672	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d672	          0x4c89e9	                            mov rcx, r13	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d675	          0x4889c7	                            mov rdi, rax	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d678	          0x4c89e2	                            mov rdx, r12	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d67b	          0x4889de	                            mov rsi, rbx	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d67e	            0x31c0	                            xor eax, eax	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d680	      0xe800000000	                          call 0x400d685	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d685	      0xe9aefeffff	                           jmp 0x400d538	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400d68a	    0x8b3500000000	            mov esi, dword [0x0400d690] 	      6542	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5
0x400d690	            0x85f6	                           test esi, esi	      6542	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5
0x400d692	     0xf84a0feffff	                            je 0x400d538	      6542	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5
0x400d698	    0x488b0d000000	            mov rcx, qword [0x0400d69f] 	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400d69f	          0x4885c9	                           test rcx, rcx	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400d6a2	     0xf852dffffff	                           jne 0x400d5d5	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400d6a8	      0xbe01000000	                              mov esi, 1	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400d6ad	      0xbf00000000	                              mov edi, 0	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400d6b2	      0xe88949ffff	call sym.lang_output_section_statement_lookup.constprop.62	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400d6b7	          0x4889c1	                            mov rcx, rax	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400d6ba	    0x488905000000	            mov qword [0x0400d6c1], rax 	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400d6c1	      0xe90fffffff	                           jmp 0x400d5d5	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400d6c6	    0x8b0500000000	            mov eax, dword [0x0400d6cc] 	      7378	ldlang.c	FUNCTION_163	IF_18
0x400d6cc	            0x85c0	                           test eax, eax	      7378	ldlang.c	FUNCTION_163	IF_18
0x400d6ce	     0xf859b0c0000	                           jne 0x400e36f	      7378	ldlang.c	FUNCTION_163	IF_18
0x400d6d4	          0x80fb02	                               cmp bl, 2	      7383	ldlang.c	FUNCTION_163	IF_19	CALL_52
0x400d6d7	            0x747b	                            je 0x400d754	      7383	ldlang.c	FUNCTION_163	IF_19	CALL_52
0x400d6d9	    0x488b05000000	            mov rax, qword [0x0400d6e0] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400d6e0	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400d6e7	          0x4885db	                           test rbx, rbx	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400d6ea	            0x7468	                            je 0x400d754	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400d6ec	          0x4c8b23	                    mov r12, qword [rbx]	      6116	ldlang.c	FUNCTION_130	FOR_1
0x400d6ef	          0x4c89e7	                            mov rdi, r12	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400d6f2	      0xe800000000	                          call 0x400d6f7	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400d6f7	        0x488d780a	                    lea rdi, [rax + 0xa]	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400d6fb	      0xe800000000	                          call 0x400d700	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400d700	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_228	CALL_1
0x400d703	          0x4889c5	                            mov rbp, rax	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400d706	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_228	CALL_1
0x400d70b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_228	CALL_1
0x400d712	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400d715	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_228	CALL_1
0x400d71a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400d71c	      0xe800000000	                          call 0x400d721	        33	stdio2.h	FUNCTION_228	CALL_1
0x400d721	          0x4889de	                            mov rsi, rbx	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x400d724	          0x4889ef	                            mov rdi, rbp	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x400d727	      0xe84433ffff	         call sym.lang_define_start_stop	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x400d72c	        0x488d7d01	                      lea rdi, [rbp + 1]	      6122	ldlang.c	FUNCTION_130	FOR_1	CALL_4
0x400d730	          0x4889de	                            mov rsi, rbx	      6123	ldlang.c	FUNCTION_130	FOR_1	CALL_5
0x400d733	    0xc745012e7369	         mov dword [rbp + 1], 0x7a69732e	        53	string3.h	FUNCTION_245	CALL_3
0x400d73a	        0xc6470465	                mov byte [rdi + 4], 0x65	        53	string3.h	FUNCTION_245	CALL_3
0x400d73e	      0xe82d33ffff	         call sym.lang_define_start_stop	      6123	ldlang.c	FUNCTION_130	FOR_1	CALL_5
0x400d743	          0x4889ef	                            mov rdi, rbp	      6124	ldlang.c	FUNCTION_130	FOR_1	CALL_6
0x400d746	      0xe800000000	                          call 0x400d74b	      6124	ldlang.c	FUNCTION_130	FOR_1	CALL_6
0x400d74b	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400d74f	          0x4885db	                           test rbx, rbx	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400d752	            0x7598	                           jne 0x400d6ec	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400d754	      0xe800000000	                          call 0x400d759	      7388	ldlang.c	FUNCTION_163	CALL_54
0x400d759	      0xbf50000000	                           mov edi, 0x50	      7784	ldlang.c	FUNCTION_185	CALL_1
0x400d75e	    0x41bd0a000000	                           mov r13d, 0xa	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d764	      0xe800000000	                          call 0x400d769	      7784	ldlang.c	FUNCTION_185	CALL_1
0x400d769	    0x4c8b25000000	            mov r12, qword [0x0400d770] 	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d770	          0x4531d2	                          xor r10d, r10d	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d773	          0x4989c6	                            mov r14, rax	      7784	ldlang.c	FUNCTION_185	CALL_1
0x400d776	          0x4d85e4	                           test r12, r12	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d779	     0xf845a010000	                            je 0x400d8d9	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d77f	              0x90	                                     nop	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d780	    0x488b2d000000	            mov rbp, qword [0x0400d787] 	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d787	            0x31db	                            xor ebx, ebx	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d789	          0x4885ed	                           test rbp, rbp	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d78c	     0xf849e000000	                            je 0x400d830	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d792	    0x660f1f440000	                    nop word [rax + rax]	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d798	    0x448bbd840000	           mov r15d, dword [rbp + 0x84] 	      7800	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_1
0x400d79f	          0x4585ff	                         test r15d, r15d	      7800	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_1
0x400d7a2	            0x787f	                            js 0x400d823	      7800	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_1
0x400d7a4	        0x488b4570	            mov rax, qword [rbp + 0x70] 	      7803	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d7a8	          0x4885c0	                           test rax, rax	      7804	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_2
0x400d7ab	      0x4889442408	                mov qword [rsp + 8], rax	      7803	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d7b0	     0xf84da040000	                            je 0x400dc90	      7804	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_2
0x400d7b6	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400d7bb	            0x7463	                            je 0x400d820	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400d7bd	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400d7c2	            0xeb25	                           jmp 0x400d7e9	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400d7c4	         0xf1f4000	                         nop dword [rax]	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400d7c8	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7cc	            0x89d8	                            mov eax, ebx	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7ce	          0x83c301	                              add ebx, 1	      7855	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7d1	        0x49890cc6	            mov qword [r14 + rax*8], rcx	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7d5	    0x41c747100100	               mov dword [r15 + 0x10], 1	      7856	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7dd	          0x4d8b3f	                    mov r15, qword [r15]	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x400d7e0	          0x4d85ff	                           test r15, r15	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x400d7e3	     0xf8487040000	                            je 0x400dc70	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x400d7e9	      0x498b742408	                mov rsi, qword [r12 + 8]	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7ee	        0x498b7f08	                mov rdi, qword [r15 + 8]	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7f2	      0xe800000000	                          call 0x400d7f7	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7f7	            0x85c0	                           test eax, eax	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7f9	            0x75e2	                           jne 0x400d7dd	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400d7fb	          0x4439eb	                           cmp ebx, r13d	      7848	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x400d7fe	            0x72c8	                            jb 0x400d7c8	      7848	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x400d800	      0x438d742d00	                    lea esi, [r13 + r13]	      7850	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x400d805	          0x4c89f7	                            mov rdi, r14	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400d808	          0x4989f5	                            mov r13, rsi	      7850	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x400d80b	        0x48c1e603	                              shl rsi, 3	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400d80f	      0xe800000000	                          call 0x400d814	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400d814	          0x4989c6	                            mov r14, rax	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400d817	            0xebaf	                           jmp 0x400d7c8	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400d819	     0xf1f80000000	                         nop dword [rax]	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400d820	          0x4989c2	                            mov r10, rax	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400d823	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      7796	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d827	          0x4885ed	                           test rbp, rbp	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d82a	     0xf8568ffffff	                           jne 0x400d798	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400d830	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x400d835	            0x31ed	                            xor ebp, ebp	      7862	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x400d837	          0x4885ff	                           test rdi, rdi	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x400d83a	            0x7418	                            je 0x400d854	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x400d83c	      0xba00000000	                              mov edx, 0	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400d841	            0x31f6	                            xor esi, esi	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400d843	      0x4c89542408	                mov qword [rsp + 8], r10	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400d848	      0xe800000000	                          call 0x400d84d	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400d84d	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400d852	            0x89c5	                            mov ebp, eax	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400d854	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x400d859	          0x4531c9	                            xor r9d, r9d	      7867	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x400d85c	          0x4885ff	                           test rdi, rdi	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x400d85f	            0x741e	                            je 0x400d87f	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x400d861	      0xba00000000	                              mov edx, 0	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400d866	            0x31f6	                            xor esi, esi	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400d868	      0x4c89542408	                mov qword [rsp + 8], r10	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400d86d	      0xe800000000	                          call 0x400d872	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400d872	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400d877	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400d87c	          0x4989c1	                             mov r9, rax	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400d87f	          0x4531c0	                            xor r8d, r8d	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d882	          0x4885ff	                           test rdi, rdi	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d885	      0x4c89542408	                mov qword [rsp + 8], r10	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d88a	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d88f	        0x410f95c0	                               setne r8b	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d893	            0x31d2	                            xor edx, edx	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d895	    0x49837c242800	               cmp qword [r12 + 0x28], 0	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d89b	            0x4156	                                push r14	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d89d	            0x89e9	                            mov ecx, ebp	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d89f	              0x53	                                push rbx	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8a0	      0x418b44241c	            mov eax, dword [r12 + 0x1c] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8a5	    0x488b3d000000	            mov rdi, qword [0x0400d8ac] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8ac	              0x50	                                push rax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8ad	      0x418b442418	            mov eax, dword [r12 + 0x18] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8b2	           0xf95c2	                                setne dl	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8b5	              0x50	                                push rax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8b6	      0xe800000000	                          call 0x400d8bb	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8bb	        0x4883c420	                           add rsp, 0x20	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8bf	            0x85c0	                           test eax, eax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8c1	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8c6	     0xf8407040000	                            je 0x400dcd3	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400d8cc	        0x4d8b2424	                    mov r12, qword [r12]	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d8d0	          0x4d85e4	                           test r12, r12	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d8d3	     0xf85a7feffff	                           jne 0x400d780	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400d8d9	          0x4c89f7	                            mov rdi, r14	      7877	ldlang.c	FUNCTION_185	CALL_10
0x400d8dc	      0xe800000000	                          call 0x400d8e1	      7877	ldlang.c	FUNCTION_185	CALL_10
0x400d8e1	    0x4c8b25000000	            mov r12, qword [0x0400d8e8] 	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400d8e8	          0x4d85e4	                           test r12, r12	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400d8eb	     0xf8495000000	                            je 0x400d986	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400d8f1	     0xf1f80000000	                         nop dword [rax]	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400d8f8	    0x458bac248400	           mov r13d, dword [r12 + 0x84] 	      7886	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400d900	          0x4585ed	                         test r13d, r13d	      7886	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400d903	            0x7873	                            js 0x400d978	      7886	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400d905	    0x49837c243800	               cmp qword [r12 + 0x38], 0	      7887	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400d90b	            0x746b	                            je 0x400d978	      7887	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400d90d	      0x498b5c2470	            mov rbx, qword [r12 + 0x70] 	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d912	          0x4885db	                           test rbx, rbx	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d915	            0x7511	                           jne 0x400d928	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d917	            0xeb5f	                           jmp 0x400d978	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d919	     0xf1f80000000	                         nop dword [rax]	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d920	          0x488b1b	                    mov rbx, qword [rbx]	      7892	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d923	          0x4885db	                           test rbx, rbx	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d926	            0x7450	                            je 0x400d978	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d928	          0x8b6b10	            mov ebp, dword [rbx + 0x10] 	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d92b	            0x85ed	                           test ebp, ebp	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d92d	            0x75f1	                           jne 0x400d920	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d92f	        0x488b6b08	                mov rbp, qword [rbx + 8]	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d933	      0xbf00000000	                              mov edi, 0	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d938	      0xb905000000	                              mov ecx, 5	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d93d	          0x4889ee	                            mov rsi, rbp	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d940	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d942	            0x74dc	                            je 0x400d920	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400d944	      0x4d8b6c2430	            mov r13, qword [r12 + 0x30] 	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d949	            0x31ff	                            xor edi, edi	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d94b	      0xba05000000	                              mov edx, 5	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d950	      0xbe00000000	                              mov esi, 0	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d955	      0xe800000000	                          call 0x400d95a	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d95a	          0x4889ea	                            mov rdx, rbp	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d95d	          0x4889c7	                            mov rdi, rax	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d960	          0x4c89ee	                            mov rsi, r13	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d963	            0x31c0	                            xor eax, eax	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d965	      0xe800000000	                          call 0x400d96a	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400d96a	          0x488b1b	                    mov rbx, qword [rbx]	      7892	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d96d	          0x4885db	                           test rbx, rbx	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d970	            0x75b6	                           jne 0x400d928	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d972	    0x660f1f440000	                    nop word [rax + rax]	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400d978	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	      7882	ldlang.c	FUNCTION_185	FOR_5
0x400d97d	          0x4d85e4	                           test r12, r12	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400d980	     0xf8572ffffff	                           jne 0x400d8f8	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400d986	    0xf60500000000	           test byte [0x0400d98d], 0x10 	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400d98d	            0x7438	                            je 0x400d9c7	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400d98f	     0xfb605000000	           movzx eax, byte [0x0400d996] 	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400d996	          0x83e003	                              and eax, 3	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400d999	            0x3c02	                               cmp al, 2	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400d99b	            0x742a	                            je 0x400d9c7	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400d99d	    0x488b3d000000	            mov rdi, qword [0x0400d9a4] 	      6920	ldlang.c	FUNCTION_154	CALL_1
0x400d9a4	      0x488d742430	                   lea rsi, [rsp + 0x30]	      6920	ldlang.c	FUNCTION_154	CALL_1
0x400d9a9	    0xc74424300000	               mov dword [rsp + 0x30], 0	      6916	ldlang.c	FUNCTION_154
0x400d9b1	      0xe83aaeffff	call sym.lang_find_relro_sections_1.constprop.51	      6920	ldlang.c	FUNCTION_154	CALL_1
0x400d9b6	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	      6923	ldlang.c	FUNCTION_154	IF_1
0x400d9bb	          0x4585db	                         test r11d, r11d	      6923	ldlang.c	FUNCTION_154	IF_1
0x400d9be	            0x7507	                           jne 0x400d9c7	      6923	ldlang.c	FUNCTION_154	IF_1
0x400d9c0	    0x802500000000	             and byte [0x0400d9c7], 0xef	      6924	ldlang.c	FUNCTION_154	IF_1
0x400d9c7	            0x31f6	                            xor esi, esi	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400d9c9	    0x833d00000000	               cmp dword [0x0400d9d0], 1	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400d9d0	        0x400f97c6	                                seta sil	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400d9d4	            0x31ff	                            xor edi, edi	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400d9d6	      0xe800000000	                          call 0x400d9db	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400d9db	      0xe800000000	                          call 0x400d9e0	      7403	ldlang.c	FUNCTION_163	CALL_59
0x400d9e0	    0x488b15000000	            mov rdx, qword [0x0400d9e7] 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400d9e7	          0x4885d2	                           test rdx, rdx	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400d9ea	     0xf8484000000	                            je 0x400da74	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400d9f0	    0x488b05000000	            mov rax, qword [0x0400d9f7] 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400d9f7	    0x8b0d00000000	            mov ecx, dword [0x0400d9fd] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400d9fd	    0x4c8b15000000	            mov r10, qword [0x0400da04] 	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da04	        0x488d3cd0	                  lea rdi, [rax + rdx*8]	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da08	            0xeb0f	                           jmp 0x400da19	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da0a	    0x660f1f440000	                    nop word [rax + rax]	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da10	        0x4883c008	                              add rax, 8	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da14	          0x4839f8	                            cmp rax, rdi	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400da17	            0x745b	                            je 0x400da74	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400da19	          0x488b30	                    mov rsi, qword [rax]	      6074	ldlang.c	FUNCTION_127	CALL_1
0x400da1c	         0xfb75618	           movzx edx, word [rsi + 0x18] 	      6133	ldlang.c	FUNCTION_131	IF_1
0x400da20	      0x6681e2ff08	                           and dx, 0x8ff	      6133	ldlang.c	FUNCTION_131	IF_1
0x400da25	        0x6683fa03	                               cmp dx, 3	      6133	ldlang.c	FUNCTION_131	IF_1
0x400da29	            0x75e5	                           jne 0x400da10	      6133	ldlang.c	FUNCTION_131	IF_1
0x400da2b	        0x4c8b4608	                 mov r8, qword [rsi + 8]	      6137	ldlang.c	FUNCTION_131	IF_2
0x400da2f	        0x4180382e	                     cmp byte [r8], 0x2e	      6137	ldlang.c	FUNCTION_131	IF_2
0x400da33	     0xf84bf020000	                            je 0x400dcf8	      6137	ldlang.c	FUNCTION_131	IF_2
0x400da39	        0x498b5208	                mov rdx, qword [r10 + 8]	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da3d	        0x4c8b4e28	              mov r9, qword [rsi + 0x28]	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x400da41	        0x807a1c00	                cmp byte [rdx + 0x1c], 0	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da45	        0x4d8b4968	               mov r9, qword [r9 + 0x68]	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x400da49	        0x4c894e28	              mov qword [rsi + 0x28], r9	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x400da4d	           0xf95c2	                                setne dl	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da50	           0xfb6d2	                           movzx edx, dl	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400da53	          0x83c204	                              add edx, 4	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400da56	          0x4863d2	                         movsxd rdx, edx	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400da59	      0x41803c106f	               cmp byte [r8 + rdx], 0x6f	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400da5e	            0x75b0	                           jne 0x400da10	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400da60	        0x498b5138	              mov rdx, qword [r9 + 0x38]	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400da64	        0x4883c008	                              add rax, 8	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400da68	          0x48d3ea	                             shr rdx, cl	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400da6b	          0x4839f8	                            cmp rax, rdi	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400da6e	        0x48895630	             mov qword [rsi + 0x30], rdx	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400da72	            0x75a5	                           jne 0x400da19	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400da74	    0x488b35000000	            mov rsi, qword [0x0400da7b] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400da7b	    0x488b3d000000	            mov rdi, qword [0x0400da82] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400da82	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400da87	            0x31c9	                            xor ecx, ecx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400da89	            0x31d2	                            xor edx, edx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400da8b	    0x830500000000	               add dword [0x0400da92], 1	      5921	ldlang.c	FUNCTION_123
0x400da92	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5916	ldlang.c	FUNCTION_123
0x400da9a	    0x48c705000000	               mov qword [0x0400daa5], 0	      5918	ldlang.c	FUNCTION_123
0x400daa5	    0xc70500000000	               mov dword [0x0400daaf], 0	      5919	ldlang.c	FUNCTION_123
0x400daaf	    0xc70500000000	               mov dword [0x0400dab9], 4	      5920	ldlang.c	FUNCTION_123
0x400dab9	      0xe8b229ffff	          call sym.lang_do_assignments_1	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400dabe	      0xe800000000	                          call 0x400dac3	      7412	ldlang.c	FUNCTION_163	CALL_62
0x400dac3	      0xe800000000	                          call 0x400dac8	      7415	ldlang.c	FUNCTION_163	CALL_63
0x400dac8	    0x803d00000000	                cmp byte [0x0400dacf], 0	      7418	ldlang.c	FUNCTION_163	IF_21
0x400dacf	     0xf85a3030000	                           jne 0x400de78	      7418	ldlang.c	FUNCTION_163	IF_21
0x400dad5	    0x488b1d000000	            mov rbx, qword [0x0400dadc] 	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400dadc	          0x4885db	                           test rbx, rbx	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400dadf	            0x745a	                            je 0x400db3b	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400dae1	     0xf1f80000000	                         nop dword [rax]	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400dae8	          0x488b33	                    mov rsi, qword [rbx]	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400daeb	    0x488b3d000000	            mov rdi, qword [0x0400daf2] 	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400daf2	            0x31c9	                            xor ecx, ecx	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400daf4	            0x31d2	                            xor edx, edx	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400daf6	    0x41b801000000	                              mov r8d, 1	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400dafc	      0xe800000000	                          call 0x400db01	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400db01	          0x4885c0	                           test rax, rax	      3477	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400db04	            0x740b	                            je 0x400db11	      3477	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400db06	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400db0a	          0x83e803	                              sub eax, 3	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400db0d	            0x3c01	                               cmp al, 1	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400db0f	            0x7621	                           jbe 0x400db32	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400db11	          0x488b2b	                    mov rbp, qword [rbx]	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db14	      0xbe00000000	                              mov esi, 0	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db19	            0x31ff	                            xor edi, edi	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db1b	      0xba05000000	                              mov edx, 5	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db20	      0xe800000000	                          call 0x400db25	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db25	          0x4889ee	                            mov rsi, rbp	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db28	          0x4889c7	                            mov rdi, rax	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db2b	            0x31c0	                            xor eax, eax	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db2d	      0xe800000000	                          call 0x400db32	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400db32	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400db36	          0x4885db	                           test rbx, rbx	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400db39	            0x75ad	                           jne 0x400dae8	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400db3b	     0xfb605000000	           movzx eax, byte [0x0400db42] 	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400db42	            0x89c2	                            mov edx, eax	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400db44	          0x83e243	                           and edx, 0x43	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400db47	          0x80fa02	                               cmp dl, 2	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400db4a	     0xf8420020000	                            je 0x400dd70	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400db50	          0x83e003	                              and eax, 3	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400db53	      0xbb01000000	                              mov ebx, 1	      6178	ldlang.c	FUNCTION_133	ELSE_1
0x400db58	            0x3c03	                               cmp al, 3	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400db5a	     0xf8410020000	                            je 0x400dd70	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400db60	          0x80fa42	                            cmp dl, 0x42	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400db63	     0xf8416020000	                            je 0x400dd7f	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400db69	    0x488b35000000	            mov rsi, qword [0x0400db70] 	      6187	ldlang.c	FUNCTION_133	IF_3
0x400db70	          0x4885f6	                           test rsi, rsi	      6187	ldlang.c	FUNCTION_133	IF_3
0x400db73	     0xf84e10c0000	                            je 0x400e85a	      6187	ldlang.c	FUNCTION_133	IF_3
0x400db79	    0x488b3d000000	            mov rdi, qword [0x0400db80] 	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400db80	            0x31c9	                            xor ecx, ecx	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400db82	            0x31d2	                            xor edx, edx	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400db84	    0x41b801000000	                              mov r8d, 1	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400db8a	      0xe800000000	                          call 0x400db8f	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400db8f	          0x4885c0	                           test rax, rax	      6197	ldlang.c	FUNCTION_133	IF_4
0x400db92	            0x7410	                            je 0x400dba4	      6197	ldlang.c	FUNCTION_133	IF_4
0x400db94	         0xfb67818	           movzx edi, byte [rax + 0x18] 	      6198	ldlang.c	FUNCTION_133	IF_4
0x400db98	          0x8d57fd	                      lea edx, [rdi - 3]	      6198	ldlang.c	FUNCTION_133	IF_4
0x400db9b	          0x80fa01	                               cmp dl, 1	      6198	ldlang.c	FUNCTION_133	IF_4
0x400db9e	     0xf861b0c0000	                           jbe 0x400e7bf	      6198	ldlang.c	FUNCTION_133	IF_4
0x400dba4	    0x488b3d000000	            mov rdi, qword [0x0400dbab] 	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400dbab	      0x488d742430	                   lea rsi, [rsp + 0x30]	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400dbb0	            0x31d2	                            xor edx, edx	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400dbb2	      0xe800000000	                          call 0x400dbb7	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400dbb7	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400dbbc	          0x803a00	                       cmp byte [rdx], 0	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400dbbf	     0xf84fb010000	                            je 0x400ddc0	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400dbc5	    0x488b35000000	            mov rsi, qword [0x0400dbcc] 	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400dbcc	    0x488b3d000000	            mov rdi, qword [0x0400dbd3] 	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400dbd3	      0xe800000000	                          call 0x400dbd8	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400dbd8	          0x4885c0	                           test rax, rax	      6231	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8
0x400dbdb	          0x4889c5	                            mov rbp, rax	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400dbde	     0xf84e20e0000	                            je 0x400eac6	      6231	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8
0x400dbe4	            0x85db	                           test ebx, ebx	      6233	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9
0x400dbe6	     0xf85a90e0000	                           jne 0x400ea95	      6233	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9
0x400dbec	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400dbf0	    0x488b3d000000	            mov rdi, qword [0x0400dbf7] 	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400dbf7	      0xe800000000	                          call 0x400dbfc	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400dbfc	            0x85c0	                           test eax, eax	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400dbfe	     0xf84d3010000	                            je 0x400ddd7	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400dc04	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7425	ldlang.c	FUNCTION_163
0x400dc09	    0x644833042528	                xor rax, qword fs:[0x28]	      7425	ldlang.c	FUNCTION_163
0x400dc12	     0xf85360f0000	                           jne 0x400eb4e	      7425	ldlang.c	FUNCTION_163
0x400dc18	        0x4883c448	                           add rsp, 0x48	      7425	ldlang.c	FUNCTION_163
0x400dc1c	              0x5b	                                 pop rbx	      7425	ldlang.c	FUNCTION_163
0x400dc1d	              0x5d	                                 pop rbp	      7425	ldlang.c	FUNCTION_163
0x400dc1e	            0x415c	                                 pop r12	      7425	ldlang.c	FUNCTION_163
0x400dc20	            0x415d	                                 pop r13	      7425	ldlang.c	FUNCTION_163
0x400dc22	            0x415e	                                 pop r14	      7425	ldlang.c	FUNCTION_163
0x400dc24	            0x415f	                                 pop r15	      7425	ldlang.c	FUNCTION_163
0x400dc26	              0xc3	                                     ret	      7425	ldlang.c	FUNCTION_163
0x400dc27	          0x4889e8	                            mov rax, rbp	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400dc2a	            0xeb11	                           jmp 0x400dc3d	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400dc2c	         0xf1f4000	                         nop dword [rax]	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400dc30	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400dc34	          0x4885d2	                           test rdx, rdx	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400dc37	     0xf85a10c0000	                           jne 0x400e8de	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400dc3d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x400dc41	          0x4885c0	                           test rax, rax	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x400dc44	            0x75ea	                           jne 0x400dc30	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x400dc46	            0x31ff	                            xor edi, edi	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc48	      0xba05000000	                              mov edx, 5	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc4d	      0xbe00000000	                              mov esi, 0	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc52	      0x4c89542408	                mov qword [rsp + 8], r10	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc57	      0xe800000000	                          call 0x400dc5c	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc5c	          0x4889c7	                            mov rdi, rax	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc5f	            0x31c0	                            xor eax, eax	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc61	      0xe800000000	                          call 0x400dc66	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400dc70	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      7796	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400dc74	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7796	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400dc79	          0x4885ed	                           test rbp, rbp	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400dc7c	     0xf8516fbffff	                           jne 0x400d798	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400dc82	      0xe9a9fbffff	                           jmp 0x400d830	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400dc87	    0x660f1f840000	                    nop word [rax + rax]	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400dc90	    0x83bd8c000000	               cmp dword [rbp + 0x8c], 2	      7808	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400dc97	     0xf8486fbffff	                            je 0x400d823	      7808	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400dc9d	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400dca1	          0x4885c0	                           test rax, rax	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400dca4	     0xf8479fbffff	                            je 0x400d823	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400dcaa	        0xf6402001	               test byte [rax + 0x20], 1	      7810	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400dcae	     0xf846ffbffff	                            je 0x400d823	      7810	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400dcb4	    0x49837c241003	               cmp qword [r12 + 0x10], 3	      7814	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_4
0x400dcba	     0xf8463fbffff	                            je 0x400d823	      7814	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_4
0x400dcc0	          0x4d85d2	                           test r10, r10	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400dcc3	     0xf845effffff	                            je 0x400dc27	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400dcc9	      0x4c89542408	                mov qword [rsp + 8], r10	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400dcce	      0xe9eafaffff	                           jmp 0x400d7bd	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400dcd3	      0xba05000000	                              mov edx, 5	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dcd8	      0xbe00000000	                              mov esi, 0	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dcdd	            0x31ff	                            xor edi, edi	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dcdf	      0xe800000000	                          call 0x400dce4	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dce4	          0x4889c7	                            mov rdi, rax	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dce7	            0x31c0	                            xor eax, eax	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dce9	      0xe800000000	                          call 0x400dcee	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dcee	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dcf3	      0xe9d4fbffff	                           jmp 0x400d8cc	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400dcf8	      0x4180780269	                 cmp byte [r8 + 2], 0x69	      6141	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400dcfd	     0xf850dfdffff	                           jne 0x400da10	      6141	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400dd03	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400dd07	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400dd0b	    0x48c746280000	               mov qword [rsi + 0x28], 0	      6145	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400dd13	          0x48d3ea	                             shr rdx, cl	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400dd16	        0x48895630	             mov qword [rsi + 0x30], rdx	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400dd1a	      0xe9f1fcffff	                           jmp 0x400da10	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400dd1f	      0xbe00000000	                              mov esi, 0	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400dd24	            0x31ff	                            xor edi, edi	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400dd26	      0xba05000000	                              mov edx, 5	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400dd2b	      0xe800000000	                          call 0x400dd30	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400dd30	          0x4889ee	                            mov rsi, rbp	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400dd33	          0x4889c7	                            mov rdi, rax	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400dd36	            0x31c0	                            xor eax, eax	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400dd38	      0xe800000000	                          call 0x400dd3d	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400dd3d	    0x8b0500000000	            mov eax, dword [0x0400dd43] 	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400dd43	            0x85c0	                           test eax, eax	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400dd45	     0xf853deeffff	                           jne 0x400cb88	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400dd4b	      0xe9d9eeffff	                           jmp 0x400cc29	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400dd50	            0x31ff	                            xor edi, edi	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400dd52	      0xba05000000	                              mov edx, 5	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400dd57	      0xbe00000000	                              mov esi, 0	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400dd5c	      0xe800000000	                          call 0x400dd61	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400dd61	          0x4889c7	                            mov rdi, rax	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400dd64	            0x31c0	                            xor eax, eax	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400dd66	      0xe800000000	                          call 0x400dd6b	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400dd6b	      0xe962ecffff	                           jmp 0x400c9d2	      3411	ldlang.c	FUNCTION_80	CALL_3
0x400dd70	          0x80fa42	                            cmp dl, 0x42	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400dd73	    0x8b1d00000000	            mov ebx, dword [0x0400dd79] 	      6176	ldlang.c	FUNCTION_133	IF_1
0x400dd79	     0xf85eafdffff	                           jne 0x400db69	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400dd7f	    0x8b1500000000	            mov edx, dword [0x0400dd85] 	      6183	ldlang.c	FUNCTION_133	IF_2
0x400dd85	            0x85d2	                           test edx, edx	      6183	ldlang.c	FUNCTION_133	IF_2
0x400dd87	     0xf85dcfdffff	                           jne 0x400db69	      6183	ldlang.c	FUNCTION_133	IF_2
0x400dd8d	    0x8b0500000000	            mov eax, dword [0x0400dd93] 	      6183	ldlang.c	FUNCTION_133	IF_2
0x400dd93	            0x85c0	                           test eax, eax	      6183	ldlang.c	FUNCTION_133	IF_2
0x400dd95	     0xf85cefdffff	                           jne 0x400db69	      6183	ldlang.c	FUNCTION_133	IF_2
0x400dd9b	            0x31ff	                            xor edi, edi	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400dd9d	      0xba05000000	                              mov edx, 5	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400dda2	      0xbe00000000	                              mov esi, 0	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400dda7	      0xe800000000	                          call 0x400ddac	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400ddac	          0x4889c7	                            mov rdi, rax	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400ddaf	            0x31c0	                            xor eax, eax	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400ddb1	      0xe800000000	                          call 0x400ddb6	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400ddb6	      0xe9aefdffff	                           jmp 0x400db69	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400ddbb	       0xf1f440000	                   nop dword [rax + rax]	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400ddc0	    0x488b3d000000	            mov rdi, qword [0x0400ddc7] 	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400ddc7	          0x4889c6	                            mov rsi, rax	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400ddca	      0xe800000000	                          call 0x400ddcf	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400ddcf	            0x85c0	                           test eax, eax	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400ddd1	     0xf852dfeffff	                           jne 0x400dc04	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400ddd7	            0x31ff	                            xor edi, edi	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400ddd9	      0xba05000000	                              mov edx, 5	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400ddde	      0xbe00000000	                              mov esi, 0	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400dde3	      0xe800000000	                          call 0x400dde8	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400dde8	          0x4889c7	                            mov rdi, rax	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400ddeb	            0x31c0	                            xor eax, eax	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400dded	      0xe800000000	                          call 0x400ddf2	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400ddf2	      0xe90dfeffff	                           jmp 0x400dc04	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400ddf7	    0x448b15000000	           mov r10d, dword [0x0400ddfe] 	      6351	ldlang.c	FUNCTION_136	IF_2
0x400ddfe	          0x4585d2	                         test r10d, r10d	      6351	ldlang.c	FUNCTION_136	IF_2
0x400de01	     0xf856af2ffff	                           jne 0x400d071	      6351	ldlang.c	FUNCTION_136	IF_2
0x400de07	    0x488b1d000000	            mov rbx, qword [0x0400de0e] 	      6826	ldlang.c	FUNCTION_151	CALL_1
0x400de0e	          0x4885db	                           test rbx, rbx	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400de11	     0xf85eff2ffff	                           jne 0x400d106	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400de17	    0x488b0d000000	            mov rcx, qword [0x0400de1e] 	      6833	ldlang.c	FUNCTION_151	IF_1
0x400de1e	          0x4885c9	                           test rcx, rcx	      6833	ldlang.c	FUNCTION_151	IF_1
0x400de21	     0xf8416f3ffff	                            je 0x400d13d	      6833	ldlang.c	FUNCTION_151	IF_1
0x400de27	        0xf6414920	           test byte [rcx + 0x49], 0x20 	      6837	ldlang.c	FUNCTION_151	IF_1	FUNCTION_1
0x400de2b	            0x752a	                           jne 0x400de57	      6837	ldlang.c	FUNCTION_151	IF_1	FUNCTION_1
0x400de2d	        0x488b4120	            mov rax, qword [rcx + 0x20] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400de31	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400de38	          0x4885c0	                           test rax, rax	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400de3b	            0x741a	                            je 0x400de57	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400de3d	           0xf1f00	                         nop dword [rax]	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400de40	          0x8b5020	            mov edx, dword [rax + 0x20] 	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400de43	          0xf6c620	                           test dh, 0x20	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400de46	            0x7506	                           jne 0x400de4e	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400de48	          0x80e67f	                            and dh, 0x7f	      6842	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400de4b	          0x895020	             mov dword [rax + 0x20], edx	      6842	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400de4e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400de52	          0x4885c0	                           test rax, rax	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400de55	            0x75e9	                           jne 0x400de40	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400de57	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	      6833	ldlang.c	FUNCTION_151	IF_1
0x400de5b	          0x4885c9	                           test rcx, rcx	      6833	ldlang.c	FUNCTION_151	IF_1
0x400de5e	            0x75c7	                           jne 0x400de27	      6833	ldlang.c	FUNCTION_151	IF_1
0x400de60	      0xe9d8f2ffff	                           jmp 0x400d13d	      6833	ldlang.c	FUNCTION_151	IF_1
0x400de65	        0x836020f7	      and dword [rax + 0x20], 0xfffffff7	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x400de69	     0xfb61d000000	           movzx ebx, byte [0x0400de70] 	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x400de70	          0x83e303	                              and ebx, 3	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x400de73	      0xe95bf4ffff	                           jmp 0x400d2d3	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x400de78	    0x488b3d000000	            mov rdi, qword [0x0400de7f] 	      4803	ldlang.c	FUNCTION_112	CALL_1
0x400de7f	      0xe800000000	                          call 0x400de84	      4803	ldlang.c	FUNCTION_112	CALL_1
0x400de84	          0x8d48ff	                      lea ecx, [rax - 1]	      4804	ldlang.c	FUNCTION_112
0x400de87	      0xb801000000	                              mov eax, 1	      4804	ldlang.c	FUNCTION_112
0x400de8c	          0x48d3e0	                             shl rax, cl	      4804	ldlang.c	FUNCTION_112
0x400de8f	      0x488d6c00ff	                lea rbp, [rax + rax - 1]	      4804	ldlang.c	FUNCTION_112
0x400de94	    0x488b05000000	            mov rax, qword [0x0400de9b] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400de9b	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400dea2	          0x4885db	                           test rbx, rbx	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400dea5	            0x744b	                            je 0x400def2	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400dea7	        0xf6432001	               test byte [rbx + 0x20], 1	      4806	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400deab	            0x7435	                            je 0x400dee2	      4806	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400dead	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400deb1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400deb5	        0x488d1401	                    lea rdx, [rcx + rax]	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400deb9	          0x4821ea	                            and rdx, rbp	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400debc	            0x740c	                            je 0x400deca	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400debe	          0x4821e9	                            and rcx, rbp	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400dec1	          0x4839ca	                            cmp rdx, rcx	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400dec4	     0xf82ac080000	                            jb 0x400e776	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400deca	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      4814	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1
0x400dece	          0x4801d0	                            add rax, rdx	      4814	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1
0x400ded1	          0x4821e8	                            and rax, rbp	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400ded4	            0x740c	                            je 0x400dee2	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400ded6	          0x4821ea	                            and rdx, rbp	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400ded9	          0x4839d0	                            cmp rax, rdx	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400dedc	     0xf826e080000	                            jb 0x400e750	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400dee2	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400dee6	          0x4885db	                           test rbx, rbx	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400dee9	            0x75bc	                           jne 0x400dea7	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400deeb	    0x488b05000000	            mov rax, qword [0x0400def2] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400def2	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4821	ldlang.c	FUNCTION_112	IF_4
0x400def8	          0x83f801	                              cmp eax, 1	      4821	ldlang.c	FUNCTION_112	IF_4
0x400defb	     0xf86d4fbffff	                           jbe 0x400dad5	      4821	ldlang.c	FUNCTION_112	IF_4
0x400df01	        0x48c1e004	                              shl rax, 4	      4825	ldlang.c	FUNCTION_112	CALL_6
0x400df05	            0x31db	                            xor ebx, ebx	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400df07	          0x4889c7	                            mov rdi, rax	      4825	ldlang.c	FUNCTION_112	CALL_6
0x400df0a	      0xe800000000	                          call 0x400df0f	      4825	ldlang.c	FUNCTION_112	CALL_6
0x400df0f	          0x4889c5	                            mov rbp, rax	      4825	ldlang.c	FUNCTION_112	CALL_6
0x400df12	    0x488b05000000	            mov rax, qword [0x0400df19] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400df19	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400df20	          0x4885c0	                           test rax, rax	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400df23	     0xf84500a0000	                            je 0x400e979	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400df29	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400df2c	          0xf6c201	                              test dl, 1	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400df2f	            0x742d	                            je 0x400df5e	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400df31	    0x81e202040000	                          and edx, 0x402	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400df37	    0x81fa00040000	                          cmp edx, 0x400	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400df3d	            0x741f	                            je 0x400df5e	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400df3f	      0x4883783800	               cmp qword [rax + 0x38], 0	      4832	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400df44	            0x7418	                            je 0x400df5e	      4832	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400df46	          0x4889da	                            mov rdx, rbx	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400df49	        0x4883c301	                              add rbx, 1	      4837	ldlang.c	FUNCTION_112	FOR_2
0x400df4d	        0x48c1e204	                              shl rdx, 4	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400df51	          0x4801ea	                            add rdx, rbp	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400df54	          0x488902	                    mov qword [rdx], rax	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400df57	    0xc74208000000	                  mov dword [rdx + 8], 0	      4836	ldlang.c	FUNCTION_112	FOR_2
0x400df5e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400df62	          0x4885c0	                           test rax, rax	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400df65	            0x75c2	                           jne 0x400df29	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400df67	        0x4883fb01	                              cmp rbx, 1	      4840	ldlang.c	FUNCTION_112	IF_6
0x400df6b	     0xf86080a0000	                           jbe 0x400e979	      4840	ldlang.c	FUNCTION_112	IF_6
0x400df71	      0xb900000000	                              mov ecx, 0	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400df76	      0xba10000000	                           mov edx, 0x10	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400df7b	          0x4889de	                            mov rsi, rbx	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400df7e	          0x4889ef	                            mov rdi, rbp	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400df81	          0x4989ed	                            mov r13, rbp	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400df84	          0x4531f6	                          xor r14d, r14d	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400df87	      0xe800000000	                          call 0x400df8c	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400df8c	          0x4531c9	                            xor r9d, r9d	      4796	ldlang.c	FUNCTION_112
0x400df8f	          0x4531db	                          xor r11d, r11d	      4797	ldlang.c	FUNCTION_112
0x400df92	            0x31c0	                            xor eax, eax	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400df94	            0xeb1a	                           jmp 0x400dfb0	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400df96	          0x4d89d3	                            mov r11, r10	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400df99	          0x4d89f9	                             mov r9, r15	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400df9c	          0x4c89e0	                            mov rax, r12	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400df9f	        0x4983c601	                              add r14, 1	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400dfa3	        0x4983c510	                           add r13, 0x10	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400dfa7	          0x4939de	                            cmp r14, rbx	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400dfaa	     0xf84c3000000	                            je 0x400e073	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400dfb0	        0x4d8b6500	                    mov r12, qword [r13]	      4852	ldlang.c	FUNCTION_112	FOR_3
0x400dfb4	    0x41f644242002	               test byte [r12 + 0x20], 2	      4853	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400dfba	            0x74e3	                            je 0x400df9f	      4853	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400dfbc	    0x8b0d00000000	            mov ecx, dword [0x0400dfc2] 	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400dfc2	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400dfc7	      0x4d8b7c2430	            mov r15, qword [r12 + 0x30] 	      4855	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400dfcc	          0x48d3ea	                             shr rdx, cl	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400dfcf	          0x4885c0	                           test rax, rax	      4863	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400dfd2	      0x4d8d5417ff	                lea r10, [r15 + rdx - 1]	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400dfd7	            0x74bd	                            je 0x400df96	      4863	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400dfd9	          0x4d39df	                            cmp r15, r11	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400dfdc	            0x7605	                           jbe 0x400dfe3	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400dfde	          0x4d39d9	                             cmp r9, r11	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400dfe1	            0x76b3	                           jbe 0x400df96	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400dfe3	          0x4c8b00	                     mov r8, qword [rax]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400dfe6	        0x498b0424	                    mov rax, qword [r12]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400dfea	            0x31ff	                            xor edi, edi	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400dfec	      0xba05000000	                              mov edx, 5	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400dff1	      0xbe00000000	                              mov esi, 0	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400dff6	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400dffb	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e000	      0x4c89542418	             mov qword [rsp + 0x18], r10	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e005	        0x4983c601	                              add r14, 1	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400e009	      0x4c89442410	              mov qword [rsp + 0x10], r8	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e00e	      0x4889442408	                mov qword [rsp + 8], rax	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e013	        0x4983c510	                           add r13, 0x10	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e017	      0xe800000000	                          call 0x400e01c	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e01c	        0x4883ec08	                              sub rsp, 8	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e020	          0x4889c7	                            mov rdi, rax	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e023	          0x4c89fa	                            mov rdx, r15	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e026	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e02b	            0x31c0	                            xor eax, eax	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e02d	            0x4153	                                push r11	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e02f	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e034	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e039	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e03e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e043	          0x4c89d1	                            mov rcx, r10	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e046	      0x4c89542420	             mov qword [rsp + 0x20], r10	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e04b	      0xe800000000	                          call 0x400e050	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400e050	    0x41c745f80100	                  mov dword [r13 - 8], 1	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400e058	          0x4939de	                            cmp r14, rbx	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400e05b	          0x4c89e0	                            mov rax, r12	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400e05e	            0x4159	                                  pop r9	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400e060	            0x415a	                                 pop r10	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400e062	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400e067	          0x4d89f9	                             mov r9, r15	      4855	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400e06a	          0x4d89d3	                            mov r11, r10	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400e06d	     0xf853dffffff	                           jne 0x400dfb0	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400e073	      0xba10000000	                           mov edx, 0x10	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400e078	          0x4889de	                            mov rsi, rbx	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400e07b	          0x4889ef	                            mov rdi, rbp	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400e07e	      0xb900000000	                              mov ecx, 0	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400e083	      0xe800000000	                          call 0x400e088	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400e088	        0x488b7500	                    mov rsi, qword [rbp]	      4885	ldlang.c	FUNCTION_112
0x400e08c	        0x488d5510	                   lea rdx, [rbp + 0x10]	      4885	ldlang.c	FUNCTION_112
0x400e090	      0xb801000000	                              mov eax, 1	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400e095	        0x4c8b4e28	              mov r9, qword [rsi + 0x28]	      4885	ldlang.c	FUNCTION_112
0x400e099	          0x4c89cf	                             mov rdi, r9	      4885	ldlang.c	FUNCTION_112
0x400e09c	            0xeb16	                           jmp 0x400e0b4	      4885	ldlang.c	FUNCTION_112
0x400e09e	            0x6690	                                     nop	      4885	ldlang.c	FUNCTION_112
0x400e0a0	        0x4883c001	                              add rax, 1	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400e0a4	        0x4883c210	                           add rdx, 0x10	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400e0a8	          0x4889cf	                            mov rdi, rcx	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400e0ab	          0x4839d8	                            cmp rax, rbx	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400e0ae	     0xf8415090000	                            je 0x400e9c9	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400e0b4	          0x488b0a	                    mov rcx, qword [rdx]	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400e0b7	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400e0bb	          0x4839f9	                            cmp rcx, rdi	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400e0be	            0x75e0	                           jne 0x400e0a0	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400e0c0	          0x4889ef	                            mov rdi, rbp	      4919	ldlang.c	FUNCTION_112	CALL_14
0x400e0c3	      0xe800000000	                          call 0x400e0c8	      4919	ldlang.c	FUNCTION_112	CALL_14
0x400e0c8	    0x488b1d000000	            mov rbx, qword [0x0400e0cf] 	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400e0cf	          0x4885db	                           test rbx, rbx	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400e0d2	            0x7519	                           jne 0x400e0ed	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400e0d4	      0xe9fcf9ffff	                           jmp 0x400dad5	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400e0d9	     0xf1f80000000	                         nop dword [rax]	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400e0e0	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400e0e4	          0x4885db	                           test rbx, rbx	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400e0e7	     0xf84e8f9ffff	                            je 0x400dad5	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400e0ed	          0x8b4b50	            mov ecx, dword [rbx + 0x50] 	      4930	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400e0f0	            0x85c9	                           test ecx, ecx	      4930	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400e0f2	            0x74ec	                            je 0x400e0e0	      4930	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400e0f4	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400e0f8	        0x48034320	             add rax, qword [rbx + 0x20]	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400e0fc	            0x31ff	                            xor edi, edi	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e0fe	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400e102	          0x4c8b23	                    mov r12, qword [rbx]	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e105	    0x41b805000000	                              mov r8d, 5	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e10b	      0xba00000000	                              mov edx, 0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e110	      0xbe00000000	                              mov esi, 0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e115	          0x4829c5	                            sub rbp, rax	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400e118	          0x4889e9	                            mov rcx, rbp	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e11b	      0xe800000000	                          call 0x400e120	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e120	          0x4889ea	                            mov rdx, rbp	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e123	          0x4889c7	                            mov rdi, rax	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e126	          0x4c89e6	                            mov rsi, r12	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e129	            0x31c0	                            xor eax, eax	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e12b	      0xe800000000	                          call 0x400e130	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e130	            0xebae	                           jmp 0x400e0e0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400e132	            0x31f6	                            xor esi, esi	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400e134	          0x4889df	                            mov rdi, rbx	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400e137	          0x4531f6	                          xor r14d, r14d	      6487	ldlang.c	FUNCTION_138	ELSE_1
0x400e13a	      0xe8d14affff	               call sym.unique_section_p	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400e13f	            0x85c0	                           test eax, eax	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400e141	     0xf84e8f4ffff	                            je 0x400d62f	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400e147	      0xe9ddf4ffff	                           jmp 0x400d629	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400e14c	      0xbf00000000	                              mov edi, 0	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x400e151	      0xe800000000	                          call 0x400e156	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x400e156	          0x4989c4	                            mov r12, rax	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x400e159	      0xe99ceaffff	                           jmp 0x400cbfa	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x400e15e	    0x488b05000000	            mov rax, qword [0x0400e165] 	      6038	ldlang.c	FUNCTION_126
0x400e165	    0x488b2d000000	            mov rbp, qword [0x0400e16c] 	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e16c	        0x488b4008	                mov rax, qword [rax + 8]	      6038	ldlang.c	FUNCTION_126
0x400e170	          0x4885ed	                           test rbp, rbp	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e173	         0xfb6581c	           movzx ebx, byte [rax + 0x1c] 	      6038	ldlang.c	FUNCTION_126
0x400e177	     0xf84aeedffff	                            je 0x400cf2b	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e17d	          0x80fb01	                               cmp bl, 1	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e180	          0x4d19e4	                            sbb r12, r12	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e183	        0x4983c402	                              add r12, 2	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e187	    0x4c8bad900000	            mov r13, qword [rbp + 0x90] 	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e18e	          0x4d85ed	                           test r13, r13	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e191	            0x7452	                            je 0x400e1e5	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e193	       0xf1f440000	                   nop dword [rax + rax]	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e198	        0x4d8b7500	                    mov r14, qword [r13]	      6044	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e19c	        0x410fb606	                   movzx eax, byte [r14]	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400e1a0	            0x84c0	                             test al, al	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400e1a2	            0x745c	                            je 0x400e200	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400e1a4	           0xfb6d0	                           movzx edx, al	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1a7	    0xf68412000000	            test byte [rdx + rdx], 0x8c 	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1af	            0x7504	                           jne 0x400e1b5	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1b1	            0x3c5f	                            cmp al, 0x5f	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1b3	            0x7527	                           jne 0x400e1dc	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1b5	          0x4c89f2	                            mov rdx, r14	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1b8	     0xf1f84000000	                   nop dword [rax + rax]	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1c0	        0x4883c201	                              add rdx, 1	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400e1c4	           0xfb602	                   movzx eax, byte [rdx]	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400e1c7	            0x84c0	                             test al, al	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400e1c9	            0x7435	                            je 0x400e200	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400e1cb	           0xfb6c8	                           movzx ecx, al	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1ce	    0xf68409000000	            test byte [rcx + rcx], 0x8c 	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1d6	            0x75e8	                           jne 0x400e1c0	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1d8	            0x3c5f	                            cmp al, 0x5f	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1da	            0x74e4	                            je 0x400e1c0	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400e1dc	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e1e0	          0x4d85ed	                           test r13, r13	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e1e3	            0x75b3	                           jne 0x400e198	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e1e5	    0x488badf00000	            mov rbp, qword [rbp + 0xf0] 	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e1ec	          0x4885ed	                           test rbp, rbp	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e1ef	            0x7596	                           jne 0x400e187	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e1f1	      0xe935edffff	                           jmp 0x400cf2b	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e1f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400e200	          0x4c89f7	                            mov rdi, r14	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400e203	      0xe800000000	                          call 0x400e208	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400e208	        0x488d780a	                    lea rdi, [rax + 0xa]	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400e20c	      0xe800000000	                          call 0x400e211	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400e211	            0x31ff	                            xor edi, edi	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e213	            0x84db	                             test bl, bl	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e215	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e218	        0x400f95c7	                               setne dil	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e21c	          0x4989c7	                            mov r15, rax	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400e21f	            0x8818	                      mov byte [rax], bl	      6053	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2
0x400e221	          0x4801c7	                            add rdi, rax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e224	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e229	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e230	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e235	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e237	      0xe800000000	                          call 0x400e23c	        33	stdio2.h	FUNCTION_228	CALL_1
0x400e23c	    0x488b05000000	            mov rax, qword [0x0400e243] 	      6015	ldlang.c	FUNCTION_125
0x400e243	          0x4c89ea	                            mov rdx, r13	      6015	ldlang.c	FUNCTION_125
0x400e246	          0x4c89fe	                            mov rsi, r15	      6015	ldlang.c	FUNCTION_125
0x400e249	      0xbf00000000	                              mov edi, 0	      6015	ldlang.c	FUNCTION_125
0x400e24e	        0x488b4008	                mov rax, qword [rax + 8]	      6015	ldlang.c	FUNCTION_125
0x400e252	    0xff9030030000	                call qword [rax + 0x330]	      6015	ldlang.c	FUNCTION_125
0x400e258	          0x4885c0	                           test rax, rax	      6016	ldlang.c	FUNCTION_125	IF_1
0x400e25b	          0x4989c6	                            mov r14, rax	      6015	ldlang.c	FUNCTION_125
0x400e25e	            0x742a	                            je 0x400e28a	      6016	ldlang.c	FUNCTION_125	IF_1
0x400e260	    0x488b15000000	            mov rdx, qword [0x0400e267] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e267	    0x483b15000000	            cmp rdx, qword [0x0400e26e] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e26e	     0xf84c6000000	                            je 0x400e33a	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e274	    0x488b05000000	            mov rax, qword [0x0400e27b] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e27b	        0x488d4a01	                      lea rcx, [rdx + 1]	      6025	ldlang.c	FUNCTION_125	IF_1
0x400e27f	        0x4c8934d0	            mov qword [rax + rdx*8], r14	      6025	ldlang.c	FUNCTION_125	IF_1
0x400e283	    0x48890d000000	            mov qword [0x0400e28a], rcx 	      6025	ldlang.c	FUNCTION_125	IF_1
0x400e28a	        0x4b8d0427	                    lea rax, [r15 + r12]	        53	string3.h	FUNCTION_245	CALL_3
0x400e28e	    0x41be6f700000	                        mov r14d, 0x706f	        53	string3.h	FUNCTION_245	CALL_3
0x400e294	        0x41885f01	                  mov byte [r15 + 1], bl	      6057	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2
0x400e298	        0x498d7701	                      lea rsi, [r15 + 1]	      6015	ldlang.c	FUNCTION_125
0x400e29c	          0x4c89ea	                            mov rdx, r13	      6015	ldlang.c	FUNCTION_125
0x400e29f	      0xbf00000000	                              mov edi, 0	      6015	ldlang.c	FUNCTION_125
0x400e2a4	      0x6644897004	                mov word [rax + 4], r14w	        53	string3.h	FUNCTION_245	CALL_3
0x400e2a9	    0xc7005f5f7374	            mov dword [rax], 0x74735f5f 	        53	string3.h	FUNCTION_245	CALL_3
0x400e2af	    0x488b05000000	            mov rax, qword [0x0400e2b6] 	      6015	ldlang.c	FUNCTION_125
0x400e2b6	        0x488b4008	                mov rax, qword [rax + 8]	      6015	ldlang.c	FUNCTION_125
0x400e2ba	    0xff9030030000	                call qword [rax + 0x330]	      6015	ldlang.c	FUNCTION_125
0x400e2c0	          0x4885c0	                           test rax, rax	      6016	ldlang.c	FUNCTION_125	IF_1
0x400e2c3	          0x4989c6	                            mov r14, rax	      6015	ldlang.c	FUNCTION_125
0x400e2c6	            0x7426	                            je 0x400e2ee	      6016	ldlang.c	FUNCTION_125	IF_1
0x400e2c8	    0x488b15000000	            mov rdx, qword [0x0400e2cf] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e2cf	    0x483b15000000	            cmp rdx, qword [0x0400e2d6] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e2d6	            0x7430	                            je 0x400e308	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e2d8	    0x488b05000000	            mov rax, qword [0x0400e2df] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e2df	        0x488d4a01	                      lea rcx, [rdx + 1]	      6025	ldlang.c	FUNCTION_125	IF_1
0x400e2e3	        0x4c8934d0	            mov qword [rax + rdx*8], r14	      6025	ldlang.c	FUNCTION_125	IF_1
0x400e2e7	    0x48890d000000	            mov qword [0x0400e2ee], rcx 	      6025	ldlang.c	FUNCTION_125	IF_1
0x400e2ee	          0x4c89ff	                            mov rdi, r15	      6061	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_7
0x400e2f1	      0xe800000000	                          call 0x400e2f6	      6061	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_7
0x400e2f6	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e2fa	          0x4d85ed	                           test r13, r13	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e2fd	     0xf8595feffff	                           jne 0x400e198	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e303	      0xe9ddfeffff	                           jmp 0x400e1e5	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400e308	        0x4883c205	                              add rdx, 5	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e30c	    0x488b3d000000	            mov rdi, qword [0x0400e313] 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e313	        0x488d0412	                    lea rax, [rdx + rdx]	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e317	        0x48c1e204	                              shl rdx, 4	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e31b	          0x4889d6	                            mov rsi, rdx	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e31e	    0x488905000000	            mov qword [0x0400e325], rax 	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e325	      0xe800000000	                          call 0x400e32a	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e32a	    0x488b15000000	            mov rdx, qword [0x0400e331] 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e331	    0x488905000000	            mov qword [0x0400e338], rax 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e338	            0xeba5	                           jmp 0x400e2df	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e33a	        0x4883c205	                              add rdx, 5	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e33e	    0x488b3d000000	            mov rdi, qword [0x0400e345] 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e345	        0x488d0412	                    lea rax, [rdx + rdx]	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e349	        0x48c1e204	                              shl rdx, 4	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e34d	          0x4889d6	                            mov rsi, rdx	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e350	    0x488905000000	            mov qword [0x0400e357], rax 	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x400e357	      0xe800000000	                          call 0x400e35c	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e35c	    0x488b15000000	            mov rdx, qword [0x0400e363] 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e363	    0x488905000000	            mov qword [0x0400e36a], rax 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e36a	      0xe90cffffff	                           jmp 0x400e27b	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x400e36f	    0x488b05000000	            mov rax, qword [0x0400e376] 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400e376	          0x4885c0	                           test rax, rax	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400e379	     0xf8455f3ffff	                            je 0x400d6d4	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400e37f	    0x488b2d000000	            mov rbp, qword [0x0400e386] 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400e386	    0x4c8b35000000	            mov r14, qword [0x0400e38d] 	      6090	ldlang.c	FUNCTION_128	IF_2
0x400e38d	      0x4c8d6cc500	                  lea r13, [rbp + rax*8]	      6090	ldlang.c	FUNCTION_128	IF_2
0x400e392	            0xeb1c	                           jmp 0x400e3b0	      6090	ldlang.c	FUNCTION_128	IF_2
0x400e394	    0x41c644241801	                mov byte [r12 + 0x18], 1	      6094	ldlang.c	FUNCTION_128	IF_2
0x400e39a	    0x49c744242800	               mov qword [r12 + 0x28], 0	      6095	ldlang.c	FUNCTION_128	IF_2
0x400e3a3	        0x4883c508	                              add rbp, 8	      6095	ldlang.c	FUNCTION_128	IF_2
0x400e3a7	          0x4c39ed	                            cmp rbp, r13	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400e3aa	     0xf8424f3ffff	                            je 0x400d6d4	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400e3b0	        0x4c8b6500	                    mov r12, qword [rbp]	      6074	ldlang.c	FUNCTION_127	CALL_1
0x400e3b4	    0x41f644241908	               test byte [r12 + 0x19], 8	      6086	ldlang.c	FUNCTION_128	IF_1
0x400e3ba	            0x75e7	                           jne 0x400e3a3	      6086	ldlang.c	FUNCTION_128	IF_1
0x400e3bc	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      6089	ldlang.c	FUNCTION_128	IF_2
0x400e3c1	        0x488b4268	            mov rax, qword [rdx + 0x68] 	      6089	ldlang.c	FUNCTION_128	IF_2
0x400e3c5	          0x4885c0	                           test rax, rax	      6089	ldlang.c	FUNCTION_128	IF_2
0x400e3c8	            0x74ca	                            je 0x400e394	      6089	ldlang.c	FUNCTION_128	IF_2
0x400e3ca	    0x4c39b0f00000	            cmp qword [rax + 0xf0], r14 	      6090	ldlang.c	FUNCTION_128	IF_2
0x400e3d1	            0x75c1	                           jne 0x400e394	      6090	ldlang.c	FUNCTION_128	IF_2
0x400e3d3	          0x488b30	                    mov rsi, qword [rax]	      6091	ldlang.c	FUNCTION_128	IF_2
0x400e3d6	          0x488b3a	                    mov rdi, qword [rdx]	      6091	ldlang.c	FUNCTION_128	IF_2
0x400e3d9	      0xe800000000	                          call 0x400e3de	      6091	ldlang.c	FUNCTION_128	IF_2
0x400e3de	            0x85c0	                           test eax, eax	      6091	ldlang.c	FUNCTION_128	IF_2
0x400e3e0	            0x75b2	                           jne 0x400e394	      6091	ldlang.c	FUNCTION_128	IF_2
0x400e3e2	            0xebbf	                           jmp 0x400e3a3	      6091	ldlang.c	FUNCTION_128	IF_2
0x400e3e4	        0xf6454420	           test byte [rbp + 0x44], 0x20 	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400e3e8	     0xf84e5e9ffff	                            je 0x400cdd3	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400e3ee	    0x4c8b2d000000	            mov r13, qword [0x0400e3f5] 	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400e3f5	        0x488b4508	                mov rax, qword [rbp + 8]	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400e3f9	        0x498b5508	                mov rdx, qword [r13 + 8]	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400e3fd	      0xe99be9ffff	                           jmp 0x400cd9d	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400e402	    0x488b05000000	            mov rax, qword [0x0400e409] 	      7193	ldlang.c	FUNCTION_163	IF_3
0x400e409	    0x4c8b3d000000	            mov r15, qword [0x0400e410] 	      7195	ldlang.c	FUNCTION_163	IF_3
0x400e410	    0x4c8b25000000	            mov r12, qword [0x0400e417] 	      7195	ldlang.c	FUNCTION_163	IF_3
0x400e417	    0x488b2d000000	            mov rbp, qword [0x0400e41e] 	      7196	ldlang.c	FUNCTION_163	IF_3
0x400e41e	          0x4c8b28	                    mov r13, qword [rax]	      7193	ldlang.c	FUNCTION_163	IF_3
0x400e421	        0x488b5808	                mov rbx, qword [rax + 8]	      7193	ldlang.c	FUNCTION_163	IF_3
0x400e425	    0x488b05000000	            mov rax, qword [0x0400e42c] 	      7196	ldlang.c	FUNCTION_163	IF_3
0x400e42c	      0x4889442410	             mov qword [rsp + 0x10], rax	      7196	ldlang.c	FUNCTION_163	IF_3
0x400e431	      0xe800000000	                          call 0x400e436	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x400e436	            0x85c0	                           test eax, eax	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x400e438	            0x7426	                            je 0x400e460	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x400e43a	      0xe800000000	                          call 0x400e43f	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e43f	      0xbe00000000	                              mov esi, 0	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e444	          0x4989c6	                            mov r14, rax	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e447	            0x31ff	                            xor edi, edi	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e449	      0xba05000000	                              mov edx, 5	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e44e	      0xe800000000	                          call 0x400e453	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e453	          0x4c89f6	                            mov rsi, r14	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e456	          0x4889c7	                            mov rdi, rax	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e459	            0x31c0	                            xor eax, eax	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e45b	      0xe800000000	                          call 0x400e460	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400e460	          0x488b3b	                    mov rdi, qword [rbx]	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x400e463	            0x31f6	                            xor esi, esi	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x400e465	      0xe886b6ffff	                call sym.open_input_bfds	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x400e46a	    0x488b05000000	            mov rax, qword [0x0400e471] 	      7203	ldlang.c	FUNCTION_163	IF_3	CALL_15
0x400e471	          0x4c3b28	                    cmp r13, qword [rax]	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e474	            0x7419	                            je 0x400e48f	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e476	      0xbeae1b0000	                         mov esi, 0x1bae	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e47b	      0xbf00000000	                              mov edi, 0	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e480	      0x4889442408	                mov qword [rsp + 8], rax	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e485	      0xe800000000	                          call 0x400e48a	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e48a	      0x488b442408	                mov rax, qword [rsp + 8]	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e48f	          0x488b3b	                    mov rdi, qword [rbx]	      7088	ldlang.c	FUNCTION_159
0x400e492	        0x4c8b7008	                mov r14, qword [rax + 8]	      7089	ldlang.c	FUNCTION_159
0x400e496	        0x48895808	                mov qword [rax + 8], rbx	      7090	ldlang.c	FUNCTION_159
0x400e49a	    0x48c703000000	                      mov qword [rbx], 0	      7091	ldlang.c	FUNCTION_159
0x400e4a1	    0x4c3b3d000000	            cmp r15, qword [0x0400e4a8] 	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4a8	      0x48897c2408	                mov qword [rsp + 8], rdi	      7088	ldlang.c	FUNCTION_159
0x400e4ad	            0x740f	                            je 0x400e4be	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4af	      0xbeae1b0000	                         mov esi, 0x1bae	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4b4	      0xbf00000000	                              mov edi, 0	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4b9	      0xe800000000	                          call 0x400e4be	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4be	        0x4d8b2c24	                    mov r13, qword [r12]	      7088	ldlang.c	FUNCTION_159
0x400e4c2	    0x4c8b3d000000	            mov r15, qword [0x0400e4c9] 	      7089	ldlang.c	FUNCTION_159
0x400e4c9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4ce	    0x4c8925000000	            mov qword [0x0400e4d5], r12 	      7090	ldlang.c	FUNCTION_159
0x400e4d5	    0x49c704240000	                      mov qword [r12], 0	      7091	ldlang.c	FUNCTION_159
0x400e4dd	    0x483905000000	            cmp qword [0x0400e4e4], rax 	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4e4	            0x740f	                            je 0x400e4f5	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4e6	      0xbeae1b0000	                         mov esi, 0x1bae	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4eb	      0xbf00000000	                              mov edi, 0	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4f0	      0xe800000000	                          call 0x400e4f5	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e4f5	    0x48837c240800	                  cmp qword [rsp + 8], 0	      7208	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400e4fb	        0x4c8b6500	                    mov r12, qword [rbp]	      7088	ldlang.c	FUNCTION_159
0x400e4ff	    0x488b1d000000	            mov rbx, qword [0x0400e506] 	      7089	ldlang.c	FUNCTION_159
0x400e506	    0x48892d000000	            mov qword [0x0400e50d], rbp 	      7090	ldlang.c	FUNCTION_159
0x400e50d	    0x48c745000000	                      mov qword [rbp], 0	      7091	ldlang.c	FUNCTION_159
0x400e515	     0xf8419e5ffff	                            je 0x400ca34	      7208	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400e51b	    0x488b05000000	            mov rax, qword [0x0400e522] 	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400e522	    0x488b15000000	            mov rdx, qword [0x0400e529] 	      6999	ldlang.c	FUNCTION_156
0x400e529	          0x4885c0	                           test rax, rax	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400e52c	            0x7520	                           jne 0x400e54e	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400e52e	            0xeb30	                           jmp 0x400e560	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400e530	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400e534	          0x4885c9	                           test rcx, rcx	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400e537	            0x740c	                            je 0x400e545	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400e539	    0x4883b9d00000	               cmp qword [rcx + 0xd0], 0	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400e541	        0x480f44d0	                          cmove rdx, rax	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400e545	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7002	ldlang.c	FUNCTION_156	FOR_1
0x400e549	          0x4885c0	                           test rax, rax	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400e54c	            0x7412	                            je 0x400e560	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400e54e	         0xfb64849	           movzx ecx, byte [rax + 0x49] 	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400e552	          0xf6c120	                           test cl, 0x20	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400e555	            0x74d9	                            je 0x400e530	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400e557	          0x83e140	                           and ecx, 0x40	      7005	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400e55a	     0xf8426040000	                            je 0x400e986	      7005	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400e560	          0x4885d2	                           test rdx, rdx	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400e563	    0x488915000000	            mov qword [0x0400e56a], rdx 	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400e56a	     0xf8414060000	                            je 0x400eb84	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400e570	          0x4889d0	                            mov rax, rdx	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400e573	    0x488b0d000000	            mov rcx, qword [0x0400e57a] 	      7219	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_20
0x400e57a	          0x488b32	                    mov rsi, qword [rdx]	      7071	ldlang.c	FUNCTION_158
0x400e57d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7072	ldlang.c	FUNCTION_158
0x400e582	          0x498936	                    mov qword [r14], rsi	      7071	ldlang.c	FUNCTION_158
0x400e585	          0x48893a	                    mov qword [rdx], rdi	      7072	ldlang.c	FUNCTION_158
0x400e588	        0x48394108	                cmp qword [rcx + 8], rax	      7073	ldlang.c	FUNCTION_158	IF_1
0x400e58c	     0xf84e9050000	                            je 0x400eb7b	      7073	ldlang.c	FUNCTION_158	IF_1
0x400e592	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      7071	ldlang.c	FUNCTION_158
0x400e596	          0x488903	                    mov qword [rbx], rax	      7071	ldlang.c	FUNCTION_158
0x400e599	        0x488d4238	                   lea rax, [rdx + 0x38]	      7223	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400e59d	    0x483905000000	            cmp qword [0x0400e5a4], rax 	      7073	ldlang.c	FUNCTION_158	IF_1
0x400e5a4	        0x4c896238	             mov qword [rdx + 0x38], r12	      7072	ldlang.c	FUNCTION_158
0x400e5a8	     0xf843b060000	                            je 0x400ebe9	      7073	ldlang.c	FUNCTION_158	IF_1
0x400e5ae	      0x48837a1000	               cmp qword [rdx + 0x10], 0	      7227	ldlang.c	FUNCTION_163	IF_3	IF_5	IF_6
0x400e5b3	     0xf84ff050000	                            je 0x400ebb8	      7227	ldlang.c	FUNCTION_163	IF_3	IF_5	IF_6
0x400e5b9	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      7071	ldlang.c	FUNCTION_158
0x400e5bd	        0x4883c230	                           add rdx, 0x30	      7228	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_22
0x400e5c1	          0x498907	                    mov qword [r15], rax	      7071	ldlang.c	FUNCTION_158
0x400e5c4	    0x488b1d000000	            mov rbx, qword [0x0400e5cb] 	      7073	ldlang.c	FUNCTION_158	IF_1
0x400e5cb	          0x4c892a	                    mov qword [rdx], r13	      7072	ldlang.c	FUNCTION_158
0x400e5ce	          0x4839d3	                            cmp rbx, rdx	      7073	ldlang.c	FUNCTION_158	IF_1
0x400e5d1	     0xf84cb050000	                            je 0x400eba2	      7073	ldlang.c	FUNCTION_158	IF_1
0x400e5d7	    0x4c8b2d000000	            mov r13, qword [0x0400e5de] 	      7073	ldlang.c	FUNCTION_158	IF_1
0x400e5de	    0x488b3d000000	            mov rdi, qword [0x0400e5e5] 	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x400e5e5	      0xbe02000000	                              mov esi, 2	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x400e5ea	    0x830500000000	               add dword [0x0400e5f1], 1	      7234	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400e5f1	      0xe8fab4ffff	                call sym.open_input_bfds	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x400e5f6	    0x4c392d000000	            cmp qword [0x0400e5fd], r13 	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e5fd	            0x740f	                            je 0x400e60e	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e5ff	      0xbeae1b0000	                         mov esi, 0x1bae	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e604	      0xbf00000000	                              mov edi, 0	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e609	      0xe800000000	                          call 0x400e60e	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400e60e	          0x4c8b0b	                     mov r9, qword [rbx]	      7088	ldlang.c	FUNCTION_159
0x400e611	    0x48891d000000	            mov qword [0x0400e618], rbx 	      7090	ldlang.c	FUNCTION_159
0x400e618	    0x48c703000000	                      mov qword [rbx], 0	      7091	ldlang.c	FUNCTION_159
0x400e61f	          0x4d85c9	                             test r9, r9	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e622	     0xf840ce4ffff	                            je 0x400ca34	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e628	        0x498b7920	              mov rdi, qword [r9 + 0x20]	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e62c	    0x488b05000000	            mov rax, qword [0x0400e633] 	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e633	    0x4c8b97d00000	            mov r10, qword [rdi + 0xd0] 	      7028	ldlang.c	FUNCTION_157	IF_1
0x400e63a	          0x4d85d2	                           test r10, r10	      7028	ldlang.c	FUNCTION_157	IF_1
0x400e63d	        0x490f45fa	                         cmovne rdi, r10	      7028	ldlang.c	FUNCTION_157	IF_1
0x400e641	          0x4885c0	                           test rax, rax	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e644	     0xf841f030000	                            je 0x400e969	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e64a	            0x31c9	                            xor ecx, ecx	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e64c	            0x31f6	                            xor esi, esi	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e64e	            0xeb17	                           jmp 0x400e667	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e650	          0x4885d2	                           test rdx, rdx	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x400e653	            0x7409	                            je 0x400e65e	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x400e655	      0x4883783000	               cmp qword [rax + 0x30], 0	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x400e65a	        0x480f45c8	                         cmovne rcx, rax	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x400e65e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7040	ldlang.c	FUNCTION_157	FOR_1
0x400e662	          0x4885c0	                           test rax, rax	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e665	            0x7422	                            je 0x400e689	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e667	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x400e66b	          0x4839fa	                            cmp rdx, rdi	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x400e66e	            0x75e0	                           jne 0x400e650	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x400e670	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400e674	          0x4885d2	                           test rdx, rdx	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400e677	     0xf85df020000	                           jne 0x400e95c	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400e67d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7040	ldlang.c	FUNCTION_157	FOR_1
0x400e681	          0x4889ce	                            mov rsi, rcx	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400e684	          0x4885c0	                           test rax, rax	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e687	            0x75de	                           jne 0x400e667	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400e689	          0x4885f6	                           test rsi, rsi	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e68c	     0xf84d7020000	                            je 0x400e969	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e692	        0x488d5630	                   lea rdx, [rsi + 0x30]	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e696	          0x488b02	                    mov rax, qword [rdx]	      7053	ldlang.c	FUNCTION_157	FOR_2
0x400e699	          0x4885c0	                           test rax, rax	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e69c	            0x7423	                            je 0x400e6c1	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e69e	            0x6690	                                     nop	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e6a0	        0xf6404940	           test byte [rax + 0x49], 0x40 	      7055	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400e6a4	            0x750e	                           jne 0x400e6b4	      7055	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400e6a6	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400e6aa	    0x4883b9d00000	               cmp qword [rcx + 0xd0], 0	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400e6b2	            0x740d	                            je 0x400e6c1	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400e6b4	        0x488d5030	                   lea rdx, [rax + 0x30]	      7054	ldlang.c	FUNCTION_157	FOR_2
0x400e6b8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7053	ldlang.c	FUNCTION_157	FOR_2
0x400e6bc	          0x4885c0	                           test rax, rax	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e6bf	            0x75df	                           jne 0x400e6a0	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e6c1	          0x4889d1	                            mov rcx, rdx	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400e6c4	          0x4d85d2	                           test r10, r10	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x400e6c7	        0x498d7930	                    lea rdi, [r9 + 0x30]	      7245	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e6cb	     0xf8478020000	                            je 0x400e949	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x400e6d1	        0x498b5130	              mov rdx, qword [r9 + 0x30]	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400e6d5	          0x4885d2	                           test rdx, rdx	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400e6d8	            0x7430	                            je 0x400e70a	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400e6da	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6de	    0x4c8b86d00000	              mov r8, qword [rsi + 0xd0]	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6e5	          0x4d39d0	                             cmp r8, r10	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6e8	            0x7413	                            je 0x400e6fd	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6ea	            0xeb1e	                           jmp 0x400e70a	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6ec	         0xf1f4000	                         nop dword [rax]	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6f0	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6f4	    0x4c3986d00000	              cmp qword [rsi + 0xd0], r8	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6fb	            0x750d	                           jne 0x400e70a	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400e6fd	        0x488d7a30	                   lea rdi, [rdx + 0x30]	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400e701	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400e705	          0x4885d2	                           test rdx, rdx	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400e708	            0x75e6	                           jne 0x400e6f0	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400e70a	          0x4c8909	                     mov qword [rcx], r9	      7252	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e70d	          0x4c8b0f	                     mov r9, qword [rdi]	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e710	          0x488907	                    mov qword [rdi], rax	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e713	    0x498b82000100	           mov rax, qword [r10 + 0x100] 	      7257	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9
0x400e71a	          0x4885c0	                           test rax, rax	      7258	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400e71d	     0xf84fcfeffff	                            je 0x400e61f	      7258	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400e723	        0x4883ef30	                           sub rdi, 0x30	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400e727	        0x48897830	             mov qword [rax + 0x30], rdi	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400e72b	      0xe9effeffff	                           jmp 0x400e61f	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400e730	            0x31ff	                            xor edi, edi	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400e732	      0xba05000000	                              mov edx, 5	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400e737	      0xbe00000000	                              mov esi, 0	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400e73c	      0xe800000000	                          call 0x400e741	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400e741	          0x4889c7	                            mov rdi, rax	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400e744	            0x31c0	                            xor eax, eax	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400e746	      0xe800000000	                          call 0x400e74b	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400e74b	      0xe9b4e2ffff	                           jmp 0x400ca04	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400e750	          0x4c8b23	                    mov r12, qword [rbx]	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e753	      0xba05000000	                              mov edx, 5	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e758	      0xbe00000000	                              mov esi, 0	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e75d	            0x31ff	                            xor edi, edi	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e75f	      0xe800000000	                          call 0x400e764	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e764	          0x4c89e6	                            mov rsi, r12	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e767	          0x4889c7	                            mov rdi, rax	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e76a	            0x31c0	                            xor eax, eax	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e76c	      0xe800000000	                          call 0x400e771	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e771	      0xe96cf7ffff	                           jmp 0x400dee2	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400e776	          0x4c8b23	                    mov r12, qword [rbx]	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x400e779	      0xba05000000	                              mov edx, 5	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x400e77e	      0xbe00000000	                              mov esi, 0	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x400e783	            0xebd8	                           jmp 0x400e75d	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x400e785	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x400e789	          0x4885d2	                           test rdx, rdx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400e78c	            0x742a	                            je 0x400e7b8	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400e78e	    0x8bba84000000	            mov edi, dword [rdx + 0x84] 	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400e794	            0x85ff	                           test edi, edi	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400e796	            0x7817	                            js 0x400e7af	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400e798	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400e79c	          0x4885ff	                           test rdi, rdi	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400e79f	            0x740e	                            je 0x400e7af	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400e7a1	    0x4883bff00000	               cmp qword [rdi + 0xf0], 0	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400e7a9	     0xf8597ecffff	                           jne 0x400d446	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400e7af	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400e7b3	          0x4885d2	                           test rdx, rdx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400e7b6	            0x75d6	                           jne 0x400e78e	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400e7b8	            0x31db	                            xor ebx, ebx	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400e7ba	      0xe9d7ecffff	                           jmp 0x400d496	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400e7bf	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6200	ldlang.c	FUNCTION_133	IF_4
0x400e7c3	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	      6200	ldlang.c	FUNCTION_133	IF_4
0x400e7c7	          0x4885c9	                           test rcx, rcx	      6200	ldlang.c	FUNCTION_133	IF_4
0x400e7ca	     0xf84d4f3ffff	                            je 0x400dba4	      6200	ldlang.c	FUNCTION_133	IF_4
0x400e7d0	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400e7d4	        0x48037030	             add rsi, qword [rax + 0x30]	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400e7d8	        0x48037260	             add rsi, qword [rdx + 0x60]	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400e7dc	    0x488b3d000000	            mov rdi, qword [0x0400e7e3] 	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400e7e3	      0xe800000000	                          call 0x400e7e8	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400e7e8	            0x85c0	                           test eax, eax	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400e7ea	     0xf8514f4ffff	                           jne 0x400dc04	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400e7f0	    0x488b1d000000	            mov rbx, qword [0x0400e7f7] 	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400e7f7	      0xba05000000	                              mov edx, 5	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400e7fc	      0xbe00000000	                              mov esi, 0	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400e801	            0x31ff	                            xor edi, edi	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400e803	      0xe800000000	                          call 0x400e808	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400e808	          0x4889de	                            mov rsi, rbx	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400e80b	          0x4889c7	                            mov rdi, rax	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400e80e	            0x31c0	                            xor eax, eax	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400e810	      0xe800000000	                          call 0x400e815	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400e815	      0xe9eaf3ffff	                           jmp 0x400dc04	      7425	ldlang.c	FUNCTION_163
0x400e81a	      0xbe01000000	                              mov esi, 1	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400e81f	      0xbf00000000	                              mov edi, 0	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400e824	      0xe81738ffff	call sym.lang_output_section_statement_lookup.constprop.62	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400e829	      0x4883785800	               cmp qword [rax + 0x58], 0	      6477	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400e82e	          0x4989c4	                            mov r12, rax	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400e831	     0xf84ee020000	                            je 0x400eb25	      6477	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400e837	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400e83c	          0x4c89e1	                            mov rcx, r12	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400e83f	            0x31d2	                            xor edx, edx	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400e841	          0x4889de	                            mov rsi, rbx	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400e844	      0xe800000000	                          call 0x400e849	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400e849	      0xe9eaecffff	                           jmp 0x400d538	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400e84e	    0x4c892d000000	            mov qword [0x0400e855], r13 	      3864	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x400e855	      0xe968ecffff	                           jmp 0x400d4c2	      3864	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x400e85a	    0x488b35000000	            mov rsi, qword [0x0400e861] 	      6191	ldlang.c	FUNCTION_133	IF_3
0x400e861	            0x31db	                            xor ebx, ebx	      6192	ldlang.c	FUNCTION_133	IF_3
0x400e863	    0x488935000000	            mov qword [0x0400e86a], rsi 	      6191	ldlang.c	FUNCTION_133	IF_3
0x400e86a	      0xe90af3ffff	                           jmp 0x400db79	      6191	ldlang.c	FUNCTION_133	IF_3
0x400e86f	    0x4c8babf00000	            mov r13, qword [rbx + 0xf0] 	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e876	            0x31ff	                            xor edi, edi	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e878	      0xba05000000	                              mov edx, 5	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e87d	      0xbe00000000	                              mov esi, 0	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e882	      0xe800000000	                          call 0x400e887	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e887	          0x4c89ea	                            mov rdx, r13	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e88a	          0x4889c7	                            mov rdi, rax	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e88d	          0x4889de	                            mov rsi, rbx	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e890	            0x31c0	                            xor eax, eax	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e892	      0xe800000000	                          call 0x400e897	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e897	      0xe97fedffff	                           jmp 0x400d61b	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400e89c	    0x488b1d000000	            mov rbx, qword [0x0400e8a3] 	      7286	ldlang.c	FUNCTION_163	IF_11	CALL_28
0x400e8a3	    0x488b05000000	            mov rax, qword [0x0400e8aa] 	      7276	ldlang.c	FUNCTION_163	IF_11
0x400e8aa	          0x4885db	                           test rbx, rbx	      7102	ldlang.c	FUNCTION_160	IF_1
0x400e8ad	    0x488905000000	            mov qword [0x0400e8b4], rax 	      7276	ldlang.c	FUNCTION_163	IF_11
0x400e8b4	     0xf84ace1ffff	                            je 0x400ca66	      7102	ldlang.c	FUNCTION_160	IF_1
0x400e8ba	      0xbf10000000	                           mov edi, 0x10	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400e8bf	      0xe800000000	                          call 0x400e8c4	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400e8c4	    0x488b15000000	            mov rdx, qword [0x0400e8cb] 	      7107	ldlang.c	FUNCTION_160
0x400e8cb	        0x48895808	                mov qword [rax + 8], rbx	      7108	ldlang.c	FUNCTION_160
0x400e8cf	          0x488910	                    mov qword [rax], rdx	      7107	ldlang.c	FUNCTION_160
0x400e8d2	    0x488905000000	            mov qword [0x0400e8d9], rax 	      7109	ldlang.c	FUNCTION_160
0x400e8d9	      0xe988e1ffff	                           jmp 0x400ca66	      7109	ldlang.c	FUNCTION_160
0x400e8de	          0x4989d2	                            mov r10, rdx	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400e8e1	      0xe9e3f3ffff	                           jmp 0x400dcc9	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400e8e6	      0x498d542420	                   lea rdx, [r12 + 0x20]	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400e8eb	    0x488915000000	            mov qword [0x0400e8f2], rdx 	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400e8f2	      0xe9e9eaffff	                           jmp 0x400d3e0	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400e8f7	        0x4883c220	                           add rdx, 0x20	      3784	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400e8fb	    0x488915000000	            mov qword [0x0400e902], rdx 	      3784	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400e902	      0xe9bfeaffff	                           jmp 0x400d3c6	      3784	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400e907	    0x488b3d000000	            mov rdi, qword [0x0400e90e] 	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400e90e	            0x31d2	                            xor edx, edx	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400e910	      0xbe00000000	                              mov esi, 0	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400e915	      0xe800000000	                          call 0x400e91a	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400e91a	      0xe9b5e7ffff	                           jmp 0x400d0d4	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400e91f	    0x4c8b0d000000	              mov r9, qword [0x0400e926]	      3835	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_4
0x400e926	          0x4d85c0	                             test r8, r8	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400e929	    0x4d8981900000	               mov qword [r9 + 0x90], r8	      3835	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_4
0x400e930	     0xf8539ebffff	                           jne 0x400d46f	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400e936	    0x4c8b05000000	              mov r8, qword [0x0400e93d]	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x400e93d	    0x498990980000	              mov qword [r8 + 0x98], rdx	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x400e944	      0xe92aebffff	                           jmp 0x400d473	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x400e949	          0x4c8909	                     mov qword [rcx], r9	      7252	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e94c	        0x498b5130	              mov rdx, qword [r9 + 0x30]	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e950	        0x49894130	              mov qword [r9 + 0x30], rax	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e954	          0x4989d1	                             mov r9, rdx	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e957	      0xe9c3fcffff	                           jmp 0x400e61f	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400e95c	        0x488d4a30	                   lea rcx, [rdx + 0x30]	      7046	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400e960	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      7046	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400e964	      0xe95bfdffff	                           jmp 0x400e6c4	      7046	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400e969	    0x488b05000000	            mov rax, qword [0x0400e970] 	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e970	        0x488d5030	                   lea rdx, [rax + 0x30]	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e974	      0xe91dfdffff	                           jmp 0x400e696	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400e979	          0x4889ef	                            mov rdi, rbp	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400e97c	      0xe800000000	                          call 0x400e981	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400e981	      0xe94ff1ffff	                           jmp 0x400dad5	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400e986	    0x488905000000	            mov qword [0x0400e98d], rax 	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400e98d	          0x4889c2	                            mov rdx, rax	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400e990	      0xe9defbffff	                           jmp 0x400e573	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400e995	      0xba01000000	                              mov edx, 1	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400e99a	          0x4489f6	                           mov esi, r14d	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400e99d	          0x4c89e7	                            mov rdi, r12	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400e9a0	      0xe800000000	                          call 0x400e9a5	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400e9a5	      0x4883785800	               cmp qword [rax + 0x58], 0	      6500	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x400e9aa	          0x4989c5	                            mov r13, rax	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400e9ad	     0xf84a0010000	                            je 0x400eb53	      6500	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x400e9b3	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400e9b7	          0x4c89e9	                            mov rcx, r13	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400e9ba	            0x31d2	                            xor edx, edx	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400e9bc	          0x4889de	                            mov rsi, rbx	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400e9bf	      0xe800000000	                          call 0x400e9c4	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400e9c4	      0xe980ecffff	                           jmp 0x400d649	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400e9c9	    0x8b0d00000000	            mov ecx, dword [0x0400e9cf] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9cf	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9d3	        0x4c8d6518	                   lea r12, [rbp + 0x18]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9d7	          0x4531d2	                          xor r10d, r10d	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9da	          0x48d3e8	                             shr rax, cl	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9dd	      0x4d8d5c01ff	                 lea r11, [r9 + rax - 1]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9e2	            0xeb3f	                           jmp 0x400ea23	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9e4	         0xf1f4000	                         nop dword [rax]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9e8	      0x4d8b6c24f8	                mov r13, qword [r12 - 8]	      4902	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9ed	    0x8b0d00000000	            mov ecx, dword [0x0400e9f3] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9f3	        0x458b0424	                    mov r8d, dword [r12]	      4907	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400e9f7	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9fb	        0x4d8b7528	            mov r14, qword [r13 + 0x28] 	      4903	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400e9ff	          0x48d3e8	                             shr rax, cl	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea02	          0x4585c0	                           test r8d, r8d	      4907	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400ea05	      0x4d8d7c06ff	                lea r15, [r14 + rax - 1]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea0a	            0x750a	                           jne 0x400ea16	      4907	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400ea0c	          0x4d39f3	                            cmp r11, r14	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400ea0f	            0x7320	                           jae 0x400ea31	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400ea11	          0x4d39cb	                             cmp r11, r9	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400ea14	            0x721b	                            jb 0x400ea31	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400ea16	        0x4983c410	                           add r12, 0x10	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400ea1a	          0x4d89fb	                            mov r11, r15	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea1d	          0x4d89f1	                             mov r9, r14	      4903	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea20	          0x4c89ee	                            mov rsi, r13	      4903	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea23	        0x4983c201	                              add r10, 1	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea27	          0x4939da	                            cmp r10, rbx	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea2a	            0x75bc	                           jne 0x400e9e8	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea2c	      0xe98ff6ffff	                           jmp 0x400e0c0	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400ea31	          0x4c8b06	                     mov r8, qword [rsi]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea34	        0x498b4500	                    mov rax, qword [r13]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea38	      0xba05000000	                              mov edx, 5	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea3d	      0xbe00000000	                              mov esi, 0	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea42	            0x31ff	                            xor edi, edi	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea44	      0x4c894c2428	              mov qword [rsp + 0x28], r9	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea49	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea4e	      0x4c89542418	             mov qword [rsp + 0x18], r10	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea53	      0x4c89442410	              mov qword [rsp + 0x10], r8	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea58	      0x4889442408	                mov qword [rsp + 8], rax	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea5d	      0xe800000000	                          call 0x400ea62	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea62	        0x4883ec08	                              sub rsp, 8	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea66	          0x4889c7	                            mov rdi, rax	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea69	          0x4c89f9	                            mov rcx, r15	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea6c	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea71	          0x4c89f2	                            mov rdx, r14	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea74	            0x31c0	                            xor eax, eax	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea76	            0x4153	                                push r11	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea78	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea7d	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea82	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea87	      0xe800000000	                          call 0x400ea8c	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea8c	              0x5e	                                 pop rsi	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea8d	              0x5f	                                 pop rdi	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea8e	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea93	            0xeb81	                           jmp 0x400ea16	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400ea95	        0x4c8b6028	            mov r12, qword [rax + 0x28] 	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400ea99	    0x488b1d000000	            mov rbx, qword [0x0400eaa0] 	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eaa0	            0x31ff	                            xor edi, edi	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eaa2	      0xba05000000	                              mov edx, 5	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eaa7	      0xbe00000000	                              mov esi, 0	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eaac	      0xe800000000	                          call 0x400eab1	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eab1	          0x4c89e2	                            mov rdx, r12	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eab4	          0x4889c7	                            mov rdi, rax	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eab7	          0x4889de	                            mov rsi, rbx	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eaba	            0x31c0	                            xor eax, eax	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eabc	      0xe800000000	                          call 0x400eac1	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eac1	      0xe926f1ffff	                           jmp 0x400dbec	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400eac6	            0x85db	                           test ebx, ebx	      6245	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11
0x400eac8	     0xf8436f1ffff	                            je 0x400dc04	      6245	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11
0x400eace	    0x488b1d000000	            mov rbx, qword [0x0400ead5] 	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400ead5	      0xba05000000	                              mov edx, 5	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400eada	      0xbe00000000	                              mov esi, 0	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400eadf	      0xe91dfdffff	                           jmp 0x400e801	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400eae4	         0xf1f4000	                         nop dword [rax]	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400eae8	    0xc74424300400	               mov dword [rsp + 0x30], 4	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400eaf0	    0x488b3d000000	            mov rdi, qword [0x0400eaf7] 	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400eaf7	      0x488d542430	                   lea rdx, [rsp + 0x30]	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400eafc	      0xbe00000000	                              mov esi, 0	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400eb01	      0xe800000000	                          call 0x400eb06	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400eb06	      0x836c243001	               sub dword [rsp + 0x30], 1	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400eb0b	            0x75e3	                           jne 0x400eaf0	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400eb0d	      0xe9ace5ffff	                           jmp 0x400d0be	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400eb12	    0x488b15000000	            mov rdx, qword [0x0400eb19] 	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x400eb19	    0x48898a980000	             mov qword [rdx + 0x98], rcx	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x400eb20	      0xe967e9ffff	                           jmp 0x400d48c	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x400eb25	     0xfb605000000	           movzx eax, byte [0x0400eb2c] 	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400eb2c	          0x83e003	                              and eax, 3	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400eb2f	            0x3c02	                               cmp al, 2	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400eb31	            0x740a	                            je 0x400eb3d	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400eb33	        0xf6432003	               test byte [rbx + 0x20], 3	      6479	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400eb37	     0xf85fafcffff	                           jne 0x400e837	      6479	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400eb3d	            0x31ff	                            xor edi, edi	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400eb3f	      0xe800000000	                          call 0x400eb44	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400eb44	      0x4989442458	             mov qword [r12 + 0x58], rax	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400eb49	      0xe9e9fcffff	                           jmp 0x400e837	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400eb4e	      0xe800000000	                          call 0x400eb53	      7425	ldlang.c	FUNCTION_163
0x400eb53	     0xfb605000000	           movzx eax, byte [0x0400eb5a] 	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x400eb5a	          0x83e003	                              and eax, 3	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x400eb5d	            0x3c02	                               cmp al, 2	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x400eb5f	            0x740a	                            je 0x400eb6b	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x400eb61	        0xf6432003	               test byte [rbx + 0x20], 3	      6502	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x400eb65	     0xf8548feffff	                           jne 0x400e9b3	      6502	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x400eb6b	            0x31ff	                            xor edi, edi	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x400eb6d	      0xe800000000	                          call 0x400eb72	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x400eb72	        0x49894558	             mov qword [r13 + 0x58], rax	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x400eb76	      0xe938feffff	                           jmp 0x400e9b3	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x400eb7b	        0x4c897108	                mov qword [rcx + 8], r14	      7074	ldlang.c	FUNCTION_158	IF_1
0x400eb7f	      0xe90efaffff	                           jmp 0x400e592	      7074	ldlang.c	FUNCTION_158	IF_1
0x400eb84	      0xbe311c0000	                         mov esi, 0x1c31	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400eb89	      0xbf00000000	                              mov edi, 0	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400eb8e	      0xe800000000	                          call 0x400eb93	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400eb93	    0x488b15000000	            mov rdx, qword [0x0400eb9a] 	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400eb9a	          0x4889d0	                            mov rax, rdx	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400eb9d	      0xe9d1f9ffff	                           jmp 0x400e573	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400eba2	    0x4c893d000000	            mov qword [0x0400eba9], r15 	      7074	ldlang.c	FUNCTION_158	IF_1
0x400eba9	    0x4c8b2d000000	            mov r13, qword [0x0400ebb0] 	      7074	ldlang.c	FUNCTION_158	IF_1
0x400ebb0	          0x4c89fb	                            mov rbx, r15	      7074	ldlang.c	FUNCTION_158	IF_1
0x400ebb3	      0xe926faffff	                           jmp 0x400e5de	      7074	ldlang.c	FUNCTION_158	IF_1
0x400ebb8	    0x488b05000000	            mov rax, qword [0x0400ebbf] 	      7071	ldlang.c	FUNCTION_158
0x400ebbf	          0x498907	                    mov qword [r15], rax	      7071	ldlang.c	FUNCTION_158
0x400ebc2	    0x488b1d000000	            mov rbx, qword [0x0400ebc9] 	      7073	ldlang.c	FUNCTION_158	IF_1
0x400ebc9	    0x4c892d000000	            mov qword [0x0400ebd0], r13 	      7072	ldlang.c	FUNCTION_158
0x400ebd0	    0x4881fb000000	                              cmp rbx, 0	      7073	ldlang.c	FUNCTION_158	IF_1
0x400ebd7	     0xf8501faffff	                           jne 0x400e5de	      7073	ldlang.c	FUNCTION_158	IF_1
0x400ebdd	        0x4c897b08	                mov qword [rbx + 8], r15	      7074	ldlang.c	FUNCTION_158	IF_1
0x400ebe1	          0x4c89fb	                            mov rbx, r15	      7074	ldlang.c	FUNCTION_158	IF_1
0x400ebe4	      0xe9f5f9ffff	                           jmp 0x400e5de	      7074	ldlang.c	FUNCTION_158	IF_1
0x400ebe9	    0x48891d000000	            mov qword [0x0400ebf0], rbx 	      7074	ldlang.c	FUNCTION_158	IF_1
0x400ebf0	      0xe9b9f9ffff	                           jmp 0x400e5ae	      7074	ldlang.c	FUNCTION_158	IF_1
lang_add_fill	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	17
0x400ae10	              0x55	                                push rbp	      7537	ldlang.c	FUNCTION_170
0x400ae11	              0x53	                                push rbx	      7537	ldlang.c	FUNCTION_170
0x400ae12	          0x4889fd	                            mov rbp, rdi	      7537	ldlang.c	FUNCTION_170
0x400ae15	      0xbf28000000	                           mov edi, 0x28	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ae1a	        0x4883ec08	                              sub rsp, 8	      7537	ldlang.c	FUNCTION_170
0x400ae1e	    0x488b1d000000	            mov rbx, qword [0x0400ae25] 	      7540	ldlang.c	FUNCTION_170
0x400ae25	      0xe800000000	                          call 0x400ae2a	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400ae2a	    0xc74008070000	                  mov dword [rax + 8], 7	      1040	ldlang.c	FUNCTION_33
0x400ae31	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400ae38	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400ae3c	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400ae3f	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400ae43	        0x48896810	             mov qword [rax + 0x10], rbp	      7541	ldlang.c	FUNCTION_170
0x400ae47	        0x4883c408	                              add rsp, 8	      7542	ldlang.c	FUNCTION_170
0x400ae4b	              0x5b	                                 pop rbx	      7542	ldlang.c	FUNCTION_170
0x400ae4c	              0x5d	                                 pop rbp	      7542	ldlang.c	FUNCTION_170
0x400ae4d	              0xc3	                                     ret	      7542	ldlang.c	FUNCTION_170
update_wild_statements	IF,3:ELSE,0:SWITCH,3:functions,0:CALL,4:DO,0:FOR,2:WHILE,0	94
0x4000320	    0x8b0500000000	            mov eax, dword [0x04000326] 	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000326	            0x85c0	                           test eax, eax	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000328	     0xf847c000000	                            je 0x40003aa	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x400032e	          0x83f802	                              cmp eax, 2	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000331	            0x777d	                            ja 0x40003b0	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000333	          0x4885ff	                           test rdi, rdi	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000336	              0x53	                                push rbx	      3523	ldlang.c	FUNCTION_85
0x4000337	          0x4889fb	                            mov rbx, rdi	      3523	ldlang.c	FUNCTION_85
0x400033a	            0x7522	                           jne 0x400035e	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x400033c	            0xeb6b	                           jmp 0x40003a9	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x400033e	            0x6690	                                     nop	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000340	          0x83f80d	                            cmp eax, 0xd	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000343	            0x7453	                            je 0x4000398	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000345	          0x83f80f	                            cmp eax, 0xf	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000348	            0x750c	                           jne 0x4000356	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400034a	    0x488b3d000000	            mov rdi, qword [0x04000351] 	      3567	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_2
0x4000351	      0xe8caffffff	         call sym.update_wild_statements	      3567	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_2
0x4000356	          0x488b1b	                    mov rbx, qword [rbx]	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000359	          0x4885db	                           test rbx, rbx	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x400035c	            0x744b	                            je 0x40003a9	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x400035e	          0x8b4308	                mov eax, dword [rbx + 8]	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000361	          0x83f804	                              cmp eax, 4	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000364	            0x745a	                            je 0x40003c0	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000366	            0x77d8	                            ja 0x4000340	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000368	            0x85c0	                           test eax, eax	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400036a	            0x75ea	                           jne 0x4000356	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400036c	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000370	      0xbf00000000	                              mov edi, 0	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000375	      0xb906000000	                              mov ecx, 6	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400037a	          0x4889c6	                            mov rsi, rax	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400037d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400037f	            0x74d5	                            je 0x4000356	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000381	      0xbf00000000	                              mov edi, 0	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000386	      0xb906000000	                              mov ecx, 6	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400038b	          0x4889c6	                            mov rsi, rax	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400038e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000390	            0x74c4	                            je 0x4000356	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000392	    0x660f1f440000	                    nop word [rax + rax]	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000398	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3579	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_4
0x400039c	      0xe87fffffff	         call sym.update_wild_statements	      3579	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_4
0x40003a1	          0x488b1b	                    mov rbx, qword [rbx]	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003a4	          0x4885db	                           test rbx, rbx	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003a7	            0x75b5	                           jne 0x400035e	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003a9	              0x5b	                                 pop rbx	      3585	ldlang.c	FUNCTION_85
0x40003aa	            0xf3c3	                                     ret	      3585	ldlang.c	FUNCTION_85
0x40003ac	         0xf1f4000	                         nop dword [rax]	      3585	ldlang.c	FUNCTION_85
0x40003b0	      0xbec90d0000	                          mov esi, 0xdc9	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x40003b5	      0xbf00000000	                              mov edi, 0	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x40003ba	      0xe900000000	                           jmp 0x40003bf	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x40003bf	              0x90	                                     nop	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x40003c0	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40003c4	          0x4885c0	                           test rax, rax	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40003c7	            0x748d	                            je 0x4000356	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40003c9	    0x8b1500000000	            mov edx, dword [0x040003cf] 	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003cf	          0x83fa01	                              cmp edx, 1	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003d2	            0x743f	                            je 0x4000413	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003d4	          0x83fa02	                              cmp edx, 2	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003d7	            0x7513	                           jne 0x40003ec	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003d9	            0xeb66	                           jmp 0x4000441	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003db	       0xf1f440000	                   nop dword [rax + rax]	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003e0	          0x488b00	                    mov rax, qword [rax]	      3545	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40003e3	          0x4885c0	                           test rax, rax	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40003e6	     0xf846affffff	                            je 0x4000356	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40003ec	          0x8b4818	            mov ecx, dword [rax + 0x18] 	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003ef	            0x85c9	                           test ecx, ecx	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003f1	            0x75ed	                           jne 0x40003e0	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003f3	          0x895018	             mov dword [rax + 0x18], edx	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003f6	            0xebe8	                           jmp 0x40003e0	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40003f8	     0xf1f84000000	                   nop dword [rax + rax]	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000400	    0xc74018010000	               mov dword [rax + 0x18], 1	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000407	          0x488b00	                    mov rax, qword [rax]	      3545	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x400040a	          0x4885c0	                           test rax, rax	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x400040d	     0xf8443ffffff	                            je 0x4000356	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x4000413	          0x8b5018	            mov edx, dword [rax + 0x18] 	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000416	            0x85d2	                           test edx, edx	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000418	            0x74e6	                            je 0x4000400	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400041a	          0x83fa02	                              cmp edx, 2	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400041d	            0x75e8	                           jne 0x4000407	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400041f	    0xc74018040000	               mov dword [rax + 0x18], 4	      3558	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x4000426	            0xebdf	                           jmp 0x4000407	      3558	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x4000428	     0xf1f84000000	                   nop dword [rax + rax]	      3558	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x4000430	          0x83fa01	                              cmp edx, 1	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000433	            0x7423	                            je 0x4000458	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000435	          0x488b00	                    mov rax, qword [rax]	      3545	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x4000438	          0x4885c0	                           test rax, rax	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x400043b	     0xf8415ffffff	                            je 0x4000356	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x4000441	          0x8b5018	            mov edx, dword [rax + 0x18] 	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000444	            0x85d2	                           test edx, edx	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000446	            0x75e8	                           jne 0x4000430	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000448	    0xc74018020000	               mov dword [rax + 0x18], 2	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400044f	            0xebe4	                           jmp 0x4000435	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000451	     0xf1f80000000	                         nop dword [rax]	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000458	    0xc74018030000	               mov dword [rax + 0x18], 3	      3554	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x400045f	            0xebd4	                           jmp 0x4000435	      3554	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
lang_do_assignments_1	IF,16:ELSE,3:SWITCH,2:functions,0:CALL,16:DO,0:FOR,1:WHILE,1	269
0x4000470	            0x4155	                                push r13	      5750	ldlang.c	FUNCTION_122
0x4000472	            0x4154	                                push r12	      5750	ldlang.c	FUNCTION_122
0x4000474	              0x55	                                push rbp	      5750	ldlang.c	FUNCTION_122
0x4000475	              0x53	                                push rbx	      5750	ldlang.c	FUNCTION_122
0x4000476	        0x4883ec18	                           sub rsp, 0x18	      5750	ldlang.c	FUNCTION_122
0x400047a	          0x4885ff	                           test rdi, rdi	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400047d	      0x48894c2408	                mov qword [rsp + 8], rcx	      5750	ldlang.c	FUNCTION_122
0x4000482	     0xf84f4000000	                            je 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000488	          0x4889fb	                            mov rbx, rdi	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400048b	          0x4989f4	                            mov r12, rsi	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400048e	          0x4989d5	                            mov r13, rdx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000491	          0x4c89c5	                             mov rbp, r8	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000494	         0xf1f4000	                         nop dword [rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000498	        0x837b080f	                cmp dword [rbx + 8], 0xf	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400049c	     0xf8716030000	                            ja 0x40007b8	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004a2	          0x8b4308	                mov eax, dword [rbx + 8]	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004a5	    0xff24c5000000	                       jmp qword [rax*8]	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004ac	         0xf1f4000	                         nop dword [rax]	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004b0	         0xfb64500	                   movzx eax, byte [rbp]	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004b4	     0xfb693900000	           movzx edx, byte [rbx + 0x90] 	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004bb	          0x83e001	                              and eax, 1	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004be	          0x83e2df	                     and edx, 0xffffffdf	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004c1	          0xc1e005	                              shl eax, 5	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004c4	             0x9d0	                             or eax, edx	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004c6	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x40004ca	    0x888390000000	               mov byte [rbx + 0x90], al	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40004d0	          0x4885d2	                           test rdx, rdx	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x40004d3	     0xf8407030000	                            je 0x40007e0	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x40004d9	            0xa808	                              test al, 8	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x40004db	     0xf85ff020000	                           jne 0x40007e0	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x40004e1	        0xf6422001	               test byte [rdx + 0x20], 1	      5769	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x40004e5	            0x7411	                            je 0x40004f8	      5769	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x40004e7	    0x48891d000000	            mov qword [0x040004ee], rbx 	      5771	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x40004ee	    0xc70500000000	               mov dword [0x040004f8], 0	      5772	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x40004f8	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      5774	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x40004fc	      0x48894c2408	                mov qword [rsp + 8], rcx	      5774	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000501	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000505	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000509	          0x4989e8	                             mov r8, rbp	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x400050c	          0x4889de	                            mov rsi, rbx	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x400050f	      0xe85cffffff	          call sym.lang_do_assignments_1	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000514	    0xf68390000000	               test byte [rbx + 0x90], 8	      5778	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3
0x400051b	            0x7553	                           jne 0x4000570	      5778	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3
0x400051d	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x4000521	          0x4885d2	                           test rdx, rdx	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x4000524	     0xf84ad000000	                            je 0x40005d7	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x400052a	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400052d	      0x2502040000	                          and eax, 0x402	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000532	      0x3d00040000	                          cmp eax, 0x400	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000537	     0xf8487030000	                            je 0x40008c4	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400053d	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000541	    0x8b0d00000000	            mov ecx, dword [0x04000547] 	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000547	          0x48d3e8	                             shr rax, cl	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400054a	      0x4801442408	                add qword [rsp + 8], rax	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400054f	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x4000553	          0x4885ff	                           test rdi, rdi	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x4000556	            0x7418	                            je 0x4000570	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x4000558	      0x488d542408	                      lea rdx, [rsp + 8]	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x400055d	      0xbe00000000	                              mov esi, 0	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x4000562	      0xe800000000	                          call 0x4000567	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x4000567	    0x660f1f840000	                    nop word [rax + rax]	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x4000570	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000573	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000576	     0xf851cffffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400057c	      0x488b442408	                mov rax, qword [rsp + 8]	      5910	ldlang.c	FUNCTION_122
0x4000581	        0x4883c418	                           add rsp, 0x18	      5911	ldlang.c	FUNCTION_122
0x4000585	              0x5b	                                 pop rbx	      5911	ldlang.c	FUNCTION_122
0x4000586	              0x5d	                                 pop rbp	      5911	ldlang.c	FUNCTION_122
0x4000587	            0x415c	                                 pop r12	      5911	ldlang.c	FUNCTION_122
0x4000589	            0x415d	                                 pop r13	      5911	ldlang.c	FUNCTION_122
0x400058b	              0xc3	                                     ret	      5911	ldlang.c	FUNCTION_122
0x400058c	         0xf1f4000	                         nop dword [rax]	      5911	ldlang.c	FUNCTION_122
0x4000590	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5856	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000594	        0xf6402180	           test byte [rax + 0x21], 0x80 	      5858	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000598	            0x75d6	                           jne 0x4000570	      5858	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x400059a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x400059e	    0x8b0d00000000	            mov ecx, dword [0x040005a4] 	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x40005a4	          0x48d3e8	                             shr rax, cl	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x40005a7	      0x4801442408	                add qword [rsp + 8], rax	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x40005ac	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005af	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005b2	     0xf85e0feffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005b8	            0xebc2	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005ba	    0x660f1f440000	                    nop word [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005c0	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x40005c4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x40005c9	          0x4989e8	                             mov r8, rbp	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x40005cc	          0x4c89ea	                            mov rdx, r13	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x40005cf	          0x4c89e6	                            mov rsi, r12	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x40005d2	      0xe899feffff	          call sym.lang_do_assignments_1	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x40005d7	      0x4889442408	                mov qword [rsp + 8], rax	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x40005dc	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005df	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005e2	     0xf85b0feffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005e8	            0xeb92	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005ea	    0x660f1f440000	                    nop word [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005f0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x40005f4	            0xebce	                           jmp 0x40005c4	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x40005f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000600	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000605	    0x488b3d000000	            mov rdi, qword [0x0400060c] 	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x400060c	          0x4989e8	                             mov r8, rbp	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x400060f	          0x4c89ea	                            mov rdx, r13	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000612	          0x4c89e6	                            mov rsi, r12	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000615	      0xe856feffff	          call sym.lang_do_assignments_1	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x400061a	      0x4889442408	                mov qword [rsp + 8], rax	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x400061f	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000622	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000625	     0xf856dfeffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400062b	      0xe94cffffff	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000630	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x4000634	    0x48891d000000	            mov qword [0x0400063b], rbx 	      5871	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400063b	        0x837f1008	               cmp dword [rdi + 0x10], 8	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x400063f	            0x744d	                            je 0x400068e	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x4000641	    0x4c3b25000000	            cmp r12, qword [0x04000648] 	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000648	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      5874	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x400064c	           0xfb610	                   movzx edx, byte [rax]	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x400064f	            0x7516	                           jne 0x4000667	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000651	      0xe985020000	                           jmp 0x40008db	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000656	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000660	        0x4883c001	                              add rax, 1	      5880	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000664	           0xfb610	                   movzx edx, byte [rax]	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000667	          0x80fa5f	                            cmp dl, 0x5f	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x400066a	            0x74f4	                            je 0x4000660	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x400066c	          0x80fa65	                            cmp dl, 0x65	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x400066f	            0x751d	                           jne 0x400068e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000671	        0x8078016e	                cmp byte [rax + 1], 0x6e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000675	            0x7517	                           jne 0x400068e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000677	        0x80780264	                cmp byte [rax + 2], 0x64	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x400067b	            0x7511	                           jne 0x400068e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x400067d	        0x80780300	                   cmp byte [rax + 3], 0	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000681	            0x750b	                           jne 0x400068e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000683	    0xc74500010000	                      mov dword [rbp], 1	      5882	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x400068a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5882	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x400068e	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      5885	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000693	      0xb800000000	                              mov eax, 0	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000698	      0x488d542408	                      lea rdx, [rsp + 8]	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x400069d	          0x4885f6	                           test rsi, rsi	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x40006a0	        0x480f44f0	                          cmove rsi, rax	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x40006a4	      0xe800000000	                          call 0x40006a9	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x40006a9	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006ac	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006af	     0xf85e3fdffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006b5	      0xe9c2feffff	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006ba	    0x660f1f440000	                    nop word [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006c0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40006c4	    0x8b0d00000000	            mov ecx, dword [0x040006ca] 	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40006ca	          0x48d3e8	                             shr rax, cl	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40006cd	      0x4801442408	                add qword [rsp + 8], rax	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40006d2	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006d5	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006d8	     0xf85bafdffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006de	      0xe999feffff	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006e3	       0xf1f440000	                   nop dword [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006e8	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x40006ec	      0x488d542408	                      lea rdx, [rsp + 8]	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x40006f1	      0xbe00000000	                              mov esi, 0	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x40006f6	      0xe800000000	                          call 0x40006fb	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x40006fb	    0x8b0500000000	            mov eax, dword [0x04000701] 	      5847	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000701	            0x85c0	                           test eax, eax	      5847	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000703	     0xf8417010000	                            je 0x4000820	      5847	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000709	    0x488b05000000	            mov rax, qword [0x04000710] 	      5848	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000710	        0x48894338	             mov qword [rbx + 0x38], rax	      5848	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000714	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000718	      0xe800000000	                          call 0x400071d	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x400071d	    0x8b0d00000000	            mov ecx, dword [0x04000723] 	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000723	            0xd3e8	                             shr eax, cl	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000725	      0x4801442408	                add qword [rsp + 8], rax	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x400072a	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400072d	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000730	     0xf8562fdffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000736	      0xe941feffff	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400073b	       0xf1f440000	                   nop dword [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000740	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x4000744	      0x488d542408	                      lea rdx, [rsp + 8]	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x4000749	      0xbe00000000	                              mov esi, 0	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x400074e	      0xe800000000	                          call 0x4000753	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x4000753	    0x8b1500000000	            mov edx, dword [0x04000759] 	      5810	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x4000759	            0x85d2	                           test edx, edx	      5810	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x400075b	     0xf848f000000	                            je 0x40007f0	      5810	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x4000761	    0x488b05000000	            mov rax, qword [0x04000768] 	      5812	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x4000768	        0x48894320	             mov qword [rbx + 0x20], rax	      5812	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x400076c	    0x488b15000000	            mov rdx, qword [0x04000773] 	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000773	          0x4885d2	                           test rdx, rdx	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000776	            0x7408	                            je 0x4000780	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000778	        0x48034228	             add rax, qword [rdx + 0x28]	      5814	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x400077c	        0x48894320	             mov qword [rbx + 0x20], rax	      5814	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000780	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000783	      0x2d1a010000	                          sub eax, 0x11a	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000788	          0x83f804	                              cmp eax, 4	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x400078b	     0xf871f010000	                            ja 0x40008b0	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000791	    0xff24c5000000	                       jmp qword [rax*8]	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000798	     0xf1f84000000	                   nop dword [rax + rax]	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x40007a0	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      5867	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40007a4	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007a7	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007aa	     0xf85e8fcffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007b0	      0xe9c7fdffff	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007b5	           0xf1f00	                         nop dword [rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007b8	      0xbe12170000	                         mov esi, 0x1712	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x40007bd	      0xbf00000000	                              mov edi, 0	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x40007c2	      0xe800000000	                          call 0x40007c7	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x40007c7	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007ca	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007cd	     0xf85c5fcffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007d3	      0xe9a4fdffff	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007d8	     0xf1f84000000	                   nop dword [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007e0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007e5	      0xe917fdffff	                           jmp 0x4000501	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007ea	    0x660f1f440000	                    nop word [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007f0	    0x833d00000000	               cmp dword [0x040007f7], 4	      5816	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x40007f7	            0x7587	                           jne 0x4000780	      5816	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x40007f9	            0x31ff	                            xor edi, edi	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x40007fb	      0xba05000000	                              mov edx, 5	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000800	      0xbe00000000	                              mov esi, 0	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000805	      0xe800000000	                          call 0x400080a	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x400080a	          0x4889c7	                            mov rdi, rax	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x400080d	            0x31c0	                            xor eax, eax	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x400080f	      0xe800000000	                          call 0x4000814	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000814	      0xe967ffffff	                           jmp 0x4000780	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000819	     0xf1f80000000	                         nop dword [rax]	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000820	    0x833d00000000	               cmp dword [0x04000827], 4	      5849	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000827	     0xf85e7feffff	                           jne 0x4000714	      5849	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x400082d	            0x31ff	                            xor edi, edi	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x400082f	      0xba05000000	                              mov edx, 5	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000834	      0xbe00000000	                              mov esi, 0	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000839	      0xe800000000	                          call 0x400083e	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x400083e	          0x4889c7	                            mov rdi, rax	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000841	            0x31c0	                            xor eax, eax	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000843	      0xe800000000	                          call 0x4000848	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000848	      0xe9c7feffff	                           jmp 0x4000714	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x400084d	           0xf1f00	                         nop dword [rax]	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000850	      0xb804000000	                              mov eax, 4	      5829	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000855	    0x8b0d00000000	            mov ecx, dword [0x0400085b] 	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x400085b	      0xba01000000	                              mov edx, 1	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x4000860	            0xd3e2	                             shl edx, cl	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x4000862	            0x39d0	                            cmp eax, edx	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000864	           0xf42c2	                          cmovb eax, edx	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000867	            0xd3e8	                             shr eax, cl	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000869	      0x4801442408	                add qword [rsp + 8], rax	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400086e	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000871	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000874	     0xf851efcffff	                           jne 0x4000498	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400087a	      0xe9fdfcffff	                           jmp 0x400057c	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400087f	              0x90	                                     nop	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000880	      0xb808000000	                              mov eax, 8	      5826	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000885	            0xebce	                           jmp 0x4000855	      5826	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000887	    0x660f1f840000	                    nop word [rax + rax]	      5826	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000890	      0xb801000000	                              mov eax, 1	      5835	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000895	            0xebbe	                           jmp 0x4000855	      5836	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000897	    0x660f1f840000	                    nop word [rax + rax]	      5836	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x40008a0	      0xb802000000	                              mov eax, 2	      5832	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x40008a5	            0xebae	                           jmp 0x4000855	      5833	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x40008a7	    0x660f1f840000	                    nop word [rax + rax]	      5833	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x40008b0	      0xba00000000	                              mov edx, 0	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x40008b5	      0xbebf160000	                         mov esi, 0x16bf	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x40008ba	      0xbf00000000	                              mov edi, 0	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x40008bf	      0xe800000000	                          call 0x40008c4	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x40008c4	     0xfb605000000	           movzx eax, byte [0x040008cb] 	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40008cb	          0x83e003	                              and eax, 3	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40008ce	            0x3c02	                               cmp al, 2	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40008d0	     0xf8579fcffff	                           jne 0x400054f	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40008d6	      0xe962fcffff	                           jmp 0x400053d	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40008db	          0x80fa2e	                            cmp dl, 0x2e	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40008de	     0xf8583fdffff	                           jne 0x4000667	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40008e4	        0x80780100	                   cmp byte [rax + 1], 0	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40008e8	     0xf85a0fdffff	                           jne 0x400068e	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40008ee	    0xc70500000000	               mov dword [0x040008f8], 1	      5877	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40008f8	      0xe991fdffff	                           jmp 0x400068e	      5877	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
section_for_dot	IF,7:ELSE,1:SWITCH,0:functions,0:CALL,0:DO,0:FOR,1:WHILE,4	125
0x40079e0	    0x4c8b05000000	              mov r8, qword [0x040079e7]	      5943	ldlang.c	FUNCTION_124	IF_1
0x40079e7	          0x4d85c0	                             test r8, r8	      5943	ldlang.c	FUNCTION_124	IF_1
0x40079ea	     0xf84a0000000	                            je 0x4007a90	      5943	ldlang.c	FUNCTION_124	IF_1
0x40079f0	    0x8b0d00000000	            mov ecx, dword [0x040079f6] 	      5943	ldlang.c	FUNCTION_124	IF_1
0x40079f6	            0x85c9	                           test ecx, ecx	      5943	ldlang.c	FUNCTION_124	IF_1
0x40079f8	     0xf8592000000	                           jne 0x4007a90	      5943	ldlang.c	FUNCTION_124	IF_1
0x40079fe	    0x488b3d000000	            mov rdi, qword [0x04007a05] 	      5943	ldlang.c	FUNCTION_124	IF_1
0x4007a05	        0x498b4038	              mov rax, qword [r8 + 0x38]	      5980	ldlang.c	FUNCTION_124
0x4007a09	          0x4885c0	                           test rax, rax	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007a0c	            0x7517	                           jne 0x4007a25	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007a0e	      0xe98d010000	                           jmp 0x4007ba0	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007a13	       0xf1f440000	                   nop dword [rax + rax]	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007a18	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5988	ldlang.c	FUNCTION_124	WHILE_3
0x4007a1c	          0x4885c0	                           test rax, rax	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007a1f	     0xf847b010000	                            je 0x4007ba0	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007a25	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4007a28	    0x81e201840000	                         and edx, 0x8401	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4007a2e	          0x83fa01	                              cmp edx, 1	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4007a31	            0x75e5	                           jne 0x4007a18	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4007a33	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4007a37	          0x4885d2	                           test rdx, rdx	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007a3a	     0xf8440010000	                            je 0x4007b80	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007a40	        0x48394218	            cmp qword [rdx + 0x18], rax 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4007a44	            0x75d2	                           jne 0x4007a18	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4007a46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4007a50	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a53	    0x81e201040000	                          and edx, 0x401	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a59	          0x83fa01	                              cmp edx, 1	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a5c	            0x751c	                           jne 0x4007a7a	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a5e	      0xe911010000	                           jmp 0x4007b74	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a63	       0xf1f440000	                   nop dword [rax + rax]	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a68	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a6b	    0x81e201040000	                          and edx, 0x401	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a71	          0x83fa01	                              cmp edx, 1	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a74	     0xf843e010000	                            je 0x4007bb8	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4007a7a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5994	ldlang.c	FUNCTION_124	WHILE_4
0x4007a7e	          0x4885c0	                           test rax, rax	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4007a81	            0x75e5	                           jne 0x4007a68	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4007a83	      0xb800000000	                              mov eax, 0	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007a88	              0xc3	                                     ret	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007a89	     0xf1f80000000	                         nop dword [rax]	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007a90	    0x488b05000000	            mov rax, qword [0x04007a97] 	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4007a97	          0x4885c0	                           test rax, rax	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4007a9a	            0x750c	                           jne 0x4007aa8	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4007a9c	            0xeb11	                           jmp 0x4007aaf	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4007a9e	            0x6690	                                     nop	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4007aa0	          0x488b00	                    mov rax, qword [rax]	      5950	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4007aa3	          0x4885c0	                           test rax, rax	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4007aa6	            0x7407	                            je 0x4007aaf	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4007aa8	          0x8b5008	                mov edx, dword [rax + 8]	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x4007aab	            0x85d2	                           test edx, edx	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x4007aad	            0x75f1	                           jne 0x4007aa0	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x4007aaf	          0x4885c0	                           test rax, rax	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ab2	    0x488b3d000000	            mov rdi, qword [0x04007ab9] 	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ab9	     0xf8421010000	                            je 0x4007be0	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007abf	     0xfb688900000	           movzx ecx, byte [rax + 0x90] 	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ac6	    0x488b3d000000	            mov rdi, qword [0x04007acd] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007acd	          0xf6c120	                           test cl, 0x20	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ad0	            0x7431	                            je 0x4007b03	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ad2	      0xe9e9000000	                           jmp 0x4007bc0	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ad7	    0x660f1f840000	                    nop word [rax + rax]	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ae0	        0x483b5618	            cmp rdx, qword [rsi + 0x18] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ae4	            0x743e	                            je 0x4007b24	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007ae6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5961	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007aea	          0x4885c0	                           test rax, rax	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007aed	     0xf84ed000000	                            je 0x4007be0	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007af3	     0xfb688900000	           movzx ecx, byte [rax + 0x90] 	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007afa	          0xf6c120	                           test cl, 0x20	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007afd	     0xf85bd000000	                           jne 0x4007bc0	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b03	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b07	          0x4885d2	                           test rdx, rdx	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b0a	            0x74da	                            je 0x4007ae6	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b0c	        0xf6422180	           test byte [rdx + 0x21], 0x80 	      5958	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b10	            0x75d4	                           jne 0x4007ae6	      5958	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b12	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b16	          0x4885f6	                           test rsi, rsi	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b19	            0x75c5	                           jne 0x4007ae0	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b1b	    0x483b97980000	            cmp rdx, qword [rdi + 0x98] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b22	            0x75c2	                           jne 0x4007ae6	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b24	          0x4d85c0	                             test r8, r8	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007b27	          0x4889d0	                            mov rax, rdx	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4007b2a	            0x7415	                            je 0x4007b41	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007b2c	          0x83e120	                           and ecx, 0x20	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007b2f	     0xf85d0feffff	                           jne 0x4007a05	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007b35	          0x4889d0	                            mov rax, rdx	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007b38	          0x4885c0	                           test rax, rax	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b3b	     0xf8442ffffff	                            je 0x4007a83	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b41	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b44	    0x81e201040000	                          and edx, 0x401	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b4a	          0x83fa01	                              cmp edx, 1	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b4d	            0x7517	                           jne 0x4007b66	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b4f	            0xeb23	                           jmp 0x4007b74	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b51	     0xf1f80000000	                         nop dword [rax]	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b58	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b5b	    0x81e201040000	                          and edx, 0x401	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b61	          0x83fa01	                              cmp edx, 1	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b64	            0x7472	                            je 0x4007bd8	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b66	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5972	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b6a	          0x4885c0	                           test rax, rax	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b6d	            0x75e9	                           jne 0x4007b58	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b6f	      0xe90fffffff	                           jmp 0x4007a83	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4007b74	            0xf3c3	                                     ret	      5999	ldlang.c	FUNCTION_124
0x4007b76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5999	ldlang.c	FUNCTION_124
0x4007b80	    0x483987980000	            cmp qword [rdi + 0x98], rax 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4007b87	     0xf84c3feffff	                            je 0x4007a50	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4007b8d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5988	ldlang.c	FUNCTION_124	WHILE_3
0x4007b91	          0x4885c0	                           test rax, rax	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007b94	     0xf858bfeffff	                           jne 0x4007a25	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007b9a	    0x660f1f440000	                    nop word [rax + rax]	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4007ba0	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	      5990	ldlang.c	FUNCTION_124	IF_6
0x4007ba7	          0x4885c0	                           test rax, rax	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4007baa	     0xf85a0feffff	                           jne 0x4007a50	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4007bb0	      0xe9cefeffff	                           jmp 0x4007a83	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4007bb5	           0xf1f00	                         nop dword [rax]	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4007bb8	            0xf3c3	                                     ret	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4007bba	    0x660f1f440000	                    nop word [rax + rax]	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4007bc0	          0x4d85c0	                             test r8, r8	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007bc3	     0xf8535feffff	                           jne 0x40079fe	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007bc9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007bcd	      0xe966ffffff	                           jmp 0x4007b38	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007bd2	    0x660f1f440000	                    nop word [rax + rax]	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007bd8	            0xf3c3	                                     ret	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007bda	    0x660f1f440000	                    nop word [rax + rax]	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4007be0	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	      5968	ldlang.c	FUNCTION_124	IF_1	IF_3	ELSE_1
0x4007be7	      0xe94cffffff	                           jmp 0x4007b38	      5968	ldlang.c	FUNCTION_124	IF_1	IF_3	ELSE_1
open_input_bfds	IF,9:ELSE,1:SWITCH,1:functions,0:CALL,13:DO,1:FOR,1:WHILE,0	219
0x4009af0	            0x4157	                                push r15	      3253	ldlang.c	FUNCTION_78
0x4009af2	            0x4156	                                push r14	      3253	ldlang.c	FUNCTION_78
0x4009af4	          0x4189f7	                           mov r15d, esi	      3266	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4009af7	            0x4155	                                push r13	      3253	ldlang.c	FUNCTION_78
0x4009af9	            0x4154	                                push r12	      3253	ldlang.c	FUNCTION_78
0x4009afb	        0x4183e702	                             and r15d, 2	      3266	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4009aff	              0x55	                                push rbp	      3253	ldlang.c	FUNCTION_78
0x4009b00	              0x53	                                push rbx	      3253	ldlang.c	FUNCTION_78
0x4009b01	        0x4883ec28	                           sub rsp, 0x28	      3253	ldlang.c	FUNCTION_78
0x4009b05	    0x64488b042528	                mov rax, qword fs:[0x28]	      3253	ldlang.c	FUNCTION_78
0x4009b0e	      0x4889442418	             mov qword [rsp + 0x18], rax	      3253	ldlang.c	FUNCTION_78
0x4009b13	            0x31c0	                            xor eax, eax	      3253	ldlang.c	FUNCTION_78
0x4009b15	          0x4885ff	                           test rdi, rdi	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b18	            0x744e	                            je 0x4009b68	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b1a	          0x4189f4	                           mov r12d, esi	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b1d	          0x4889fb	                            mov rbx, rdi	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b20	          0x4189f5	                           mov r13d, esi	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b23	        0x4183cc01	                              or r12d, 1	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b27	    0x49be01002000	             movabs r14, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x4009b31	     0xf1f80000000	                         nop dword [rax]	      1115	string2.h	FUNCTION_223	WHILE_1
0x4009b38	        0x837b080f	                cmp dword [rbx + 8], 0xf	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009b3c	            0x7722	                            ja 0x4009b60	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009b3e	          0x8b4308	                mov eax, dword [rbx + 8]	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009b41	    0xff24c5000000	                       jmp qword [rax*8]	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009b48	     0xf1f84000000	                   nop dword [rax + rax]	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009b50	    0x488b3d000000	            mov rdi, qword [0x04009b57] 	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4009b57	          0x4489ee	                           mov esi, r13d	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4009b5a	      0xe891ffffff	                call sym.open_input_bfds	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4009b5f	              0x90	                                     nop	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4009b60	          0x488b1b	                    mov rbx, qword [rbx]	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b63	          0x4885db	                           test rbx, rbx	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b66	            0x75d0	                           jne 0x4009b38	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4009b68	    0xf60500000000	               test byte [0x04009b6f], 8	      3372	ldlang.c	FUNCTION_78	IF_9
0x4009b6f	            0x740c	                            je 0x4009b7d	      3372	ldlang.c	FUNCTION_78	IF_9
0x4009b71	      0xbf00000000	                              mov edi, 0	      3373	ldlang.c	FUNCTION_78	CALL_13
0x4009b76	            0x31c0	                            xor eax, eax	      3373	ldlang.c	FUNCTION_78	CALL_13
0x4009b78	      0xe800000000	                          call 0x4009b7d	      3373	ldlang.c	FUNCTION_78	CALL_13
0x4009b7d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3374	ldlang.c	FUNCTION_78
0x4009b82	    0x644833042528	                xor rax, qword fs:[0x28]	      3374	ldlang.c	FUNCTION_78
0x4009b8b	     0xf85fd020000	                           jne 0x4009e8e	      3374	ldlang.c	FUNCTION_78
0x4009b91	        0x4883c428	                           add rsp, 0x28	      3374	ldlang.c	FUNCTION_78
0x4009b95	              0x5b	                                 pop rbx	      3374	ldlang.c	FUNCTION_78
0x4009b96	              0x5d	                                 pop rbp	      3374	ldlang.c	FUNCTION_78
0x4009b97	            0x415c	                                 pop r12	      3374	ldlang.c	FUNCTION_78
0x4009b99	            0x415d	                                 pop r13	      3374	ldlang.c	FUNCTION_78
0x4009b9b	            0x415e	                                 pop r14	      3374	ldlang.c	FUNCTION_78
0x4009b9d	            0x415f	                                 pop r15	      3374	ldlang.c	FUNCTION_78
0x4009b9f	              0xc3	                                     ret	      3374	ldlang.c	FUNCTION_78
0x4009ba0	    0x488b05000000	            mov rax, qword [0x04009ba7] 	      3374	ldlang.c	FUNCTION_78
0x4009ba7	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      3374	ldlang.c	FUNCTION_78
0x4009bab	            0xeb06	                           jmp 0x4009bb3	      3374	ldlang.c	FUNCTION_78
0x4009bad	           0xf1f00	                         nop dword [rax]	      3374	ldlang.c	FUNCTION_78
0x4009bb0	          0x4889c5	                            mov rbp, rax	      3374	ldlang.c	FUNCTION_78
0x4009bb3	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x4009bb7	          0x4489e6	                           mov esi, r12d	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x4009bba	      0xe831ffffff	                call sym.open_input_bfds	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x4009bbf	    0x488b05000000	            mov rax, qword [0x04009bc6] 	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009bc6	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009bca	          0x4839e8	                            cmp rax, rbp	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009bcd	            0x75e1	                           jne 0x4009bb0	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009bcf	            0xeb8f	                           jmp 0x4009b60	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009bd1	     0xf1f80000000	                         nop dword [rax]	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009bd8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3291	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009bdc	    0x488905000000	            mov qword [0x04009be3], rax 	      3291	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009be3	      0xe978ffffff	                           jmp 0x4009b60	      3292	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009be8	     0xf1f84000000	                   nop dword [rax + rax]	      3292	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009bf0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x4009bf4	        0x837f1008	               cmp dword [rdi + 0x10], 8	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x4009bf8	     0xf8462ffffff	                            je 0x4009b60	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x4009bfe	      0xe800000000	                          call 0x4009c03	      3364	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_12
0x4009c03	      0xe958ffffff	                           jmp 0x4009b60	      3364	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_12
0x4009c08	     0xf1f84000000	                   nop dword [rax + rax]	      3364	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_12
0x4009c10	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x4009c14	          0x4489ee	                           mov esi, r13d	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x4009c17	      0xe8d4feffff	                call sym.open_input_bfds	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x4009c1c	      0xe93fffffff	                           jmp 0x4009b60	      3263	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009c21	     0xf1f80000000	                         nop dword [rax]	      3263	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009c28	          0x4585ff	                         test r15d, r15d	      3266	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4009c2b	            0x753f	                           jne 0x4009c6c	      3266	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4009c2d	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4009c31	          0x4885ed	                           test rbp, rbp	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4009c34	            0x7436	                            je 0x4009c6c	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4009c36	         0xfb64500	                   movzx eax, byte [rbp]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c3a	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c3c	     0xf8413020000	                            je 0x4009e55	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c42	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c45	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c47	     0xf86a3000000	                           jbe 0x4009cf0	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c4d	          0x4889ea	                            mov rdx, rbp	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c50	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4009c54	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c57	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c59	     0xf84f6010000	                            je 0x4009e55	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c5f	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c62	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c64	            0x77ea	                            ja 0x4009c50	      1114	string2.h	FUNCTION_223	WHILE_1
0x4009c66	        0x490fa3c6	                             bt r14, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4009c6a	            0x73e4	                           jae 0x4009c50	      1115	string2.h	FUNCTION_223	WHILE_1
0x4009c6c	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4009c70	          0x4489ee	                           mov esi, r13d	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4009c73	      0xe878feffff	                call sym.open_input_bfds	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4009c78	      0xe9e3feffff	                           jmp 0x4009b60	      3272	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009c7d	           0xf1f00	                         nop dword [rax]	      3272	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4009c80	         0xfb64349	           movzx eax, byte [rbx + 0x49] 	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4009c84	            0xa804	                              test al, 4	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4009c86	            0x7448	                            je 0x4009cd0	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4009c88	    0x488b15000000	            mov rdx, qword [0x04009c8f] 	      3300	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4009c8f	          0x4585ed	                         test r13d, r13d	      3307	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009c92	        0x48895340	             mov qword [rbx + 0x40], rdx	      3300	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4009c96	     0xf849c000000	                            je 0x4009d38	      3307	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009c9c	          0x4585ff	                         test r15d, r15d	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009c9f	     0xf853b010000	                           jne 0x4009de0	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009ca5	            0xa802	                              test al, 2	      3312	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009ca7	     0xf848f010000	                            je 0x4009e3c	      3312	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cad	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cb1	          0x4885c9	                           test rcx, rcx	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cb4	            0x741a	                            je 0x4009cd0	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cb6	         0xfb65144	           movzx edx, byte [rcx + 0x44] 	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cba	          0x83e207	                              and edx, 7	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cbd	          0x80fa02	                               cmp dl, 2	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cc0	     0xf84bb010000	                            je 0x4009e81	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cc6	          0x80fa01	                               cmp dl, 1	      3316	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cc9	            0x7434	                            je 0x4009cff	      3316	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009ccb	       0xf1f440000	                   nop dword [rax + rax]	      3316	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009cd0	    0x48391d000000	            cmp qword [0x04009cd7], rbx 	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009cd7	     0xf8583feffff	                           jne 0x4009b60	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009cdd	    0x48c705000000	               mov qword [0x04009ce8], 0	      3359	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009ce8	      0xe973feffff	                           jmp 0x4009b60	      3359	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009ced	           0xf1f00	                         nop dword [rax]	      3359	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009cf0	        0x490fa3c6	                             bt r14, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4009cf4	     0xf8353ffffff	                           jae 0x4009c4d	      1115	string2.h	FUNCTION_223	WHILE_1
0x4009cfa	      0xe96dffffff	                           jmp 0x4009c6c	      1115	string2.h	FUNCTION_223	WHILE_1
0x4009cff	        0xf6414508	               test byte [rcx + 0x45], 8	      3317	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d03	            0x74cb	                            je 0x4009cd0	      3317	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d05	        0x807b4800	                cmp byte [rbx + 0x48], 0	      3318	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d09	            0x79c5	                           jns 0x4009cd0	      3318	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d0b	        0x488b4108	                mov rax, qword [rcx + 8]	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d0f	        0x83780805	                  cmp dword [rax + 8], 5	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d13	            0x75bb	                           jne 0x4009cd0	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d15	    0x488b81f80000	            mov rax, qword [rcx + 0xf8] 	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x4009d1c	    0xf6808c0c0000	          test byte [rax + 0xc8c], 0x40 	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x4009d23	            0x74ab	                            je 0x4009cd0	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x4009d25	         0xfb64349	           movzx eax, byte [rbx + 0x49] 	      3322	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d29	          0x83e0fd	                     and eax, 0xfffffffd	      3322	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d2c	          0x83c810	                            or eax, 0x10	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d2f	          0x884349	               mov byte [rbx + 0x49], al	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d32	    0x660f1f440000	                    nop word [rax + rax]	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d38	          0x83e002	                              and eax, 2	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009d3b	    0x488b2d000000	            mov rbp, qword [0x04009d42] 	      3326	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4009d42	    0x48c704240000	                      mov qword [rsp], 0	      1009	ldlang.c	FUNCTION_30
0x4009d4a	            0x84c0	                             test al, al	      2747	ldlang.c	FUNCTION_66	IF_1
0x4009d4c	      0x4889642408	                mov qword [rsp + 8], rsp	      1010	ldlang.c	FUNCTION_30
0x4009d51	     0xf8579ffffff	                           jne 0x4009cd0	      2747	ldlang.c	FUNCTION_66	IF_1
0x4009d57	          0x4889df	                            mov rdi, rbx	      2750	ldlang.c	FUNCTION_66	CALL_1
0x4009d5a	      0xe800000000	                          call 0x4009d5f	      2750	ldlang.c	FUNCTION_66	CALL_1
0x4009d5f	        0xf6434908	               test byte [rbx + 0x49], 8	      2753	ldlang.c	FUNCTION_66	IF_2
0x4009d63	     0xf848a000000	                            je 0x4009df3	      2753	ldlang.c	FUNCTION_66	IF_2
0x4009d69	      0x48833c2400	                      cmp qword [rsp], 0	      3332	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5
0x4009d6e	     0xf845cffffff	                            je 0x4009cd0	      3332	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5
0x4009d74	    0x48392d000000	            cmp qword [0x04009d7b], rbp 	      3340	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009d7b	     0xf8497000000	                            je 0x4009e18	      3340	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009d81	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009d85	      0xba05000000	                              mov edx, 5	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009d8a	            0x31ff	                            xor edi, edi	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009d8c	      0xbe00000000	                              mov esi, 0	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009d91	      0xe800000000	                          call 0x4009d96	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009d96	          0x4889ee	                            mov rsi, rbp	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009d99	          0x4889c7	                            mov rdi, rax	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009d9c	            0x31c0	                            xor eax, eax	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009d9e	      0xe800000000	                          call 0x4009da3	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4009da3	    0x488b05000000	            mov rax, qword [0x04009daa] 	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009daa	        0x488b1424	                    mov rdx, qword [rsp]	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009dae	    0x48391d000000	            cmp qword [0x04009db5], rbx 	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009db5	        0x488b4008	                mov rax, qword [rax + 8]	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009db9	          0x488910	                    mov qword [rax], rdx	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009dbc	    0x488b05000000	            mov rax, qword [0x04009dc3] 	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009dc3	      0x488b542408	                mov rdx, qword [rsp + 8]	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009dc8	        0x48895008	                mov qword [rax + 8], rdx	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4009dcc	     0xf858efdffff	                           jne 0x4009b60	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009dd2	      0xe906ffffff	                           jmp 0x4009cdd	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009dd7	    0x660f1f840000	                    nop word [rax + rax]	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009de0	    0x48833d000000	               cmp qword [0x04009de8], 0	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009de8	     0xf854affffff	                           jne 0x4009d38	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009dee	      0xe9b2feffff	                           jmp 0x4009ca5	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009df3	          0x4889e6	                            mov rsi, rsp	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009df6	          0x4889df	                            mov rdi, rbx	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009df9	      0xe8f2dfffff	           call sym.load_symbols.part.47	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009dfe	            0x85c0	                           test eax, eax	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4009e00	     0xf8563ffffff	                           jne 0x4009d69	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4009e06	    0xc70500000000	               mov dword [0x04009e10], 0	      3330	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4
0x4009e10	      0xe954ffffff	                           jmp 0x4009d69	      3330	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4
0x4009e15	           0xf1f00	                         nop dword [rax]	      3330	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4
0x4009e18	      0x488b442408	                mov rax, qword [rsp + 8]	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4009e1d	          0x488b13	                    mov rdx, qword [rbx]	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4009e20	    0x48391d000000	            cmp qword [0x04009e27], rbx 	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009e27	          0x488910	                    mov qword [rax], rdx	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4009e2a	        0x488b0424	                    mov rax, qword [rsp]	      3351	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4009e2e	          0x488903	                    mov qword [rbx], rax	      3351	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4009e31	     0xf8529fdffff	                           jne 0x4009b60	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009e37	      0xe9a1feffff	                           jmp 0x4009cdd	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4009e3c	    0x488b2d000000	            mov rbp, qword [0x04009e43] 	      3326	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4009e43	    0x48c704240000	                      mov qword [rsp], 0	      1009	ldlang.c	FUNCTION_30
0x4009e4b	      0x4889642408	                mov qword [rsp + 8], rsp	      1010	ldlang.c	FUNCTION_30
0x4009e50	      0xe902ffffff	                           jmp 0x4009d57	      1010	ldlang.c	FUNCTION_30
0x4009e55	     0xfb605000000	           movzx eax, byte [0x04009e5c] 	       159	ldlang.c	FUNCTION_3	IF_1
0x4009e5c	            0x84c0	                             test al, al	       159	ldlang.c	FUNCTION_3	IF_1
0x4009e5e	            0x7414	                            je 0x4009e74	       159	ldlang.c	FUNCTION_3	IF_1
0x4009e60	           0xfbef0	                           movsx esi, al	       162	ldlang.c	FUNCTION_3
0x4009e63	          0x4889ef	                            mov rdi, rbp	       162	ldlang.c	FUNCTION_3
0x4009e66	      0xe800000000	                          call 0x4009e6b	       162	ldlang.c	FUNCTION_3
0x4009e6b	          0x4885c0	                           test rax, rax	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x4009e6e	     0xf85f8fdffff	                           jne 0x4009c6c	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x4009e74	          0x4889ef	                            mov rdi, rbp	      3270	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_4
0x4009e77	      0xe8e4e4ffff	                    call sym.lookup_name	      3270	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_4
0x4009e7c	      0xe9ebfdffff	                           jmp 0x4009c6c	      3270	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_4
0x4009e81	            0xa801	                              test al, 1	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009e83	     0xf849cfeffff	                            je 0x4009d25	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009e89	      0xe942feffff	                           jmp 0x4009cd0	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4009e8e	      0xe800000000	                          call 0x4009e93	      3374	ldlang.c	FUNCTION_78
lang_for_each_file	IF,0:ELSE,0:SWITCH,0:functions,1:CALL,0:DO,0:FOR,0:WHILE,0	17
0x4007d20	              0x55	                                push rbp	      6627	ldlang.c	FUNCTION_142
0x4007d21	              0x53	                                push rbx	      6627	ldlang.c	FUNCTION_142
0x4007d22	        0x4883ec08	                              sub rsp, 8	      6627	ldlang.c	FUNCTION_142
0x4007d26	    0x488b1d000000	            mov rbx, qword [0x04007d2d] 	      6628	ldlang.c	FUNCTION_142
0x4007d2d	          0x4885db	                           test rbx, rbx	      6628	ldlang.c	FUNCTION_142
0x4007d30	            0x7414	                            je 0x4007d46	      6628	ldlang.c	FUNCTION_142
0x4007d32	          0x4889fd	                            mov rbp, rdi	      6628	ldlang.c	FUNCTION_142
0x4007d35	           0xf1f00	                         nop dword [rax]	      6628	ldlang.c	FUNCTION_142
0x4007d38	          0x4889df	                            mov rdi, rbx	      6630	ldlang.c	FUNCTION_142	FUNCTION_1	CALL_1
0x4007d3b	            0xffd5	                                call rbp	      6630	ldlang.c	FUNCTION_142	FUNCTION_1	CALL_1
0x4007d3d	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      6628	ldlang.c	FUNCTION_142
0x4007d41	          0x4885db	                           test rbx, rbx	      6628	ldlang.c	FUNCTION_142
0x4007d44	            0x75f2	                           jne 0x4007d38	      6628	ldlang.c	FUNCTION_142
0x4007d46	        0x4883c408	                              add rsp, 8	      6632	ldlang.c	FUNCTION_142
0x4007d4a	              0x5b	                                 pop rbx	      6632	ldlang.c	FUNCTION_142
0x4007d4b	              0x5d	                                 pop rbp	      6632	ldlang.c	FUNCTION_142
0x4007d4c	              0xc3	                                     ret	      6632	ldlang.c	FUNCTION_142
section_iterator_callback	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	9
0x4000040	        0x48833a00	                      cmp qword [rdx], 0	       333	ldlang.c	FUNCTION_9	IF_1
0x4000044	            0x7412	                            je 0x4000058	       333	ldlang.c	FUNCTION_9	IF_1
0x4000046	    0xc74208010000	                  mov dword [rdx + 8], 1	       335	ldlang.c	FUNCTION_9	IF_1
0x400004d	      0xb801000000	                              mov eax, 1	       336	ldlang.c	FUNCTION_9	IF_1
0x4000052	              0xc3	                                     ret	       336	ldlang.c	FUNCTION_9	IF_1
0x4000053	       0xf1f440000	                   nop dword [rax + rax]	       336	ldlang.c	FUNCTION_9	IF_1
0x4000058	          0x488932	                    mov qword [rdx], rsi	       339	ldlang.c	FUNCTION_9
0x400005b	            0x31c0	                            xor eax, eax	       340	ldlang.c	FUNCTION_9
0x400005d	              0xc3	                                     ret	       341	ldlang.c	FUNCTION_9
lang_size_sections_1	IF,49:ELSE,12:SWITCH,2:functions,0:CALL,43:DO,0:FOR,1:WHILE,0	887
0x4004270	            0x4157	                                push r15	      5011	ldlang.c	FUNCTION_115
0x4004272	            0x4156	                                push r14	      5011	ldlang.c	FUNCTION_115
0x4004274	            0x4155	                                push r13	      5011	ldlang.c	FUNCTION_115
0x4004276	            0x4154	                                push r12	      5011	ldlang.c	FUNCTION_115
0x4004278	              0x55	                                push rbp	      5011	ldlang.c	FUNCTION_115
0x4004279	              0x53	                                push rbx	      5011	ldlang.c	FUNCTION_115
0x400427a	        0x4883ec48	                           sub rsp, 0x48	      5011	ldlang.c	FUNCTION_115
0x400427e	          0x488b1f	                    mov rbx, qword [rdi]	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4004281	    0x64488b042528	                mov rax, qword fs:[0x28]	      5011	ldlang.c	FUNCTION_115
0x400428a	      0x4889442438	             mov qword [rsp + 0x38], rax	      5011	ldlang.c	FUNCTION_115
0x400428f	            0x31c0	                            xor eax, eax	      5011	ldlang.c	FUNCTION_115
0x4004291	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      5011	ldlang.c	FUNCTION_115
0x4004296	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      5011	ldlang.c	FUNCTION_115
0x400429b	          0x4885db	                           test rbx, rbx	      5015	ldlang.c	FUNCTION_115	FOR_1
0x400429e	     0xf842b010000	                            je 0x40043cf	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40042a4	          0x4989fe	                            mov r14, rdi	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40042a7	          0x4989d4	                            mov r12, rdx	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40042aa	          0x4c89c5	                             mov rbp, r8	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40042ad	          0x4989f7	                            mov r15, rsi	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x40042b0	        0x837b080f	                cmp dword [rbx + 8], 0xf	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042b4	     0xf872e070000	                            ja 0x40049e8	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042ba	          0x8b4308	                mov eax, dword [rbx + 8]	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042bd	    0xff24c5000000	                       jmp qword [rax*8]	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042c4	         0xf1f4000	                         nop dword [rax]	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042c8	          0x4885ed	                           test rbp, rbp	      5430	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42
0x40042cb	          0x4889d8	                            mov rax, rbx	      5430	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42
0x40042ce	            0x7439	                            je 0x4004309	      5430	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42
0x40042d0	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      5429	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042d4	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x40042d9	      0xba00000000	                              mov edx, 0	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x40042de	    0x488bbef00000	            mov rdi, qword [rsi + 0xf0] 	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x40042e5	        0x488b4708	                mov rax, qword [rdi + 8]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x40042e9	    0xff90b0020000	                call qword [rax + 0x2b0]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x40042ef	            0x85c0	                           test eax, eax	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x40042f1	     0xf8419080000	                            je 0x4004b10	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x40042f7	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      5436	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x40042fb	            0x85c0	                           test eax, eax	      5436	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x40042fd	            0x7407	                            je 0x4004306	      5436	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x40042ff	    0xc74500010000	                      mov dword [rbp], 1	      5437	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x4004306	          0x498b06	                    mov rax, qword [r14]	      5437	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x4004309	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      4691	ldlang.c	FUNCTION_109
0x400430d	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      5439	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_37
0x4004312	        0x4d8b4f38	              mov r9, qword [r15 + 0x38]	      4692	ldlang.c	FUNCTION_109
0x4004316	      0x410fb74524	           movzx eax, word [r13 + 0x24] 	      4694	ldlang.c	FUNCTION_109	IF_1
0x400431b	        0x66258003	                           and ax, 0x380	      4694	ldlang.c	FUNCTION_109	IF_1
0x400431f	        0x663d0002	                           cmp ax, 0x200	      4694	ldlang.c	FUNCTION_109	IF_1
0x4004323	     0xf841f080000	                            je 0x4004b48	      4694	ldlang.c	FUNCTION_109	IF_1
0x4004329	      0x41f6452180	           test byte [r13 + 0x21], 0x80 	      4696	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x400432e	     0xf859c060000	                           jne 0x40049d0	      4696	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004334	    0x41f687900000	               test byte [r15 + 0x90], 8	      4697	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x400433c	     0xf858e060000	                           jne 0x40049d0	      4697	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004342	        0x418b4f7c	            mov ecx, dword [r15 + 0x7c] 	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x4004346	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x4004349	     0xf84040a0000	                            je 0x4004d53	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x400434f	        0x41894d70	             mov dword [r13 + 0x70], ecx	      4709	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x4004353	        0x41394970	              cmp dword [r9 + 0x70], ecx	      4711	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x4004357	            0x7308	                           jae 0x4004361	      4711	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x4004359	        0x41894970	              mov dword [r9 + 0x70], ecx	      4712	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x400435d	        0x418b4d70	            mov ecx, dword [r13 + 0x70] 	      4712	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x4004361	      0xba01000000	                              mov edx, 1	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4004366	          0x48d3e2	                             shl rdx, cl	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4004369	      0x498d4410ff	                 lea rax, [r8 + rdx - 1]	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x400436e	          0x48f7da	                                 neg rdx	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4004371	          0x4821d0	                            and rax, rdx	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4004374	          0x4889c2	                            mov rdx, rax	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4004377	          0x4c29c2	                             sub rdx, r8	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x400437a	     0xf85a0090000	                           jne 0x4004d20	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4004380	        0x498b5128	              mov rdx, qword [r9 + 0x28]	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4004384	          0x4c89c0	                             mov rax, r8	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4004387	    0x8b0d00000000	            mov ecx, dword [0x0400438d] 	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x400438d	          0x4829d0	                            sub rax, rdx	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4004390	        0x49894560	             mov qword [r13 + 0x60], rax	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4004394	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x4004398	          0x48d3e8	                             shr rax, cl	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x400439b	          0x4901c0	                             add r8, rax	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x400439e	      0x41f6412108	                test byte [r9 + 0x21], 8	      4727	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x40043a3	            0x750d	                           jne 0x40043b2	      4727	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x40043a5	          0x4c89c0	                             mov rax, r8	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x40043a8	          0x4829d0	                            sub rax, rdx	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x40043ab	          0x48d3e0	                             shl rax, cl	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x40043ae	        0x49894138	              mov qword [r9 + 0x38], rax	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x40043b2	      0x4c89442428	              mov qword [rsp + 0x28], r8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40043b7	    0x660f1f840000	                    nop word [rax + rax]	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40043c0	          0x4989de	                            mov r14, rbx	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40043c3	          0x488b1b	                    mov rbx, qword [rbx]	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40043c6	          0x4885db	                           test rbx, rbx	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40043c9	     0xf85e1feffff	                           jne 0x40042b0	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40043cf	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      5548	ldlang.c	FUNCTION_115
0x40043d4	    0x644833342528	                xor rsi, qword fs:[0x28]	      5548	ldlang.c	FUNCTION_115
0x40043dd	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5548	ldlang.c	FUNCTION_115
0x40043e2	     0xf85660d0000	                           jne 0x400514e	      5548	ldlang.c	FUNCTION_115
0x40043e8	        0x4883c448	                           add rsp, 0x48	      5548	ldlang.c	FUNCTION_115
0x40043ec	              0x5b	                                 pop rbx	      5548	ldlang.c	FUNCTION_115
0x40043ed	              0x5d	                                 pop rbp	      5548	ldlang.c	FUNCTION_115
0x40043ee	            0x415c	                                 pop r12	      5548	ldlang.c	FUNCTION_115
0x40043f0	            0x415d	                                 pop r13	      5548	ldlang.c	FUNCTION_115
0x40043f2	            0x415e	                                 pop r14	      5548	ldlang.c	FUNCTION_115
0x40043f4	            0x415f	                                 pop r15	      5548	ldlang.c	FUNCTION_115
0x40043f6	              0xc3	                                     ret	      5548	ldlang.c	FUNCTION_115
0x40043f7	    0x660f1f840000	                    nop word [rax + rax]	      5548	ldlang.c	FUNCTION_115
0x4004400	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      5398	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004404	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004409	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5401	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_33
0x400440d	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004411	        0x48894348	             mov qword [rbx + 0x48], rax	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004415	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5400	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004419	        0x48894340	             mov qword [rbx + 0x40], rax	      5399	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400441d	      0xe800000000	                          call 0x4004422	      5401	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_33
0x4004422	    0x8b0d00000000	            mov ecx, dword [0x04004428] 	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004428	            0xd3f8	                             sar eax, cl	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400442a	            0x4898	                                    cdqe	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400442c	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4004430	      0x4803442428	             add rax, qword [rsp + 0x28]	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004435	        0xf6422108	               test byte [rdx + 0x21], 8	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4004439	      0x4889442428	             mov qword [rsp + 0x28], rax	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400443e	            0x7580	                           jne 0x40043c0	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4004440	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4004444	          0x4989de	                            mov r14, rbx	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4004447	          0x48d3e0	                             shl rax, cl	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x400444a	        0x48894238	             mov qword [rdx + 0x38], rax	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x400444e	      0xe970ffffff	                           jmp 0x40043c3	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4004453	       0xf1f440000	                   nop dword [rax + rax]	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4004458	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      5356	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400445c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004461	      0xbe00000000	                              mov esi, 0	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4004466	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x400446a	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400446e	      0x488d542428	                   lea rdx, [rsp + 0x28]	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4004473	        0x48894330	             mov qword [rbx + 0x30], rax	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004477	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5358	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400447b	        0x48894328	             mov qword [rbx + 0x28], rax	      5357	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400447f	      0xe800000000	                          call 0x4004484	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4004484	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004487	      0x2d1a010000	                          sub eax, 0x11a	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x400448c	          0x83f804	                              cmp eax, 4	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x400448f	     0xf879b060000	                            ja 0x4004b30	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004495	    0xff24c5000000	                       jmp qword [rax*8]	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x400449c	         0xf1f4000	                         nop dword [rax]	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x40044a0	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5449	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044a4	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      5451	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044a8	          0x4989de	                            mov r14, rbx	      5452	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044ab	        0x48894320	             mov qword [rbx + 0x20], rax	      5448	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044af	      0xe90fffffff	                           jmp 0x40043c3	      5452	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044b4	         0xf1f4000	                         nop dword [rax]	      5452	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044b8	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5417	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044bc	          0x4989de	                            mov r14, rbx	      5419	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044bf	    0x488905000000	            mov qword [0x040044c6], rax 	      5417	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044c6	      0xe9f8feffff	                           jmp 0x40043c3	      5419	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044cb	       0xf1f440000	                   nop dword [rax + rax]	      5419	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044d0	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x40044d4	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40044d9	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40044de	          0x4989e8	                             mov r8, rbp	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40044e1	          0x4c89e2	                            mov rdx, r12	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40044e4	          0x4c89fe	                            mov rsi, r15	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40044e7	          0x4989de	                            mov r14, rbx	      5532	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044ea	      0xe881fdffff	           call sym.lang_size_sections_1	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40044ef	      0x4889442428	             mov qword [rsp + 0x28], rax	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40044f4	      0xe9cafeffff	                           jmp 0x40043c3	      5532	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40044f9	     0xf1f80000000	                         nop dword [rax]	      5532	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004500	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4004504	            0xebce	                           jmp 0x40044d4	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4004506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4004510	    0x83bb84000000	cmp dword [rbx + 0x84], 0xffffffffffffffff	      5027	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_1
0x4004517	          0x4989de	                            mov r14, rbx	      5027	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_1
0x400451a	     0xf84a3feffff	                            je 0x40043c3	      5027	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_1
0x4004520	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4004524	          0x4885ff	                           test rdi, rdi	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4004527	     0xf84ac070000	                            je 0x4004cd9	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x400452d	    0x80a390000000	             and byte [rbx + 0x90], 0xfe	      5040	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x4004534	      0x488d542428	                   lea rdx, [rsp + 0x28]	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x4004539	      0xbe00000000	                              mov esi, 0	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x400453e	      0xe800000000	                          call 0x4004543	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x4004543	    0x448b1d000000	           mov r11d, dword [0x0400454a] 	      5043	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x400454a	          0x4585db	                         test r11d, r11d	      5043	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x400454d	     0xf84ad040000	                            je 0x4004a00	      5043	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x4004553	    0x488b15000000	            mov rdx, qword [0x0400455a] 	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400455a	    0x488b05000000	            mov rax, qword [0x04004561] 	      5045	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x4004561	          0x4885d2	                           test rdx, rdx	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4004564	      0x4889442428	             mov qword [rsp + 0x28], rax	      5045	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x4004569	            0x7409	                            je 0x4004574	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400456b	        0x48034228	             add rax, qword [rdx + 0x28]	      5047	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x400456f	      0x4889442428	             mov qword [rsp + 0x28], rax	      5047	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4004574	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x4004578	          0x4885d2	                           test rdx, rdx	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x400457b	     0xf843ffeffff	                            je 0x40043c0	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x4004581	    0x488b05000000	            mov rax, qword [0x04004588] 	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004588	        0x488b4008	                mov rax, qword [rax + 8]	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400458c	          0x8b4008	                mov eax, dword [rax + 8]	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400458f	          0x83e802	                              sub eax, 2	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004592	          0x83f801	                              cmp eax, 1	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004595	     0xf86c5050000	                           jbe 0x4004b60	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400459b	    0x4881fa000000	                              cmp rdx, 0	      5089	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11
0x40045a2	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40045a7	     0xf84af070000	                            je 0x4004d5c	      5089	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11
0x40045ad	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      5096	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x40045b2	     0xf84c6070000	                            je 0x4004d7e	      5096	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x40045b8	    0x448bb3800000	           mov r14d, dword [rbx + 0x80] 	      5149	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4
0x40045bf	          0x4585f6	                         test r14d, r14d	      5152	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x40045c2	     0xf8e00070000	                           jle 0x4004cc8	      5152	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x40045c8	      0xb801000000	                              mov eax, 1	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x40045cd	          0x4489f1	                           mov ecx, r14d	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x40045d0	          0x48d3e0	                             shl rax, cl	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x40045d3	      0x4d8d5c05ff	                lea r11, [r13 + rax - 1]	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x40045d8	          0x48f7d8	                                 neg rax	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x40045db	          0x4921c3	                            and r11, rax	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x40045de	          0x4c89d8	                            mov rax, r11	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x40045e1	          0x4c29e8	                            sub rax, r13	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x40045e4	      0x4889442410	             mov qword [rsp + 0x10], rax	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x40045e9	            0x745d	                            je 0x4004648	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x40045eb	    0x448b0d000000	            mov r9d, dword [0x040045f2] 	      5159	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x40045f2	          0x4585c9	                           test r9d, r9d	      5159	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x40045f5	     0xf845c060000	                            je 0x4004c57	      5159	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x40045fb	    0x833d00000000	               cmp dword [0x04004602], 1	      5161	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4004602	            0x7444	                            je 0x4004648	      5161	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4004604	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004609	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x400460d	    0x41b805000000	                              mov r8d, 5	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004613	      0xba00000000	                              mov edx, 0	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004618	      0xbe00000000	                              mov esi, 0	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x400461d	            0x31ff	                            xor edi, edi	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x400461f	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004624	      0xe800000000	                          call 0x4004629	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004629	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x400462e	          0x4889c7	                            mov rdi, rax	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004631	          0x4c89ee	                            mov rsi, r13	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004634	            0x31c0	                            xor eax, eax	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004636	      0xe800000000	                          call 0x400463b	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x400463b	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x400463f	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004644	         0xf1f4000	                         nop dword [rax]	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4004648	        0x804a2401	                 or byte [rdx + 0x24], 1	      1688	bfd.h	FUNCTION_258
0x400464c	        0x4c895a30	             mov qword [rdx + 0x30], r11	      1687	bfd.h	FUNCTION_258
0x4004650	        0x4c895a28	             mov qword [rdx + 0x28], r11	      1687	bfd.h	FUNCTION_258
0x4004654	    0x48c742600000	               mov qword [rdx + 0x60], 0	      5172	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2
0x400465c	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4004660	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4004665	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4004669	          0x4989e8	                             mov r8, rbp	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x400466c	          0x4c89d9	                            mov rcx, r11	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x400466f	          0x4889de	                            mov rsi, rbx	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4004672	      0xe8f9fbffff	           call sym.lang_size_sections_1	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4004677	     0xfb683900000	           movzx eax, byte [rbx + 0x90] 	      5178	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400467e	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4004682	          0x83c801	                               or eax, 1	      5178	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004685	    0x4881fa000000	                              cmp rdx, 0	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x400468c	    0x888390000000	               mov byte [rbx + 0x90], al	      5178	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004692	     0xf84f8030000	                            je 0x4004a90	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4004698	            0xa808	                              test al, 8	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x400469a	     0xf85f0030000	                           jne 0x4004a90	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x40046a0	        0xf6422108	               test byte [rdx + 0x21], 8	      5198	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40046a4	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      5189	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x40046a8	      0x4889742428	             mov qword [rsp + 0x28], rsi	      5189	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x40046ad	     0xf843c050000	                            je 0x4004bef	      5198	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40046b3	        0x4c8b6b40	            mov r13, qword [rbx + 0x40] 	      5204	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40046b7	          0x4d85ed	                           test r13, r13	      5205	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_20
0x40046ba	     0xf8444080000	                            je 0x4004f04	      5205	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_20
0x40046c0	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x40046c4	          0x4885ff	                           test rdi, rdi	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x40046c7	     0xf84d3050000	                            je 0x4004ca0	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x40046cd	      0xba00000000	                              mov edx, 0	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x40046d2	            0x31f6	                            xor esi, esi	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x40046d4	      0xe800000000	                          call 0x40046d9	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x40046d9	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x40046dd	        0x48894230	             mov qword [rdx + 0x30], rax	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x40046e1	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x40046e4	            0x89c1	                            mov ecx, eax	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x40046e6	          0x83e101	                              and ecx, 1	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x40046e9	    0x808b90000000	                 or byte [rbx + 0x90], 2	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40046f0	            0x85c9	                           test ecx, ecx	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40046f2	            0x743c	                            je 0x4004730	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40046f4	            0x89c1	                            mov ecx, eax	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40046f6	    0x81e102040000	                          and ecx, 0x402	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40046fc	    0x81f900040000	                          cmp ecx, 0x400	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004702	            0x742c	                            je 0x4004730	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004704	      0x48837a3800	               cmp qword [rdx + 0x38], 0	      5293	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004709	     0xf8521050000	                           jne 0x4004c30	      5293	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x400470f	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004713	          0x4885c9	                           test rcx, rcx	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004716	     0xf8400050000	                            je 0x4004c1c	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x400471c	        0x488b4938	            mov rcx, qword [rcx + 0x38] 	      5298	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004720	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004725	        0x48397128	            cmp qword [rcx + 0x28], rsi 	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004729	     0xf8601050000	                           jbe 0x4004c30	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x400472f	              0x90	                                     nop	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004730	    0x4881fa000000	                              cmp rdx, 0	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4004737	          0x4989de	                            mov r14, rbx	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x400473a	     0xf8483fcffff	                            je 0x40043c3	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4004740	    0xf68390000000	               test byte [rbx + 0x90], 8	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4004747	     0xf8576fcffff	                           jne 0x40043c3	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x400474d	      0x2502040000	                          and eax, 0x402	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4004752	      0x3d00040000	                          cmp eax, 0x400	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4004757	     0xf840a050000	                            je 0x4004c67	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x400475d	        0x4c8b4a38	              mov r9, qword [rdx + 0x38]	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4004761	    0x8b0d00000000	            mov ecx, dword [0x04004767] 	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4004767	          0x49d3e9	                              shr r9, cl	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x400476a	          0x4d89cd	                             mov r13, r9	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x400476d	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x4004771	      0x4c016c2428	            add qword [rsp + 0x28], r13 	      5312	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004776	          0x4885ff	                           test rdi, rdi	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x4004779	            0x740f	                            je 0x400478a	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x400477b	      0x488d542428	                   lea rdx, [rsp + 0x28]	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x4004780	      0xbe00000000	                              mov esi, 0	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x4004785	      0xe800000000	                          call 0x400478a	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x400478a	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x400478e	          0x4885c0	                           test rax, rax	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4004791	     0xf8429fcffff	                            je 0x40043c0	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4004797	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x400479b	          0x4989de	                            mov r14, rbx	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x400479e	        0xf6422003	               test byte [rdx + 0x20], 3	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x40047a2	     0xf841bfcffff	                            je 0x40043c3	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x40047a8	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      5326	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36
0x40047ad	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      5324	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x40047b2	          0x4585c0	                           test r8d, r8d	      5326	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36
0x40047b5	        0x4c897038	             mov qword [rax + 0x38], r14	      5324	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x40047b9	     0xf8587070000	                           jne 0x4004f46	      5326	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36
0x40047bf	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047c3	          0x4885c0	                           test rax, rax	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047c6	     0xf84f4fbffff	                            je 0x40043c0	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047cc	        0x483b4340	            cmp rax, qword [rbx + 0x40] 	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047d0	     0xf84eafbffff	                            je 0x40043c0	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047d6	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047da	        0xf6422002	               test byte [rdx + 0x20], 2	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047de	     0xf840b070000	                            je 0x4004eef	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047e4	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      5335	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047e8	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x40047ec	          0x4989de	                            mov r14, rbx	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x40047ef	      0x4d8d4c0d00	                     lea r9, [r13 + rcx]	      5335	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047f4	            0x85f6	                           test esi, esi	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x40047f6	        0x4c894838	              mov qword [rax + 0x38], r9	      5335	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40047fa	     0xf84c3fbffff	                            je 0x40043c3	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x4004800	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4951	ldlang.c	FUNCTION_113	IF_1
0x4004804	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      4951	ldlang.c	FUNCTION_113	IF_1
0x4004808	          0x4939f9	                             cmp r9, rdi	      4951	ldlang.c	FUNCTION_113	IF_1
0x400480b	            0x7212	                            jb 0x400481f	      4951	ldlang.c	FUNCTION_113	IF_1
0x400480d	          0x4d89c8	                              mov r8, r9	      4952	ldlang.c	FUNCTION_113	IF_1
0x4004810	          0x4989de	                            mov r14, rbx	      4952	ldlang.c	FUNCTION_113	IF_1
0x4004813	          0x4929f8	                             sub r8, rdi	      4952	ldlang.c	FUNCTION_113	IF_1
0x4004816	          0x4939f0	                             cmp r8, rsi	      4952	ldlang.c	FUNCTION_113	IF_1
0x4004819	     0xf86a4fbffff	                           jbe 0x40043c3	      4952	ldlang.c	FUNCTION_113	IF_1
0x400481f	          0x4801fe	                            add rsi, rdi	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004822	          0x4c39ce	                             cmp rsi, r9	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004825	            0x750c	                           jne 0x4004833	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004827	          0x4885c9	                           test rcx, rcx	      4954	ldlang.c	FUNCTION_113	IF_1
0x400482a	          0x4989de	                            mov r14, rbx	      4954	ldlang.c	FUNCTION_113	IF_1
0x400482d	     0xf8590fbffff	                           jne 0x40043c3	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004833	          0x8b4850	            mov ecx, dword [rax + 0x50] 	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x4004836	          0x4989de	                            mov r14, rbx	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x4004839	            0x85c9	                           test ecx, ecx	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x400483b	     0xf8582fbffff	                           jne 0x40043c3	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x4004841	          0x488b08	                    mov rcx, qword [rax]	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004844	    0x4c8bb2f00000	            mov r14, qword [rdx + 0xf0] 	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400484b	      0xbe00000000	                              mov esi, 0	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004850	          0x4c8b2a	                    mov r13, qword [rdx]	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004853	            0x31ff	                            xor edi, edi	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004855	      0xba05000000	                              mov edx, 5	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400485a	    0xc74050010000	               mov dword [rax + 0x50], 1	      4967	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x4004861	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004866	      0xe800000000	                          call 0x400486b	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400486b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004870	          0x4c89f6	                            mov rsi, r14	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004873	          0x4889c7	                            mov rdi, rax	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004876	          0x4c89ea	                            mov rdx, r13	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004879	            0x31c0	                            xor eax, eax	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400487b	          0x4989de	                            mov r14, rbx	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400487e	      0xe800000000	                          call 0x4004883	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004883	      0xe93bfbffff	                           jmp 0x40043c3	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004888	     0xf1f84000000	                   nop dword [rax + rax]	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4004890	    0x48c743180000	               mov qword [rbx + 0x18], 0	      5517	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004898	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400489c	          0x4989de	                            mov r14, rbx	      5526	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400489f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048a4	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048a8	        0x48894310	             mov qword [rbx + 0x10], rax	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048ac	      0xe912fbffff	                           jmp 0x40043c3	      5526	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048b1	     0xf1f80000000	                         nop dword [rax]	      5526	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048b8	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x40048bd	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x40048c2	          0x4989e8	                             mov r8, rbp	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x40048c5	          0x4c89e2	                            mov rdx, r12	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x40048c8	          0x4c89fe	                            mov rsi, r15	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x40048cb	      0xbf00000000	                              mov edi, 0	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x40048d0	          0x4989de	                            mov r14, rbx	      5349	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048d3	      0xe898f9ffff	           call sym.lang_size_sections_1	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x40048d8	      0x4889442428	             mov qword [rsp + 0x28], rax	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x40048dd	      0xe9e1faffff	                           jmp 0x40043c3	      5349	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048e2	    0x660f1f440000	                    nop word [rax + rax]	      5349	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048e8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5456	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048ed	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x40048f1	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x40048f6	      0x4889442430	             mov qword [rsp + 0x30], rax	      5456	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048fb	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      5457	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40048ff	    0xc70500000000	               mov dword [0x04004909], 0	      5459	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004909	          0x4c89ef	                            mov rdi, r13	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x400490c	      0xe800000000	                          call 0x4004911	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x4004911	    0x8b0500000000	            mov eax, dword [0x04004917] 	      4981	ldlang.c	FUNCTION_114	IF_1
0x4004917	          0x83f801	                              cmp eax, 1	      4981	ldlang.c	FUNCTION_114	IF_1
0x400491a	     0xf8490010000	                            je 0x4004ab0	      4981	ldlang.c	FUNCTION_114	IF_1
0x4004920	          0x83f802	                              cmp eax, 2	      4990	ldlang.c	FUNCTION_114	ELSE_2	IF_3
0x4004923	     0xf84b7010000	                            je 0x4004ae0	      4990	ldlang.c	FUNCTION_114	ELSE_2	IF_3
0x4004929	    0xc70500000000	               mov dword [0x04004933], 0	      5467	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004933	        0x418b4510	            mov eax, dword [r13 + 0x10] 	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004937	          0x83e0fd	                     and eax, 0xfffffffd	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x400493a	          0x83f804	                              cmp eax, 4	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x400493d	            0x7515	                           jne 0x4004954	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x400493f	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004943	          0x80382e	                    cmp byte [rax], 0x2e	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004946	     0xf8494020000	                            je 0x4004be0	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x400494c	    0x41808f900000	              or byte [r15 + 0x90], 0x10	      5474	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004954	    0x41f687900000	               test byte [r15 + 0x90], 8	      5476	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x400495c	     0xf855efaffff	                           jne 0x40043c0	      5476	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4004962	    0x4c3b3d000000	            cmp r15, qword [0x04004969] 	      5478	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x4004969	     0xf84a7050000	                            je 0x4004f16	      5478	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x400496f	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004974	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004979	          0x4c39c2	                             cmp rdx, r8	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x400497c	     0xf8430faffff	                            je 0x40043b2	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004982	    0x8b0d00000000	            mov ecx, dword [0x04004988] 	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004988	          0x4c29c2	                             sub rdx, r8	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400498b	          0x4889df	                            mov rdi, rbx	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400498e	          0x4c89e6	                            mov rsi, r12	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004991	          0x48d3e2	                             shl rdx, cl	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004994	        0x498b4f38	            mov rcx, qword [r15 + 0x38] 	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004998	      0xe8c3f6ffff	                     call sym.insert_pad	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400499d	    0x418b878c0000	            mov eax, dword [r15 + 0x8c] 	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x40049a4	          0x488b1b	                    mov rbx, qword [rbx]	      5494	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x40049a7	          0x83f803	                              cmp eax, 3	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x40049aa	            0x7411	                            je 0x40049bd	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x40049ac	          0x83f802	                              cmp eax, 2	      5501	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x40049af	     0xf84cc020000	                            je 0x4004c81	      5501	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x40049b5	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5504	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x40049b9	        0x83482001	                or dword [rax + 0x20], 1	      5504	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x40049bd	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      5504	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x40049c2	      0x4c89442428	              mov qword [rsp + 0x28], r8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40049c7	      0xe9f4f9ffff	                           jmp 0x40043c0	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40049cc	         0xf1f4000	                         nop dword [rax]	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40049d0	          0x4c89c0	                             mov rax, r8	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x40049d3	        0x492b4128	              sub rax, qword [r9 + 0x28]	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x40049d7	      0x4c89442428	              mov qword [rsp + 0x28], r8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40049dc	        0x49894560	             mov qword [r13 + 0x60], rax	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x40049e0	      0xe9dbf9ffff	                           jmp 0x40043c0	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x40049e5	           0xf1f00	                         nop dword [rax]	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x40049e8	      0xbea6150000	                         mov esi, 0x15a6	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x40049ed	      0xbf00000000	                              mov edi, 0	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x40049f2	          0x4989de	                            mov r14, rbx	      5543	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40049f5	      0xe800000000	                          call 0x40049fa	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x40049fa	      0xe9c4f9ffff	                           jmp 0x40043c3	      5543	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40049ff	              0x90	                                     nop	      5543	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004a00	    0x833d00000000	               cmp dword [0x04004a07], 1	      5049	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6
0x4004a07	     0xf8467fbffff	                            je 0x4004574	      5049	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6
0x4004a0d	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a11	        0x4c8b7358	            mov r14, qword [rbx + 0x58] 	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a15	            0x31ff	                            xor edi, edi	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a17	      0xba05000000	                              mov edx, 5	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a1c	      0xbe00000000	                              mov esi, 0	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a21	      0xe800000000	                          call 0x4004a26	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a26	          0x4c89ea	                            mov rdx, r13	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a29	          0x4889c7	                            mov rdi, rax	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a2c	          0x4c89f6	                            mov rsi, r14	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a2f	            0x31c0	                            xor eax, eax	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a31	      0xe800000000	                          call 0x4004a36	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a36	      0xe939fbffff	                           jmp 0x4004574	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a3b	       0xf1f440000	                   nop dword [rax + rax]	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4004a40	      0xb804000000	                              mov eax, 4	      5373	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a45	    0x8b0d00000000	            mov ecx, dword [0x04004a4b] 	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x4004a4b	      0xba01000000	                              mov edx, 1	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x4004a50	            0xd3e2	                             shl edx, cl	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x4004a52	            0x39d0	                            cmp eax, edx	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004a54	           0xf42c2	                          cmovb eax, edx	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004a57	            0xd3e8	                             shr eax, cl	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004a59	      0xe9cef9ffff	                           jmp 0x400442c	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004a5e	            0x6690	                                     nop	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004a60	      0xb808000000	                              mov eax, 8	      5370	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a65	            0xebde	                           jmp 0x4004a45	      5370	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a67	    0x660f1f840000	                    nop word [rax + rax]	      5370	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a70	      0xb801000000	                              mov eax, 1	      5379	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a75	            0xebce	                           jmp 0x4004a45	      5380	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a77	    0x660f1f840000	                    nop word [rax + rax]	      5380	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a80	      0xb802000000	                              mov eax, 2	      5376	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a85	            0xebbe	                           jmp 0x4004a45	      5377	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a87	    0x660f1f840000	                    nop word [rax + rax]	      5377	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004a90	      0x48837a3800	               cmp qword [rdx + 0x38], 0	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004a95	     0xf8418fcffff	                            je 0x40046b3	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004a9b	      0xbe42140000	                         mov esi, 0x1442	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004aa0	      0xbf00000000	                              mov edi, 0	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004aa5	      0xe800000000	                          call 0x4004aaa	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004aaa	      0xe904fcffff	                           jmp 0x40046b3	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004aaf	              0x90	                                     nop	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004ab0	    0x488b05000000	            mov rax, qword [0x04004ab7] 	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004ab7	          0x4885c0	                           test rax, rax	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004aba	     0xf846e040000	                            je 0x4004f2e	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004ac0	          0x4839d8	                            cmp rax, rbx	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004ac3	     0xf8460feffff	                            je 0x4004929	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004ac9	      0xbe7b130000	                         mov esi, 0x137b	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004ace	      0xbf00000000	                              mov edi, 0	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004ad3	      0xe800000000	                          call 0x4004ad8	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004ad8	      0xe94cfeffff	                           jmp 0x4004929	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004add	           0xf1f00	                         nop dword [rax]	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004ae0	    0x488b05000000	            mov rax, qword [0x04004ae7] 	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x4004ae7	          0x4885c0	                           test rax, rax	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x4004aea	     0xf844a040000	                            je 0x4004f3a	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x4004af0	          0x4839d8	                            cmp rax, rbx	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004af3	     0xf8430feffff	                            je 0x4004929	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004af9	      0xbe84130000	                         mov esi, 0x1384	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004afe	      0xbf00000000	                              mov edi, 0	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004b03	      0xe800000000	                          call 0x4004b08	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004b08	      0xe91cfeffff	                           jmp 0x4004929	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004b0d	           0xf1f00	                         nop dword [rax]	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004b10	            0x31ff	                            xor edi, edi	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004b12	      0xba05000000	                              mov edx, 5	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004b17	      0xbe00000000	                              mov esi, 0	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004b1c	      0xe800000000	                          call 0x4004b21	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004b21	          0x4889c7	                            mov rdi, rax	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004b24	            0x31c0	                            xor eax, eax	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004b26	      0xe800000000	                          call 0x4004b2b	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004b2b	      0xe9c7f7ffff	                           jmp 0x40042f7	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004b30	      0xba00000000	                              mov edx, 0	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4004b35	      0xbef7140000	                         mov esi, 0x14f7	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4004b3a	      0xbf00000000	                              mov edi, 0	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4004b3f	      0xe800000000	                          call 0x4004b44	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4004b44	         0xf1f4000	                         nop dword [rax]	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4004b48	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004b4c	        0x492b4128	              sub rax, qword [r9 + 0x28]	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004b50	      0x4c89442428	              mov qword [rsp + 0x28], r8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4004b55	        0x49894560	             mov qword [r13 + 0x60], rax	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004b59	      0xe962f8ffff	                           jmp 0x40043c0	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004b5e	            0x6690	                                     nop	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004b60	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5067	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004b63	      0xa900000004	test eax, obj.lang_output_section_statement 	      5067	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004b68	     0xf842dfaffff	                            je 0x400459b	      5067	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004b6e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004b72	          0x4885c9	                           test rcx, rcx	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004b75	            0x740a	                            je 0x4004b81	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004b77	        0x48833900	                      cmp qword [rcx], 0	      5072	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004b7b	     0xf8408050000	                            je 0x4005089	      5072	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004b81	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004b85	      0xba05000000	                              mov edx, 5	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004b8a	      0xbe00000000	                              mov esi, 0	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004b8f	            0x31ff	                            xor edi, edi	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004b91	      0xe800000000	                          call 0x4004b96	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004b96	          0x4c89ee	                            mov rsi, r13	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004b99	          0x4889c7	                            mov rdi, rax	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004b9c	            0x31c0	                            xor eax, eax	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004b9e	      0xe800000000	                          call 0x4004ba3	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004ba3	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004ba7	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004bab	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004bae	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      5078	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004bb2	          0x4989de	                            mov r14, rbx	      5078	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004bb5	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      5079	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	CALL_8
0x4004bb9	        0x804a2401	                 or byte [rdx + 0x24], 1	      1688	bfd.h	FUNCTION_258
0x4004bbd	          0xf6c408	                              test ah, 8	      5082	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004bc0	        0x48894a30	             mov qword [rdx + 0x30], rcx	      1687	bfd.h	FUNCTION_258
0x4004bc4	        0x48894a28	             mov qword [rdx + 0x28], rcx	      1687	bfd.h	FUNCTION_258
0x4004bc8	     0xf85f5f7ffff	                           jne 0x40043c3	      5082	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004bce	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004bd2	        0x48894238	             mov qword [rdx + 0x38], rax	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004bd6	      0xe9e8f7ffff	                           jmp 0x40043c3	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004bdb	       0xf1f440000	                   nop dword [rax + rax]	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004be0	        0x80780100	                   cmp byte [rax + 1], 0	      5473	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004be4	     0xf846afdffff	                            je 0x4004954	      5473	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004bea	      0xe95dfdffff	                           jmp 0x400494c	      5473	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004bef	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      5195	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4004bf2	    0x8b0d00000000	            mov ecx, dword [0x04004bf8] 	      5194	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4004bf8	        0x4c8b4238	              mov r8, qword [rdx + 0x38]	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004bfc	      0x488d7c06ff	                lea rdi, [rsi + rax - 1]	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c01	          0x49d3e8	                              shr r8, cl	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c04	          0x48f7d8	                                 neg rax	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c07	          0x4c01c7	                             add rdi, r8	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c0a	          0x4821f8	                            and rax, rdi	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c0d	          0x4829f0	                            sub rax, rsi	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c10	          0x48d3e0	                             shl rax, cl	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c13	        0x48894238	             mov qword [rdx + 0x38], rax	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c17	      0xe997faffff	                           jmp 0x40046b3	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4004c1c	        0x488b7230	            mov rsi, qword [rdx + 0x30] 	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004c20	        0x48397228	            cmp qword [rdx + 0x28], rsi 	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004c24	     0xf8406fbffff	                            je 0x4004730	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004c2a	    0x660f1f440000	                    nop word [rax + rax]	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004c30	      0x48837b4800	               cmp qword [rbx + 0x48], 0	      5299	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004c35	     0xf85f5faffff	                           jne 0x4004730	      5299	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004c3b	     0xfb60d000000	           movzx ecx, byte [0x04004c42] 	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x4004c42	          0x83e103	                              and ecx, 3	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x4004c45	          0x80f902	                               cmp cl, 2	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x4004c48	     0xf84e2faffff	                            je 0x4004730	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x4004c4e	        0x49895d40	             mov qword [r13 + 0x40], rbx	      5301	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004c52	      0xe9d9faffff	                           jmp 0x4004730	      5301	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4004c57	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      5160	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4004c5c	     0xf8599f9ffff	                           jne 0x40045fb	      5160	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4004c62	      0xe9e1f9ffff	                           jmp 0x4004648	      5160	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4004c67	     0xfb605000000	           movzx eax, byte [0x04004c6e] 	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4004c6e	          0x4531ed	                          xor r13d, r13d	      5311	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_11
0x4004c71	          0x83e003	                              and eax, 3	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4004c74	            0x3c02	                               cmp al, 2	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4004c76	     0xf85f1faffff	                           jne 0x400476d	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4004c7c	      0xe9dcfaffff	                           jmp 0x400475d	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4004c81	    0x488b05000000	            mov rax, qword [0x04004c88] 	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004c88	        0x488b4008	                mov rax, qword [rax + 8]	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004c8c	        0x83780805	                  cmp dword [rax + 8], 5	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004c90	     0xf8527fdffff	                           jne 0x40049bd	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004c96	      0xe91afdffff	                           jmp 0x40049b5	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004c9b	       0xf1f440000	                   nop dword [rax + rax]	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004ca0	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4004ca4	          0x4885d2	                           test rdx, rdx	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4004ca7	     0xf8421030000	                            je 0x4004fce	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4004cad	    0xf68390000000	           test byte [rbx + 0x90], 0x40 	      5217	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4004cb4	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5215	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4004cb8	     0xf84fd010000	                            je 0x4004ebb	      5217	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4004cbe	      0x4803442410	             add rax, qword [rsp + 0x10]	      5218	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4004cc3	      0xe911faffff	                           jmp 0x40046d9	      5218	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4004cc8	          0x4d89eb	                            mov r11, r13	      5218	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4004ccb	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004cd4	      0xe96ff9ffff	                           jmp 0x4004648	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004cd9	     0xfb605000000	           movzx eax, byte [0x04004ce0] 	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4004ce0	          0x83e003	                              and eax, 3	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4004ce3	            0x3c02	                               cmp al, 2	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4004ce5	     0xf8589f8ffff	                           jne 0x4004574	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4004ceb	    0x488b05000000	            mov rax, qword [0x04004cf2] 	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4004cf2	        0x488b4008	                mov rax, qword [rax + 8]	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4004cf6	        0x83780802	                  cmp dword [rax + 8], 2	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4004cfa	     0xf8574f8ffff	                           jne 0x4004574	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4004d00	      0xe800000000	                          call 0x4004d05	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x4004d05	          0x4885c0	                           test rax, rax	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x4004d08	          0x4889c7	                            mov rdi, rax	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x4004d0b	        0x48894358	             mov qword [rbx + 0x58], rax	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x4004d0f	     0xf845ff8ffff	                            je 0x4004574	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x4004d15	      0xe913f8ffff	                           jmp 0x400452d	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x4004d1a	    0x660f1f440000	                    nop word [rax + rax]	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x4004d20	    0x8b0d00000000	            mov ecx, dword [0x04004d26] 	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x4004d26	          0x4c89e6	                            mov rsi, r12	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x4004d29	          0x4c89f7	                            mov rdi, r14	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x4004d2c	      0x4889442418	             mov qword [rsp + 0x18], rax	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x4004d31	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x4004d36	          0x48d3e2	                             shl rdx, cl	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x4004d39	          0x4c89c9	                             mov rcx, r9	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x4004d3c	      0xe81ff3ffff	                     call sym.insert_pad	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x4004d41	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4004d46	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4004d4b	          0x4989c0	                             mov r8, rax	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4004d4e	      0xe92df6ffff	                           jmp 0x4004380	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4004d53	        0x418b4d70	            mov ecx, dword [r13 + 0x70] 	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4004d57	      0xe9f7f5ffff	                           jmp 0x4004353	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4004d5c	    0x48833d000000	               cmp qword [0x04004d64], 0	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x4004d64	     0xf85f0020000	                           jne 0x400505a	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x4004d6a	          0x4d89eb	                            mov r11, r13	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004d6d	          0x4531f6	                          xor r14d, r14d	      5024	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004d70	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004d79	      0xe9def8ffff	                           jmp 0x400465c	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004d7e	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d82	          0x4885c0	                           test rax, rax	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d85	     0xf84a5030000	                            je 0x4005130	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d8b	        0x448b4220	            mov r8d, dword [rdx + 0x20] 	      5101	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d8f	        0x41f6c003	                             test r8b, 3	      5101	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d93	            0x745a	                            je 0x4004def	      5101	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d95	          0x488b30	                    mov rsi, qword [rax]	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d98	          0x803e2a	                    cmp byte [rsi], 0x2a	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d9b	            0x7552	                           jne 0x4004def	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004d9d	      0xbf00000000	                              mov edi, 0	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004da2	      0xb90a000000	                            mov ecx, 0xa	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004da7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004da9	            0x7544	                           jne 0x4004def	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004dab	          0x4489c1	                            mov ecx, r8d	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004dae	            0x89ce	                            mov esi, ecx	      1398	ldlang.c	FUNCTION_43	IF_1
0x4004db0	            0x89c8	                            mov eax, ecx	      1399	ldlang.c	FUNCTION_43	IF_1
0x4004db2	          0x83e619	                           and esi, 0x19	      1398	ldlang.c	FUNCTION_43	IF_1
0x4004db5	          0x83c820	                            or eax, 0x20	      1399	ldlang.c	FUNCTION_43	IF_1
0x4004db8	          0x83fe01	                              cmp esi, 1	      1399	ldlang.c	FUNCTION_43	IF_1
0x4004dbb	           0xf44c8	                          cmove ecx, eax	      1399	ldlang.c	FUNCTION_43	IF_1
0x4004dbe	    0x488b05000000	            mov rax, qword [0x04004dc5] 	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004dc5	          0x4885c0	                           test rax, rax	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004dc8	            0x7413	                            je 0x4004ddd	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004dca	          0x854848	           test dword [rax + 0x48], ecx 	      1403	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x4004dcd	            0x7405	                            je 0x4004dd4	      1403	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x4004dcf	          0x85484c	           test dword [rax + 0x4c], ecx 	      1404	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x4004dd2	            0x7417	                            je 0x4004deb	      1404	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x4004dd4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004dd8	          0x4885c0	                           test rax, rax	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004ddb	            0x75ed	                           jne 0x4004dca	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004ddd	      0xbf00000000	                              mov edi, 0	      1409	ldlang.c	FUNCTION_43	CALL_1
0x4004de2	      0xe829f4ffff	call sym.lang_memory_region_lookup.constprop.61	      1409	ldlang.c	FUNCTION_43	CALL_1
0x4004de7	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1409	ldlang.c	FUNCTION_43	CALL_1
0x4004deb	        0x48894340	             mov qword [rbx + 0x40], rax	      5106	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13	CALL_10
0x4004def	    0xf68390000000	               test byte [rbx + 0x90], 8	      5112	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004df6	     0xf85b2000000	                           jne 0x4004eae	      5112	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004dfc	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004dff	          0xf6c101	                              test cl, 1	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e02	     0xf84a6000000	                            je 0x4004eae	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e08	    0x81e102040000	                          and ecx, 0x402	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e0e	    0x81f900040000	                          cmp ecx, 0x400	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e14	     0xf8494000000	                            je 0x4004eae	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e1a	     0xfb60d000000	           movzx ecx, byte [0x04004e21] 	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e21	          0x83e103	                              and ecx, 3	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e24	          0x80f902	                               cmp cl, 2	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e27	     0xf8481000000	                            je 0x4004eae	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e2d	      0x448b54240c	            mov r10d, dword [rsp + 0xc] 	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e32	          0x4585d2	                         test r10d, r10d	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e35	            0x7477	                            je 0x4004eae	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e37	          0x488b30	                    mov rsi, qword [rax]	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e3a	    0x41b900000000	                              mov r9d, 0	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e40	      0xb90a000000	                            mov ecx, 0xa	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e45	          0x4c89cf	                             mov rdi, r9	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e48	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e4a	            0x7562	                           jne 0x4004eae	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e4c	    0x4c8b05000000	              mov r8, qword [0x04004e53]	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e53	          0x4d85c0	                             test r8, r8	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e56	            0x7456	                            je 0x4004eae	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e58	          0x498b30	                     mov rsi, qword [r8]	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e5b	      0xb90a000000	                            mov ecx, 0xa	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e60	          0x4c89cf	                             mov rdi, r9	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e63	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e65	            0x7507	                           jne 0x4004e6e	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e67	      0x4983781000	                cmp qword [r8 + 0x10], 0	      5121	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e6c	            0x7440	                            je 0x4004eae	      5121	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e6e	    0x833d00000000	               cmp dword [0x04004e75], 1	      5122	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e75	            0x7437	                            je 0x4004eae	      5122	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004e77	    0x803d00000000	                cmp byte [0x04004e7e], 0	      5133	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15
0x4004e7e	          0x4c8b2a	                    mov r13, qword [rdx]	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4004e81	      0xbe00000000	                              mov esi, 0	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4004e86	      0xba05000000	                              mov edx, 5	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4004e8b	            0x7505	                           jne 0x4004e92	      5133	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15
0x4004e8d	      0xbe00000000	                              mov esi, 0	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004e92	            0x31ff	                            xor edi, edi	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004e94	      0xe800000000	                          call 0x4004e99	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004e99	          0x4c89ee	                            mov rsi, r13	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004e9c	          0x4889c7	                            mov rdi, rax	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004e9f	            0x31c0	                            xor eax, eax	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004ea1	      0xe800000000	                          call 0x4004ea6	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004ea6	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004eaa	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004eae	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      5145	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4004eb2	        0x448b7270	           mov r14d, dword [rdx + 0x70] 	      5146	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4004eb6	      0xe904f7ffff	                           jmp 0x40045bf	      5146	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4004ebb	        0x483b5340	            cmp rdx, qword [rbx + 0x40] 	      5226	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x4004ebf	            0x7407	                            je 0x4004ec8	      5226	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x4004ec1	    0x448bb3800000	           mov r14d, dword [rbx + 0x80] 	      5227	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x4004ec8	          0x4585f6	                         test r14d, r14d	      5228	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004ecb	     0xf8e08f8ffff	                           jle 0x40046d9	      5228	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004ed1	      0xbe01000000	                              mov esi, 1	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004ed6	          0x4489f1	                           mov ecx, r14d	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004ed9	          0x48d3e6	                             shl rsi, cl	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004edc	      0x488d5430ff	                lea rdx, [rax + rsi - 1]	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004ee1	          0x4889f0	                            mov rax, rsi	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004ee4	          0x48f7d8	                                 neg rax	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004ee7	          0x4821d0	                            and rax, rdx	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004eea	      0xe9eaf7ffff	                           jmp 0x40046d9	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004eef	    0xf68390000000	           test byte [rbx + 0x90], 0x40 	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4004ef6	          0x4989de	                            mov r14, rbx	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4004ef9	     0xf84c4f4ffff	                            je 0x40043c3	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4004eff	      0xe9e0f8ffff	                           jmp 0x40047e4	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4004f04	      0xbf00000000	                              mov edi, 0	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x4004f09	      0xe802f3ffff	call sym.lang_memory_region_lookup.constprop.61	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x4004f0e	          0x4989c5	                            mov r13, rax	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x4004f11	      0xe9aaf7ffff	                           jmp 0x40046c0	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x4004f16	      0xbf00000000	                              mov edi, 0	      5482	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47	CALL_40
0x4004f1b	      0xe8f0f2ffff	call sym.lang_memory_region_lookup.constprop.61	      5482	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47	CALL_40
0x4004f20	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x4004f25	        0x4c894038	              mov qword [rax + 0x38], r8	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x4004f29	      0xe984f4ffff	                           jmp 0x40043b2	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x4004f2e	    0x48891d000000	            mov qword [0x04004f35], rbx 	      4984	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004f35	      0xe9eff9ffff	                           jmp 0x4004929	      4984	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004f3a	    0x48891d000000	            mov qword [0x04004f41], rbx 	      4993	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x4004f41	      0xe9e3f9ffff	                           jmp 0x4004929	      4993	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x4004f46	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      4951	ldlang.c	FUNCTION_113	IF_1
0x4004f4a	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      4951	ldlang.c	FUNCTION_113	IF_1
0x4004f4e	          0x4939f6	                            cmp r14, rsi	      4951	ldlang.c	FUNCTION_113	IF_1
0x4004f51	            0x720f	                            jb 0x4004f62	      4951	ldlang.c	FUNCTION_113	IF_1
0x4004f53	          0x4c89f7	                            mov rdi, r14	      4952	ldlang.c	FUNCTION_113	IF_1
0x4004f56	          0x4829f7	                            sub rdi, rsi	      4952	ldlang.c	FUNCTION_113	IF_1
0x4004f59	          0x4839cf	                            cmp rdi, rcx	      4952	ldlang.c	FUNCTION_113	IF_1
0x4004f5c	     0xf865df8ffff	                           jbe 0x40047bf	      4952	ldlang.c	FUNCTION_113	IF_1
0x4004f62	          0x4801f1	                            add rcx, rsi	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004f65	          0x4c39f1	                            cmp rcx, r14	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004f68	            0x750b	                           jne 0x4004f75	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004f6a	      0x48837a2800	               cmp qword [rdx + 0x28], 0	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004f6f	     0xf854af8ffff	                           jne 0x40047bf	      4954	ldlang.c	FUNCTION_113	IF_1
0x4004f75	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      4956	ldlang.c	FUNCTION_113	IF_1	IF_2
0x4004f7a	     0xf845a010000	                            je 0x40050da	      4956	ldlang.c	FUNCTION_113	IF_1	IF_2
0x4004f80	          0x4c8b00	                     mov r8, qword [rax]	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004f83	          0x488b0a	                    mov rcx, qword [rdx]	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004f86	            0x31ff	                            xor edi, edi	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004f88	    0x488b82f00000	            mov rax, qword [rdx + 0xf0] 	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004f8f	      0xbe00000000	                              mov esi, 0	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004f94	      0xba05000000	                              mov edx, 5	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004f99	      0x4c89442420	              mov qword [rsp + 0x20], r8	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004f9e	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fa3	      0x4889442410	             mov qword [rsp + 0x10], rax	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fa8	      0xe800000000	                          call 0x4004fad	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fad	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fb2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fb7	          0x4889c7	                            mov rdi, rax	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fba	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fbf	          0x4c89f6	                            mov rsi, r14	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fc2	            0x31c0	                            xor eax, eax	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fc4	      0xe800000000	                          call 0x4004fc9	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fc9	      0xe9f1f7ffff	                           jmp 0x40047bf	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4004fce	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004fd2	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004fd6	          0x4885c9	                           test rcx, rcx	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004fd9	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004fdc	            0x7472	                            je 0x4005050	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004fde	            0xa801	                              test al, 1	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004fe0	     0xf8497000000	                            je 0x400507d	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004fe6	        0x4c8b4938	              mov r9, qword [rcx + 0x38]	      5239	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004fea	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004fef	        0x4d8b5928	              mov r11, qword [r9 + 0x28]	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004ff3	          0x4939f3	                            cmp r11, rsi	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004ff6	     0xf869c000000	                           jbe 0x4005098	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004ffc	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4005000	          0x4885ff	                           test rdi, rdi	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4005003	     0xf848f000000	                            je 0x4005098	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4005009	    0x8b0d00000000	            mov ecx, dword [0x0400500f] 	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x400500f	          0x48d3ef	                             shr rdi, cl	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4005012	          0x4889f9	                            mov rcx, rdi	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4005015	          0x4801f1	                            add rcx, rsi	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4005018	          0x4939cb	                            cmp r11, rcx	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x400501b	            0x727b	                            jb 0x4005098	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x400501d	        0x4d3b5930	              cmp r11, qword [r9 + 0x30]	      5255	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28
0x4005021	     0xf84a7000000	                            je 0x40050ce	      5255	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28
0x4005027	        0x4c8b7330	            mov r14, qword [rbx + 0x30] 	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400502b	      0xba05000000	                              mov edx, 5	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005030	      0xbe00000000	                              mov esi, 0	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005035	            0x31ff	                            xor edi, edi	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005037	      0xe800000000	                          call 0x400503c	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400503c	          0x4c89f6	                            mov rsi, r14	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400503f	          0x4889c7	                            mov rdi, rax	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005042	            0x31c0	                            xor eax, eax	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005044	      0xe800000000	                          call 0x4005049	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005049	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400504d	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005050	            0x89c1	                            mov ecx, eax	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005052	          0x83e101	                              and ecx, 1	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4005055	      0xe98ff6ffff	                           jmp 0x40046e9	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400505a	      0xbee4130000	                         mov esi, 0x13e4	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x400505f	      0xbf00000000	                              mov edi, 0	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x4005064	          0x4531f6	                          xor r14d, r14d	      5024	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4005067	      0xe800000000	                          call 0x400506c	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x400506c	          0x4d89eb	                            mov r11, r13	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400506f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4005078	      0xe9dff5ffff	                           jmp 0x400465c	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400507d	    0x808b90000000	                 or byte [rbx + 0x90], 2	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4005084	      0xe9a7f6ffff	                           jmp 0x4004730	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4005089	        0x83790805	                  cmp dword [rcx + 8], 5	      5073	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x400508d	     0xf85eefaffff	                           jne 0x4004b81	      5073	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4005093	      0xe916fbffff	                           jmp 0x4004bae	      5073	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4005098	    0x83bb8c000000	               cmp dword [rbx + 0x8c], 1	      5263	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x400509f	     0xf8493000000	                            je 0x4005138	      5263	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x40050a5	        0x49037130	              add rsi, qword [r9 + 0x30]	      5269	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	ELSE_10
0x40050a9	          0x4c29de	                            sub rsi, r11	      5269	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	ELSE_10
0x40050ac	          0x4585f6	                         test r14d, r14d	      5271	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050af	            0x7e19	                           jle 0x40050ca	      5271	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050b1	          0x4489f1	                           mov ecx, r14d	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050b4	      0xbf01000000	                              mov edi, 1	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050b9	          0x48d3e7	                             shl rdi, cl	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050bc	      0x488d4c3eff	                lea rcx, [rsi + rdi - 1]	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050c1	          0x4889fe	                            mov rsi, rdi	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050c4	          0x48f7de	                                 neg rsi	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050c7	          0x4821ce	                            and rsi, rcx	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40050ca	        0x48897230	             mov qword [rdx + 0x30], rsi	      5273	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9
0x40050ce	    0x808b90000000	                 or byte [rbx + 0x90], 2	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40050d5	      0xe91af6ffff	                           jmp 0x40046f4	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40050da	          0x8b7850	            mov edi, dword [rax + 0x50] 	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x40050dd	            0x85ff	                           test edi, edi	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x40050df	     0xf85daf6ffff	                           jne 0x40047bf	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x40050e5	          0x488b08	                    mov rcx, qword [rax]	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40050e8	    0xc74050010000	               mov dword [rax + 0x50], 1	      4967	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x40050ef	            0x31ff	                            xor edi, edi	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40050f1	          0x488b02	                    mov rax, qword [rdx]	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40050f4	    0x4c8bb2f00000	            mov r14, qword [rdx + 0xf0] 	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40050fb	      0xbe00000000	                              mov esi, 0	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005100	      0xba05000000	                              mov edx, 5	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005105	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400510a	      0x4889442410	             mov qword [rsp + 0x10], rax	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400510f	      0xe800000000	                          call 0x4005114	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005114	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005119	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400511e	          0x4889c7	                            mov rdi, rax	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005121	          0x4c89f6	                            mov rsi, r14	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005124	            0x31c0	                            xor eax, eax	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005126	      0xe800000000	                          call 0x400512b	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x400512b	      0xe98ff6ffff	                           jmp 0x40047bf	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005130	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005133	      0xe976fcffff	                           jmp 0x4004dae	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x4005138	    0x8b0d00000000	            mov ecx, dword [0x0400513e] 	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x400513e	        0x498b7138	              mov rsi, qword [r9 + 0x38]	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4005142	          0x48d3ee	                             shr rsi, cl	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4005145	        0x49037130	              add rsi, qword [r9 + 0x30]	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4005149	      0xe95effffff	                           jmp 0x40050ac	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x400514e	      0xe800000000	                          call 0x4005153	      5548	ldlang.c	FUNCTION_115
lang_size_relro_segment	IF,4:ELSE,1:SWITCH,0:functions,0:CALL,4:DO,0:FOR,0:WHILE,0	112
0x400a2a0	    0xf60500000000	           test byte [0x0400a2a7], 0x10 	      5676	ldlang.c	FUNCTION_120	IF_1
0x400a2a7	            0x740c	                            je 0x400a2b5	      5676	ldlang.c	FUNCTION_120	IF_1
0x400a2a9	    0x488b15000000	            mov rdx, qword [0x0400a2b0] 	      5676	ldlang.c	FUNCTION_120	IF_1
0x400a2b0	          0x4885d2	                           test rdx, rdx	      5676	ldlang.c	FUNCTION_120	IF_1
0x400a2b3	            0x755b	                           jne 0x400a310	      5676	ldlang.c	FUNCTION_120	IF_1
0x400a2b5	    0x488b35000000	            mov rsi, qword [0x0400a2bc] 	      5613	ldlang.c	FUNCTION_118
0x400a2bc	    0x488b3d000000	            mov rdi, qword [0x0400a2c3] 	      5613	ldlang.c	FUNCTION_118
0x400a2c3	    0x488b0d000000	            mov rcx, qword [0x0400a2ca] 	      5614	ldlang.c	FUNCTION_118
0x400a2ca	        0x488d46ff	                      lea rax, [rsi - 1]	      5613	ldlang.c	FUNCTION_118
0x400a2ce	          0x4889fa	                            mov rdx, rdi	      5613	ldlang.c	FUNCTION_118
0x400a2d1	          0x48f7da	                                 neg rdx	      5613	ldlang.c	FUNCTION_118
0x400a2d4	          0x4989c0	                             mov r8, rax	      5614	ldlang.c	FUNCTION_118
0x400a2d7	          0x4921c8	                             and r8, rcx	      5614	ldlang.c	FUNCTION_118
0x400a2da	          0x4821d0	                            and rax, rdx	      5615	ldlang.c	FUNCTION_118	IF_1
0x400a2dd	            0x741f	                            je 0x400a2fe	      5615	ldlang.c	FUNCTION_118	IF_1
0x400a2df	          0x4d85c0	                             test r8, r8	      5615	ldlang.c	FUNCTION_118	IF_1
0x400a2e2	            0x741a	                            je 0x400a2fe	      5615	ldlang.c	FUNCTION_118	IF_1
0x400a2e4	          0x4889f2	                            mov rdx, rsi	      5616	ldlang.c	FUNCTION_118	IF_1
0x400a2e7	          0x4831f9	                            xor rcx, rdi	      5616	ldlang.c	FUNCTION_118	IF_1
0x400a2ea	          0x48f7da	                                 neg rdx	      5616	ldlang.c	FUNCTION_118	IF_1
0x400a2ed	          0x4885d1	                           test rcx, rdx	      5616	ldlang.c	FUNCTION_118	IF_1
0x400a2f0	            0x740c	                            je 0x400a2fe	      5616	ldlang.c	FUNCTION_118	IF_1
0x400a2f2	          0x4c01c0	                             add rax, r8	      5618	ldlang.c	FUNCTION_118	IF_1
0x400a2f5	          0x4839c6	                            cmp rsi, rax	      5618	ldlang.c	FUNCTION_118	IF_1
0x400a2f8	     0xf833a010000	                           jae 0x400a438	      5618	ldlang.c	FUNCTION_118	IF_1
0x400a2fe	    0xc70500000000	               mov dword [0x0400a308], 6	      5624	ldlang.c	FUNCTION_118
0x400a308	            0x31c0	                            xor eax, eax	      5672	ldlang.c	FUNCTION_120
0x400a30a	              0xc3	                                     ret	      5672	ldlang.c	FUNCTION_120
0x400a30b	       0xf1f440000	                   nop dword [rax + rax]	      5672	ldlang.c	FUNCTION_120
0x400a310	    0x488b05000000	            mov rax, qword [0x0400a317] 	      5635	ldlang.c	FUNCTION_119
0x400a317	            0x4156	                                push r14	      5671	ldlang.c	FUNCTION_120
0x400a319	            0x4155	                                push r13	      5671	ldlang.c	FUNCTION_120
0x400a31b	            0x4154	                                push r12	      5671	ldlang.c	FUNCTION_120
0x400a31d	              0x55	                                push rbp	      5671	ldlang.c	FUNCTION_120
0x400a31e	              0x53	                                push rbx	      5671	ldlang.c	FUNCTION_120
0x400a31f	      0x488d5c02ff	                lea rbx, [rdx + rax - 1]	      5635	ldlang.c	FUNCTION_119
0x400a324	          0x48f7d8	                                 neg rax	      5635	ldlang.c	FUNCTION_119
0x400a327	    0x488b0d000000	            mov rcx, qword [0x0400a32e] 	      5639	ldlang.c	FUNCTION_119
0x400a32e	    0x488b2d000000	            mov rbp, qword [0x0400a335] 	      5679	ldlang.c	FUNCTION_120	IF_1
0x400a335	          0x4821c3	                            and rbx, rax	      5635	ldlang.c	FUNCTION_119
0x400a338	    0x488b05000000	            mov rax, qword [0x0400a33f] 	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400a33f	          0x4989de	                            mov r14, rbx	      5639	ldlang.c	FUNCTION_119
0x400a342	          0x4929ce	                            sub r14, rcx	      5639	ldlang.c	FUNCTION_119
0x400a345	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400a34c	          0x4885c0	                           test rax, rax	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400a34f	            0x7470	                            je 0x400a3c1	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400a351	    0x448b0d000000	            mov r9d, dword [0x0400a358] 	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a358	          0x4829ca	                            sub rdx, rcx	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a35b	    0x41bb01000000	                             mov r11d, 1	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a361	          0x4989d0	                             mov r8, rdx	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a364	         0xf1f4000	                         nop dword [rax]	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a368	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5643	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a36b	          0xf6c201	                              test dl, 1	      5643	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a36e	            0x7448	                            je 0x400a3b8	      5643	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a370	        0x4c8b5028	            mov r10, qword [rax + 0x28] 	      5644	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a374	          0x4c39d5	                            cmp rbp, r10	      5644	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a377	            0x773f	                            ja 0x400a3b8	      5644	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a379	          0x4d39c2	                             cmp r10, r8	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a37c	            0x733a	                           jae 0x400a3b8	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a37e	    0x81e202040000	                          and edx, 0x402	      5652	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a384	          0x4c89d1	                            mov rcx, r10	      5652	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a387	    0x81fa00040000	                          cmp edx, 0x400	      5652	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a38d	            0x7410	                            je 0x400a39f	      5652	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a38f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a393	          0x4489c9	                            mov ecx, r9d	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a396	          0x48d3ea	                             shr rdx, cl	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a399	          0x4889d1	                            mov rcx, rdx	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a39c	          0x4c01d1	                            add rcx, r10	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x400a39f	          0x4d01f2	                            add r10, r14	      5657	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a3a2	          0x4d89de	                            mov r14, r11	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a3a5	          0x4929ca	                            sub r10, rcx	      5657	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a3a8	          0x8b4870	            mov ecx, dword [rax + 0x70] 	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a3ab	          0x49d3e6	                             shl r14, cl	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a3ae	          0x49f7de	                                 neg r14	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a3b1	          0x4d21d6	                            and r14, r10	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a3b4	         0xf1f4000	                         nop dword [rax]	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400a3b8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400a3bc	          0x4885c0	                           test rax, rax	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400a3bf	            0x75a7	                           jne 0x400a368	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400a3c1	          0x4c39f5	                            cmp rbp, r14	      5664	ldlang.c	FUNCTION_119	CALL_1
0x400a3c4	          0x4189f5	                           mov r13d, esi	      5664	ldlang.c	FUNCTION_119	CALL_1
0x400a3c7	          0x4989fc	                            mov r12, rdi	      5664	ldlang.c	FUNCTION_119	CALL_1
0x400a3ca	    0xc70500000000	               mov dword [0x0400a3d4], 4	      5663	ldlang.c	FUNCTION_119
0x400a3d4	            0x760f	                           jbe 0x400a3e5	      5664	ldlang.c	FUNCTION_119	CALL_1
0x400a3d6	      0xbe20160000	                         mov esi, 0x1620	      5664	ldlang.c	FUNCTION_119	CALL_1
0x400a3db	      0xbf00000000	                              mov edi, 0	      5664	ldlang.c	FUNCTION_119	CALL_1
0x400a3e0	      0xe800000000	                          call 0x400a3e5	      5664	ldlang.c	FUNCTION_119	CALL_1
0x400a3e5	    0x4c8935000000	            mov qword [0x0400a3ec], r14 	      5665	ldlang.c	FUNCTION_119
0x400a3ec	      0xe800000000	                          call 0x400a3f1	      5690	ldlang.c	FUNCTION_120	IF_2	CALL_2
0x400a3f1	    0x488b35000000	            mov rsi, qword [0x0400a3f8] 	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a3f8	            0x31c9	                            xor ecx, ecx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a3fa	            0x31d2	                            xor edx, edx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a3fc	          0x4589e9	                           mov r9d, r13d	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a3ff	          0x4d89e0	                             mov r8, r12	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a402	      0xbf00000000	                              mov edi, 0	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a407	    0x830500000000	               add dword [0x0400a40e], 1	      5601	ldlang.c	FUNCTION_117
0x400a40e	      0xe85d9effff	           call sym.lang_size_sections_1	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400a413	            0x31c0	                            xor eax, eax	      5672	ldlang.c	FUNCTION_120
0x400a415	    0x48391d000000	            cmp qword [0x0400a41c], rbx 	      5695	ldlang.c	FUNCTION_120	IF_2	IF_3
0x400a41c	            0x760c	                           jbe 0x400a42a	      5695	ldlang.c	FUNCTION_120	IF_2	IF_3
0x400a41e	    0x48892d000000	            mov qword [0x0400a425], rbp 	      5697	ldlang.c	FUNCTION_120	IF_2	IF_3
0x400a425	      0xb801000000	                              mov eax, 1	      5698	ldlang.c	FUNCTION_120	IF_2	IF_3
0x400a42a	              0x5b	                                 pop rbx	      5706	ldlang.c	FUNCTION_120
0x400a42b	              0x5d	                                 pop rbp	      5706	ldlang.c	FUNCTION_120
0x400a42c	            0x415c	                                 pop r12	      5706	ldlang.c	FUNCTION_120
0x400a42e	            0x415d	                                 pop r13	      5706	ldlang.c	FUNCTION_120
0x400a430	            0x415e	                                 pop r14	      5706	ldlang.c	FUNCTION_120
0x400a432	              0xc3	                                     ret	      5706	ldlang.c	FUNCTION_120
0x400a433	       0xf1f440000	                   nop dword [rax + rax]	      5706	ldlang.c	FUNCTION_120
0x400a438	    0xc70500000000	               mov dword [0x0400a442], 5	      5620	ldlang.c	FUNCTION_118	IF_1
0x400a442	      0xb801000000	                              mov eax, 1	      5703	ldlang.c	FUNCTION_120	IF_4
0x400a447	              0xc3	                                     ret	      5706	ldlang.c	FUNCTION_120
lang_add_insert	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	21
0x400b740	            0x4154	                                push r12	      7700	ldlang.c	FUNCTION_181
0x400b742	              0x55	                                push rbp	      7700	ldlang.c	FUNCTION_181
0x400b743	          0x4989fc	                            mov r12, rdi	      7700	ldlang.c	FUNCTION_181
0x400b746	              0x53	                                push rbx	      7700	ldlang.c	FUNCTION_181
0x400b747	    0x488b1d000000	            mov rbx, qword [0x0400b74e] 	      7703	ldlang.c	FUNCTION_181
0x400b74e	      0xbf20000000	                           mov edi, 0x20	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400b753	            0x89f5	                            mov ebp, esi	      7700	ldlang.c	FUNCTION_181
0x400b755	      0xe800000000	                          call 0x400b75a	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400b75a	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400b761	    0xc740080e0000	                mov dword [rax + 8], 0xe	      1040	ldlang.c	FUNCTION_33
0x400b768	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400b76c	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400b76f	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400b773	        0x4c896010	             mov qword [rax + 0x10], r12	      7704	ldlang.c	FUNCTION_181
0x400b777	          0x896818	             mov dword [rax + 0x18], ebp	      7705	ldlang.c	FUNCTION_181
0x400b77a	    0x488b05000000	            mov rax, qword [0x0400b781] 	      7706	ldlang.c	FUNCTION_181
0x400b781	              0x5b	                                 pop rbx	      7707	ldlang.c	FUNCTION_181
0x400b782	              0x5d	                                 pop rbp	      7707	ldlang.c	FUNCTION_181
0x400b783	    0x488905000000	            mov qword [0x0400b78a], rax 	      7706	ldlang.c	FUNCTION_181
0x400b78a	            0x415c	                                 pop r12	      7707	ldlang.c	FUNCTION_181
0x400b78c	              0xc3	                                     ret	      7707	ldlang.c	FUNCTION_181
hash_entry_addr_cmp	IF,2:ELSE,2:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	9
0x4000120	          0x488b16	                    mov rdx, qword [rsi]	      4155	ldlang.c	FUNCTION_94	IF_1
0x4000123	          0x488b0f	                    mov rcx, qword [rdi]	      4155	ldlang.c	FUNCTION_94	IF_1
0x4000126	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      4155	ldlang.c	FUNCTION_94	IF_1
0x400012a	        0x48394130	            cmp qword [rcx + 0x30], rax 	      4155	ldlang.c	FUNCTION_94	IF_1
0x400012e	      0xbaffffffff	                     mov edx, 0xffffffff	      4156	ldlang.c	FUNCTION_94	IF_1
0x4000133	           0xf97c0	                                 seta al	      4156	ldlang.c	FUNCTION_94	IF_1
0x4000136	           0xfb6c0	                           movzx eax, al	      4156	ldlang.c	FUNCTION_94	IF_1
0x4000139	           0xf42c2	                          cmovb eax, edx	      4156	ldlang.c	FUNCTION_94	IF_1
0x400013c	              0xc3	                                     ret	      4161	ldlang.c	FUNCTION_94	ELSE_2
ignore_bfd_errors	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	1
0x40001c0	            0xf3c3	                                     ret	      6260	ldlang.c	FUNCTION_134
lang_leave_overlay	IF,6:ELSE,0:SWITCH,0:functions,0:CALL,6:DO,0:FOR,0:WHILE,1	390
0x400bd10	            0x4157	                                push r15	      8048	ldlang.c	FUNCTION_191
0x400bd12	            0x4156	                                push r14	      8048	ldlang.c	FUNCTION_191
0x400bd14	            0x4155	                                push r13	      8048	ldlang.c	FUNCTION_191
0x400bd16	            0x4154	                                push r12	      8048	ldlang.c	FUNCTION_191
0x400bd18	          0x4989cc	                            mov r12, rcx	      8048	ldlang.c	FUNCTION_191
0x400bd1b	              0x55	                                push rbp	      8048	ldlang.c	FUNCTION_191
0x400bd1c	              0x53	                                push rbx	      8048	ldlang.c	FUNCTION_191
0x400bd1d	        0x4883ec28	                           sub rsp, 0x28	      8048	ldlang.c	FUNCTION_191
0x400bd21	          0x4885ff	                           test rdi, rdi	      8054	ldlang.c	FUNCTION_191	CALL_1
0x400bd24	        0x410f95c6	                              setne r14b	      8054	ldlang.c	FUNCTION_191	CALL_1
0x400bd28	          0x4d85c9	                             test r9, r9	      1310	ldlang.c	FUNCTION_41	IF_1
0x400bd2b	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      8048	ldlang.c	FUNCTION_191
0x400bd30	          0x893424	                    mov dword [rsp], esi	      8048	ldlang.c	FUNCTION_191
0x400bd33	      0x4889542410	             mov qword [rsp + 0x10], rdx	      8048	ldlang.c	FUNCTION_191
0x400bd38	      0x4c89442408	                 mov qword [rsp + 8], r8	      8048	ldlang.c	FUNCTION_191
0x400bd3d	     0xf84bd020000	                            je 0x400c000	      1310	ldlang.c	FUNCTION_41	IF_1
0x400bd43	    0x4c8b2d000000	            mov r13, qword [0x0400bd4a] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd4a	          0x4c89cb	                             mov rbx, r9	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd4d	          0x4d85ed	                           test r13, r13	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd50	            0x7433	                            je 0x400bd85	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd52	          0x4c89ed	                            mov rbp, r13	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd55	          0x4989ef	                            mov r15, rbp	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bd58	     0xf1f84000000	                   nop dword [rax + rax]	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bd60	          0x498b3f	                    mov rdi, qword [r15]	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bd63	          0x4889de	                            mov rsi, rbx	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bd66	      0xe800000000	                          call 0x400bd6b	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bd6b	            0x85c0	                           test eax, eax	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bd6d	     0xf84a5010000	                            je 0x400bf18	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bd73	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bd77	          0x4d85ff	                           test r15, r15	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bd7a	            0x75e4	                           jne 0x400bd60	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bd7c	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd80	          0x4885ed	                           test rbp, rbp	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd83	            0x75d0	                           jne 0x400bd55	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd85	            0x31f6	                            xor esi, esi	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd87	          0x4889df	                            mov rdi, rbx	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd8a	      0xe8a183ffff	call sym.lang_memory_region_lookup.part.38	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bd8f	      0xbf00000000	                              mov edi, 0	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bd94	      0xb90a000000	                            mov ecx, 0xa	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bd99	          0x4c89e6	                            mov rsi, r12	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bd9c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bd9e	          0x4889c5	                            mov rbp, rax	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bda1	           0xf97c2	                                 seta dl	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bda4	           0xf92c0	                                 setb al	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bda7	          0x4889eb	                            mov rbx, rbp	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bdaa	            0x38c2	                              cmp dl, al	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bdac	     0xf855c020000	                           jne 0x400c00e	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bdb2	    0x660f1f440000	                    nop word [rax + rax]	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bdb8	          0x4584f6	                         test r14b, r14b	      7647	ldlang.c	FUNCTION_177	IF_2
0x400bdbb	            0x741d	                            je 0x400bdda	      7647	ldlang.c	FUNCTION_177	IF_2
0x400bdbd	      0xbe00000000	                              mov esi, 0	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400bdc2	            0x31ff	                            xor edi, edi	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400bdc4	      0xba05000000	                              mov edx, 5	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400bdc9	      0xe800000000	                          call 0x400bdce	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400bdce	            0x31f6	                            xor esi, esi	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400bdd0	          0x4889c7	                            mov rdi, rax	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400bdd3	            0x31c0	                            xor eax, eax	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400bdd5	      0xe800000000	                          call 0x400bdda	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400bdda	    0x488b05000000	            mov rax, qword [0x0400bde1] 	      8062	ldlang.c	FUNCTION_191	IF_1
0x400bde1	          0x4885c0	                           test rax, rax	      8062	ldlang.c	FUNCTION_191	IF_1
0x400bde4	     0xf84ec000000	                            je 0x400bed6	      8062	ldlang.c	FUNCTION_191	IF_1
0x400bdea	        0x4c8b6008	                mov r12, qword [rax + 8]	      8064	ldlang.c	FUNCTION_191	IF_1
0x400bdee	    0x488b15000000	            mov rdx, qword [0x0400bdf5] 	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400bdf5	      0xbf2b000000	                           mov edi, 0x2b	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400bdfa	    0x488b35000000	            mov rsi, qword [0x0400be01] 	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400be01	    0x41808c249000	              or byte [r12 + 0x90], 0x10	      8064	ldlang.c	FUNCTION_191	IF_1
0x400be0a	      0xe800000000	                          call 0x400be0f	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400be0f	            0x31d2	                            xor edx, edx	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400be11	          0x4889c6	                            mov rsi, rax	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400be14	      0xbf00000000	                              mov edi, 0	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400be19	      0xe800000000	                          call 0x400be1e	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400be1e	    0x4c8b35000000	            mov r14, qword [0x0400be25] 	      8069	ldlang.c	FUNCTION_191
0x400be25	      0x4989442468	             mov qword [r12 + 0x68], rax	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400be2a	          0x4d85f6	                           test r14, r14	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be2d	     0xf84a3000000	                            je 0x400bed6	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be33	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be39	     0xf84d3020000	                            je 0x400c112	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be3f	          0x8b0424	                    mov eax, dword [rsp]	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be42	            0x85c0	                           test eax, eax	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be44	     0xf85d9010000	                           jne 0x400c023	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be4a	    0x48837c240800	                  cmp qword [rsp + 8], 0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be50	            0x7534	                           jne 0x400be86	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be52	      0xe94c010000	                           jmp 0x400bfa3	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be57	    0x660f1f840000	                    nop word [rax + rax]	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400be60	          0x4d8b26	                    mov r12, qword [r14]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400be63	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400be67	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400be6b	          0x4d85e4	                           test r12, r12	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400be6e	            0x7440	                            je 0x400beb0	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400be70	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400be75	     0xf8465010000	                            je 0x400bfe0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400be7b	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400be7e	      0xe800000000	                          call 0x400be83	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400be83	          0x4d89e6	                            mov r14, r12	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400be86	        0x498b4608	                mov rax, qword [r14 + 8]	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400be8a	      0x4883785000	               cmp qword [rax + 0x50], 0	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400be8f	            0x75cf	                           jne 0x400be60	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400be91	          0x4d8b26	                    mov r12, qword [r14]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400be94	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400be99	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400be9d	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400bea1	          0x4d85e4	                           test r12, r12	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bea4	        0x48895050	             mov qword [rax + 0x50], rdx	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400bea8	            0x75c6	                           jne 0x400be70	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400beaa	    0x660f1f440000	                    nop word [rax + rax]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400beb0	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400beb5	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400beba	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bec4	        0x48895060	             mov qword [rax + 0x60], rdx	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bec8	     0xf8412010000	                            je 0x400bfe0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400bece	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bed1	      0xe800000000	                          call 0x400bed6	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bed6	    0x48c705000000	               mov qword [0x0400bee1], 0	      8110	ldlang.c	FUNCTION_191
0x400bee1	    0x48c705000000	               mov qword [0x0400beec], 0	      8111	ldlang.c	FUNCTION_191
0x400beec	    0x48c705000000	               mov qword [0x0400bef7], 0	      8112	ldlang.c	FUNCTION_191
0x400bef7	    0x48c705000000	               mov qword [0x0400bf02], 0	      8113	ldlang.c	FUNCTION_191
0x400bf02	        0x4883c428	                           add rsp, 0x28	      8114	ldlang.c	FUNCTION_191
0x400bf06	              0x5b	                                 pop rbx	      8114	ldlang.c	FUNCTION_191
0x400bf07	              0x5d	                                 pop rbp	      8114	ldlang.c	FUNCTION_191
0x400bf08	            0x415c	                                 pop r12	      8114	ldlang.c	FUNCTION_191
0x400bf0a	            0x415d	                                 pop r13	      8114	ldlang.c	FUNCTION_191
0x400bf0c	            0x415e	                                 pop r14	      8114	ldlang.c	FUNCTION_191
0x400bf0e	            0x415f	                                 pop r15	      8114	ldlang.c	FUNCTION_191
0x400bf10	              0xc3	                                     ret	      8114	ldlang.c	FUNCTION_191
0x400bf11	     0xf1f80000000	                         nop dword [rax]	      8114	ldlang.c	FUNCTION_191
0x400bf18	      0xbf00000000	                              mov edi, 0	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf1d	      0xb90a000000	                            mov ecx, 0xa	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf22	          0x4c89e6	                            mov rsi, r12	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf25	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf27	          0x4889eb	                            mov rbx, rbp	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf2a	           0xf97c2	                                 seta dl	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf2d	           0xf92c0	                                 setb al	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf30	            0x38c2	                              cmp dl, al	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf32	     0xf8480feffff	                            je 0x400bdb8	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf38	          0x4c89ed	                            mov rbp, r13	      7642	ldlang.c	FUNCTION_177	IF_1
0x400bf3b	          0x4989ed	                            mov r13, rbp	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bf3e	            0x6690	                                     nop	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bf40	        0x498b7d00	                    mov rdi, qword [r13]	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bf44	          0x4c89e6	                            mov rsi, r12	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bf47	      0xe800000000	                          call 0x400bf4c	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bf4c	            0x85c0	                           test eax, eax	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bf4e	     0xf8464feffff	                            je 0x400bdb8	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x400bf54	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bf58	          0x4d85ed	                           test r13, r13	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bf5b	            0x75e3	                           jne 0x400bf40	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400bf5d	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bf61	          0x4885ed	                           test rbp, rbp	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bf64	            0x75d5	                           jne 0x400bf3b	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bf66	            0x31f6	                            xor esi, esi	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bf68	          0x4c89e7	                            mov rdi, r12	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bf6b	      0xe8c081ffff	call sym.lang_memory_region_lookup.part.38	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bf70	          0x4889c5	                            mov rbp, rax	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bf73	      0xe940feffff	                           jmp 0x400bdb8	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400bf78	          0x4d8b26	                    mov r12, qword [r14]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bf7b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400bf80	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400bf84	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400bf88	          0x4d85e4	                           test r12, r12	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bf8b	        0x48894850	             mov qword [rax + 0x50], rcx	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400bf8f	            0x742d	                            je 0x400bfbe	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bf91	     0xf1f80000000	                         nop dword [rax]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bf98	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bf9b	          0x4d89e6	                            mov r14, r12	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bf9e	      0xe800000000	                          call 0x400bfa3	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bfa3	        0x498b4608	                mov rax, qword [r14 + 8]	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400bfa7	      0x4883785000	               cmp qword [rax + 0x50], 0	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400bfac	            0x74ca	                            je 0x400bf78	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400bfae	          0x4d8b26	                    mov r12, qword [r14]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bfb1	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400bfb5	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400bfb9	          0x4d85e4	                           test r12, r12	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bfbc	            0x75da	                           jne 0x400bf98	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bfbe	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bfc3	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bfc6	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bfd0	        0x48895060	             mov qword [rax + 0x60], rdx	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400bfd4	      0xe800000000	                          call 0x400bfd9	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bfd9	      0xe9f8feffff	                           jmp 0x400bed6	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bfde	            0x6690	                                     nop	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bfe0	      0x488b542408	                mov rdx, qword [rsp + 8]	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400bfe5	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bfe8	        0x48895070	             mov qword [rax + 0x70], rdx	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400bfec	      0xe800000000	                          call 0x400bff1	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400bff1	          0x4d85e4	                           test r12, r12	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400bff4	     0xf8589feffff	                           jne 0x400be83	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400bffa	      0xe9d7feffff	                           jmp 0x400bed6	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400bfff	              0x90	                                     nop	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c000	          0x4885c9	                           test rcx, rcx	      1310	ldlang.c	FUNCTION_41	IF_1
0x400c003	     0xf842e030000	                            je 0x400c337	      1310	ldlang.c	FUNCTION_41	IF_1
0x400c009	          0x4531f6	                          xor r14d, r14d	      1310	ldlang.c	FUNCTION_41	IF_1
0x400c00c	            0x31db	                            xor ebx, ebx	      1311	ldlang.c	FUNCTION_41	IF_1
0x400c00e	    0x4c8b2d000000	            mov r13, qword [0x0400c015] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400c015	          0x4d85ed	                           test r13, r13	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400c018	     0xf851affffff	                           jne 0x400bf38	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400c01e	      0xe943ffffff	                           jmp 0x400bf66	      1313	ldlang.c	FUNCTION_41	FOR_1
0x400c023	          0x4531e4	                          xor r12d, r12d	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c026	    0x48837c240800	                  cmp qword [rsp + 8], 0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c02c	            0x755d	                           jne 0x400c08b	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c02e	      0xe982020000	                           jmp 0x400c2b5	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c033	       0xf1f440000	                   nop dword [rax + rax]	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c038	        0x49833e00	                      cmp qword [r14], 0	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c03c	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400c040	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400c044	            0x746a	                            je 0x400c0b0	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c046	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c04b	     0xf847f000000	                            je 0x400c0d0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c051	      0xbf10000000	                           mov edi, 0x10	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c056	      0xe800000000	                          call 0x400c05b	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c05b	        0x498b4e08	                mov rcx, qword [r14 + 8]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c05f	          0x4d8b3e	                    mov r15, qword [r14]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c062	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c065	          0x4989c5	                            mov r13, rax	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c068	        0x48890424	                    mov qword [rsp], rax	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c06c	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c070	          0x4c8920	                    mov qword [rax], r12	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c073	        0x48894808	                mov qword [rax + 8], rcx	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c077	      0xe800000000	                          call 0x400c07c	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c07c	          0x4d85ff	                           test r15, r15	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c07f	        0x488b0424	                    mov rax, qword [rsp]	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c083	            0x745b	                            je 0x400c0e0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c085	          0x4989c4	                            mov r12, rax	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c088	          0x4d89fe	                            mov r14, r15	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c08b	        0x498b4608	                mov rax, qword [r14 + 8]	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c08f	      0x4883785000	               cmp qword [rax + 0x50], 0	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c094	            0x75a2	                           jne 0x400c038	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c096	        0x49833e00	                      cmp qword [r14], 0	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c09a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c09f	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400c0a3	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400c0a7	        0x48895050	             mov qword [rax + 0x50], rdx	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c0ab	            0x7599	                           jne 0x400c046	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c0ad	           0xf1f00	                         nop dword [rax]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c0b0	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c0b5	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c0ba	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c0c4	        0x48895060	             mov qword [rax + 0x60], rdx	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c0c8	            0x7587	                           jne 0x400c051	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c0ca	    0x660f1f440000	                    nop word [rax + rax]	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c0d0	      0x488b542408	                mov rdx, qword [rsp + 8]	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c0d5	        0x48895070	             mov qword [rax + 0x70], rdx	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c0d9	      0xe973ffffff	                           jmp 0x400c051	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c0de	            0x6690	                                     nop	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c0e0	      0xbf18000000	                           mov edi, 0x18	      7906	ldlang.c	FUNCTION_186	CALL_1
0x400c0e5	      0xe800000000	                          call 0x400c0ea	      7906	ldlang.c	FUNCTION_186	CALL_1
0x400c0ea	    0x488b15000000	            mov rdx, qword [0x0400c0f1] 	      7907	ldlang.c	FUNCTION_186
0x400c0f1	        0x4c896808	                mov qword [rax + 8], r13	      7908	ldlang.c	FUNCTION_186
0x400c0f5	    0xc74010000000	               mov dword [rax + 0x10], 0	      7909	ldlang.c	FUNCTION_186
0x400c0fc	    0x488905000000	            mov qword [0x0400c103], rax 	      7910	ldlang.c	FUNCTION_186
0x400c103	    0x800d00000000	                 or byte [0x0400c10a], 1	      7913	ldlang.c	FUNCTION_186
0x400c10a	          0x488910	                    mov qword [rax], rdx	      7907	ldlang.c	FUNCTION_186
0x400c10d	      0xe9c4fdffff	                           jmp 0x400bed6	      7907	ldlang.c	FUNCTION_186
0x400c112	          0x8b1424	                    mov edx, dword [rsp]	      7907	ldlang.c	FUNCTION_186
0x400c115	            0x85d2	                           test edx, edx	      7907	ldlang.c	FUNCTION_186
0x400c117	     0xf8597000000	                           jne 0x400c1b4	      7907	ldlang.c	FUNCTION_186
0x400c11d	    0x48837c240800	                  cmp qword [rsp + 8], 0	      7907	ldlang.c	FUNCTION_186
0x400c123	            0x751d	                           jne 0x400c142	      7907	ldlang.c	FUNCTION_186
0x400c125	            0xeb74	                           jmp 0x400c19b	      7907	ldlang.c	FUNCTION_186
0x400c127	    0x660f1f840000	                    nop word [rax + rax]	      7907	ldlang.c	FUNCTION_186
0x400c130	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c135	            0x743d	                            je 0x400c174	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c137	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c13a	      0xe800000000	                          call 0x400c13f	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c13f	          0x4d89e6	                            mov r14, r12	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c142	          0x4d8b26	                    mov r12, qword [r14]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c145	        0x498b4608	                mov rax, qword [r14 + 8]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c149	          0x4d85e4	                           test r12, r12	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c14c	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400c150	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400c154	            0x75da	                           jne 0x400c130	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c156	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c15b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c160	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c16a	        0x48895060	             mov qword [rax + 0x60], rdx	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c16e	     0xf855afdffff	                           jne 0x400bece	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c174	      0x488b542408	                mov rdx, qword [rsp + 8]	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c179	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c17c	        0x48895070	             mov qword [rax + 0x70], rdx	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c180	      0xe800000000	                          call 0x400c185	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c185	          0x4d85e4	                           test r12, r12	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c188	            0x75b5	                           jne 0x400c13f	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c18a	      0xe947fdffff	                           jmp 0x400bed6	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c18f	              0x90	                                     nop	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c190	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c193	          0x4d89e6	                            mov r14, r12	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c196	      0xe800000000	                          call 0x400c19b	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c19b	          0x4d8b26	                    mov r12, qword [r14]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c19e	        0x498b4608	                mov rax, qword [r14 + 8]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c1a2	          0x4d85e4	                           test r12, r12	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c1a5	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400c1a9	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400c1ad	            0x75e1	                           jne 0x400c190	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c1af	      0xe90afeffff	                           jmp 0x400bfbe	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c1b4	            0x31c9	                            xor ecx, ecx	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c1b6	    0x48837c240800	                  cmp qword [rsp + 8], 0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c1bc	            0x7558	                           jne 0x400c216	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c1be	      0xe9d0000000	                           jmp 0x400c293	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c1c3	       0xf1f440000	                   nop dword [rax + rax]	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c1c8	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c1cd	     0xf84d4000000	                            je 0x400c2a7	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c1d3	      0xbf10000000	                           mov edi, 0x10	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c1d8	        0x48890c24	                    mov qword [rsp], rcx	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c1dc	      0xe800000000	                          call 0x400c1e1	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c1e1	          0x4989c4	                            mov r12, rax	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c1e4	          0x4989c5	                            mov r13, rax	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c1e7	        0x498b4608	                mov rax, qword [r14 + 8]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c1eb	        0x488b0c24	                    mov rcx, qword [rsp]	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c1ef	          0x4d8b3e	                    mov r15, qword [r14]	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c1f2	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c1f5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c1f9	        0x49890c24	                    mov qword [r12], rcx	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c1fd	      0x4989442408	                mov qword [r12 + 8], rax	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c202	      0xe800000000	                          call 0x400c207	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c207	          0x4d85ff	                           test r15, r15	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c20a	     0xf84d0feffff	                            je 0x400c0e0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c210	          0x4c89e1	                            mov rcx, r12	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c213	          0x4d89fe	                            mov r14, r15	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c216	        0x49833e00	                      cmp qword [r14], 0	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c21a	        0x498b4608	                mov rax, qword [r14 + 8]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c21e	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400c222	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400c226	            0x75a0	                           jne 0x400c1c8	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c228	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c22d	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c237	        0x48895060	             mov qword [rax + 0x60], rdx	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c23b	            0xeb8b	                           jmp 0x400c1c8	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c23d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c242	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c24c	        0x48895060	             mov qword [rax + 0x60], rdx	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c250	      0xbf10000000	                           mov edi, 0x10	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c255	        0x48890c24	                    mov qword [rsp], rcx	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c259	      0xe800000000	                          call 0x400c25e	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c25e	          0x4989c4	                            mov r12, rax	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c261	          0x4989c5	                            mov r13, rax	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c264	        0x498b4608	                mov rax, qword [r14 + 8]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c268	        0x488b0c24	                    mov rcx, qword [rsp]	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c26c	          0x4d8b3e	                    mov r15, qword [r14]	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c26f	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c272	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c276	        0x49890c24	                    mov qword [r12], rcx	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c27a	      0x4989442408	                mov qword [r12 + 8], rax	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c27f	      0xe800000000	                          call 0x400c284	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c284	          0x4d85ff	                           test r15, r15	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c287	     0xf8453feffff	                            je 0x400c0e0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c28d	          0x4c89e1	                            mov rcx, r12	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c290	          0x4d89fe	                            mov r14, r15	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c293	        0x49833e00	                      cmp qword [r14], 0	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c297	        0x498b4608	                mov rax, qword [r14 + 8]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c29b	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400c29f	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400c2a3	            0x75ab	                           jne 0x400c250	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c2a5	            0xeb96	                           jmp 0x400c23d	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c2a7	      0x488b542408	                mov rdx, qword [rsp + 8]	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c2ac	        0x48895070	             mov qword [rax + 0x70], rdx	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c2b0	      0xe91effffff	                           jmp 0x400c1d3	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x400c2b5	    0x48c704240000	                      mov qword [rsp], 0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c2bd	            0xeb4d	                           jmp 0x400c30c	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c2bf	              0x90	                                     nop	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c2c0	        0x49833e00	                      cmp qword [r14], 0	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c2c4	        0x48896840	             mov qword [rax + 0x40], rbp	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400c2c8	        0x48895848	             mov qword [rax + 0x48], rbx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400c2cc	            0x7454	                            je 0x400c322	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c2ce	      0xbf10000000	                           mov edi, 0x10	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c2d3	      0xe800000000	                          call 0x400c2d8	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c2d8	          0x4989c7	                            mov r15, rax	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c2db	          0x4989c5	                            mov r13, rax	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x400c2de	        0x498b4608	                mov rax, qword [r14 + 8]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c2e2	          0x4d8b26	                    mov r12, qword [r14]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c2e5	          0x4c89f7	                            mov rdi, r14	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c2e8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c2ec	        0x49894708	                mov qword [r15 + 8], rax	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c2f0	        0x488b0424	                    mov rax, qword [rsp]	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c2f4	          0x498907	                    mov qword [r15], rax	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x400c2f7	      0xe800000000	                          call 0x400c2fc	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x400c2fc	          0x4d85e4	                           test r12, r12	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c2ff	     0xf84dbfdffff	                            je 0x400c0e0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c305	        0x4c893c24	                    mov qword [rsp], r15	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c309	          0x4d89e6	                            mov r14, r12	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400c30c	        0x498b4608	                mov rax, qword [r14 + 8]	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c310	      0x4883785000	               cmp qword [rax + 0x50], 0	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c315	            0x75a9	                           jne 0x400c2c0	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c317	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c31c	        0x48895050	             mov qword [rax + 0x50], rdx	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c320	            0xeb9e	                           jmp 0x400c2c0	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400c322	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c327	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c331	        0x48894860	             mov qword [rax + 0x60], rcx	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c335	            0xeb97	                           jmp 0x400c2ce	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400c337	            0x31db	                            xor ebx, ebx	      1311	ldlang.c	FUNCTION_41	IF_1
0x400c339	            0x31ed	                            xor ebp, ebp	      1311	ldlang.c	FUNCTION_41	IF_1
0x400c33b	      0xe99afaffff	                           jmp 0x400bdda	      1311	ldlang.c	FUNCTION_41	IF_1
print_input_section	IF,7:ELSE,2:SWITCH,0:functions,0:CALL,12:DO,0:FOR,0:WHILE,2	212
0x4000f40	            0x4157	                                push r15	      4199	ldlang.c	FUNCTION_96
0x4000f42	            0x4156	                                push r14	      4199	ldlang.c	FUNCTION_96
0x4000f44	          0x4189f6	                           mov r14d, esi	      4199	ldlang.c	FUNCTION_96
0x4000f47	            0x4155	                                push r13	      4199	ldlang.c	FUNCTION_96
0x4000f49	            0x4154	                                push r12	      4199	ldlang.c	FUNCTION_96
0x4000f4b	              0x55	                                push rbp	      4199	ldlang.c	FUNCTION_96
0x4000f4c	              0x53	                                push rbx	      4199	ldlang.c	FUNCTION_96
0x4000f4d	          0x4889fd	                            mov rbp, rdi	      4199	ldlang.c	FUNCTION_96
0x4000f50	        0x4883ec18	                           sub rsp, 0x18	      4199	ldlang.c	FUNCTION_96
0x4000f54	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	      4200	ldlang.c	FUNCTION_96
0x4000f58	      0xe873ffffff	                       call sym.init_opb	      4204	ldlang.c	FUNCTION_96	CALL_1
0x4000f5d	      0xe800000000	                          call 0x4000f62	      4206	ldlang.c	FUNCTION_96	CALL_2
0x4000f62	        0x488b7500	                    mov rsi, qword [rbp]	      4207	ldlang.c	FUNCTION_96	CALL_3
0x4000f66	            0x31c0	                            xor eax, eax	      4207	ldlang.c	FUNCTION_96	CALL_3
0x4000f68	      0xbf00000000	                              mov edi, 0	      4207	ldlang.c	FUNCTION_96	CALL_3
0x4000f6d	      0xe800000000	                          call 0x4000f72	      4207	ldlang.c	FUNCTION_96	CALL_3
0x4000f72	        0x488b7d00	                    mov rdi, qword [rbp]	      4209	ldlang.c	FUNCTION_96	CALL_4
0x4000f76	      0xe800000000	                          call 0x4000f7b	      4209	ldlang.c	FUNCTION_96	CALL_4
0x4000f7b	          0x8d5801	                      lea ebx, [rax + 1]	      4209	ldlang.c	FUNCTION_96	CALL_4
0x4000f7e	          0x83fb0e	                            cmp ebx, 0xe	      4210	ldlang.c	FUNCTION_96	IF_1
0x4000f81	     0xf8fd1000000	                            jg 0x4001058	      4210	ldlang.c	FUNCTION_96	IF_1
0x4000f87	    0x660f1f840000	                    nop word [rax + rax]	      4210	ldlang.c	FUNCTION_96	IF_1
0x4000f90	          0x83c301	                              add ebx, 1	      4218	ldlang.c	FUNCTION_96	WHILE_1
0x4000f93	      0xe800000000	                          call 0x4000f98	      4217	ldlang.c	FUNCTION_96	WHILE_1	CALL_6
0x4000f98	          0x83fb10	                           cmp ebx, 0x10	      4215	ldlang.c	FUNCTION_96	WHILE_1
0x4000f9b	            0x75f3	                           jne 0x4000f90	      4215	ldlang.c	FUNCTION_96	WHILE_1
0x4000f9d	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      4221	ldlang.c	FUNCTION_96	IF_2
0x4000fa1	          0x4885c0	                           test rax, rax	      4221	ldlang.c	FUNCTION_96	IF_2
0x4000fa4	            0x7414	                            je 0x4000fba	      4221	ldlang.c	FUNCTION_96	IF_2
0x4000fa6	    0x488b35000000	            mov rsi, qword [0x04000fad] 	      4222	ldlang.c	FUNCTION_96	IF_2
0x4000fad	    0x4839b0f00000	            cmp qword [rax + 0xf0], rsi 	      4222	ldlang.c	FUNCTION_96	IF_2
0x4000fb4	     0xf84f6000000	                            je 0x40010b0	      4222	ldlang.c	FUNCTION_96	IF_2
0x4000fba	    0x4c8b2d000000	            mov r13, qword [0x04000fc1] 	      4226	ldlang.c	FUNCTION_96	ELSE_1
0x4000fc1	          0x4585f6	                         test r14d, r14d	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x4000fc4	      0xb800000000	                              mov eax, 0	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x4000fc9	        0x4c0f44e0	                          cmove r12, rax	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x4000fcd	    0x488b8df00000	            mov rcx, qword [rbp + 0xf0] 	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000fd4	            0x31c0	                            xor eax, eax	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000fd6	          0x4c89e2	                            mov rdx, r12	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000fd9	          0x4c89ee	                            mov rsi, r13	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000fdc	      0xbf00000000	                              mov edi, 0	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000fe1	      0xe800000000	                          call 0x4000fe6	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000fe6	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000fea	          0x4939c4	                            cmp r12, rax	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000fed	            0x743d	                            je 0x400102c	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000fef	          0x4885c0	                           test rax, rax	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000ff2	            0x7438	                            je 0x400102c	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000ff4	      0xbb23000000	                           mov ebx, 0x23	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000ff9	     0xf1f80000000	                         nop dword [rax]	      4233	ldlang.c	FUNCTION_96	IF_4
0x4001000	      0xe800000000	                          call 0x4001005	      4243	ldlang.c	FUNCTION_96	IF_4	WHILE_2	CALL_8
0x4001005	          0x83eb01	                              sub ebx, 1	      4241	ldlang.c	FUNCTION_96	IF_4	WHILE_2
0x4001008	            0x75f6	                           jne 0x4001000	      4241	ldlang.c	FUNCTION_96	IF_4	WHILE_2
0x400100a	        0x488b5d40	            mov rbx, qword [rbp + 0x40] 	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x400100e	      0xbe00000000	                              mov esi, 0	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001013	            0x31ff	                            xor edi, edi	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001015	      0xba05000000	                              mov edx, 5	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x400101a	      0xe800000000	                          call 0x400101f	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x400101f	          0x4889de	                            mov rsi, rbx	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001022	          0x4889c7	                            mov rdi, rax	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001025	            0x31c0	                            xor eax, eax	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001027	      0xe800000000	                          call 0x400102c	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x400102c	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      4250	ldlang.c	FUNCTION_96	IF_5
0x4001030	          0x4885c0	                           test rax, rax	      4250	ldlang.c	FUNCTION_96	IF_5
0x4001033	            0x7410	                            je 0x4001045	      4250	ldlang.c	FUNCTION_96	IF_5
0x4001035	    0x488b35000000	            mov rsi, qword [0x0400103c] 	      4251	ldlang.c	FUNCTION_96	IF_5
0x400103c	    0x4839b0f00000	            cmp qword [rax + 0xf0], rsi 	      4251	ldlang.c	FUNCTION_96	IF_5
0x4001043	            0x7423	                            je 0x4001068	      4251	ldlang.c	FUNCTION_96	IF_5
0x4001045	        0x4883c418	                           add rsp, 0x18	      4264	ldlang.c	FUNCTION_96
0x4001049	              0x5b	                                 pop rbx	      4264	ldlang.c	FUNCTION_96
0x400104a	              0x5d	                                 pop rbp	      4264	ldlang.c	FUNCTION_96
0x400104b	            0x415c	                                 pop r12	      4264	ldlang.c	FUNCTION_96
0x400104d	            0x415d	                                 pop r13	      4264	ldlang.c	FUNCTION_96
0x400104f	            0x415e	                                 pop r14	      4264	ldlang.c	FUNCTION_96
0x4001051	            0x415f	                                 pop r15	      4264	ldlang.c	FUNCTION_96
0x4001053	              0xc3	                                     ret	      4264	ldlang.c	FUNCTION_96
0x4001054	         0xf1f4000	                         nop dword [rax]	      4264	ldlang.c	FUNCTION_96
0x4001058	      0xe800000000	                          call 0x400105d	      4212	ldlang.c	FUNCTION_96	IF_1	CALL_5
0x400105d	            0x31db	                            xor ebx, ebx	      4213	ldlang.c	FUNCTION_96	IF_1
0x400105f	      0xe92cffffff	                           jmp 0x4000f90	      4213	ldlang.c	FUNCTION_96	IF_1
0x4001064	         0xf1f4000	                         nop dword [rax]	      4213	ldlang.c	FUNCTION_96	IF_1
0x4001068	    0xf60500000000	           test byte [0x0400106f], 0x10 	      4253	ldlang.c	FUNCTION_96	IF_5	IF_6
0x400106f	            0x744c	                            je 0x40010bd	      4253	ldlang.c	FUNCTION_96	IF_5	IF_6
0x4001071	    0x488b3d000000	            mov rdi, qword [0x04001078] 	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x4001078	          0x4889ea	                            mov rdx, rbp	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x400107b	      0xbe00000000	                              mov esi, 0	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x4001080	      0xe800000000	                          call 0x4001085	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x4001085	    0x8b0d00000000	            mov ecx, dword [0x0400108b] 	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x400108b	          0x49d3ec	                             shr r12, cl	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x400108e	          0x4d01ec	                            add r12, r13	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x4001091	    0x4c3b25000000	            cmp r12, qword [0x04001098] 	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x4001098	            0x76ab	                           jbe 0x4001045	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x400109a	    0x4c8925000000	            mov qword [0x040010a1], r12 	      4262	ldlang.c	FUNCTION_96	IF_5	IF_7
0x40010a1	        0x4883c418	                           add rsp, 0x18	      4264	ldlang.c	FUNCTION_96
0x40010a5	              0x5b	                                 pop rbx	      4264	ldlang.c	FUNCTION_96
0x40010a6	              0x5d	                                 pop rbp	      4264	ldlang.c	FUNCTION_96
0x40010a7	            0x415c	                                 pop r12	      4264	ldlang.c	FUNCTION_96
0x40010a9	            0x415d	                                 pop r13	      4264	ldlang.c	FUNCTION_96
0x40010ab	            0x415e	                                 pop r14	      4264	ldlang.c	FUNCTION_96
0x40010ad	            0x415f	                                 pop r15	      4264	ldlang.c	FUNCTION_96
0x40010af	              0xc3	                                     ret	      4264	ldlang.c	FUNCTION_96
0x40010b0	        0x4c8b6d60	            mov r13, qword [rbp + 0x60] 	      4223	ldlang.c	FUNCTION_96	IF_2
0x40010b4	        0x4c036828	             add r13, qword [rax + 0x28]	      4223	ldlang.c	FUNCTION_96	IF_2
0x40010b8	      0xe910ffffff	                           jmp 0x4000fcd	      4223	ldlang.c	FUNCTION_96	IF_2
0x40010bd	    0x488b9da80000	            mov rbx, qword [rbp + 0xa8] 	      4166	ldlang.c	ELSE_2	FUNCTION_95
0x40010c4	          0x4885db	                           test rbx, rbx	      4172	ldlang.c	ELSE_2	FUNCTION_95	IF_1
0x40010c7	            0x74bc	                            je 0x4001085	      4172	ldlang.c	ELSE_2	FUNCTION_95	IF_1
0x40010c9	        0x488b4308	                mov rax, qword [rbx + 8]	      4175	ldlang.c	ELSE_2	FUNCTION_95
0x40010cd	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40010d1	    0x48c700000000	                      mov qword [rax], 0	      4175	ldlang.c	ELSE_2	FUNCTION_95
0x40010d8	    0x488b0d000000	            mov rcx, qword [0x040010df] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40010df	    0x4c8d34f50000	                        lea r14, [rsi*8]	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40010e7	    0x488b05000000	            mov rax, qword [0x040010ee] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40010ee	          0x4889ca	                            mov rdx, rcx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40010f1	          0x4829c2	                            sub rdx, rax	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40010f4	          0x4939d6	                            cmp r14, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40010f7	     0xf8757010000	                            ja 0x4001254	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40010fd	    0x4c8b3d000000	            mov r15, qword [0x04001104] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001104	          0x4901c6	                            add r14, rax	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001107	          0x4d39fe	                            cmp r14, r15	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400110a	     0xf8468010000	                            je 0x4001278	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001110	    0x488b15000000	            mov rdx, qword [0x04001117] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001117	          0x4989c8	                             mov r8, rcx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400111a	        0x498d0416	                    lea rax, [r14 + rdx]	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400111e	          0x48f7d2	                                 not rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001121	          0x4821d0	                            and rax, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001124	    0x488b15000000	            mov rdx, qword [0x0400112b] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400112b	          0x4889c7	                            mov rdi, rax	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400112e	    0x488905000000	            mov qword [0x04001135], rax 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001135	          0x4829d7	                            sub rdi, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001138	          0x4929d0	                             sub r8, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400113b	          0x4c39c7	                             cmp rdi, r8	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400113e	     0xf87ee000000	                            ja 0x4001232	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001144	    0x488905000000	            mov qword [0x0400114b], rax 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400114b	          0x488b03	                    mov rax, qword [rbx]	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x400114e	            0x31d2	                            xor edx, edx	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x4001150	          0x4885c0	                           test rax, rax	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x4001153	            0x7418	                            je 0x400116d	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x4001155	           0xf1f00	                         nop dword [rax]	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x4001158	          0x488b38	                    mov rdi, qword [rax]	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x400115b	            0x89d1	                            mov ecx, edx	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x400115d	          0x83c201	                              add edx, 1	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x4001160	        0x49893ccf	            mov qword [r15 + rcx*8], rdi	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x4001164	        0x488b4008	                mov rax, qword [rax + 8]	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x4001168	          0x4885c0	                           test rax, rax	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x400116b	            0x75eb	                           jne 0x4001158	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x400116d	      0xb900000000	                              mov ecx, 0	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x4001172	      0xba08000000	                              mov edx, 8	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x4001177	          0x4c89ff	                            mov rdi, r15	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x400117a	      0xe800000000	                          call 0x400117f	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x400117f	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4001183	          0x4531f6	                          xor r14d, r14d	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4001186	            0x31c0	                            xor eax, eax	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4001188	          0x4885c9	                           test rcx, rcx	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x400118b	            0x750f	                           jne 0x400119c	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x400118d	            0xeb7f	                           jmp 0x400120e	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x400118f	              0x90	                                     nop	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4001190	        0x418d4601	                      lea eax, [r14 + 1]	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4001194	          0x4839c8	                            cmp rax, rcx	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4001197	          0x4989c6	                            mov r14, rax	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x400119a	            0x7372	                           jae 0x400120e	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x400119c	        0x498b14c7	            mov rdx, qword [r15 + rax*8]	      4190	ldlang.c	ELSE_2	FUNCTION_95	CALL_4
0x40011a0	         0xfb64218	           movzx eax, byte [rdx + 0x18] 	      4130	ldlang.c	FUNCTION_93	IF_1
0x40011a4	          0x83e803	                              sub eax, 3	      4130	ldlang.c	FUNCTION_93	IF_1
0x40011a7	            0x3c01	                               cmp al, 1	      4130	ldlang.c	FUNCTION_93	IF_1
0x40011a9	            0x77e5	                            ja 0x4001190	      4130	ldlang.c	FUNCTION_93	IF_1
0x40011ab	        0x483b6a28	            cmp rbp, qword [rdx + 0x28] 	      4132	ldlang.c	FUNCTION_93	IF_1
0x40011af	            0x75df	                           jne 0x4001190	      4132	ldlang.c	FUNCTION_93	IF_1
0x40011b1	    0xc744240c1000	            mov dword [rsp + 0xc], 0x10 	      4132	ldlang.c	FUNCTION_93	IF_1
0x40011b9	     0xf1f80000000	                         nop dword [rax]	      4132	ldlang.c	FUNCTION_93	IF_1
0x40011c0	        0x48891424	                    mov qword [rsp], rdx	      4132	ldlang.c	FUNCTION_93	IF_1
0x40011c4	      0xe800000000	                          call 0x40011c9	      4137	ldlang.c	FUNCTION_93	IF_1	CALL_1
0x40011c9	      0x836c240c01	                sub dword [rsp + 0xc], 1	      4136	ldlang.c	FUNCTION_93	IF_1	FOR_1
0x40011ce	        0x488b1424	                    mov rdx, qword [rsp]	      4136	ldlang.c	FUNCTION_93	IF_1	FOR_1
0x40011d2	            0x75ec	                           jne 0x40011c0	      4136	ldlang.c	FUNCTION_93	IF_1	FOR_1
0x40011d4	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      4140	ldlang.c	FUNCTION_93	IF_1
0x40011d8	      0xbf00000000	                              mov edi, 0	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x40011dd	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x40011e1	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4141	ldlang.c	FUNCTION_93	IF_1
0x40011e5	        0x48037230	             add rsi, qword [rdx + 0x30]	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x40011e9	        0x48037028	             add rsi, qword [rax + 0x28]	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x40011ed	            0x31c0	                            xor eax, eax	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x40011ef	      0xe800000000	                          call 0x40011f4	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x40011f4	        0x488b1424	                    mov rdx, qword [rsp]	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x40011f8	      0xbf00000000	                              mov edi, 0	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x40011fd	            0x31c0	                            xor eax, eax	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x40011ff	        0x488b7208	                mov rsi, qword [rdx + 8]	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x4001203	      0xe800000000	                          call 0x4001208	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x4001208	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x400120c	            0xeb82	                           jmp 0x4001190	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x400120e	    0x4c3b3d000000	            cmp r15, qword [0x04001215] 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001215	            0x7609	                           jbe 0x4001220	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001217	    0x4c3b3d000000	            cmp r15, qword [0x0400121e] 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x400121e	            0x7221	                            jb 0x4001241	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001220	          0x4c89fe	                            mov rsi, r15	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001223	      0xbf00000000	                              mov edi, 0	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001228	      0xe800000000	                          call 0x400122d	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x400122d	      0xe953feffff	                           jmp 0x4001085	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001232	    0x48890d000000	            mov qword [0x04001239], rcx 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001239	          0x4889c8	                            mov rax, rcx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400123c	      0xe903ffffff	                           jmp 0x4001144	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001241	    0x4c893d000000	            mov qword [0x04001248], r15 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001248	    0x4c893d000000	            mov qword [0x0400124f], r15 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x400124f	      0xe931feffff	                           jmp 0x4001085	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001254	          0x4c89f6	                            mov rsi, r14	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001257	      0xbf00000000	                              mov edi, 0	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400125c	      0xe800000000	                          call 0x4001261	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001261	    0x488b05000000	            mov rax, qword [0x04001268] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001268	    0x488b0d000000	            mov rcx, qword [0x0400126f] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400126f	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001273	      0xe985feffff	                           jmp 0x40010fd	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001278	    0x800d00000000	                 or byte [0x0400127f], 2	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400127f	      0xe98cfeffff	                           jmp 0x4001110	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
lang_map	IF,4:ELSE,0:SWITCH,0:functions,1:CALL,21:DO,0:FOR,1:WHILE,1	274
0x4006260	            0x4154	                                push r12	      2045	ldlang.c	FUNCTION_53
0x4006262	              0x55	                                push rbp	      2045	ldlang.c	FUNCTION_53
0x4006263	          0x4531e4	                          xor r12d, r12d	      2045	ldlang.c	FUNCTION_53
0x4006266	              0x53	                                push rbx	      2045	ldlang.c	FUNCTION_53
0x4006267	        0x4883ec70	                           sub rsp, 0x70	      2045	ldlang.c	FUNCTION_53
0x400626b	    0x488b2d000000	            mov rbp, qword [0x04006272] 	      2049	ldlang.c	FUNCTION_53
0x4006272	    0x64488b042528	                mov rax, qword fs:[0x28]	      2045	ldlang.c	FUNCTION_53
0x400627b	      0x4889442468	             mov qword [rsp + 0x68], rax	      2045	ldlang.c	FUNCTION_53
0x4006280	            0x31c0	                            xor eax, eax	      2045	ldlang.c	FUNCTION_53
0x4006282	          0x4885ed	                           test rbp, rbp	      2049	ldlang.c	FUNCTION_53
0x4006285	     0xf84b2000000	                            je 0x400633d	      2049	ldlang.c	FUNCTION_53
0x400628b	       0xf1f440000	                   nop dword [rax + rax]	      2049	ldlang.c	FUNCTION_53
0x4006290	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4006294	          0x8b4244	            mov eax, dword [rdx + 0x44] 	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4006297	          0xc1e805	                              shr eax, 5	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x400629a	      0xa940100000	                        test eax, 0x1040	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x400629f	     0xf858b000000	                           jne 0x4006330	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40062a5	        0xf6454810	           test byte [rbp + 0x48], 0x10 	      2054	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40062a9	     0xf8581000000	                           jne 0x4006330	      2054	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40062af	    0x488b9a900000	            mov rbx, qword [rdx + 0x90] 	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40062b6	          0x4885db	                           test rbx, rbx	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40062b9	            0x751b	                           jne 0x40062d6	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40062bb	            0xeb73	                           jmp 0x4006330	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40062bd	           0xf1f00	                         nop dword [rax]	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40062c0	      0xbe01000000	                              mov esi, 1	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40062c5	          0x4889df	                            mov rdi, rbx	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40062c8	      0xe873acffff	            call sym.print_input_section	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40062cd	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40062d1	          0x4885db	                           test rbx, rbx	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40062d4	            0x745a	                            je 0x4006330	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40062d6	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40062da	          0x4885c0	                           test rax, rax	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40062dd	            0x7410	                            je 0x40062ef	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40062df	    0x488b0d000000	            mov rcx, qword [0x040062e6] 	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40062e6	    0x483988f00000	            cmp qword [rax + 0xf0], rcx 	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40062ed	            0x74de	                            je 0x40062cd	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40062ef	    0xf74320000030	      test dword [rbx + 0x20], 0x300000 	      2060	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40062f6	            0x75d5	                           jne 0x40062cd	      2060	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40062f8	          0x4585e4	                         test r12d, r12d	      2062	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x40062fb	            0x75c3	                           jne 0x40062c0	      2062	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x40062fd	      0xba05000000	                              mov edx, 5	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4006302	      0xbe00000000	                              mov esi, 0	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4006307	            0x31ff	                            xor edi, edi	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4006309	      0xe800000000	                          call 0x400630e	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x400630e	    0x488b3d000000	            mov rdi, qword [0x04006315] 	        97	stdio2.h	CALL_42
0x4006315	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_42
0x4006318	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x400631d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x400631f	    0x41bc01000000	                             mov r12d, 1	      2065	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x4006325	      0xe800000000	                          call 0x400632a	        97	stdio2.h	CALL_42
0x400632a	            0xeb94	                           jmp 0x40062c0	        97	stdio2.h	CALL_42
0x400632c	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_42
0x4006330	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	      2049	ldlang.c	FUNCTION_53
0x4006334	          0x4885ed	                           test rbp, rbp	      2049	ldlang.c	FUNCTION_53
0x4006337	     0xf8553ffffff	                           jne 0x4006290	      2049	ldlang.c	FUNCTION_53
0x400633d	      0xba05000000	                              mov edx, 5	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4006342	      0xbe00000000	                              mov esi, 0	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4006347	            0x31ff	                            xor edi, edi	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4006349	      0xe800000000	                          call 0x400634e	      2072	ldlang.c	FUNCTION_53	CALL_2
0x400634e	          0x4889c7	                            mov rdi, rax	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4006351	            0x31c0	                            xor eax, eax	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4006353	      0xe800000000	                          call 0x4006358	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4006358	            0x31ff	                            xor edi, edi	      2073	ldlang.c	FUNCTION_53
0x400635a	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x400635f	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4006364	      0xe800000000	                          call 0x4006369	      2073	ldlang.c	FUNCTION_53
0x4006369	            0x31ff	                            xor edi, edi	      2073	ldlang.c	FUNCTION_53
0x400636b	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4006370	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4006375	          0x4989c4	                            mov r12, rax	      2073	ldlang.c	FUNCTION_53
0x4006378	      0xe800000000	                          call 0x400637d	      2073	ldlang.c	FUNCTION_53
0x400637d	            0x31ff	                            xor edi, edi	      2073	ldlang.c	FUNCTION_53
0x400637f	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4006384	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4006389	          0x4889c5	                            mov rbp, rax	      2073	ldlang.c	FUNCTION_53
0x400638c	      0xe800000000	                          call 0x4006391	      2073	ldlang.c	FUNCTION_53
0x4006391	            0x31ff	                            xor edi, edi	      2073	ldlang.c	FUNCTION_53
0x4006393	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4006398	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x400639d	          0x4889c3	                            mov rbx, rax	      2073	ldlang.c	FUNCTION_53
0x40063a0	      0xe800000000	                          call 0x40063a5	      2073	ldlang.c	FUNCTION_53
0x40063a5	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_42
0x40063a9	    0x488b3d000000	            mov rdi, qword [0x040063b0] 	        97	stdio2.h	CALL_42
0x40063b0	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_42
0x40063b3	            0x4154	                                push r12	        97	stdio2.h	CALL_42
0x40063b5	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_42
0x40063b8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x40063bd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x40063bf	          0x4989d8	                             mov r8, rbx	        97	stdio2.h	CALL_42
0x40063c2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_42
0x40063c7	      0xe800000000	                          call 0x40063cc	        97	stdio2.h	CALL_42
0x40063cc	              0x59	                                 pop rcx	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40063cd	    0x488b2d000000	            mov rbp, qword [0x040063d4] 	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40063d4	              0x5e	                                 pop rsi	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40063d5	          0x4885ed	                           test rbp, rbp	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40063d8	          0x4989e4	                            mov r12, rsp	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40063db	     0xf84e3000000	                            je 0x40064c4	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40063e1	     0xf1f80000000	                         nop dword [rax]	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40063e8	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_42
0x40063ec	    0x488b3d000000	            mov rdi, qword [0x040063f3] 	        97	stdio2.h	CALL_42
0x40063f3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_42
0x40063f8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x40063fd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x40063ff	      0xe800000000	                          call 0x4006404	        97	stdio2.h	CALL_42
0x4006404	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        33	stdio2.h	FUNCTION_228	CALL_1
0x4006408	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_228	CALL_1
0x400640d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_228	CALL_1
0x4006412	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_228	CALL_1
0x4006417	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_228	CALL_1
0x400641a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_228	CALL_1
0x400641c	      0xe800000000	                          call 0x4006421	        33	stdio2.h	FUNCTION_228	CALL_1
0x4006421	          0x4c89e6	                            mov rsi, r12	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4006424	      0xbf00000000	                              mov edi, 0	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4006429	            0x31c0	                            xor eax, eax	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x400642b	      0xe800000000	                          call 0x4006430	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4006430	          0x4c89e2	                            mov rdx, r12	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006433	            0x8b0a	                    mov ecx, dword [rdx]	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006435	        0x4883c204	                              add rdx, 4	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006439	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400643f	            0xf7d1	                                 not ecx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006441	            0x21c8	                            and eax, ecx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006443	      0x2580808080	                     and eax, 0x80808080	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006448	            0x74e9	                            je 0x4006433	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400644a	            0x89c1	                            mov ecx, eax	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400644c	          0xc1e910	                           shr ecx, 0x10	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400644f	      0xa980800000	                        test eax, 0x8080	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006454	           0xf44c1	                          cmove eax, ecx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006457	        0x488d4a02	                      lea rcx, [rdx + 2]	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400645b	            0x89c7	                            mov edi, eax	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400645d	        0x480f44d1	                          cmove rdx, rcx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006461	          0x4000c7	                             add dil, al	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006464	        0x4883da03	                              sbb rdx, 3	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006468	          0x4c29e2	                            sub rdx, r12	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400646b	          0x83fa0f	                            cmp edx, 0xf	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x400646e	            0x89d3	                            mov ebx, edx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4006470	            0x7f13	                            jg 0x4006485	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4006472	    0x660f1f440000	                    nop word [rax + rax]	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4006478	          0x83c301	                              add ebx, 1	      2089	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x400647b	      0xe800000000	                          call 0x4006480	      2088	ldlang.c	FUNCTION_53	FOR_1	WHILE_1	CALL_9
0x4006480	          0x83fb10	                           cmp ebx, 0x10	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4006483	            0x75f3	                           jne 0x4006478	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4006485	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x4006489	            0x31c0	                            xor eax, eax	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x400648b	      0xbf00000000	                              mov edi, 0	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x4006490	      0xe800000000	                          call 0x4006495	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x4006495	      0x48837d4800	               cmp qword [rbp + 0x48], 0	      2093	ldlang.c	FUNCTION_53	FOR_1	IF_1
0x400649a	            0x7416	                            je 0x40064b2	      2093	ldlang.c	FUNCTION_53	FOR_1	IF_1
0x400649c	          0x8b5548	            mov edx, dword [rbp + 0x48] 	      2098	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2
0x400649f	            0x85d2	                           test edx, edx	      2098	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2
0x40064a1	     0xf8501010000	                           jne 0x40065a8	      2098	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2
0x40064a7	          0x8b454c	            mov eax, dword [rbp + 0x4c] 	      2104	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3
0x40064aa	            0x85c0	                           test eax, eax	      2104	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3
0x40064ac	     0xf85ae000000	                           jne 0x4006560	      2104	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3
0x40064b2	      0xe800000000	                          call 0x40064b7	      2111	ldlang.c	FUNCTION_53	FOR_1	CALL_16
0x40064b7	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40064bb	          0x4885ed	                           test rbp, rbp	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40064be	     0xf8524ffffff	                           jne 0x40063e8	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40064c4	            0x31ff	                            xor edi, edi	      2114	ldlang.c	FUNCTION_53	CALL_17
0x40064c6	      0xba05000000	                              mov edx, 5	      2114	ldlang.c	FUNCTION_53	CALL_17
0x40064cb	      0xbe00000000	                              mov esi, 0	      2114	ldlang.c	FUNCTION_53	CALL_17
0x40064d0	      0xe800000000	                          call 0x40064d5	      2114	ldlang.c	FUNCTION_53	CALL_17
0x40064d5	    0x488b3d000000	            mov rdi, qword [0x040064dc] 	        97	stdio2.h	CALL_42
0x40064dc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_42
0x40064df	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x40064e4	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x40064e6	      0xe800000000	                          call 0x40064eb	        97	stdio2.h	CALL_42
0x40064eb	    0xf60500000000	           test byte [0x040064f2], 0x10 	      2116	ldlang.c	FUNCTION_53	IF_4
0x40064f2	     0xf847b010000	                            je 0x4006673	      2116	ldlang.c	FUNCTION_53	IF_4
0x40064f8	    0x488b1d000000	            mov rbx, qword [0x040064ff] 	      4607	ldlang.c	FUNCTION_106	CALL_1
0x40064ff	    0x830500000000	               add dword [0x04006506], 1	      2121	ldlang.c	FUNCTION_53
0x4006506	    0x488b2d000000	            mov rbp, qword [0x0400650d] 	      4607	ldlang.c	FUNCTION_106	CALL_1
0x400650d	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4006510	            0x7419	                            je 0x400652b	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4006512	    0x660f1f440000	                    nop word [rax + rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4006518	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400651b	          0x4889ee	                            mov rsi, rbp	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400651e	      0xe86dadffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4006523	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x4006526	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4006529	            0x75ed	                           jne 0x4006518	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x400652b	    0x488b15000000	            mov rdx, qword [0x04006532] 	      2124	ldlang.c	FUNCTION_53	CALL_21
0x4006532	    0x488b3d000000	            mov rdi, qword [0x04006539] 	      2124	ldlang.c	FUNCTION_53	CALL_21
0x4006539	      0xbe00000000	                              mov esi, 0	      2124	ldlang.c	FUNCTION_53	CALL_21
0x400653e	      0xe800000000	                          call 0x4006543	      2124	ldlang.c	FUNCTION_53	CALL_21
0x4006543	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      2126	ldlang.c	FUNCTION_53
0x4006548	    0x644833042528	                xor rax, qword fs:[0x28]	      2126	ldlang.c	FUNCTION_53
0x4006551	     0xf8550010000	                           jne 0x40066a7	      2126	ldlang.c	FUNCTION_53
0x4006557	        0x4883c470	                           add rsp, 0x70	      2126	ldlang.c	FUNCTION_53
0x400655b	              0x5b	                                 pop rbx	      2126	ldlang.c	FUNCTION_53
0x400655c	              0x5d	                                 pop rbp	      2126	ldlang.c	FUNCTION_53
0x400655d	            0x415c	                                 pop r12	      2126	ldlang.c	FUNCTION_53
0x400655f	              0xc3	                                     ret	      2126	ldlang.c	FUNCTION_53
0x4006560	            0x31c0	                            xor eax, eax	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x4006562	      0xbf00000000	                              mov edi, 0	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x4006567	      0xe800000000	                          call 0x400656c	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x400656c	          0x8b5d4c	            mov ebx, dword [rbp + 0x4c] 	      2107	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_15
0x400656f	          0xf6c301	                              test bl, 1	      2027	ldlang.c	FUNCTION_52	IF_1
0x4006572	            0x7572	                           jne 0x40065e6	      2027	ldlang.c	FUNCTION_52	IF_1
0x4006574	          0xf6c310	                           test bl, 0x10	      2030	ldlang.c	FUNCTION_52	IF_2
0x4006577	            0x757e	                           jne 0x40065f7	      2030	ldlang.c	FUNCTION_52	IF_2
0x4006579	          0xf6c308	                              test bl, 8	      2033	ldlang.c	FUNCTION_52	IF_3
0x400657c	     0xf858a000000	                           jne 0x400660c	      2033	ldlang.c	FUNCTION_52	IF_3
0x4006582	          0xf6c320	                           test bl, 0x20	      2036	ldlang.c	FUNCTION_52	IF_4
0x4006585	     0xf8596000000	                           jne 0x4006621	      2036	ldlang.c	FUNCTION_52	IF_4
0x400658b	          0x83e302	                              and ebx, 2	      2039	ldlang.c	FUNCTION_52	IF_5
0x400658e	     0xf841effffff	                            je 0x40064b2	      2039	ldlang.c	FUNCTION_52	IF_5
0x4006594	      0xbf00000000	                              mov edi, 0	      2040	ldlang.c	FUNCTION_52	CALL_5
0x4006599	            0x31c0	                            xor eax, eax	      2040	ldlang.c	FUNCTION_52	CALL_5
0x400659b	      0xe800000000	                          call 0x40065a0	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40065a0	      0xe90dffffff	                           jmp 0x40064b2	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40065a5	           0xf1f00	                         nop dword [rax]	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40065a8	      0xe800000000	                          call 0x40065ad	      2100	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_12
0x40065ad	          0x8b5d48	            mov ebx, dword [rbp + 0x48] 	      2101	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_13
0x40065b0	          0xf6c301	                              test bl, 1	      2027	ldlang.c	FUNCTION_52	IF_1
0x40065b3	     0xf85a9000000	                           jne 0x4006662	      2027	ldlang.c	FUNCTION_52	IF_1
0x40065b9	          0xf6c310	                           test bl, 0x10	      2030	ldlang.c	FUNCTION_52	IF_2
0x40065bc	     0xf858f000000	                           jne 0x4006651	      2030	ldlang.c	FUNCTION_52	IF_2
0x40065c2	          0xf6c308	                              test bl, 8	      2033	ldlang.c	FUNCTION_52	IF_3
0x40065c5	            0x7579	                           jne 0x4006640	      2033	ldlang.c	FUNCTION_52	IF_3
0x40065c7	          0xf6c320	                           test bl, 0x20	      2036	ldlang.c	FUNCTION_52	IF_4
0x40065ca	            0x7566	                           jne 0x4006632	      2036	ldlang.c	FUNCTION_52	IF_4
0x40065cc	          0x83e302	                              and ebx, 2	      2039	ldlang.c	FUNCTION_52	IF_5
0x40065cf	     0xf84d2feffff	                            je 0x40064a7	      2039	ldlang.c	FUNCTION_52	IF_5
0x40065d5	      0xbf00000000	                              mov edi, 0	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40065da	            0x31c0	                            xor eax, eax	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40065dc	      0xe800000000	                          call 0x40065e1	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40065e1	      0xe9c1feffff	                           jmp 0x40064a7	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40065e6	            0x31c0	                            xor eax, eax	      2028	ldlang.c	FUNCTION_52	CALL_1
0x40065e8	      0xbf00000000	                              mov edi, 0	      2028	ldlang.c	FUNCTION_52	CALL_1
0x40065ed	      0xe800000000	                          call 0x40065f2	      2028	ldlang.c	FUNCTION_52	CALL_1
0x40065f2	          0xf6c310	                           test bl, 0x10	      2030	ldlang.c	FUNCTION_52	IF_2
0x40065f5	            0x7482	                            je 0x4006579	      2030	ldlang.c	FUNCTION_52	IF_2
0x40065f7	            0x31c0	                            xor eax, eax	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40065f9	      0xbf00000000	                              mov edi, 0	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40065fe	      0xe800000000	                          call 0x4006603	      2031	ldlang.c	FUNCTION_52	CALL_2
0x4006603	          0xf6c308	                              test bl, 8	      2033	ldlang.c	FUNCTION_52	IF_3
0x4006606	     0xf8476ffffff	                            je 0x4006582	      2033	ldlang.c	FUNCTION_52	IF_3
0x400660c	            0x31c0	                            xor eax, eax	      2034	ldlang.c	FUNCTION_52	CALL_3
0x400660e	      0xbf00000000	                              mov edi, 0	      2034	ldlang.c	FUNCTION_52	CALL_3
0x4006613	      0xe800000000	                          call 0x4006618	      2034	ldlang.c	FUNCTION_52	CALL_3
0x4006618	          0xf6c320	                           test bl, 0x20	      2036	ldlang.c	FUNCTION_52	IF_4
0x400661b	     0xf846affffff	                            je 0x400658b	      2036	ldlang.c	FUNCTION_52	IF_4
0x4006621	      0xbf00000000	                              mov edi, 0	      2037	ldlang.c	FUNCTION_52	CALL_4
0x4006626	            0x31c0	                            xor eax, eax	      2037	ldlang.c	FUNCTION_52	CALL_4
0x4006628	      0xe800000000	                          call 0x400662d	      2037	ldlang.c	FUNCTION_52	CALL_4
0x400662d	      0xe959ffffff	                           jmp 0x400658b	      2037	ldlang.c	FUNCTION_52	CALL_4
0x4006632	      0xbf00000000	                              mov edi, 0	      2037	ldlang.c	FUNCTION_52	CALL_4
0x4006637	            0x31c0	                            xor eax, eax	      2037	ldlang.c	FUNCTION_52	CALL_4
0x4006639	      0xe800000000	                          call 0x400663e	      2037	ldlang.c	FUNCTION_52	CALL_4
0x400663e	            0xeb8c	                           jmp 0x40065cc	      2037	ldlang.c	FUNCTION_52	CALL_4
0x4006640	      0xbf00000000	                              mov edi, 0	      2034	ldlang.c	FUNCTION_52	CALL_3
0x4006645	            0x31c0	                            xor eax, eax	      2034	ldlang.c	FUNCTION_52	CALL_3
0x4006647	      0xe800000000	                          call 0x400664c	      2034	ldlang.c	FUNCTION_52	CALL_3
0x400664c	      0xe976ffffff	                           jmp 0x40065c7	      2034	ldlang.c	FUNCTION_52	CALL_3
0x4006651	      0xbf00000000	                              mov edi, 0	      2031	ldlang.c	FUNCTION_52	CALL_2
0x4006656	            0x31c0	                            xor eax, eax	      2031	ldlang.c	FUNCTION_52	CALL_2
0x4006658	      0xe800000000	                          call 0x400665d	      2031	ldlang.c	FUNCTION_52	CALL_2
0x400665d	      0xe960ffffff	                           jmp 0x40065c2	      2031	ldlang.c	FUNCTION_52	CALL_2
0x4006662	      0xbf00000000	                              mov edi, 0	      2028	ldlang.c	FUNCTION_52	CALL_1
0x4006667	            0x31c0	                            xor eax, eax	      2028	ldlang.c	FUNCTION_52	CALL_1
0x4006669	      0xe800000000	                          call 0x400666e	      2028	ldlang.c	FUNCTION_52	CALL_1
0x400666e	      0xe946ffffff	                           jmp 0x40065b9	      2028	ldlang.c	FUNCTION_52	CALL_1
0x4006673	            0x31d2	                            xor edx, edx	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x4006675	    0x41b800000000	                              mov r8d, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x400667b	      0xb900000000	                              mov ecx, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x4006680	      0xbee8030000	                          mov esi, 0x3e8	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x4006685	      0xbf00000000	                              mov edi, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x400668a	      0xe800000000	                          call 0x400668f	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x400668f	    0x488b3d000000	            mov rdi, qword [0x04006696] 	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x4006696	            0x31d2	                            xor edx, edx	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x4006698	      0xbe00000000	                              mov esi, 0	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x400669d	      0xe800000000	                          call 0x40066a2	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x40066a2	      0xe951feffff	                           jmp 0x40064f8	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x40066a7	      0xe800000000	                          call 0x40066ac	      2126	ldlang.c	FUNCTION_53
