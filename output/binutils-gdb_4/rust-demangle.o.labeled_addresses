rust_demangle_sym	WHILE,1:CALL,19:functions,0:FOR,0:IF,4:ELSE,2:SWITCH,1:DO,0	231
0x4000410	              0x55	                                push rbp	       244	rust-demangle.c	FUNCTION_4
0x4000411	              0x53	                                push rbx	       244	rust-demangle.c	FUNCTION_4
0x4000412	        0x4883ec28	                           sub rsp, 0x28	       244	rust-demangle.c	FUNCTION_4
0x4000416	    0x64488b042528	                mov rax, qword fs:[0x28]	       244	rust-demangle.c	FUNCTION_4
0x400041f	      0x4889442418	             mov qword [rsp + 0x18], rax	       244	rust-demangle.c	FUNCTION_4
0x4000424	            0x31c0	                            xor eax, eax	       244	rust-demangle.c	FUNCTION_4
0x4000426	          0x4885ff	                           test rdi, rdi	       249	rust-demangle.c	FUNCTION_4	IF_1
0x4000429	     0xf84b2020000	                            je 0x40006e1	       249	rust-demangle.c	FUNCTION_4	IF_1
0x400042f	          0x4889fb	                            mov rbx, rdi	       249	rust-demangle.c	FUNCTION_4	IF_1
0x4000432	      0x48897c2408	                mov qword [rsp + 8], rdi	       252	rust-demangle.c	FUNCTION_4
0x4000437	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       253	rust-demangle.c	FUNCTION_4
0x400043c	      0xe800000000	                          call 0x4000441	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x4000441	      0x488d6c03ed	             lea rbp, [rbx + rax - 0x13]	       254	rust-demangle.c	FUNCTION_4	CALL_1
0x4000446	          0x4889da	                            mov rdx, rbx	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x4000449	          0x4839d5	                            cmp rbp, rdx	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x400044c	     0xf8687020000	                           jbe 0x40006d9	       256	rust-demangle.c	FUNCTION_4	WHILE_1
0x4000452	           0xfb602	                   movzx eax, byte [rdx]	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000455	          0x83e824	                           sub eax, 0x24	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000458	            0x3c56	                            cmp al, 0x56	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400045a	     0xf8768020000	                            ja 0x40006c8	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000460	           0xfb6c0	                           movzx eax, al	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000463	    0xff24c5000000	                       jmp qword [rax*8]	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400046a	    0x660f1f440000	                    nop word [rax + rax]	       257	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000470	          0x4839d3	                            cmp rbx, rdx	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000473	     0xf84bf020000	                            je 0x4000738	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000479	        0x807aff3a	                cmp byte [rdx - 1], 0x3a	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x400047d	     0xf84b5020000	                            je 0x4000738	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000483	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000488	        0x488d4801	                      lea rcx, [rax + 1]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400048c	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000491	        0x488d4a01	                      lea rcx, [rdx + 1]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000495	      0x48894c2408	                mov qword [rsp + 8], rcx	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400049a	           0xfb612	                   movzx edx, byte [rdx]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400049d	            0x8810	                      mov byte [rax], dl	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400049f	      0x488b542408	                mov rdx, qword [rsp + 8]	       320	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40004a4	            0xeba3	                           jmp 0x4000449	       321	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40004a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       321	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40004b0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40004b5	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       293	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40004b9	        0x488d5001	                      lea rdx, [rax + 1]	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40004bd	      0x4889542410	             mov qword [rsp + 0x10], rdx	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40004c2	     0xf8488020000	                            je 0x4000750	       293	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40004c8	          0xc6002d	                    mov byte [rax], 0x2d	       303	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x40004cb	      0x488b442408	                mov rax, qword [rsp + 8]	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x40004d0	        0x488d5001	                      lea rdx, [rax + 1]	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x40004d4	      0x4889542408	                mov qword [rsp + 8], rdx	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x40004d9	      0xe96bffffff	                           jmp 0x4000449	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x40004de	            0x6690	                                     nop	       304	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_2
0x40004e0	      0xbf00000000	                              mov edi, 0	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40004e5	      0xb903000000	                              mov ecx, 3	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40004ea	          0x4889d6	                            mov rsi, rdx	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40004ed	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40004ef	     0xf850b020000	                           jne 0x4000700	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40004f5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       342	rust-demangle.c	FUNCTION_5
0x40004fa	          0xc6002c	                    mov byte [rax], 0x2c	       342	rust-demangle.c	FUNCTION_5
0x40004fd	      0x488b442408	                mov rax, qword [rsp + 8]	       344	rust-demangle.c	FUNCTION_5
0x4000502	    0x488344241001	               add qword [rsp + 0x10], 1	       345	rust-demangle.c	FUNCTION_5
0x4000508	        0x488d5003	                      lea rdx, [rax + 3]	       344	rust-demangle.c	FUNCTION_5
0x400050c	      0x4889542408	                mov qword [rsp + 8], rdx	       344	rust-demangle.c	FUNCTION_5
0x4000511	      0xe933ffffff	                           jmp 0x4000449	       344	rust-demangle.c	FUNCTION_5
0x4000516	      0x488d742410	                   lea rsi, [rsp + 0x10]	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x400051b	      0x488d7c2408	                      lea rdi, [rsp + 8]	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000520	      0xb93e000000	                           mov ecx, 0x3e	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000525	      0xba00000000	                              mov edx, 0	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x400052a	      0xe811fbffff	                       call sym.unescape	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x400052f	            0x85c0	                           test eax, eax	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000531	     0xf8568ffffff	                           jne 0x400049f	       265	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_7
0x4000537	      0x488d742410	                   lea rsi, [rsp + 0x10]	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x400053c	      0x488d7c2408	                      lea rdi, [rsp + 8]	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000541	      0xb928000000	                           mov ecx, 0x28	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000546	      0xba00000000	                              mov edx, 0	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x400054b	      0xe8f0faffff	                       call sym.unescape	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000550	            0x85c0	                           test eax, eax	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000552	     0xf8547ffffff	                           jne 0x400049f	       266	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_8
0x4000558	      0x488d742410	                   lea rsi, [rsp + 0x10]	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x400055d	      0x488d7c2408	                      lea rdi, [rsp + 8]	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000562	      0xb929000000	                           mov ecx, 0x29	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000567	      0xba00000000	                              mov edx, 0	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x400056c	      0xe8cffaffff	                       call sym.unescape	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000571	            0x85c0	                           test eax, eax	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000573	     0xf8526ffffff	                           jne 0x400049f	       267	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_9
0x4000579	      0x488d742410	                   lea rsi, [rsp + 0x10]	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x400057e	      0x488d7c2408	                      lea rdi, [rsp + 8]	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000583	      0xb920000000	                           mov ecx, 0x20	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000588	      0xba00000000	                              mov edx, 0	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x400058d	      0xe8aefaffff	                       call sym.unescape	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000592	            0x85c0	                           test eax, eax	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x4000594	     0xf8505ffffff	                           jne 0x400049f	       268	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_10
0x400059a	      0x488d742410	                   lea rsi, [rsp + 0x10]	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x400059f	      0x488d7c2408	                      lea rdi, [rsp + 8]	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005a4	      0xb922000000	                           mov ecx, 0x22	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005a9	      0xba00000000	                              mov edx, 0	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005ae	      0xe88dfaffff	                       call sym.unescape	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005b3	            0x85c0	                           test eax, eax	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005b5	     0xf85e4feffff	                           jne 0x400049f	       269	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_11
0x40005bb	      0x488d742410	                   lea rsi, [rsp + 0x10]	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005c0	      0x488d7c2408	                      lea rdi, [rsp + 8]	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005c5	      0xb927000000	                           mov ecx, 0x27	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005ca	      0xba00000000	                              mov edx, 0	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005cf	      0xe86cfaffff	                       call sym.unescape	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005d4	            0x85c0	                           test eax, eax	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005d6	     0xf85c3feffff	                           jne 0x400049f	       270	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_12
0x40005dc	      0x488d742410	                   lea rsi, [rsp + 0x10]	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005e1	      0x488d7c2408	                      lea rdi, [rsp + 8]	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005e6	      0xb92b000000	                           mov ecx, 0x2b	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005eb	      0xba00000000	                              mov edx, 0	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005f0	      0xe84bfaffff	                       call sym.unescape	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005f5	            0x85c0	                           test eax, eax	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005f7	     0xf85a2feffff	                           jne 0x400049f	       271	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_13
0x40005fd	      0x488d742410	                   lea rsi, [rsp + 0x10]	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000602	      0x488d7c2408	                      lea rdi, [rsp + 8]	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000607	      0xb93b000000	                           mov ecx, 0x3b	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x400060c	      0xba00000000	                              mov edx, 0	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000611	      0xe82afaffff	                       call sym.unescape	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000616	            0x85c0	                           test eax, eax	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x4000618	     0xf8581feffff	                           jne 0x400049f	       272	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_14
0x400061e	      0x488d742410	                   lea rsi, [rsp + 0x10]	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000623	      0x488d7c2408	                      lea rdi, [rsp + 8]	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000628	      0xb95b000000	                           mov ecx, 0x5b	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x400062d	      0xba00000000	                              mov edx, 0	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000632	      0xe809faffff	                       call sym.unescape	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000637	            0x85c0	                           test eax, eax	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x4000639	     0xf8560feffff	                           jne 0x400049f	       273	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_15
0x400063f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000644	      0x488d7c2408	                      lea rdi, [rsp + 8]	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000649	      0xb95d000000	                           mov ecx, 0x5d	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x400064e	      0xba00000000	                              mov edx, 0	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000653	      0xe8e8f9ffff	                       call sym.unescape	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000658	            0x85c0	                           test eax, eax	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x400065a	     0xf853ffeffff	                           jne 0x400049f	       274	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_16
0x4000660	      0x488d742410	                   lea rsi, [rsp + 0x10]	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000665	      0x488d7c2408	                      lea rdi, [rsp + 8]	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x400066a	      0xb97b000000	                           mov ecx, 0x7b	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x400066f	      0xba00000000	                              mov edx, 0	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000674	      0xe8c7f9ffff	                       call sym.unescape	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000679	            0x85c0	                           test eax, eax	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x400067b	     0xf851efeffff	                           jne 0x400049f	       275	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_17
0x4000681	      0x488d742410	                   lea rsi, [rsp + 0x10]	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x4000686	      0x488d7c2408	                      lea rdi, [rsp + 8]	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x400068b	      0xb97d000000	                           mov ecx, 0x7d	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x4000690	      0xba00000000	                              mov edx, 0	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x4000695	      0xe8a6f9ffff	                       call sym.unescape	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x400069a	            0x85c0	                           test eax, eax	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x400069c	     0xf85fdfdffff	                           jne 0x400049f	       276	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_18
0x40006a2	      0x488d742410	                   lea rsi, [rsp + 0x10]	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006a7	      0x488d7c2408	                      lea rdi, [rsp + 8]	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006ac	      0xb97e000000	                           mov ecx, 0x7e	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006b1	      0xba00000000	                              mov edx, 0	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006b6	      0xe885f9ffff	                       call sym.unescape	       277	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_19
0x40006bb	            0x85c0	                           test eax, eax	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006bd	     0xf85dcfdffff	                           jne 0x400049f	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006c3	       0xf1f440000	                   nop dword [rax + rax]	       260	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_2	CALL_2
0x40006c8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       329	rust-demangle.c	FUNCTION_4
0x40006cd	        0x488d5001	                      lea rdx, [rax + 1]	       329	rust-demangle.c	FUNCTION_4
0x40006d1	      0x4889542410	             mov qword [rsp + 0x10], rdx	       329	rust-demangle.c	FUNCTION_4
0x40006d6	          0xc6003f	                    mov byte [rax], 0x3f	       329	rust-demangle.c	FUNCTION_4
0x40006d9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       331	rust-demangle.c	FUNCTION_4
0x40006de	          0xc60000	                       mov byte [rax], 0	       331	rust-demangle.c	FUNCTION_4
0x40006e1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       332	rust-demangle.c	FUNCTION_4
0x40006e6	    0x644833042528	                xor rax, qword fs:[0x28]	       332	rust-demangle.c	FUNCTION_4
0x40006ef	     0xf8525010000	                           jne 0x400081a	       332	rust-demangle.c	FUNCTION_4
0x40006f5	        0x4883c428	                           add rsp, 0x28	       332	rust-demangle.c	FUNCTION_4
0x40006f9	              0x5b	                                 pop rbx	       332	rust-demangle.c	FUNCTION_4
0x40006fa	              0x5d	                                 pop rbp	       332	rust-demangle.c	FUNCTION_4
0x40006fb	              0xc3	                                     ret	       332	rust-demangle.c	FUNCTION_4
0x40006fc	         0xf1f4000	                         nop dword [rax]	       332	rust-demangle.c	FUNCTION_4
0x4000700	      0xbf00000000	                              mov edi, 0	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000705	      0xb904000000	                              mov ecx, 4	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400070a	          0x4889d6	                            mov rsi, rdx	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400070d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400070f	            0x756f	                           jne 0x4000780	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000711	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       342	rust-demangle.c	FUNCTION_5
0x4000716	          0xc60040	                    mov byte [rax], 0x40	       342	rust-demangle.c	FUNCTION_5
0x4000719	      0x488b442408	                mov rax, qword [rsp + 8]	       344	rust-demangle.c	FUNCTION_5
0x400071e	    0x488344241001	               add qword [rsp + 0x10], 1	       345	rust-demangle.c	FUNCTION_5
0x4000724	        0x488d5004	                      lea rdx, [rax + 4]	       344	rust-demangle.c	FUNCTION_5
0x4000728	      0x4889542408	                mov qword [rsp + 8], rdx	       344	rust-demangle.c	FUNCTION_5
0x400072d	      0xe917fdffff	                           jmp 0x4000449	       344	rust-demangle.c	FUNCTION_5
0x4000732	    0x660f1f440000	                    nop word [rax + rax]	       344	rust-demangle.c	FUNCTION_5
0x4000738	        0x807a0124	                cmp byte [rdx + 1], 0x24	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x400073c	     0xf8541fdffff	                           jne 0x4000483	       287	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000742	        0x4883c201	                              add rdx, 1	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000746	      0x4889542408	                mov qword [rsp + 8], rdx	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x400074b	      0xe9f9fcffff	                           jmp 0x4000449	       288	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000750	          0xc6003a	                    mov byte [rax], 0x3a	       296	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000753	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000758	        0x488d5001	                      lea rdx, [rax + 1]	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400075c	      0x4889542410	             mov qword [rsp + 0x10], rdx	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000761	          0xc6003a	                    mov byte [rax], 0x3a	       297	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000764	      0x488b442408	                mov rax, qword [rsp + 8]	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000769	        0x488d5002	                      lea rdx, [rax + 2]	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400076d	      0x4889542408	                mov qword [rsp + 8], rdx	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000772	      0xe9d2fcffff	                           jmp 0x4000449	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000777	    0x660f1f840000	                    nop word [rax + rax]	       298	rust-demangle.c	FUNCTION_4	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4000780	      0xbf00000000	                              mov edi, 0	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000785	      0xb904000000	                              mov ecx, 4	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400078a	          0x4889d6	                            mov rsi, rdx	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400078d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400078f	            0x7521	                           jne 0x40007b2	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4000791	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       342	rust-demangle.c	FUNCTION_5
0x4000796	          0xc6002a	                    mov byte [rax], 0x2a	       342	rust-demangle.c	FUNCTION_5
0x4000799	      0x488b442408	                mov rax, qword [rsp + 8]	       344	rust-demangle.c	FUNCTION_5
0x400079e	    0x488344241001	               add qword [rsp + 0x10], 1	       345	rust-demangle.c	FUNCTION_5
0x40007a4	        0x488d5004	                      lea rdx, [rax + 4]	       344	rust-demangle.c	FUNCTION_5
0x40007a8	      0x4889542408	                mov qword [rsp + 8], rdx	       344	rust-demangle.c	FUNCTION_5
0x40007ad	      0xe997fcffff	                           jmp 0x4000449	       344	rust-demangle.c	FUNCTION_5
0x40007b2	      0xbf00000000	                              mov edi, 0	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007b7	      0xb904000000	                              mov ecx, 4	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007bc	          0x4889d6	                            mov rsi, rdx	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007bf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007c1	            0x7521	                           jne 0x40007e4	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007c3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       342	rust-demangle.c	FUNCTION_5
0x40007c8	          0xc60026	                    mov byte [rax], 0x26	       342	rust-demangle.c	FUNCTION_5
0x40007cb	      0x488b442408	                mov rax, qword [rsp + 8]	       344	rust-demangle.c	FUNCTION_5
0x40007d0	    0x488344241001	               add qword [rsp + 0x10], 1	       345	rust-demangle.c	FUNCTION_5
0x40007d6	        0x488d5004	                      lea rdx, [rax + 4]	       344	rust-demangle.c	FUNCTION_5
0x40007da	      0x4889542408	                mov qword [rsp + 8], rdx	       344	rust-demangle.c	FUNCTION_5
0x40007df	      0xe965fcffff	                           jmp 0x4000449	       344	rust-demangle.c	FUNCTION_5
0x40007e4	      0xbf00000000	                              mov edi, 0	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007e9	      0xb904000000	                              mov ecx, 4	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007ee	          0x4889d6	                            mov rsi, rdx	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007f1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007f3	     0xf851dfdffff	                           jne 0x4000516	       339	rust-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40007f9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       342	rust-demangle.c	FUNCTION_5
0x40007fe	          0xc6003c	                    mov byte [rax], 0x3c	       342	rust-demangle.c	FUNCTION_5
0x4000801	      0x488b442408	                mov rax, qword [rsp + 8]	       344	rust-demangle.c	FUNCTION_5
0x4000806	    0x488344241001	               add qword [rsp + 0x10], 1	       345	rust-demangle.c	FUNCTION_5
0x400080c	        0x488d5004	                      lea rdx, [rax + 4]	       344	rust-demangle.c	FUNCTION_5
0x4000810	      0x4889542408	                mov qword [rsp + 8], rdx	       344	rust-demangle.c	FUNCTION_5
0x4000815	      0xe92ffcffff	                           jmp 0x4000449	       344	rust-demangle.c	FUNCTION_5
0x400081a	      0xe800000000	                          call 0x400081f	       332	rust-demangle.c	FUNCTION_4
rust_is_mangled	WHILE,0:CALL,3:functions,0:FOR,0:IF,3:ELSE,0:SWITCH,0:DO,0	221
0x40000a0	            0x4154	                                push r12	       123	rust-demangle.c	FUNCTION_1
0x40000a2	              0x55	                                push rbp	       123	rust-demangle.c	FUNCTION_1
0x40000a3	              0x53	                                push rbx	       123	rust-demangle.c	FUNCTION_1
0x40000a4	        0x4883ec20	                           sub rsp, 0x20	       123	rust-demangle.c	FUNCTION_1
0x40000a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       123	rust-demangle.c	FUNCTION_1
0x40000b1	      0x4889442418	             mov qword [rsp + 0x18], rax	       123	rust-demangle.c	FUNCTION_1
0x40000b6	            0x31c0	                            xor eax, eax	       123	rust-demangle.c	FUNCTION_1
0x40000b8	          0x4885ff	                           test rdi, rdi	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000bb	            0x740e	                            je 0x40000cb	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000bd	          0x4889fb	                            mov rbx, rdi	       126	rust-demangle.c	FUNCTION_1	IF_1
0x40000c0	      0xe800000000	                          call 0x40000c5	       129	rust-demangle.c	FUNCTION_1	CALL_1
0x40000c5	        0x4883f813	                           cmp rax, 0x13	       130	rust-demangle.c	FUNCTION_1	IF_2
0x40000c9	            0x7725	                            ja 0x40000f0	       130	rust-demangle.c	FUNCTION_1	IF_2
0x40000cb	            0x31ed	                            xor ebp, ebp	       136	rust-demangle.c	FUNCTION_1	IF_3
0x40000cd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       139	rust-demangle.c	FUNCTION_1
0x40000d2	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       139	rust-demangle.c	FUNCTION_1
0x40000db	            0x89e8	                            mov eax, ebp	       139	rust-demangle.c	FUNCTION_1
0x40000dd	     0xf8526030000	                           jne 0x4000409	       139	rust-demangle.c	FUNCTION_1
0x40000e3	        0x4883c420	                           add rsp, 0x20	       139	rust-demangle.c	FUNCTION_1
0x40000e7	              0x5b	                                 pop rbx	       139	rust-demangle.c	FUNCTION_1
0x40000e8	              0x5d	                                 pop rbp	       139	rust-demangle.c	FUNCTION_1
0x40000e9	            0x415c	                                 pop r12	       139	rust-demangle.c	FUNCTION_1
0x40000eb	              0xc3	                                     ret	       139	rust-demangle.c	FUNCTION_1
0x40000ec	         0xf1f4000	                         nop dword [rax]	       139	rust-demangle.c	FUNCTION_1
0x40000f0	      0x4c8d6403ed	             lea r12, [rbx + rax - 0x13]	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40000f5	      0xbf00000000	                              mov edi, 0	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40000fa	      0xb903000000	                              mov ecx, 3	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40000ff	          0x4c89e6	                            mov rsi, r12	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000102	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000104	        0x400f97c5	                                seta bpl	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000108	           0xf92c0	                                 setb al	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400010b	            0x29c5	                            sub ebp, eax	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400010d	        0x400fbeed	                          movsx ebp, bpl	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000111	            0x85ed	                           test ebp, ebp	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000113	            0x75b6	                           jne 0x40000cb	       153	rust-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4000115	      0x498d542403	                      lea rdx, [r12 + 3]	       155	rust-demangle.c	FUNCTION_2
0x400011a	      0x498d742413	                   lea rsi, [r12 + 0x13]	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x400011f	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_9	CALL_6
0x4000127	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_9	CALL_6
0x4000130	          0x4839f2	                            cmp rdx, rsi	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000133	            0x721d	                            jb 0x4000152	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000135	            0xeb41	                           jmp 0x4000178	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000137	    0x660f1f840000	                    nop word [rax + rax]	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000140	          0x83e830	                           sub eax, 0x30	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000143	            0x4898	                                    cdqe	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000145	        0xc6040401	                 mov byte [rsp + rax], 1	       160	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000149	        0x4883c201	                              add rdx, 1	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x400014d	          0x4839d6	                            cmp rsi, rdx	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000150	            0x7426	                            je 0x4000178	       158	rust-demangle.c	FUNCTION_2	FOR_1
0x4000152	           0xfbe02	                   movsx eax, byte [rdx]	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000155	          0x8d48d0	                   lea ecx, [rax - 0x30]	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x4000158	          0x80f909	                               cmp cl, 9	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x400015b	            0x76e3	                           jbe 0x4000140	       159	rust-demangle.c	FUNCTION_2	FOR_1	IF_2
0x400015d	          0x8d489f	                   lea ecx, [rax - 0x61]	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000160	          0x80f905	                               cmp cl, 5	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000163	     0xf8762ffffff	                            ja 0x40000cb	       161	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000169	          0x83e857	                           sub eax, 0x57	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400016c	            0x4898	                                    cdqe	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400016e	        0xc6040401	                 mov byte [rsp + rax], 1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000172	            0xebd5	                           jmp 0x4000149	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000174	         0xf1f4000	                         nop dword [rax]	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000178	        0x660fefc9	                         pxor xmm1, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400017c	      0x660f6f0424	              movdqa xmm0, xmmword [rsp]	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000181	        0x660f74c1	                      pcmpeqb xmm0, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000185	    0x660fdf050000	        pandn xmm0, xmmword [0x0400018d]	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400018d	        0x660f64c8	                      pcmpgtb xmm1, xmm0	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000191	        0x660f6fd0	                       movdqa xmm2, xmm0	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000195	        0x660f68c1	                    punpckhbw xmm0, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x4000199	        0x660f60d1	                    punpcklbw xmm2, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x400019d	        0x660fefc9	                         pxor xmm1, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001a1	        0x660f6fda	                       movdqa xmm3, xmm2	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001a5	        0x660f6fe1	                       movdqa xmm4, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001a9	        0x660f65c8	                      pcmpgtw xmm1, xmm0	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001ad	        0x660f65e2	                      pcmpgtw xmm4, xmm2	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001b1	        0x660f61dc	                    punpcklwd xmm3, xmm4	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001b5	        0x660f69d4	                    punpckhwd xmm2, xmm4	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001b9	        0x660ffed3	                        paddd xmm2, xmm3	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001bd	        0x660f6fd8	                       movdqa xmm3, xmm0	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001c1	        0x660f69c1	                    punpckhwd xmm0, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001c5	        0x660f61d9	                    punpcklwd xmm3, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001c9	        0x660ffed3	                        paddd xmm2, xmm3	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001cd	        0x660ffec2	                        paddd xmm0, xmm2	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001d1	        0x660f6fc8	                       movdqa xmm1, xmm0	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001d5	      0x660f73d908	                          psrldq xmm1, 8	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001da	        0x660ffec1	                        paddd xmm0, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001de	        0x660f6fc8	                       movdqa xmm1, xmm0	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001e2	      0x660f73d904	                          psrldq xmm1, 4	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001e7	        0x660ffec1	                        paddd xmm0, xmm1	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001eb	        0x660f7ec0	                          movd eax, xmm0	       162	rust-demangle.c	FUNCTION_2	ELSE_1	IF_3
0x40001ef	          0x83e805	                              sub eax, 5	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40001f2	          0x83f80a	                            cmp eax, 0xa	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40001f5	     0xf87d0feffff	                            ja 0x40000cb	       135	rust-demangle.c	FUNCTION_1	IF_3	CALL_2
0x40001fb	          0x4c39e3	                            cmp rbx, r12	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x40001fe	            0x733e	                           jae 0x400023e	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x4000200	           0xfb603	                   movzx eax, byte [rbx]	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000203	          0x83e824	                           sub eax, 0x24	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000206	            0x3c56	                            cmp al, 0x56	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000208	     0xf87bffeffff	                            ja 0x40000cd	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400020e	           0xfb6c0	                           movzx eax, al	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000211	    0xff24c5000000	                       jmp qword [rax*8]	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000218	     0xf1f84000000	                   nop dword [rax + rax]	       181	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000220	      0xbf00000000	                              mov edi, 0	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x4000225	      0xb903000000	                              mov ecx, 3	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x400022a	          0x4889de	                            mov rsi, rbx	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x400022d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x400022f	     0xf8496feffff	                            je 0x40000cb	       210	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_4	CALL_19
0x4000235	        0x4883c301	                              add rbx, 1	       227	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000239	          0x4939dc	                            cmp r12, rbx	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x400023c	            0x77c2	                            ja 0x4000200	       180	rust-demangle.c	FUNCTION_3	WHILE_1
0x400023e	      0xbd01000000	                              mov ebp, 1	       233	rust-demangle.c	FUNCTION_3
0x4000243	      0xe985feffff	                           jmp 0x40000cd	       233	rust-demangle.c	FUNCTION_3
0x4000248	     0xf1f84000000	                   nop dword [rax + rax]	       233	rust-demangle.c	FUNCTION_3
0x4000250	      0xbf00000000	                              mov edi, 0	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x4000255	      0xb903000000	                              mov ecx, 3	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x400025a	          0x4889de	                            mov rsi, rbx	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x400025d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x400025f	            0x750f	                           jne 0x4000270	       184	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1	CALL_1
0x4000261	        0x4883c303	                              add rbx, 3	       185	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1
0x4000265	            0xebd2	                           jmp 0x4000239	       185	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1
0x4000267	    0x660f1f840000	                    nop word [rax + rax]	       185	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_1
0x4000270	      0xbf00000000	                              mov edi, 0	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x4000275	      0xb904000000	                              mov ecx, 4	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400027a	          0x4889de	                            mov rsi, rbx	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400027d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x400027f	     0xf847b010000	                            je 0x4000400	       186	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_2
0x4000285	      0xbf00000000	                              mov edi, 0	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400028a	      0xb904000000	                              mov ecx, 4	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400028f	          0x4889de	                            mov rsi, rbx	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x4000292	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x4000294	     0xf8466010000	                            je 0x4000400	       187	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_3
0x400029a	      0xbf00000000	                              mov edi, 0	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x400029f	      0xb904000000	                              mov ecx, 4	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x40002a4	          0x4889de	                            mov rsi, rbx	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x40002a7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x40002a9	     0xf8451010000	                            je 0x4000400	       188	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_4
0x40002af	      0xbf00000000	                              mov edi, 0	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x40002b4	      0xb904000000	                              mov ecx, 4	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x40002b9	          0x4889de	                            mov rsi, rbx	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x40002bc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x40002be	     0xf843c010000	                            je 0x4000400	       189	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_5
0x40002c4	      0xbf00000000	                              mov edi, 0	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x40002c9	      0xb904000000	                              mov ecx, 4	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x40002ce	          0x4889de	                            mov rsi, rbx	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x40002d1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x40002d3	     0xf8427010000	                            je 0x4000400	       190	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_6
0x40002d9	      0xbf00000000	                              mov edi, 0	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x40002de	      0xb904000000	                              mov ecx, 4	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x40002e3	          0x4889de	                            mov rsi, rbx	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x40002e6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x40002e8	     0xf8412010000	                            je 0x4000400	       191	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_7
0x40002ee	      0xbf00000000	                              mov edi, 0	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002f3	      0xb904000000	                              mov ecx, 4	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002f8	          0x4889de	                            mov rsi, rbx	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002fb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x40002fd	     0xf84fd000000	                            je 0x4000400	       192	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2	CALL_8
0x4000303	      0xba05000000	                              mov edx, 5	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x4000308	      0xbe00000000	                              mov esi, 0	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x400030d	          0x4889df	                            mov rdi, rbx	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x4000310	      0xe800000000	                          call 0x4000315	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x4000315	            0x85c0	                           test eax, eax	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x4000317	     0xf84d6000000	                            je 0x40003f3	       194	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_9
0x400031d	      0xba05000000	                              mov edx, 5	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x4000322	      0xbe00000000	                              mov esi, 0	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x4000327	          0x4889df	                            mov rdi, rbx	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x400032a	      0xe800000000	                          call 0x400032f	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x400032f	            0x85c0	                           test eax, eax	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x4000331	     0xf84bc000000	                            je 0x40003f3	       195	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_10
0x4000337	      0xba05000000	                              mov edx, 5	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x400033c	      0xbe00000000	                              mov esi, 0	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x4000341	          0x4889df	                            mov rdi, rbx	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x4000344	      0xe800000000	                          call 0x4000349	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x4000349	            0x85c0	                           test eax, eax	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x400034b	     0xf84a2000000	                            je 0x40003f3	       196	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_11
0x4000351	      0xba05000000	                              mov edx, 5	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x4000356	      0xbe00000000	                              mov esi, 0	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x400035b	          0x4889df	                            mov rdi, rbx	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x400035e	      0xe800000000	                          call 0x4000363	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x4000363	            0x85c0	                           test eax, eax	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x4000365	     0xf8488000000	                            je 0x40003f3	       197	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_12
0x400036b	      0xba05000000	                              mov edx, 5	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000370	      0xbe00000000	                              mov esi, 0	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000375	          0x4889df	                            mov rdi, rbx	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000378	      0xe800000000	                          call 0x400037d	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x400037d	            0x85c0	                           test eax, eax	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x400037f	            0x7472	                            je 0x40003f3	       198	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_13
0x4000381	      0xba05000000	                              mov edx, 5	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000386	      0xbe00000000	                              mov esi, 0	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x400038b	          0x4889df	                            mov rdi, rbx	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x400038e	      0xe800000000	                          call 0x4000393	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000393	            0x85c0	                           test eax, eax	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000395	            0x745c	                            je 0x40003f3	       199	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_14
0x4000397	      0xba05000000	                              mov edx, 5	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x400039c	      0xbe00000000	                              mov esi, 0	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x40003a1	          0x4889df	                            mov rdi, rbx	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x40003a4	      0xe800000000	                          call 0x40003a9	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x40003a9	            0x85c0	                           test eax, eax	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x40003ab	            0x7446	                            je 0x40003f3	       200	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_15
0x40003ad	      0xba05000000	                              mov edx, 5	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x40003b2	      0xbe00000000	                              mov esi, 0	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x40003b7	          0x4889df	                            mov rdi, rbx	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x40003ba	      0xe800000000	                          call 0x40003bf	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x40003bf	            0x85c0	                           test eax, eax	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x40003c1	            0x7430	                            je 0x40003f3	       201	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_16
0x40003c3	      0xba05000000	                              mov edx, 5	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x40003c8	      0xbe00000000	                              mov esi, 0	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x40003cd	          0x4889df	                            mov rdi, rbx	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x40003d0	      0xe800000000	                          call 0x40003d5	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x40003d5	            0x85c0	                           test eax, eax	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x40003d7	            0x741a	                            je 0x40003f3	       202	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_17
0x40003d9	      0xba05000000	                              mov edx, 5	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x40003de	      0xbe00000000	                              mov esi, 0	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x40003e3	          0x4889df	                            mov rdi, rbx	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x40003e6	      0xe800000000	                          call 0x40003eb	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x40003eb	            0x85c0	                           test eax, eax	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x40003ed	     0xf85d8fcffff	                           jne 0x40000cb	       203	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3	CALL_18
0x40003f3	        0x4883c305	                              add rbx, 5	       204	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3
0x40003f7	      0xe93dfeffff	                           jmp 0x4000239	       204	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3
0x40003fc	         0xf1f4000	                         nop dword [rax]	       204	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_2	IF_3
0x4000400	        0x4883c304	                              add rbx, 4	       193	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4000404	      0xe930feffff	                           jmp 0x4000239	       193	rust-demangle.c	FUNCTION_3	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4000409	      0xe800000000	                          call 0x400040e	       139	rust-demangle.c	FUNCTION_1
