target_supports_multi_process	CALL,0:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	8
0x40006e0	    0x488b05000000	            mov rax, qword [0x040006e7] 	       285	target.c	FUNCTION_15
0x40006e7	    0x488b80300100	           mov rax, qword [rax + 0x130] 	       285	target.c	FUNCTION_15
0x40006ee	          0x4885c0	                           test rax, rax	       286	target.c	FUNCTION_15
0x40006f1	            0x7405	                            je 0x40006f8	       286	target.c	FUNCTION_15
0x40006f3	            0xffe0	                                 jmp rax	       286	target.c	FUNCTION_15
0x40006f5	           0xf1f00	                         nop dword [rax]	       286	target.c	FUNCTION_15
0x40006f8	            0x31c0	                            xor eax, eax	       287	target.c	FUNCTION_15
0x40006fa	              0xc3	                                     ret	       287	target.c	FUNCTION_15
default_breakpoint_kind_from_pc	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	25
0x40008e0	        0x4883ec18	                           sub rsp, 0x18	       357	target.c	FUNCTION_21
0x40008e4	    0x64488b042528	                mov rax, qword fs:[0x28]	       357	target.c	FUNCTION_21
0x40008ed	      0x4889442408	                mov qword [rsp + 8], rax	       357	target.c	FUNCTION_21
0x40008f2	            0x31c0	                            xor eax, eax	       357	target.c	FUNCTION_21
0x40008f4	    0x488b05000000	            mov rax, qword [0x040008fb] 	       360	target.c	FUNCTION_21	CALL_1
0x40008fb	    0xc74424040000	                  mov dword [rsp + 4], 0	       358	target.c	FUNCTION_21
0x4000903	    0x488b80380200	           mov rax, qword [rax + 0x238] 	       360	target.c	FUNCTION_21	CALL_1
0x400090a	          0x4885c0	                           test rax, rax	       360	target.c	FUNCTION_21	CALL_1
0x400090d	            0x7422	                            je 0x4000931	       360	target.c	FUNCTION_21	CALL_1
0x400090f	            0x31ff	                            xor edi, edi	       362	target.c	FUNCTION_21
0x4000911	      0x488d742404	                      lea rsi, [rsp + 4]	       362	target.c	FUNCTION_21
0x4000916	            0xffd0	                                call rax	       362	target.c	FUNCTION_21
0x4000918	      0x488b542408	                mov rdx, qword [rsp + 8]	       364	target.c	FUNCTION_21
0x400091d	    0x644833142528	                xor rdx, qword fs:[0x28]	       364	target.c	FUNCTION_21
0x4000926	        0x8b442404	                mov eax, dword [rsp + 4]	       364	target.c	FUNCTION_21
0x400092a	            0x7524	                           jne 0x4000950	       364	target.c	FUNCTION_21
0x400092c	        0x4883c418	                           add rsp, 0x18	       364	target.c	FUNCTION_21
0x4000930	              0xc3	                                     ret	       364	target.c	FUNCTION_21
0x4000931	    0x41b800000000	                              mov r8d, 0	       360	target.c	FUNCTION_21	CALL_1
0x4000937	      0xb900000000	                              mov ecx, 0	       360	target.c	FUNCTION_21	CALL_1
0x400093c	      0xba00000000	                              mov edx, 0	       360	target.c	FUNCTION_21	CALL_1
0x4000941	      0xbe68010000	                          mov esi, 0x168	       360	target.c	FUNCTION_21	CALL_1
0x4000946	      0xbf00000000	                              mov edi, 0	       360	target.c	FUNCTION_21	CALL_1
0x400094b	      0xe800000000	                          call 0x4000950	       360	target.c	FUNCTION_21	CALL_1
0x4000950	      0xe800000000	                          call 0x4000955	       364	target.c	FUNCTION_21
read_inferior_memory	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	22
0x4000260	            0x4155	                                push r13	       126	target.c	FUNCTION_4
0x4000262	            0x4154	                                push r12	       126	target.c	FUNCTION_4
0x4000264	          0x4189d4	                           mov r12d, edx	       126	target.c	FUNCTION_4
0x4000267	              0x55	                                push rbp	       126	target.c	FUNCTION_4
0x4000268	              0x53	                                push rbx	       126	target.c	FUNCTION_4
0x4000269	          0x4889f5	                            mov rbp, rsi	       126	target.c	FUNCTION_4
0x400026c	          0x4889fb	                            mov rbx, rdi	       126	target.c	FUNCTION_4
0x400026f	        0x4883ec08	                              sub rsp, 8	       126	target.c	FUNCTION_4
0x4000273	    0x488b05000000	            mov rax, qword [0x0400027a] 	       128	target.c	FUNCTION_4
0x400027a	          0xff5070	                 call qword [rax + 0x70]	       128	target.c	FUNCTION_4
0x400027d	          0x4489e2	                           mov edx, r12d	       129	target.c	FUNCTION_4	CALL_1
0x4000280	          0x4889ee	                            mov rsi, rbp	       129	target.c	FUNCTION_4	CALL_1
0x4000283	          0x4889df	                            mov rdi, rbx	       129	target.c	FUNCTION_4	CALL_1
0x4000286	          0x4189c5	                           mov r13d, eax	       128	target.c	FUNCTION_4
0x4000289	      0xe800000000	                          call 0x400028e	       129	target.c	FUNCTION_4	CALL_1
0x400028e	        0x4883c408	                              add rsp, 8	       131	target.c	FUNCTION_4
0x4000292	          0x4489e8	                           mov eax, r13d	       131	target.c	FUNCTION_4
0x4000295	              0x5b	                                 pop rbx	       131	target.c	FUNCTION_4
0x4000296	              0x5d	                                 pop rbp	       131	target.c	FUNCTION_4
0x4000297	            0x415c	                                 pop r12	       131	target.c	FUNCTION_4
0x4000299	            0x415d	                                 pop r13	       131	target.c	FUNCTION_4
0x400029b	              0xc3	                                     ret	       131	target.c	FUNCTION_4
target_read_uint32	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	2
0x40002b0	      0xba04000000	                              mov edx, 4	       146	target.c	FUNCTION_6	CALL_1
0x40002b5	            0xeba9	jmp sym.read_inferior_memory_unsignedlonglong_unsignedchar__int	       146	target.c	FUNCTION_6	CALL_1
target_write_memory	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	1
0x4000350	      0xe96bffffff	jmp sym.write_inferior_memory_unsignedlonglong_unsignedcharconst__int	       177	target.c	FUNCTION_8	CALL_1
write_inferior_memory	CALL,5:IF,1:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	41
0x40002c0	            0x4155	                                push r13	       152	target.c	FUNCTION_7
0x40002c2	            0x4154	                                push r12	       152	target.c	FUNCTION_7
0x40002c4	          0x4989f4	                            mov r12, rsi	       152	target.c	FUNCTION_7
0x40002c7	              0x55	                                push rbp	       152	target.c	FUNCTION_7
0x40002c8	              0x53	                                push rbx	       152	target.c	FUNCTION_7
0x40002c9	          0x4889fd	                            mov rbp, rdi	       152	target.c	FUNCTION_7
0x40002cc	            0x89d3	                            mov ebx, edx	       152	target.c	FUNCTION_7
0x40002ce	        0x4883ec08	                              sub rsp, 8	       152	target.c	FUNCTION_7
0x40002d2	    0x488b3d000000	            mov rdi, qword [0x040002d9] 	       159	target.c	FUNCTION_7	IF_1
0x40002d9	          0x4885ff	                           test rdi, rdi	       159	target.c	FUNCTION_7	IF_1
0x40002dc	            0x7405	                            je 0x40002e3	       159	target.c	FUNCTION_7	IF_1
0x40002de	      0xe800000000	                          call 0x40002e3	       160	target.c	FUNCTION_7	CALL_1
0x40002e3	          0x4c63eb	                         movsxd r13, ebx	       162	target.c	FUNCTION_7	CALL_2
0x40002e6	          0x4c89ef	                            mov rdi, r13	       162	target.c	FUNCTION_7	CALL_2
0x40002e9	      0xe800000000	                          call 0x40002ee	       162	target.c	FUNCTION_7	CALL_2
0x40002ee	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_27	CALL_3
0x40002f1	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_27	CALL_3
0x40002f4	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_27	CALL_3
0x40002f7	    0x488905000000	            mov qword [0x040002fe], rax 	       162	target.c	FUNCTION_7	CALL_2
0x40002fe	      0xe800000000	                          call 0x4000303	        53	string3.h	FUNCTION_27	CALL_3
0x4000303	            0x89d9	                            mov ecx, ebx	       164	target.c	FUNCTION_7	CALL_4
0x4000305	          0x4c89e2	                            mov rdx, r12	       164	target.c	FUNCTION_7	CALL_4
0x4000308	          0x4889c6	                            mov rsi, rax	       164	target.c	FUNCTION_7	CALL_4
0x400030b	          0x4889ef	                            mov rdi, rbp	       164	target.c	FUNCTION_7	CALL_4
0x400030e	      0xe800000000	                          call 0x4000313	       164	target.c	FUNCTION_7	CALL_4
0x4000313	    0x488b05000000	            mov rax, qword [0x0400031a] 	       165	target.c	FUNCTION_7
0x400031a	            0x89da	                            mov edx, ebx	       165	target.c	FUNCTION_7
0x400031c	          0x4889ef	                            mov rdi, rbp	       165	target.c	FUNCTION_7
0x400031f	    0x488b35000000	            mov rsi, qword [0x04000326] 	       165	target.c	FUNCTION_7
0x4000326	          0xff5078	                 call qword [rax + 0x78]	       165	target.c	FUNCTION_7
0x4000329	    0x488b3d000000	            mov rdi, qword [0x04000330] 	       166	target.c	FUNCTION_7	CALL_5
0x4000330	            0x89c3	                            mov ebx, eax	       165	target.c	FUNCTION_7
0x4000332	      0xe800000000	                          call 0x4000337	       166	target.c	FUNCTION_7	CALL_5
0x4000337	    0x48c705000000	               mov qword [0x04000342], 0	       167	target.c	FUNCTION_7
0x4000342	        0x4883c408	                              add rsp, 8	       170	target.c	FUNCTION_7
0x4000346	            0x89d8	                            mov eax, ebx	       170	target.c	FUNCTION_7
0x4000348	              0x5b	                                 pop rbx	       170	target.c	FUNCTION_7
0x4000349	              0x5d	                                 pop rbp	       170	target.c	FUNCTION_7
0x400034a	            0x415c	                                 pop r12	       170	target.c	FUNCTION_7
0x400034c	            0x415d	                                 pop r13	       170	target.c	FUNCTION_7
0x400034e	              0xc3	                                     ret	       170	target.c	FUNCTION_7
mywait	CALL,4:IF,6:SWITCH,0:DO,0:ELSE,1:functions,0:FOR,0:WHILE,0	83
0x4000360	            0x4155	                                push r13	       183	target.c	FUNCTION_9
0x4000362	            0x4154	                                push r12	       183	target.c	FUNCTION_9
0x4000364	          0x4189cc	                           mov r12d, ecx	       183	target.c	FUNCTION_9
0x4000367	              0x55	                                push rbp	       183	target.c	FUNCTION_9
0x4000368	              0x53	                                push rbx	       183	target.c	FUNCTION_9
0x4000369	          0x4889f5	                            mov rbp, rsi	       183	target.c	FUNCTION_9
0x400036c	          0x4889fb	                            mov rbx, rdi	       183	target.c	FUNCTION_9
0x400036f	        0x4883ec48	                           sub rsp, 0x48	       183	target.c	FUNCTION_9
0x4000373	    0x64488b042528	                mov rax, qword fs:[0x28]	       183	target.c	FUNCTION_9
0x400037c	      0x4889442438	             mov qword [rsp + 0x38], rax	       183	target.c	FUNCTION_9
0x4000381	            0x31c0	                            xor eax, eax	       183	target.c	FUNCTION_9
0x4000383	            0x85c9	                           test ecx, ecx	       186	target.c	FUNCTION_9	IF_1
0x4000385	            0x740a	                            je 0x4000391	       186	target.c	FUNCTION_9	IF_1
0x4000387	    0xc70500000000	               mov dword [0x04000391], 1	       187	target.c	FUNCTION_9	IF_1
0x4000391	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       187	target.c	FUNCTION_9	IF_1
0x4000396	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	       187	target.c	FUNCTION_9	IF_1
0x400039e	        0x4883ec08	                              sub rsp, 8	       243	target.c	FUNCTION_11
0x40003a2	    0x488b8c248000	            mov rcx, qword [rsp + 0x80] 	       243	target.c	FUNCTION_11
0x40003aa	      0x4889442408	                mov qword [rsp + 8], rax	       243	target.c	FUNCTION_11
0x40003af	      0x4889742418	             mov qword [rsp + 0x18], rsi	       243	target.c	FUNCTION_11
0x40003b4	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       243	target.c	FUNCTION_11
0x40003b9	              0x56	                                push rsi	       243	target.c	FUNCTION_11
0x40003ba	          0x4889ee	                            mov rsi, rbp	       243	target.c	FUNCTION_11
0x40003bd	              0x51	                                push rcx	       243	target.c	FUNCTION_11
0x40003be	              0x50	                                push rax	       243	target.c	FUNCTION_11
0x40003bf	    0x488b05000000	            mov rax, qword [0x040003c6] 	       243	target.c	FUNCTION_11
0x40003c6	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       243	target.c	FUNCTION_11
0x40003cb	          0xff5048	                 call qword [rax + 0x48]	       243	target.c	FUNCTION_11
0x40003ce	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       189	target.c	FUNCTION_9	CALL_1
0x40003d3	          0x488903	                    mov qword [rbx], rax	       189	target.c	FUNCTION_9	CALL_1
0x40003d6	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       189	target.c	FUNCTION_9	CALL_1
0x40003db	        0x48894308	                mov qword [rbx + 8], rax	       189	target.c	FUNCTION_9	CALL_1
0x40003df	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       189	target.c	FUNCTION_9	CALL_1
0x40003e4	        0x4883c420	                           add rsp, 0x20	       193	target.c	FUNCTION_9	IF_2
0x40003e8	        0x837d0003	                      cmp dword [rbp], 3	       193	target.c	FUNCTION_9	IF_2
0x40003ec	        0x48894310	             mov qword [rbx + 0x10], rax	       189	target.c	FUNCTION_9	CALL_1
0x40003f0	            0x7446	                            je 0x4000438	       193	target.c	FUNCTION_9	IF_2
0x40003f2	      0xe800000000	                          call 0x40003f7	       202	target.c	FUNCTION_9	IF_3	CALL_2
0x40003f7	            0x85c0	                           test eax, eax	       202	target.c	FUNCTION_9	IF_3	CALL_2
0x40003f9	            0x750c	                           jne 0x4000407	       202	target.c	FUNCTION_9	IF_3	CALL_2
0x40003fb	          0x8b4500	                    mov eax, dword [rbp]	       204	target.c	FUNCTION_9	IF_3	IF_4
0x40003fe	            0x85c0	                           test eax, eax	       204	target.c	FUNCTION_9	IF_3	IF_4
0x4000400	            0x7446	                            je 0x4000448	       204	target.c	FUNCTION_9	IF_3	IF_4
0x4000402	          0x83f802	                              cmp eax, 2	       207	target.c	FUNCTION_9	IF_3	ELSE_1	IF_5
0x4000405	            0x7461	                            je 0x4000468	       207	target.c	FUNCTION_9	IF_3	ELSE_1	IF_5
0x4000407	          0x4585e4	                         test r12d, r12d	       213	target.c	FUNCTION_9	IF_6
0x400040a	            0x740a	                            je 0x4000416	       213	target.c	FUNCTION_9	IF_6
0x400040c	    0xc70500000000	               mov dword [0x04000416], 0	       214	target.c	FUNCTION_9	IF_6
0x4000416	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       217	target.c	FUNCTION_9
0x400041b	    0x644833142528	                xor rdx, qword fs:[0x28]	       217	target.c	FUNCTION_9
0x4000424	          0x4889d8	                            mov rax, rbx	       217	target.c	FUNCTION_9
0x4000427	            0x7574	                           jne 0x400049d	       217	target.c	FUNCTION_9
0x4000429	        0x4883c448	                           add rsp, 0x48	       217	target.c	FUNCTION_9
0x400042d	              0x5b	                                 pop rbx	       217	target.c	FUNCTION_9
0x400042e	              0x5d	                                 pop rbp	       217	target.c	FUNCTION_9
0x400042f	            0x415c	                                 pop r12	       217	target.c	FUNCTION_9
0x4000431	            0x415d	                                 pop r13	       217	target.c	FUNCTION_9
0x4000433	              0xc3	                                     ret	       217	target.c	FUNCTION_9
0x4000434	         0xf1f4000	                         nop dword [rax]	       217	target.c	FUNCTION_9
0x4000438	    0xc74500010000	                      mov dword [rbp], 1	       194	target.c	FUNCTION_9	IF_2
0x400043f	            0xebb1	                           jmp 0x40003f2	       194	target.c	FUNCTION_9	IF_2
0x4000441	     0xf1f80000000	                         nop dword [rax]	       194	target.c	FUNCTION_9	IF_2
0x4000448	          0x8b4d08	                mov ecx, dword [rbp + 8]	        98	stdio2.h	CALL_13
0x400044b	    0x488b3d000000	            mov rdi, qword [0x04000452] 	        98	stdio2.h	CALL_13
0x4000452	      0xba00000000	                              mov edx, 0	        98	stdio2.h	CALL_13
0x4000457	      0xbe01000000	                              mov esi, 1	        98	stdio2.h	CALL_13
0x400045c	      0xe800000000	                          call 0x4000461	        98	stdio2.h	CALL_13
0x4000461	            0xeba4	                           jmp 0x4000407	        98	stdio2.h	CALL_13
0x4000463	       0xf1f440000	                   nop dword [rax + rax]	        98	stdio2.h	CALL_13
0x4000468	          0x8b7d08	                mov edi, dword [rbp + 8]	       208	target.c	FUNCTION_9	IF_3	ELSE_1	IF_5
0x400046b	      0xe800000000	                          call 0x4000470	       208	target.c	FUNCTION_9	IF_3	ELSE_1	IF_5
0x4000470	          0x8b7d08	                mov edi, dword [rbp + 8]	       208	target.c	FUNCTION_9	IF_3	ELSE_1	IF_5
0x4000473	          0x4989c5	                            mov r13, rax	       208	target.c	FUNCTION_9	IF_3	ELSE_1	IF_5
0x4000476	      0xe800000000	                          call 0x400047b	       208	target.c	FUNCTION_9	IF_3	ELSE_1	IF_5
0x400047b	    0x488b3d000000	            mov rdi, qword [0x04000482] 	        98	stdio2.h	CALL_13
0x4000482	            0x89c1	                            mov ecx, eax	        98	stdio2.h	CALL_13
0x4000484	          0x4d89e8	                             mov r8, r13	        98	stdio2.h	CALL_13
0x4000487	      0xba00000000	                              mov edx, 0	        98	stdio2.h	CALL_13
0x400048c	      0xbe01000000	                              mov esi, 1	        98	stdio2.h	CALL_13
0x4000491	            0x31c0	                            xor eax, eax	        98	stdio2.h	CALL_13
0x4000493	      0xe800000000	                          call 0x4000498	        98	stdio2.h	CALL_13
0x4000498	      0xe96affffff	                           jmp 0x4000407	        98	stdio2.h	CALL_13
0x400049d	      0xe800000000	                          call 0x40004a2	       217	target.c	FUNCTION_9
target_read_memory	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	1
0x40002a0	            0xebbe	jmp sym.read_inferior_memory_unsignedlonglong_unsignedchar__int	       138	target.c	FUNCTION_5	CALL_1
target_pid_to_str	CALL,14:IF,4:SWITCH,0:DO,0:ELSE,4:functions,0:FOR,0:WHILE,0	76
0x4000780	              0x53	                                push rbx	       314	target.c	FUNCTION_18
0x4000781	      0xbe00000000	                              mov esi, 0	       317	target.c	FUNCTION_18	IF_1	CALL_1
0x4000786	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       317	target.c	FUNCTION_18	IF_1	CALL_1
0x400078b	      0xe800000000	                          call 0x4000790	       317	target.c	FUNCTION_18	IF_1	CALL_1
0x4000790	            0x85c0	                           test eax, eax	       317	target.c	FUNCTION_18	IF_1	CALL_1
0x4000792	     0xf8588000000	                           jne 0x4000820	       317	target.c	FUNCTION_18	IF_1	CALL_1
0x4000798	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       319	target.c	FUNCTION_18	ELSE_1	IF_2	CALL_3
0x400079d	      0xbe00000000	                              mov esi, 0	       319	target.c	FUNCTION_18	ELSE_1	IF_2	CALL_3
0x40007a2	      0xe800000000	                          call 0x40007a7	       319	target.c	FUNCTION_18	ELSE_1	IF_2	CALL_3
0x40007a7	            0x85c0	                           test eax, eax	       319	target.c	FUNCTION_18	ELSE_1	IF_2	CALL_3
0x40007a9	            0x7555	                           jne 0x4000800	       319	target.c	FUNCTION_18	ELSE_1	IF_2	CALL_3
0x40007ab	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       321	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_5
0x40007b0	      0xe800000000	                          call 0x40007b5	       321	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_5
0x40007b5	          0x4885c0	                           test rax, rax	       321	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_5
0x40007b8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       322	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x40007bd	     0xf85ad000000	                           jne 0x4000870	       321	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_5
0x40007c3	      0xe800000000	                          call 0x40007c8	       324	target.c	FUNCTION_18	ELSE_3	IF_4	CALL_9
0x40007c8	          0x4885c0	                           test rax, rax	       324	target.c	FUNCTION_18	ELSE_3	IF_4	CALL_9
0x40007cb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       325	target.c	FUNCTION_18	ELSE_3	IF_4	CALL_10
0x40007d0	            0x756e	                           jne 0x4000840	       324	target.c	FUNCTION_18	ELSE_3	IF_4	CALL_9
0x40007d2	      0xe800000000	                          call 0x40007d7	       328	target.c	FUNCTION_18	ELSE_4	CALL_13
0x40007d7	      0xba00000000	                              mov edx, 0	       329	target.c	FUNCTION_18	CALL_14
0x40007dc	            0x89c1	                            mov ecx, eax	       329	target.c	FUNCTION_18	CALL_14
0x40007de	      0xbe50000000	                           mov esi, 0x50	       329	target.c	FUNCTION_18	CALL_14
0x40007e3	      0xbf00000000	                              mov edi, 0	       329	target.c	FUNCTION_18	CALL_14
0x40007e8	            0x31c0	                            xor eax, eax	       329	target.c	FUNCTION_18	CALL_14
0x40007ea	      0xe800000000	                          call 0x40007ef	       329	target.c	FUNCTION_18	CALL_14
0x40007ef	      0xb800000000	                              mov eax, 0	       332	target.c	FUNCTION_18
0x40007f4	              0x5b	                                 pop rbx	       332	target.c	FUNCTION_18
0x40007f5	              0xc3	                                     ret	       332	target.c	FUNCTION_18
0x40007f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       332	target.c	FUNCTION_18
0x4000800	      0xba00000000	                              mov edx, 0	       320	target.c	FUNCTION_18	ELSE_1	IF_2
0x4000805	      0xbe50000000	                           mov esi, 0x50	       320	target.c	FUNCTION_18	ELSE_1	IF_2
0x400080a	      0xbf00000000	                              mov edi, 0	       320	target.c	FUNCTION_18	ELSE_1	IF_2
0x400080f	            0x31c0	                            xor eax, eax	       320	target.c	FUNCTION_18	ELSE_1	IF_2
0x4000811	      0xe800000000	                          call 0x4000816	       320	target.c	FUNCTION_18	ELSE_1	IF_2
0x4000816	      0xb800000000	                              mov eax, 0	       332	target.c	FUNCTION_18
0x400081b	              0x5b	                                 pop rbx	       332	target.c	FUNCTION_18
0x400081c	              0xc3	                                     ret	       332	target.c	FUNCTION_18
0x400081d	           0xf1f00	                         nop dword [rax]	       332	target.c	FUNCTION_18
0x4000820	      0xba00000000	                              mov edx, 0	       318	target.c	FUNCTION_18	CALL_2
0x4000825	      0xbe50000000	                           mov esi, 0x50	       318	target.c	FUNCTION_18	CALL_2
0x400082a	      0xbf00000000	                              mov edi, 0	       318	target.c	FUNCTION_18	CALL_2
0x400082f	            0x31c0	                            xor eax, eax	       318	target.c	FUNCTION_18	CALL_2
0x4000831	      0xe800000000	                          call 0x4000836	       318	target.c	FUNCTION_18	CALL_2
0x4000836	      0xb800000000	                              mov eax, 0	       332	target.c	FUNCTION_18
0x400083b	              0x5b	                                 pop rbx	       332	target.c	FUNCTION_18
0x400083c	              0xc3	                                     ret	       332	target.c	FUNCTION_18
0x400083d	           0xf1f00	                         nop dword [rax]	       332	target.c	FUNCTION_18
0x4000840	      0xe800000000	                          call 0x4000845	       325	target.c	FUNCTION_18	ELSE_3	IF_4	CALL_10
0x4000845	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       325	target.c	FUNCTION_18	ELSE_3	IF_4	CALL_10
0x400084a	          0x4889c3	                            mov rbx, rax	       325	target.c	FUNCTION_18	ELSE_3	IF_4	CALL_10
0x400084d	      0xe800000000	                          call 0x4000852	       325	target.c	FUNCTION_18	ELSE_3	IF_4	CALL_10
0x4000852	          0x4989d8	                             mov r8, rbx	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x4000855	            0x89c1	                            mov ecx, eax	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x4000857	      0xba00000000	                              mov edx, 0	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x400085c	      0xbe50000000	                           mov esi, 0x50	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x4000861	      0xbf00000000	                              mov edi, 0	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x4000866	            0x31c0	                            xor eax, eax	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x4000868	      0xe800000000	                          call 0x400086d	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x400086d	            0xeba7	                           jmp 0x4000816	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x400086f	              0x90	                                     nop	       326	target.c	FUNCTION_18	ELSE_3	IF_4
0x4000870	      0xe800000000	                          call 0x4000875	       322	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x4000875	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       322	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x400087a	          0x4889c3	                            mov rbx, rax	       322	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x400087d	      0xe800000000	                          call 0x4000882	       322	target.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x4000882	          0x4989d8	                             mov r8, rbx	       323	target.c	FUNCTION_18	ELSE_2	IF_3
0x4000885	            0x89c1	                            mov ecx, eax	       323	target.c	FUNCTION_18	ELSE_2	IF_3
0x4000887	      0xba00000000	                              mov edx, 0	       323	target.c	FUNCTION_18	ELSE_2	IF_3
0x400088c	      0xbe50000000	                           mov esi, 0x50	       323	target.c	FUNCTION_18	ELSE_2	IF_3
0x4000891	      0xbf00000000	                              mov edi, 0	       323	target.c	FUNCTION_18	ELSE_2	IF_3
0x4000896	            0x31c0	                            xor eax, eax	       323	target.c	FUNCTION_18	ELSE_2	IF_3
0x4000898	      0xe800000000	                          call 0x400089d	       323	target.c	FUNCTION_18	ELSE_2	IF_3
0x400089d	      0xb800000000	                              mov eax, 0	       332	target.c	FUNCTION_18
0x40008a2	              0x5b	                                 pop rbx	       332	target.c	FUNCTION_18
0x40008a3	              0xc3	                                     ret	       332	target.c	FUNCTION_18
target_mourn_inferior	CALL,2:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	11
0x40005d0	              0x53	                                push rbx	       250	target.c	FUNCTION_12
0x40005d1	    0x488b05000000	            mov rax, qword [0x040005d8] 	       251	target.c	FUNCTION_12	CALL_2
0x40005d8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       251	target.c	FUNCTION_12	CALL_2
0x40005dd	        0x488b5828	            mov rbx, qword [rax + 0x28] 	       251	target.c	FUNCTION_12	CALL_2
0x40005e1	      0xe800000000	                          call 0x40005e6	       251	target.c	FUNCTION_12	CALL_2
0x40005e6	            0x89c7	                            mov edi, eax	       251	target.c	FUNCTION_12	CALL_2
0x40005e8	      0xe800000000	                          call 0x40005ed	       251	target.c	FUNCTION_12	CALL_2
0x40005ed	          0x4889c7	                            mov rdi, rax	       251	target.c	FUNCTION_12	CALL_2
0x40005f0	            0xffd3	                                call rbx	       251	target.c	FUNCTION_12	CALL_2
0x40005f2	              0x5b	                                 pop rbx	       252	target.c	FUNCTION_12
0x40005f3	              0xc3	                                     ret	       252	target.c	FUNCTION_12
start_non_stop	CALL,0:IF,2:SWITCH,0:DO,0:ELSE,1:functions,0:FOR,0:WHILE,0	11
0x4000700	    0x488b05000000	            mov rax, qword [0x04000707] 	       292	target.c	FUNCTION_16	IF_1
0x4000707	    0x488b80280100	           mov rax, qword [rax + 0x128] 	       292	target.c	FUNCTION_16	IF_1
0x400070e	          0x4885c0	                           test rax, rax	       292	target.c	FUNCTION_16	IF_1
0x4000711	            0x7405	                            je 0x4000718	       292	target.c	FUNCTION_16	IF_1
0x4000713	            0xffe0	                                 jmp rax	       300	target.c	FUNCTION_16
0x4000715	           0xf1f00	                         nop dword [rax]	       300	target.c	FUNCTION_16
0x4000718	            0x31c0	                            xor eax, eax	       294	target.c	FUNCTION_16	IF_1	IF_2
0x400071a	            0x85ff	                           test edi, edi	       294	target.c	FUNCTION_16	IF_1	IF_2
0x400071c	           0xf95c0	                                setne al	       294	target.c	FUNCTION_16	IF_1	IF_2
0x400071f	            0xf7d8	                                 neg eax	       294	target.c	FUNCTION_16	IF_1	IF_2
0x4000721	              0xc3	                                     ret	       301	target.c	FUNCTION_16
target_continue	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	23
0x4000670	        0x4883ec48	                           sub rsp, 0x48	       271	target.c	FUNCTION_14
0x4000674	    0x64488b042528	                mov rax, qword fs:[0x28]	       271	target.c	FUNCTION_14
0x400067d	      0x4889442438	             mov qword [rsp + 0x38], rax	       271	target.c	FUNCTION_14
0x4000682	            0x31c0	                            xor eax, eax	       271	target.c	FUNCTION_14
0x4000684	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       274	target.c	FUNCTION_14
0x4000689	    0xc74424180000	               mov dword [rsp + 0x18], 0	       275	target.c	FUNCTION_14
0x4000691	        0x48890424	                    mov qword [rsp], rax	       274	target.c	FUNCTION_14
0x4000695	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       274	target.c	FUNCTION_14
0x400069a	      0x4889442408	                mov qword [rsp + 8], rax	       274	target.c	FUNCTION_14
0x400069f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       274	target.c	FUNCTION_14
0x40006a4	      0x4889442410	             mov qword [rsp + 0x10], rax	       274	target.c	FUNCTION_14
0x40006a9	      0xe800000000	                          call 0x40006ae	       276	target.c	FUNCTION_14	CALL_1
0x40006ae	        0x8944241c	             mov dword [rsp + 0x1c], eax	       276	target.c	FUNCTION_14	CALL_1
0x40006b2	    0x488b05000000	            mov rax, qword [0x040006b9] 	       277	target.c	FUNCTION_14
0x40006b9	      0xbe01000000	                              mov esi, 1	       277	target.c	FUNCTION_14
0x40006be	          0x4889e7	                            mov rdi, rsp	       277	target.c	FUNCTION_14
0x40006c1	          0xff5040	                 call qword [rax + 0x40]	       277	target.c	FUNCTION_14
0x40006c4	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       278	target.c	FUNCTION_14
0x40006c9	    0x644833042528	                xor rax, qword fs:[0x28]	       278	target.c	FUNCTION_14
0x40006d2	            0x7505	                           jne 0x40006d9	       278	target.c	FUNCTION_14
0x40006d4	        0x4883c448	                           add rsp, 0x48	       278	target.c	FUNCTION_14
0x40006d8	              0xc3	                                     ret	       278	target.c	FUNCTION_14
0x40006d9	      0xe800000000	                          call 0x40006de	       278	target.c	FUNCTION_14
target_stop_and_wait	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	37
0x40004b0	              0x53	                                push rbx	       223	target.c	FUNCTION_10
0x40004b1	      0xbe01000000	                              mov esi, 1	       231	target.c	FUNCTION_10
0x40004b6	        0x4883c480	             add rsp, 0xffffffffffffff80	       223	target.c	FUNCTION_10
0x40004ba	    0x8b1d00000000	            mov ebx, dword [0x040004c0] 	       225	target.c	FUNCTION_10
0x40004c0	    0x64488b042528	                mov rax, qword fs:[0x28]	       223	target.c	FUNCTION_10
0x40004c9	      0x4889442478	             mov qword [rsp + 0x78], rax	       223	target.c	FUNCTION_10
0x40004ce	            0x31c0	                            xor eax, eax	       223	target.c	FUNCTION_10
0x40004d0	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       228	target.c	FUNCTION_10
0x40004d8	    0xc74424580200	               mov dword [rsp + 0x58], 2	       229	target.c	FUNCTION_10
0x40004e0	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       231	target.c	FUNCTION_10
0x40004e5	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	       230	target.c	FUNCTION_10
0x40004ed	      0x4889442440	             mov qword [rsp + 0x40], rax	       228	target.c	FUNCTION_10
0x40004f2	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       228	target.c	FUNCTION_10
0x40004fa	      0x4889442448	             mov qword [rsp + 0x48], rax	       228	target.c	FUNCTION_10
0x40004ff	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       228	target.c	FUNCTION_10
0x4000507	      0x4889442450	             mov qword [rsp + 0x50], rax	       228	target.c	FUNCTION_10
0x400050c	    0x488b05000000	            mov rax, qword [0x04000513] 	       231	target.c	FUNCTION_10
0x4000513	          0xff5040	                 call qword [rax + 0x40]	       231	target.c	FUNCTION_10
0x4000516	        0x4883ec08	                              sub rsp, 8	       234	target.c	FUNCTION_10	CALL_1
0x400051a	            0x31c9	                            xor ecx, ecx	       234	target.c	FUNCTION_10	CALL_1
0x400051c	            0x31d2	                            xor edx, edx	       234	target.c	FUNCTION_10	CALL_1
0x400051e	    0xffb424a80000	                 push qword [rsp + 0xa8]	       234	target.c	FUNCTION_10	CALL_1
0x4000525	    0xffb424a80000	                 push qword [rsp + 0xa8]	       234	target.c	FUNCTION_10	CALL_1
0x400052c	    0xffb424a80000	                 push qword [rsp + 0xa8]	       234	target.c	FUNCTION_10	CALL_1
0x4000533	    0xc70500000000	               mov dword [0x0400053d], 1	       233	target.c	FUNCTION_10
0x400053d	      0x488d742440	                   lea rsi, [rsp + 0x40]	       234	target.c	FUNCTION_10	CALL_1
0x4000542	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       234	target.c	FUNCTION_10	CALL_1
0x4000547	      0xe800000000	                          call 0x400054c	       234	target.c	FUNCTION_10	CALL_1
0x400054c	        0x4883c420	                           add rsp, 0x20	       236	target.c	FUNCTION_10
0x4000550	    0x891d00000000	            mov dword [0x04000556], ebx 	       235	target.c	FUNCTION_10
0x4000556	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       236	target.c	FUNCTION_10
0x400055b	    0x644833042528	                xor rax, qword fs:[0x28]	       236	target.c	FUNCTION_10
0x4000564	            0x7506	                           jne 0x400056c	       236	target.c	FUNCTION_10
0x4000566	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       236	target.c	FUNCTION_10
0x400056a	              0x5b	                                 pop rbx	       236	target.c	FUNCTION_10
0x400056b	              0xc3	                                     ret	       236	target.c	FUNCTION_10
0x400056c	      0xe800000000	                          call 0x4000571	       236	target.c	FUNCTION_10
set_desired_thread	CALL,2:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	13
0x4000040	        0x4883ec08	                              sub rsp, 8	        28	target.c	FUNCTION_1
0x4000044	      0xe800000000	                          call 0x4000049	        29	target.c	FUNCTION_1	CALL_1
0x4000049	        0x4883ec08	                              sub rsp, 8	        30	target.c	FUNCTION_1	CALL_2
0x400004d	          0xff7028	                 push qword [rax + 0x28]	        30	target.c	FUNCTION_1	CALL_2
0x4000050	          0xff7020	                 push qword [rax + 0x20]	        30	target.c	FUNCTION_1	CALL_2
0x4000053	          0xff7018	                 push qword [rax + 0x18]	        30	target.c	FUNCTION_1	CALL_2
0x4000056	      0xe800000000	                          call 0x400005b	        30	target.c	FUNCTION_1	CALL_2
0x400005b	          0x4885c0	                           test rax, rax	        33	target.c	FUNCTION_1
0x400005e	    0x488905000000	            mov qword [0x04000065], rax 	        32	target.c	FUNCTION_1
0x4000065	           0xf95c0	                                setne al	        33	target.c	FUNCTION_1
0x4000068	        0x4883c428	                           add rsp, 0x28	        34	target.c	FUNCTION_1
0x400006c	           0xfb6c0	                           movzx eax, al	        33	target.c	FUNCTION_1
0x400006f	              0xc3	                                     ret	        34	target.c	FUNCTION_1
kill_inferior	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	8
0x40008b0	              0x53	                                push rbx	       336	target.c	FUNCTION_19
0x40008b1	            0x89fb	                            mov ebx, edi	       336	target.c	FUNCTION_19
0x40008b3	      0xe800000000	                          call 0x40008b8	       337	target.c	FUNCTION_19	CALL_1
0x40008b8	    0x488b05000000	            mov rax, qword [0x040008bf] 	       339	target.c	FUNCTION_19
0x40008bf	            0x89df	                            mov edi, ebx	       339	target.c	FUNCTION_19
0x40008c1	              0x5b	                                 pop rbx	       340	target.c	FUNCTION_19
0x40008c2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       339	target.c	FUNCTION_19
0x40008c6	            0xffe0	                                 jmp rax	       339	target.c	FUNCTION_19
target_continue_no_signal	CALL,0:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	22
0x4000600	        0x4883ec48	                           sub rsp, 0x48	       258	target.c	FUNCTION_13
0x4000604	      0xbe01000000	                              mov esi, 1	       264	target.c	FUNCTION_13
0x4000609	    0x64488b042528	                mov rax, qword fs:[0x28]	       258	target.c	FUNCTION_13
0x4000612	      0x4889442438	             mov qword [rsp + 0x38], rax	       258	target.c	FUNCTION_13
0x4000617	            0x31c0	                            xor eax, eax	       258	target.c	FUNCTION_13
0x4000619	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       261	target.c	FUNCTION_13
0x400061e	    0xc74424180000	               mov dword [rsp + 0x18], 0	       262	target.c	FUNCTION_13
0x4000626	          0x4889e7	                            mov rdi, rsp	       264	target.c	FUNCTION_13
0x4000629	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       263	target.c	FUNCTION_13
0x4000631	        0x48890424	                    mov qword [rsp], rax	       261	target.c	FUNCTION_13
0x4000635	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       261	target.c	FUNCTION_13
0x400063a	      0x4889442408	                mov qword [rsp + 8], rax	       261	target.c	FUNCTION_13
0x400063f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       261	target.c	FUNCTION_13
0x4000644	      0x4889442410	             mov qword [rsp + 0x10], rax	       261	target.c	FUNCTION_13
0x4000649	    0x488b05000000	            mov rax, qword [0x04000650] 	       264	target.c	FUNCTION_13
0x4000650	          0xff5040	                 call qword [rax + 0x40]	       264	target.c	FUNCTION_13
0x4000653	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       265	target.c	FUNCTION_13
0x4000658	    0x644833042528	                xor rax, qword fs:[0x28]	       265	target.c	FUNCTION_13
0x4000661	            0x7505	                           jne 0x4000668	       265	target.c	FUNCTION_13
0x4000663	        0x4883c448	                           add rsp, 0x48	       265	target.c	FUNCTION_13
0x4000667	              0xc3	                                     ret	       265	target.c	FUNCTION_13
0x4000668	      0xe800000000	                          call 0x400066d	       265	target.c	FUNCTION_13
set_target_ops	CALL,1:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	20
0x4000730	              0x53	                                push rbx	       305	target.c	FUNCTION_17
0x4000731	          0x4889fb	                            mov rbx, rdi	       305	target.c	FUNCTION_17
0x4000734	      0xbf70020000	                          mov edi, 0x270	       110	poison.h	FUNCTION_69
0x4000739	      0xe800000000	                          call 0x400073e	       110	poison.h	FUNCTION_69
0x400073e	    0x488905000000	            mov qword [0x04000745], rax 	       306	target.c	FUNCTION_17
0x4000745	          0x488b13	                    mov rdx, qword [rbx]	        53	string3.h	FUNCTION_27	CALL_3
0x4000748	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_27	CALL_3
0x400074c	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_27	CALL_3
0x400074f	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_27	CALL_3
0x4000753	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_27	CALL_3
0x4000756	    0x488b93680200	           mov rdx, qword [rbx + 0x268] 	        53	string3.h	FUNCTION_27	CALL_3
0x400075d	    0x488990680200	            mov qword [rax + 0x268], rdx	        53	string3.h	FUNCTION_27	CALL_3
0x4000764	          0x4829f8	                            sub rax, rdi	        53	string3.h	FUNCTION_27	CALL_3
0x4000767	          0x4829c6	                            sub rsi, rax	        53	string3.h	FUNCTION_27	CALL_3
0x400076a	       0x570020000	                          add eax, 0x270	        53	string3.h	FUNCTION_27	CALL_3
0x400076f	          0xc1e803	                              shr eax, 3	        53	string3.h	FUNCTION_27	CALL_3
0x4000772	            0x89c1	                            mov ecx, eax	        53	string3.h	FUNCTION_27	CALL_3
0x4000774	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_27	CALL_3
0x4000777	              0x5b	                                 pop rbx	       308	target.c	FUNCTION_17
0x4000778	              0xc3	                                     ret	       308	target.c	FUNCTION_17
target_can_do_hardware_single_step	CALL,0:IF,0:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	2
0x40008d0	      0xb801000000	                              mov eax, 1	       348	target.c	FUNCTION_20
0x40008d5	              0xc3	                                     ret	       348	target.c	FUNCTION_20
prepare_to_access_memory	CALL,8:IF,9:SWITCH,0:DO,0:ELSE,3:functions,0:FOR,0:WHILE,0	109
0x40000d0	            0x4157	                                push r15	        45	target.c	FUNCTION_2
0x40000d2	            0x4156	                                push r14	        45	target.c	FUNCTION_2
0x40000d4	            0x4155	                                push r13	        45	target.c	FUNCTION_2
0x40000d6	            0x4154	                                push r12	        45	target.c	FUNCTION_2
0x40000d8	              0x55	                                push rbp	        45	target.c	FUNCTION_2
0x40000d9	              0x53	                                push rbx	        45	target.c	FUNCTION_2
0x40000da	        0x4883ec18	                           sub rsp, 0x18	        45	target.c	FUNCTION_2
0x40000de	      0xe800000000	                          call 0x40000e3	        46	target.c	FUNCTION_2	CALL_1
0x40000e3	          0x4989c5	                            mov r13, rax	        46	target.c	FUNCTION_2	CALL_1
0x40000e6	        0x488b4018	            mov rax, qword [rax + 0x18] 	        57	target.c	FUNCTION_2
0x40000ea	    0x488905000000	            mov qword [0x040000f1], rax 	        57	target.c	FUNCTION_2
0x40000f1	        0x498b4520	            mov rax, qword [r13 + 0x20] 	        57	target.c	FUNCTION_2
0x40000f5	    0x488905000000	            mov qword [0x040000fc], rax 	        57	target.c	FUNCTION_2
0x40000fc	        0x498b4528	            mov rax, qword [r13 + 0x28] 	        57	target.c	FUNCTION_2
0x4000100	    0x488905000000	            mov qword [0x04000107], rax 	        57	target.c	FUNCTION_2
0x4000107	    0x488b05000000	            mov rax, qword [0x0400010e] 	        59	target.c	FUNCTION_2	IF_1
0x400010e	        0x488b4060	            mov rax, qword [rax + 0x60] 	        59	target.c	FUNCTION_2	IF_1
0x4000112	          0x4885c0	                           test rax, rax	        59	target.c	FUNCTION_2	IF_1
0x4000115	            0x740a	                            je 0x4000121	        59	target.c	FUNCTION_2	IF_1
0x4000117	            0xffd0	                                call rax	        63	target.c	FUNCTION_2	IF_1	CALL_2
0x4000119	            0x85c0	                           test eax, eax	        64	target.c	FUNCTION_2	IF_1	IF_2
0x400011b	     0xf85cf000000	                           jne 0x40001f0	        64	target.c	FUNCTION_2	IF_1	IF_2
0x4000121	    0x488b05000000	            mov rax, qword [0x04000128] 	        64	target.c	FUNCTION_2	IF_1	IF_2
0x4000128	          0x4531ff	                          xor r15d, r15d	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x400012b	          0x4531f6	                          xor r14d, r14d	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x400012e	    0x448b25000000	           mov r12d, dword [0x04000135] 	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x4000135	    0x48c744240800	                  mov qword [rsp + 8], 0	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x400013e	    0x483d00000000	                              cmp rax, 0	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x4000144	            0x751a	                           jne 0x4000160	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x4000146	      0xe99b000000	                           jmp 0x40001e6	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x400014b	       0xf1f440000	                   nop dword [rax + rax]	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x4000150	    0x4881fd000000	                              cmp rbp, 0	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x4000157	          0x4889e8	                            mov rax, rbp	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x400015a	     0xf84a0000000	                            je 0x4000200	       146	gdbthread.h	FUNCTION_59	WHILE_1	CALL_2
0x4000160	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       150	gdbthread.h	FUNCTION_59	WHILE_1	CALL_3
0x4000164	          0x488b28	                    mov rbp, qword [rax]	       167	stl_list.h	FUNCTION_65
0x4000167	          0x443b23	                   cmp r12d, dword [rbx]	       163	gdbthread.h	FUNCTION_60	IF_1	CALL_2
0x400016a	            0x75e4	                           jne 0x4000150	       163	gdbthread.h	FUNCTION_60	IF_1	CALL_2
0x400016c	    0x488b05000000	            mov rax, qword [0x04000173] 	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x4000173	        0x4883ec08	                              sub rsp, 8	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x4000177	          0xff7310	                 push qword [rbx + 0x10]	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x400017a	          0xff7308	                    push qword [rbx + 8]	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x400017d	            0xff33	                        push qword [rbx]	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x400017f	          0xff5038	                 call qword [rax + 0x38]	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x4000182	        0x4883c420	                           add rsp, 0x20	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x4000186	            0x85c0	                           test eax, eax	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x4000188	            0x74c6	                            je 0x4000150	        70	target.c	FUNCTION_2	IF_3	CALL_5
0x400018a	          0x4d85ff	                           test r15, r15	        73	target.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x400018d	     0xf84a5000000	                            je 0x4000238	        73	target.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4000193	          0x4d85f6	                           test r14, r14	        76	target.c	FUNCTION_2	IF_3	IF_5
0x4000196	        0x4c0f44f3	                          cmove r14, rbx	        76	target.c	FUNCTION_2	IF_3	IF_5
0x400019a	    0x48837c240800	                  cmp qword [rsp + 8], 0	        79	target.c	FUNCTION_2	IF_3	IF_6
0x40001a0	            0x75ae	                           jne 0x4000150	        79	target.c	FUNCTION_2	IF_3	IF_6
0x40001a2	            0x8b03	                    mov eax, dword [rbx]	        94	ptid.h	
0x40001a4	    0x390500000000	            cmp dword [0x040001aa], eax 	        94	ptid.h	
0x40001aa	            0x75a4	                           jne 0x4000150	        94	ptid.h	
0x40001ac	        0x488b4308	                mov rax, qword [rbx + 8]	        93	ptid.h	
0x40001b0	    0x483905000000	            cmp qword [0x040001b7], rax 	        93	ptid.h	
0x40001b7	            0x7597	                           jne 0x4000150	        93	ptid.h	
0x40001b9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        79	target.c	FUNCTION_2	IF_3	IF_6
0x40001bd	    0x483905000000	            cmp qword [0x040001c4], rax 	        79	target.c	FUNCTION_2	IF_3	IF_6
0x40001c4	    0x480f455c2408	             cmovne rbx, qword [rsp + 8]	        79	target.c	FUNCTION_2	IF_3	IF_6
0x40001ca	      0x48895c2408	                mov qword [rsp + 8], rbx	        79	target.c	FUNCTION_2	IF_3	IF_6
0x40001cf	      0xe97cffffff	                           jmp 0x4000150	        79	target.c	FUNCTION_2	IF_3	IF_6
0x40001d4	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	        79	target.c	FUNCTION_2	IF_3	IF_6
0x40001d9	          0x4d85ff	                           test r15, r15	        93	target.c	FUNCTION_2	ELSE_1	IF_8
0x40001dc	            0x7527	                           jne 0x4000205	        93	target.c	FUNCTION_2	ELSE_1	IF_8
0x40001de	          0x4d85f6	                           test r14, r14	        95	target.c	FUNCTION_2	ELSE_2	IF_9
0x40001e1	          0x4d89f7	                            mov r15, r14	        95	target.c	FUNCTION_2	ELSE_2	IF_9
0x40001e4	            0x751f	                           jne 0x4000205	        95	target.c	FUNCTION_2	ELSE_2	IF_9
0x40001e6	      0xe800000000	                          call 0x40001eb	        99	target.c	FUNCTION_2	ELSE_3	CALL_7
0x40001eb	      0xb801000000	                              mov eax, 1	       100	target.c	FUNCTION_2	ELSE_3
0x40001f0	        0x4883c418	                           add rsp, 0x18	       107	target.c	FUNCTION_2
0x40001f4	              0x5b	                                 pop rbx	       107	target.c	FUNCTION_2
0x40001f5	              0x5d	                                 pop rbp	       107	target.c	FUNCTION_2
0x40001f6	            0x415c	                                 pop r12	       107	target.c	FUNCTION_2
0x40001f8	            0x415d	                                 pop r13	       107	target.c	FUNCTION_2
0x40001fa	            0x415e	                                 pop r14	       107	target.c	FUNCTION_2
0x40001fc	            0x415f	                                 pop r15	       107	target.c	FUNCTION_2
0x40001fe	              0xc3	                                     ret	       107	target.c	FUNCTION_2
0x40001ff	              0x90	                                     nop	       107	target.c	FUNCTION_2
0x4000200	          0x4d85ff	                           test r15, r15	        91	target.c	FUNCTION_2	IF_7
0x4000203	            0x74cf	                            je 0x40001d4	        91	target.c	FUNCTION_2	IF_7
0x4000205	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       208	gdbthread.h	FUNCTION_62
0x4000209	        0x498b5708	                mov rdx, qword [r15 + 8]	       208	gdbthread.h	FUNCTION_62
0x400020d	          0x418b0f	                    mov ecx, dword [r15]	       104	target.c	FUNCTION_2	CALL_8
0x4000210	    0x4c893d000000	            mov qword [0x04000217], r15 	       103	target.c	FUNCTION_2
0x4000217	        0x49894528	             mov qword [r13 + 0x28], rax	       104	target.c	FUNCTION_2	CALL_8
0x400021b	        0x49895520	             mov qword [r13 + 0x20], rdx	       104	target.c	FUNCTION_2	CALL_8
0x400021f	            0x31c0	                            xor eax, eax	       106	target.c	FUNCTION_2
0x4000221	        0x41894d18	             mov dword [r13 + 0x18], ecx	       104	target.c	FUNCTION_2	CALL_8
0x4000225	        0x4883c418	                           add rsp, 0x18	       107	target.c	FUNCTION_2
0x4000229	              0x5b	                                 pop rbx	       107	target.c	FUNCTION_2
0x400022a	              0x5d	                                 pop rbp	       107	target.c	FUNCTION_2
0x400022b	            0x415c	                                 pop r12	       107	target.c	FUNCTION_2
0x400022d	            0x415d	                                 pop r13	       107	target.c	FUNCTION_2
0x400022f	            0x415e	                                 pop r14	       107	target.c	FUNCTION_2
0x4000231	            0x415f	                                 pop r15	       107	target.c	FUNCTION_2
0x4000233	              0xc3	                                     ret	       107	target.c	FUNCTION_2
0x4000234	         0xf1f4000	                         nop dword [rax]	       107	target.c	FUNCTION_2
0x4000238	    0x488b05000000	            mov rax, qword [0x0400023f] 	        72	target.c	FUNCTION_2	IF_3	IF_4
0x400023f	    0x488b80900100	           mov rax, qword [rax + 0x190] 	        72	target.c	FUNCTION_2	IF_3	IF_4
0x4000246	          0x4885c0	                           test rax, rax	        72	target.c	FUNCTION_2	IF_3	IF_4
0x4000249	     0xf8444ffffff	                            je 0x4000193	        72	target.c	FUNCTION_2	IF_3	IF_4
0x400024f	          0x4889df	                            mov rdi, rbx	        73	target.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4000252	            0xffd0	                                call rax	        73	target.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4000254	            0x85c0	                           test eax, eax	        73	target.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4000256	        0x4c0f45fb	                         cmovne r15, rbx	        73	target.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x400025a	      0xe934ffffff	                           jmp 0x4000193	        73	target.c	FUNCTION_2	IF_3	IF_4	CALL_6
done_accessing_memory	CALL,3:IF,1:SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:WHILE,0	22
0x4000070	              0x53	                                push rbx	       113	target.c	FUNCTION_3
0x4000071	      0xe800000000	                          call 0x4000076	       114	target.c	FUNCTION_3	CALL_1
0x4000076	          0x4889c3	                            mov rbx, rax	       114	target.c	FUNCTION_3	CALL_1
0x4000079	    0x488b05000000	            mov rax, qword [0x04000080] 	       116	target.c	FUNCTION_3	IF_1
0x4000080	        0x488b4068	            mov rax, qword [rax + 0x68] 	       116	target.c	FUNCTION_3	IF_1
0x4000084	          0x4885c0	                           test rax, rax	       116	target.c	FUNCTION_3	IF_1
0x4000087	            0x7402	                            je 0x400008b	       116	target.c	FUNCTION_3	IF_1
0x4000089	            0xffd0	                                call rax	       117	target.c	FUNCTION_3	CALL_2
0x400008b	    0x488b05000000	            mov rax, qword [0x04000092] 	       120	target.c	FUNCTION_3
0x4000092	        0x4883ec08	                              sub rsp, 8	       121	target.c	FUNCTION_3	CALL_3
0x4000096	        0x48894318	             mov qword [rbx + 0x18], rax	       120	target.c	FUNCTION_3
0x400009a	    0x488b05000000	            mov rax, qword [0x040000a1] 	       120	target.c	FUNCTION_3
0x40000a1	        0x48894320	             mov qword [rbx + 0x20], rax	       120	target.c	FUNCTION_3
0x40000a5	    0x488b05000000	            mov rax, qword [0x040000ac] 	       120	target.c	FUNCTION_3
0x40000ac	        0x48894328	             mov qword [rbx + 0x28], rax	       120	target.c	FUNCTION_3
0x40000b0	              0x50	                                push rax	       121	target.c	FUNCTION_3	CALL_3
0x40000b1	          0xff7320	                 push qword [rbx + 0x20]	       121	target.c	FUNCTION_3	CALL_3
0x40000b4	          0xff7318	                 push qword [rbx + 0x18]	       121	target.c	FUNCTION_3	CALL_3
0x40000b7	      0xe800000000	                          call 0x40000bc	       121	target.c	FUNCTION_3	CALL_3
0x40000bc	        0x4883c420	                           add rsp, 0x20	       122	target.c	FUNCTION_3
0x40000c0	              0x5b	                                 pop rbx	       122	target.c	FUNCTION_3
0x40000c1	              0xc3	                                     ret	       122	target.c	FUNCTION_3
