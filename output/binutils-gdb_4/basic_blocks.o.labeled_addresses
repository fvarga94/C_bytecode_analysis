bb_write_blocks	ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,8:IF,2:functions,0:FOR,4	101
0x4000920	    0x488b05000000	            mov rax, qword [0x04000927] 	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000927	    0x488b0d000000	            mov rcx, qword [0x0400092e] 	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400092e	            0x4156	                                push r14	       209	basic_blocks.c	FUNCTION_5
0x4000930	            0x4155	                                push r13	       209	basic_blocks.c	FUNCTION_5
0x4000932	          0x4989f6	                            mov r14, rsi	       209	basic_blocks.c	FUNCTION_5
0x4000935	            0x4154	                                push r12	       209	basic_blocks.c	FUNCTION_5
0x4000937	              0x55	                                push rbp	       209	basic_blocks.c	FUNCTION_5
0x4000938	          0x4889fd	                            mov rbp, rdi	       209	basic_blocks.c	FUNCTION_5
0x400093b	              0x53	                                push rbx	       209	basic_blocks.c	FUNCTION_5
0x400093c	            0x31db	                            xor ebx, ebx	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400093e	          0x4839c1	                            cmp rcx, rax	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000941	     0xf8686000000	                           jbe 0x40009cd	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000947	    0x660f1f840000	                    nop word [rax + rax]	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000950	      0x4883783800	               cmp qword [rax + 0x38], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000955	     0xf8407010000	                            je 0x4000a62	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400095b	      0x4883784000	               cmp qword [rax + 0x40], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000960	     0xf8403010000	                            je 0x4000a69	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000966	      0x4883784800	               cmp qword [rax + 0x48], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400096b	     0xf8402010000	                            je 0x4000a73	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000971	      0x4883785000	               cmp qword [rax + 0x50], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000976	     0xf8401010000	                            je 0x4000a7d	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400097c	      0x4883785800	               cmp qword [rax + 0x58], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000981	     0xf8400010000	                            je 0x4000a87	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000987	      0x4883786000	               cmp qword [rax + 0x60], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400098c	     0xf8409010000	                            je 0x4000a9b	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000992	      0x4883786800	               cmp qword [rax + 0x68], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000997	     0xf84f4000000	                            je 0x4000a91	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400099d	      0x4883787000	               cmp qword [rax + 0x70], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x40009a2	     0xf8407010000	                            je 0x4000aaf	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x40009a8	      0x4883787800	               cmp qword [rax + 0x78], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x40009ad	     0xf84f2000000	                            je 0x4000aa5	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x40009b3	    0x4883b8800000	               cmp qword [rax + 0x80], 1	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x40009bb	            0x19d2	                            sbb edx, edx	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x40009bd	          0x83c20a	                            add edx, 0xa	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x40009c0	    0x480558010000	                          add rax, 0x158	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x40009c6	             0x1d3	                            add ebx, edx	       219	basic_blocks.c	FUNCTION_5	FOR_1
0x40009c8	          0x4839c1	                            cmp rcx, rax	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x40009cb	            0x7783	                            ja 0x4000950	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x40009cd	      0xbe02000000	                              mov esi, 2	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x40009d2	          0x4889ef	                            mov rdi, rbp	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x40009d5	      0xe800000000	                          call 0x40009da	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x40009da	            0x85c0	                           test eax, eax	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x40009dc	     0xf85d7000000	                           jne 0x4000ab9	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x40009e2	            0x89de	                            mov esi, ebx	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40009e4	          0x4889ef	                            mov rdi, rbp	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40009e7	      0xe800000000	                          call 0x40009ec	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40009ec	            0x85c0	                           test eax, eax	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40009ee	     0xf85c5000000	                           jne 0x4000ab9	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40009f4	    0x4c8b2d000000	            mov r13, qword [0x040009fb] 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40009fb	    0x4c392d000000	            cmp qword [0x04000a02], r13 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a02	            0x7655	                           jbe 0x4000a59	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a04	         0xf1f4000	                         nop dword [rax]	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a08	        0x498d5d38	                   lea rbx, [r13 + 0x38]	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a0c	    0x4d8da5880000	                   lea r12, [r13 + 0x88]	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a13	       0xf1f440000	                   nop dword [rax + rax]	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a18	          0x488b33	                    mov rsi, qword [rbx]	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000a1b	          0x4885f6	                           test rsi, rsi	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000a1e	            0x7429	                            je 0x4000a49	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000a20	          0x4889ef	                            mov rdi, rbp	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x4000a23	      0xe800000000	                          call 0x4000a28	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x4000a28	            0x85c0	                           test eax, eax	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x4000a2a	     0xf8589000000	                           jne 0x4000ab9	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x4000a30	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x4000a34	          0x4889ef	                            mov rdi, rbp	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x4000a37	      0xe800000000	                          call 0x4000a3c	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x4000a3c	            0x85c0	                           test eax, eax	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x4000a3e	            0x7579	                           jne 0x4000ab9	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x4000a40	        0x4883c308	                              add rbx, 8	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x4000a44	          0x4c39e3	                            cmp rbx, r12	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000a47	            0x75cf	                           jne 0x4000a18	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000a49	    0x4981c5580100	                          add r13, 0x158	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a50	    0x4c392d000000	            cmp qword [0x04000a57], r13 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a57	            0x77af	                            ja 0x4000a08	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000a59	              0x5b	                                 pop rbx	       243	basic_blocks.c	FUNCTION_5
0x4000a5a	              0x5d	                                 pop rbp	       243	basic_blocks.c	FUNCTION_5
0x4000a5b	            0x415c	                                 pop r12	       243	basic_blocks.c	FUNCTION_5
0x4000a5d	            0x415d	                                 pop r13	       243	basic_blocks.c	FUNCTION_5
0x4000a5f	            0x415e	                                 pop r14	       243	basic_blocks.c	FUNCTION_5
0x4000a61	              0xc3	                                     ret	       243	basic_blocks.c	FUNCTION_5
0x4000a62	            0x31d2	                            xor edx, edx	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a64	      0xe957ffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a69	      0xba01000000	                              mov edx, 1	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a6e	      0xe94dffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a73	      0xba02000000	                              mov edx, 2	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a78	      0xe943ffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a7d	      0xba03000000	                              mov edx, 3	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a82	      0xe939ffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a87	      0xba04000000	                              mov edx, 4	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a8c	      0xe92fffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a91	      0xba06000000	                              mov edx, 6	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a96	      0xe925ffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000a9b	      0xba05000000	                              mov edx, 5	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000aa0	      0xe91bffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000aa5	      0xba08000000	                              mov edx, 8	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000aaa	      0xe911ffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000aaf	      0xba07000000	                              mov edx, 7	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000ab4	      0xe907ffffff	                           jmp 0x40009c0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000ab9	          0x4c89f7	                            mov rdi, r14	       226	basic_blocks.c	FUNCTION_5	IF_1	CALL_3
0x4000abc	      0xe800000000	                          call 0x4000ac1	       226	basic_blocks.c	FUNCTION_5	IF_1	CALL_3
0x4000ac1	      0xbf01000000	                              mov edi, 1	       227	basic_blocks.c	FUNCTION_5	IF_1	CALL_4
0x4000ac6	      0xe800000000	                          call 0x4000acb	       227	basic_blocks.c	FUNCTION_5	IF_1	CALL_4
cmp_bb	ELSE,2:SWITCH,0:WHILE,0:DO,0:CALL,1:IF,5:functions,0:FOR,0	36
0x4000090	              0x55	                                push rbp	        57	basic_blocks.c	FUNCTION_1
0x4000091	              0x53	                                push rbx	        57	basic_blocks.c	FUNCTION_1
0x4000092	        0x4883ec08	                              sub rsp, 8	        57	basic_blocks.c	FUNCTION_1
0x4000096	          0x488b1f	                    mov rbx, qword [rdi]	        59	basic_blocks.c	FUNCTION_1
0x4000099	          0x488b2e	                    mov rbp, qword [rsi]	        60	basic_blocks.c	FUNCTION_1
0x400009c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a0	          0x4885c0	                           test rax, rax	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a3	            0x7433	                            je 0x40000d8	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a5	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a9	          0x4885d2	                           test rdx, rdx	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000ac	            0x742a	                            je 0x40000d8	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000ae	        0x488b7208	                mov rsi, qword [rdx + 8]	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000b2	        0x488b7808	                mov rdi, qword [rax + 8]	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000b6	      0xe800000000	                          call 0x40000bb	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000bb	            0x85c0	                           test eax, eax	        66	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000bd	            0x750c	                           jne 0x40000cb	        66	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000bf	          0x8b4320	            mov eax, dword [rbx + 0x20] 	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c2	          0x8b5520	            mov edx, dword [rbp + 0x20] 	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c5	            0x39d0	                            cmp eax, edx	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c7	            0x740f	                            je 0x40000d8	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c9	            0x29d0	                            sub eax, edx	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000cb	        0x4883c408	                              add rsp, 8	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000cf	              0x5b	                                 pop rbx	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000d0	              0x5d	                                 pop rbp	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000d1	              0xc3	                                     ret	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000d2	    0x660f1f440000	                    nop word [rax + rax]	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000d8	        0x488b4500	                    mov rax, qword [rbp]	        73	basic_blocks.c	FUNCTION_1	IF_4
0x40000dc	          0x483903	                    cmp qword [rbx], rax	        73	basic_blocks.c	FUNCTION_1	IF_4
0x40000df	      0xbaffffffff	                     mov edx, 0xffffffff	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000e4	           0xf97c0	                                 seta al	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000e7	           0xfb6c0	                           movzx eax, al	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000ea	           0xf42c2	                          cmovb eax, edx	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000ed	        0x4883c408	                              add rsp, 8	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000f1	              0x5b	                                 pop rbx	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000f2	              0x5d	                                 pop rbp	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000f3	              0xc3	                                     ret	        79	basic_blocks.c	FUNCTION_1	ELSE_2
print_exec_counts	ELSE,1:SWITCH,0:WHILE,0:DO,0:CALL,9:IF,4:functions,0:FOR,3	165
0x4000ad0	            0x4157	                                push r15	       252	basic_blocks.c	FUNCTION_6
0x4000ad2	            0x4156	                                push r14	       252	basic_blocks.c	FUNCTION_6
0x4000ad4	            0x4155	                                push r13	       252	basic_blocks.c	FUNCTION_6
0x4000ad6	            0x4154	                                push r12	       252	basic_blocks.c	FUNCTION_6
0x4000ad8	              0x55	                                push rbp	       252	basic_blocks.c	FUNCTION_6
0x4000ad9	              0x53	                                push rbx	       252	basic_blocks.c	FUNCTION_6
0x4000ada	        0x4883ec38	                           sub rsp, 0x38	       252	basic_blocks.c	FUNCTION_6
0x4000ade	    0x448b15000000	           mov r10d, dword [0x04000ae5] 	       256	basic_blocks.c	FUNCTION_6	IF_1
0x4000ae5	          0x4585d2	                         test r10d, r10d	       256	basic_blocks.c	FUNCTION_6	IF_1
0x4000ae8	     0xf844c020000	                            je 0x4000d3a	       256	basic_blocks.c	FUNCTION_6	IF_1
0x4000aee	    0xc70500000000	               mov dword [0x04000af8], 0	       257	basic_blocks.c	FUNCTION_6	IF_1
0x4000af8	    0x8b3d00000000	            mov edi, dword [0x04000afe] 	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x4000afe	        0x48c1e703	                              shl rdi, 3	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x4000b02	      0xe800000000	                          call 0x4000b07	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x4000b07	    0x488b1d000000	            mov rbx, qword [0x04000b0e] 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b0e	    0x483b1d000000	            cmp rbx, qword [0x04000b15] 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b15	      0x4889442420	             mov qword [rsp + 0x20], rax	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x4000b1a	     0xf8329020000	                           jae 0x4000d49	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b20	            0x31ed	                            xor ebp, ebp	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b22	            0xeb22	                           jmp 0x4000b46	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b24	         0xf1f4000	                         nop dword [rax]	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b28	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000b2d	            0x89e8	                            mov eax, ebp	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000b2f	          0x83c501	                              add ebp, 1	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000b32	        0x48891cc1	            mov qword [rcx + rax*8], rbx	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000b36	    0x4881c3580100	                          add rbx, 0x158	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b3d	    0x48391d000000	            cmp qword [0x04000b44], rbx 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b44	            0x763a	                           jbe 0x4000b80	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000b46	          0x488b33	                    mov rsi, qword [rbx]	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000b49	      0xbf00000000	                              mov edi, 0	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000b4e	      0xe800000000	                          call 0x4000b53	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000b53	          0x4885c0	                           test rax, rax	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000b56	            0x75d0	                           jne 0x4000b28	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000b58	    0x448b0d000000	            mov r9d, dword [0x04000b5f] 	       271	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000b5f	          0x4585c9	                           test r9d, r9d	       271	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000b62	            0x75d2	                           jne 0x4000b36	       271	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000b64	          0x488b33	                    mov rsi, qword [rbx]	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x4000b67	      0xbf00000000	                              mov edi, 0	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x4000b6c	      0xe800000000	                          call 0x4000b71	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x4000b71	          0x4885c0	                           test rax, rax	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x4000b74	            0x75c0	                           jne 0x4000b36	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x4000b76	            0xebb0	                           jmp 0x4000b28	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x4000b78	     0xf1f84000000	                   nop dword [rax + rax]	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x4000b80	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000b85	            0x89ee	                            mov esi, ebp	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000b87	      0xb900000000	                              mov ecx, 0	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000b8c	      0xba08000000	                              mov edx, 8	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000b91	          0x4889df	                            mov rdi, rbx	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000b94	      0xe800000000	                          call 0x4000b99	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000b99	            0x85ed	                           test ebp, ebp	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000b9b	     0xf8432010000	                            je 0x4000cd3	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000ba1	          0x8d45ff	                      lea eax, [rbp - 1]	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000ba4	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000ba9	      0x488d44c308	              lea rax, [rbx + rax*8 + 8]	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000bae	      0x4889442428	             mov qword [rsp + 0x28], rax	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000bb3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000bb8	     0xf1f84000000	                   nop dword [rax + rax]	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000bc0	          0x4c8b38	                    mov r15, qword [rax]	       284	basic_blocks.c	FUNCTION_6	FOR_2
0x4000bc3	        0x4d8b7728	            mov r14, qword [r15 + 0x28] 	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000bc7	          0x4d85f6	                           test r14, r14	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000bca	            0x750c	                           jne 0x4000bd8	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000bcc	    0x448b05000000	            mov r8d, dword [0x04000bd3] 	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000bd3	          0x4585c0	                           test r8d, r8d	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000bd6	            0x7558	                           jne 0x4000c30	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000bd8	        0x498b4718	            mov rax, qword [r15 + 0x18] 	       290	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_6
0x4000bdc	          0x4d8b27	                    mov r12, qword [r15]	       291	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000bdf	        0x498b6f10	            mov rbp, qword [r15 + 0x10] 	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000be3	        0x418b4f20	            mov ecx, dword [r15 + 0x20] 	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000be7	          0x4885c0	                           test rax, rax	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000bea	     0xf8426010000	                            je 0x4000d16	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000bf0	        0x488b5808	                mov rbx, qword [rax + 8]	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000bf4	      0xba05000000	                              mov edx, 5	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000bf9	      0xbe00000000	                              mov esi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000bfe	      0xbf00000000	                              mov edi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000c03	        0x894c2408	                mov dword [rsp + 8], ecx	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000c07	      0xe800000000	                          call 0x4000c0c	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000c0c	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x4000c10	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4000c13	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000c18	            0x4156	                                push r14	       104	stdio2.h	CALL_16
0x4000c1a	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4000c1e	          0x4d89e1	                             mov r9, r12	       104	stdio2.h	CALL_16
0x4000c21	          0x4989e8	                             mov r8, rbp	       104	stdio2.h	CALL_16
0x4000c24	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4000c27	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000c29	      0xe800000000	                          call 0x4000c2e	       104	stdio2.h	CALL_16
0x4000c2e	              0x5e	                                 pop rsi	       104	stdio2.h	CALL_16
0x4000c2f	              0x5f	                                 pop rdi	       104	stdio2.h	CALL_16
0x4000c30	    0x498d87880000	                   lea rax, [r15 + 0x88]	       104	stdio2.h	CALL_16
0x4000c37	        0x498d5f38	                   lea rbx, [r15 + 0x38]	       104	stdio2.h	CALL_16
0x4000c3b	      0x4889442410	             mov qword [rsp + 0x10], rax	       104	stdio2.h	CALL_16
0x4000c40	          0x4c8b33	                    mov r14, qword [rbx]	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000c43	          0x4d85f6	                           test r14, r14	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000c46	            0x7475	                            je 0x4000cbd	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000c48	        0x4c8b6350	            mov r12, qword [rbx + 0x50] 	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000c4c	          0x4d85e4	                           test r12, r12	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000c4f	            0x750a	                           jne 0x4000c5b	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000c51	    0x8b0d00000000	            mov ecx, dword [0x04000c57] 	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000c57	            0x85c9	                           test ecx, ecx	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000c59	            0x7557	                           jne 0x4000cb2	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000c5b	        0x498b4718	            mov rax, qword [r15 + 0x18] 	       300	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_8
0x4000c5f	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c63	        0x458b6f20	           mov r13d, dword [r15 + 0x20] 	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c67	          0x4885c0	                           test rax, rax	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c6a	     0xf8480000000	                            je 0x4000cf0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c70	        0x488b6808	                mov rbp, qword [rax + 8]	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c74	      0xba05000000	                              mov edx, 5	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c79	      0xbe00000000	                              mov esi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c7e	      0xbf00000000	                              mov edi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c83	      0x4c89442408	                 mov qword [rsp + 8], r8	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c88	      0xe800000000	                          call 0x4000c8d	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000c8d	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x4000c91	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4000c94	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4000c97	            0x4154	                                push r12	       104	stdio2.h	CALL_16
0x4000c99	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       104	stdio2.h	CALL_16
0x4000c9e	          0x4d89f1	                             mov r9, r14	       104	stdio2.h	CALL_16
0x4000ca1	          0x4489e9	                           mov ecx, r13d	       104	stdio2.h	CALL_16
0x4000ca4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000ca9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000cab	      0xe800000000	                          call 0x4000cb0	       104	stdio2.h	CALL_16
0x4000cb0	              0x58	                                 pop rax	       104	stdio2.h	CALL_16
0x4000cb1	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x4000cb2	        0x4883c308	                              add rbx, 8	       104	stdio2.h	CALL_16
0x4000cb6	      0x48395c2410	            cmp qword [rsp + 0x10], rbx 	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000cbb	            0x7583	                           jne 0x4000c40	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000cbd	    0x488344241808	               add qword [rsp + 0x18], 8	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000cc3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000cc8	      0x4839442428	            cmp qword [rsp + 0x28], rax 	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000ccd	     0xf85edfeffff	                           jne 0x4000bc0	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000cd3	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       306	basic_blocks.c	FUNCTION_6	CALL_9
0x4000cd8	        0x4883c438	                           add rsp, 0x38	       307	basic_blocks.c	FUNCTION_6
0x4000cdc	              0x5b	                                 pop rbx	       307	basic_blocks.c	FUNCTION_6
0x4000cdd	              0x5d	                                 pop rbp	       307	basic_blocks.c	FUNCTION_6
0x4000cde	            0x415c	                                 pop r12	       307	basic_blocks.c	FUNCTION_6
0x4000ce0	            0x415d	                                 pop r13	       307	basic_blocks.c	FUNCTION_6
0x4000ce2	            0x415e	                                 pop r14	       307	basic_blocks.c	FUNCTION_6
0x4000ce4	            0x415f	                                 pop r15	       307	basic_blocks.c	FUNCTION_6
0x4000ce6	      0xe900000000	                           jmp 0x4000ceb	       306	basic_blocks.c	FUNCTION_6	CALL_9
0x4000ceb	       0xf1f440000	                   nop dword [rax + rax]	       306	basic_blocks.c	FUNCTION_6	CALL_9
0x4000cf0	      0xba05000000	                              mov edx, 5	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000cf5	      0xbe00000000	                              mov esi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000cfa	      0xbf00000000	                              mov edi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000cff	      0x4c89442408	                 mov qword [rsp + 8], r8	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000d04	      0xe800000000	                          call 0x4000d09	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000d09	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000d0e	          0x4889c5	                            mov rbp, rax	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000d11	      0xe95effffff	                           jmp 0x4000c74	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000d16	      0xba05000000	                              mov edx, 5	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000d1b	      0xbe00000000	                              mov esi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000d20	      0xbf00000000	                              mov edi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000d25	        0x894c2408	                mov dword [rsp + 8], ecx	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000d29	      0xe800000000	                          call 0x4000d2e	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000d2e	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000d32	          0x4889c3	                            mov rbx, rax	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000d35	      0xe9bafeffff	                           jmp 0x4000bf4	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000d3a	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4000d3f	      0xe800000000	                          call 0x4000d44	       104	stdio2.h	CALL_16
0x4000d44	      0xe9affdffff	                           jmp 0x4000af8	       104	stdio2.h	CALL_16
0x4000d49	          0x4889c7	                            mov rdi, rax	       104	stdio2.h	CALL_16
0x4000d4c	      0xb900000000	                              mov ecx, 0	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000d51	      0xba08000000	                              mov edx, 8	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000d56	            0x31f6	                            xor esi, esi	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000d58	      0xe800000000	                          call 0x4000d5d	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000d5d	      0xe971ffffff	                           jmp 0x4000cd3	       278	basic_blocks.c	FUNCTION_6	CALL_4
bb_read_rec	ELSE,2:SWITCH,0:WHILE,0:DO,0:CALL,19:IF,9:functions,0:FOR,2	230
0x4000530	            0x4155	                                push r13	       121	basic_blocks.c	FUNCTION_4
0x4000532	            0x4154	                                push r12	       121	basic_blocks.c	FUNCTION_4
0x4000534	          0x4989f4	                            mov r12, rsi	       121	basic_blocks.c	FUNCTION_4
0x4000537	              0x55	                                push rbp	       121	basic_blocks.c	FUNCTION_4
0x4000538	              0x53	                                push rbx	       121	basic_blocks.c	FUNCTION_4
0x4000539	          0x4889fb	                            mov rbx, rdi	       121	basic_blocks.c	FUNCTION_4
0x400053c	        0x4883ec28	                           sub rsp, 0x28	       121	basic_blocks.c	FUNCTION_4
0x4000540	          0x4889e6	                            mov rsi, rsp	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x4000543	    0x64488b042528	                mov rax, qword fs:[0x28]	       121	basic_blocks.c	FUNCTION_4
0x400054c	      0x4889442418	             mov qword [rsp + 0x18], rax	       121	basic_blocks.c	FUNCTION_4
0x4000551	            0x31c0	                            xor eax, eax	       121	basic_blocks.c	FUNCTION_4
0x4000553	      0xe800000000	                          call 0x4000558	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x4000558	            0x85c0	                           test eax, eax	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x400055a	     0xf856f030000	                           jne 0x40008cf	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x4000560	    0x488b05000000	            mov rax, qword [0x04000567] 	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x4000567	          0x4889e7	                            mov rdi, rsp	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x400056a	        0x488b4008	                mov rax, qword [rax + 8]	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x400056e	          0xff5038	                 call qword [rax + 0x38]	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x4000571	    0x448b05000000	            mov r8d, dword [0x04000578] 	       134	basic_blocks.c	FUNCTION_4	IF_2
0x4000578	            0x89c2	                            mov edx, eax	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x400057a	          0x890424	                    mov dword [rsp], eax	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x400057d	          0x4585c0	                           test r8d, r8d	       134	basic_blocks.c	FUNCTION_4	IF_2
0x4000580	     0xf84ea000000	                            je 0x4000670	       134	basic_blocks.c	FUNCTION_4	IF_2
0x4000586	            0x85d2	                           test edx, edx	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000588	     0xf84bb000000	                            je 0x4000649	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x400058e	            0x31ed	                            xor ebp, ebp	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000590	    0x8b3d00000000	            mov edi, dword [0x04000596] 	       139	basic_blocks.c	FUNCTION_4	FOR_1	IF_3
0x4000596	            0x85ff	                           test edi, edi	       139	basic_blocks.c	FUNCTION_4	FOR_1	IF_3
0x4000598	     0xf85f2000000	                           jne 0x4000690	       139	basic_blocks.c	FUNCTION_4	FOR_1	IF_3
0x400059e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005a3	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005a6	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005ab	      0xbe08000000	                              mov esi, 8	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005b0	      0xe800000000	                          call 0x40005b5	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005b5	        0x4883f801	                              cmp rax, 1	       145	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_6
0x40005b9	     0xf85f7000000	                           jne 0x40006b6	       145	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_6
0x40005bf	      0x488d7c2408	                      lea rdi, [rsp + 8]	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005c4	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005c7	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005cc	      0xbe08000000	                              mov esi, 8	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005d1	      0xe800000000	                          call 0x40005d6	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005d6	        0x4883f801	                              cmp rax, 1	       146	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_7
0x40005da	     0xf85d6000000	                           jne 0x40006b6	       146	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_7
0x40005e0	          0x4889df	                            mov rdi, rbx	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x40005e3	      0xe800000000	                          call 0x40005e8	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x40005e8	          0x83c001	                              add eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40005eb	          0x83f801	                              cmp eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40005ee	            0x77f0	                            ja 0x40005e0	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40005f0	          0x4889df	                            mov rdi, rbx	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x40005f3	      0xe800000000	                          call 0x40005f8	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x40005f8	          0x83c001	                              add eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40005fb	          0x83f801	                              cmp eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40005fe	            0x77f0	                            ja 0x40005f0	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000600	      0x488d7c2404	                      lea rdi, [rsp + 4]	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000605	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000608	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x400060d	      0xbe04000000	                              mov esi, 4	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000612	      0xe800000000	                          call 0x4000617	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000617	        0x4883f801	                              cmp rax, 1	       149	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_10
0x400061b	     0xf8595000000	                           jne 0x40006b6	       149	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_10
0x4000621	    0x8b3500000000	            mov esi, dword [0x04000627] 	       164	basic_blocks.c	FUNCTION_4	FOR_1	IF_6
0x4000627	            0x85f6	                           test esi, esi	       164	basic_blocks.c	FUNCTION_4	FOR_1	IF_6
0x4000629	     0xf85a1000000	                           jne 0x40006d0	       164	basic_blocks.c	FUNCTION_4	FOR_1	IF_6
0x400062f	    0x8b0500000000	            mov eax, dword [0x04000635] 	       192	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x4000635	            0x85c0	                           test eax, eax	       192	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x4000637	     0xf84c3010000	                            je 0x4000800	       192	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x400063d	          0x83c501	                              add ebp, 1	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000640	          0x392c24	                    cmp dword [rsp], ebp	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000643	     0xf8747ffffff	                            ja 0x4000590	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000649	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       202	basic_blocks.c	FUNCTION_4
0x400064e	    0x644833042528	                xor rax, qword fs:[0x28]	       202	basic_blocks.c	FUNCTION_4
0x4000657	     0xf85b3020000	                           jne 0x4000910	       202	basic_blocks.c	FUNCTION_4
0x400065d	        0x4883c428	                           add rsp, 0x28	       202	basic_blocks.c	FUNCTION_4
0x4000661	              0x5b	                                 pop rbx	       202	basic_blocks.c	FUNCTION_4
0x4000662	              0x5d	                                 pop rbp	       202	basic_blocks.c	FUNCTION_4
0x4000663	            0x415c	                                 pop r12	       202	basic_blocks.c	FUNCTION_4
0x4000665	            0x415d	                                 pop r13	       202	basic_blocks.c	FUNCTION_4
0x4000667	              0xc3	                                     ret	       202	basic_blocks.c	FUNCTION_4
0x4000668	     0xf1f84000000	                   nop dword [rax + rax]	       202	basic_blocks.c	FUNCTION_4
0x4000670	          0x4889df	                            mov rdi, rbx	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x4000673	      0xe800000000	                          call 0x4000678	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x4000678	          0x83c001	                              add eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x400067b	          0x83f801	                              cmp eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x400067e	            0x77f0	                            ja 0x4000670	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000680	          0x8b1424	                    mov edx, dword [rsp]	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000683	      0xe9fefeffff	                           jmp 0x4000586	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000688	     0xf1f84000000	                   nop dword [rax + rax]	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000690	      0x488d742408	                      lea rsi, [rsp + 8]	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x4000695	          0x4889df	                            mov rdi, rbx	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x4000698	      0xe800000000	                          call 0x400069d	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x400069d	            0x85c0	                           test eax, eax	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x400069f	            0x7515	                           jne 0x40006b6	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40006a1	      0x488d742410	                   lea rsi, [rsp + 0x10]	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006a6	          0x4889df	                            mov rdi, rbx	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006a9	      0xe800000000	                          call 0x40006ae	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006ae	            0x85c0	                           test eax, eax	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006b0	     0xf846bffffff	                            je 0x4000621	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006b6	          0x4c89e7	                            mov rdi, r12	       151	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_11
0x40006b9	      0xe800000000	                          call 0x40006be	       151	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_11
0x40006be	      0xbf01000000	                              mov edi, 1	       152	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_12
0x40006c3	      0xe800000000	                          call 0x40006c8	       152	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_12
0x40006c8	     0xf1f84000000	                   nop dword [rax + rax]	       152	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_12
0x40006d0	      0x488b742408	                mov rsi, qword [rsp + 8]	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x40006d5	      0xbf00000000	                              mov edi, 0	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x40006da	      0xe800000000	                          call 0x40006df	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x40006df	          0x4885c0	                           test rax, rax	       168	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7
0x40006e2	          0x4989c5	                            mov r13, rax	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x40006e5	     0xf8452ffffff	                            je 0x400063d	       168	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7
0x40006eb	    0xf60500000000	               test byte [0x040006f2], 8	       172	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	CALL_18
0x40006f2	     0xf8550010000	                           jne 0x4000848	       172	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	CALL_18
0x40006f8	        0x498b5538	            mov rdx, qword [r13 + 0x38] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40006fc	      0x488b442408	                mov rax, qword [rsp + 8]	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000701	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000704	     0xf84d6000000	                            je 0x40007e0	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400070a	          0x4839c2	                            cmp rdx, rax	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400070d	     0xf8465010000	                            je 0x4000878	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000713	        0x498b5540	            mov rdx, qword [r13 + 0x40] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000717	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400071a	     0xf8469010000	                            je 0x4000889	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000720	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000723	     0xf8460010000	                            je 0x4000889	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000729	        0x498b5548	            mov rdx, qword [r13 + 0x48] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400072d	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000730	     0xf8449010000	                            je 0x400087f	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000736	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000739	     0xf8440010000	                            je 0x400087f	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400073f	        0x498b5550	            mov rdx, qword [r13 + 0x50] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000743	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000746	     0xf8447010000	                            je 0x4000893	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400074c	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400074f	     0xf843e010000	                            je 0x4000893	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000755	        0x498b5558	            mov rdx, qword [r13 + 0x58] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000759	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400075c	     0xf843b010000	                            je 0x400089d	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000762	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000765	     0xf8432010000	                            je 0x400089d	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400076b	        0x498b5560	            mov rdx, qword [r13 + 0x60] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400076f	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000772	     0xf842f010000	                            je 0x40008a7	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000778	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400077b	     0xf8426010000	                            je 0x40008a7	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000781	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000785	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000788	     0xf8423010000	                            je 0x40008b1	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400078e	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000791	     0xf841a010000	                            je 0x40008b1	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000797	        0x498b5570	            mov rdx, qword [r13 + 0x70] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400079b	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400079e	     0xf8417010000	                            je 0x40008bb	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007a4	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007a7	     0xf840e010000	                            je 0x40008bb	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007ad	        0x498b5578	            mov rdx, qword [r13 + 0x78] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007b1	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007b4	     0xf840b010000	                            je 0x40008c5	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007ba	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007bd	     0xf8402010000	                            je 0x40008c5	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007c3	    0x498b95800000	            mov rdx, qword [r13 + 0x80] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007ca	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007cd	            0x7409	                            je 0x40007d8	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007cf	          0x4839d0	                            cmp rax, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007d2	     0xf8565feffff	                           jne 0x400063d	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007d8	      0xba09000000	                              mov edx, 9	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40007dd	           0xf1f00	                         nop dword [rax]	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40007e0	          0x4863d2	                         movsxd rdx, edx	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40007e3	      0x498d54d500	                  lea rdx, [r13 + rdx*8]	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40007e8	        0x48894238	             mov qword [rdx + 0x38], rax	       181	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007ec	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       182	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007f1	    0x480182880000	            add qword [rdx + 0x88], rax 	       182	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007f8	      0xe940feffff	                           jmp 0x400063d	       183	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40007fd	           0xf1f00	                         nop dword [rax]	       183	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000800	    0x4c8b2d000000	            mov r13, qword [0x04000807] 	       195	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x4000807	      0xba05000000	                              mov edx, 5	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x400080c	      0xbe00000000	                              mov esi, 0	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x4000811	      0xbf00000000	                              mov edi, 0	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x4000816	    0xc70500000000	               mov dword [0x04000820], 1	       194	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x4000820	      0xe800000000	                          call 0x4000825	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x4000825	    0x488b3d000000	            mov rdi, qword [0x0400082c] 	        97	stdio2.h	CALL_13
0x400082c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x400082f	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_13
0x4000832	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000837	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000839	      0xe800000000	                          call 0x400083e	        97	stdio2.h	CALL_13
0x400083e	      0xe9fafdffff	                           jmp 0x400063d	        97	stdio2.h	CALL_13
0x4000843	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_13
0x4000848	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x400084c	        0x448b4820	            mov r9d, dword [rax + 0x20] 	       104	stdio2.h	CALL_16
0x4000850	        0x4c8b4010	              mov r8, qword [rax + 0x10]	       104	stdio2.h	CALL_16
0x4000854	        0xff742418	                 push qword [rsp + 0x18]	       104	stdio2.h	CALL_16
0x4000858	          0x488b08	                    mov rcx, qword [rax]	       104	stdio2.h	CALL_16
0x400085b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4000860	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4000865	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400086a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400086c	      0xe800000000	                          call 0x4000871	       104	stdio2.h	CALL_16
0x4000871	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x4000872	              0x59	                                 pop rcx	       104	stdio2.h	CALL_16
0x4000873	      0xe980feffff	                           jmp 0x40006f8	       104	stdio2.h	CALL_16
0x4000878	            0x31d2	                            xor edx, edx	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x400087a	      0xe961ffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x400087f	      0xba02000000	                              mov edx, 2	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x4000884	      0xe957ffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x4000889	      0xba01000000	                              mov edx, 1	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x400088e	      0xe94dffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x4000893	      0xba03000000	                              mov edx, 3	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x4000898	      0xe943ffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x400089d	      0xba04000000	                              mov edx, 4	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008a2	      0xe939ffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008a7	      0xba05000000	                              mov edx, 5	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008ac	      0xe92fffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008b1	      0xba06000000	                              mov edx, 6	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008b6	      0xe925ffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008bb	      0xba07000000	                              mov edx, 7	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008c0	      0xe91bffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008c5	      0xba08000000	                              mov edx, 8	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008ca	      0xe911ffffff	                           jmp 0x40007e0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40008cf	    0x488b1d000000	            mov rbx, qword [0x040008d6] 	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40008d6	      0xba05000000	                              mov edx, 5	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40008db	      0xbe00000000	                              mov esi, 0	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40008e0	      0xbf00000000	                              mov edi, 0	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40008e5	      0xe800000000	                          call 0x40008ea	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40008ea	    0x488b3d000000	            mov rdi, qword [0x040008f1] 	        97	stdio2.h	CALL_13
0x40008f1	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40008f4	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_13
0x40008f7	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_13
0x40008fa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40008ff	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000901	      0xe800000000	                          call 0x4000906	        97	stdio2.h	CALL_13
0x4000906	      0xbf01000000	                              mov edi, 1	       130	basic_blocks.c	FUNCTION_4	IF_1	CALL_3
0x400090b	      0xe800000000	                          call 0x4000910	       130	basic_blocks.c	FUNCTION_4	IF_1	CALL_3
0x4000910	      0xe800000000	                          call 0x4000915	       202	basic_blocks.c	FUNCTION_4
cmp_ncalls	ELSE,2:SWITCH,0:WHILE,0:DO,0:CALL,0:IF,4:functions,0:FOR,0	20
0x4000040	          0x488b17	                    mov rdx, qword [rdi]	        87	basic_blocks.c	ELSE_2	FUNCTION_2
0x4000043	          0x488b0e	                    mov rcx, qword [rsi]	        88	basic_blocks.c	ELSE_2	FUNCTION_2
0x4000046	          0x4885d2	                           test rdx, rdx	        90	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x4000049	            0x7435	                            je 0x4000080	        90	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x400004b	          0x4885c9	                           test rcx, rcx	        92	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x400004e	            0x7420	                            je 0x4000070	        92	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x4000050	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x4000054	        0x48397228	            cmp qword [rdx + 0x28], rsi 	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x4000058	      0xb801000000	                              mov eax, 1	        91	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x400005d	            0x7216	                            jb 0x4000075	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x400005f	            0x770f	                            ja 0x4000070	        97	basic_blocks.c	FUNCTION_2	IF_4
0x4000061	          0x8b4220	            mov eax, dword [rdx + 0x20] 	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000064	          0x2b4120	             sub eax, dword [rcx + 0x20]	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000067	              0xc3	                                     ret	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000070	      0xb8ffffffff	                     mov eax, 0xffffffff	        93	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x4000075	            0xf3c3	                                     ret	       101	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000077	    0x660f1f840000	                    nop word [rax + rax]	       101	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000080	      0xb801000000	                              mov eax, 1	        91	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x4000085	              0xc3	                                     ret	        91	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
print_annotated_source	ELSE,2:SWITCH,0:WHILE,0:DO,0:CALL,18:IF,11:functions,0:FOR,5	320
0x4000d70	            0x4155	                                push r13	       463	basic_blocks.c	FUNCTION_8
0x4000d72	            0x4154	                                push r12	       463	basic_blocks.c	FUNCTION_8
0x4000d74	              0x55	                                push rbp	       463	basic_blocks.c	FUNCTION_8
0x4000d75	              0x53	                                push rbx	       463	basic_blocks.c	FUNCTION_8
0x4000d76	        0x4883ec18	                           sub rsp, 0x18	       463	basic_blocks.c	FUNCTION_8
0x4000d7a	    0x488b1d000000	            mov rbx, qword [0x04000d81] 	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000d81	    0x488b15000000	            mov rdx, qword [0x04000d88] 	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000d88	          0x4839d3	                            cmp rbx, rdx	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000d8b	            0x7217	                            jb 0x4000da4	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000d8d	      0xe929040000	                           jmp 0x40011bb	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000d92	    0x660f1f440000	                    nop word [rax + rax]	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000d98	    0x4881c3580100	                          add rbx, 0x158	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000d9f	          0x4839d3	                            cmp rbx, rdx	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000da2	            0x7344	                           jae 0x4000de8	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000da4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000da8	          0x4885c0	                           test rax, rax	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000dab	            0x74eb	                            je 0x4000d98	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000dad	          0x8b4018	            mov eax, dword [rax + 0x18] 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000db0	          0x394320	            cmp dword [rbx + 0x20], eax 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000db3	            0x7ee3	                           jle 0x4000d98	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000db5	          0x488b33	                    mov rsi, qword [rbx]	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000db8	      0xbf00000000	                              mov edi, 0	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000dbd	      0xe800000000	                          call 0x4000dc2	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000dc2	          0x4885c0	                           test rax, rax	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000dc5	     0xf8455040000	                            je 0x4001220	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000dcb	          0x8b5320	            mov edx, dword [rbx + 0x20] 	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000dce	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000dd2	    0x4881c3580100	                          add rbx, 0x158	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000dd9	          0x895018	             mov dword [rax + 0x18], edx	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000ddc	    0x488b15000000	            mov rdx, qword [0x04000de3] 	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000de3	          0x4839d3	                            cmp rbx, rdx	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000de6	            0x72bc	                            jb 0x4000da4	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000de8	    0x488b1d000000	            mov rbx, qword [0x04000def] 	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000def	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000df2	     0xf84c1040000	                            je 0x40012b9	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000df8	     0xf1f84000000	                   nop dword [rax + rax]	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000e00	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000e04	            0x85ff	                           test edi, edi	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000e06	            0x7e1f	                           jle 0x4000e27	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000e08	        0x48c1e703	                              shl rdi, 3	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000e0c	      0xe800000000	                          call 0x4000e11	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000e11	        0x48635318	         movsxd rdx, dword [rbx + 0x18] 	        90	string3.h	FUNCTION_29	CALL_6
0x4000e15	        0x48894320	             mov qword [rbx + 0x20], rax	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000e19	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_29	CALL_6
0x4000e1b	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_29	CALL_6
0x4000e1e	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x4000e22	      0xe800000000	                          call 0x4000e27	        90	string3.h	FUNCTION_29	CALL_6
0x4000e27	          0x488b1b	                    mov rbx, qword [rbx]	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000e2a	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000e2d	            0x75d1	                           jne 0x4000e00	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000e2f	    0x488b1d000000	            mov rbx, qword [0x04000e36] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000e36	    0x483b1d000000	            cmp rbx, qword [0x04000e3d] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000e3d	            0x7219	                            jb 0x4000e58	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000e3f	            0xeb77	                           jmp 0x4000eb8	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000e41	     0xf1f80000000	                         nop dword [rax]	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000e48	    0x4881c3580100	                          add rbx, 0x158	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000e4f	    0x48391d000000	            cmp qword [0x04000e56], rbx 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000e56	            0x7660	                           jbe 0x4000eb8	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000e58	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e5c	          0x4885c0	                           test rax, rax	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e5f	            0x74e7	                            je 0x4000e48	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e61	          0x8b7018	            mov esi, dword [rax + 0x18] 	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e64	            0x85f6	                           test esi, esi	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e66	            0x74e0	                            je 0x4000e48	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e68	          0x488b33	                    mov rsi, qword [rbx]	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000e6b	      0xbf00000000	                              mov edi, 0	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000e70	      0xe800000000	                          call 0x4000e75	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000e75	          0x4885c0	                           test rax, rax	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000e78	     0xf84c2030000	                            je 0x4001240	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000e7e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e82	        0x48634b20	         movsxd rcx, dword [rbx + 0x20] 	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e86	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e8a	        0x48015010	            add qword [rax + 0x10], rdx 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e8e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e92	      0x488d44c8f8	              lea rax, [rax + rcx*8 - 8]	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e97	          0x488b28	                    mov rbp, qword [rax]	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000e9a	          0x4885ed	                           test rbp, rbp	       507	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4000e9d	     0xf84cd030000	                            je 0x4001270	       507	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4000ea3	      0x48837d0000	                      cmp qword [rbp], 0	       512	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000ea8	     0xf8532030000	                           jne 0x40011e0	       512	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000eae	        0x48015528	            add qword [rbp + 0x28], rdx 	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000eb2	            0xeb94	                           jmp 0x4000e48	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000eb4	         0xf1f4000	                         nop dword [rax]	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000eb8	    0x488b1d000000	            mov rbx, qword [0x04000ebf] 	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000ebf	    0xf20f101d0000	         movsd xmm3, qword [0x04000ec7] 	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000ec7	    0xf20f115c2408	             movsd qword [rsp + 8], xmm3	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000ecd	          0x4885db	                           test rbx, rbx	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000ed0	     0xf85be010000	                           jne 0x4001094	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000ed6	      0xe9f0020000	                           jmp 0x40011cb	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000edb	       0xf1f440000	                   nop dword [rax + rax]	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000ee0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000ee4	      0xe800000000	                          call 0x4000ee9	       564	basic_blocks.c	FUNCTION_8	FOR_4	CALL_11
0x4000ee9	      0xba05000000	                              mov edx, 5	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000eee	      0xbe00000000	                              mov esi, 0	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000ef3	      0xbf00000000	                              mov edi, 0	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000ef8	    0x48c743200000	               mov qword [rbx + 0x20], 0	       565	basic_blocks.c	FUNCTION_8	FOR_4
0x4000f00	      0xe800000000	                          call 0x4000f05	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000f05	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000f0a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000f0d	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000f10	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000f12	      0xe800000000	                          call 0x4000f17	        97	stdio2.h	CALL_13
0x4000f17	    0x488b2d000000	            mov rbp, qword [0x04000f1e] 	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000f1e	      0xba05000000	                              mov edx, 5	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000f23	      0xbe00000000	                              mov esi, 0	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000f28	      0xbf00000000	                              mov edi, 0	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000f2d	      0xe800000000	                          call 0x4000f32	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000f32	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000f35	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000f38	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000f3d	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000f40	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000f42	      0xe800000000	                          call 0x4000f47	        97	stdio2.h	CALL_13
0x4000f47	    0x488b2d000000	            mov rbp, qword [0x04000f4e] 	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000f4e	      0xba05000000	                              mov edx, 5	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000f53	      0xbe00000000	                              mov esi, 0	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000f58	      0xbf00000000	                              mov edi, 0	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000f5d	      0xe800000000	                          call 0x4000f62	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000f62	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000f65	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000f68	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000f6d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000f6f	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000f72	      0xe800000000	                          call 0x4000f77	        97	stdio2.h	CALL_13
0x4000f77	    0x488b05000000	            mov rax, qword [0x04000f7e] 	       573	basic_blocks.c	FUNCTION_8	FOR_4
0x4000f7e	    0xf20f10050000	         movsd xmm0, qword [0x04000f86] 	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000f86	          0x4885c0	                           test rax, rax	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000f89	            0x7420	                            je 0x4000fab	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000f8b	        0x660fefc9	                         pxor xmm1, xmm1	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000f8f	        0x660fefc0	                         pxor xmm0, xmm0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000f93	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000f98	    0xf2480f2a0500	       cvtsi2sd xmm0, qword [0x04000fa1]	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000fa1	    0xf20f59442408	             mulsd xmm0, qword [rsp + 8]	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000fa7	        0xf20f5ec1	                        divsd xmm0, xmm1	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000fab	      0xba05000000	                              mov edx, 5	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000fb0	      0xbe00000000	                              mov esi, 0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000fb5	      0xbf00000000	                              mov edi, 0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000fba	      0xf20f110424	                 movsd qword [rsp], xmm0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000fbf	      0xe800000000	                          call 0x4000fc4	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000fc4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000fc9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000fcc	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000fcf	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_13
0x4000fd4	      0xf20f100424	                 movsd xmm0, qword [rsp]	        97	stdio2.h	CALL_13
0x4000fd9	      0xe800000000	                          call 0x4000fde	        97	stdio2.h	CALL_13
0x4000fde	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000fe2	      0xba05000000	                              mov edx, 5	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000fe7	      0xbe00000000	                              mov esi, 0	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000fec	      0xbf00000000	                              mov edi, 0	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000ff1	      0xe800000000	                          call 0x4000ff6	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000ff6	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000ff9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000ffc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4001001	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4001003	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4001006	      0xe800000000	                          call 0x400100b	        97	stdio2.h	CALL_13
0x400100b	    0x488b15000000	            mov rdx, qword [0x04001012] 	       579	basic_blocks.c	FUNCTION_8	FOR_4
0x4001012	        0x660fefc0	                         pxor xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001016	          0x4885d2	                           test rdx, rdx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001019	            0x7423	                            je 0x400103e	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400101b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400101f	          0x4885c0	                           test rax, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001022	     0xf8858020000	                            js 0x4001280	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001028	        0x660fefc0	                         pxor xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400102c	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001031	        0x660fefc9	                         pxor xmm1, xmm1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001035	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400103a	        0xf20f5ec1	                        divsd xmm0, xmm1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400103e	      0xba05000000	                              mov edx, 5	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001043	      0xbe00000000	                              mov esi, 0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001048	      0xbf00000000	                              mov edi, 0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400104d	      0xf20f110424	                 movsd qword [rsp], xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001052	      0xe800000000	                          call 0x4001057	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001057	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400105c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x400105f	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4001062	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_13
0x4001067	      0xf20f100424	                 movsd xmm0, qword [rsp]	        97	stdio2.h	CALL_13
0x400106c	      0xe800000000	                          call 0x4001071	        97	stdio2.h	CALL_13
0x4001071	    0x4c3b25000000	            cmp r12, qword [0x04001078] 	       582	basic_blocks.c	FUNCTION_8	FOR_4	IF_11
0x4001078	            0x740e	                            je 0x4001088	       582	basic_blocks.c	FUNCTION_8	FOR_4	IF_11
0x400107a	          0x4c89e7	                            mov rdi, r12	       583	basic_blocks.c	FUNCTION_8	FOR_4	CALL_18
0x400107d	      0xe800000000	                          call 0x4001082	       583	basic_blocks.c	FUNCTION_8	FOR_4	CALL_18
0x4001082	    0x660f1f440000	                    nop word [rax + rax]	       583	basic_blocks.c	FUNCTION_8	FOR_4	CALL_18
0x4001088	          0x488b1b	                    mov rbx, qword [rbx]	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x400108b	          0x4885db	                           test rbx, rbx	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x400108e	     0xf8437010000	                            je 0x40011cb	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4001094	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4001097	            0x85d2	                           test edx, edx	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4001099	            0x74ed	                            je 0x4001088	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x400109b	    0x8b0500000000	            mov eax, dword [0x040010a1] 	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x40010a1	            0x85c0	                           test eax, eax	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x40010a3	            0x7407	                            je 0x40010ac	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x40010a5	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x40010aa	            0x74dc	                            je 0x4001088	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x40010ac	          0x4889d9	                            mov rcx, rbx	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x40010af	      0xba00000000	                              mov edx, 0	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x40010b4	      0xbe10000000	                           mov esi, 0x10	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x40010b9	          0x4889df	                            mov rdi, rbx	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x40010bc	    0x48c705000000	               mov qword [0x040010c7], 0	       535	basic_blocks.c	FUNCTION_8	FOR_4
0x40010c7	    0x48c705000000	               mov qword [0x040010d2], 0	       535	basic_blocks.c	FUNCTION_8	FOR_4
0x40010d2	      0xe800000000	                          call 0x40010d7	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x40010d7	          0x4885c0	                           test rax, rax	       538	basic_blocks.c	FUNCTION_8	FOR_4	IF_7
0x40010da	          0x4989c4	                            mov r12, rax	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x40010dd	            0x74a9	                            je 0x4001088	       538	basic_blocks.c	FUNCTION_8	FOR_4	IF_7
0x40010df	    0x8b2d00000000	            mov ebp, dword [0x040010e5] 	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x40010e5	            0x85ed	                           test ebp, ebp	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x40010e7	     0xf8ef3fdffff	                           jle 0x4000ee0	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x40010ed	      0xba05000000	                              mov edx, 5	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x40010f2	      0xbe00000000	                              mov esi, 0	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x40010f7	      0xbf00000000	                              mov edi, 0	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x40010fc	      0xe800000000	                          call 0x4001101	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4001101	            0x89e9	                            mov ecx, ebp	        97	stdio2.h	CALL_13
0x4001103	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4001106	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400110b	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x400110e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4001110	      0xe800000000	                          call 0x4001115	        97	stdio2.h	CALL_13
0x4001115	        0x48637318	         movsxd rsi, dword [rbx + 0x18] 	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4001119	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x400111d	      0xba08000000	                              mov edx, 8	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4001122	      0xb900000000	                              mov ecx, 0	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4001127	      0xe800000000	                          call 0x400112c	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x400112c	    0x8b0500000000	            mov eax, dword [0x04001132] 	       548	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4001132	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       550	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	IF_9
0x4001135	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4001139	            0x39d0	                            cmp eax, edx	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x400113b	           0xf4ed0	                         cmovle edx, eax	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x400113e	            0x85d2	                           test edx, edx	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4001140	     0xf8e9efdffff	                           jle 0x4000ee4	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4001146	          0x488b07	                    mov rax, qword [rdi]	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4001149	          0x4885c0	                           test rax, rax	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x400114c	     0xf8492fdffff	                            je 0x4000ee4	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001152	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001156	          0x4d85c0	                             test r8, r8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001159	     0xf8485fdffff	                            je 0x4000ee4	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x400115f	          0x83ea01	                              sub edx, 1	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001162	      0xbd08000000	                              mov ebp, 8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001167	    0x4c8d2cd50800	                    lea r13, [rdx*8 + 8]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x400116f	            0xeb25	                           jmp 0x4001196	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001171	     0xf1f80000000	                         nop dword [rax]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001178	        0x488b042f	              mov rax, qword [rdi + rbp]	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x400117c	          0x4885c0	                           test rax, rax	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x400117f	     0xf845ffdffff	                            je 0x4000ee4	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001185	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001189	        0x4883c508	                              add rbp, 8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x400118d	          0x4d85c0	                             test r8, r8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001190	     0xf844efdffff	                            je 0x4000ee4	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4001196	          0x8b4820	            mov ecx, dword [rax + 0x20] 	        97	stdio2.h	CALL_13
0x4001199	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x400119c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x400119e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_13
0x40011a3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40011a8	      0xe800000000	                          call 0x40011ad	        97	stdio2.h	CALL_13
0x40011ad	          0x4c39ed	                            cmp rbp, r13	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x40011b0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x40011b4	            0x75c2	                           jne 0x4001178	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x40011b6	      0xe929fdffff	                           jmp 0x4000ee4	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x40011bb	    0x488b1d000000	            mov rbx, qword [0x040011c2] 	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x40011c2	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x40011c5	     0xf8535fcffff	                           jne 0x4000e00	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x40011cb	        0x4883c418	                           add rsp, 0x18	       585	basic_blocks.c	FUNCTION_8
0x40011cf	              0x5b	                                 pop rbx	       585	basic_blocks.c	FUNCTION_8
0x40011d0	              0x5d	                                 pop rbp	       585	basic_blocks.c	FUNCTION_8
0x40011d1	            0x415c	                                 pop r12	       585	basic_blocks.c	FUNCTION_8
0x40011d3	            0x415d	                                 pop r13	       585	basic_blocks.c	FUNCTION_8
0x40011d5	              0xc3	                                     ret	       585	basic_blocks.c	FUNCTION_8
0x40011d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       585	basic_blocks.c	FUNCTION_8
0x40011e0	      0xbf58010000	                          mov edi, 0x158	       520	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2	CALL_7
0x40011e5	      0xe800000000	                          call 0x40011ea	       520	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2	CALL_7
0x40011ea	      0xb92b000000	                           mov ecx, 0x2b	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x40011ef	          0x4889c7	                            mov rdi, rax	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x40011f2	          0x4889ee	                            mov rsi, rbp	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x40011f5	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x40011f8	    0x48c700000000	                      mov qword [rax], 0	       522	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x40011ff	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       523	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001203	        0x48015028	            add qword [rax + 0x28], rdx 	       523	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001207	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x400120b	        0x48634b20	         movsxd rcx, dword [rbx + 0x20] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x400120f	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001213	      0x488944caf8	        mov qword [rdx + rcx*8 - 8], rax	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001218	      0xe92bfcffff	                           jmp 0x4000e48	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x400121d	           0xf1f00	                         nop dword [rax]	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001220	    0x8b3d00000000	            mov edi, dword [0x04001226] 	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4001226	            0x85ff	                           test edi, edi	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4001228	            0x7474	                            je 0x400129e	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x400122a	    0x488b15000000	            mov rdx, qword [0x04001231] 	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4001231	      0xe962fbffff	                           jmp 0x4000d98	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4001236	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4001240	    0x8b0d00000000	            mov ecx, dword [0x04001246] 	       501	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4001246	            0x85c9	                           test ecx, ecx	       501	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4001248	     0xf85fafbffff	                           jne 0x4000e48	       501	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x400124e	          0x488b33	                    mov rsi, qword [rbx]	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4001251	      0xbf00000000	                              mov edi, 0	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4001256	      0xe800000000	                          call 0x400125b	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x400125b	          0x4885c0	                           test rax, rax	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x400125e	     0xf85e4fbffff	                           jne 0x4000e48	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4001264	      0xe915fcffff	                           jmp 0x4000e7e	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4001269	     0xf1f80000000	                         nop dword [rax]	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4001270	          0x488918	                    mov qword [rax], rbx	       510	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4001273	      0xe9d0fbffff	                           jmp 0x4000e48	       510	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4001278	     0xf1f84000000	                   nop dword [rax + rax]	       510	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4001280	          0x4889c1	                            mov rcx, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001283	        0x660fefc0	                         pxor xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001287	          0x48d1e9	                              shr rcx, 1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400128a	          0x83e001	                              and eax, 1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400128d	          0x4809c1	                             or rcx, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001290	      0xf2480f2ac1	                      cvtsi2sd xmm0, rcx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001295	        0xf20f58c0	                        addsd xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4001299	      0xe993fdffff	                           jmp 0x4001031	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x400129e	          0x488b33	                    mov rsi, qword [rbx]	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x40012a1	      0xbf00000000	                              mov edi, 0	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x40012a6	      0xe800000000	                          call 0x40012ab	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x40012ab	          0x4885c0	                           test rax, rax	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x40012ae	     0xf8576ffffff	                           jne 0x400122a	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x40012b4	      0xe912fbffff	                           jmp 0x4000dcb	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x40012b9	    0x488b1d000000	            mov rbx, qword [0x040012c0] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x40012c0	          0x4839d3	                            cmp rbx, rdx	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x40012c3	     0xf828ffbffff	                            jb 0x4000e58	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x40012c9	      0xe9fdfeffff	                           jmp 0x40011cb	       497	basic_blocks.c	FUNCTION_8	FOR_3
annotate_with_count	ELSE,3:SWITCH,0:WHILE,0:DO,0:CALL,8:IF,11:functions,0:FOR,4	259
0x4000100	            0x4157	                                push r15	       321	basic_blocks.c	FUNCTION_7
0x4000102	            0x4156	                                push r14	       321	basic_blocks.c	FUNCTION_7
0x4000104	            0x4155	                                push r13	       321	basic_blocks.c	FUNCTION_7
0x4000106	            0x4154	                                push r12	       321	basic_blocks.c	FUNCTION_7
0x4000108	          0x4189f4	                           mov r12d, esi	       321	basic_blocks.c	FUNCTION_7
0x400010b	              0x55	                                push rbp	       321	basic_blocks.c	FUNCTION_7
0x400010c	              0x53	                                push rbx	       321	basic_blocks.c	FUNCTION_7
0x400010d	    0x4881ec580100	                          sub rsp, 0x158	       321	basic_blocks.c	FUNCTION_7
0x4000114	    0x64488b042528	                mov rax, qword fs:[0x28]	       321	basic_blocks.c	FUNCTION_7
0x400011d	    0x488984244801	            mov qword [rsp + 0x148], rax	       321	basic_blocks.c	FUNCTION_7
0x4000125	            0x31c0	                            xor eax, eax	       321	basic_blocks.c	FUNCTION_7
0x4000127	          0x395118	            cmp dword [rcx + 0x18], edx 	       330	basic_blocks.c	FUNCTION_7	IF_1
0x400012a	      0x48897c2408	                mov qword [rsp + 8], rdi	       321	basic_blocks.c	FUNCTION_7
0x400012f	     0xf8c88010000	                            jl 0x40002bd	       330	basic_blocks.c	FUNCTION_7	IF_1
0x4000135	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       331	basic_blocks.c	FUNCTION_7	IF_1
0x4000139	          0x4863d2	                         movsxd rdx, edx	       331	basic_blocks.c	FUNCTION_7	IF_1
0x400013c	      0x488b6cd0f8	        mov rbp, qword [rax + rdx*8 - 8]	       331	basic_blocks.c	FUNCTION_7	IF_1
0x4000141	          0x4885ed	                           test rbp, rbp	       333	basic_blocks.c	FUNCTION_7	IF_2
0x4000144	     0xf8473010000	                            je 0x40002bd	       333	basic_blocks.c	FUNCTION_7	IF_2
0x400014a	    0x488305000000	               add qword [0x04000152], 1	       347	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000152	        0xf6452401	               test byte [rbp + 0x24], 1	       361	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x4000156	      0xc644241000	                mov byte [rsp + 0x10], 0	       350	basic_blocks.c	FUNCTION_7	ELSE_1
0x400015b	     0xf85c7000000	                           jne 0x4000228	       361	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x4000161	    0x8b3500000000	            mov esi, dword [0x04000167] 	       370	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000167	            0x85f6	                           test esi, esi	       370	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000169	     0xf85a1010000	                           jne 0x4000310	       370	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400016f	      0x48837d3800	               cmp qword [rbp + 0x38], 0	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000174	     0xf8486030000	                            je 0x4000500	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400017a	    0x4c8b85880000	              mov r8, qword [rbp + 0x88]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000181	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000186	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       326	basic_blocks.c	FUNCTION_7
0x400018d	          0x4531ed	                          xor r13d, r13d	       389	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_5
0x4000190	          0x4c89fb	                            mov rbx, r15	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000193	    0x4c8905000000	              mov qword [0x0400019a], r8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400019a	    0x4c8db5900000	                   lea r14, [rbp + 0x90]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001a1	    0x4881c5d80000	                           add rbp, 0xd8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001a8	          0x4d01c5	                             add r13, r8	       392	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001ab	          0x4939d0	                             cmp r8, rdx	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40001ae	           0xf94c1	                                 sete cl	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40001b1	            0x85f6	                           test esi, esi	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40001b3	           0xf95c0	                                setne al	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40001b6	            0x20c8	                              and al, cl	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40001b8	            0x7547	                           jne 0x4000201	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40001ba	          0x4c39fb	                            cmp rbx, r15	       397	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x40001bd	            0x7607	                           jbe 0x40001c6	       397	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x40001bf	          0xc6032c	                    mov byte [rbx], 0x2c	       398	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x40001c2	        0x4883c301	                              add rbx, 1	       398	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x40001c6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_9	CALL_1
0x40001cd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x40001d2	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_9	CALL_1
0x40001d5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x40001da	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_9	CALL_1
0x40001dc	      0xe800000000	                          call 0x40001e1	        33	stdio2.h	FUNCTION_9	CALL_1
0x40001e1	          0x4889df	                            mov rdi, rbx	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x40001e4	      0xe800000000	                          call 0x40001e9	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x40001e9	    0x8b3500000000	            mov esi, dword [0x040001ef] 	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x40001ef	    0x488b15000000	            mov rdx, qword [0x040001f6] 	       402	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001f6	          0x4801c3	                            add rbx, rax	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x40001f9	            0x85f6	                           test esi, esi	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x40001fb	          0x4989d0	                             mov r8, rdx	       402	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001fe	           0xf95c0	                                setne al	       402	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000201	          0x4c39f5	                            cmp rbp, r14	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000204	     0xf8466020000	                            je 0x4000470	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400020a	      0x49837eb000	               cmp qword [r14 - 0x50], 0	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400020f	     0xf8493010000	                            je 0x40003a8	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000215	          0x4d8b06	                     mov r8, qword [r14]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000218	        0x4983c608	                              add r14, 8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400021c	    0x4c8905000000	              mov qword [0x04000223], r8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000223	            0xeb83	                           jmp 0x40001a8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000225	           0xf1f00	                         nop dword [rax]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000228	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	        33	stdio2.h	FUNCTION_9	CALL_1
0x400022d	        0x4c8b4528	              mov r8, qword [rbp + 0x28]	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000231	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000236	      0xba2c010000	                          mov edx, 0x12c	        33	stdio2.h	FUNCTION_9	CALL_1
0x400023b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000240	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000242	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000245	          0x4c89fb	                            mov rbx, r15	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000248	      0xe800000000	                          call 0x400024d	        33	stdio2.h	FUNCTION_9	CALL_1
0x400024d	            0x8b13	                    mov edx, dword [rbx]	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400024f	        0x4883c304	                              add rbx, 4	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000253	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000259	            0xf7d2	                                 not edx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400025b	            0x21d0	                            and eax, edx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400025d	      0x2580808080	                     and eax, 0x80808080	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000262	            0x74e9	                            je 0x400024d	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000264	            0x89c2	                            mov edx, eax	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000266	        0x4c8b6d28	            mov r13, qword [rbp + 0x28] 	       365	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x400026a	    0x8b3500000000	            mov esi, dword [0x04000270] 	       365	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x4000270	          0xc1ea10	                           shr edx, 0x10	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000273	      0xa980800000	                        test eax, 0x8080	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000278	           0xf44c2	                          cmove eax, edx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400027b	        0x488d5302	                      lea rdx, [rbx + 2]	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400027f	            0x89c7	                            mov edi, eax	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000281	    0x4c892d000000	            mov qword [0x04000288], r13 	       365	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x4000288	        0x480f44da	                          cmove rbx, rdx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400028c	          0x4000c7	                             add dil, al	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400028f	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000293	        0x4883db03	                              sbb rbx, 3	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000297	          0x4c89ea	                            mov rdx, r13	       366	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x400029a	          0x4885c0	                           test rax, rax	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400029d	     0xf856f020000	                           jne 0x4000512	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40002a3	      0xb801000000	                              mov eax, 1	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40002a8	          0x4c39fb	                            cmp rbx, r15	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40002ab	            0x7508	                           jne 0x40002b5	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40002ad	            0x85f6	                           test esi, esi	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40002af	     0xf85fc000000	                           jne 0x40003b1	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40002b5	            0x85c0	                           test eax, eax	       419	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x40002b7	     0xf8563010000	                           jne 0x4000420	       419	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x40002bd	          0x4585e4	                         test r12d, r12d	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40002c0	            0x7418	                            je 0x40002da	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40002c2	      0x418d5424ff	                      lea edx, [r12 - 1]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40002c7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40002cc	      0xbe20000000	                           mov esi, 0x20	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40002d1	        0x4883c201	                              add rdx, 1	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40002d5	      0xe800000000	                          call 0x40002da	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40002da	      0x488b442408	                mov rax, qword [rsp + 8]	       425	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x40002df	      0x42c6042000	                 mov byte [rax + r12], 0	       425	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x40002e4	    0x488b84244801	           mov rax, qword [rsp + 0x148] 	       455	basic_blocks.c	FUNCTION_7
0x40002ec	    0x644833042528	                xor rax, qword fs:[0x28]	       455	basic_blocks.c	FUNCTION_7
0x40002f5	     0xf8500020000	                           jne 0x40004fb	       455	basic_blocks.c	FUNCTION_7
0x40002fb	    0x4881c4580100	                          add rsp, 0x158	       455	basic_blocks.c	FUNCTION_7
0x4000302	              0x5b	                                 pop rbx	       455	basic_blocks.c	FUNCTION_7
0x4000303	              0x5d	                                 pop rbp	       455	basic_blocks.c	FUNCTION_7
0x4000304	            0x415c	                                 pop r12	       455	basic_blocks.c	FUNCTION_7
0x4000306	            0x415d	                                 pop r13	       455	basic_blocks.c	FUNCTION_7
0x4000308	            0x415e	                                 pop r14	       455	basic_blocks.c	FUNCTION_7
0x400030a	            0x415f	                                 pop r15	       455	basic_blocks.c	FUNCTION_7
0x400030c	              0xc3	                                     ret	       455	basic_blocks.c	FUNCTION_7
0x400030d	           0xf1f00	                         nop dword [rax]	       455	basic_blocks.c	FUNCTION_7
0x4000310	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000314	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000319	          0x4885c0	                           test rax, rax	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400031c	     0xf848f000000	                            je 0x40003b1	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000322	        0x483b4500	                    cmp rax, qword [rbp]	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000326	     0xf864efeffff	                           jbe 0x400017a	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400032c	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000331	    0x4c8b05000000	              mov r8, qword [0x04000338]	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000338	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x400033d	      0xba2c010000	                          mov edx, 0x12c	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000342	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000347	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000349	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_9	CALL_1
0x400034c	          0x4c89fb	                            mov rbx, r15	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400034f	      0xe800000000	                          call 0x4000354	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000354	            0x8b13	                    mov edx, dword [rbx]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000356	        0x4883c304	                              add rbx, 4	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400035a	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000360	            0xf7d2	                                 not edx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000362	            0x21d0	                            and eax, edx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000364	      0x2580808080	                     and eax, 0x80808080	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000369	            0x74e9	                            je 0x4000354	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400036b	            0x89c2	                            mov edx, eax	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400036d	    0x4c8b2d000000	            mov r13, qword [0x04000374] 	       375	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000374	    0x8b3500000000	            mov esi, dword [0x0400037a] 	       375	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400037a	          0xc1ea10	                           shr edx, 0x10	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400037d	      0xa980800000	                        test eax, 0x8080	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000382	           0xf44c2	                          cmove eax, edx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000385	        0x488d5302	                      lea rdx, [rbx + 2]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000389	            0x89c7	                            mov edi, eax	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400038b	        0x480f44da	                          cmove rbx, rdx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400038f	          0x4000c7	                             add dil, al	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000392	          0x4c89ea	                            mov rdx, r13	       375	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000395	        0x4883db03	                              sbb rbx, 3	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000399	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400039d	      0xe9f8feffff	                           jmp 0x400029a	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40003a2	    0x660f1f440000	                    nop word [rax + rax]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40003a8	          0x4c39fb	                            cmp rbx, r15	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003ab	            0x7573	                           jne 0x4000420	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003ad	            0x84c0	                             test al, al	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003af	            0x746f	                            je 0x4000420	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003b1	    0x4c8b05000000	              mov r8, qword [0x040003b8]	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003b8	     0xf1f84000000	                   nop dword [rax + rax]	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003c0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003c5	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003cc	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003d1	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003d4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003d6	          0x4c89fb	                            mov rbx, r15	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003d9	      0xe800000000	                          call 0x40003de	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003de	            0x8b13	                    mov edx, dword [rbx]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003e0	        0x4883c304	                              add rbx, 4	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003e4	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003ea	            0xf7d2	                                 not edx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003ec	            0x21d0	                            and eax, edx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003ee	      0x2580808080	                     and eax, 0x80808080	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003f3	            0x74e9	                            je 0x40003de	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003f5	            0x89c2	                            mov edx, eax	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x40003f7	    0x4c8b2d000000	            mov r13, qword [0x040003fe] 	       415	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003fe	          0xc1ea10	                           shr edx, 0x10	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000401	      0xa980800000	                        test eax, 0x8080	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000406	           0xf44c2	                          cmove eax, edx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000409	        0x488d5302	                      lea rdx, [rbx + 2]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400040d	            0x89c7	                            mov edi, eax	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400040f	        0x480f44da	                          cmove rbx, rdx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000413	          0x4000c7	                             add dil, al	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000416	        0x4883db03	                              sbb rbx, 3	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400041a	    0x660f1f440000	                    nop word [rax + rax]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000420	    0x488305000000	               add qword [0x04000428], 1	       429	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000428	    0x4c392d000000	            cmp qword [0x0400042f], r13 	       431	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x400042f	     0xf87ab000000	                            ja 0x40004e0	       431	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x4000435	    0xc703202d3e20	            mov dword [rbx], 0x203e2d20 	       110	string3.h	FUNCTION_32	CALL_3
0x400043b	        0xc6430400	                   mov byte [rbx + 4], 0	       110	string3.h	FUNCTION_32	CALL_3
0x400043f	        0x4883c304	                              add rbx, 4	       440	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000443	          0x4c29fb	                            sub rbx, r15	       440	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000446	          0x4139dc	                           cmp r12d, ebx	       441	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x4000449	            0x7735	                            ja 0x4000480	       441	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x400044b	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       126	string3.h	FUNCTION_34	CALL_3
0x4000450	          0x4c89e2	                            mov rdx, r12	       126	string3.h	FUNCTION_34	CALL_3
0x4000453	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_34	CALL_3
0x4000456	          0x4889df	                            mov rdi, rbx	       126	string3.h	FUNCTION_34	CALL_3
0x4000459	      0xe800000000	                          call 0x400045e	       126	string3.h	FUNCTION_34	CALL_3
0x400045e	      0x42c6042300	                 mov byte [rbx + r12], 0	       444	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x4000463	      0xe97cfeffff	                           jmp 0x40002e4	       444	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x4000468	     0xf1f84000000	                   nop dword [rax + rax]	       444	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x4000470	          0x4c39fb	                            cmp rbx, r15	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000473	            0x75ab	                           jne 0x4000420	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000475	            0x84c0	                             test al, al	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000477	            0x74a7	                            je 0x4000420	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000479	      0xe942ffffff	                           jmp 0x40003c0	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400047e	            0x6690	                                     nop	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000480	          0x4489e7	                           mov edi, r12d	       110	string3.h	FUNCTION_32	CALL_3
0x4000483	            0x89d8	                            mov eax, ebx	       110	string3.h	FUNCTION_32	CALL_3
0x4000485	          0x4c89fe	                            mov rsi, r15	       110	string3.h	FUNCTION_32	CALL_3
0x4000488	          0x4829c7	                            sub rdi, rax	       110	string3.h	FUNCTION_32	CALL_3
0x400048b	      0x48037c2408	                add rdi, qword [rsp + 8]	       110	string3.h	FUNCTION_32	CALL_3
0x4000490	      0xe800000000	                          call 0x4000495	       110	string3.h	FUNCTION_32	CALL_3
0x4000495	          0x4129dc	                           sub r12d, ebx	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x4000498	     0xf8446feffff	                            je 0x40002e4	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x400049e	    0x488b84244801	           mov rax, qword [rsp + 0x148] 	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004a6	    0x644833042528	                xor rax, qword fs:[0x28]	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004af	            0x754a	                           jne 0x40004fb	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004b1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004b6	    0x4881c4580100	                          add rsp, 0x158	       455	basic_blocks.c	FUNCTION_7
0x40004bd	      0x418d5424ff	                      lea edx, [r12 - 1]	       455	basic_blocks.c	FUNCTION_7
0x40004c2	              0x5b	                                 pop rbx	       455	basic_blocks.c	FUNCTION_7
0x40004c3	              0x5d	                                 pop rbp	       455	basic_blocks.c	FUNCTION_7
0x40004c4	            0x415c	                                 pop r12	       455	basic_blocks.c	FUNCTION_7
0x40004c6	            0x415d	                                 pop r13	       455	basic_blocks.c	FUNCTION_7
0x40004c8	            0x415e	                                 pop r14	       455	basic_blocks.c	FUNCTION_7
0x40004ca	            0x415f	                                 pop r15	       455	basic_blocks.c	FUNCTION_7
0x40004cc	        0x4883c201	                              add rdx, 1	       455	basic_blocks.c	FUNCTION_7
0x40004d0	      0xbe20000000	                           mov esi, 0x20	       455	basic_blocks.c	FUNCTION_7
0x40004d5	      0xe900000000	                           jmp 0x40004da	       455	basic_blocks.c	FUNCTION_7
0x40004da	    0x660f1f440000	                    nop word [rax + rax]	       455	basic_blocks.c	FUNCTION_7
0x40004e0	      0xb823000000	                           mov eax, 0x23	       110	string3.h	FUNCTION_32	CALL_3
0x40004e5	    0xc74424102323	     mov dword [rsp + 0x10], 0x23232323 	       110	string3.h	FUNCTION_32	CALL_3
0x40004ed	        0x498d5f05	                      lea rbx, [r15 + 5]	       434	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x40004f1	      0x6689442414	               mov word [rsp + 0x14], ax	       110	string3.h	FUNCTION_32	CALL_3
0x40004f6	      0xe93affffff	                           jmp 0x4000435	       110	string3.h	FUNCTION_32	CALL_3
0x40004fb	      0xe800000000	                          call 0x4000500	       455	basic_blocks.c	FUNCTION_7
0x4000500	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000505	          0x4531ed	                          xor r13d, r13d	       352	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000508	            0x31c0	                            xor eax, eax	       353	basic_blocks.c	FUNCTION_7	ELSE_1
0x400050a	          0x4c89fb	                            mov rbx, r15	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x400050d	      0xe996fdffff	                           jmp 0x40002a8	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000512	    0x4c8b85880000	              mov r8, qword [rbp + 0x88]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000519	    0x4c8905000000	              mov qword [0x04000520], r8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000520	      0xe975fcffff	                           jmp 0x400019a	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
