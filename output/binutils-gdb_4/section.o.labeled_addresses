bfd_make_section_old_way	WHILE,0:CALL,7:functions,0:IF,8:SWITCH,0:FOR,0:ELSE,4:DO,0	98
0x4000430	            0x4155	                                push r13	      1090	section.c	FUNCTION_10
0x4000432	            0x4154	                                push r12	      1090	section.c	FUNCTION_10
0x4000434	              0x55	                                push rbp	      1090	section.c	FUNCTION_10
0x4000435	              0x53	                                push rbx	      1090	section.c	FUNCTION_10
0x4000436	        0x4883ec08	                              sub rsp, 8	      1090	section.c	FUNCTION_10
0x400043a	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1093	section.c	FUNCTION_10	IF_1
0x400043e	     0xf853c010000	                           jne 0x4000580	      1093	section.c	FUNCTION_10	IF_1
0x4000444	          0x4889fd	                            mov rbp, rdi	      1093	section.c	FUNCTION_10	IF_1
0x4000447	      0xb906000000	                              mov ecx, 6	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x400044c	      0xbf00000000	                              mov edi, 0	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x4000451	          0x4989f4	                            mov r12, rsi	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x4000454	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x4000456	            0x7458	                            je 0x40004b0	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x4000458	      0xbf00000000	                              mov edi, 0	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x400045d	      0xb906000000	                              mov ecx, 6	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000462	          0x4c89e6	                            mov rsi, r12	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000465	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000467	            0x752f	                           jne 0x4000498	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000469	      0xbb00000000	                              mov ebx, 0	      1102	section.c	FUNCTION_10	ELSE_1	IF_3
0x400046e	        0x488b4508	                mov rax, qword [rbp + 8]	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000472	          0x4889de	                            mov rsi, rbx	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000475	          0x4889ef	                            mov rdi, rbp	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000478	    0xff9020010000	                call qword [rax + 0x120]	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x400047e	            0x85c0	                           test eax, eax	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000480	     0xf84f2000000	                            je 0x4000578	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000486	          0x4889d8	                            mov rax, rbx	      1131	section.c	FUNCTION_10
0x4000489	        0x4883c408	                              add rsp, 8	      1132	section.c	FUNCTION_10
0x400048d	              0x5b	                                 pop rbx	      1132	section.c	FUNCTION_10
0x400048e	              0x5d	                                 pop rbp	      1132	section.c	FUNCTION_10
0x400048f	            0x415c	                                 pop r12	      1132	section.c	FUNCTION_10
0x4000491	            0x415d	                                 pop r13	      1132	section.c	FUNCTION_10
0x4000493	              0xc3	                                     ret	      1132	section.c	FUNCTION_10
0x4000494	         0xf1f4000	                         nop dword [rax]	      1132	section.c	FUNCTION_10
0x4000498	      0xbf00000000	                              mov edi, 0	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x400049d	      0xb906000000	                              mov ecx, 6	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004a2	          0x4c89e6	                            mov rsi, r12	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004a7	            0x7517	                           jne 0x40004c0	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004a9	      0xbb00000000	                              mov ebx, 0	      1104	section.c	FUNCTION_10	ELSE_2	IF_4
0x40004ae	            0xebbe	                           jmp 0x400046e	      1104	section.c	FUNCTION_10	ELSE_2	IF_4
0x40004b0	      0xbb00000000	                              mov ebx, 0	      1100	section.c	FUNCTION_10	IF_2
0x40004b5	            0xebb7	                           jmp 0x400046e	      1100	section.c	FUNCTION_10	IF_2
0x40004b7	    0x660f1f840000	                    nop word [rax + rax]	      1100	section.c	FUNCTION_10	IF_2
0x40004c0	      0xbf00000000	                              mov edi, 0	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004c5	      0xb906000000	                              mov ecx, 6	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004ca	          0x4c89e6	                            mov rsi, r12	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004cd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004cf	      0xbb00000000	                              mov ebx, 0	      1106	section.c	FUNCTION_10	ELSE_3	IF_5
0x40004d4	           0xf97c2	                                 seta dl	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004d7	           0xf92c0	                                 setb al	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004da	            0x38c2	                              cmp dl, al	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004dc	            0x7490	                            je 0x400046e	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004de	        0x488d7d68	                   lea rdi, [rbp + 0x68]	      1111	section.c	FUNCTION_10	ELSE_4
0x40004e2	            0x31c9	                            xor ecx, ecx	      1111	section.c	FUNCTION_10	ELSE_4
0x40004e4	      0xba01000000	                              mov edx, 1	      1111	section.c	FUNCTION_10	ELSE_4
0x40004e9	          0x4c89e6	                            mov rsi, r12	      1111	section.c	FUNCTION_10	ELSE_4
0x40004ec	      0xe800000000	                          call 0x40004f1	      1111	section.c	FUNCTION_10	ELSE_4
0x40004f1	          0x4885c0	                           test rax, rax	      1112	section.c	FUNCTION_10	ELSE_4	IF_6
0x40004f4	          0x4889c3	                            mov rbx, rax	      1111	section.c	FUNCTION_10	ELSE_4
0x40004f7	            0x747f	                            je 0x4000578	      1112	section.c	FUNCTION_10	ELSE_4	IF_6
0x40004f9	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1116	section.c	FUNCTION_10	ELSE_4	IF_7
0x40004fe	        0x4c8d6818	                   lea r13, [rax + 0x18]	      1115	section.c	FUNCTION_10	ELSE_4
0x4000502	          0x4c89e8	                            mov rax, r13	      1119	section.c	FUNCTION_10	ELSE_4	IF_7
0x4000505	            0x7582	                           jne 0x4000489	      1116	section.c	FUNCTION_10	ELSE_4	IF_7
0x4000507	    0x8b0500000000	            mov eax, dword [0x0400050d] 	       830	section.c	FUNCTION_3
0x400050d	        0x4c896318	             mov qword [rbx + 0x18], r12	      1122	section.c	FUNCTION_10	ELSE_4
0x4000511	          0x4c89ee	                            mov rsi, r13	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000514	          0x4889ef	                            mov rdi, rbp	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000517	          0x894320	             mov dword [rbx + 0x20], eax	       830	section.c	FUNCTION_3
0x400051a	    0x8b85a0000000	            mov eax, dword [rbp + 0xa0] 	       831	section.c	FUNCTION_3
0x4000520	    0x4889ab080100	            mov qword [rbx + 0x108], rbp	       832	section.c	FUNCTION_3
0x4000527	          0x894324	             mov dword [rbx + 0x24], eax	       831	section.c	FUNCTION_3
0x400052a	        0x488b4508	                mov rax, qword [rbp + 8]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x400052e	    0xff9020010000	                call qword [rax + 0x120]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000534	            0x85c0	                           test eax, eax	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000536	            0x7440	                            je 0x4000578	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000538	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	       839	section.c	FUNCTION_3	CALL_2
0x400053f	    0x8385a0000000	               add dword [rbp + 0xa0], 1	       838	section.c	FUNCTION_3
0x4000546	    0x830500000000	               add dword [0x0400054d], 1	       837	section.c	FUNCTION_3
0x400054d	    0x48c743280000	               mov qword [rbx + 0x28], 0	       839	section.c	FUNCTION_3	CALL_2
0x4000555	          0x4885c0	                           test rax, rax	       839	section.c	FUNCTION_3	CALL_2
0x4000558	            0x7437	                            je 0x4000591	       839	section.c	FUNCTION_3	CALL_2
0x400055a	        0x48894330	             mov qword [rbx + 0x30], rax	       839	section.c	FUNCTION_3	CALL_2
0x400055e	        0x4c896810	             mov qword [rax + 0x10], r13	       839	section.c	FUNCTION_3	CALL_2
0x4000562	    0x4c89ad980000	            mov qword [rbp + 0x98], r13 	       839	section.c	FUNCTION_3	CALL_2
0x4000569	          0x4c89e8	                            mov rax, r13	       840	section.c	FUNCTION_3
0x400056c	      0xe918ffffff	                           jmp 0x4000489	       840	section.c	FUNCTION_3
0x4000571	     0xf1f80000000	                         nop dword [rax]	       840	section.c	FUNCTION_3
0x4000578	            0x31c0	                            xor eax, eax	      1113	section.c	FUNCTION_10	ELSE_4	IF_6
0x400057a	      0xe90affffff	                           jmp 0x4000489	      1113	section.c	FUNCTION_10	ELSE_4	IF_6
0x400057f	              0x90	                                     nop	      1113	section.c	FUNCTION_10	ELSE_4	IF_6
0x4000580	      0xbf05000000	                              mov edi, 5	      1095	section.c	FUNCTION_10	IF_1	CALL_1
0x4000585	      0xe800000000	                          call 0x400058a	      1095	section.c	FUNCTION_10	IF_1	CALL_1
0x400058a	            0x31c0	                            xor eax, eax	      1096	section.c	FUNCTION_10	IF_1
0x400058c	      0xe9f8feffff	                           jmp 0x4000489	      1096	section.c	FUNCTION_10	IF_1
0x4000591	    0x48c743300000	               mov qword [rbx + 0x30], 0	       839	section.c	FUNCTION_3	CALL_2
0x4000599	    0x4c89ad900000	            mov qword [rbp + 0x90], r13 	       839	section.c	FUNCTION_3	CALL_2
0x40005a0	            0xebc0	                           jmp 0x4000562	       839	section.c	FUNCTION_3	CALL_2
bfd_set_section_contents	WHILE,0:CALL,7:functions,0:IF,5:SWITCH,0:FOR,0:ELSE,0:DO,0	69
0x4000cb0	            0x4154	                                push r12	      1482	section.c	FUNCTION_20
0x4000cb2	              0x55	                                push rbp	      1482	section.c	FUNCTION_20
0x4000cb3	              0x53	                                push rbx	      1482	section.c	FUNCTION_20
0x4000cb4	        0x4883ec10	                           sub rsp, 0x10	      1482	section.c	FUNCTION_20
0x4000cb8	        0xf6462101	               test byte [rsi + 0x21], 1	      1485	section.c	FUNCTION_20	IF_1	CALL_1
0x4000cbc	     0xf84a6000000	                            je 0x4000d68	      1485	section.c	FUNCTION_20	IF_1	CALL_1
0x4000cc2	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1491	section.c	FUNCTION_20
0x4000cc6	          0x4889f3	                            mov rbx, rsi	      1491	section.c	FUNCTION_20
0x4000cc9	          0x4839c8	                            cmp rax, rcx	      1492	section.c	FUNCTION_20	IF_2
0x4000ccc	     0xf827e000000	                            jb 0x4000d50	      1492	section.c	FUNCTION_20	IF_2
0x4000cd2	          0x4c39c0	                             cmp rax, r8	      1492	section.c	FUNCTION_20	IF_2
0x4000cd5	            0x7279	                            jb 0x4000d50	      1492	section.c	FUNCTION_20	IF_2
0x4000cd7	          0x4989d4	                            mov r12, rdx	      1492	section.c	FUNCTION_20	IF_2
0x4000cda	        0x4a8d1401	                     lea rdx, [rcx + r8]	      1495	section.c	FUNCTION_20	IF_2
0x4000cde	          0x4839d0	                            cmp rax, rdx	      1495	section.c	FUNCTION_20	IF_2
0x4000ce1	            0x726d	                            jb 0x4000d50	      1495	section.c	FUNCTION_20	IF_2
0x4000ce3	        0xf6474410	           test byte [rdi + 0x44], 0x10 	      1501	section.c	FUNCTION_20	IF_3	CALL_4
0x4000ce7	          0x4889fd	                            mov rbp, rdi	      1501	section.c	FUNCTION_20	IF_3	CALL_4
0x4000cea	     0xf8490000000	                            je 0x4000d80	      1501	section.c	FUNCTION_20	IF_3	CALL_4
0x4000cf0	    0x488bbeb00000	            mov rdi, qword [rsi + 0xb0] 	      1508	section.c	FUNCTION_20	IF_4
0x4000cf7	          0x4885ff	                           test rdi, rdi	      1508	section.c	FUNCTION_20	IF_4
0x4000cfa	            0x7425	                            je 0x4000d21	      1508	section.c	FUNCTION_20	IF_4
0x4000cfc	          0x4801cf	                            add rdi, rcx	      1509	section.c	FUNCTION_20	IF_4
0x4000cff	          0x4c39e7	                            cmp rdi, r12	      1509	section.c	FUNCTION_20	IF_4
0x4000d02	            0x741d	                            je 0x4000d21	      1509	section.c	FUNCTION_20	IF_4
0x4000d04	          0x4c89c2	                             mov rdx, r8	        53	string3.h	FUNCTION_26	CALL_3
0x4000d07	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_26	CALL_3
0x4000d0a	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_26	CALL_3
0x4000d0f	        0x4c890424	                     mov qword [rsp], r8	        53	string3.h	FUNCTION_26	CALL_3
0x4000d13	      0xe800000000	                          call 0x4000d18	        53	string3.h	FUNCTION_26	CALL_3
0x4000d18	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        53	string3.h	FUNCTION_26	CALL_3
0x4000d1d	        0x4c8b0424	                     mov r8, qword [rsp]	        53	string3.h	FUNCTION_26	CALL_3
0x4000d21	        0x488b4508	                mov rax, qword [rbp + 8]	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000d25	          0x4c89e2	                            mov rdx, r12	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000d28	          0x4889de	                            mov rsi, rbx	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000d2b	          0x4889ef	                            mov rdi, rbp	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000d2e	    0xff9098020000	                call qword [rax + 0x298]	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000d34	            0x85c0	                           test eax, eax	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000d36	            0x7424	                            je 0x4000d5c	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000d38	        0x804d4740	              or byte [rbp + 0x47], 0x40	      1515	section.c	FUNCTION_20	IF_5
0x4000d3c	        0x4883c410	                           add rsp, 0x10	      1520	section.c	FUNCTION_20
0x4000d40	      0xb801000000	                              mov eax, 1	      1516	section.c	FUNCTION_20	IF_5
0x4000d45	              0x5b	                                 pop rbx	      1520	section.c	FUNCTION_20
0x4000d46	              0x5d	                                 pop rbp	      1520	section.c	FUNCTION_20
0x4000d47	            0x415c	                                 pop r12	      1520	section.c	FUNCTION_20
0x4000d49	              0xc3	                                     ret	      1520	section.c	FUNCTION_20
0x4000d4a	    0x660f1f440000	                    nop word [rax + rax]	      1520	section.c	FUNCTION_20
0x4000d50	      0xbf11000000	                           mov edi, 0x11	      1497	section.c	FUNCTION_20	IF_2	CALL_3
0x4000d55	      0xe800000000	                          call 0x4000d5a	      1497	section.c	FUNCTION_20	IF_2	CALL_3
0x4000d5a	            0x31c0	                            xor eax, eax	      1498	section.c	FUNCTION_20	IF_2
0x4000d5c	        0x4883c410	                           add rsp, 0x10	      1520	section.c	FUNCTION_20
0x4000d60	              0x5b	                                 pop rbx	      1520	section.c	FUNCTION_20
0x4000d61	              0x5d	                                 pop rbp	      1520	section.c	FUNCTION_20
0x4000d62	            0x415c	                                 pop r12	      1520	section.c	FUNCTION_20
0x4000d64	              0xc3	                                     ret	      1520	section.c	FUNCTION_20
0x4000d65	           0xf1f00	                         nop dword [rax]	      1520	section.c	FUNCTION_20
0x4000d68	      0xbf0e000000	                            mov edi, 0xe	      1487	section.c	FUNCTION_20	IF_1	CALL_2
0x4000d6d	      0xe800000000	                          call 0x4000d72	      1487	section.c	FUNCTION_20	IF_1	CALL_2
0x4000d72	        0x4883c410	                           add rsp, 0x10	      1520	section.c	FUNCTION_20
0x4000d76	            0x31c0	                            xor eax, eax	      1488	section.c	FUNCTION_20	IF_1
0x4000d78	              0x5b	                                 pop rbx	      1520	section.c	FUNCTION_20
0x4000d79	              0x5d	                                 pop rbp	      1520	section.c	FUNCTION_20
0x4000d7a	            0x415c	                                 pop r12	      1520	section.c	FUNCTION_20
0x4000d7c	              0xc3	                                     ret	      1520	section.c	FUNCTION_20
0x4000d7d	           0xf1f00	                         nop dword [rax]	      1520	section.c	FUNCTION_20
0x4000d80	      0xbf05000000	                              mov edi, 5	      1503	section.c	FUNCTION_20	IF_3	CALL_5
0x4000d85	      0xe800000000	                          call 0x4000d8a	      1503	section.c	FUNCTION_20	IF_3	CALL_5
0x4000d8a	            0x31c0	                            xor eax, eax	      1504	section.c	FUNCTION_20	IF_3
0x4000d8c	            0xebce	                           jmp 0x4000d5c	      1504	section.c	FUNCTION_20	IF_3
bfd_set_section_size	WHILE,0:CALL,1:functions,0:IF,1:SWITCH,0:FOR,0:ELSE,0:DO,0	11
0x4000c80	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1439	section.c	FUNCTION_19	IF_1
0x4000c84	            0x750a	                           jne 0x4000c90	      1439	section.c	FUNCTION_19	IF_1
0x4000c86	        0x48895638	             mov qword [rsi + 0x38], rdx	      1445	section.c	FUNCTION_19
0x4000c8a	      0xb801000000	                              mov eax, 1	      1446	section.c	FUNCTION_19
0x4000c8f	              0xc3	                                     ret	      1446	section.c	FUNCTION_19
0x4000c90	        0x4883ec08	                              sub rsp, 8	      1435	section.c	FUNCTION_19
0x4000c94	      0xbf05000000	                              mov edi, 5	      1441	section.c	FUNCTION_19	IF_1	CALL_1
0x4000c99	      0xe800000000	                          call 0x4000c9e	      1441	section.c	FUNCTION_19	IF_1	CALL_1
0x4000c9e	            0x31c0	                            xor eax, eax	      1442	section.c	FUNCTION_19	IF_1
0x4000ca0	        0x4883c408	                              add rsp, 8	      1447	section.c	FUNCTION_19
0x4000ca4	              0xc3	                                     ret	      1447	section.c	FUNCTION_19
bfd_sections_find_if	WHILE,0:CALL,1:functions,0:IF,1:SWITCH,0:FOR,1:ELSE,0:DO,0	38
0x4000c20	            0x4155	                                push r13	      1405	section.c	FUNCTION_18
0x4000c22	            0x4154	                                push r12	      1405	section.c	FUNCTION_18
0x4000c24	          0x4989f5	                            mov r13, rsi	      1405	section.c	FUNCTION_18
0x4000c27	              0x55	                                push rbp	      1405	section.c	FUNCTION_18
0x4000c28	              0x53	                                push rbx	      1405	section.c	FUNCTION_18
0x4000c29	          0x4889fd	                            mov rbp, rdi	      1405	section.c	FUNCTION_18
0x4000c2c	          0x4989d4	                            mov r12, rdx	      1405	section.c	FUNCTION_18
0x4000c2f	        0x4883ec08	                              sub rsp, 8	      1405	section.c	FUNCTION_18
0x4000c33	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      1408	section.c	FUNCTION_18	FOR_1
0x4000c3a	          0x4885db	                           test rbx, rbx	      1408	section.c	FUNCTION_18	FOR_1
0x4000c3d	            0x7512	                           jne 0x4000c51	      1408	section.c	FUNCTION_18	FOR_1
0x4000c3f	            0xeb2f	                           jmp 0x4000c70	      1408	section.c	FUNCTION_18	FOR_1
0x4000c41	     0xf1f80000000	                         nop dword [rax]	      1408	section.c	FUNCTION_18	FOR_1
0x4000c48	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1408	section.c	FUNCTION_18	FOR_1
0x4000c4c	          0x4885db	                           test rbx, rbx	      1408	section.c	FUNCTION_18	FOR_1
0x4000c4f	            0x741f	                            je 0x4000c70	      1408	section.c	FUNCTION_18	FOR_1
0x4000c51	          0x4c89e2	                            mov rdx, r12	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000c54	          0x4889de	                            mov rsi, rbx	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000c57	          0x4889ef	                            mov rdi, rbp	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000c5a	          0x41ffd5	                                call r13	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000c5d	            0x85c0	                           test eax, eax	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000c5f	            0x74e7	                            je 0x4000c48	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000c61	        0x4883c408	                              add rsp, 8	      1413	section.c	FUNCTION_18
0x4000c65	          0x4889d8	                            mov rax, rbx	      1413	section.c	FUNCTION_18
0x4000c68	              0x5b	                                 pop rbx	      1413	section.c	FUNCTION_18
0x4000c69	              0x5d	                                 pop rbp	      1413	section.c	FUNCTION_18
0x4000c6a	            0x415c	                                 pop r12	      1413	section.c	FUNCTION_18
0x4000c6c	            0x415d	                                 pop r13	      1413	section.c	FUNCTION_18
0x4000c6e	              0xc3	                                     ret	      1413	section.c	FUNCTION_18
0x4000c6f	              0x90	                                     nop	      1413	section.c	FUNCTION_18
0x4000c70	        0x4883c408	                              add rsp, 8	      1413	section.c	FUNCTION_18
0x4000c74	            0x31db	                            xor ebx, ebx	      1405	section.c	FUNCTION_18
0x4000c76	          0x4889d8	                            mov rax, rbx	      1413	section.c	FUNCTION_18
0x4000c79	              0x5b	                                 pop rbx	      1413	section.c	FUNCTION_18
0x4000c7a	              0x5d	                                 pop rbp	      1413	section.c	FUNCTION_18
0x4000c7b	            0x415c	                                 pop r12	      1413	section.c	FUNCTION_18
0x4000c7d	            0x415d	                                 pop r13	      1413	section.c	FUNCTION_18
0x4000c7f	              0xc3	                                     ret	      1413	section.c	FUNCTION_18
bfd_get_linker_section	WHILE,1:CALL,2:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	37
0x4000240	            0x4154	                                push r12	       961	section.c	FUNCTION_7
0x4000242	              0x55	                                push rbp	       961	section.c	FUNCTION_7
0x4000243	        0x4883c768	                           add rdi, 0x68	       893	section.c	FUNCTION_5
0x4000247	              0x53	                                push rbx	       961	section.c	FUNCTION_7
0x4000248	            0x31c9	                            xor ecx, ecx	       893	section.c	FUNCTION_5
0x400024a	            0x31d2	                            xor edx, edx	       893	section.c	FUNCTION_5
0x400024c	      0xe800000000	                          call 0x4000251	       893	section.c	FUNCTION_5
0x4000251	          0x4885c0	                           test rax, rax	       894	section.c	FUNCTION_5	IF_1
0x4000254	            0x744a	                            je 0x40002a0	       894	section.c	FUNCTION_5	IF_1
0x4000256	        0x4883c018	                           add rax, 0x18	       895	section.c	FUNCTION_5	IF_1
0x400025a	        0xf6402210	           test byte [rax + 0x22], 0x10 	       964	section.c	FUNCTION_7	WHILE_1
0x400025e	            0x7542	                           jne 0x40002a2	       964	section.c	FUNCTION_7	WHILE_1
0x4000260	        0x488b58e8	             mov rbx, qword [rax - 0x18]	       927	section.c	FUNCTION_6	FOR_1
0x4000264	        0x488b68f8	                mov rbp, qword [rax - 8]	       925	section.c	FUNCTION_6
0x4000268	          0x4c8b20	                    mov r12, qword [rax]	       926	section.c	FUNCTION_6
0x400026b	          0x4885db	                           test rbx, rbx	       927	section.c	FUNCTION_6	FOR_1
0x400026e	            0x7510	                           jne 0x4000280	       927	section.c	FUNCTION_6	FOR_1
0x4000270	            0xeb2e	                           jmp 0x40002a0	       927	section.c	FUNCTION_6	FOR_1
0x4000272	    0x660f1f440000	                    nop word [rax + rax]	       927	section.c	FUNCTION_6	FOR_1
0x4000278	          0x488b1b	                    mov rbx, qword [rbx]	       929	section.c	FUNCTION_6	FOR_1
0x400027b	          0x4885db	                           test rbx, rbx	       927	section.c	FUNCTION_6	FOR_1
0x400027e	            0x7420	                            je 0x40002a0	       927	section.c	FUNCTION_6	FOR_1
0x4000280	        0x483b6b10	            cmp rbp, qword [rbx + 0x10] 	       930	section.c	FUNCTION_6	FOR_1	IF_1
0x4000284	            0x75f2	                           jne 0x4000278	       930	section.c	FUNCTION_6	FOR_1	IF_1
0x4000286	        0x488b7b08	                mov rdi, qword [rbx + 8]	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400028a	          0x4c89e6	                            mov rsi, r12	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400028d	      0xe800000000	                          call 0x4000292	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000292	            0x85c0	                           test eax, eax	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000294	            0x75e2	                           jne 0x4000278	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000296	        0x488d4318	                   lea rax, [rbx + 0x18]	       932	section.c	FUNCTION_6	FOR_1	IF_1
0x400029a	            0xebbe	                           jmp 0x400025a	       932	section.c	FUNCTION_6	FOR_1	IF_1
0x400029c	         0xf1f4000	                         nop dword [rax]	       932	section.c	FUNCTION_6	FOR_1	IF_1
0x40002a0	            0x31c0	                            xor eax, eax	       927	section.c	FUNCTION_6	FOR_1
0x40002a2	              0x5b	                                 pop rbx	       967	section.c	FUNCTION_7
0x40002a3	              0x5d	                                 pop rbp	       967	section.c	FUNCTION_7
0x40002a4	            0x415c	                                 pop r12	       967	section.c	FUNCTION_7
0x40002a6	              0xc3	                                     ret	       967	section.c	FUNCTION_7
bfd_map_over_sections	WHILE,0:CALL,1:functions,0:IF,1:SWITCH,0:FOR,1:ELSE,0:DO,0	35
0x4000bb0	            0x4156	                                push r14	      1369	section.c	FUNCTION_17
0x4000bb2	            0x4155	                                push r13	      1369	section.c	FUNCTION_17
0x4000bb4	            0x4154	                                push r12	      1369	section.c	FUNCTION_17
0x4000bb6	              0x55	                                push rbp	      1369	section.c	FUNCTION_17
0x4000bb7	          0x4989fc	                            mov r12, rdi	      1369	section.c	FUNCTION_17
0x4000bba	              0x53	                                push rbx	      1369	section.c	FUNCTION_17
0x4000bbb	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      1373	section.c	FUNCTION_17	FOR_1
0x4000bc2	          0x4885db	                           test rbx, rbx	      1373	section.c	FUNCTION_17	FOR_1
0x4000bc5	            0x7434	                            je 0x4000bfb	      1373	section.c	FUNCTION_17	FOR_1
0x4000bc7	          0x4989f5	                            mov r13, rsi	      1373	section.c	FUNCTION_17	FOR_1
0x4000bca	          0x4989d6	                            mov r14, rdx	      1373	section.c	FUNCTION_17	FOR_1
0x4000bcd	            0x31ed	                            xor ebp, ebp	      1373	section.c	FUNCTION_17	FOR_1
0x4000bcf	              0x90	                                     nop	      1373	section.c	FUNCTION_17	FOR_1
0x4000bd0	          0x4889de	                            mov rsi, rbx	      1374	section.c	FUNCTION_17	FOR_1
0x4000bd3	          0x4c89f2	                            mov rdx, r14	      1374	section.c	FUNCTION_17	FOR_1
0x4000bd6	          0x4c89e7	                            mov rdi, r12	      1374	section.c	FUNCTION_17	FOR_1
0x4000bd9	          0x41ffd5	                                call r13	      1374	section.c	FUNCTION_17	FOR_1
0x4000bdc	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1373	section.c	FUNCTION_17	FOR_1
0x4000be0	          0x83c501	                              add ebp, 1	      1373	section.c	FUNCTION_17	FOR_1
0x4000be3	          0x4885db	                           test rbx, rbx	      1373	section.c	FUNCTION_17	FOR_1
0x4000be6	            0x75e8	                           jne 0x4000bd0	      1373	section.c	FUNCTION_17	FOR_1
0x4000be8	    0x4139ac24a000	            cmp dword [r12 + 0xa0], ebp 	      1376	section.c	FUNCTION_17	IF_1
0x4000bf0	            0x750d	                           jne 0x4000bff	      1376	section.c	FUNCTION_17	IF_1
0x4000bf2	              0x5b	                                 pop rbx	      1378	section.c	FUNCTION_17
0x4000bf3	              0x5d	                                 pop rbp	      1378	section.c	FUNCTION_17
0x4000bf4	            0x415c	                                 pop r12	      1378	section.c	FUNCTION_17
0x4000bf6	            0x415d	                                 pop r13	      1378	section.c	FUNCTION_17
0x4000bf8	            0x415e	                                 pop r14	      1378	section.c	FUNCTION_17
0x4000bfa	              0xc3	                                     ret	      1378	section.c	FUNCTION_17
0x4000bfb	            0x31ed	                            xor ebp, ebp	      1371	section.c	FUNCTION_17
0x4000bfd	            0xebe9	                           jmp 0x4000be8	      1371	section.c	FUNCTION_17
0x4000bff	      0xba00000000	                              mov edx, 0	      1377	section.c	FUNCTION_17	CALL_1
0x4000c04	      0xbe61050000	                          mov esi, 0x561	      1377	section.c	FUNCTION_17	CALL_1
0x4000c09	      0xbf00000000	                              mov edi, 0	      1377	section.c	FUNCTION_17	CALL_1
0x4000c0e	      0xe800000000	                          call 0x4000c13	      1377	section.c	FUNCTION_17	CALL_1
bfd_generic_is_group_section	WHILE,0:CALL,0:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	2
0x4000e90	            0x31c0	                            xor eax, eax	      1659	section.c	FUNCTION_23
0x4000e92	              0xc3	                                     ret	      1659	section.c	FUNCTION_23
bfd_section_list_clear	WHILE,0:CALL,1:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	13
0x4000120	              0x53	                                push rbx	       867	section.c	FUNCTION_4
0x4000121	    0x8b9780000000	            mov edx, dword [rdi + 0x80] 	        90	string3.h	FUNCTION_29	CALL_6
0x4000127	          0x4889fb	                            mov rbx, rdi	       867	section.c	FUNCTION_4
0x400012a	    0x48c787900000	               mov qword [rdi + 0x90], 0	       868	section.c	FUNCTION_4
0x4000135	    0x48c787980000	               mov qword [rdi + 0x98], 0	       869	section.c	FUNCTION_4
0x4000140	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_29	CALL_6
0x4000142	    0xc787a0000000	               mov dword [rdi + 0xa0], 0	       870	section.c	FUNCTION_4
0x400014c	        0x488b7f68	            mov rdi, qword [rdi + 0x68] 	        90	string3.h	FUNCTION_29	CALL_6
0x4000150	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x4000154	      0xe800000000	                          call 0x4000159	        90	string3.h	FUNCTION_29	CALL_6
0x4000159	    0xc78384000000	               mov dword [rbx + 0x84], 0	       873	section.c	FUNCTION_4
0x4000163	              0x5b	                                 pop rbx	       874	section.c	FUNCTION_4
0x4000164	              0xc3	                                     ret	       874	section.c	FUNCTION_4
bfd_make_section_anyway	WHILE,0:CALL,1:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	103
0x4000740	            0x4155	                                push r13	      1212	section.c	FUNCTION_12
0x4000742	            0x4154	                                push r12	      1212	section.c	FUNCTION_12
0x4000744	              0x55	                                push rbp	      1212	section.c	FUNCTION_12
0x4000745	              0x53	                                push rbx	      1212	section.c	FUNCTION_12
0x4000746	        0x4883ec08	                              sub rsp, 8	      1212	section.c	FUNCTION_12
0x400074a	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1160	section.c	FUNCTION_11	IF_1
0x400074e	     0xf8564010000	                           jne 0x40008b8	      1160	section.c	FUNCTION_11	IF_1
0x4000754	        0x488d5f68	                   lea rbx, [rdi + 0x68]	      1166	section.c	FUNCTION_11
0x4000758	            0x31c9	                            xor ecx, ecx	      1166	section.c	FUNCTION_11
0x400075a	          0x4889fd	                            mov rbp, rdi	      1166	section.c	FUNCTION_11
0x400075d	      0xba01000000	                              mov edx, 1	      1166	section.c	FUNCTION_11
0x4000762	          0x4989f4	                            mov r12, rsi	      1166	section.c	FUNCTION_11
0x4000765	          0x4889df	                            mov rdi, rbx	      1166	section.c	FUNCTION_11
0x4000768	      0xe800000000	                          call 0x400076d	      1166	section.c	FUNCTION_11
0x400076d	          0x4885c0	                           test rax, rax	      1167	section.c	FUNCTION_11	IF_2
0x4000770	          0x4989c5	                            mov r13, rax	      1166	section.c	FUNCTION_11
0x4000773	     0xf8407010000	                            je 0x4000880	      1167	section.c	FUNCTION_11	IF_2
0x4000779	      0x4883781800	               cmp qword [rax + 0x18], 0	      1171	section.c	FUNCTION_11	IF_3
0x400077e	     0xf840c010000	                            je 0x4000890	      1171	section.c	FUNCTION_11	IF_3
0x4000784	      0xbe30010000	                          mov esi, 0x130	       784	section.c	FUNCTION_1	IF_1
0x4000789	          0x4889df	                            mov rdi, rbx	       784	section.c	FUNCTION_1	IF_1
0x400078c	      0xe800000000	                          call 0x4000791	       784	section.c	FUNCTION_1	IF_1
0x4000791	          0x4885c0	                           test rax, rax	       786	section.c	FUNCTION_1	IF_1	IF_2
0x4000794	     0xf84e6000000	                            je 0x4000880	       786	section.c	FUNCTION_1	IF_1	IF_2
0x400079a	          0x4c89e2	                            mov rdx, r12	       791	section.c	FUNCTION_1	CALL_2
0x400079d	          0x4889de	                            mov rsi, rbx	       791	section.c	FUNCTION_1	CALL_2
0x40007a0	          0x4889c7	                            mov rdi, rax	       791	section.c	FUNCTION_1	CALL_2
0x40007a3	      0xe800000000	                          call 0x40007a8	       791	section.c	FUNCTION_1	CALL_2
0x40007a8	          0x4885c0	                           test rax, rax	       792	section.c	FUNCTION_1	IF_3
0x40007ab	          0x4889c2	                            mov rdx, rax	       791	section.c	FUNCTION_1	CALL_2
0x40007ae	     0xf84cc000000	                            je 0x4000880	       792	section.c	FUNCTION_1	IF_3
0x40007b4	        0x488d5818	                   lea rbx, [rax + 0x18]	       793	section.c	FUNCTION_1	IF_3	CALL_3
0x40007b8	        0x488d7820	                   lea rdi, [rax + 0x20]	        90	string3.h	FUNCTION_29	CALL_6
0x40007bc	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_29	CALL_6
0x40007c4	    0x48c780280100	              mov qword [rax + 0x128], 0	        90	string3.h	FUNCTION_29	CALL_6
0x40007cf	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_29	CALL_6
0x40007d1	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_29	CALL_6
0x40007d5	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_29	CALL_6
0x40007d8	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_29	CALL_6
0x40007db	    0x81c118010000	                          add ecx, 0x118	        90	string3.h	FUNCTION_29	CALL_6
0x40007e1	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x40007e4	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_29	CALL_6
0x40007e7	        0x498b4500	                    mov rax, qword [r13]	      1183	section.c	FUNCTION_11	IF_3
0x40007eb	          0x488902	                    mov qword [rdx], rax	      1183	section.c	FUNCTION_11	IF_3
0x40007ee	        0x498b4508	                mov rax, qword [r13 + 8]	      1183	section.c	FUNCTION_11	IF_3
0x40007f2	        0x48894208	                mov qword [rdx + 8], rax	      1183	section.c	FUNCTION_11	IF_3
0x40007f6	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1183	section.c	FUNCTION_11	IF_3
0x40007fa	        0x48894210	             mov qword [rdx + 0x10], rax	      1183	section.c	FUNCTION_11	IF_3
0x40007fe	        0x49895500	                    mov qword [r13], rdx	      1184	section.c	FUNCTION_11	IF_3
0x4000802	    0x8b0500000000	            mov eax, dword [0x04000808] 	       830	section.c	FUNCTION_3
0x4000808	    0xc74320000000	               mov dword [rbx + 0x20], 0	      1188	section.c	FUNCTION_11
0x400080f	          0x4889de	                            mov rsi, rbx	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000812	          0x4c8923	                    mov qword [rbx], r12	      1189	section.c	FUNCTION_11
0x4000815	          0x4889ef	                            mov rdi, rbp	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000818	          0x894308	                mov dword [rbx + 8], eax	       830	section.c	FUNCTION_3
0x400081b	    0x8b85a0000000	            mov eax, dword [rbp + 0xa0] 	       831	section.c	FUNCTION_3
0x4000821	    0x4889abf00000	             mov qword [rbx + 0xf0], rbp	       832	section.c	FUNCTION_3
0x4000828	          0x89430c	              mov dword [rbx + 0xc], eax	       831	section.c	FUNCTION_3
0x400082b	        0x488b4508	                mov rax, qword [rbp + 8]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x400082f	    0xff9020010000	                call qword [rax + 0x120]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000835	            0x85c0	                           test eax, eax	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000837	            0x7447	                            je 0x4000880	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000839	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	       839	section.c	FUNCTION_3	CALL_2
0x4000840	    0x8385a0000000	               add dword [rbp + 0xa0], 1	       838	section.c	FUNCTION_3
0x4000847	    0x830500000000	               add dword [0x0400084e], 1	       837	section.c	FUNCTION_3
0x400084e	    0x48c743100000	               mov qword [rbx + 0x10], 0	       839	section.c	FUNCTION_3	CALL_2
0x4000856	          0x4885c0	                           test rax, rax	       839	section.c	FUNCTION_3	CALL_2
0x4000859	            0x7445	                            je 0x40008a0	       839	section.c	FUNCTION_3	CALL_2
0x400085b	        0x48894318	             mov qword [rbx + 0x18], rax	       839	section.c	FUNCTION_3	CALL_2
0x400085f	        0x48895810	             mov qword [rax + 0x10], rbx	       839	section.c	FUNCTION_3	CALL_2
0x4000863	    0x48899d980000	            mov qword [rbp + 0x98], rbx 	       839	section.c	FUNCTION_3	CALL_2
0x400086a	        0x4883c408	                              add rsp, 8	      1214	section.c	FUNCTION_12
0x400086e	          0x4889d8	                            mov rax, rbx	       839	section.c	FUNCTION_3	CALL_2
0x4000871	              0x5b	                                 pop rbx	      1214	section.c	FUNCTION_12
0x4000872	              0x5d	                                 pop rbp	      1214	section.c	FUNCTION_12
0x4000873	            0x415c	                                 pop r12	      1214	section.c	FUNCTION_12
0x4000875	            0x415d	                                 pop r13	      1214	section.c	FUNCTION_12
0x4000877	              0xc3	                                     ret	      1214	section.c	FUNCTION_12
0x4000878	     0xf1f84000000	                   nop dword [rax + rax]	      1214	section.c	FUNCTION_12
0x4000880	        0x4883c408	                              add rsp, 8	      1214	section.c	FUNCTION_12
0x4000884	            0x31c0	                            xor eax, eax	      1181	section.c	FUNCTION_11	IF_3	IF_4
0x4000886	              0x5b	                                 pop rbx	      1214	section.c	FUNCTION_12
0x4000887	              0x5d	                                 pop rbp	      1214	section.c	FUNCTION_12
0x4000888	            0x415c	                                 pop r12	      1214	section.c	FUNCTION_12
0x400088a	            0x415d	                                 pop r13	      1214	section.c	FUNCTION_12
0x400088c	              0xc3	                                     ret	      1214	section.c	FUNCTION_12
0x400088d	           0xf1f00	                         nop dword [rax]	      1214	section.c	FUNCTION_12
0x4000890	        0x488d5818	                   lea rbx, [rax + 0x18]	      1170	section.c	FUNCTION_11
0x4000894	      0xe969ffffff	                           jmp 0x4000802	      1170	section.c	FUNCTION_11
0x4000899	     0xf1f80000000	                         nop dword [rax]	      1170	section.c	FUNCTION_11
0x40008a0	    0x48c743180000	               mov qword [rbx + 0x18], 0	       839	section.c	FUNCTION_3	CALL_2
0x40008a8	    0x48899d900000	            mov qword [rbp + 0x90], rbx 	       839	section.c	FUNCTION_3	CALL_2
0x40008af	            0xebb2	                           jmp 0x4000863	       839	section.c	FUNCTION_3	CALL_2
0x40008b1	     0xf1f80000000	                         nop dword [rax]	       839	section.c	FUNCTION_3	CALL_2
0x40008b8	      0xbf05000000	                              mov edi, 5	      1162	section.c	FUNCTION_11	IF_1	CALL_1
0x40008bd	      0xe800000000	                          call 0x40008c2	      1162	section.c	FUNCTION_11	IF_1	CALL_1
0x40008c2	        0x4883c408	                              add rsp, 8	      1214	section.c	FUNCTION_12
0x40008c6	            0x31c0	                            xor eax, eax	      1163	section.c	FUNCTION_11	IF_1
0x40008c8	              0x5b	                                 pop rbx	      1214	section.c	FUNCTION_12
0x40008c9	              0x5d	                                 pop rbp	      1214	section.c	FUNCTION_12
0x40008ca	            0x415c	                                 pop r12	      1214	section.c	FUNCTION_12
0x40008cc	            0x415d	                                 pop r13	      1214	section.c	FUNCTION_12
0x40008ce	              0xc3	                                     ret	      1214	section.c	FUNCTION_12
bfd_get_section_contents	WHILE,0:CALL,6:functions,0:IF,7:SWITCH,0:FOR,0:ELSE,1:DO,0	69
0x4000d90	        0x4883ec08	                              sub rsp, 8	      1550	section.c	FUNCTION_21
0x4000d94	          0x4989d1	                             mov r9, rdx	      1550	section.c	FUNCTION_21
0x4000d97	          0x8b5620	            mov edx, dword [rsi + 0x20] 	      1553	section.c	FUNCTION_21	IF_1
0x4000d9a	          0xf6c280	                           test dl, 0x80	      1553	section.c	FUNCTION_21	IF_1
0x4000d9d	     0xf8585000000	                           jne 0x4000e28	      1553	section.c	FUNCTION_21	IF_1
0x4000da3	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      1559	section.c	FUNCTION_21	IF_2
0x4000da7	          0x83e018	                           and eax, 0x18	      1559	section.c	FUNCTION_21	IF_2
0x4000daa	            0x3c10	                            cmp al, 0x10	      1559	section.c	FUNCTION_21	IF_2
0x4000dac	            0x745a	                            je 0x4000e08	      1559	section.c	FUNCTION_21	IF_2
0x4000dae	        0x488b4640	            mov rax, qword [rsi + 0x40] 	      1559	section.c	FUNCTION_21	IF_2
0x4000db2	          0x4885c0	                           test rax, rax	      1559	section.c	FUNCTION_21	IF_2
0x4000db5	            0x7451	                            je 0x4000e08	      1559	section.c	FUNCTION_21	IF_2
0x4000db7	          0x4839c8	                            cmp rax, rcx	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000dba	            0x7254	                            jb 0x4000e10	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000dbc	          0x4c39c0	                             cmp rax, r8	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000dbf	            0x724f	                            jb 0x4000e10	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000dc1	        0x4d8d1408	                     lea r10, [r8 + rcx]	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000dc5	          0x4c39d0	                            cmp rax, r10	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000dc8	            0x7246	                            jb 0x4000e10	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000dca	          0x4d85c0	                             test r8, r8	      1572	section.c	FUNCTION_21	IF_4
0x4000dcd	            0x7471	                            je 0x4000e40	      1572	section.c	FUNCTION_21	IF_4
0x4000dcf	          0xf6c601	                              test dh, 1	      1576	section.c	FUNCTION_21	IF_5
0x4000dd2	            0x7454	                            je 0x4000e28	      1576	section.c	FUNCTION_21	IF_5
0x4000dd4	          0xf6c640	                           test dh, 0x40	      1582	section.c	FUNCTION_21	IF_6
0x4000dd7	            0x7477	                            je 0x4000e50	      1582	section.c	FUNCTION_21	IF_6
0x4000dd9	    0x488b86b00000	            mov rax, qword [rsi + 0xb0] 	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x4000de0	          0x4885c0	                           test rax, rax	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x4000de3	     0xf847f000000	                            je 0x4000e68	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x4000de9	        0x488d3408	                    lea rsi, [rax + rcx]	        59	string3.h	FUNCTION_27	CALL_3
0x4000ded	          0x4c89c2	                             mov rdx, r8	        59	string3.h	FUNCTION_27	CALL_3
0x4000df0	          0x4c89cf	                             mov rdi, r9	        59	string3.h	FUNCTION_27	CALL_3
0x4000df3	      0xe800000000	                          call 0x4000df8	        59	string3.h	FUNCTION_27	CALL_3
0x4000df8	      0xb801000000	                              mov eax, 1	      1595	section.c	FUNCTION_21	IF_6
0x4000dfd	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000e01	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
0x4000e02	    0x660f1f440000	                    nop word [rax + rax]	      1600	section.c	FUNCTION_21
0x4000e08	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1562	section.c	FUNCTION_21	ELSE_1
0x4000e0c	            0xeba9	                           jmp 0x4000db7	      1562	section.c	FUNCTION_21	ELSE_1
0x4000e0e	            0x6690	                                     nop	      1562	section.c	FUNCTION_21	ELSE_1
0x4000e10	      0xbf11000000	                           mov edi, 0x11	      1568	section.c	FUNCTION_21	ELSE_1	IF_3	CALL_2
0x4000e15	      0xe800000000	                          call 0x4000e1a	      1568	section.c	FUNCTION_21	ELSE_1	IF_3	CALL_2
0x4000e1a	            0x31c0	                            xor eax, eax	      1569	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000e1c	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000e20	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
0x4000e21	     0xf1f80000000	                         nop dword [rax]	      1600	section.c	FUNCTION_21
0x4000e28	          0x4c89c2	                             mov rdx, r8	        90	string3.h	FUNCTION_29	CALL_6
0x4000e2b	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_29	CALL_6
0x4000e2d	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_29	CALL_6
0x4000e30	      0xe800000000	                          call 0x4000e35	        90	string3.h	FUNCTION_29	CALL_6
0x4000e35	      0xb801000000	                              mov eax, 1	      1556	section.c	FUNCTION_21	IF_1
0x4000e3a	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000e3e	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
0x4000e3f	              0x90	                                     nop	      1600	section.c	FUNCTION_21
0x4000e40	      0xb801000000	                              mov eax, 1	      1574	section.c	FUNCTION_21	IF_4
0x4000e45	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000e49	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
0x4000e4a	    0x660f1f440000	                    nop word [rax + rax]	      1600	section.c	FUNCTION_21
0x4000e50	        0x488b4708	                mov rax, qword [rdi + 8]	      1598	section.c	FUNCTION_21	CALL_6
0x4000e54	          0x4c89ca	                             mov rdx, r9	      1598	section.c	FUNCTION_21	CALL_6
0x4000e57	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      1598	section.c	FUNCTION_21	CALL_6
0x4000e5e	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000e62	            0xffe0	                                 jmp rax	      1598	section.c	FUNCTION_21	CALL_6
0x4000e64	         0xf1f4000	                         nop dword [rax]	      1598	section.c	FUNCTION_21	CALL_6
0x4000e68	          0x80e6bf	                            and dh, 0xbf	      1589	section.c	FUNCTION_21	IF_6	IF_7
0x4000e6b	      0xbf05000000	                              mov edi, 5	      1590	section.c	FUNCTION_21	IF_6	IF_7	CALL_4
0x4000e70	          0x895620	             mov dword [rsi + 0x20], edx	      1589	section.c	FUNCTION_21	IF_6	IF_7
0x4000e73	      0xe800000000	                          call 0x4000e78	      1590	section.c	FUNCTION_21	IF_6	IF_7	CALL_4
0x4000e78	            0x31c0	                            xor eax, eax	      1591	section.c	FUNCTION_21	IF_6	IF_7
0x4000e7a	            0xeba0	                           jmp 0x4000e1c	      1591	section.c	FUNCTION_21	IF_6	IF_7
bfd_set_section_flags	WHILE,0:CALL,0:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	3
0x4000b80	          0x895620	             mov dword [rsi + 0x20], edx	      1312	section.c	FUNCTION_15
0x4000b83	      0xb801000000	                              mov eax, 1	      1314	section.c	FUNCTION_15
0x4000b88	              0xc3	                                     ret	      1314	section.c	FUNCTION_15
bfd_malloc_and_get_section	WHILE,0:CALL,1:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	2
0x4000e80	    0x48c702000000	                      mov qword [rdx], 0	      1618	section.c	FUNCTION_22
0x4000e87	      0xe900000000	                           jmp 0x4000e8c	      1619	section.c	FUNCTION_22	CALL_1
_bfd_generic_new_section_hook	WHILE,0:CALL,1:functions,0:IF,1:SWITCH,0:FOR,0:ELSE,0:DO,0	21
0x40000c0	        0x488b4708	                mov rax, qword [rdi + 8]	       810	section.c	FUNCTION_2	CALL_1
0x40000c4	              0x53	                                push rbx	       809	section.c	FUNCTION_2
0x40000c5	          0x4889f3	                            mov rbx, rsi	       809	section.c	FUNCTION_2
0x40000c8	    0xff9000020000	                call qword [rax + 0x200]	       810	section.c	FUNCTION_2	CALL_1
0x40000ce	          0x4885c0	                           test rax, rax	       811	section.c	FUNCTION_2	IF_1
0x40000d1	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       810	section.c	FUNCTION_2	CALL_1
0x40000d8	            0x7436	                            je 0x4000110	       811	section.c	FUNCTION_2	IF_1
0x40000da	          0x488b13	                    mov rdx, qword [rbx]	       814	section.c	FUNCTION_2
0x40000dd	    0x48c740100000	               mov qword [rax + 0x10], 0	       815	section.c	FUNCTION_2
0x40000e5	        0x48895820	             mov qword [rax + 0x20], rbx	       816	section.c	FUNCTION_2
0x40000e9	    0xc74018000100	          mov dword [rax + 0x18], 0x100 	       817	section.c	FUNCTION_2
0x40000f0	        0x48895008	                mov qword [rax + 8], rdx	       814	section.c	FUNCTION_2
0x40000f4	    0x488d83f80000	                   lea rax, [rbx + 0xf8]	       819	section.c	FUNCTION_2
0x40000fb	    0x488983000100	            mov qword [rbx + 0x100], rax	       819	section.c	FUNCTION_2
0x4000102	      0xb801000000	                              mov eax, 1	       820	section.c	FUNCTION_2
0x4000107	              0x5b	                                 pop rbx	       821	section.c	FUNCTION_2
0x4000108	              0xc3	                                     ret	       821	section.c	FUNCTION_2
0x4000109	     0xf1f80000000	                         nop dword [rax]	       821	section.c	FUNCTION_2
0x4000110	            0x31c0	                            xor eax, eax	       812	section.c	FUNCTION_2	IF_1
0x4000112	              0x5b	                                 pop rbx	       821	section.c	FUNCTION_2
0x4000113	              0xc3	                                     ret	       821	section.c	FUNCTION_2
bfd_get_section_by_name_if	WHILE,0:CALL,2:functions,0:IF,2:SWITCH,0:FOR,1:ELSE,0:DO,0	52
0x40002b0	            0x4157	                                push r15	       999	section.c	FUNCTION_8
0x40002b2	            0x4156	                                push r14	       999	section.c	FUNCTION_8
0x40002b4	            0x4155	                                push r13	       999	section.c	FUNCTION_8
0x40002b6	            0x4154	                                push r12	       999	section.c	FUNCTION_8
0x40002b8	          0x4989d5	                            mov r13, rdx	       999	section.c	FUNCTION_8
0x40002bb	              0x55	                                push rbp	       999	section.c	FUNCTION_8
0x40002bc	              0x53	                                push rbx	       999	section.c	FUNCTION_8
0x40002bd	            0x31d2	                            xor edx, edx	      1003	section.c	FUNCTION_8
0x40002bf	          0x4989fc	                            mov r12, rdi	       999	section.c	FUNCTION_8
0x40002c2	        0x4883c768	                           add rdi, 0x68	      1003	section.c	FUNCTION_8
0x40002c6	          0x4889f5	                            mov rbp, rsi	       999	section.c	FUNCTION_8
0x40002c9	        0x4883ec18	                           sub rsp, 0x18	       999	section.c	FUNCTION_8
0x40002cd	      0x48894c2408	                mov qword [rsp + 8], rcx	       999	section.c	FUNCTION_8
0x40002d2	            0x31c9	                            xor ecx, ecx	      1003	section.c	FUNCTION_8
0x40002d4	      0xe800000000	                          call 0x40002d9	      1003	section.c	FUNCTION_8
0x40002d9	          0x4885c0	                           test rax, rax	      1004	section.c	FUNCTION_8	IF_1
0x40002dc	            0x7462	                            je 0x4000340	      1004	section.c	FUNCTION_8	IF_1
0x40002de	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	      1007	section.c	FUNCTION_8
0x40002e2	          0x4889c3	                            mov rbx, rax	      1007	section.c	FUNCTION_8
0x40002e5	          0x4c89f8	                            mov rax, r15	      1007	section.c	FUNCTION_8
0x40002e8	            0xeb12	                           jmp 0x40002fc	      1007	section.c	FUNCTION_8
0x40002ea	    0x660f1f440000	                    nop word [rax + rax]	      1007	section.c	FUNCTION_8
0x40002f0	          0x488b1b	                    mov rbx, qword [rbx]	      1008	section.c	FUNCTION_8	FOR_1
0x40002f3	          0x4885db	                           test rbx, rbx	      1008	section.c	FUNCTION_8	FOR_1
0x40002f6	            0x7448	                            je 0x4000340	      1008	section.c	FUNCTION_8	FOR_1
0x40002f8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1008	section.c	FUNCTION_8	FOR_1
0x40002fc	          0x4c39f8	                            cmp rax, r15	      1009	section.c	FUNCTION_8	FOR_1	IF_2
0x40002ff	            0x75ef	                           jne 0x40002f0	      1009	section.c	FUNCTION_8	FOR_1	IF_2
0x4000301	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000305	          0x4889ee	                            mov rsi, rbp	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000308	      0xe800000000	                          call 0x400030d	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400030d	            0x85c0	                           test eax, eax	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400030f	            0x75df	                           jne 0x40002f0	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000311	        0x4c8d7318	                   lea r14, [rbx + 0x18]	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000315	      0x488b542408	                mov rdx, qword [rsp + 8]	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x400031a	          0x4c89e7	                            mov rdi, r12	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x400031d	          0x4c89f6	                            mov rsi, r14	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000320	          0x41ffd5	                                call r13	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000323	            0x85c0	                           test eax, eax	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000325	            0x74c9	                            je 0x40002f0	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000327	        0x4883c418	                           add rsp, 0x18	      1015	section.c	FUNCTION_8
0x400032b	          0x4c89f0	                            mov rax, r14	      1015	section.c	FUNCTION_8
0x400032e	              0x5b	                                 pop rbx	      1015	section.c	FUNCTION_8
0x400032f	              0x5d	                                 pop rbp	      1015	section.c	FUNCTION_8
0x4000330	            0x415c	                                 pop r12	      1015	section.c	FUNCTION_8
0x4000332	            0x415d	                                 pop r13	      1015	section.c	FUNCTION_8
0x4000334	            0x415e	                                 pop r14	      1015	section.c	FUNCTION_8
0x4000336	            0x415f	                                 pop r15	      1015	section.c	FUNCTION_8
0x4000338	              0xc3	                                     ret	      1015	section.c	FUNCTION_8
0x4000339	     0xf1f80000000	                         nop dword [rax]	      1015	section.c	FUNCTION_8
0x4000340	          0x4531f6	                          xor r14d, r14d	      1005	section.c	FUNCTION_8	IF_1
0x4000343	            0xebe2	                           jmp 0x4000327	      1005	section.c	FUNCTION_8	IF_1
bfd_make_section	WHILE,0:CALL,1:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	94
0x4000a20	            0x4155	                                push r13	      1283	section.c	FUNCTION_14
0x4000a22	            0x4154	                                push r12	      1283	section.c	FUNCTION_14
0x4000a24	              0x55	                                push rbp	      1283	section.c	FUNCTION_14
0x4000a25	              0x53	                                push rbx	      1283	section.c	FUNCTION_14
0x4000a26	        0x4883ec08	                              sub rsp, 8	      1283	section.c	FUNCTION_14
0x4000a2a	          0x4885ff	                           test rdi, rdi	      1239	section.c	FUNCTION_13	IF_1
0x4000a2d	     0xf8415010000	                            je 0x4000b48	      1239	section.c	FUNCTION_13	IF_1
0x4000a33	          0x4885f6	                           test rsi, rsi	      1239	section.c	FUNCTION_13	IF_1
0x4000a36	          0x4889f3	                            mov rbx, rsi	      1239	section.c	FUNCTION_13	IF_1
0x4000a39	     0xf8409010000	                            je 0x4000b48	      1239	section.c	FUNCTION_13	IF_1
0x4000a3f	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1239	section.c	FUNCTION_13	IF_1
0x4000a43	          0x4889fd	                            mov rbp, rdi	      1239	section.c	FUNCTION_13	IF_1
0x4000a46	     0xf85fc000000	                           jne 0x4000b48	      1239	section.c	FUNCTION_13	IF_1
0x4000a4c	      0xbf00000000	                              mov edi, 0	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x4000a51	      0xb906000000	                              mov ecx, 6	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x4000a56	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x4000a58	            0x7455	                            je 0x4000aaf	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x4000a5a	      0xbf00000000	                              mov edi, 0	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000a5f	      0xb906000000	                              mov ecx, 6	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000a64	          0x4889de	                            mov rsi, rbx	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000a67	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000a69	            0x7444	                            je 0x4000aaf	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000a6b	      0xbf00000000	                              mov edi, 0	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000a70	      0xb906000000	                              mov ecx, 6	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000a75	          0x4889de	                            mov rsi, rbx	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000a78	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000a7a	            0x7433	                            je 0x4000aaf	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000a7c	      0xbf00000000	                              mov edi, 0	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000a81	      0xb906000000	                              mov ecx, 6	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000a86	          0x4889de	                            mov rsi, rbx	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000a89	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000a8b	            0x7422	                            je 0x4000aaf	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000a8d	        0x488d7d68	                   lea rdi, [rbp + 0x68]	      1251	section.c	FUNCTION_13
0x4000a91	            0x31c9	                            xor ecx, ecx	      1251	section.c	FUNCTION_13
0x4000a93	      0xba01000000	                              mov edx, 1	      1251	section.c	FUNCTION_13
0x4000a98	          0x4889de	                            mov rsi, rbx	      1251	section.c	FUNCTION_13
0x4000a9b	      0xe800000000	                          call 0x4000aa0	      1251	section.c	FUNCTION_13
0x4000aa0	          0x4885c0	                           test rax, rax	      1252	section.c	FUNCTION_13	IF_3
0x4000aa3	          0x4989c4	                            mov r12, rax	      1251	section.c	FUNCTION_13
0x4000aa6	            0x7407	                            je 0x4000aaf	      1252	section.c	FUNCTION_13	IF_3
0x4000aa8	      0x4883781800	               cmp qword [rax + 0x18], 0	      1256	section.c	FUNCTION_13	IF_4
0x4000aad	            0x7411	                            je 0x4000ac0	      1256	section.c	FUNCTION_13	IF_4
0x4000aaf	        0x4883c408	                              add rsp, 8	      1285	section.c	FUNCTION_14
0x4000ab3	            0x31c0	                            xor eax, eax	      1249	section.c	FUNCTION_13	IF_2
0x4000ab5	              0x5b	                                 pop rbx	      1285	section.c	FUNCTION_14
0x4000ab6	              0x5d	                                 pop rbp	      1285	section.c	FUNCTION_14
0x4000ab7	            0x415c	                                 pop r12	      1285	section.c	FUNCTION_14
0x4000ab9	            0x415d	                                 pop r13	      1285	section.c	FUNCTION_14
0x4000abb	              0xc3	                                     ret	      1285	section.c	FUNCTION_14
0x4000abc	         0xf1f4000	                         nop dword [rax]	      1285	section.c	FUNCTION_14
0x4000ac0	        0x48895818	             mov qword [rax + 0x18], rbx	      1262	section.c	FUNCTION_13
0x4000ac4	    0xc74038000000	               mov dword [rax + 0x38], 0	      1263	section.c	FUNCTION_13
0x4000acb	        0x4c8d6818	                   lea r13, [rax + 0x18]	      1255	section.c	FUNCTION_13
0x4000acf	    0x8b0500000000	            mov eax, dword [0x04000ad5] 	       830	section.c	FUNCTION_3
0x4000ad5	          0x4889ef	                            mov rdi, rbp	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000ad8	          0x4c89ee	                            mov rsi, r13	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000adb	      0x4189442420	             mov dword [r12 + 0x20], eax	       830	section.c	FUNCTION_3
0x4000ae0	    0x8b85a0000000	            mov eax, dword [rbp + 0xa0] 	       831	section.c	FUNCTION_3
0x4000ae6	    0x4989ac240801	            mov qword [r12 + 0x108], rbp	       832	section.c	FUNCTION_3
0x4000aee	      0x4189442424	             mov dword [r12 + 0x24], eax	       831	section.c	FUNCTION_3
0x4000af3	        0x488b4508	                mov rax, qword [rbp + 8]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000af7	    0xff9020010000	                call qword [rax + 0x120]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000afd	            0x85c0	                           test eax, eax	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000aff	            0x74ae	                            je 0x4000aaf	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000b01	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	       839	section.c	FUNCTION_3	CALL_2
0x4000b08	    0x8385a0000000	               add dword [rbp + 0xa0], 1	       838	section.c	FUNCTION_3
0x4000b0f	    0x830500000000	               add dword [0x04000b16], 1	       837	section.c	FUNCTION_3
0x4000b16	    0x49c744242800	               mov qword [r12 + 0x28], 0	       839	section.c	FUNCTION_3	CALL_2
0x4000b1f	          0x4885c0	                           test rax, rax	       839	section.c	FUNCTION_3	CALL_2
0x4000b22	            0x743c	                            je 0x4000b60	       839	section.c	FUNCTION_3	CALL_2
0x4000b24	      0x4989442430	             mov qword [r12 + 0x30], rax	       839	section.c	FUNCTION_3	CALL_2
0x4000b29	        0x4c896810	             mov qword [rax + 0x10], r13	       839	section.c	FUNCTION_3	CALL_2
0x4000b2d	    0x4c89ad980000	            mov qword [rbp + 0x98], r13 	       839	section.c	FUNCTION_3	CALL_2
0x4000b34	        0x4883c408	                              add rsp, 8	      1285	section.c	FUNCTION_14
0x4000b38	          0x4c89e8	                            mov rax, r13	       840	section.c	FUNCTION_3
0x4000b3b	              0x5b	                                 pop rbx	      1285	section.c	FUNCTION_14
0x4000b3c	              0x5d	                                 pop rbp	      1285	section.c	FUNCTION_14
0x4000b3d	            0x415c	                                 pop r12	      1285	section.c	FUNCTION_14
0x4000b3f	            0x415d	                                 pop r13	      1285	section.c	FUNCTION_14
0x4000b41	              0xc3	                                     ret	      1285	section.c	FUNCTION_14
0x4000b42	    0x660f1f440000	                    nop word [rax + rax]	      1285	section.c	FUNCTION_14
0x4000b48	      0xbf05000000	                              mov edi, 5	      1241	section.c	FUNCTION_13	IF_1	CALL_1
0x4000b4d	      0xe800000000	                          call 0x4000b52	      1241	section.c	FUNCTION_13	IF_1	CALL_1
0x4000b52	        0x4883c408	                              add rsp, 8	      1285	section.c	FUNCTION_14
0x4000b56	            0x31c0	                            xor eax, eax	      1242	section.c	FUNCTION_13	IF_1
0x4000b58	              0x5b	                                 pop rbx	      1285	section.c	FUNCTION_14
0x4000b59	              0x5d	                                 pop rbp	      1285	section.c	FUNCTION_14
0x4000b5a	            0x415c	                                 pop r12	      1285	section.c	FUNCTION_14
0x4000b5c	            0x415d	                                 pop r13	      1285	section.c	FUNCTION_14
0x4000b5e	              0xc3	                                     ret	      1285	section.c	FUNCTION_14
0x4000b5f	              0x90	                                     nop	      1285	section.c	FUNCTION_14
0x4000b60	    0x49c744243000	               mov qword [r12 + 0x30], 0	       839	section.c	FUNCTION_3	CALL_2
0x4000b69	    0x4c89ad900000	            mov qword [rbp + 0x90], r13 	       839	section.c	FUNCTION_3	CALL_2
0x4000b70	            0xebbb	                           jmp 0x4000b2d	       839	section.c	FUNCTION_3	CALL_2
bfd_generic_discard_group	WHILE,0:CALL,0:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	2
0x4000ea0	      0xb801000000	                              mov eax, 1	      1677	section.c	FUNCTION_24
0x4000ea5	              0xc3	                                     ret	      1677	section.c	FUNCTION_24
bfd_get_unique_section_name	WHILE,0:CALL,4:functions,0:IF,4:SWITCH,0:FOR,0:ELSE,0:DO,1	67
0x4000350	            0x4156	                                push r14	      1035	section.c	FUNCTION_9
0x4000352	            0x4155	                                push r13	      1035	section.c	FUNCTION_9
0x4000354	          0x4989fd	                            mov r13, rdi	      1035	section.c	FUNCTION_9
0x4000357	            0x4154	                                push r12	      1035	section.c	FUNCTION_9
0x4000359	              0x55	                                push rbp	      1035	section.c	FUNCTION_9
0x400035a	          0x4889f7	                            mov rdi, rsi	      1040	section.c	FUNCTION_9	CALL_1
0x400035d	              0x53	                                push rbx	      1035	section.c	FUNCTION_9
0x400035e	          0x4989d6	                            mov r14, rdx	      1035	section.c	FUNCTION_9
0x4000361	          0x4889f3	                            mov rbx, rsi	      1035	section.c	FUNCTION_9
0x4000364	      0xe800000000	                          call 0x4000369	      1040	section.c	FUNCTION_9	CALL_1
0x4000369	          0x8d7808	                      lea edi, [rax + 8]	      1041	section.c	FUNCTION_9	CALL_2
0x400036c	          0x4989c4	                            mov r12, rax	      1040	section.c	FUNCTION_9	CALL_1
0x400036f	      0xe800000000	                          call 0x4000374	      1041	section.c	FUNCTION_9	CALL_2
0x4000374	          0x4885c0	                           test rax, rax	      1042	section.c	FUNCTION_9	IF_1
0x4000377	     0xf8492000000	                            je 0x400040f	      1042	section.c	FUNCTION_9	IF_1
0x400037d	          0x4589e4	                          mov r12d, r12d	      1042	section.c	FUNCTION_9	IF_1
0x4000380	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_26	CALL_3
0x4000383	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_26	CALL_3
0x4000386	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_26	CALL_3
0x4000389	          0x4889c5	                            mov rbp, rax	        53	string3.h	FUNCTION_26	CALL_3
0x400038c	      0xe800000000	                          call 0x4000391	        53	string3.h	FUNCTION_26	CALL_3
0x4000391	          0x4d85f6	                           test r14, r14	      1046	section.c	FUNCTION_9	IF_2
0x4000394	            0x746c	                            je 0x4000402	      1046	section.c	FUNCTION_9	IF_2
0x4000396	          0x458b06	                    mov r8d, dword [r14]	      1047	section.c	FUNCTION_9	IF_2
0x4000399	    0x4181f83f420f	                        cmp r8d, 0xf423f	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003a0	            0x7f71	                            jg 0x4000413	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003a2	          0x4901ec	                            add r12, rbp	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003a5	        0x4983c568	                           add r13, 0x68	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003a9	            0xeb10	                           jmp 0x40003bb	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003ab	       0xf1f440000	                   nop dword [rax + rax]	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003b0	    0x81fb40420f00	                        cmp ebx, 0xf4240	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003b6	          0x4189d8	                            mov r8d, ebx	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003b9	            0x7458	                            je 0x4000413	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003bb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003c0	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003c7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003cc	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003cf	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003d1	        0x418d5801	                       lea ebx, [r8 + 1]	      1054	section.c	FUNCTION_9	DO_1
0x40003d5	      0xe800000000	                          call 0x40003da	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003da	            0x31c9	                            xor ecx, ecx	      1056	section.c	FUNCTION_9
0x40003dc	            0x31d2	                            xor edx, edx	      1056	section.c	FUNCTION_9
0x40003de	          0x4889ee	                            mov rsi, rbp	      1056	section.c	FUNCTION_9
0x40003e1	          0x4c89ef	                            mov rdi, r13	      1056	section.c	FUNCTION_9
0x40003e4	      0xe800000000	                          call 0x40003e9	      1056	section.c	FUNCTION_9
0x40003e9	          0x4885c0	                           test rax, rax	      1056	section.c	FUNCTION_9
0x40003ec	            0x75c2	                           jne 0x40003b0	      1056	section.c	FUNCTION_9
0x40003ee	          0x4d85f6	                           test r14, r14	      1058	section.c	FUNCTION_9	IF_4
0x40003f1	            0x7417	                            je 0x400040a	      1058	section.c	FUNCTION_9	IF_4
0x40003f3	          0x41891e	                    mov dword [r14], ebx	      1059	section.c	FUNCTION_9	IF_4
0x40003f6	          0x4889e8	                            mov rax, rbp	      1059	section.c	FUNCTION_9	IF_4
0x40003f9	              0x5b	                                 pop rbx	      1061	section.c	FUNCTION_9
0x40003fa	              0x5d	                                 pop rbp	      1061	section.c	FUNCTION_9
0x40003fb	            0x415c	                                 pop r12	      1061	section.c	FUNCTION_9
0x40003fd	            0x415d	                                 pop r13	      1061	section.c	FUNCTION_9
0x40003ff	            0x415e	                                 pop r14	      1061	section.c	FUNCTION_9
0x4000401	              0xc3	                                     ret	      1061	section.c	FUNCTION_9
0x4000402	    0x41b801000000	                              mov r8d, 1	      1045	section.c	FUNCTION_9
0x4000408	            0xeb98	                           jmp 0x40003a2	      1045	section.c	FUNCTION_9
0x400040a	          0x4889e8	                            mov rax, rbp	      1045	section.c	FUNCTION_9
0x400040d	            0xebea	                           jmp 0x40003f9	      1045	section.c	FUNCTION_9
0x400040f	            0x31c0	                            xor eax, eax	      1043	section.c	FUNCTION_9	IF_1
0x4000411	            0xebe6	                           jmp 0x40003f9	      1043	section.c	FUNCTION_9	IF_1
0x4000413	      0xba00000000	                              mov edx, 0	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x4000418	      0xbe1d040000	                          mov esi, 0x41d	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x400041d	      0xbf00000000	                              mov edi, 0	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x4000422	      0xe800000000	                          call 0x4000427	      1053	section.c	FUNCTION_9	DO_1	CALL_4
_bfd_nowrite_set_section_contents	WHILE,0:CALL,1:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	1
0x4000eb0	      0xe900000000	                   jmp section_end..text	      1686	section.c	FUNCTION_25	CALL_1
bfd_rename_section	WHILE,0:CALL,1:functions,0:IF,0:SWITCH,0:FOR,0:ELSE,0:DO,0	6
0x4000b90	          0x4889d0	                            mov rax, rdx	      1330	section.c	FUNCTION_16
0x4000b93	          0x488916	                    mov qword [rsi], rdx	      1335	section.c	FUNCTION_16
0x4000b96	        0x488d56e8	                   lea rdx, [rsi - 0x18]	      1336	section.c	FUNCTION_16	CALL_1
0x4000b9a	        0x4883c768	                           add rdi, 0x68	      1336	section.c	FUNCTION_16	CALL_1
0x4000b9e	          0x4889c6	                            mov rsi, rax	      1336	section.c	FUNCTION_16	CALL_1
0x4000ba1	      0xe900000000	                           jmp 0x4000ba6	      1336	section.c	FUNCTION_16	CALL_1
