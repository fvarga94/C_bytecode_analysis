decNumberXor	SWITCH,0:functions,0:IF,8:WHILE,0:CALL,12:FOR,2:DO,0:ELSE,2	254
0x4007a00	            0x4157	                                push r15	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a02	            0x4156	                                push r14	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a04	            0x4155	                                push r13	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a06	            0x4154	                                push r12	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a08	              0x55	                                push rbp	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a09	              0x53	                                push rbx	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a0a	          0x4889fb	                            mov rbx, rdi	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a0d	        0x4883ec28	                           sub rsp, 0x28	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a11	        0x448b4e04	                mov r9d, dword [rsi + 4]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4007a15	          0x4585c9	                           test r9d, r9d	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4007a18	     0xf85aa020000	                           jne 0x4007cc8	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4007a1e	         0xfb64608	               movzx eax, byte [rsi + 8]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4007a22	            0xa870	                           test al, 0x70	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4007a24	     0xf859e020000	                           jne 0x4007cc8	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4007a2a	            0x84c0	                             test al, al	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4007a2c	     0xf8896020000	                            js 0x4007cc8	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4007a32	          0x8b7a04	                mov edi, dword [rdx + 4]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a35	          0x4989d0	                             mov r8, rdx	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a38	            0x85ff	                           test edi, edi	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a3a	     0xf8588020000	                           jne 0x4007cc8	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a40	         0xfb64208	               movzx eax, byte [rdx + 8]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a44	            0xa870	                           test al, 0x70	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a46	     0xf857c020000	                           jne 0x4007cc8	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a4c	            0x84c0	                             test al, al	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a4e	     0xf8874020000	                            js 0x4007cc8	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4007a54	        0x488d430a	                    lea rax, [rbx + 0xa]	      3246	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a58	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	      3244	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a5c	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	      3245	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a60	      0x4889442408	                mov qword [rsp + 8], rax	      3246	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007a65	          0x486306	                 movsxd rax, dword [rsi]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007a68	          0x83f831	                           cmp eax, 0x31	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007a6b	     0xf8fff020000	                            jg 0x4007d70	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007a71	     0xfb680000000	                   movzx eax, byte [rax]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007a78	      0x488d7c00fe	                lea rdi, [rax + rax - 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007a7d	          0x496300	                  movsxd rax, dword [r8]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007a80	          0x4c01df	                            add rdi, r11	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007a83	          0x83f831	                           cmp eax, 0x31	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007a86	     0xf8fc4020000	                            jg 0x4007d50	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007a8c	     0xfb680000000	                   movzx eax, byte [rax]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007a93	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007a98	            0x8b31	                    mov esi, dword [rcx]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007a9a	          0x4901ec	                            add r12, rbp	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007a9d	          0x83fe31	                           cmp esi, 0x31	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007aa0	     0xf8f7a020000	                            jg 0x4007d20	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007aa6	          0x4863c6	                         movsxd rax, esi	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007aa9	        0x4c8d4b0a	                     lea r9, [rbx + 0xa]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007aad	     0xfb690000000	                   movzx edx, byte [rax]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007ab4	      0x4d8d6c51fe	               lea r13, [r9 + rdx*2 - 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007ab9	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4007abd	            0x29c6	                            sub esi, eax	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4007abf	        0x488d430a	                    lea rax, [rbx + 0xa]	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007ac3	        0x8974241c	             mov dword [rsp + 0x1c], esi	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4007ac7	          0x4c39e8	                            cmp rax, r13	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007aca	     0xf87dc020000	                            ja 0x4007dac	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007ad0	          0x4989c1	                             mov r9, rax	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007ad3	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007ad8	     0xf1f84000000	                   nop dword [rax + rax]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007ae0	          0x4c39df	                            cmp rdi, r11	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4007ae3	     0xf8217020000	                            jb 0x4007d00	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4007ae9	            0x31c0	                            xor eax, eax	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4007aeb	          0x4c39e5	                            cmp rbp, r12	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4007aee	        0x410fb713	                   movzx edx, word [r11]	      3254	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_1
0x4007af2	            0x7704	                            ja 0x4007af8	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4007af4	         0xfb74500	                   movzx eax, word [rbp]	      3256	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4007af8	            0x89c6	                            mov esi, eax	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4007afa	            0x31c9	                            xor ecx, ecx	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4007afc	          0x6609d6	                               or si, dx	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4007aff	        0x66418909	                       mov word [r9], cx	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4007b03	     0xf843e010000	                            je 0x4007c47	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4007b09	          0x4189c2	                           mov r10d, eax	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4007b0c	          0x4131d2	                           xor r10d, edx	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4007b0f	      0x664183e201	                             and r10w, 1	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b14	            0x740e	                            je 0x4007b24	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b16	     0xfb70d000000	           movzx ecx, word [0x04007b1d] 	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b1d	        0x66418909	                       mov word [r9], cx	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b21	          0x4189ca	                           mov r10d, ecx	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b24	        0x440fb7c2	                           movzx r8d, dx	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007b28	           0xfb7f0	                           movzx esi, ax	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007b2b	          0x4189d7	                           mov r15d, edx	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b2e	    0x4569c0cdcc00	                   imul r8d, r8d, 0xcccd	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007b35	            0x89c1	                            mov ecx, eax	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b37	    0x69f6cdcc0000	                   imul esi, esi, 0xcccd	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007b3d	        0x41c1e813	                           shr r8d, 0x13	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007b41	        0x478d3480	                   lea r14d, [r8 + r8*4]	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b45	          0xc1ee13	                           shr esi, 0x13	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007b48	          0x4501f6	                          add r14d, r14d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b4b	          0x4529f7	                          sub r15d, r14d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b4e	        0x448d34b6	                 lea r14d, [rsi + rsi*4]	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b52	          0x4501f6	                          add r14d, r14d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b55	          0x4429f1	                           sub ecx, r14d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b58	          0x4189ce	                           mov r14d, ecx	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b5b	          0x4509fe	                           or r14d, r15d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b5e	      0x664183fe01	                             cmp r14w, 1	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b63	     0xf8757010000	                            ja 0x4007cc0	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b69	          0x4d39e9	                             cmp r9, r13	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007b6c	        0x410f94c6	                               sete r14b	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007b70	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007b75	            0x7509	                           jne 0x4007b80	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007b77	          0x4584f6	                         test r14b, r14b	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007b7a	     0xf85c7000000	                           jne 0x4007c47	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007b80	          0x4589c7	                           mov r15d, r8d	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b83	          0x4131f7	                           xor r15d, esi	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b86	        0x4183e701	                             and r15d, 1	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b8a	            0x740c	                            je 0x4007b98	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b8c	    0x664403150000	             add r10w, word [0x04007b94]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b94	        0x66458911	                     mov word [r9], r10w	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007b98	        0x450fb7f8	                         movzx r15d, r8w	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007b9c	        0x66c1ea02	                               shr dx, 2	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007ba0	        0x66c1e802	                               shr ax, 2	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007ba4	    0x4569ffcdcc00	                 imul r15d, r15d, 0xcccd	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bab	           0xfb7d2	                           movzx edx, dx	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007bae	           0xfb7c0	                           movzx eax, ax	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007bb1	    0x69d27b140000	                   imul edx, edx, 0x147b	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007bb7	        0x41c1ef13	                          shr r15d, 0x13	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bbb	        0x478d3cbf	                 lea r15d, [r15 + r15*4]	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bbf	          0xc1ea11	                           shr edx, 0x11	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007bc2	    0x69c07b140000	                   imul eax, eax, 0x147b	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007bc8	          0x4501ff	                          add r15d, r15d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bcb	          0x4529f8	                           sub r8d, r15d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bce	        0x440fb7fe	                          movzx r15d, si	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bd2	    0x4569ffcdcc00	                 imul r15d, r15d, 0xcccd	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bd9	          0xc1e811	                           shr eax, 0x11	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4007bdc	        0x41c1ef13	                          shr r15d, 0x13	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007be0	        0x478d3cbf	                 lea r15d, [r15 + r15*4]	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007be4	          0x4501ff	                          add r15d, r15d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007be7	          0x4429fe	                           sub esi, r15d	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bea	          0x4109f0	                             or r8d, esi	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bed	      0x664183f801	                              cmp r8w, 1	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bf2	     0xf87c8000000	                            ja 0x4007cc0	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007bf8	      0x837c241c02	               cmp dword [rsp + 0x1c], 2	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007bfd	            0x7505	                           jne 0x4007c04	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007bff	          0x4584f6	                         test r14b, r14b	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007c02	            0x7543	                           jne 0x4007c47	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4007c04	            0x89d6	                            mov esi, edx	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007c06	            0x31c6	                            xor esi, eax	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007c08	          0x83e601	                              and esi, 1	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007c0b	            0x740c	                            je 0x4007c19	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007c0d	    0x664403150000	             add r10w, word [0x04007c15]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007c15	        0x66458911	                     mov word [r9], r10w	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4007c19	           0xfb7f2	                           movzx esi, dx	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c1c	    0x69f6cdcc0000	                   imul esi, esi, 0xcccd	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c22	          0xc1ee13	                           shr esi, 0x13	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c25	          0x8d34b6	                  lea esi, [rsi + rsi*4]	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c28	             0x1f6	                            add esi, esi	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c2a	            0x29f2	                            sub edx, esi	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c2c	           0xfb7f0	                           movzx esi, ax	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c2f	    0x69f6cdcc0000	                   imul esi, esi, 0xcccd	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c35	          0xc1ee13	                           shr esi, 0x13	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c38	          0x8d34b6	                  lea esi, [rsi + rsi*4]	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c3b	             0x1f6	                            add esi, esi	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c3d	            0x29f0	                            sub eax, esi	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c3f	             0x9d0	                             or eax, edx	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c41	        0x6683f801	                               cmp ax, 1	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c45	            0x7779	                            ja 0x4007cc0	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4007c47	        0x4983c102	                               add r9, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c4b	        0x4983c302	                              add r11, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c4f	        0x4883c502	                              add rbp, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c53	          0x4d39e9	                             cmp r9, r13	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c56	     0xf8684feffff	                           jbe 0x4007ae0	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c5c	      0x4c2b4c2408	                 sub r9, qword [rsp + 8]	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c61	          0x49d1f9	                               sar r9, 1	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c64	          0x4963c1	                         movsxd rax, r9d	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c67	      0x438d5449fe	                lea edx, [r9 + r9*2 - 2]	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c6c	      0x488d4400fe	                lea rax, [rax + rax - 2]	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007c71	      0x4803442408	                add rax, qword [rsp + 8]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4007c76	            0x7233	                            jb 0x4007cab	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4007c78	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007c7b	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007c7e	     0xf850c010000	                           jne 0x4007d90	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007c84	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4007c87	      0x488b742408	                mov rsi, qword [rsp + 8]	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4007c8c	            0x741d	                            je 0x4007cab	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4007c8e	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4007c92	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007c95	          0x4839c6	                            cmp rsi, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4007c98	            0x7711	                            ja 0x4007cab	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4007c9a	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007c9d	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007ca0	     0xf85ea000000	                           jne 0x4007d90	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007ca6	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4007ca9	            0x75e3	                           jne 0x4007c8e	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4007cab	            0x8913	                    mov dword [rbx], edx	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4007cad	    0xc74304000000	                  mov dword [rbx + 4], 0	      3277	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cb4	        0xc6430800	                   mov byte [rbx + 8], 0	      3278	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cb8	            0xeb34	                           jmp 0x4007cee	      3279	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cba	    0x660f1f440000	                    nop word [rax + rax]	      3279	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cc0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3279	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cc5	           0xf1f00	                         nop dword [rax]	      3279	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cc8	          0x4531c0	                            xor r8d, r8d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007ccb	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007cd2	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007cd8	      0x664489430a	               mov word [rbx + 0xa], r8w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007cdd	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4007ce1	      0xbe80000000	                           mov esi, 0x80	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4007ce6	          0x4889cf	                            mov rdi, rcx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4007ce9	      0xe800000000	                          call 0x4007cee	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4007cee	        0x4883c428	                           add rsp, 0x28	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cf2	          0x4889d8	                            mov rax, rbx	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cf5	              0x5b	                                 pop rbx	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cf6	              0x5d	                                 pop rbp	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cf7	            0x415c	                                 pop r12	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cf9	            0x415d	                                 pop r13	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cfb	            0x415e	                                 pop r14	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cfd	            0x415f	                                 pop r15	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007cff	              0xc3	                                     ret	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4007d00	            0x31d2	                            xor edx, edx	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4007d02	          0x4c39e5	                            cmp rbp, r12	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4007d05	     0xf86e9fdffff	                           jbe 0x4007af4	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4007d0b	            0x31c0	                            xor eax, eax	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4007d0d	        0x66418901	                       mov word [r9], ax	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4007d11	      0xe931ffffff	                           jmp 0x4007c47	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4007d16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4007d20	        0x448d4602	                      lea r8d, [rsi + 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d24	      0xba56555555	                     mov edx, 0x55555556	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d29	        0x4c8d4b0a	                     lea r9, [rbx + 0xa]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d2d	          0x4489c0	                            mov eax, r8d	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d30	        0x41c1f81f	                           sar r8d, 0x1f	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d34	            0xf7ea	                                imul edx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d36	          0x4429c2	                            sub edx, r8d	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d39	          0x4863c2	                         movsxd rax, edx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d3c	      0x4d8d6c41fe	               lea r13, [r9 + rax*2 - 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4007d41	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4007d45	      0xe973fdffff	                           jmp 0x4007abd	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4007d4a	    0x660f1f440000	                    nop word [rax + rax]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4007d50	          0x8d7002	                      lea esi, [rax + 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d53	      0xba56555555	                     mov edx, 0x55555556	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d58	            0x89f0	                            mov eax, esi	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d5a	            0xf7ea	                                imul edx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d5c	            0x89f0	                            mov eax, esi	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d5e	          0xc1f81f	                           sar eax, 0x1f	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d61	            0x29c2	                            sub edx, eax	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d63	          0x4863d2	                         movsxd rdx, edx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d66	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d6b	      0xe928fdffff	                           jmp 0x4007a98	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4007d70	          0x8d7002	                      lea esi, [rax + 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d73	      0xba56555555	                     mov edx, 0x55555556	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d78	            0x89f0	                            mov eax, esi	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d7a	            0xf7ea	                                imul edx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d7c	            0x89f0	                            mov eax, esi	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d7e	          0xc1f81f	                           sar eax, 0x1f	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d81	            0x29c2	                            sub edx, eax	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d83	          0x4863d2	                         movsxd rdx, edx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d86	      0x488d7c12fe	                lea rdi, [rdx + rdx - 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d8b	      0xe9edfcffff	                           jmp 0x4007a7d	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4007d90	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4007d94	     0xf8611ffffff	                           jbe 0x4007cab	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4007d9a	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4007d9d	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4007da0	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4007da4	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4007da7	      0xe9fffeffff	                           jmp 0x4007cab	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4007dac	      0xbafeffffff	                     mov edx, 0xfffffffe	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007db1	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4007db8	      0xe9b4feffff	                           jmp 0x4007c71	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
decNumberMinMag	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	134
0x4006390	            0x4155	                                push r13	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006392	            0x4154	                                push r12	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006394	          0x4989d5	                            mov r13, rdx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006397	              0x55	                                push rbp	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006398	              0x53	                                push rbx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006399	          0x4889cd	                            mov rbp, rcx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x400639c	          0x4889fb	                            mov rbx, rdi	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x400639f	          0x4989f4	                            mov r12, rsi	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40063a2	        0x4883ec18	                           sub rsp, 0x18	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40063a6	         0xfb64a08	               movzx ecx, byte [rdx + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x40063aa	    0x64488b042528	                mov rax, qword fs:[0x28]	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40063b3	      0x4889442408	                mov qword [rsp + 8], rax	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40063b8	            0x31c0	                            xor eax, eax	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40063ba	         0xfb64608	               movzx eax, byte [rsi + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x40063be	    0xc70424000000	                      mov dword [rsp], 0	      1608	decNumber.c	FUNCTION_68	FUNCTION_26
0x40063c5	            0x89c2	                            mov edx, eax	      6044	decNumber.c	FUNCTION_2	DO_1
0x40063c7	             0x9ca	                             or edx, ecx	      6044	decNumber.c	FUNCTION_2	DO_1
0x40063c9	          0xf6c230	                           test dl, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40063cc	            0x7532	                           jne 0x4006400	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40063ce	      0xba01000000	                              mov edx, 1	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x40063d3	          0x4c89ee	                            mov rsi, r13	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x40063d6	          0x4c89e7	                            mov rdi, r12	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x40063d9	      0xe882b8ffff	                     call sym.decCompare	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x40063de	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x40063e3	     0xf8437010000	                            je 0x4006520	      6087	decNumber.c	FUNCTION_2	IF_23
0x40063e9	            0x85c0	                           test eax, eax	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40063eb	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40063f3	     0xf8432010000	                            je 0x400652b	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40063f9	            0xf7d8	                                 neg eax	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40063fb	            0xeb70	                           jmp 0x400646d	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40063fd	           0xf1f00	                         nop dword [rax]	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4006400	          0x83e210	                           and edx, 0x10	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x4006403	            0x744b	                            je 0x4006450	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x4006405	          0x4c89e6	                            mov rsi, r12	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006408	          0x4989e0	                             mov r8, rsp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400640b	          0x4889e9	                            mov rcx, rbp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400640e	          0x4c89ea	                            mov rdx, r13	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006411	          0x4889df	                            mov rdi, rbx	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006414	      0xe827c2ffff	                 call sym.decNaNs.isra.6	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006419	          0x8b3424	                    mov esi, dword [rsp]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400641c	            0x85f6	                           test esi, esi	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x400641e	     0xf859c000000	                           jne 0x40064c0	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4006424	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006429	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006432	          0x4889d8	                            mov rax, rbx	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006435	     0xf8559010000	                           jne 0x4006594	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x400643b	        0x4883c418	                           add rsp, 0x18	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x400643f	              0x5b	                                 pop rbx	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006440	              0x5d	                                 pop rbp	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006441	            0x415c	                                 pop r12	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006443	            0x415d	                                 pop r13	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006445	              0xc3	                                     ret	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006446	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006450	            0xa830	                           test al, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006452	     0xf85a0000000	                           jne 0x40064f8	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006458	          0x83e020	                           and eax, 0x20	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400645b	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006463	            0x3c01	                               cmp al, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4006465	            0x19c0	                            sbb eax, eax	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4006467	          0x83e002	                              and eax, 2	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400646a	          0x83e801	                              sub eax, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400646d	            0x85c0	                           test eax, eax	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400646f	     0xf8eeb000000	                           jle 0x4006560	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006475	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400647b	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x400647e	      0x418b442404	                mov eax, dword [r12 + 4]	      6840	decNumber.c	FUNCTION_11
0x4006483	      0x498d54240a	                    lea rdx, [r12 + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006488	        0x418b0c24	                    mov ecx, dword [r12]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400648c	      0x4c8d442404	                       lea r8, [rsp + 4]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006491	          0x4989e1	                             mov r9, rsp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006494	          0x4889ee	                            mov rsi, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006497	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400649a	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400649d	      0xe8feaeffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40064a2	      0x488d542404	                      lea rdx, [rsp + 4]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40064a7	          0x4889ee	                            mov rsi, rbp	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40064aa	          0x4889e1	                            mov rcx, rsp	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40064ad	          0x4889df	                            mov rdi, rbx	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40064b0	      0xe83bc8ffff	                    call sym.decFinalize	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40064b5	          0x8b3424	                    mov esi, dword [rsp]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40064b8	            0x85f6	                           test esi, esi	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40064ba	     0xf8464ffffff	                            je 0x4006424	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x40064c0	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40064c4	            0x741f	                            je 0x40064e5	      7736	decNumber.c	FUNCTION_24	IF_1
0x40064c6	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40064cc	            0x7542	                           jne 0x4006510	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40064ce	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064d0	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064d7	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064dd	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064e1	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40064e5	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40064e8	      0xe800000000	                          call 0x40064ed	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40064ed	      0xe932ffffff	                           jmp 0x4006424	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40064f2	    0x660f1f440000	                    nop word [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40064f8	          0x83e130	                           and ecx, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x40064fb	     0xf8504ffffff	                           jne 0x4006405	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006501	      0xe952ffffff	                           jmp 0x4006458	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006510	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006516	            0xebcd	                           jmp 0x40064e5	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006518	     0xf1f84000000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006520	          0x8b3424	                    mov esi, dword [rsp]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006523	          0x83ce10	                            or esi, 0x10	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006526	          0x893424	                    mov dword [rsp], esi	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006529	            0xeb95	                           jmp 0x40064c0	      6087	decNumber.c	FUNCTION_2	IF_23
0x400652b	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4006531	      0x410fb64d08	               movzx ecx, byte [r13 + 8]	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4006536	            0x89c2	                            mov edx, eax	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4006538	            0x89ce	                            mov esi, ecx	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x400653a	          0x83e280	                     and edx, 0xffffff80	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400653d	          0x83e680	                     and esi, 0xffffff80	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4006540	          0x4038f2	                             cmp dl, sil	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4006543	            0x742b	                            je 0x4006570	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4006545	            0x84d2	                             test dl, dl	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x4006547	     0xf852effffff	                           jne 0x400647b	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x400654d	            0x89c8	                            mov eax, ecx	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x400654f	          0x4d89ec	                            mov r12, r13	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006552	      0xe924ffffff	                           jmp 0x400647b	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006557	    0x660f1f840000	                    nop word [rax + rax]	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006560	      0x410fb64d08	               movzx ecx, byte [r13 + 8]	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006565	            0xebe6	                           jmp 0x400654d	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006567	    0x660f1f840000	                    nop word [rax + rax]	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4006570	            0x84d2	                             test dl, dl	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4006572	        0x418b7d04	                mov edi, dword [r13 + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006576	            0x7410	                            je 0x4006588	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4006578	      0x41397c2404	                cmp dword [r12 + 4], edi	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400657d	            0x7cce	                            jl 0x400654d	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400657f	      0xe9f7feffff	                           jmp 0x400647b	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006584	         0xf1f4000	                         nop dword [rax]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006588	      0x41397c2404	                cmp dword [r12 + 4], edi	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400658d	            0x7fbe	                            jg 0x400654d	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400658f	      0xe9e7feffff	                           jmp 0x400647b	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4006594	      0xe800000000	                          call 0x4006599	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
decNumberNextMinus	SWITCH,0:functions,0:IF,3:WHILE,0:CALL,5:FOR,0:DO,0:ELSE,0	86
0x4009f30	              0x55	                                push rbp	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f31	              0x53	                                push rbx	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f32	          0x4889fd	                            mov rbp, rdi	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f35	          0x4889d3	                            mov rbx, rdx	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f38	        0x4883ec58	                           sub rsp, 0x58	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f3c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f45	      0x4889442448	             mov qword [rsp + 0x48], rax	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f4a	            0x31c0	                            xor eax, eax	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f4c	          0x488b02	                    mov rax, qword [rdx]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f4f	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1665	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f57	      0x4889442410	             mov qword [rsp + 0x10], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f5c	        0x488b4208	                mov rax, qword [rdx + 8]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f60	      0x4889442418	             mov qword [rsp + 0x18], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f65	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f69	      0x4889442420	             mov qword [rsp + 0x20], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f6e	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f71	        0x89442428	             mov dword [rsp + 0x28], eax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f75	         0xfb64608	               movzx eax, byte [rsi + 8]	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4009f79	          0x83e0c0	                     and eax, 0xffffffc0	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4009f7c	            0x3c40	                            cmp al, 0x40	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4009f7e	     0xf84b4000000	                            je 0x400a038	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4009f84	      0xba01000000	                              mov edx, 1	      1677	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f89	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4009f8e	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4009f93	      0x668954243a	               mov word [rsp + 0x3a], dx	      1677	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009f98	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4009f9d	    0x41b880000000	                           mov r8d, 0x80	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4009fa3	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009fa8	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009fb0	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1678	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fb8	    0xc744241c0600	               mov dword [rsp + 0x1c], 6	      1679	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fc0	      0xe88bf0ffff	                       call sym.decAddOp	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4009fc5	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fc9	            0x89c6	                            mov esi, eax	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fcb	    0x81e680000040	                     and esi, 0x40000080	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fd1	            0x85f6	                           test esi, esi	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4009fd3	        0x8974240c	              mov dword [rsp + 0xc], esi	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fd7	            0x7527	                           jne 0x400a000	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4009fd9	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fde	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fe7	          0x4889e8	                            mov rax, rbp	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009fea	     0xf8594000000	                           jne 0x400a084	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009ff0	        0x4883c458	                           add rsp, 0x58	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009ff4	              0x5b	                                 pop rbx	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009ff5	              0x5d	                                 pop rbp	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009ff6	              0xc3	                                     ret	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4009ff7	    0x660f1f840000	                    nop word [rax + rax]	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x400a000	            0x89c2	                            mov edx, eax	      7736	decNumber.c	FUNCTION_24	IF_1
0x400a002	    0x81e280000000	                           and edx, 0x80	      7736	decNumber.c	FUNCTION_24	IF_1
0x400a008	            0x741f	                            je 0x400a029	      7736	decNumber.c	FUNCTION_24	IF_1
0x400a00a	      0xa900000040	                    test eax, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a00f	            0x756f	                           jne 0x400a080	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a011	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a013	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a01a	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a021	        0x6689450a	                mov word [rbp + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a025	        0xc6450820	                mov byte [rbp + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400a029	          0x4889df	                            mov rdi, rbx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a02c	      0xe800000000	                          call 0x400a031	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a031	            0xeba6	                           jmp 0x4009fd9	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a033	       0xf1f440000	                   nop dword [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a038	            0x8b02	                    mov eax, dword [rdx]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400a03a	        0x488d570a	                    lea rdx, [rdi + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400a03e	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a041	            0x8907	                    mov dword [rdi], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400a043	            0x7e18	                           jle 0x400a05d	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a045	           0xf1f00	                         nop dword [rax]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a048	      0xb9e7030000	                          mov ecx, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a04d	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x400a050	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400a054	        0x66894afe	                  mov word [rdx - 2], cx	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a058	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a05b	            0x7feb	                            jg 0x400a048	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a05d	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a05f	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a066	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a069	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a06c	        0xc6450800	                   mov byte [rbp + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400a070	          0x8b4304	                mov eax, dword [rbx + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a073	            0x2b03	                    sub eax, dword [rbx]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a075	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a078	          0x894504	                mov dword [rbp + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a07b	      0xe959ffffff	                           jmp 0x4009fd9	      1674	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x400a080	            0x89d6	                            mov esi, edx	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a082	            0xeba5	                           jmp 0x400a029	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a084	      0xe800000000	                          call 0x400a089	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
decNumberNextPlus	SWITCH,0:functions,0:IF,3:WHILE,0:CALL,5:FOR,0:DO,0:ELSE,0	87
0x400a090	              0x55	                                push rbp	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a091	              0x53	                                push rbx	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a092	          0x4889fd	                            mov rbp, rdi	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a095	          0x4889d3	                            mov rbx, rdx	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a098	        0x4883ec58	                           sub rsp, 0x58	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a09c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0a5	      0x4889442448	             mov qword [rsp + 0x48], rax	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0aa	            0x31c0	                            xor eax, eax	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0ac	          0x488b02	                    mov rax, qword [rdx]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0af	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1701	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0b7	      0x4889442410	             mov qword [rsp + 0x10], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0bc	        0x488b4208	                mov rax, qword [rdx + 8]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0c0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0c5	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0c9	      0x4889442420	             mov qword [rsp + 0x20], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0ce	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0d1	        0x89442428	             mov dword [rsp + 0x28], eax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0d5	         0xfb64608	               movzx eax, byte [rsi + 8]	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400a0d9	          0x83e0c0	                     and eax, 0xffffffc0	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400a0dc	            0x3cc0	                            cmp al, 0xc0	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400a0de	     0xf84ac000000	                            je 0x400a190	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400a0e4	      0xba01000000	                              mov edx, 1	      1714	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0e9	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400a0ee	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400a0f3	      0x668954243a	               mov word [rsp + 0x3a], dx	      1714	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a0f8	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400a0fd	          0x4531c0	                            xor r8d, r8d	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400a100	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a105	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a10d	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1715	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a115	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1716	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a11d	      0xe82eefffff	                       call sym.decAddOp	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400a122	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a126	            0x89c6	                            mov esi, eax	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a128	    0x81e680000040	                     and esi, 0x40000080	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a12e	            0x85f6	                           test esi, esi	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x400a130	        0x8974240c	              mov dword [rsp + 0xc], esi	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a134	            0x7522	                           jne 0x400a158	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x400a136	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a13b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a144	          0x4889e8	                            mov rax, rbp	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a147	     0xf8593000000	                           jne 0x400a1e0	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a14d	        0x4883c458	                           add rsp, 0x58	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a151	              0x5b	                                 pop rbx	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a152	              0x5d	                                 pop rbp	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a153	              0xc3	                                     ret	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a154	         0xf1f4000	                         nop dword [rax]	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400a158	            0x89c2	                            mov edx, eax	      7736	decNumber.c	FUNCTION_24	IF_1
0x400a15a	    0x81e280000000	                           and edx, 0x80	      7736	decNumber.c	FUNCTION_24	IF_1
0x400a160	            0x741f	                            je 0x400a181	      7736	decNumber.c	FUNCTION_24	IF_1
0x400a162	      0xa900000040	                    test eax, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a167	            0x7573	                           jne 0x400a1dc	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a169	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a16b	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a172	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a179	        0x6689450a	                mov word [rbp + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a17d	        0xc6450820	                mov byte [rbp + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400a181	          0x4889df	                            mov rdi, rbx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a184	      0xe800000000	                          call 0x400a189	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a189	            0xebab	                           jmp 0x400a136	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a18b	       0xf1f440000	                   nop dword [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a190	            0x8b02	                    mov eax, dword [rdx]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400a192	        0x488d570a	                    lea rdx, [rdi + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400a196	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a199	            0x8907	                    mov dword [rdi], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400a19b	            0x7e18	                           jle 0x400a1b5	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a19d	           0xf1f00	                         nop dword [rax]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a1a0	      0xb9e7030000	                          mov ecx, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a1a5	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x400a1a8	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400a1ac	        0x66894afe	                  mov word [rdx - 2], cx	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a1b0	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a1b3	            0x7feb	                            jg 0x400a1a0	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a1b5	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a1b7	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a1be	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a1c1	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a1c4	        0xc6450800	                   mov byte [rbp + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400a1c8	          0x8b4304	                mov eax, dword [rbx + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a1cb	            0x2b03	                    sub eax, dword [rbx]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a1cd	        0xc6450880	                mov byte [rbp + 8], 0x80	      1709	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400a1d1	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a1d4	          0x894504	                mov dword [rbp + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a1d7	      0xe95affffff	                           jmp 0x400a136	      1711	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400a1dc	            0x89d6	                            mov esi, edx	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a1de	            0xeba1	                           jmp 0x400a181	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a1e0	      0xe800000000	                          call 0x400a1e5	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
decNumberAdd	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	40
0x4009950	              0x55	                                push rbp	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4009951	              0x53	                                push rbx	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4009952	          0x4531c0	                            xor r8d, r8d	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4009955	          0x4889fb	                            mov rbx, rdi	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4009958	          0x4889cd	                            mov rbp, rcx	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x400995b	        0x4883ec18	                           sub rsp, 0x18	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x400995f	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4009964	    0xc74424040000	                  mov dword [rsp + 4], 0	       772	decNumber.c	FUNCTION_68	FUNCTION_9
0x400996c	    0x64488b042528	                mov rax, qword fs:[0x28]	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4009975	      0x4889442408	                mov qword [rsp + 8], rax	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x400997a	            0x31c0	                            xor eax, eax	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x400997c	      0xe8cff6ffff	                       call sym.decAddOp	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4009981	        0x8b742404	                mov esi, dword [rsp + 4]	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4009985	            0x85f6	                           test esi, esi	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4009987	            0x751f	                           jne 0x40099a8	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4009989	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x400998e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4009997	          0x4889d8	                            mov rax, rbx	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x400999a	            0x754c	                           jne 0x40099e8	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x400999c	        0x4883c418	                           add rsp, 0x18	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40099a0	              0x5b	                                 pop rbx	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40099a1	              0x5d	                                 pop rbp	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40099a2	              0xc3	                                     ret	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40099a3	       0xf1f440000	                   nop dword [rax + rax]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40099a8	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40099ac	            0x741f	                            je 0x40099cd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40099ae	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40099b4	            0x752a	                           jne 0x40099e0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40099b6	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40099b8	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40099bf	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40099c5	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40099c9	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40099cd	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40099d0	      0xe800000000	                          call 0x40099d5	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40099d5	            0xebb2	                           jmp 0x4009989	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40099d7	    0x660f1f840000	                    nop word [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40099e0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40099e6	            0xebe5	                           jmp 0x40099cd	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40099e8	      0xe800000000	                          call 0x40099ed	       779	decNumber.c	FUNCTION_68	FUNCTION_9
decNumberToInt32	SWITCH,0:functions,0:IF,5:WHILE,0:CALL,3:FOR,1:DO,0:ELSE,2	63
0x4004170	        0x4883ec08	                              sub rsp, 8	       380	decNumber.c	FUNCTION_68	FUNCTION_3
0x4004174	      0x440fb64708	               movzx r8d, byte [rdi + 8]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4004179	        0x41f6c070	                          test r8b, 0x70	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x400417d	            0x7509	                           jne 0x4004188	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x400417f	          0x448b0f	                    mov r9d, dword [rdi]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4004182	        0x4183f90a	                            cmp r9d, 0xa	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4004186	            0x7e18	                           jle 0x40041a0	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4004188	          0x4889f7	                            mov rdi, rsi	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x400418b	      0xbe80000000	                           mov esi, 0x80	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x4004190	      0xe800000000	                          call 0x4004195	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x4004195	            0x31c0	                            xor eax, eax	       413	decNumber.c	FUNCTION_68	FUNCTION_3
0x4004197	        0x4883c408	                              add rsp, 8	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x400419b	              0xc3	                                     ret	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x400419c	         0xf1f4000	                         nop dword [rax]	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x40041a0	          0x8b4704	                mov eax, dword [rdi + 4]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40041a3	            0x85c0	                           test eax, eax	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40041a5	            0x75e1	                           jne 0x4004188	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40041a7	         0xfb74f0a	            movzx ecx, word [rdi + 0xa] 	       392	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40041ab	      0xbacdcccccc	                     mov edx, 0xcccccccd	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40041b0	            0x89c8	                            mov eax, ecx	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40041b2	            0xf7e2	                                 mul edx	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40041b4	          0xc1ea03	                              shr edx, 3	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40041b7	          0x8d0492	                  lea eax, [rdx + rdx*4]	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40041ba	             0x1c0	                            add eax, eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40041bc	            0x29c1	                            sub ecx, eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40041be	        0x4183f903	                              cmp r9d, 3	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041c2	            0x7e64	                           jle 0x4004228	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041c4	         0xfb7470c	            movzx eax, word [rdi + 0xc] 	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041c8	     0xfaf05000000	            imul eax, dword [0x040041cf]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041cf	             0x1c2	                            add edx, eax	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041d1	        0x4183f906	                              cmp r9d, 6	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041d5	            0x7e20	                           jle 0x40041f7	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041d7	         0xfb7470e	            movzx eax, word [rdi + 0xe] 	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041db	     0xfaf05000000	            imul eax, dword [0x040041e2]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041e2	             0x1c2	                            add edx, eax	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041e4	        0x4183f90a	                            cmp r9d, 0xa	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041e8	            0x750d	                           jne 0x40041f7	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041ea	         0xfb74710	           movzx eax, word [rdi + 0x10] 	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041ee	     0xfaf05000000	            imul eax, dword [0x040041f5]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041f5	             0x1c2	                            add edx, eax	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x40041f7	    0x81facccccc0c	                      cmp edx, 0xccccccc	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x40041fd	            0x7629	                           jbe 0x4004228	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x40041ff	          0x4584c0	                           test r8b, r8b	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4004202	            0x7984	                           jns 0x4004188	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4004204	    0x81facccccc0c	                      cmp edx, 0xccccccc	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400420a	     0xf8578ffffff	                           jne 0x4004188	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4004210	          0x83f908	                              cmp ecx, 8	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4004213	      0xb800000080	                     mov eax, 0x80000000	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4004218	     0xf856affffff	                           jne 0x4004188	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400421e	      0xe974ffffff	                           jmp 0x4004197	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4004223	       0xf1f440000	                   nop dword [rax + rax]	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4004228	    0x81facccccc0c	                      cmp edx, 0xccccccc	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x400422e	            0x7505	                           jne 0x4004235	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4004230	          0x83f907	                              cmp ecx, 7	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4004233	            0x77ca	                            ja 0x40041ff	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4004235	    0x8d04d5000000	                        lea eax, [rdx*8]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x400423c	          0x8d0450	                  lea eax, [rax + rdx*2]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x400423f	             0x1c1	                            add ecx, eax	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4004241	            0x89c8	                            mov eax, ecx	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4004243	            0xf7d8	                                 neg eax	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4004245	          0x4584c0	                           test r8b, r8b	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4004248	           0xf49c1	                         cmovns eax, ecx	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x400424b	      0xe947ffffff	                           jmp 0x4004197	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
decNumberLog10	SWITCH,0:functions,0:IF,15:WHILE,0:CALL,22:FOR,0:DO,1:ELSE,0	319
0x4010bb0	            0x4157	                                push r15	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bb2	            0x4156	                                push r14	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bb4	            0x4155	                                push r13	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bb6	            0x4154	                                push r12	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bb8	          0x4989d4	                            mov r12, rdx	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bbb	              0x55	                                push rbp	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bbc	              0x53	                                push rbx	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bbd	          0x4889fd	                            mov rbp, rdi	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bc0	    0x4881ecc80000	                           sub rsp, 0xc8	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bc7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bd0	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bd8	            0x31c0	                            xor eax, eax	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bda	    0x813a3f420f00	                cmp dword [rdx], 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x4010be0	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1391	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010be8	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1391	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010bf0	     0xf8faa000000	                            jg 0x4010ca0	      7511	decNumber.c	FUNCTION_19	IF_1
0x4010bf6	    0x817a043f420f	           cmp dword [rdx + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x4010bfd	     0xf8f9d000000	                            jg 0x4010ca0	      7512	decNumber.c	FUNCTION_19	IF_1
0x4010c03	          0x8b4208	                mov eax, dword [rdx + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010c06	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010c08	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010c0d	     0xf8f8d000000	                            jg 0x4010ca0	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010c13	            0x8b06	                    mov eax, dword [rsi]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c15	          0x4889f3	                            mov rbx, rsi	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c18	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c1d	     0xf8e95000000	                           jle 0x4010cb8	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c23	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c28	            0x7509	                           jne 0x4010c33	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c2a	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c2d	     0xf84bd030000	                            je 0x4010ff0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c33	      0xbe80000000	                           mov esi, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c38	    0xc74424108000	           mov dword [rsp + 0x10], 0x80 	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010c40	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010c44	            0x7424	                            je 0x4010c6a	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010c46	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010c4c	     0xf8596010000	                           jne 0x4010de8	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010c52	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010c54	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010c5b	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010c62	        0x6689450a	                mov word [rbp + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010c66	        0xc6450820	                mov byte [rbp + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4010c6a	          0x4c89e7	                            mov rdi, r12	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4010c6d	      0xe800000000	                          call 0x4010c72	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4010c72	    0x488b9424b800	            mov rdx, qword [rsp + 0xb8] 	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c7a	    0x644833142528	                xor rdx, qword fs:[0x28]	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c83	          0x4889e8	                            mov rax, rbp	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c86	     0xf8537040000	                           jne 0x40110c3	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c8c	    0x4881c4c80000	                           add rsp, 0xc8	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c93	              0x5b	                                 pop rbx	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c94	              0x5d	                                 pop rbp	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c95	            0x415c	                                 pop r12	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c97	            0x415d	                                 pop r13	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c99	            0x415e	                                 pop r14	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c9b	            0x415f	                                 pop r15	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c9d	              0xc3	                                     ret	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010c9e	            0x6690	                                     nop	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010ca0	    0xc74424104000	           mov dword [rsp + 0x10], 0x40 	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010ca8	      0xbe40000000	                           mov esi, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010cad	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010cb1	            0x7593	                           jne 0x4010c46	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010cb3	            0xebb5	                           jmp 0x4010c6a	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010cb5	           0xf1f00	                         nop dword [rax]	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010cb8	          0x8b5604	                mov edx, dword [rsi + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010cbb	             0x1c2	                            add edx, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010cbd	    0x81c27c841e00	                       add edx, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010cc3	    0x81fabcc62d00	                       cmp edx, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010cc9	     0xf8754ffffff	                            ja 0x4010c23	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ccf	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x4010cd4	      0xbe40000000	                           mov esi, 0x40	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x4010cd9	      0xe800000000	                          call 0x4010cde	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x4010cde	         0xfb64308	               movzx eax, byte [rbx + 8]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010ce2	          0x4189c5	                           mov r13d, eax	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010ce5	    0x4181e5f00000	                          and r13d, 0xf0	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010cec	            0x7561	                           jne 0x4010d4f	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010cee	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010cf3	            0x8b0b	                    mov ecx, dword [rbx]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010cf5	            0x7505	                           jne 0x4010cfc	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010cf7	          0x83f901	                              cmp ecx, 1	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010cfa	            0x7455	                            je 0x4010d51	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4010cfc	        0x88442448	               mov byte [rsp + 0x48], al	      6839	decNumber.c	FUNCTION_11
0x4010d00	          0x8b4304	                mov eax, dword [rbx + 4]	      6840	decNumber.c	FUNCTION_11
0x4010d03	        0x488d530a	                    lea rdx, [rbx + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010d07	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010d0c	      0x4c8d442418	                    lea r8, [rsp + 0x18]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010d11	      0x488d742420	                   lea rsi, [rsp + 0x20]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010d16	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010d1b	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1438	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x4010d23	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1439	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x4010d2b	    0xc74424200100	               mov dword [rsp + 0x20], 1	      1442	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x4010d33	        0x89442444	             mov dword [rsp + 0x44], eax	      6840	decNumber.c	FUNCTION_11
0x4010d37	      0xe86406ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010d3c	      0xf644241c20	           test byte [rsp + 0x1c], 0x20 	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010d41	            0x750c	                           jne 0x4010d4f	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010d43	    0x66837c244a01	                cmp word [rsp + 0x4a], 1	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010d49	     0xf840d020000	                            je 0x4010f5c	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010d4f	            0x8b0b	                    mov ecx, dword [rbx]	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010d51	          0x83c106	                              add ecx, 6	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010d54	        0x41390c24	                    cmp dword [r12], ecx	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010d58	      0x410f4d0c24	                 cmovge ecx, dword [r12]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010d5d	        0x448d7103	                     lea r14d, [rcx + 3]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010d61	        0x4183fe31	                          cmp r14d, 0x31	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010d65	     0xf8fa5010000	                            jg 0x4010f10	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010d6b	          0x4963c6	                        movsxd rax, r14d	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010d6e	     0xfb680000000	                   movzx eax, byte [rax]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010d75	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010d79	          0x83ff24	                           cmp edi, 0x24	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4010d7c	     0xf867e010000	                           jbe 0x4010f00	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4010d82	      0xe800000000	                          call 0x4010d87	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4010d87	          0x4885c0	                           test rax, rax	      1469	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4010d8a	          0x4989c5	                            mov r13, rax	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4010d8d	          0x4989c7	                            mov r15, rax	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4010d90	     0xf846a020000	                            je 0x4011000	      1469	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4010d96	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4010d9b	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4010da0	          0x4889de	                            mov rsi, rbx	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4010da3	          0x4c89ff	                            mov rdi, r15	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4010da6	      0x4489742420	            mov dword [rsp + 0x20], r14d	      1474	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010dab	    0xc74424243f42	        mov dword [rsp + 0x24], 0xf423f 	      1475	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010db3	    0xc7442428c1bd	     mov dword [rsp + 0x28], 0xfff0bdc1 	      1476	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010dbb	      0xc644243800	                mov byte [rsp + 0x38], 0	      1477	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010dc0	      0xe86be0ffff	                        call sym.decLnOp	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4010dc5	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x4010dc9	          0xf6c3dd	                           test bl, 0xdd	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x4010dcc	            0x742a	                            je 0x4010df8	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x4010dce	    0xf7c300000040	                    test ebx, 0x40000000	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x4010dd4	            0x7522	                           jne 0x4010df8	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x4010dd6	          0x4c89ef	                            mov rdi, r13	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010dd9	      0xe800000000	                          call 0x4010dde	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010dde	            0x89de	                            mov esi, ebx	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010de0	      0xe961feffff	                           jmp 0x4010c46	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010de5	           0xf1f00	                         nop dword [rax]	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010de8	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010dee	      0xe977feffff	                           jmp 0x4010c6a	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010df3	       0xf1f440000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010df8	      0x41f6470870	               test byte [r15 + 8], 0x70	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4010dfd	     0xf85e5000000	                           jne 0x4010ee8	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4010e03	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4010e09	            0x750a	                           jne 0x4010e15	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4010e0b	        0x41833f01	                      cmp dword [r15], 1	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4010e0f	     0xf84d3000000	                            je 0x4010ee8	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4010e15	        0x418b0424	                    mov eax, dword [r12]	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010e19	          0x8d7003	                      lea esi, [rax + 3]	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010e1c	          0x83fe31	                           cmp esi, 0x31	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010e1f	     0xf8f1b010000	                            jg 0x4010f40	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010e25	          0x4863c6	                         movsxd rax, esi	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010e28	     0xfb680000000	                   movzx eax, byte [rax]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010e2f	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010e33	          0x83ff24	                           cmp edi, 0x24	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4010e36	     0xf86f4000000	                           jbe 0x4010f30	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4010e3c	        0x89742408	                mov dword [rsp + 8], esi	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4010e40	      0xe800000000	                          call 0x4010e45	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4010e45	          0x4885c0	                           test rax, rax	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4010e48	          0x4989c6	                            mov r14, rax	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4010e4b	          0x4989c2	                            mov r10, rax	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4010e4e	        0x8b742408	                mov esi, dword [rsp + 8]	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4010e52	     0xf84c2010000	                            je 0x401101a	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4010e58	      0xba0a000000	                            mov edx, 0xa	      1501	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010e5d	        0x89742420	             mov dword [rsp + 0x20], esi	      1505	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010e61	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4010e66	      0x668954244a	               mov word [rsp + 0x4a], dx	      1501	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010e6b	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4010e70	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4010e75	          0x4c89d7	                            mov rdi, r10	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4010e78	      0x4c89542408	                mov qword [rsp + 8], r10	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4010e7d	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010e82	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010e8a	    0xc74424400200	               mov dword [rsp + 0x40], 2	      1503	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010e92	      0xe899dfffff	                        call sym.decLnOp	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4010e97	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010e9c	        0x418b0424	                    mov eax, dword [r12]	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010ea0	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010ea5	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010eaa	    0x41b880000000	                           mov r8d, 0x80	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010eb0	          0x4c89fe	                            mov rsi, r15	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010eb3	          0x4889ef	                            mov rdi, rbp	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010eb6	          0x4c89d2	                            mov rdx, r10	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010eb9	        0x89442420	             mov dword [rsp + 0x20], eax	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4010ebd	      0xe8ee93ffff	                    call sym.decDivideOp	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010ec2	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4010ec6	          0x4c89ef	                            mov rdi, r13	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010ec9	      0xe800000000	                          call 0x4010ece	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010ece	          0x4c89f7	                            mov rdi, r14	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010ed1	      0xe800000000	                          call 0x4010ed6	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010ed6	            0x85db	                           test ebx, ebx	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4010ed8	     0xf8494fdffff	                            je 0x4010c72	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4010ede	            0x89de	                            mov esi, ebx	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4010ee0	      0xe9c8fdffff	                           jmp 0x4010cad	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4010ee5	           0xf1f00	                         nop dword [rax]	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4010ee8	          0x4c89fe	                            mov rsi, r15	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4010eeb	          0x4889ef	                            mov rdi, rbp	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4010eee	          0x4531f6	                          xor r14d, r14d	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010ef1	      0xe800000000	                          call 0x4010ef6	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4010ef6	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4010efa	            0xebca	                           jmp 0x4010ec6	      1485	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12
0x4010efc	         0xf1f4000	                         nop dword [rax]	      1485	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12
0x4010f00	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	      1400	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010f05	          0x4531ed	                          xor r13d, r13d	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010f08	      0xe989feffff	                           jmp 0x4010d96	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010f0d	           0xf1f00	                         nop dword [rax]	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010f10	          0x83c105	                              add ecx, 5	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f13	      0xba56555555	                     mov edx, 0x55555556	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f18	            0x89c8	                            mov eax, ecx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f1a	          0xc1f91f	                           sar ecx, 0x1f	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f1d	            0xf7ea	                                imul edx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f1f	            0x29ca	                            sub edx, ecx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f21	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f25	      0xe94ffeffff	                           jmp 0x4010d79	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f2a	    0x660f1f440000	                    nop word [rax + rax]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4010f30	    0x4c8d94249000	                   lea r10, [rsp + 0x90]	      1403	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010f38	          0x4531f6	                          xor r14d, r14d	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010f3b	      0xe918ffffff	                           jmp 0x4010e58	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010f40	          0x8d4805	                      lea ecx, [rax + 5]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f43	      0xba56555555	                     mov edx, 0x55555556	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f48	            0x89c8	                            mov eax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f4a	            0xf7ea	                                imul edx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f4c	            0x89c8	                            mov eax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f4e	          0xc1f81f	                           sar eax, 0x1f	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f51	            0x29c2	                            sub edx, eax	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f53	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f57	      0xe9d7feffff	                           jmp 0x4010e33	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4010f5c	        0x8b7c2444	            mov edi, dword [rsp + 0x44] 	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x4010f60	            0x85ff	                           test edi, edi	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4010f62	     0xf88bb000000	                            js 0x4011023	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4010f68	    0x41b800000000	                              mov r8d, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010f6e	            0x89fe	                            mov esi, edi	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4010f70	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010f75	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010f7d	    0xc74424400100	               mov dword [rsp + 0x40], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010f85	      0xb901000000	                              mov ecx, 1	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x4010f8a	    0x66448944244a	              mov word [rsp + 0x4a], r8w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010f90	     0xf85b3000000	                           jne 0x4011049	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x4010f96	      0x488d54244a	                   lea rdx, [rsp + 0x4a]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010f9b	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010fa0	      0x4c8d442418	                    lea r8, [rsp + 0x18]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010fa5	        0x44886d08	                mov byte [rbp + 8], r13b	      6839	decNumber.c	FUNCTION_11
0x4010fa9	          0x4c89e6	                            mov rsi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010fac	          0x4889ef	                            mov rdi, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010faf	    0xc74504000000	                  mov dword [rbp + 4], 0	      6840	decNumber.c	FUNCTION_11
0x4010fb6	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1451	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010fbe	          0x4531f6	                          xor r14d, r14d	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010fc1	      0xe8da03ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010fc6	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010fcb	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010fd0	          0x4c89e6	                            mov rsi, r12	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010fd3	          0x4889ef	                            mov rdi, rbp	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010fd6	          0x4531ed	                          xor r13d, r13d	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x4010fd9	      0xe8121dffff	                    call sym.decFinalize	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010fde	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010fe2	      0xe9dffeffff	                           jmp 0x4010ec6	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010fe7	    0x660f1f840000	                    nop word [rax + rax]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4010ff0	        0xf6430870	               test byte [rbx + 8], 0x70	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ff4	     0xf8539fcffff	                           jne 0x4010c33	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ffa	      0xe9d0fcffff	                           jmp 0x4010ccf	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010fff	              0x90	                                     nop	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011000	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4011004	          0x83cb10	                            or ebx, 0x10	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4011007	        0x895c2410	             mov dword [rsp + 0x10], ebx	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x401100b	          0x4c89ef	                            mov rdi, r13	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x401100e	      0xe800000000	                          call 0x4011013	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4011013	            0x89de	                            mov esi, ebx	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x4011015	      0xe993fcffff	                           jmp 0x4010cad	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x401101a	          0x83cb10	                            or ebx, 0x10	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x401101d	        0x895c2410	             mov dword [rsp + 0x10], ebx	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4011021	            0xebe8	                           jmp 0x401100b	      1494	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4011023	            0x89f8	                            mov eax, edi	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4011025	      0xbe00000080	                     mov esi, 0x80000000	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x401102a	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x401102f	            0xf7d8	                                 neg eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4011031	    0x81ff00000080	                     cmp edi, 0x80000000	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4011037	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x401103f	           0xf45f0	                         cmovne esi, eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4011042	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011044	      0x66894c244a	               mov word [rsp + 0x4a], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011049	      0x488d4c244a	                   lea rcx, [rsp + 0x4a]	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x401104e	    0x41b8d34d6210	                     mov r8d, 0x10624dd3	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4011054	         0xf1f4000	                         nop dword [rax]	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4011058	            0x89f0	                            mov eax, esi	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401105a	        0x4883c102	                              add rcx, 2	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401105e	          0x41f7e0	                                 mul r8d	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4011061	          0xc1ea06	                              shr edx, 6	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4011064	    0x69c2e8030000	                    imul eax, edx, 0x3e8	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401106a	            0x29c6	                            sub esi, eax	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401106c	        0x668971fe	                  mov word [rcx - 2], si	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4011070	            0x85d2	                           test edx, edx	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4011072	            0x89d6	                            mov esi, edx	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4011074	            0x75e2	                           jne 0x4011058	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4011076	      0x488d74244a	                   lea rsi, [rsp + 0x4a]	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x401107b	          0x4829f1	                            sub rcx, rsi	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x401107e	          0x48d1f9	                              sar rcx, 1	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4011081	          0x4863c1	                         movsxd rax, ecx	      7762	decNumber.c	FUNCTION_25
0x4011084	        0x8d4c49fe	              lea ecx, [rcx + rcx*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x4011088	      0x488d4446fe	              lea rax, [rsi + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x401108d	          0x4839f0	                            cmp rax, rsi	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4011090	            0x7219	                            jb 0x40110ab	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4011092	           0xfb710	                   movzx edx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4011095	          0x6685d2	                             test dx, dx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4011098	            0x752e	                           jne 0x40110c8	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x401109a	          0x83f901	                              cmp ecx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x401109d	            0x740c	                            je 0x40110ab	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x401109f	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40110a3	          0x83e903	                              sub ecx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x40110a6	          0x4839f0	                            cmp rax, rsi	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40110a9	            0x73e7	                           jae 0x4011092	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40110ab	            0x85ff	                           test edi, edi	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x40110ad	        0x894c2440	             mov dword [rsp + 0x40], ecx	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40110b1	            0x792a	                           jns 0x40110dd	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x40110b3	      0xc644244880	            mov byte [rsp + 0x48], 0x80 	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x40110b8	    0x41bd80ffffff	                    mov r13d, 0xffffff80	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x40110be	      0xe9d3feffff	                           jmp 0x4010f96	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x40110c3	      0xe800000000	                          call 0x40110c8	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x40110c8	        0x6683fa09	                               cmp dx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x40110cc	            0x76dd	                           jbe 0x40110ab	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x40110ce	          0x8d4101	                      lea eax, [rcx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40110d1	          0x83c102	                              add ecx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40110d4	        0x6683fa63	                            cmp dx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40110d8	           0xf46c8	                         cmovbe ecx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40110db	            0xebce	                           jmp 0x40110ab	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40110dd	    0x440fb66c2448	          movzx r13d, byte [rsp + 0x48] 	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40110e3	      0xe9aefeffff	                           jmp 0x4010f96	      7780	decNumber.c	FUNCTION_25	FOR_1
decNumberRemainder	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	40
0x400b440	              0x55	                                push rbp	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b441	              0x53	                                push rbx	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b442	    0x41b840000000	                           mov r8d, 0x40	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x400b448	          0x4889fb	                            mov rbx, rdi	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b44b	          0x4889cd	                            mov rbp, rcx	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b44e	        0x4883ec18	                           sub rsp, 0x18	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b452	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x400b457	    0xc74424040000	                  mov dword [rsp + 4], 0	      2398	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b45f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b468	      0x4889442408	                mov qword [rsp + 8], rax	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b46d	            0x31c0	                            xor eax, eax	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b46f	      0xe83ceeffff	                    call sym.decDivideOp	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x400b474	        0x8b742404	                mov esi, dword [rsp + 4]	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x400b478	            0x85f6	                           test esi, esi	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x400b47a	            0x7524	                           jne 0x400b4a0	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x400b47c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b481	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b48a	          0x4889d8	                            mov rax, rbx	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b48d	            0x7549	                           jne 0x400b4d8	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b48f	        0x4883c418	                           add rsp, 0x18	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b493	              0x5b	                                 pop rbx	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b494	              0x5d	                                 pop rbp	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b495	              0xc3	                                     ret	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x400b4a0	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400b4a4	            0x741f	                            je 0x400b4c5	      7736	decNumber.c	FUNCTION_24	IF_1
0x400b4a6	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b4ac	            0x7522	                           jne 0x400b4d0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b4ae	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b4b0	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b4b7	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b4bd	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b4c1	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400b4c5	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b4c8	      0xe800000000	                          call 0x400b4cd	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b4cd	            0xebad	                           jmp 0x400b47c	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b4cf	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b4d0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b4d6	            0xebed	                           jmp 0x400b4c5	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b4d8	      0xe800000000	                          call 0x400b4dd	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
decToString	SWITCH,0:functions,0:IF,24:WHILE,0:CALL,15:FOR,8:DO,0:ELSE,4	436
0x40006f0	            0x4157	                                push r15	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40006f2	            0x4156	                                push r14	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40006f4	          0x4889f1	                            mov rcx, rsi	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40006f7	            0x4155	                                push r13	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40006f9	            0x4154	                                push r12	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40006fb	          0x4189d0	                            mov r8d, edx	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40006fe	              0x55	                                push rbp	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x40006ff	              0x53	                                push rbx	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000700	        0x4883ec08	                              sub rsp, 8	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000704	          0x486307	                 movsxd rax, dword [rdi]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000707	        0x448b5704	               mov r10d, dword [rdi + 4]	      3616	decNumber.c	FUNCTION_68	FUNCTION_63
0x400070b	          0x83f831	                           cmp eax, 0x31	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400070e	     0xf8fbc000000	                            jg 0x40007d0	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000714	     0xfb680000000	                   movzx eax, byte [rax]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400071b	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000720	         0xfb64708	               movzx eax, byte [rdi + 8]	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4000724	            0x84c0	                             test al, al	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4000726	     0xf88cb000000	                            js 0x40007f7	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x400072c	            0xa870	                           test al, 0x70	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x400072e	     0xf85d6000000	                           jne 0x400080a	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000734	            0x8b37	                    mov esi, dword [rdi]	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000736	          0x83fe31	                           cmp esi, 0x31	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000739	     0xf8eba010000	                           jle 0x40008f9	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400073f	        0x448d4e02	                      lea r9d, [rsi + 2]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000743	      0xba56555555	                     mov edx, 0x55555556	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000748	          0x4489c8	                            mov eax, r9d	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400074b	        0x41c1f91f	                           sar r9d, 0x1f	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400074f	            0xf7ea	                                imul edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000751	          0x4429ca	                            sub edx, r9d	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000754	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000758	        0x4c8d6f0a	                    lea r13, [rdi + 0xa]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400075c	            0x89f5	                            mov ebp, esi	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400075e	            0x29c5	                            sub ebp, eax	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000760	          0x4d01ec	                            add r12, r13	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000763	          0x83ed01	                              sub ebp, 1	      3654	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000766	          0x4585d2	                         test r10d, r10d	      3656	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4000769	     0xf84f5000000	                            je 0x4000864	      3656	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x400076f	          0x4585d2	                         test r10d, r10d	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000772	        0x458d0c32	                    lea r9d, [r10 + rsi]	      3666	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000776	     0xf8f4d020000	                            jg 0x40009c9	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x400077c	        0x4183f9fb	             cmp r9d, 0xfffffffffffffffb	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000780	     0xf8c43020000	                            jl 0x40009c9	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000786	            0x31db	                            xor ebx, ebx	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000788	          0x4585c9	                           test r9d, r9d	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x400078b	      0x410fb70424	                   movzx eax, word [r12]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000790	     0xf8f87020000	                            jg 0x4000a1d	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x4000796	          0xc60130	                    mov byte [rcx], 0x30	      3724	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x4000799	        0xc641012e	                mov byte [rcx + 1], 0x2e	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x400079d	        0x4883c102	                              add rcx, 2	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40007a1	          0x4585c9	                           test r9d, r9d	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007a4	     0xf84d7010000	                            je 0x4000981	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007aa	          0x41f7d1	                                 not r9d	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007ad	        0x498d5101	                       lea rdx, [r9 + 1]	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007b1	            0x85d2	                           test edx, edx	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007b3	            0x89d7	                            mov edi, edx	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007b5	            0x7411	                            je 0x40007c8	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007b7	            0x31f6	                            xor esi, esi	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007b9	          0x4189f0	                            mov r8d, esi	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007bc	          0x83c601	                              add esi, 1	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007bf	            0x39fe	                            cmp esi, edi	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007c1	      0x42c6040130	               mov byte [rcx + r8], 0x30	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007c6	            0x72f1	                            jb 0x40007b9	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007c8	          0x4801d1	                            add rcx, rdx	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007cb	      0xe9b1010000	                           jmp 0x4000981	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40007d0	          0x8d7002	                      lea esi, [rax + 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007d3	      0xba56555555	                     mov edx, 0x55555556	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007d8	            0x89f0	                            mov eax, esi	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007da	            0xf7ea	                                imul edx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007dc	            0x89f0	                            mov eax, esi	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007de	          0xc1f81f	                           sar eax, 0x1f	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007e1	            0x29c2	                            sub edx, eax	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007e3	          0x4863c2	                         movsxd rax, edx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007e6	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40007eb	         0xfb64708	               movzx eax, byte [rdi + 8]	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x40007ef	            0x84c0	                             test al, al	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x40007f1	     0xf8935ffffff	                           jns 0x400072c	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x40007f7	          0xc6012d	                    mov byte [rcx], 0x2d	      3631	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x40007fa	         0xfb64708	               movzx eax, byte [rdi + 8]	      3631	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x40007fe	        0x4883c101	                              add rcx, 1	      3632	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x4000802	            0xa870	                           test al, 0x70	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000804	     0xf842affffff	                            je 0x4000734	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x400080a	            0xa840	                           test al, 0x40	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x400080c	     0xf8592010000	                           jne 0x40009a4	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x4000812	            0xa810	                           test al, 0x10	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000814	            0x7407	                            je 0x400081d	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000816	          0xc60173	                    mov byte [rcx], 0x73	      3641	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000819	        0x4883c101	                              add rcx, 1	      3642	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x400081d	    0xc7014e614e00	               mov dword [rcx], 0x4e614e	       110	string3.h	FUNCTION_39	CALL_3
0x4000823	        0x4883c103	                              add rcx, 3	      3645	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000827	          0x4585d2	                         test r10d, r10d	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x400082a	            0x7516	                           jne 0x4000842	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x400082c	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000831	            0x8b37	                    mov esi, dword [rdi]	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000833	     0xf85fdfeffff	                           jne 0x4000736	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000839	          0x83fe01	                              cmp esi, 1	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x400083c	     0xf85f4feffff	                           jne 0x4000736	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000842	        0x4883c408	                              add rsp, 8	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000846	              0x5b	                                 pop rbx	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000847	              0x5d	                                 pop rbp	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000848	            0x415c	                                 pop r12	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400084a	            0x415d	                                 pop r13	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400084c	            0x415e	                                 pop r14	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400084e	            0x415f	                                 pop r15	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000850	              0xc3	                                     ret	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000851	     0xf1f80000000	                         nop dword [rax]	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000858	          0x4c01f1	                            add rcx, r14	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400085b	        0x4983ec02	                              sub r12, 2	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x400085f	      0xbd02000000	                              mov ebp, 2	      3660	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000864	          0x4d39e5	                            cmp r13, r12	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000867	     0xf87a3000000	                            ja 0x4000910	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x400086d	            0x85ed	                           test ebp, ebp	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400086f	      0x410fb71c24	                   movzx ebx, word [r12]	      3658	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000874	            0x78e5	                            js 0x400085b	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000876	          0x4c63fd	                         movsxd r15, ebp	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000879	          0x4889cf	                            mov rdi, rcx	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400087c	      0xbe30000000	                           mov esi, 0x30	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000881	        0x4d8d7701	                      lea r14, [r15 + 1]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000885	          0x4c89f2	                            mov rdx, r14	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000888	      0xe800000000	                          call 0x400088d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400088d	          0x4889c1	                            mov rcx, rax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000890	          0x4889c2	                            mov rdx, rax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000893	            0xeb06	                           jmp 0x400089b	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000895	           0xf1f00	                         nop dword [rax]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000898	          0x4c63fd	                         movsxd r15, ebp	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400089b	    0x428b34bd0000	                  mov esi, dword [r15*4]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008a3	          0x8d0436	                    lea eax, [rsi + rsi]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008a6	            0x39c3	                            cmp ebx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008a8	            0x762a	                           jbe 0x40008d4	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008aa	    0x8d04f5000000	                        lea eax, [rsi*8]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008b1	      0xbf34000000	                           mov edi, 0x34	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008b6	            0x39c3	                            cmp ebx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008b8	            0x720a	                            jb 0x40008c4	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008ba	            0x29c3	                            sub ebx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008bc	          0xc60238	                    mov byte [rdx], 0x38	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008bf	      0xbf3c000000	                           mov edi, 0x3c	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008c4	            0x89c6	                            mov esi, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008c6	            0xd1ee	                              shr esi, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008c8	            0x39f3	                            cmp ebx, esi	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008ca	            0x7205	                            jb 0x40008d1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008cc	            0x29f3	                            sub ebx, esi	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008ce	          0x40883a	                     mov byte [rdx], dil	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008d1	          0xc1e802	                              shr eax, 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008d4	            0x39c3	                            cmp ebx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008d6	            0x7205	                            jb 0x40008dd	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008d8	          0x800202	                       add byte [rdx], 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008db	            0x29c3	                            sub ebx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008dd	            0xd1e8	                              shr eax, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008df	            0x39c3	                            cmp ebx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008e1	            0x7205	                            jb 0x40008e8	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008e3	          0x800201	                       add byte [rdx], 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008e6	            0x29c3	                            sub ebx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008e8	          0x83ed01	                              sub ebp, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008eb	        0x4883c201	                              add rdx, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008ef	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008f2	            0x75a4	                           jne 0x4000898	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008f4	      0xe95fffffff	                           jmp 0x4000858	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40008f9	          0x4863c6	                         movsxd rax, esi	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x40008fc	     0xfb680000000	                   movzx eax, byte [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000903	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000907	      0xe94cfeffff	                           jmp 0x4000758	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400090c	         0xf1f4000	                         nop dword [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000910	          0xc60100	                       mov byte [rcx], 0	      3758	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000913	        0x4883c408	                              add rsp, 8	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000917	              0x5b	                                 pop rbx	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000918	              0x5d	                                 pop rbp	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000919	            0x415c	                                 pop r12	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400091b	            0x415d	                                 pop r13	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400091d	            0x415e	                                 pop r14	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400091f	            0x415f	                                 pop r15	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000921	              0xc3	                                     ret	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000922	    0x660f1f440000	                    nop word [rax + rax]	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000928	          0x4863d5	                         movsxd rdx, ebp	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x400092b	          0x83ed01	                              sub ebp, 1	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x400092e	    0x8b3495000000	                  mov esi, dword [rdx*4]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000935	          0xc60130	                    mov byte [rcx], 0x30	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000938	          0x8d1436	                    lea edx, [rsi + rsi]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400093b	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400093d	            0x762a	                           jbe 0x4000969	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400093f	    0x8d14f5000000	                        lea edx, [rsi*8]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000946	      0xbf34000000	                           mov edi, 0x34	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400094b	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400094d	            0x720a	                            jb 0x4000959	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400094f	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000951	          0xc60138	                    mov byte [rcx], 0x38	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000954	      0xbf3c000000	                           mov edi, 0x3c	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000959	            0x89d6	                            mov esi, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400095b	            0xd1ee	                              shr esi, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400095d	            0x39f0	                            cmp eax, esi	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400095f	            0x7205	                            jb 0x4000966	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000961	            0x29f0	                            sub eax, esi	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000963	          0x408839	                     mov byte [rcx], dil	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000966	          0xc1ea02	                              shr edx, 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000969	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400096b	            0x7205	                            jb 0x4000972	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400096d	          0x800102	                       add byte [rcx], 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000970	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000972	            0xd1ea	                              shr edx, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000974	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000976	            0x7205	                            jb 0x400097d	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000978	          0x800101	                       add byte [rcx], 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400097b	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400097d	        0x4883c101	                              add rcx, 1	      3727	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7
0x4000981	            0x85ed	                           test ebp, ebp	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000983	            0x79a3	                           jns 0x4000928	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000985	          0x4d39ec	                            cmp r12, r13	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x4000988	     0xf8450010000	                            je 0x4000ade	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x400098e	    0x410fb74424fe	               movzx eax, word [r12 - 2]	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000994	      0xbd01000000	                              mov ebp, 1	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000999	        0x4983ec02	                              sub r12, 2	      3730	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x400099d	      0xba02000000	                              mov edx, 2	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x40009a2	            0xeb8a	                           jmp 0x400092e	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x40009a4	      0xb879000000	                           mov eax, 0x79	       110	string3.h	FUNCTION_39	CALL_3
0x40009a9	    0xc701496e6600	               mov dword [rcx], 0x666e49	       110	string3.h	FUNCTION_39	CALL_3
0x40009af	    0xc74103696e69	        mov dword [rcx + 3], 0x74696e69 	       110	string3.h	FUNCTION_39	CALL_3
0x40009b6	        0x66894107	                  mov word [rcx + 7], ax	       110	string3.h	FUNCTION_39	CALL_3
0x40009ba	        0x4883c408	                              add rsp, 8	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x40009be	              0x5b	                                 pop rbx	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x40009bf	              0x5d	                                 pop rbp	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x40009c0	            0x415c	                                 pop r12	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x40009c2	            0x415d	                                 pop r13	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x40009c4	            0x415e	                                 pop r14	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x40009c6	            0x415f	                                 pop r15	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x40009c8	              0xc3	                                     ret	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x40009c9	          0x4584c0	                           test r8b, r8b	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x40009cc	        0x418d59ff	                       lea ebx, [r9 - 1]	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x40009d0	     0xf844e020000	                            je 0x4000c24	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x40009d6	            0x85db	                           test ebx, ebx	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x40009d8	     0xf8446020000	                            je 0x4000c24	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x40009de	            0x85db	                           test ebx, ebx	      3675	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40009e0	     0xf8874020000	                            js 0x4000c5a	      3675	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x40009e6	    0x41b956555555	                     mov r9d, 0x55555556	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x40009ec	            0x89d8	                            mov eax, ebx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x40009ee	          0x41f7e9	                                imul r9d	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x40009f1	            0x89d8	                            mov eax, ebx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x40009f3	          0x4189d9	                            mov r9d, ebx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x40009f6	          0xc1f81f	                           sar eax, 0x1f	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x40009f9	            0x29c2	                            sub edx, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x40009fb	          0x8d0452	                  lea eax, [rdx + rdx*2]	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x40009fe	          0x4129c1	                            sub r9d, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000a01	          0x4429cb	                            sub ebx, r9d	      3682	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000a04	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000a09	            0x7509	                           jne 0x4000a14	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000a0b	          0x83fe01	                              cmp esi, 1	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000a0e	     0xf8426020000	                            je 0x4000c3a	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000a14	        0x4183c101	                              add r9d, 1	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000a18	      0x410fb70424	                   movzx eax, word [r12]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a1d	          0x4489ce	                            mov esi, r9d	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a20	            0xeb71	                           jmp 0x4000a93	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a22	    0x660f1f440000	                    nop word [rax + rax]	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a28	          0x4863d5	                         movsxd rdx, ebp	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000a2b	          0x83ed01	                              sub ebp, 1	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000a2e	    0x448b04950000	                  mov r8d, dword [rdx*4]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a36	          0xc60130	                    mov byte [rcx], 0x30	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a39	        0x438d1400	                      lea edx, [r8 + r8]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a3d	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a3f	            0x7631	                           jbe 0x4000a72	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a41	    0x428d14c50000	                         lea edx, [r8*8]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a49	    0x41ba34000000	                          mov r10d, 0x34	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a4f	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a51	            0x720b	                            jb 0x4000a5e	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a53	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a55	          0xc60138	                    mov byte [rcx], 0x38	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a58	    0x41ba3c000000	                          mov r10d, 0x3c	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a5e	          0x4189d0	                            mov r8d, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a61	          0x41d1e8	                              shr r8d, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a64	          0x4439c0	                            cmp eax, r8d	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a67	            0x7206	                            jb 0x4000a6f	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a69	          0x4429c0	                            sub eax, r8d	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a6c	          0x448811	                    mov byte [rcx], r10b	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a6f	          0xc1ea02	                              shr edx, 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a72	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a74	            0x7205	                            jb 0x4000a7b	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a76	          0x800102	                       add byte [rcx], 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a79	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a7b	            0xd1ea	                              shr edx, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a7d	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a7f	            0x7205	                            jb 0x4000a86	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a81	          0x800101	                       add byte [rcx], 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a84	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000a86	        0x4883c101	                              add rcx, 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4000a8a	          0x83ee01	                              sub esi, 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4000a8d	     0xf8401010000	                            je 0x4000b94	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4000a93	            0x85ed	                           test ebp, ebp	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000a95	            0x7991	                           jns 0x4000a28	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000a97	          0x4d39e5	                            cmp r13, r12	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x4000a9a	            0x7419	                            je 0x4000ab5	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x4000a9c	    0x410fb74424fe	               movzx eax, word [r12 - 2]	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000aa2	      0xbd01000000	                              mov ebp, 1	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000aa7	        0x4983ec02	                              sub r12, 2	      3703	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000aab	      0xba02000000	                              mov edx, 2	      3704	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000ab0	      0xe979ffffff	                           jmp 0x4000a2e	      3704	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000ab5	          0x443b0f	                    cmp r9d, dword [rdi]	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000ab8	     0xf8cd5010000	                            jl 0x4000c93	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000abe	          0x8d6eff	                      lea ebp, [rsi - 1]	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000ac1	          0x4889cf	                            mov rdi, rcx	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000ac4	      0xbe30000000	                           mov esi, 0x30	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000ac9	          0x4863ed	                         movsxd rbp, ebp	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000acc	        0x4883c501	                              add rbp, 1	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000ad0	          0x4889ea	                            mov rdx, rbp	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000ad3	      0xe800000000	                          call 0x4000ad8	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000ad8	          0x4889c1	                            mov rcx, rax	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000adb	          0x4801e9	                            add rcx, rbp	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000ade	            0x85db	                           test ebx, ebx	      3741	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000ae0	     0xf842afeffff	                            je 0x4000910	      3741	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000ae6	            0x85db	                           test ebx, ebx	      3746	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000ae8	          0xc60145	                    mov byte [rcx], 0x45	      3743	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000aeb	        0x488d4102	                      lea rax, [rcx + 2]	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000aef	     0xf883a010000	                            js 0x4000c2f	      3746	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000af5	        0xc641012b	                mov byte [rcx + 1], 0x2b	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000af9	      0xbe00000000	                              mov esi, 0	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000afe	    0x41ba00000000	                             mov r10d, 0	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000b04	          0x4889c1	                            mov rcx, rax	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000b07	          0x4531c0	                            xor r8d, r8d	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000b0a	            0xeb22	                           jmp 0x4000b2e	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000b0c	         0xf1f4000	                         nop dword [rax]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000b10	          0x83c201	                              add edx, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b13	            0x29c3	                            sub ebx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b15	            0x8811	                      mov byte [rcx], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b17	        0x4883c101	                              add rcx, 1	      3755	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000b1b	    0x41b801000000	                              mov r8d, 1	      3754	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000b21	        0x4883ee04	                              sub rsi, 4	      3754	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000b25	          0x4939f2	                            cmp r10, rsi	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000b28	     0xf84e2fdffff	                            je 0x4000910	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000b2e	          0xc60130	                    mov byte [rcx], 0x30	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b31	            0x8b3e	                    mov edi, dword [rsi]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b33	      0xba30000000	                           mov edx, 0x30	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b38	          0x8d043f	                    lea eax, [rdi + rdi]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b3b	            0x39d8	                            cmp eax, ebx	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b3d	            0x7335	                           jae 0x4000b74	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b3f	    0x8d04fd000000	                        lea eax, [rdi*8]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b46	      0xbf34000000	                           mov edi, 0x34	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b4b	            0x39d8	                            cmp eax, ebx	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b4d	            0x770f	                            ja 0x4000b5e	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b4f	            0x29c3	                            sub ebx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b51	          0xc60138	                    mov byte [rcx], 0x38	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b54	      0xbf3c000000	                           mov edi, 0x3c	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b59	      0xba38000000	                           mov edx, 0x38	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b5e	          0x4189c1	                            mov r9d, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b61	          0x41d1e9	                              shr r9d, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b64	          0x4439cb	                            cmp ebx, r9d	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b67	            0x7208	                            jb 0x4000b71	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b69	          0x4429cb	                            sub ebx, r9d	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b6c	          0x408839	                     mov byte [rcx], dil	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b6f	            0x89fa	                            mov edx, edi	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b71	          0xc1e802	                              shr eax, 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b74	            0x39c3	                            cmp ebx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b76	            0x7207	                            jb 0x4000b7f	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b78	          0x83c202	                              add edx, 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b7b	            0x29c3	                            sub ebx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b7d	            0x8811	                      mov byte [rcx], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b7f	            0xd1e8	                              shr eax, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b81	            0x39c3	                            cmp ebx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b83	            0x738b	                           jae 0x4000b10	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000b85	          0x4584c0	                           test r8b, r8b	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000b88	            0x758d	                           jne 0x4000b17	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000b8a	          0x80fa30	                            cmp dl, 0x30	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000b8d	            0x7588	                           jne 0x4000b17	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000b8f	          0x4531c0	                            xor r8d, r8d	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000b92	            0xeb8d	                           jmp 0x4000b21	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000b94	          0x44390f	                    cmp dword [rdi], r9d	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b97	     0xf8e41ffffff	                           jle 0x4000ade	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b9d	          0xc6012e	                    mov byte [rcx], 0x2e	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000ba0	        0x4883c101	                              add rcx, 1	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000ba4	            0x85ed	                           test ebp, ebp	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000ba6	            0x785d	                            js 0x4000c05	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000ba8	          0x4863d5	                         movsxd rdx, ebp	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000bab	          0x83ed01	                              sub ebp, 1	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000bae	    0x8b3495000000	                  mov esi, dword [rdx*4]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bb5	          0xc60130	                    mov byte [rcx], 0x30	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bb8	          0x8d1436	                    lea edx, [rsi + rsi]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bbb	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bbd	            0x762a	                           jbe 0x4000be9	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bbf	    0x8d14f5000000	                        lea edx, [rsi*8]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bc6	      0xbf34000000	                           mov edi, 0x34	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bcb	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bcd	            0x720a	                            jb 0x4000bd9	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bcf	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bd1	          0xc60138	                    mov byte [rcx], 0x38	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bd4	      0xbf3c000000	                           mov edi, 0x3c	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bd9	            0x89d6	                            mov esi, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bdb	            0xd1ee	                              shr esi, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bdd	            0x39f0	                            cmp eax, esi	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bdf	            0x7205	                            jb 0x4000be6	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000be1	            0x29f0	                            sub eax, esi	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000be3	          0x408839	                     mov byte [rcx], dil	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000be6	          0xc1ea02	                              shr edx, 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000be9	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000beb	            0x7205	                            jb 0x4000bf2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bed	          0x800102	                       add byte [rcx], 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bf0	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bf2	            0xd1ea	                              shr edx, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bf4	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bf6	            0x72a8	                            jb 0x4000ba0	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bf8	          0x800101	                       add byte [rcx], 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bfb	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000bfd	        0x4883c101	                              add rcx, 1	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000c01	            0x85ed	                           test ebp, ebp	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c03	            0x79a3	                           jns 0x4000ba8	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c05	          0x4d39ec	                            cmp r12, r13	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x4000c08	     0xf84d0feffff	                            je 0x4000ade	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x4000c0e	    0x410fb74424fe	               movzx eax, word [r12 - 2]	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c14	      0xbd01000000	                              mov ebp, 1	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c19	        0x4983ec02	                              sub r12, 2	      3714	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c1d	      0xba02000000	                              mov edx, 2	      3715	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c22	            0xeb8a	                           jmp 0x4000bae	      3715	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c24	    0x41b901000000	                              mov r9d, 1	      3670	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000c2a	      0xe9e9fdffff	                           jmp 0x4000a18	      3670	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000c2f	        0xc641012d	                mov byte [rcx + 1], 0x2d	      3747	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000c33	            0xf7db	                                 neg ebx	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000c35	      0xe9bffeffff	                           jmp 0x4000af9	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000c3a	        0xf6470870	               test byte [rdi + 8], 0x70	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000c3e	     0xf85d0fdffff	                           jne 0x4000a14	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000c44	          0x4585c9	                           test r9d, r9d	      3688	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000c47	            0x74db	                            je 0x4000c24	      3688	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000c49	          0x83c303	                              add ebx, 3	      3689	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000c4c	        0x4183e902	                              sub r9d, 2	      3690	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000c50	      0x410fb70424	                   movzx eax, word [r12]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000c55	      0xe93cfbffff	                           jmp 0x4000796	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000c5a	          0x4189d8	                            mov r8d, ebx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c5d	    0x41b956555555	                     mov r9d, 0x55555556	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c63	          0x41f7d8	                                 neg r8d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c66	          0x4489c0	                            mov eax, r8d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c69	          0x41f7e9	                                imul r9d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c6c	          0x4489c0	                            mov eax, r8d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c6f	          0x4589c1	                            mov r9d, r8d	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000c72	          0xc1f81f	                           sar eax, 0x1f	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c75	            0x29c2	                            sub edx, eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c77	          0x8d0452	                  lea eax, [rdx + rdx*2]	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000c7a	          0x4129c1	                            sub r9d, eax	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000c7d	     0xf847efdffff	                            je 0x4000a01	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000c83	      0xb803000000	                              mov eax, 3	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000c88	          0x4429c8	                            sub eax, r9d	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000c8b	          0x4189c1	                            mov r9d, eax	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000c8e	      0xe96efdffff	                           jmp 0x4000a01	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000c93	          0x4d89ec	                            mov r12, r13	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000c96	      0xe902ffffff	                           jmp 0x4000b9d	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
decNumberToString	SWITCH,0:functions,0:IF,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0	7
0x4004350	              0x53	                                push rbx	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x4004351	            0x31d2	                            xor edx, edx	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x4004353	          0x4889f3	                            mov rbx, rsi	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x4004356	      0xe895c3ffff	                    call sym.decToString	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x400435b	          0x4889d8	                            mov rax, rbx	       462	decNumber.c	FUNCTION_68	FUNCTION_5
0x400435e	              0x5b	                                 pop rbx	       462	decNumber.c	FUNCTION_68	FUNCTION_5
0x400435f	              0xc3	                                     ret	       462	decNumber.c	FUNCTION_68	FUNCTION_5
decExpOp	SWITCH,0:functions,0:IF,27:WHILE,0:CALL,42:FOR,2:DO,1:ELSE,3	473
0x400b580	            0x4157	                                push r15	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b582	            0x4156	                                push r14	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b584	            0x4155	                                push r13	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b586	            0x4154	                                push r12	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b588	          0x4989d5	                            mov r13, rdx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b58b	              0x55	                                push rbp	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b58c	              0x53	                                push rbx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b58d	          0x4989f4	                            mov r12, rsi	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b590	          0x4889fb	                            mov rbx, rdi	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b593	          0x4889cd	                            mov rbp, rcx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b596	    0x4881ece80100	                          sub rsp, 0x1e8	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b59d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5a6	    0x48898424d801	            mov qword [rsp + 0x1d8], rax	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5ae	            0x31c0	                            xor eax, eax	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5b0	         0xfb64608	               movzx eax, byte [rsi + 8]	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x400b5b4	    0xc74424380000	               mov dword [rsp + 0x38], 0	      5223	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5bc	            0xa870	                           test al, 0x70	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x400b5be	            0x7470	                            je 0x400b630	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x400b5c0	            0xa840	                           test al, 0x40	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x400b5c2	     0xf8488010000	                            je 0x400b750	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x400b5c8	            0x84c0	                             test al, al	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x400b5ca	     0xf88b0010000	                            js 0x400b780	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x400b5d0	      0xe800000000	                          call 0x400b5d5	      5266	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_9
0x400b5d5	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5de	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5e3	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5e6	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5ee	      0xe800000000	                          call 0x400b5f3	      5486	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5f3	        0x488b3c24	                    mov rdi, qword [rsp]	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5f7	      0xe800000000	                          call 0x400b5fc	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5fc	          0x4c89f7	                            mov rdi, r14	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b5ff	      0xe800000000	                          call 0x400b604	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b604	    0x488b8c24d801	           mov rcx, qword [rsp + 0x1d8] 	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b60c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b615	          0x4889d8	                            mov rax, rbx	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b618	     0xf85ef070000	                           jne 0x400be0d	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b61e	    0x4881c4e80100	                          add rsp, 0x1e8	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b625	              0x5b	                                 pop rbx	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b626	              0x5d	                                 pop rbp	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b627	            0x415c	                                 pop r12	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b629	            0x415d	                                 pop r13	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b62b	            0x415e	                                 pop r14	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b62d	            0x415f	                                 pop r15	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b62f	              0xc3	                                     ret	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b630	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x400b635	     0xf84cd000000	                            je 0x400b708	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x400b63b	    0x41be04000000	                             mov r14d, 4	      5291	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b641	            0x84c0	                             test al, al	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x400b643	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b64b	    0xc78424b00000	               mov dword [rsp + 0xb0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b656	    0x664489b424ba	             mov word [rsp + 0xba], r14w	      5291	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b65f	        0x418b5500	                    mov edx, dword [r13]	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b663	     0xf884f010000	                            js 0x400b7b8	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x400b669	            0xf7da	                                 neg edx	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b66b	    0x899424b40000	             mov dword [rsp + 0xb4], edx	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b672	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400b67a	      0xba01000000	                              mov edx, 1	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400b67f	          0x4c89e6	                            mov rsi, r12	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400b682	      0xe8d965ffff	                     call sym.decCompare	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400b687	      0x3d00000080	                     cmp eax, 0x80000000	      5295	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400b68c	     0xf843e010000	                            je 0x400b7d0	      5295	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400b692	            0x85c0	                           test eax, eax	      5298	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b694	     0xf885e010000	                            js 0x400b7f8	      5298	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b69a	        0x418b5500	                    mov edx, dword [r13]	      5299	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b69e	    0x41bb01000000	                             mov r11d, 1	      5301	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b6a4	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b6a8	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b6af	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b6b5	      0xb801000000	                              mov eax, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x400b6ba	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      5301	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b6bf	          0x83ea01	                              sub edx, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x400b6c2	          0x4189d4	                           mov r12d, edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x400b6c5	            0x740e	                            je 0x400b6d5	      6684	decNumber.c	FUNCTION_8	IF_1
0x400b6c7	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400b6cb	      0xbe01000000	                              mov esi, 1	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400b6d0	      0xe8cb55ffff	          call sym.decShiftToMost.part.0	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400b6d5	          0x4489e2	                           mov edx, r12d	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b6d8	            0x8903	                    mov dword [rbx], eax	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400b6da	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b6e3	            0xf7da	                                 neg edx	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b6e5	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b6ed	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b6f0	          0x895304	                mov dword [rbx + 4], edx	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b6f3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b6f8	    0x814d00200800	                   or dword [rbp], 0x820	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b6ff	      0xe9eafeffff	                           jmp 0x400b5ee	      5305	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b704	         0xf1f4000	                         nop dword [rax]	      5305	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400b708	          0x833e01	                      cmp dword [rsi], 1	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x400b70b	     0xf852affffff	                           jne 0x400b63b	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x400b711	    0x41bf01000000	                             mov r15d, 1	      5273	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x400b717	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b71b	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b722	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b728	      0x6644897f0a	              mov word [rdi + 0xa], r15w	      5273	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x400b72d	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b730	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b739	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b741	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b746	      0xe9a3feffff	                           jmp 0x400b5ee	      5274	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x400b74b	       0xf1f440000	                   nop dword [rax + rax]	      5274	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x400b750	          0x4989c8	                             mov r8, rcx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x400b753	          0x4889d1	                            mov rcx, rdx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x400b756	            0x31d2	                            xor edx, edx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x400b758	      0xe8e36effff	                 call sym.decNaNs.isra.6	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x400b75d	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b760	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b769	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b771	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b776	      0xe973feffff	                           jmp 0x400b5ee	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b77b	       0xf1f440000	                   nop dword [rax + rax]	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b780	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b782	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b786	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b78d	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b793	        0x6689470a	                mov word [rdi + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b797	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b79a	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7a3	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7ab	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7b0	      0xe939feffff	                           jmp 0x400b5ee	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7b5	           0xf1f00	                         nop dword [rax]	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7b8	            0xf7d2	                                 not edx	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x400b7ba	    0x899424b40000	             mov dword [rsp + 0xb4], edx	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x400b7c1	      0xe9acfeffff	                           jmp 0x400b672	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x400b7c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x400b7d0	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7d9	        0x834d0010	                    or dword [rbp], 0x10	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400b7dd	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7e0	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7e8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400b7ed	      0xe9fcfdffff	                           jmp 0x400b5ee	      5297	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400b7f2	    0x660f1f440000	                    nop word [rax + rax]	      5297	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400b7f8	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400b7fd	      0xbe40000000	                           mov esi, 0x40	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400b802	      0xe800000000	                          call 0x400b807	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400b807	        0x418b4504	                mov eax, dword [r13 + 4]	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b80b	      0x418b7c2404	                mov edi, dword [r12 + 4]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b810	      0xc644245800	                mov byte [rsp + 0x58], 0	      5313	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b815	        0x89442444	             mov dword [rsp + 0x44], eax	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b819	        0x418b4508	                mov eax, dword [r13 + 8]	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b81d	        0x89442448	             mov dword [rsp + 0x48], eax	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b821	        0x49630424	                 movsxd rax, dword [r12]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b825	          0x8d1407	                    lea edx, [rdi + rax]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b828	          0x83fa08	                              cmp edx, 8	      5323	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400b82b	     0xf8edf010000	                           jle 0x400ba10	      5323	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400b831	    0x41807c240800	                   cmp byte [r12 + 8], 0	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400b837	    0x41ba02000000	                             mov r10d, 2	      5328	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400b83d	    0xc68424680100	               mov byte [rsp + 0x168], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b845	    0xc78424640100	              mov dword [rsp + 0x164], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b850	    0xc78424600100	              mov dword [rsp + 0x160], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b85b	    0x66448994246a	            mov word [rsp + 0x16a], r10w	      5328	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400b864	     0xf886e050000	                            js 0x400bdd8	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400b86a	    0x488db4246001	                  lea rsi, [rsp + 0x160]	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b872	    0x4c8dbc241001	                  lea r15, [rsp + 0x110]	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b87a	      0xb80b000000	                            mov eax, 0xb	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b87f	    0x48c704240000	                      mov qword [rsp], 0	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b887	          0x4531f6	                          xor r14d, r14d	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b88a	    0x48c744240800	                  mov qword [rsp + 8], 0	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b893	      0x4889742418	             mov qword [rsp + 0x18], rsi	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b898	    0xc74424100800	               mov dword [rsp + 0x10], 8	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8a0	      0x4863542410	         movsxd rdx, dword [rsp + 0x10] 	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8a5	        0x89442440	             mov dword [rsp + 0x40], eax	      5456	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8a9	    0x41b901000000	                              mov r9d, 1	      5461	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x400b8af	      0xb801000000	                              mov eax, 1	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400b8b4	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b8b9	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b8c1	      0x664189470a	                mov word [r15 + 0xa], ax	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400b8c6	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b8cd	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8d2	          0x8b4500	                    mov eax, dword [rbp]	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8d5	          0x4c89fb	                            mov rbx, r15	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8d8	    0x448b24950000	                 mov r12d, dword [rdx*4]	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8e0	          0x4589cf	                           mov r15d, r9d	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8e3	            0x31d2	                            xor edx, edx	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8e5	            0xeb0d	                           jmp 0x400b8f4	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8e7	    0x660f1f840000	                    nop word [rax + rax]	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400b8f0	        0x4183c701	                             add r15d, 1	      5461	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x400b8f4	          0xf6c422	                           test ah, 0x22	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x400b8f7	            0x7417	                            je 0x400b910	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x400b8f9	          0xf6c402	                              test ah, 2	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b8fc	            0x7562	                           jne 0x400b960	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b8fe	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b903	            0x750b	                           jne 0x400b910	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b905	          0x833b01	                      cmp dword [rbx], 1	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b908	     0xf84c2000000	                            je 0x400b9d0	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b90e	            0x6690	                                     nop	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b910	          0x4501e4	                          add r12d, r12d	      5466	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x400b913	            0x782b	                            js 0x400b940	      5466	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x400b915	        0x4183ff1f	                          cmp r15d, 0x1f	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b919	            0x7445	                            je 0x400b960	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b91b	            0x85d2	                           test edx, edx	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x400b91d	            0x74d1	                            je 0x400b8f0	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x400b91f	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b924	          0x4889da	                            mov rdx, rbx	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b927	          0x4989e8	                             mov r8, rbp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b92a	          0x4889de	                            mov rsi, rbx	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b92d	          0x4889df	                            mov rdi, rbx	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b930	      0xe8ab7cffff	                  call sym.decMultiplyOp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b935	          0x8b4500	                    mov eax, dword [rbp]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b938	      0xba01000000	                              mov edx, 1	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b93d	            0xebb1	                           jmp 0x400b8f0	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b93f	              0x90	                                     nop	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x400b940	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400b945	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400b94a	          0x4989e8	                             mov r8, rbp	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400b94d	          0x4889de	                            mov rsi, rbx	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400b950	          0x4889df	                            mov rdi, rbx	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400b953	      0xe8887cffff	                  call sym.decMultiplyOp	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x400b958	        0x4183ff1f	                          cmp r15d, 0x1f	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b95c	            0x75c1	                           jne 0x400b91f	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b95e	            0x6690	                                     nop	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b960	          0x4989df	                            mov r15, rbx	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b963	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b968	      0x410fb7470a	            movzx eax, word [r15 + 0xa] 	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b96d	      0x410fb67708	               movzx esi, byte [r15 + 8]	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b972	        0x418b5704	                mov edx, dword [r15 + 4]	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b976	          0x418b0f	                    mov ecx, dword [r15]	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400b979	          0x6685c0	                             test ax, ax	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400b97c	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      5479	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b984	            0x7505	                           jne 0x400b98b	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400b986	          0x83f901	                              cmp ecx, 1	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400b989	            0x7467	                            je 0x400b9f2	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400b98b	        0x418b4500	                    mov eax, dword [r13]	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b98f	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400b994	        0x40887308	                 mov byte [rbx + 8], sil	      6839	decNumber.c	FUNCTION_11
0x400b998	          0x895304	                mov dword [rbx + 4], edx	      6840	decNumber.c	FUNCTION_11
0x400b99b	      0x488d742440	                   lea rsi, [rsp + 0x40]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400b9a0	        0x498d570a	                    lea rdx, [r15 + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400b9a4	          0x4989e9	                             mov r9, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400b9a7	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400b9aa	        0x89442440	             mov dword [rsp + 0x40], eax	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9ae	      0xe8ed59ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400b9b3	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9b8	          0x4889df	                            mov rdi, rbx	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9bb	          0x4889e9	                            mov rcx, rbp	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9be	          0x4c89ee	                            mov rsi, r13	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9c1	      0xe82a73ffff	                    call sym.decFinalize	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9c6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9cb	      0xe91efcffff	                           jmp 0x400b5ee	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9d0	         0xfb67308	               movzx esi, byte [rbx + 8]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b9d4	        0x40f6c670	                          test sil, 0x70	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b9d8	     0xf8532ffffff	                           jne 0x400b910	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b9de	          0x4989df	                            mov r15, rbx	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b9e1	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400b9e6	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      5479	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9ee	        0x418b5704	                mov edx, dword [r15 + 4]	      5479	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400b9f2	        0x40f6c670	                          test sil, 0x70	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400b9f6	      0xb901000000	                              mov ecx, 1	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400b9fb	            0x758e	                           jne 0x400b98b	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400b9fd	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400ba05	            0xeb84	                           jmp 0x400b98b	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400ba07	    0x660f1f840000	                    nop word [rax + rax]	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400ba10	            0x31f6	                            xor esi, esi	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400ba12	      0xb908000000	                              mov ecx, 8	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400ba17	          0x83f808	                              cmp eax, 8	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400ba1a	        0x400f9fc6	                                setg sil	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400ba1e	            0x29d1	                            sub ecx, edx	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400ba20	          0x4189c6	                           mov r14d, eax	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400ba23	            0x39ce	                            cmp esi, ecx	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400ba25	           0xf4ece	                         cmovle ecx, esi	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400ba28	          0x41f7de	                                neg r14d	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400ba2b	          0x4129ce	                           sub r14d, ecx	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400ba2e	             0x1ca	                            add edx, ecx	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400ba30	        0x89542410	             mov dword [rsp + 0x10], edx	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400ba34	     0xf888e030000	                            js 0x400bdc8	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400ba3a	          0x4139fe	                           cmp r14d, edi	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400ba3d	     0xf8442030000	                            je 0x400bd85	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400ba43	          0x83f831	                           cmp eax, 0x31	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400ba46	     0xf8f1d030000	                            jg 0x400bd69	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400ba4c	     0xfb680000000	                   movzx eax, byte [rax]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400ba53	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400ba57	          0x83f83c	                           cmp eax, 0x3c	      5356	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400ba5a	     0xf86ee020000	                           jbe 0x400bd4e	      5356	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400ba60	            0x89c7	                            mov edi, eax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400ba62	      0xe800000000	                          call 0x400ba67	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400ba67	          0x4885c0	                           test rax, rax	      5358	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400ba6a	      0x4889442408	                mov qword [rsp + 8], rax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400ba6f	      0x4889442418	             mov qword [rsp + 0x18], rax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400ba74	     0xf847c030000	                            je 0x400bdf6	      5358	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400ba7a	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400ba7f	          0x4c89e6	                            mov rsi, r12	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400ba82	          0x4c89ff	                            mov rdi, r15	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400ba85	      0xe800000000	                          call 0x400ba8a	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400ba8a	          0x418b07	                    mov eax, dword [r15]	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400ba8d	        0x45897704	               mov dword [r15 + 4], r14d	      5364	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400ba91	        0x41394500	                    cmp dword [r13], eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400ba95	      0x410f4d4500	                 cmovge eax, dword [r13]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400ba9a	         0x3442410	             add eax, dword [rsp + 0x10]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400ba9e	        0x89442428	             mov dword [rsp + 0x28], eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400baa2	          0x83c002	                              add eax, 2	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400baa5	          0x8d0c00	                    lea ecx, [rax + rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400baa8	        0x89442420	             mov dword [rsp + 0x20], eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400baac	          0x83f931	                           cmp ecx, 0x31	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400baaf	     0xf8f33020000	                            jg 0x400bce8	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bab5	          0x4863c1	                         movsxd rax, ecx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bab8	     0xfb680000000	                   movzx eax, byte [rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400babf	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bac3	          0x83f878	                           cmp eax, 0x78	      5388	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400bac6	    0x4c8dbc246001	                  lea r15, [rsp + 0x160]	      5249	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bace	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bad6	     0xf87bc020000	                            ja 0x400bd98	      5388	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400badc	      0x837c24202f	           cmp dword [rsp + 0x20], 0x2f 	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bae1	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bae5	     0xf8f35020000	                            jg 0x400bd20	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400baeb	          0x83c004	                              add eax, 4	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400baee	            0x4898	                                    cdqe	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400baf0	     0xfb680000000	                   movzx eax, byte [rax]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400baf7	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bafb	          0x83f848	                           cmp eax, 0x48	      5400	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400bafe	     0xf8604020000	                           jbe 0x400bd08	      5400	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400bb04	            0x89c7	                            mov edi, eax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400bb06	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400bb0a	      0xe800000000	                          call 0x400bb0f	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400bb0f	          0x4885c0	                           test rax, rax	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400bb12	          0x4989c6	                            mov r14, rax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400bb15	          0x4989c4	                            mov r12, rax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400bb18	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400bb1c	     0xf84c6020000	                            je 0x400bde8	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400bb22	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400bb27	          0x4c89e7	                            mov rdi, r12	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400bb2a	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400bb2e	      0xe800000000	                          call 0x400bb33	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x400bb33	      0xbf01000000	                              mov edi, 1	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x400bb38	    0x41b802000000	                              mov r8d, 2	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x400bb3e	    0x41b901000000	                              mov r9d, 1	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x400bb44	      0x6641897f0a	                mov word [r15 + 0xa], di	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x400bb49	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x400bb4e	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bb53	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bb5b	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bb62	      0xbe40000000	                           mov esi, 0x40	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x400bb67	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bb6f	    0xc78424b40000	               mov dword [rsp + 0xb4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bb7a	    0xc78424b00000	               mov dword [rsp + 0xb0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bb85	    0x6644898424ba	              mov word [rsp + 0xba], r8w	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x400bb8e	    0xc68424a80000	                mov byte [rsp + 0xa8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bb96	    0xc78424a40000	               mov dword [rsp + 0xa4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bba1	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bbac	    0x6644898c24aa	              mov word [rsp + 0xaa], r9w	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x400bbb5	      0xe800000000	                          call 0x400bbba	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x400bbba	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbbf	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbc3	    0x488984248000	             mov qword [rsp + 0x80], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbcb	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbd0	        0x894c2440	             mov dword [rsp + 0x40], ecx	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbd4	    0xc74424680136	     mov dword [rsp + 0x68], 0xc4653601 	      5420	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbdc	    0x488984248800	             mov qword [rsp + 0x88], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbe4	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbe9	    0x488984249000	             mov qword [rsp + 0x90], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbf1	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbf5	    0x898424980000	             mov dword [rsp + 0x98], eax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bbfc	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      5419	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bc00	      0x4c89742420	             mov qword [rsp + 0x20], r14	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc05	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc0a	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc0f	        0x89442460	             mov dword [rsp + 0x60], eax	      5419	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400bc13	            0x89c3	                            mov ebx, eax	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc15	      0xe92e000000	                           jmp 0x400bc48	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc1a	    0x660f1f440000	                    nop word [rax + rax]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc20	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc28	      0x4c8d4c2438	                    lea r9, [rsp + 0x38]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc2d	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc35	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc3d	          0x4531c0	                            xor r8d, r8d	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc40	          0x4889f7	                            mov rdi, rsi	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc43	      0xe808d4ffff	                       call sym.decAddOp	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400bc48	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400bc4d	          0x4989e9	                             mov r9, rbp	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400bc50	          0x4531c0	                            xor r8d, r8d	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400bc53	          0x4c89e2	                            mov rdx, r12	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400bc56	          0x4c89fe	                            mov rsi, r15	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400bc59	          0x4c89ff	                            mov rdi, r15	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400bc5c	      0xe8efd3ffff	                       call sym.decAddOp	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x400bc61	      0x4c8d442438	                    lea r8, [rsp + 0x38]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400bc66	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400bc6b	          0x4c89f2	                            mov rdx, r14	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400bc6e	          0x4c89e6	                            mov rsi, r12	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400bc71	          0x4c89e7	                            mov rdi, r12	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400bc74	      0xe86779ffff	                  call sym.decMultiplyOp	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x400bc79	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400bc7e	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400bc86	      0x4c8d4c2438	                    lea r9, [rsp + 0x38]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400bc8b	          0x4c89e6	                            mov rsi, r12	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400bc8e	    0x41b880000000	                           mov r8d, 0x80	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400bc94	          0x4c89e7	                            mov rdi, r12	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400bc97	      0xe814e6ffff	                    call sym.decDivideOp	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400bc9c	          0x418b0f	                    mov ecx, dword [r15]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bc9f	        0x418b5704	                mov edx, dword [r15 + 4]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bca3	      0x418b442404	                mov eax, dword [r12 + 4]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bca8	        0x41030424	                    add eax, dword [r12]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bcac	          0x8d3411	                    lea esi, [rcx + rdx]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bcaf	             0x1d8	                            add eax, ebx	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bcb1	            0x39f0	                            cmp eax, esi	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bcb3	     0xf8d67ffffff	                           jge 0x400bc20	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bcb9	            0x39cb	                            cmp ebx, ecx	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bcbb	     0xf8f5fffffff	                            jg 0x400bc20	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400bcc1	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bcc5	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bcca	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bccf	            0x85f6	                           test esi, esi	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bcd1	            0x7567	                           jne 0x400bd3a	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bcd3	      0x410fb7470a	            movzx eax, word [r15 + 0xa] 	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bcd8	      0x410fb67708	               movzx esi, byte [r15 + 8]	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bcdd	      0xe997fcffff	                           jmp 0x400b979	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bce2	    0x660f1f440000	                    nop word [rax + rax]	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bce8	          0x8d7102	                      lea esi, [rcx + 2]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bceb	      0xba56555555	                     mov edx, 0x55555556	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bcf0	            0x89f0	                            mov eax, esi	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bcf2	          0xc1fe1f	                           sar esi, 0x1f	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bcf5	            0xf7ea	                                imul edx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bcf7	            0x29f2	                            sub edx, esi	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bcf9	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bcfd	      0xe9c1fdffff	                           jmp 0x400bac3	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bd02	    0x660f1f440000	                    nop word [rax + rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400bd08	    0x4c8da4241001	                  lea r12, [rsp + 0x110]	      5245	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bd10	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bd13	      0xe90afeffff	                           jmp 0x400bb22	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bd18	     0xf1f84000000	                   nop dword [rax + rax]	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bd20	          0x8d7006	                      lea esi, [rax + 6]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd23	      0xba56555555	                     mov edx, 0x55555556	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd28	            0x89f0	                            mov eax, esi	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd2a	          0xc1fe1f	                           sar esi, 0x1f	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd2d	            0xf7ea	                                imul edx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd2f	            0x29f2	                            sub edx, esi	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd31	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd35	      0xe9c1fdffff	                           jmp 0x400bafb	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd3a	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400bd3e	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bd43	          0x4d89e7	                            mov r15, r12	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bd46	          0x83c004	                              add eax, 4	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bd49	      0xe952fbffff	                           jmp 0x400b8a0	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400bd4e	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400bd56	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bd5f	      0x4889442418	             mov qword [rsp + 0x18], rax	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400bd64	      0xe911fdffff	                           jmp 0x400ba7a	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x400bd69	          0x8d4802	                      lea ecx, [rax + 2]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd6c	      0xba56555555	                     mov edx, 0x55555556	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd71	            0x89c8	                            mov eax, ecx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd73	            0xf7ea	                                imul edx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd75	            0x89c8	                            mov eax, ecx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd77	          0xc1f81f	                           sar eax, 0x1f	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd7a	            0x29c2	                            sub edx, eax	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd7c	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd80	      0xe9d2fcffff	                           jmp 0x400ba57	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd85	      0x4c89642418	             mov qword [rsp + 0x18], r12	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400bd8a	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bd93	      0xe9f9fcffff	                           jmp 0x400ba91	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bd98	            0x89c7	                            mov edi, eax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400bd9a	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400bd9e	      0xe800000000	                          call 0x400bda3	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400bda3	          0x4885c0	                           test rax, rax	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400bda6	        0x48890424	                    mov qword [rsp], rax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400bdaa	          0x4989c7	                            mov r15, rax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400bdad	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400bdb1	     0xf8525fdffff	                           jne 0x400badc	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400bdb7	        0x834d0010	                    or dword [rbp], 0x10	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400bdbb	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bdbe	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400bdc3	      0xe926f8ffff	                           jmp 0x400b5ee	      5392	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400bdc8	          0x4101d6	                           add r14d, edx	      5349	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400bdcb	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5350	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400bdd3	      0xe962fcffff	                           jmp 0x400ba3a	      5350	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400bdd8	    0xc78424640100	    mov dword [rsp + 0x164], 0xfffffffe 	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400bde3	      0xe982faffff	                           jmp 0x400b86a	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400bde8	        0x834d0010	                    or dword [rbp], 0x10	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400bdec	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400bdf1	      0xe9f8f7ffff	                           jmp 0x400b5ee	      5404	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400bdf6	        0x834d0010	                    or dword [rbp], 0x10	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400bdfa	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400be02	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400be05	          0x4889c7	                            mov rdi, rax	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400be08	      0xe9e1f7ffff	                           jmp 0x400b5ee	      5360	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400be0d	      0xe800000000	                          call 0x400be12	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
decNumberCopyNegate	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,2:FOR,0:DO,0:ELSE,0	176
0x4011dd0	          0x4839f7	                            cmp rdi, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4011dd3	     0xf843c020000	                            je 0x4012015	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4011dd9	      0x440fb64e08	               movzx r9d, byte [rsi + 8]	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4011dde	        0x44884f08	                 mov byte [rdi + 8], r9b	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4011de2	          0x8b4604	                mov eax, dword [rsi + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4011de5	          0x894704	                mov dword [rdi + 4], eax	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4011de8	            0x8b06	                    mov eax, dword [rsi]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4011dea	            0x8907	                    mov dword [rdi], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4011dec	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4011df0	        0x6689470a	                mov word [rdi + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4011df4	          0x486306	                 movsxd rax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4011df7	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4011dfa	     0xf8e1a020000	                           jle 0x401201a	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4011e00	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e03	        0x4c8d470c	                     lea r8, [rdi + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4011e07	        0x4c8d560a	                    lea r10, [rsi + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e0b	     0xf8e17020000	                           jle 0x4012028	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e11	          0x8d4802	                      lea ecx, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e14	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e19	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e1b	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e1d	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e1f	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e22	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e24	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e27	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e2a	        0x488d560c	                    lea rdx, [rsi + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e2e	          0x4901c2	                            add r10, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4011e31	          0x4939d2	                            cmp r10, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e34	     0xf86e0010000	                           jbe 0x401201a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e3a	        0x4c8d4e0e	                     lea r9, [rsi + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e3e	          0x4c89d0	                            mov rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e41	          0x4c29c8	                             sub rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e44	        0x4c8d5801	                      lea r11, [rax + 1]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e48	        0x488d471c	                   lea rax, [rdi + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e4c	          0x49d1eb	                              shr r11, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e4f	        0x4983c301	                              add r11, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e53	          0x4839c2	                            cmp rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e56	        0x488d461c	                   lea rax, [rsi + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e5a	           0xf93c1	                                setae cl	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e5d	          0x4939c0	                             cmp r8, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e60	           0xf93c0	                                setae al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e63	             0x8c1	                               or cl, al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e65	     0xf8495010000	                            je 0x4012000	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e6b	        0x4983fb0e	                            cmp r11, 0xe	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e6f	     0xf868b010000	                           jbe 0x4012000	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e75	          0x4889d0	                            mov rax, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e78	              0x55	                                push rbp	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e79	              0x53	                                push rbx	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e7a	          0x83e00f	                            and eax, 0xf	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e7d	          0x48d1e8	                              shr rax, 1	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e80	          0x48f7d8	                                 neg rax	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e83	          0x83e007	                              and eax, 7	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e86	          0x4c39d8	                            cmp rax, r11	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e89	        0x490f47c3	                          cmova rax, r11	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e8d	          0x4885c0	                           test rax, rax	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e90	     0xf84aa010000	                            je 0x4012040	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011e96	         0xfb74e0c	            movzx ecx, word [rsi + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e9a	        0x4883f801	                              cmp rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011e9e	        0x66894f0c	                mov word [rdi + 0xc], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ea2	        0x488d4f0e	                    lea rcx, [rdi + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ea6	            0x747e	                            je 0x4011f26	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ea8	         0xfb74e0e	            movzx ecx, word [rsi + 0xe] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011eac	        0x4883f802	                              cmp rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011eb0	        0x4c8d4e10	                    lea r9, [rsi + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011eb4	        0x66894f0e	                mov word [rdi + 0xe], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011eb8	        0x488d4f10	                   lea rcx, [rdi + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ebc	            0x7468	                            je 0x4011f26	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ebe	         0xfb74e10	           movzx ecx, word [rsi + 0x10] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ec2	        0x4883f803	                              cmp rax, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ec6	        0x4c8d4e12	                    lea r9, [rsi + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011eca	        0x66894f10	               mov word [rdi + 0x10], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ece	        0x488d4f12	                   lea rcx, [rdi + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ed2	            0x7452	                            je 0x4011f26	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ed4	         0xfb74e12	           movzx ecx, word [rsi + 0x12] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ed8	        0x4883f804	                              cmp rax, 4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011edc	        0x4c8d4e14	                    lea r9, [rsi + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ee0	        0x66894f12	               mov word [rdi + 0x12], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ee4	        0x488d4f14	                   lea rcx, [rdi + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ee8	            0x743c	                            je 0x4011f26	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011eea	         0xfb74e14	           movzx ecx, word [rsi + 0x14] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011eee	        0x4883f805	                              cmp rax, 5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ef2	        0x4c8d4e16	                    lea r9, [rsi + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011ef6	        0x66894f14	               mov word [rdi + 0x14], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011efa	        0x488d4f16	                   lea rcx, [rdi + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011efe	            0x7426	                            je 0x4011f26	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f00	         0xfb74e16	           movzx ecx, word [rsi + 0x16] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f04	        0x4883f807	                              cmp rax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f08	        0x4c8d4e18	                    lea r9, [rsi + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f0c	        0x66894f16	               mov word [rdi + 0x16], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f10	        0x488d4f18	                   lea rcx, [rdi + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f14	            0x7510	                           jne 0x4011f26	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f16	         0xfb74e18	           movzx ecx, word [rsi + 0x18] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f1a	        0x4c8d4e1a	                    lea r9, [rsi + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f1e	        0x66894f18	               mov word [rdi + 0x18], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f22	        0x488d4f1a	                   lea rcx, [rdi + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f26	          0x4929c3	                            sub r11, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f29	          0x4801c0	                            add rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f2c	            0x31ed	                            xor ebp, ebp	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f2e	        0x498d73f8	                      lea rsi, [r11 - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f32	          0x4801c2	                            add rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f35	          0x4c01c0	                             add rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f38	          0x4531c0	                            xor r8d, r8d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f3b	        0x48c1ee03	                              shr rsi, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f3f	        0x4883c601	                              add rsi, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f43	    0x488d1cf50000	                        lea rbx, [rsi*8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f4b	    0x66420f6f0402	         movdqa xmm0, xmmword [rdx + r8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f51	        0x4883c501	                              add rbp, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f55	      0x420f110400	         movups xmmword [rax + r8], xmm0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f5a	        0x4983c010	                            add r8, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f5e	          0x4839ee	                            cmp rsi, rbp	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f61	            0x77e8	                            ja 0x4011f4b	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f63	        0x488d041b	                    lea rax, [rbx + rbx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f67	          0x4901c1	                             add r9, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f6a	          0x4801c8	                            add rax, rcx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f6d	          0x4939db	                            cmp r11, rbx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f70	            0x7473	                            je 0x4011fe5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f72	        0x410fb711	                    movzx edx, word [r9]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f76	          0x668910	                      mov word [rax], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f79	        0x498d5102	                       lea rdx, [r9 + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f7d	          0x4939d2	                            cmp r10, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f80	            0x7663	                           jbe 0x4011fe5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f82	      0x410fb75102	                movzx edx, word [r9 + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f87	        0x66895002	                  mov word [rax + 2], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f8b	        0x498d5104	                       lea rdx, [r9 + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f8f	          0x4939d2	                            cmp r10, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f92	            0x7651	                           jbe 0x4011fe5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f94	      0x410fb75104	                movzx edx, word [r9 + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f99	        0x66895004	                  mov word [rax + 4], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011f9d	        0x498d5106	                       lea rdx, [r9 + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fa1	          0x4939d2	                            cmp r10, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fa4	            0x763f	                           jbe 0x4011fe5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fa6	      0x410fb75106	                movzx edx, word [r9 + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fab	        0x66895006	                  mov word [rax + 6], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011faf	        0x498d5108	                       lea rdx, [r9 + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fb3	          0x4939d2	                            cmp r10, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fb6	            0x762d	                           jbe 0x4011fe5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fb8	      0x410fb75108	                movzx edx, word [r9 + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fbd	        0x66895008	                  mov word [rax + 8], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fc1	        0x498d510a	                     lea rdx, [r9 + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fc5	          0x4939d2	                            cmp r10, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fc8	            0x761b	                           jbe 0x4011fe5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fca	      0x410fb7510a	              movzx edx, word [r9 + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fcf	        0x6689500a	                mov word [rax + 0xa], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fd3	        0x498d510c	                     lea rdx, [r9 + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fd7	          0x4939d2	                            cmp r10, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fda	            0x7609	                           jbe 0x4011fe5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fdc	      0x410fb7510c	              movzx edx, word [r9 + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fe1	        0x6689500c	                mov word [rax + 0xc], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fe5	      0x440fb64f08	               movzx r9d, byte [rdi + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4011fea	              0x5b	                                 pop rbx	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011feb	              0x5d	                                 pop rbp	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011fec	        0x418d4180	                    lea eax, [r9 - 0x80]	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011ff0	          0x884708	                  mov byte [rdi + 8], al	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011ff3	          0x4889f8	                            mov rax, rdi	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011ff6	              0xc3	                                     ret	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4011ff7	    0x660f1f840000	                    nop word [rax + rax]	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4012000	           0xfb702	                   movzx eax, word [rdx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4012003	        0x4883c202	                              add rdx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4012007	        0x4983c002	                               add r8, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x401200b	      0x66418940fe	                   mov word [r8 - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4012010	          0x4939d2	                            cmp r10, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4012013	            0x77eb	                            ja 0x4012000	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4012015	      0x440fb64f08	               movzx r9d, byte [rdi + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x401201a	        0x418d4180	                    lea eax, [r9 - 0x80]	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x401201e	          0x884708	                  mov byte [rdi + 8], al	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4012021	          0x4889f8	                            mov rax, rdi	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4012024	              0xc3	                                     ret	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4012025	           0xf1f00	                         nop dword [rax]	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4012028	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x401202f	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4012032	      0xe9f3fdffff	                           jmp 0x4011e2a	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4012037	    0x660f1f840000	                    nop word [rax + rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4012040	          0x4c89c1	                             mov rcx, r8	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4012043	          0x4989d1	                             mov r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4012046	      0xe9dbfeffff	                           jmp 0x4011f26	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
decNumberFromString	SWITCH,0:functions,0:IF,47:WHILE,0:CALL,15:FOR,8:DO,1:ELSE,4	422
0x4004380	            0x4157	                                push r15	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004382	            0x4156	                                push r14	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004384	          0x4531ff	                          xor r15d, r15d	       497	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004387	            0x4155	                                push r13	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004389	            0x4154	                                push r12	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x400438b	          0x4989d5	                            mov r13, rdx	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x400438e	              0x55	                                push rbp	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x400438f	              0x53	                                push rbx	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004390	          0x4989fc	                            mov r12, rdi	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004393	          0x4889f3	                            mov rbx, rsi	       507	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004396	            0x31ed	                            xor ebp, ebp	       500	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004398	            0x31ff	                            xor edi, edi	       498	decNumber.c	FUNCTION_68	FUNCTION_7
0x400439a	        0x4883ec58	                           sub rsp, 0x58	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x400439e	          0x4531c0	                            xor r8d, r8d	       492	decNumber.c	FUNCTION_68	FUNCTION_7
0x40043a1	    0x64488b042528	                mov rax, qword fs:[0x28]	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40043aa	      0x4889442448	             mov qword [rsp + 0x48], rax	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40043af	            0x31c0	                            xor eax, eax	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40043b1	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       507	decNumber.c	FUNCTION_68	FUNCTION_7
0x40043b9	          0x4889f0	                            mov rax, rsi	       507	decNumber.c	FUNCTION_68	FUNCTION_7
0x40043bc	           0xfb610	                   movzx edx, byte [rax]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40043bf	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40043c2	          0x80f909	                               cmp cl, 9	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40043c5	     0xf86e5000000	                           jbe 0x40044b0	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40043cb	          0x4885ff	                           test rdi, rdi	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x40043ce	            0x7509	                           jne 0x40043d9	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x40043d0	          0x80fa2e	                            cmp dl, 0x2e	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x40043d3	     0xf8417020000	                            je 0x40045f0	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x40043d9	          0x4839f0	                            cmp rax, rsi	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x40043dc	     0xf8546040000	                           jne 0x4004828	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x40043e2	          0x80fa2d	                            cmp dl, 0x2d	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40043e5	     0xf84f5010000	                            je 0x40045e0	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40043eb	          0x80fa2b	                            cmp dl, 0x2b	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x40043ee	     0xf840c020000	                            je 0x4004600	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x40043f4	          0x4885ed	                           test rbp, rbp	       538	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40043f7	     0xf8483010000	                            je 0x4004580	       538	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40043fd	            0x84d2	                             test dl, dl	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40043ff	     0xf85bb000000	                           jne 0x40044c0	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4004405	            0x31c9	                            xor ecx, ecx	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004407	          0x803b30	                    cmp byte [rbx], 0x30	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x400440a	     0xf84e0030000	                            je 0x40047f0	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x4004410	          0x4885ff	                           test rdi, rdi	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4004413	            0x740d	                            je 0x4004422	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4004415	          0x4839ef	                            cmp rdi, rbp	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4004418	            0x7308	                           jae 0x4004422	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400441a	          0x4889e8	                            mov rax, rbp	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400441d	          0x4829f8	                            sub rax, rdi	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4004420	            0x29c1	                            sub ecx, eax	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4004422	        0x453b7d00	                   cmp r15d, dword [r13]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4004426	     0xf8fe4010000	                            jg 0x4004610	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400442c	          0x4531f6	                          xor r14d, r14d	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x400442f	        0x4183ff31	                          cmp r15d, 0x31	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4004433	      0x498d74240a	                    lea rsi, [r12 + 0xa]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4004438	        0x458d4f02	                      lea r9d, [r15 + 2]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400443c	     0xf8f9e020000	                            jg 0x40046e0	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4004442	          0x4d63cf	                         movsxd r9, r15d	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4004445	    0x410fb6810000	                    movzx eax, byte [r9]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x400444d	      0x488d4400fe	                lea rax, [rax + rax - 2]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4004452	        0x4c8d0c06	                     lea r9, [rsi + rax]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4004456	          0x48d1f8	                              sar rax, 1	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004459	            0x31d2	                            xor edx, edx	       666	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x400445b	          0x48f7d8	                                 neg rax	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x400445e	          0x8d3c40	                  lea edi, [rax + rax*2]	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004461	          0x4401ff	                           add edi, r15d	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004464	            0xeb0e	                           jmp 0x4004474	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004466	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004470	        0x4883c301	                              add rbx, 1	       669	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4004474	           0xfbe03	                   movsx eax, byte [rbx]	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x4004477	            0x3c2e	                            cmp al, 0x2e	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x4004479	            0x74f5	                            je 0x4004470	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x400447b	    0x448d14d50000	                       lea r10d, [rdx*8]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4004483	          0x4839dd	                            cmp rbp, rbx	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x4004486	        0x418d1452	                  lea edx, [r10 + rdx*2]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x400448a	        0x8d5402d0	             lea edx, [rdx + rax - 0x30]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x400448e	     0xf847c020000	                            je 0x4004710	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x4004494	          0x83ef01	                              sub edi, 1	       673	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4004497	            0x85ff	                           test edi, edi	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x4004499	            0x7fd5	                            jg 0x4004470	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x400449b	        0x66418911	                       mov word [r9], dx	       675	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x400449f	      0xbf03000000	                              mov edi, 3	       677	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40044a4	        0x4983e902	                               sub r9, 2	       676	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40044a8	            0x31d2	                            xor edx, edx	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40044aa	            0xebc4	                           jmp 0x4004470	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40044ac	         0xf1f4000	                         nop dword [rax]	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40044b0	        0x4183c701	                             add r15d, 1	       518	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40044b4	          0x4889c5	                            mov rbp, rax	       519	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40044b7	        0x4883c001	                              add rax, 1	       515	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x40044bb	      0xe9fcfeffff	                           jmp 0x40043bc	       536	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x40044c0	          0x83e2df	                     and edx, 0xffffffdf	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40044c3	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       595	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40044cb	          0x80fa45	                            cmp dl, 0x45	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40044ce	     0xf85c4000000	                           jne 0x4004598	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40044d4	         0xfb64601	               movzx eax, byte [rsi + 1]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40044d8	            0x3c2d	                            cmp al, 0x2d	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40044da	     0xf8413020000	                            je 0x40046f3	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40044e0	            0x3c2b	                            cmp al, 0x2b	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40044e2	     0xf84b9030000	                            je 0x40048a1	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40044e8	        0x4c8d4e01	                       lea r9, [rsi + 1]	       600	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40044ec	          0x4531db	                          xor r11d, r11d	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40044ef	            0x84c0	                             test al, al	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x40044f1	     0xf84a1000000	                            je 0x4004598	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x40044f7	            0x3c30	                            cmp al, 0x30	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40044f9	            0x7417	                            je 0x4004512	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40044fb	      0xe9c3030000	                           jmp 0x40048c3	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4004500	        0x4983c101	                               add r9, 1	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4004504	        0x410fb631	                    movzx esi, byte [r9]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4004508	        0x4080fe30	                           cmp sil, 0x30	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400450c	     0xf8578030000	                           jne 0x400488a	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4004512	      0x4180790100	                    cmp byte [r9 + 1], 0	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4004517	            0x75e7	                           jne 0x4004500	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4004519	      0xbe30000000	                           mov esi, 0x30	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400451e	        0x400fbec6	                          movsx eax, sil	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4004522	          0x4d89ca	                             mov r10, r9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4004525	            0x31c9	                            xor ecx, ecx	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4004527	    0x660f1f840000	                    nop word [rax + rax]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4004530	    0x8d14cd000000	                        lea edx, [rcx*8]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4004537	        0x4983c201	                              add r10, 1	       607	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5
0x400453b	          0x8d144a	                  lea edx, [rdx + rcx*2]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x400453e	        0x8d4c02d0	             lea ecx, [rdx + rax - 0x30]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4004542	        0x410fbe02	                   movsx eax, byte [r10]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4004546	          0x8d50d0	                   lea edx, [rax - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4004549	          0x80fa09	                               cmp dl, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400454c	            0x76e2	                           jbe 0x4004530	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400454e	            0x84c0	                             test al, al	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x4004550	            0x7546	                           jne 0x4004598	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x4004552	        0x4983c10a	                             add r9, 0xa	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x4004556	          0x4d39d1	                             cmp r9, r10	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x4004559	            0x770d	                            ja 0x4004568	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x400455b	            0x7206	                            jb 0x4004563	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x400455d	        0x4080fe31	                           cmp sil, 0x31	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4004561	            0x7e05	                           jle 0x4004568	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4004563	      0xb9fe933577	                     mov ecx, 0x773593fe	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4004568	            0x89c8	                            mov eax, ecx	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x400456a	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       622	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4004572	            0xf7d8	                                 neg eax	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x4004574	          0x4584db	                         test r11b, r11b	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x4004577	           0xf45c8	                         cmovne ecx, eax	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x400457a	      0xe988feffff	                           jmp 0x4004407	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x400457f	              0x90	                                     nop	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x4004580	          0x4885ff	                           test rdi, rdi	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4004583	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       539	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400458b	            0x750b	                           jne 0x4004598	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x400458d	            0x84d2	                             test dl, dl	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x400458f	     0xf859b020000	                           jne 0x4004830	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4004595	           0xf1f00	                         nop dword [rax]	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4004598	      0xbb01000000	                              mov ebx, 1	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x400459d	          0xf6c3dd	                           test bl, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40045a0	     0xf85f2010000	                           jne 0x4004798	      7736	decNumber.c	FUNCTION_24	IF_1
0x40045a6	            0x89de	                            mov esi, ebx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40045a8	          0x4c89ef	                            mov rdi, r13	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40045ab	      0xe800000000	                          call 0x40045b0	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40045b0	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045b5	    0x644833342528	                xor rsi, qword fs:[0x28]	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045be	          0x4c89e0	                            mov rax, r12	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045c1	     0xf8521040000	                           jne 0x40049e8	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045c7	        0x4883c458	                           add rsp, 0x58	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045cb	              0x5b	                                 pop rbx	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045cc	              0x5d	                                 pop rbp	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045cd	            0x415c	                                 pop r12	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045cf	            0x415d	                                 pop r13	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045d1	            0x415e	                                 pop r14	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045d3	            0x415f	                                 pop r15	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045d5	              0xc3	                                     ret	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40045e0	        0x4883c301	                              add rbx, 1	       527	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40045e4	    0x41b880ffffff	                     mov r8d, 0xffffff80	       528	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40045ea	      0xe9c8feffff	                           jmp 0x40044b7	       529	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40045ef	              0x90	                                     nop	       529	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40045f0	          0x4839c3	                            cmp rbx, rax	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x40045f3	          0x4889c7	                            mov rdi, rax	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x40045f6	     0xf85bbfeffff	                           jne 0x40044b7	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x40045fc	         0xf1f4000	                         nop dword [rax]	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x4004600	        0x4883c301	                              add rbx, 1	       531	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4004604	      0xe9aefeffff	                           jmp 0x40044b7	       532	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4004609	     0xf1f80000000	                         nop dword [rax]	       532	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4004610	        0x4183ff31	                          cmp r15d, 0x31	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004614	            0x7f5a	                            jg 0x4004670	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004616	          0x4d63cf	                         movsxd r9, r15d	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004619	          0x4531f6	                          xor r14d, r14d	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x400461c	      0x488d742420	                   lea rsi, [rsp + 0x20]	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x4004621	    0x410fb6910000	                    movzx edx, byte [r9]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004629	          0x4889d0	                            mov rax, rdx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400462c	             0x1d2	                            add edx, edx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400462e	          0x83fa1e	                           cmp edx, 0x1e	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4004631	     0xf8616feffff	                           jbe 0x400444d	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4004637	          0x4863fa	                         movsxd rdi, edx	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400463a	      0x4c894c2408	                 mov qword [rsp + 8], r9	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400463f	        0x894c2404	                mov dword [rsp + 4], ecx	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4004643	      0x4488442403	                 mov byte [rsp + 3], r8b	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4004648	      0xe800000000	                          call 0x400464d	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400464d	          0x4885c0	                           test rax, rax	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x4004650	          0x4989c6	                            mov r14, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4004653	     0xf8458020000	                            je 0x40048b1	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x4004659	          0x4889c6	                            mov rsi, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400465c	    0x440fb6442403	               movzx r8d, byte [rsp + 3]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4004662	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4004666	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400466b	      0xe9d5fdffff	                           jmp 0x4004445	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4004670	        0x458d4f02	                      lea r9d, [r15 + 2]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004674	      0xba56555555	                     mov edx, 0x55555556	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004679	          0x4489c8	                            mov eax, r9d	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400467c	            0xf7ea	                                imul edx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400467e	          0x4489c8	                            mov eax, r9d	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004681	          0xc1f81f	                           sar eax, 0x1f	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004684	            0x29c2	                            sub edx, eax	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004686	          0x8d0412	                    lea eax, [rdx + rdx]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4004689	          0x83f81e	                           cmp eax, 0x1e	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400468c	            0x7f15	                            jg 0x40046a3	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400468e	      0x488d742420	                   lea rsi, [rsp + 0x20]	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x4004693	          0x4531f6	                          xor r14d, r14d	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004696	          0x4863d2	                         movsxd rdx, edx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4004699	      0x488d4412fe	                lea rax, [rdx + rdx - 2]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x400469e	      0xe9affdffff	                           jmp 0x4004452	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40046a3	          0x4863f8	                         movsxd rdi, eax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046a6	      0x44894c2408	                mov dword [rsp + 8], r9d	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046ab	        0x894c2404	                mov dword [rsp + 4], ecx	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046af	      0x4488442403	                 mov byte [rsp + 3], r8b	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046b4	      0xe800000000	                          call 0x40046b9	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046b9	          0x4885c0	                           test rax, rax	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40046bc	          0x4989c6	                            mov r14, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046bf	     0xf84ec010000	                            je 0x40048b1	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40046c5	    0x440fb6442403	               movzx r8d, byte [rsp + 3]	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40046cb	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40046cf	          0x4889c6	                            mov rsi, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046d2	      0x448b4c2408	                mov r9d, dword [rsp + 8]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046d7	    0x660f1f840000	                    nop word [rax + rax]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046e0	          0x4489c8	                            mov eax, r9d	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046e3	      0xba56555555	                     mov edx, 0x55555556	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046e8	        0x41c1f91f	                           sar r9d, 0x1f	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046ec	            0xf7ea	                                imul edx	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046ee	          0x4429ca	                            sub edx, r9d	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046f1	            0xeba3	                           jmp 0x4004696	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40046f3	        0x4c8d4e02	                       lea r9, [rsi + 2]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40046f7	         0xfb64602	               movzx eax, byte [rsi + 2]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40046fb	    0x41bb01000000	                             mov r11d, 1	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4004701	      0xe9e9fdffff	                           jmp 0x40044ef	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4004706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4004710	        0x66418911	                       mov word [r9], dx	       680	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004714	      0x4588442408	                 mov byte [r12 + 8], r8b	       692	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004719	        0x418b5500	                    mov edx, dword [r13]	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x400471d	      0x41894c2404	                mov dword [r12 + 4], ecx	       693	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004722	        0x45893c24	                   mov dword [r12], r15d	       694	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4004726	          0x4139d7	                           cmp r15d, edx	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4004729	     0xf8f91000000	                            jg 0x40047c0	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x400472f	        0x418b4508	                mov eax, dword [r13 + 8]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4004733	          0x4429f8	                           sub eax, r15d	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4004736	            0x39c1	                            cmp ecx, eax	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4004738	            0x7e0d	                           jle 0x4004747	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400473a	        0x418b4504	                mov eax, dword [r13 + 4]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400473e	          0x83e901	                              sub ecx, 1	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4004741	            0x29d0	                            sub eax, edx	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4004743	            0x39c1	                            cmp ecx, eax	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4004745	            0x7e1d	                           jle 0x4004764	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4004747	    0xc74424180000	               mov dword [rsp + 0x18], 0	       707	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400474f	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4004754	      0x488d542418	                   lea rdx, [rsp + 0x18]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4004759	          0x4c89ee	                            mov rsi, r13	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x400475c	          0x4c89e7	                            mov rdi, r12	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x400475f	      0xe88ce5ffff	                    call sym.decFinalize	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4004764	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4004768	          0x4c89f7	                            mov rdi, r14	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x400476b	      0xe800000000	                          call 0x4004770	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x4004770	            0x85db	                           test ebx, ebx	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4004772	     0xf8438feffff	                            je 0x40045b0	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4004778	          0xf6c3dd	                           test bl, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400477b	     0xf8425feffff	                            je 0x40045a6	      7736	decNumber.c	FUNCTION_24	IF_1
0x4004781	    0xf7c300000040	                    test ebx, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4004787	            0x740f	                            je 0x4004798	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4004789	    0x81e3ffffffbf	                     and ebx, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400478f	      0xe912feffff	                           jmp 0x40045a6	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4004794	         0xf1f4000	                         nop dword [rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4004798	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400479a	    0x41c744240400	                  mov dword [r12 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40047a3	    0x41c704240100	                      mov dword [r12], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40047ab	    0x66418944240a	                mov word [r12 + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40047b1	    0x41c644240820	                mov byte [r12 + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40047b7	      0xe9eafdffff	                           jmp 0x40045a6	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40047bc	         0xf1f4000	                         nop dword [rax]	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40047c0	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047c5	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047ca	          0x4889f2	                            mov rdx, rsi	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047cd	          0x4489f9	                           mov ecx, r15d	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047d0	          0x4c89ee	                            mov rsi, r13	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047d3	          0x4c89e7	                            mov rdi, r12	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047d6	    0xc74424180000	               mov dword [rsp + 0x18], 0	       698	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x40047de	      0xe8bdcbffff	             call sym.decSetCoeff.isra.3	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047e3	      0xe967ffffff	                           jmp 0x400474f	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047e8	     0xf1f84000000	                   nop dword [rax + rax]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x40047f0	          0x4839eb	                            cmp rbx, rbp	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40047f3	     0xf8317fcffff	                           jae 0x4004410	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40047f9	     0xf1f80000000	                         nop dword [rax]	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4004800	           0xfb603	                   movzx eax, byte [rbx]	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x4004803	            0x3c2e	                            cmp al, 0x2e	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x4004805	            0x740c	                            je 0x4004813	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x4004807	            0x3c30	                            cmp al, 0x30	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x4004809	     0xf8501fcffff	                           jne 0x4004410	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x400480f	        0x4183ef01	                             sub r15d, 1	       633	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4004813	        0x4883c301	                              add rbx, 1	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4004817	          0x4839dd	                            cmp rbp, rbx	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x400481a	            0x75e4	                           jne 0x4004800	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x400481c	      0xe9effbffff	                           jmp 0x4004410	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4004821	     0xf1f80000000	                         nop dword [rax]	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4004828	          0x4889c6	                            mov rsi, rax	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x400482b	      0xe9c4fbffff	                           jmp 0x40043f4	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4004830	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004832	    0x41c644240800	                   mov byte [r12 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004838	    0x41c744240400	                  mov dword [r12 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004841	    0x66418954240a	                mov word [r12 + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004847	    0x41c704240100	                      mov dword [r12], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400484f	          0x4889f1	                            mov rcx, rsi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004852	    0x41b900000000	                              mov r9d, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004858	      0xba00000000	                              mov edx, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400485d	            0xeb0d	                           jmp 0x400486c	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400485f	              0x90	                                     nop	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004860	        0x4883c101	                              add rcx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4004864	        0x4883c201	                              add rdx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4004868	        0x4983c101	                               add r9, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x400486c	           0xfb601	                   movzx eax, byte [rcx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400486f	            0x3a02	                      cmp al, byte [rdx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4004871	            0x7405	                            je 0x4004878	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4004873	          0x413a01	                       cmp al, byte [r9]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4004876	            0x755e	                           jne 0x40048d6	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4004878	            0x84c0	                             test al, al	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400487a	            0x75e4	                           jne 0x4004860	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400487c	        0x4183c840	                            or r8d, 0x40	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4004880	      0x4588442408	                 mov byte [r12 + 8], r8b	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4004885	      0xe926fdffff	                           jmp 0x40045b0	       552	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x400488a	          0x8d46d0	                   lea eax, [rsi - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400488d	            0x3c09	                               cmp al, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400488f	     0xf8689fcffff	                           jbe 0x400451e	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4004895	            0x89f0	                            mov eax, esi	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4004897	          0x4d89ca	                             mov r10, r9	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400489a	            0x31c9	                            xor ecx, ecx	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400489c	      0xe9adfcffff	                           jmp 0x400454e	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40048a1	        0x4c8d4e02	                       lea r9, [rsi + 2]	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40048a5	         0xfb64602	               movzx eax, byte [rsi + 2]	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40048a9	          0x4531db	                          xor r11d, r11d	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40048ac	      0xe93efcffff	                           jmp 0x40044ef	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40048b1	    0xc744241c1000	           mov dword [rsp + 0x1c], 0x10 	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40048b9	      0xbb10000000	                           mov ebx, 0x10	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40048be	      0xe9dafcffff	                           jmp 0x400459d	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40048c3	          0x8d50d0	                   lea edx, [rax - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40048c6	          0x80fa09	                               cmp dl, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40048c9	     0xf87c9fcffff	                            ja 0x4004598	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40048cf	            0x89c6	                            mov esi, eax	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40048d1	      0xe948fcffff	                           jmp 0x400451e	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40048d6	          0x4889f1	                            mov rcx, rsi	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40048d9	    0x41b900000000	                              mov r9d, 0	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40048df	      0xba00000000	                              mov edx, 0	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40048e4	            0xeb16	                           jmp 0x40048fc	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40048e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40048f0	        0x4883c101	                              add rcx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x40048f4	        0x4883c201	                              add rdx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x40048f8	        0x4983c101	                               add r9, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x40048fc	           0xfb601	                   movzx eax, byte [rcx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40048ff	            0x3a02	                      cmp al, byte [rdx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4004901	            0x7405	                            je 0x4004908	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4004903	          0x413a01	                       cmp al, byte [r9]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4004906	            0x7509	                           jne 0x4004911	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4004908	            0x84c0	                             test al, al	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400490a	            0x75e4	                           jne 0x40048f0	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400490c	      0xe96bffffff	                           jmp 0x400487c	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x4004911	          0x4489c0	                            mov eax, r8d	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4004914	          0x83c820	                            or eax, 0x20	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4004917	      0x4188442408	                  mov byte [r12 + 8], al	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400491c	           0xfb606	                   movzx eax, byte [rsi]	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400491f	          0x83e0df	                     and eax, 0xffffffdf	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4004922	            0x3c53	                            cmp al, 0x53	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4004924	            0x7513	                           jne 0x4004939	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4004926	        0x4183c810	                            or r8d, 0x10	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400492a	        0x4883c601	                              add rsi, 1	       558	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400492e	      0x4588442408	                 mov byte [r12 + 8], r8b	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4004933	           0xfb606	                   movzx eax, byte [rsi]	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4004936	          0x83e0df	                     and eax, 0xffffffdf	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4004939	            0x3c4e	                            cmp al, 0x4e	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x400493b	     0xf8557fcffff	                           jne 0x4004598	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4004941	         0xfb64601	               movzx eax, byte [rsi + 1]	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4004945	          0x83e0df	                     and eax, 0xffffffdf	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4004948	            0x3c41	                            cmp al, 0x41	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x400494a	     0xf8548fcffff	                           jne 0x4004598	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4004950	         0xfb64602	               movzx eax, byte [rsi + 2]	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4004954	          0x83e0df	                     and eax, 0xffffffdf	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4004957	            0x3c4e	                            cmp al, 0x4e	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4004959	     0xf8539fcffff	                           jne 0x4004598	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400495f	         0xfb64603	               movzx eax, byte [rsi + 3]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4004963	        0x488d5e03	                      lea rbx, [rsi + 3]	       566	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4004967	            0x3c30	                            cmp al, 0x30	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4004969	            0x750b	                           jne 0x4004976	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x400496b	        0x4883c301	                              add rbx, 1	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x400496f	           0xfb603	                   movzx eax, byte [rbx]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4004972	            0x3c30	                            cmp al, 0x30	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4004974	            0x74f5	                            je 0x400496b	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4004976	            0x84c0	                             test al, al	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x4004978	     0xf8432fcffff	                            je 0x40045b0	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x400497e	           0xfb603	                   movzx eax, byte [rbx]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4004981	          0x8d50d0	                   lea edx, [rax - 0x30]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4004984	          0x80fa09	                               cmp dl, 9	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4004987	            0x771e	                            ja 0x40049a7	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4004989	          0x4889dd	                            mov rbp, rbx	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400498c	            0xeb05	                           jmp 0x4004993	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400498e	            0x6690	                                     nop	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4004990	          0x4889cd	                            mov rbp, rcx	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4004993	         0xfb64501	               movzx eax, byte [rbp + 1]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4004997	        0x4183c701	                             add r15d, 1	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x400499b	        0x488d4d01	                      lea rcx, [rbp + 1]	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x400499f	          0x8d50d0	                   lea edx, [rax - 0x30]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40049a2	          0x80fa09	                               cmp dl, 9	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40049a5	            0x76e9	                           jbe 0x4004990	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x40049a7	            0x84c0	                             test al, al	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x40049a9	     0xf85e9fbffff	                           jne 0x4004598	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x40049af	        0x418b4500	                    mov eax, dword [r13]	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40049b3	          0x4439f8	                           cmp eax, r15d	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40049b6	            0x7f14	                            jg 0x40049cc	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40049b8	      0x41807d1800	                cmp byte [r13 + 0x18], 0	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40049bd	     0xf85d5fbffff	                           jne 0x4004598	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40049c3	          0x4439f8	                           cmp eax, r15d	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40049c6	     0xf8cccfbffff	                            jl 0x4004598	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40049cc	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       587	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40049d4	    0x450fb6442408	               movzx r8d, byte [r12 + 8]	       588	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40049da	            0x31c9	                            xor ecx, ecx	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40049dc	      0xe926faffff	                           jmp 0x4004407	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40049e1	     0xf1f80000000	                         nop dword [rax]	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40049e8	      0xe800000000	                          call 0x40049ed	       717	decNumber.c	FUNCTION_68	FUNCTION_7
decNumberMax	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	140
0x4005d50	            0x4155	                                push r13	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d52	            0x4154	                                push r12	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d54	          0x4989cc	                            mov r12, rcx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d57	              0x55	                                push rbp	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d58	              0x53	                                push rbx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d59	          0x4989d5	                            mov r13, rdx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d5c	          0x4889fb	                            mov rbx, rdi	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d5f	          0x4889f5	                            mov rbp, rsi	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d62	        0x4883ec18	                           sub rsp, 0x18	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d66	         0xfb64a08	               movzx ecx, byte [rdx + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x4005d6a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d73	      0x4889442408	                mov qword [rsp + 8], rax	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d78	            0x31c0	                            xor eax, eax	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d7a	         0xfb64608	               movzx eax, byte [rsi + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x4005d7e	    0xc70424000000	                      mov dword [rsp], 0	      1539	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005d85	            0x89c2	                            mov edx, eax	      6044	decNumber.c	FUNCTION_2	DO_1
0x4005d87	             0x9ca	                             or edx, ecx	      6044	decNumber.c	FUNCTION_2	DO_1
0x4005d89	          0xf6c230	                           test dl, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4005d8c	            0x7562	                           jne 0x4005df0	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4005d8e	            0x31d2	                            xor edx, edx	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4005d90	          0x4c89ee	                            mov rsi, r13	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4005d93	          0x4889ef	                            mov rdi, rbp	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4005d96	      0xe8c5beffff	                     call sym.decCompare	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4005d9b	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005da0	     0xf84aa000000	                            je 0x4005e50	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005da6	          0x83f800	                              cmp eax, 0	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005da9	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005db1	     0xf85e9000000	                           jne 0x4005ea0	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005db7	         0xfb64d08	               movzx ecx, byte [rbp + 8]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005dbb	      0x410fb64508	               movzx eax, byte [r13 + 8]	      6113	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005dc0	            0x89ca	                            mov edx, ecx	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005dc2	            0x89c6	                            mov esi, eax	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4005dc4	          0x83e280	                     and edx, 0xffffff80	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005dc7	          0x83e680	                     and esi, 0xffffff80	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4005dca	          0x4038f2	                             cmp dl, sil	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4005dcd	     0xf844d010000	                            je 0x4005f20	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4005dd3	            0x84d2	                             test dl, dl	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x4005dd5	     0xf8435010000	                            je 0x4005f10	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x4005ddb	        0x418b5504	                mov edx, dword [r13 + 4]	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x4005ddf	          0x4c89ed	                            mov rbp, r13	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005de2	      0xe9c6000000	                           jmp 0x4005ead	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005de7	    0x660f1f840000	                    nop word [rax + rax]	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005df0	          0x83e210	                           and edx, 0x10	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x4005df3	            0x7443	                            je 0x4005e38	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x4005df5	          0x4889ee	                            mov rsi, rbp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4005df8	          0x4989e0	                             mov r8, rsp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4005dfb	          0x4c89e1	                            mov rcx, r12	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4005dfe	          0x4c89ea	                            mov rdx, r13	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4005e01	          0x4889df	                            mov rdi, rbx	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4005e04	      0xe837c8ffff	                 call sym.decNaNs.isra.6	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4005e09	          0x8b3424	                    mov esi, dword [rsp]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4005e0c	            0x85f6	                           test esi, esi	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4005e0e	            0x7549	                           jne 0x4005e59	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4005e10	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e15	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e1e	          0x4889d8	                            mov rax, rbx	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e21	     0xf8534010000	                           jne 0x4005f5b	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e27	        0x4883c418	                           add rsp, 0x18	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e2b	              0x5b	                                 pop rbx	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e2c	              0x5d	                                 pop rbp	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e2d	            0x415c	                                 pop r12	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e2f	            0x415d	                                 pop r13	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e31	              0xc3	                                     ret	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e32	    0x660f1f440000	                    nop word [rax + rax]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4005e38	            0xa830	                           test al, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4005e3a	            0x7554	                           jne 0x4005e90	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4005e3c	            0xa820	                           test al, 0x20	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x4005e3e	     0xf84bc000000	                            je 0x4005f00	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x4005e44	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005e4c	            0x89c8	                            mov eax, ecx	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005e4e	            0xeb8b	                           jmp 0x4005ddb	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005e50	          0x8b3424	                    mov esi, dword [rsp]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005e53	          0x83ce10	                            or esi, 0x10	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005e56	          0x893424	                    mov dword [rsp], esi	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005e59	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4005e5d	            0x7423	                            je 0x4005e82	      7736	decNumber.c	FUNCTION_24	IF_1
0x4005e5f	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005e65	     0xf8585000000	                           jne 0x4005ef0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005e6b	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005e6d	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005e74	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005e7a	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005e7e	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4005e82	          0x4c89e7	                            mov rdi, r12	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005e85	      0xe800000000	                          call 0x4005e8a	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005e8a	            0xeb84	                           jmp 0x4005e10	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005e8c	         0xf1f4000	                         nop dword [rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005e90	          0xf6c130	                           test cl, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4005e93	     0xf855cffffff	                           jne 0x4005df5	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4005e99	            0xeba1	                           jmp 0x4005e3c	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4005e9b	       0xf1f440000	                   nop dword [rax + rax]	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4005ea0	     0xf8e9a000000	                           jle 0x4005f40	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ea6	         0xfb64508	               movzx eax, byte [rbp + 8]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005eaa	          0x8b5504	                mov edx, dword [rbp + 4]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ead	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x4005eb0	          0x8b4d00	                    mov ecx, dword [rbp]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4005eb3	      0x4c8d442404	                       lea r8, [rsp + 4]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4005eb8	          0x895304	                mov dword [rbx + 4], edx	      6840	decNumber.c	FUNCTION_11
0x4005ebb	        0x488d550a	                    lea rdx, [rbp + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4005ebf	          0x4989e1	                             mov r9, rsp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4005ec2	          0x4c89e6	                            mov rsi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4005ec5	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4005ec8	      0xe8d3b4ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4005ecd	      0x488d542404	                      lea rdx, [rsp + 4]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ed2	          0x4c89e6	                            mov rsi, r12	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ed5	          0x4889e1	                            mov rcx, rsp	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ed8	          0x4889df	                            mov rdi, rbx	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005edb	      0xe810ceffff	                    call sym.decFinalize	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ee0	          0x8b3424	                    mov esi, dword [rsp]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ee3	      0xe924ffffff	                           jmp 0x4005e0c	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ee8	     0xf1f84000000	                   nop dword [rax + rax]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005ef0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005ef6	            0xeb8a	                           jmp 0x4005e82	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005ef8	     0xf1f84000000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005f00	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005f08	            0xeba0	                           jmp 0x4005eaa	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005f0a	    0x660f1f440000	                    nop word [rax + rax]	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005f10	          0x8b5504	                mov edx, dword [rbp + 4]	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005f13	            0x89c8	                            mov eax, ecx	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005f15	            0xeb96	                           jmp 0x4005ead	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005f17	    0x660f1f840000	                    nop word [rax + rax]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005f20	            0x84d2	                             test dl, dl	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4005f22	        0x418b7504	                mov esi, dword [r13 + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4005f26	          0x8b5504	                mov edx, dword [rbp + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4005f29	            0x7425	                            je 0x4005f50	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4005f2b	            0x39f2	                            cmp edx, esi	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4005f2d	            0x7ce4	                            jl 0x4005f13	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4005f2f	            0x89f2	                            mov edx, esi	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f31	          0x4c89ed	                            mov rbp, r13	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f34	      0xe974ffffff	                           jmp 0x4005ead	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f39	     0xf1f80000000	                         nop dword [rax]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f40	      0x410fb64d08	               movzx ecx, byte [r13 + 8]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f45	            0x89c8	                            mov eax, ecx	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f47	      0xe98ffeffff	                           jmp 0x4005ddb	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f4c	         0xf1f4000	                         nop dword [rax]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f50	            0x39f2	                            cmp edx, esi	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f52	            0x7edb	                           jle 0x4005f2f	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4005f54	            0x89c8	                            mov eax, ecx	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005f56	      0xe952ffffff	                           jmp 0x4005ead	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005f5b	      0xe800000000	                call sym.decNumberMaxMag	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
decDivideOp	SWITCH,0:functions,0:IF,78:WHILE,0:CALL,50:FOR,13:DO,1:ELSE,15	985
0x400a2b0	            0x4157	                                push r15	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2b2	            0x4156	                                push r14	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2b4	            0x4155	                                push r13	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2b6	            0x4154	                                push r12	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2b8	              0x55	                                push rbp	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2b9	              0x53	                                push rbx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2ba	          0x4889d3	                            mov rbx, rdx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2bd	    0x4881ec180100	                          sub rsp, 0x118	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2c4	         0xfb64608	               movzx eax, byte [rsi + 8]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a2c8	      0x4889542470	             mov qword [rsp + 0x70], rdx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2cd	         0xfb65208	               movzx edx, byte [rdx + 8]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a2d1	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2d6	      0x48897c2440	             mov qword [rsp + 0x40], rdi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2db	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2e4	    0x4889bc240801	            mov qword [rsp + 0x108], rdi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2ec	            0x31ff	                            xor edi, edi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2ee	            0x89c1	                            mov ecx, eax	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a2f0	      0x4889742460	             mov qword [rsp + 0x60], rsi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2f5	      0x4489442468	             mov dword [rsp + 0x68], r8d	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a2fa	            0x31d1	                            xor ecx, edx	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a2fc	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a301	          0x83e180	                     and ecx, 0xffffff80	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a304	    0x888c24830000	               mov byte [rsp + 0x83], cl	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a30b	            0x89c1	                            mov ecx, eax	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x400a30d	             0x9d1	                             or ecx, edx	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x400a30f	          0xf6c170	                           test cl, 0x70	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x400a312	            0x7462	                            je 0x400a376	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x400a314	          0x83e130	                           and ecx, 0x30	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x400a317	     0xf8557060000	                           jne 0x400a974	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x400a31d	            0xa840	                           test al, 0x40	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x400a31f	     0xf840a050000	                            je 0x400a82f	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x400a325	          0x83e240	                           and edx, 0x40	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x400a328	     0xf85a2040000	                           jne 0x400a7d0	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x400a32e	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x400a333	     0xf8597040000	                           jne 0x400a7d0	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x400a339	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a33e	            0x31f6	                            xor esi, esi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a340	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a347	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a34d	        0x6689730a	                mov word [rbx + 0xa], si	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a351	     0xfb684248300	           movzx eax, byte [rsp + 0x83] 	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400a359	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a362	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a36b	          0x83c840	                            or eax, 0x40	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400a36e	          0x884308	                  mov byte [rbx + 8], al	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400a371	      0xe977040000	                           jmp 0x400a7ed	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400a376	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x400a37b	            0x7509	                           jne 0x400a386	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x400a37d	          0x833b01	                      cmp dword [rbx], 1	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x400a380	     0xf84a2060000	                            je 0x400aa28	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x400a386	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400a38b	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400a390	          0x448b2b	                   mov r13d, dword [rbx]	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400a393	     0xf84d2030000	                            je 0x400a76b	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400a399	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a39e	          0x8b5b04	                mov ebx, dword [rbx + 4]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a3a1	          0x4c6327	                 movsxd r12, dword [rdi]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a3a4	          0x8b4f04	                mov ecx, dword [rdi + 4]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a3a7	        0x428d342b	                    lea esi, [rbx + r13]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a3ab	        0x895c2408	                mov dword [rsp + 8], ebx	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a3af	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a3b3	        0x428d1421	                    lea edx, [rcx + r12]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a3b7	            0x29d6	                            sub esi, edx	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x400a3b9	        0x89742428	             mov dword [rsp + 0x28], esi	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x400a3bd	            0x791c	                           jns 0x400a3db	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x400a3bf	        0x8b5c2468	            mov ebx, dword [rsp + 0x68] 	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x400a3c3	          0x80fb80	                            cmp bl, 0x80	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x400a3c6	            0x7413	                            je 0x400a3db	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x400a3c8	          0x83e320	                           and ebx, 0x20	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x400a3cb	     0xf8567050000	                           jne 0x400a938	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x400a3d1	        0x394c2408	                cmp dword [rsp + 8], ecx	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x400a3d5	     0xf8ec5050000	                           jle 0x400a9a0	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x400a3db	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a3e0	            0x8b00	                    mov eax, dword [rax]	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a3e2	          0x83f82e	                           cmp eax, 0x2e	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a3e5	        0x8944246c	             mov dword [rsp + 0x6c], eax	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a3e9	     0xf8f22050000	                            jg 0x400a911	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a3ef	          0x83c003	                              add eax, 3	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a3f2	            0x4898	                                    cdqe	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a3f4	     0xfb680000000	                   movzx eax, byte [rax]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a3fb	            0x4898	                                    cdqe	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400a3fd	    0x488d9c24a000	                   lea rbx, [rsp + 0xa0]	      4219	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a405	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a40e	          0x4801c0	                            add rax, rax	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400a411	        0x4883f822	                           cmp rax, 0x22	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400a415	      0x4889442430	             mov qword [rsp + 0x30], rax	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400a41a	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      4219	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a41f	     0xf87630a0000	                            ja 0x400ae88	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400a425	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a429	      0x428d4420ff	                lea eax, [rax + r12 - 1]	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a42e	          0x4439e8	                           cmp eax, r13d	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a431	        0x410f4cc5	                         cmovl eax, r13d	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a435	          0x83f831	                           cmp eax, 0x31	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a438	     0xf8fb7040000	                            jg 0x400a8f5	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a43e	            0x4898	                                    cdqe	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a440	    0x440fb6980000	                  movzx r11d, byte [rax]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a448	        0x458d7302	                     lea r14d, [r11 + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a44c	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x400a450	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a459	    0x488dac24d000	                   lea rbp, [rsp + 0xd0]	      4227	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a461	            0x3c80	                            cmp al, 0x80	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x400a463	    0x8884248d0000	               mov byte [rsp + 0x8d], al	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x400a46a	        0x4183d600	                             adc r14d, 0	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x400a46e	        0x418d5e01	                      lea ebx, [r14 + 1]	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400a472	          0x4863db	                         movsxd rbx, ebx	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400a475	          0x4801db	                            add rbx, rbx	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400a478	        0x4883fb32	                           cmp rbx, 0x32	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400a47c	     0xf87da090000	                            ja 0x400ae5c	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400a482	          0x4963c6	                        movsxd rax, r14d	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a485	        0x4183fd31	                          cmp r13d, 0x31	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a489	      0x488d5c1dfc	                lea rbx, [rbp + rbx - 4]	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a48e	      0x4889442438	             mov qword [rsp + 0x38], rax	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a493	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a498	        0x488d700a	                    lea rsi, [rax + 0xa]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a49c	     0xf8f27040000	                            jg 0x400a8c9	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a4a2	          0x4963c5	                        movsxd rax, r13d	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a4a5	     0xfb680000000	                   movzx eax, byte [rax]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a4ac	      0x488d4400fe	                lea rax, [rax + rax - 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a4b1	          0x4801c6	                            add rsi, rax	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4b4	     0xf8233040000	                            jb 0x400a8ed	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4ba	          0x4989c0	                             mov r8, rax	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4bd	        0x488d700c	                    lea rsi, [rax + 0xc]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4c1	          0x4963fe	                        movsxd rdi, r14d	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4c4	          0x49d1e8	                               shr r8, 1	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4c7	      0x488d7c7d00	                  lea rdi, [rbp + rdi*2]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4cc	        0x4d8d7801	                       lea r15, [r8 + 1]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4d0	        0x4b8d143f	                    lea rdx, [r15 + r15]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4d4	          0x4829d6	                            sub rsi, rdx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4d7	      0x4803742460	             add rsi, qword [rsp + 0x60]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4dc	          0x4829d7	                            sub rdi, rdx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4df	      0xe800000000	                          call 0x400a4e4	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4e4	          0x4d89f8	                             mov r8, r15	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4e7	          0x49f7d8	                                  neg r8	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4ea	        0x4a8d0443	                   lea rax, [rbx + r8*2]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a4ee	          0x4839c5	                            cmp rbp, rax	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a4f1	            0x771c	                            ja 0x400a50f	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a4f3	          0x4889c2	                            mov rdx, rax	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a4f6	            0x31f6	                            xor esi, esi	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a4f8	          0x4829ea	                            sub rdx, rbp	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a4fb	          0x48d1ea	                              shr rdx, 1	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a4fe	      0x488d541202	                lea rdx, [rdx + rdx + 2]	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a503	          0x4829d0	                            sub rax, rdx	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a506	        0x488d7802	                      lea rdi, [rax + 2]	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a50a	      0xe800000000	                          call 0x400a50f	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x400a50f	        0x4183fc31	                          cmp r12d, 0x31	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a513	     0xf8f90030000	                            jg 0x400a8a9	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a519	    0x410fb6842400	                   movzx eax, byte [r12]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a522	        0x8944240c	              mov dword [rsp + 0xc], eax	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a526	            0x89c7	                            mov edi, eax	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a528	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a52d	          0x83ff01	                              cmp edi, 1	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x400a530	        0x4c8d780a	                    lea r15, [rax + 0xa]	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a534	          0x4863c7	                         movsxd rax, edi	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a537	      0x498d4447fe	              lea rax, [r15 + rax*2 - 2]	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a53c	           0xfb730	                   movzx esi, word [rax]	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a53f	          0x4889c1	                            mov rcx, rax	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a542	      0x4889442418	             mov qword [rsp + 0x18], rax	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a547	          0x4189f0	                            mov r8d, esi	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a54a	     0xf8e89080000	                           jle 0x400add9	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x400a550	          0x8d4601	                      lea eax, [rsi + 1]	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x400a553	         0xfb751fe	               movzx edx, word [rcx - 2]	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x400a557	        0x89442420	             mov dword [rsp + 0x20], eax	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x400a55b	    0x69c6e8030000	                    imul eax, esi, 0x3e8	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a561	             0x1d0	                            add eax, edx	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x400a563	          0x83ff02	                              cmp edi, 2	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x400a566	            0x89c1	                            mov ecx, eax	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x400a568	           0xf95c0	                                setne al	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x400a56b	           0xfb6c0	                           movzx eax, al	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x400a56e	            0x89cf	                            mov edi, ecx	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x400a570	             0x1c7	                            add edi, eax	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x400a572	        0x897c2424	             mov dword [rsp + 0x24], edi	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x400a576	           0xfb73b	                   movzx edi, word [rbx]	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a579	    0x393d00000000	            cmp dword [0x0400a57f], edi 	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a57f	            0x89f8	                            mov eax, edi	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a581	            0x7718	                            ja 0x400a59b	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a583	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a587	      0xba00000000	                              mov edx, 0	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a58c	        0x4883c204	                              add rdx, 4	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a590	          0x83e901	                              sub ecx, 1	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a593	            0x393a	                    cmp dword [rdx], edi	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a595	            0x76f5	                           jbe 0x400a58c	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a597	        0x894c2428	             mov dword [rsp + 0x28], ecx	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x400a59b	    0x393500000000	            cmp dword [0x0400a5a1], esi 	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5a1	            0x7718	                            ja 0x400a5bb	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5a3	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5a7	      0xba00000000	                              mov edx, 0	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5ac	        0x4883c204	                              add rdx, 4	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5b0	          0x83c101	                              add ecx, 1	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5b3	            0x3932	                    cmp dword [rdx], esi	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5b5	            0x76f5	                           jbe 0x400a5ac	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5b7	        0x894c2428	             mov dword [rsp + 0x28], ecx	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400a5bb	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x400a5c0	     0xf88dd070000	                            js 0x400ada3	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x400a5c6	        0x4183fd31	                          cmp r13d, 0x31	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5ca	     0xf8e59030000	                           jle 0x400a929	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5d0	        0x418d4d02	                      lea ecx, [r13 + 2]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5d4	      0xba56555555	                     mov edx, 0x55555556	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5d9	            0x89c8	                            mov eax, ecx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5db	          0xc1f91f	                           sar ecx, 0x1f	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5de	            0xf7ea	                                imul edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5e0	            0x89d0	                            mov eax, edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5e2	            0x29c8	                            sub eax, ecx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5e4	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400a5e9	          0x4489f7	                           mov edi, r14d	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5ec	            0x29c7	                            sub edi, eax	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5ee	        0x448d247f	                 lea r12d, [rdi + rdi*2]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a5f2	          0x4585ed	                         test r13d, r13d	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400a5f5	     0xf8847090000	                            js 0x400af42	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400a5fb	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a5ff	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a603	      0xba56555555	                     mov edx, 0x55555556	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a608	            0xf7ea	                                imul edx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a60a	            0x89f8	                            mov eax, edi	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a60c	          0xc1f81f	                           sar eax, 0x1f	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a60f	            0x29c2	                            sub edx, eax	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a611	          0x8d0452	                  lea eax, [rdx + rdx*2]	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a614	            0x29f8	                            sub eax, edi	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a616	        0x448d6803	                     lea r13d, [rax + 3]	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a61a	          0x4489ea	                           mov edx, r13d	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a61d	          0x4489f6	                           mov esi, r14d	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a620	          0x4889ef	                            mov rdi, rbp	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a623	      0xe86868ffff	         call sym.decShiftToLeast.part.1	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400a628	          0x4529ec	                          sub r12d, r13d	      4483	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x400a62b	      0x44016c2428	            add dword [rsp + 0x28], r13d	      4482	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x400a630	        0x4183fd02	                             cmp r13d, 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a634	    0x4489a4248800	            mov dword [rsp + 0x88], r12d	      4483	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x400a63c	            0x7e2b	                           jle 0x400a669	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a63e	        0x4183ed03	                             sub r13d, 3	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a642	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a647	            0x31f6	                            xor esi, esi	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a649	          0x4489e8	                           mov eax, r13d	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a64c	            0xf7e2	                                 mul edx	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a64e	            0xd1ea	                              shr edx, 1	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a650	            0x89d0	                            mov eax, edx	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a652	      0x488d540002	                lea rdx, [rax + rax + 2]	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a657	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a65c	      0x488d7c4500	                  lea rdi, [rbp + rax*2]	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a661	          0x4829d7	                            sub rdi, rdx	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a664	      0xe800000000	                          call 0x400a669	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a669	           0xfb703	                   movzx eax, word [rbx]	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400a66c	      0x4489742408	               mov dword [rsp + 8], r14d	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a671	    0xc78424840000	               mov dword [rsp + 0x84], 0	      4245	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a67c	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a681	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a686	    0xc74424300000	               mov dword [rsp + 0x30], 0	      4499	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a68e	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      4498	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a696	      0x488d7c0ffe	                lea rdi, [rdi + rcx - 2]	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a69b	     0xfb68c248d00	           movzx ecx, byte [rsp + 0x8d] 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400a6a3	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a6a8	       0xfb67c2468	           movzx edi, byte [rsp + 0x68] 	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a6ad	          0x83e750	                           and edi, 0x50	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a6b0	    0x4088bc248e00	              mov byte [rsp + 0x8e], dil	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a6b8	            0x89cf	                            mov edi, ecx	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400a6ba	        0x40c0ef07	                              shr dil, 7	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400a6be	    0x4088bc248f00	              mov byte [rsp + 0x8f], dil	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400a6c6	            0x89cf	                            mov edi, ecx	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6c8	            0xf7d7	                                 not edi	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6ca	            0x89fa	                            mov edx, edi	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6cc	          0x4489f7	                           mov edi, r14d	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6cf	          0x4989ee	                            mov r14, rbp	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6d2	          0xc0ea07	                               shr dl, 7	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6d5	            0x89fd	                            mov ebp, edi	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6d7	    0x8894248d0000	               mov byte [rsp + 0x8d], dl	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6de	            0x6690	                                     nop	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6e0	        0x8b7c2408	                mov edi, dword [rsp + 8]	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6e4	        0x2b7c240c	              sub edi, dword [rsp + 0xc]	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400a6e8	          0x4531e4	                          xor r12d, r12d	      4502	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x400a6eb	          0x4863d7	                         movsxd rdx, edi	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a6ee	        0x897c2410	             mov dword [rsp + 0x10], edi	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a6f2	            0x89ef	                            mov edi, ebp	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a6f4	        0x4d8d2c56	                  lea r13, [r14 + rdx*2]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a6f8	          0x4c89f5	                            mov rbp, r14	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a6fb	          0x4189fe	                           mov r14d, edi	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a6fe	            0xeb10	                           jmp 0x400a710	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a700	          0x4839dd	                            cmp rbp, rbx	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400a703	            0x7310	                           jae 0x400a715	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400a705	        0x4183ee01	                             sub r14d, 1	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400a709	        0x4883eb02	                              sub rbx, 2	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400a70d	           0xfb703	                   movzx eax, word [rbx]	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400a710	          0x6685c0	                             test ax, ax	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400a713	            0x74eb	                            je 0x400a700	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400a715	      0x443b742408	               cmp r14d, dword [rsp + 8]	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x400a71a	     0xf8cd4030000	                            jl 0x400aaf4	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x400a720	     0xf8482030000	                            je 0x400aaa8	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400a726	    0x69d0e8030000	                    imul edx, eax, 0x3e8	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x400a72c	         0xfb743fe	               movzx eax, word [rbx - 2]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x400a730	             0x1d0	                            add eax, edx	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x400a732	              0x99	                                     cdq	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x400a733	        0xf77c2420	                 idiv dword [rsp + 0x20]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x400a737	            0x85c0	                           test eax, eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400a739	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400a73f	      0xba01000000	                              mov edx, 1	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400a744	            0x7407	                            je 0x400a74d	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400a746	            0x89c2	                            mov edx, eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400a748	            0xf7d8	                                 neg eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400a74a	          0x4189c1	                            mov r9d, eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400a74d	          0x4489f6	                           mov esi, r14d	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a750	        0x2b742410	             sub esi, dword [rsp + 0x10]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a754	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a758	          0x4101d4	                           add r12d, edx	      4545	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x400a75b	          0x4d89e8	                             mov r8, r13	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a75e	          0x4c89fa	                            mov rdx, r15	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a761	          0x4c89ef	                            mov rdi, r13	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a764	      0xe8f776ffff	     call sym.decUnitAddSub.constprop.11	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400a769	            0xeba2	                           jmp 0x400a70d	      4562	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x400a76b	        0x4183fd01	                             cmp r13d, 1	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400a76f	     0xf8524fcffff	                           jne 0x400a399	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400a775	            0xa870	                           test al, 0x70	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400a777	     0xf851cfcffff	                           jne 0x400a399	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400a77d	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400a782	     0xf88de070000	                            js 0x400af66	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400a788	      0xf644246820	           test byte [rsp + 0x68], 0x20 	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x400a78d	     0xf85a5010000	                           jne 0x400a938	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x400a793	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x400a798	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x400a79d	          0x4889de	                            mov rsi, rbx	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x400a7a0	          0x4c89f7	                            mov rdi, r14	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x400a7a3	          0x8b5804	                mov ebx, dword [rax + 4]	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x400a7a6	      0xe800000000	                          call 0x400a7ab	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x400a7ab	        0x413b5e04	                cmp ebx, dword [r14 + 4]	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x400a7af	     0xf8d9a070000	                           jge 0x400af4f	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x400a7b5	        0x41895e04	                mov dword [r14 + 4], ebx	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x400a7b9	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7c2	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7cb	            0xeb20	                           jmp 0x400a7ed	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7cd	           0xf1f00	                         nop dword [rax]	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7d0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x400a7d5	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7de	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7e7	    0x810880000000	                    or dword [rax], 0x80	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x400a7ed	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7f2	      0xe800000000	                          call 0x400a7f7	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7f7	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a7fc	      0xe800000000	                          call 0x400a801	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a801	    0x488b9c240801	           mov rbx, qword [rsp + 0x108] 	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a809	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a812	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a817	     0xf85f6070000	                           jne 0x400b013	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a81d	    0x4881c4180100	                          add rsp, 0x118	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a824	              0x5b	                                 pop rbx	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a825	              0x5d	                                 pop rbp	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a826	            0x415c	                                 pop r12	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a828	            0x415d	                                 pop r13	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a82a	            0x415e	                                 pop r14	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a82c	            0x415f	                                 pop r15	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a82e	              0xc3	                                     ret	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a82f	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x400a834	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4298	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400a83f	     0xf85ca060000	                           jne 0x400af0f	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x400a845	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a847	     0xfb69c248300	           movzx ebx, byte [rsp + 0x83] 	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x400a84f	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400a854	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a859	          0x885808	                  mov byte [rax + 8], bl	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x400a85c	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a863	    0x488d9c249c00	                   lea rbx, [rsp + 0x9c]	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a86b	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a871	        0x6689480a	                mov word [rax + 0xa], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a875	     0xf8805020000	                            js 0x400aa80	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400a87b	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400a880	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400a885	          0x4889da	                            mov rdx, rbx	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400a888	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400a88d	      0xe85e84ffff	                    call sym.decFinalize	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400a892	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a89b	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a8a4	      0xe944ffffff	                           jmp 0x400a7ed	      4314	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400a8a9	        0x4183c402	                             add r12d, 2	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8ad	      0xba56555555	                     mov edx, 0x55555556	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8b2	          0x4489e0	                           mov eax, r12d	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8b5	        0x41c1fc1f	                          sar r12d, 0x1f	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8b9	            0xf7ea	                                imul edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8bb	          0x4429e2	                           sub edx, r12d	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8be	        0x8954240c	              mov dword [rsp + 0xc], edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8c2	            0x89d7	                            mov edi, edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8c4	      0xe95ffcffff	                           jmp 0x400a528	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400a8c9	        0x418d7d02	                      lea edi, [r13 + 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8cd	      0xba56555555	                     mov edx, 0x55555556	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8d2	            0x89f8	                            mov eax, edi	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8d4	          0xc1ff1f	                           sar edi, 0x1f	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8d7	            0xf7ea	                                imul edx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8d9	            0x89d0	                            mov eax, edx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8db	            0x29f8	                            sub eax, edi	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8dd	            0x4898	                                    cdqe	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8df	      0x488d4400fe	                lea rax, [rax + rax - 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400a8e4	          0x4801c6	                            add rsi, rax	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a8e7	     0xf83cdfbffff	                           jae 0x400a4ba	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400a8ed	          0x4889d8	                            mov rax, rbx	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a8f0	      0xe9f9fbffff	                           jmp 0x400a4ee	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400a8f5	          0x8d7002	                      lea esi, [rax + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a8f8	      0xba56555555	                     mov edx, 0x55555556	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a8fd	            0x89f0	                            mov eax, esi	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a8ff	            0xf7ea	                                imul edx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a901	            0x89f0	                            mov eax, esi	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a903	          0xc1f81f	                           sar eax, 0x1f	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a906	            0x29c2	                            sub edx, eax	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a908	        0x448d7202	                     lea r14d, [rdx + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a90c	      0xe93bfbffff	                           jmp 0x400a44c	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400a911	          0x8d7005	                      lea esi, [rax + 5]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a914	      0xba56555555	                     mov edx, 0x55555556	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a919	            0x89f0	                            mov eax, esi	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a91b	          0xc1fe1f	                           sar esi, 0x1f	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a91e	            0xf7ea	                                imul edx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a920	            0x89d0	                            mov eax, edx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a922	            0x29f0	                            sub eax, esi	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a924	      0xe9d2faffff	                           jmp 0x400a3fb	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400a929	          0x4963cd	                        movsxd rcx, r13d	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a92c	     0xfb681000000	                   movzx eax, byte [rcx]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a933	      0xe9acfcffff	                           jmp 0x400a5e4	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400a938	     0xfb69c248300	           movzx ebx, byte [rsp + 0x83] 	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x400a940	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a945	          0x4531f6	                          xor r14d, r14d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a948	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a951	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a95a	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a961	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a967	      0x664489700a	              mov word [rax + 0xa], r14w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a96c	          0x885808	                  mov byte [rax + 8], bl	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x400a96f	      0xe979feffff	                           jmp 0x400a7ed	      4378	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x400a974	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x400a979	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x400a97e	          0x4d89c8	                              mov r8, r9	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x400a981	          0x4889da	                            mov rdx, rbx	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x400a984	      0xe8b77cffff	                 call sym.decNaNs.isra.6	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x400a989	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a992	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400a99b	      0xe94dfeffff	                           jmp 0x400a7ed	      4283	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x400a9a0	      0xf644246840	           test byte [rsp + 0x68], 0x40 	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400a9a5	            0x750b	                           jne 0x400a9b2	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400a9a7	      0x837c2428ff	cmp dword [rsp + 0x28], 0xffffffffffffffff	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400a9ac	     0xf8429faffff	                            je 0x400a3db	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400a9b2	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      6839	decNumber.c	FUNCTION_11
0x400a9b7	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9bc	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9c4	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9c9	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9ce	          0x4489e9	                           mov ecx, r13d	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9d1	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4385	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400a9dc	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x400a9df	        0x8b442408	                mov eax, dword [rsp + 8]	      6840	decNumber.c	FUNCTION_11
0x400a9e3	          0x4d89f9	                             mov r9, r15	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9e6	        0x4883c20a	                            add rdx, 0xa	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9ea	          0x4c89f6	                            mov rsi, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9ed	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9f0	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400a9f3	      0xe8a869ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400a9f8	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400aa00	          0x4c89f9	                            mov rcx, r15	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400aa03	          0x4c89f6	                            mov rsi, r14	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400aa06	          0x4889df	                            mov rdi, rbx	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400aa09	      0xe8e282ffff	                    call sym.decFinalize	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400aa0e	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400aa17	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400aa20	      0xe9c8fdffff	                           jmp 0x400a7ed	      4388	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400aa25	           0xf1f00	                         nop dword [rax]	      4388	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400aa28	          0x83e270	                           and edx, 0x70	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x400aa2b	     0xf8555f9ffff	                           jne 0x400a386	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x400aa31	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x400aa36	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x400aa3b	            0x7509	                           jne 0x400aa46	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x400aa3d	          0x833b01	                      cmp dword [rbx], 1	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x400aa40	     0xf848a050000	                            je 0x400afd0	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x400aa46	          0x4531ff	                          xor r15d, r15d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400aa49	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x400aa4e	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400aa53	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400aa57	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400aa5e	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400aa64	      0x664489780a	              mov word [rax + 0xa], r15w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400aa69	     0xf8561fdffff	                           jne 0x400a7d0	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x400aa6f	          0x4889c3	                            mov rbx, rax	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x400aa72	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400aa77	          0x830802	                       or dword [rax], 2	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400aa7a	      0xe9d2f8ffff	                           jmp 0x400a351	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400aa7f	              0x90	                                     nop	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400aa80	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aa85	          0x8b4708	                mov eax, dword [rdi + 8]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aa88	            0x2b07	                    sub eax, dword [rdi]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aa8a	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aa8f	          0x83c001	                              add eax, 1	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aa92	          0x894704	                mov dword [rdi + 4], eax	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aa95	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aa9a	    0x810800040000	                   or dword [rax], 0x400	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aaa0	      0xe9d6fdffff	                           jmp 0x400a87b	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aaa5	           0xf1f00	                         nop dword [rax]	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aaa8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aaad	          0x4889da	                            mov rdx, rbx	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aab0	            0xeb17	                           jmp 0x400aac9	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aab2	    0x660f1f440000	                    nop word [rax + rax]	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400aab8	          0x4839d5	                            cmp rbp, rdx	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x400aabb	     0xf8447020000	                            je 0x400ad08	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x400aac1	        0x4883ea02	                              sub rdx, 2	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x400aac5	        0x4883e902	                              sub rcx, 2	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x400aac9	            0x31f6	                            xor esi, esi	      4517	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x400aacb	          0x4c39f9	                            cmp rcx, r15	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x400aace	            0x7203	                            jb 0x400aad3	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x400aad0	           0xfb731	                   movzx esi, word [rcx]	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x400aad3	          0x663b32	                      cmp si, word [rdx]	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x400aad6	            0x74e0	                            je 0x400aab8	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x400aad8	     0xf8743020000	                            ja 0x400ad21	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x400aade	    0x69d0e8030000	                    imul edx, eax, 0x3e8	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aae4	         0xfb743fe	               movzx eax, word [rbx - 2]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aae8	             0x1d0	                            add eax, edx	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aaea	              0x99	                                     cdq	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aaeb	        0xf77c2424	                 idiv dword [rsp + 0x24]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aaef	      0xe943fcffff	                           jmp 0x400a737	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aaf4	          0x4489f0	                           mov eax, r14d	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aaf7	          0x4989ee	                            mov r14, rbp	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aafa	            0x89c5	                            mov ebp, eax	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400aafc	      0x448b54242c	           mov r10d, dword [rsp + 0x2c] 	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab01	          0x4585d2	                         test r10d, r10d	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab04	            0x7548	                           jne 0x400ab4e	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab06	        0x664585e4	                         test r12w, r12w	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab0a	            0x7542	                           jne 0x400ab4e	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab0c	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab14	      0x6641833e00	                       cmp word [r14], 0	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x400ab19	            0x7509	                           jne 0x400ab24	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x400ab1b	          0x83fd01	                              cmp ebp, 1	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x400ab1e	     0xf8409020000	                            je 0x400ad2d	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x400ab24	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400ab29	          0x4585c0	                           test r8d, r8d	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400ab2c	            0x750e	                           jne 0x400ab3c	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400ab2e	    0x80bc248d0000	                cmp byte [rsp + 0x8d], 0	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400ab36	     0xf852c020000	                           jne 0x400ad68	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400ab3c	      0x836c240801	                  sub dword [rsp + 8], 1	      4592	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x400ab41	      0x836c242803	               sub dword [rsp + 0x28], 3	      4593	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x400ab46	           0xfb703	                   movzx eax, word [rbx]	      4593	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x400ab49	      0xe992fbffff	                           jmp 0x400a6e0	      4594	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x400ab4e	      0x448b4c242c	            mov r9d, dword [rsp + 0x2c] 	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x400ab53	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab58	          0x4585c9	                           test r9d, r9d	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x400ab5b	        0x66448920	                    mov word [rax], r12w	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab5f	     0xf8592010000	                           jne 0x400acf7	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x400ab65	      0x8344243001	               add dword [rsp + 0x30], 1	      4570	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x400ab6a	        0x450fb7e4	                        movzx r12d, r12w	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab6e	    0x443925000000	           cmp dword [0x0400ab75], r12d 	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab75	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      4570	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x400ab79	            0x7715	                            ja 0x400ab90	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab7b	      0xb800000000	                              mov eax, 0	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab80	        0x4883c004	                              add rax, 4	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab84	          0x83c201	                              add edx, 1	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab87	          0x443920	                   cmp dword [rax], r12d	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab8a	            0x76f4	                           jbe 0x400ab80	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab8c	        0x89542430	             mov dword [rsp + 0x30], edx	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400ab90	      0x8344242c01	               add dword [rsp + 0x2c], 1	      4574	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab95	    0x48836c243802	               sub qword [rsp + 0x38], 2	      4575	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400ab9b	        0x8b7c246c	            mov edi, dword [rsp + 0x6c] 	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x400ab9f	        0x397c2430	            cmp dword [rsp + 0x30], edi 	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x400aba3	     0xf8e6bffffff	                           jle 0x400ab14	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x400aba9	            0x89e8	                            mov eax, ebp	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x400abab	          0x4c89f5	                            mov rbp, r14	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x400abae	          0x4189c6	                           mov r14d, eax	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x400abb1	    0x488344243802	               add qword [rsp + 0x38], 2	      4606	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12
0x400abb7	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x400abbc	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4609	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12
0x400abc7	     0xf88f3020000	                            js 0x400aec0	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x400abcd	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x400abd1	         0x3442428	             add eax, dword [rsp + 0x28]	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x400abd5	        0x3944246c	            cmp dword [rsp + 0x6c], eax 	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x400abd9	     0xf8c70020000	                            jl 0x400ae4f	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x400abdf	    0x80bc248e0000	                cmp byte [rsp + 0x8e], 0	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400abe7	     0xf84ac000000	                            je 0x400ac99	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400abed	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400abf2	      0x66837d0000	                       cmp word [rbp], 0	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400abf7	         0xfb64308	               movzx eax, byte [rbx + 8]	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400abfb	            0x89c7	                            mov edi, eax	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400abfd	    0x888424830000	               mov byte [rsp + 0x83], al	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac04	            0x750a	                           jne 0x400ac10	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400ac06	        0x4183fe01	                             cmp r14d, 1	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400ac0a	     0xf8445050000	                            je 0x400b155	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400ac10	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x400ac15	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac1a	          0x4489f6	                           mov esi, r14d	      6740	decNumber.c	FUNCTION_9	IF_1
0x400ac1d	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac21	           0xfb700	                   movzx eax, word [rax]	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x400ac24	        0x448b4b04	                mov r9d, dword [rbx + 4]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac28	      0x6689442408	                  mov word [rsp + 8], ax	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x400ac2d	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac32	    0x440fb66c2408	              movzx r13d, byte [rsp + 8]	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x400ac38	        0x448b4004	                mov r8d, dword [rax + 4]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac3c	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac43	        0x4183e501	                             and r13d, 1	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x400ac47	             0x1c2	                            add edx, eax	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac49	          0x4429c2	                            sub edx, r8d	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac4c	          0x4401ca	                            add edx, r9d	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac4f	            0x39d0	                            cmp eax, edx	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac51	           0xf4ed0	                         cmovle edx, eax	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400ac54	            0x85d2	                           test edx, edx	      6740	decNumber.c	FUNCTION_9	IF_1
0x400ac56	     0xf8535060000	                           jne 0x400b291	      6740	decNumber.c	FUNCTION_9	IF_1
0x400ac5c	          0x4889ef	                            mov rdi, rbp	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x400ac5f	      0xe83c5affff	                   call sym.decGetDigits	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x400ac64	          0x83f831	                           cmp eax, 0x31	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400ac67	            0x89c3	                            mov ebx, eax	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x400ac69	     0xf8f87020000	                            jg 0x400aef6	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400ac6f	            0x4898	                                    cdqe	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400ac71	    0x440fb6a00000	                  movzx r12d, byte [rax]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400ac79	          0x4539c1	                            cmp r9d, r8d	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400ac7c	        0x450f4ec1	                         cmovle r8d, r9d	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400ac80	      0xf644246810	           test byte [rsp + 0x68], 0x10 	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x400ac85	      0x4489442428	             mov dword [rsp + 0x28], r8d	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x400ac8a	     0xf8588030000	                           jne 0x400b018	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x400ac90	        0x895c2430	             mov dword [rsp + 0x30], ebx	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x400ac94	      0x48896c2438	             mov qword [rsp + 0x38], rbp	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x400ac99	     0xfb684248300	           movzx eax, byte [rsp + 0x83] 	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400aca1	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400aca6	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acae	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400acb2	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acb7	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acbc	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acc0	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acc5	          0x83e080	                     and eax, 0xffffff80	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400acc8	          0x897b04	                mov dword [rbx + 4], edi	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400accb	          0x4d89f9	                             mov r9, r15	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acce	          0x4c89f6	                            mov rsi, r14	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acd1	          0x4889df	                            mov rdi, rbx	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acd4	          0x884308	                  mov byte [rbx + 8], al	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400acd7	      0xe8c466ffff	             call sym.decSetCoeff.isra.3	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400acdc	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400ace4	          0x4c89f9	                            mov rcx, r15	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400ace7	          0x4c89f6	                            mov rsi, r14	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400acea	          0x4889df	                            mov rdi, rbx	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400aced	      0xe8fe7fffff	                    call sym.decFinalize	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400acf2	      0xe9f6faffff	                           jmp 0x400a7ed	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400acf7	      0x8344243003	               add dword [rsp + 0x30], 3	      4573	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	ELSE_11
0x400acfc	      0xe98ffeffff	                           jmp 0x400ab90	      4573	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	ELSE_11
0x400ad01	     0xf1f80000000	                         nop dword [rax]	      4573	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	ELSE_11
0x400ad08	          0x4531db	                          xor r11d, r11d	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400ad0b	          0x4989ee	                            mov r14, rbp	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400ad0e	        0x4183c401	                             add r12d, 1	      4528	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400ad12	      0x6644895d00	                    mov word [rbp], r11w	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400ad17	      0xbd01000000	                              mov ebp, 1	      4530	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400ad1c	      0xe9dbfdffff	                           jmp 0x400aafc	      4531	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400ad21	          0x4989ee	                            mov r14, rbp	      4531	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400ad24	        0x8b6c2408	                mov ebp, dword [rsp + 8]	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x400ad28	      0xe9cffdffff	                           jmp 0x400aafc	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x400ad2d	    0x80bc248e0000	                cmp byte [rsp + 0x8e], 0	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x400ad35	            0x751f	                           jne 0x400ad56	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x400ad37	    0x80bc248f0000	                cmp byte [rsp + 0x8f], 0	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad3f	     0xf84dffdffff	                            je 0x400ab24	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad45	    0x8bbc24840000	            mov edi, dword [rsp + 0x84] 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad4c	        0x397c2428	            cmp dword [rsp + 0x28], edi 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad50	     0xf8fcefdffff	                            jg 0x400ab24	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad56	          0x4c89f5	                            mov rbp, r14	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad59	    0x41be01000000	                             mov r14d, 1	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad5f	            0xeb17	                           jmp 0x400ad78	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad61	     0xf1f80000000	                         nop dword [rax]	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad68	            0x89e8	                            mov eax, ebp	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad6a	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad72	          0x4c89f5	                            mov rbp, r14	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad75	          0x4189c6	                           mov r14d, eax	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400ad78	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ad7c	            0x85ff	                           test edi, edi	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ad7e	     0xf852dfeffff	                           jne 0x400abb1	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ad84	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ad89	            0x31f6	                            xor esi, esi	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ad8b	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4603	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ad93	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      4602	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ad9b	          0x668930	                      mov word [rax], si	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ad9e	      0xe914feffff	                           jmp 0x400abb7	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400ada3	        0x8b7c2408	                mov edi, dword [rsp + 8]	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x400ada7	        0x2b7c242c	             sub edi, dword [rsp + 0x2c]	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x400adab	        0x664139c0	                             cmp r8w, ax	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400adaf	    0x89bc24840000	             mov dword [rsp + 0x84], edi	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x400adb6	     0xf8625010000	                           jbe 0x400aee1	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400adbc	        0x418d7eff	                      lea edi, [r14 - 1]	      4492	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400adc0	      0x836c242803	               sub dword [rsp + 0x28], 3	      4493	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400adc5	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x400add0	        0x897c2408	                mov dword [rsp + 8], edi	      4492	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400add4	      0xe9a3f8ffff	                           jmp 0x400a67c	      4492	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400add9	    0x69c6e8030000	                    imul eax, esi, 0x3e8	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400addf	        0x89742420	             mov dword [rsp + 0x20], esi	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400ade3	        0x89442424	             mov dword [rsp + 0x24], eax	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400ade7	      0xe98af7ffff	                           jmp 0x400a576	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400adec	      0x837c243003	               cmp dword [rsp + 0x30], 3	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400adf1	            0x7e3d	                           jle 0x400ae30	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400adf3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400adf8	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400adfc	      0x668138e703	                   cmp word [rax], 0x3e7	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400ae01	            0x7418	                            je 0x400ae1b	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400ae03	      0xe9b0020000	                           jmp 0x400b0b8	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400ae08	     0xf1f84000000	                   nop dword [rax + rax]	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400ae10	      0x668138e703	                   cmp word [rax], 0x3e7	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400ae15	     0xf859d020000	                           jne 0x400b0b8	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400ae1b	          0x83ea03	                              sub edx, 3	      4744	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x400ae1e	        0x4883c002	                              add rax, 2	      4736	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x400ae22	          0x83fa03	                              cmp edx, 3	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400ae25	            0x7fe9	                            jg 0x400ae10	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400ae27	      0x4889442438	             mov qword [rsp + 0x38], rax	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400ae2c	        0x89542430	             mov dword [rsp + 0x30], edx	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400ae30	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400ae35	           0xfb710	                   movzx edx, word [rax]	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400ae38	      0x4863442430	         movsxd rax, dword [rsp + 0x30] 	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400ae3d	    0x8b0485000000	                  mov eax, dword [rax*4]	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400ae44	          0x83e801	                              sub eax, 1	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400ae47	            0x39c2	                            cmp edx, eax	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400ae49	     0xf8569020000	                           jne 0x400b0b8	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400ae4f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x400ae54	          0x830804	                       or dword [rax], 4	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x400ae57	      0xe991f9ffff	                           jmp 0x400a7ed	      4749	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x400ae5c	          0x4889df	                            mov rdi, rbx	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400ae5f	      0xe800000000	                          call 0x400ae64	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400ae64	          0x4885c0	                           test rax, rax	      4427	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x400ae67	      0x4889442450	             mov qword [rsp + 0x50], rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400ae6c	          0x4889c5	                            mov rbp, rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400ae6f	     0xf850df6ffff	                           jne 0x400a482	      4427	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x400ae75	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400ae7a	          0x830810	                    or dword [rax], 0x10	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400ae7d	      0xe96bf9ffff	                           jmp 0x400a7ed	      4715	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400ae82	    0x660f1f440000	                    nop word [rax + rax]	      4715	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400ae88	          0x4889c7	                            mov rdi, rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400ae8b	      0xe800000000	                          call 0x400ae90	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400ae90	          0x4885c0	                           test rax, rax	      4402	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400ae93	      0x4889442458	             mov qword [rsp + 0x58], rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400ae98	      0x4889442410	             mov qword [rsp + 0x10], rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x400ae9d	     0xf8582f5ffff	                           jne 0x400a425	      4402	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400aea3	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400aea8	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400aeb1	          0x830810	                    or dword [rax], 0x10	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400aeb4	      0xe934f9ffff	                           jmp 0x400a7ed	      4404	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400aeb9	     0xf1f80000000	                         nop dword [rax]	      4404	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x400aec0	      0x66837d0000	                       cmp word [rbp], 0	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400aec5	            0x750a	                           jne 0x400aed1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400aec7	        0x4183fe01	                             cmp r14d, 1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400aecb	     0xf8ecf020000	                           jle 0x400b1a0	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400aed1	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400aedc	      0xe9b8fdffff	                           jmp 0x400ac99	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400aee1	      0x4489742408	               mov dword [rsp + 8], r14d	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400aee6	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x400aef1	      0xe986f7ffff	                           jmp 0x400a67c	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x400aef6	          0x8d4802	                      lea ecx, [rax + 2]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400aef9	      0xba56555555	                     mov edx, 0x55555556	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400aefe	            0x89c8	                            mov eax, ecx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400af00	          0xc1f91f	                           sar ecx, 0x1f	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400af03	            0xf7ea	                                imul edx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400af05	            0x29ca	                            sub edx, ecx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400af07	          0x4189d4	                           mov r12d, edx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400af0a	      0xe96afdffff	                           jmp 0x400ac79	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x400af0f	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      6840	decNumber.c	FUNCTION_11
0x400af14	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      6839	decNumber.c	FUNCTION_11
0x400af19	    0x488d9c249c00	                   lea rbx, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400af21	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400af26	          0x4989d8	                             mov r8, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400af29	          0x884708	                  mov byte [rdi + 8], al	      6839	decNumber.c	FUNCTION_11
0x400af2c	          0x8b4104	                mov eax, dword [rcx + 4]	      6840	decNumber.c	FUNCTION_11
0x400af2f	        0x488d510a	                    lea rdx, [rcx + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400af33	            0x8b09	                    mov ecx, dword [rcx]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400af35	          0x894704	                mov dword [rdi + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400af38	      0xe86364ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400af3d	      0xe939f9ffff	                           jmp 0x400a87b	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400af42	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400af47	          0x41f7dd	                                neg r13d	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400af4a	      0xe9cbf6ffff	                           jmp 0x400a61a	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400af4f	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400af58	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400af61	      0xe987f8ffff	                           jmp 0x400a7ed	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400af66	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x400af6b	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400af70	          0x4889d8	                            mov rax, rbx	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400af73	          0x4889c6	                            mov rsi, rax	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x400af76	          0x8b5b04	                mov ebx, dword [rbx + 4]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400af79	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4341	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400af84	          0x2b5f04	                sub ebx, dword [rdi + 4]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400af87	          0x4c89f7	                            mov rdi, r14	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x400af8a	      0xe800000000	                          call 0x400af8f	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x400af8f	     0xfb6bc248300	           movzx edi, byte [rsp + 0x83] 	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400af97	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x400af9c	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x400afa4	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x400afa9	        0x41895e04	                mov dword [r14 + 4], ebx	      4345	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400afad	        0x41887e08	                 mov byte [r14 + 8], dil	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x400afb1	          0x4c89f7	                            mov rdi, r14	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x400afb4	      0xe8377dffff	                    call sym.decFinalize	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x400afb9	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400afc2	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400afcb	      0xe91df8ffff	                           jmp 0x400a7ed	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400afd0	            0xa870	                           test al, 0x70	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x400afd2	     0xf856efaffff	                           jne 0x400aa46	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x400afd8	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400afdd	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400afdf	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400afe8	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400aff1	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400aff7	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400affb	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b002	        0x6689500a	                mov word [rax + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b006	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x400b00b	          0x830808	                       or dword [rax], 8	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x400b00e	      0xe9daf7ffff	                           jmp 0x400a7ed	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x400b013	      0xe800000000	                          call 0x400b018	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400b018	          0x4989e8	                             mov r8, rbp	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400b01b	          0x4889ef	                            mov rdi, rbp	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400b01e	    0x41b901000000	                              mov r9d, 1	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400b024	          0x4489e1	                           mov ecx, r12d	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400b027	          0x4889ea	                            mov rdx, rbp	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400b02a	          0x4489e6	                           mov esi, r12d	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400b02d	      0xe82e6effff	     call sym.decUnitAddSub.constprop.11	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400b032	          0x4c63f0	                         movsxd r14, eax	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400b035	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b03a	          0x8b7804	                mov edi, dword [rax + 4]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b03d	          0x486300	                 movsxd rax, dword [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b040	          0x4189f8	                            mov r8d, edi	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b043	      0x442b442428	             sub r8d, dword [rsp + 0x28]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b048	        0x897c2408	                mov dword [rsp + 8], edi	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b04c	          0x83f831	                           cmp eax, 0x31	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b04f	     0xf8fe6000000	                            jg 0x400b13b	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b055	     0xfb688000000	                   movzx ecx, byte [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b05c	          0x4c89fa	                            mov rdx, r15	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b05f	          0x4489f6	                           mov esi, r14d	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b062	          0x4889ef	                            mov rdi, rbp	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b065	      0xe8f669ffff	                 call sym.decUnitCompare	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b06a	      0x3d00000080	                     cmp eax, 0x80000000	      4713	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400b06f	     0xf8400feffff	                            je 0x400ae75	      4713	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400b075	      0x4a8d4c7500	                  lea rcx, [rbp + r14*2]	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b07a	          0x4889ea	                            mov rdx, rbp	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b07d	          0x4839cd	                            cmp rbp, rcx	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b080	            0x731f	                           jae 0x400b0a1	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b082	           0xfb732	                   movzx esi, word [rdx]	      4721	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b085	            0x89f7	                            mov edi, esi	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b087	          0x66d1ef	                               shr di, 1	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b08a	          0x83e601	                              and esi, 1	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x400b08d	          0x66893a	                      mov word [rdx], di	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b090	            0x7406	                            je 0x400b098	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x400b092	    0x668142fef401	               add word [rdx - 2], 0x1f4	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b098	        0x4883c202	                              add rdx, 2	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b09c	          0x4839ca	                            cmp rdx, rcx	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b09f	            0x72e1	                            jb 0x400b082	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400b0a1	          0x83f800	                              cmp eax, 0	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0a4	     0xf8e08020000	                           jle 0x400b2b2	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0aa	        0x8b5c246c	            mov ebx, dword [rsp + 0x6c] 	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x400b0ae	        0x395c2430	            cmp dword [rsp + 0x30], ebx 	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x400b0b2	     0xf8434fdffff	                            je 0x400adec	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x400b0b8	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0bd	      0xbf56555555	                     mov edi, 0x55555556	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0c2	          0x8b4304	                mov eax, dword [rbx + 4]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0c5	            0x89c1	                            mov ecx, eax	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0c7	        0x2b4c2428	             sub ecx, dword [rsp + 0x28]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0cb	        0x89442408	                mov dword [rsp + 8], eax	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0cf	            0x89c8	                            mov eax, ecx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0d1	            0xf7ef	                                imul edi	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0d3	            0x89c8	                            mov eax, ecx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0d5	          0xc1f81f	                           sar eax, 0x1f	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0d8	            0x29c2	                            sub edx, eax	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0da	          0x8d0452	                  lea eax, [rdx + rdx*2]	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0dd	          0x4189d0	                            mov r8d, edx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0e0	            0x29c1	                            sub ecx, eax	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0e2	          0x4863c1	                         movsxd rax, ecx	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b0e5	    0x8b3485000000	                  mov esi, dword [rax*4]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b0ec	          0x486303	                 movsxd rax, dword [rbx]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x400b0ef	            0xf7de	                                 neg esi	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b0f1	          0x83f831	                           cmp eax, 0x31	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b0f4	     0xf8fcc010000	                            jg 0x400b2c6	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b0fa	     0xfb688000000	                   movzx ecx, byte [rax]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b101	        0x4883ec08	                              sub rsp, 8	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b105	          0x4c89fa	                            mov rdx, r15	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b108	          0x4989e9	                             mov r9, rbp	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b10b	              0x56	                                push rsi	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b10c	          0x4889ef	                            mov rdi, rbp	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b10f	          0x4489e6	                           mov esi, r12d	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b112	      0xe8294fffff	                  call sym.decUnitAddSub	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b117	            0xf7d8	                                 neg eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x400b119	          0x4889ef	                            mov rdi, rbp	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x400b11c	            0x89c6	                            mov esi, eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x400b11e	      0xe87d55ffff	                   call sym.decGetDigits	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x400b123	    0x808424930000	             add byte [rsp + 0x93], 0x80	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b12b	        0x89442440	             mov dword [rsp + 0x40], eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x400b12f	              0x58	                                 pop rax	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b130	              0x5a	                                 pop rdx	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b131	      0x48896c2438	             mov qword [rsp + 0x38], rbp	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b136	      0xe95efbffff	                           jmp 0x400ac99	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b13b	          0x8d4802	                      lea ecx, [rax + 2]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b13e	      0xba56555555	                     mov edx, 0x55555556	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b143	            0x89c8	                            mov eax, ecx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b145	            0xf7ea	                                imul edx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b147	            0x89c8	                            mov eax, ecx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b149	          0xc1f81f	                           sar eax, 0x1f	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b14c	            0x89d1	                            mov ecx, edx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b14e	            0x29c1	                            sub ecx, eax	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b150	      0xe907ffffff	                           jmp 0x400b05c	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400b155	          0x8b4304	                mov eax, dword [rbx + 4]	      4662	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b158	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x400b15d	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b15f	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b164	          0x8b5304	                mov edx, dword [rbx + 4]	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x400b167	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b16c	            0x39d0	                            cmp eax, edx	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x400b16e	        0x66894b0a	                mov word [rbx + 0xa], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b172	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b177	           0xf4fc2	                          cmovg eax, edx	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x400b17a	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b182	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b188	          0x894304	                mov dword [rbx + 4], eax	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x400b18b	            0x89f8	                            mov eax, edi	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b18d	          0x4889df	                            mov rdi, rbx	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b190	          0x83e080	                     and eax, 0xffffff80	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b193	          0x884308	                  mov byte [rbx + 8], al	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b196	      0xe8557bffff	                    call sym.decFinalize	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b19b	      0xe94df6ffff	                           jmp 0x400a7ed	      4671	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400b1a0	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x400b1a5	           0xfb700	                   movzx eax, word [rax]	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x400b1a8	            0xa801	                              test al, 1	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x400b1aa	     0xf85e9faffff	                           jne 0x400ac99	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x400b1b0	          0x6685c0	                             test ax, ax	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x400b1b3	     0xf84e0faffff	                            je 0x400ac99	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x400b1b9	    0x8bbc24840000	            mov edi, dword [rsp + 0x84] 	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b1c0	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b1c4	            0x39df	                            cmp edi, ebx	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b1c6	     0xf8ecdfaffff	                           jle 0x400ac99	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b1cc	           0xfb7d0	                           movzx edx, ax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1cf	            0x89d0	                            mov eax, edx	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1d1	            0xd1e8	                              shr eax, 1	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1d3	    0x69c067660000	                   imul eax, eax, 0x6667	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1d9	          0xc1e811	                           shr eax, 0x11	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1dc	     0xfaf05000000	            imul eax, dword [0x0400b1e3]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1e3	            0x39d0	                            cmp eax, edx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1e5	     0xf85aefaffff	                           jne 0x400ac99	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1eb	          0x8d4b01	                      lea ecx, [rbx + 1]	      4631	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x400b1ee	            0x39cf	                            cmp edi, ecx	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b1f0	     0xf8ef3000000	                           jle 0x400b2e9	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b1f6	            0x89c2	                            mov edx, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1f8	          0xc1ea02	                              shr edx, 2	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b1fb	    0x69d27b140000	                   imul edx, edx, 0x147b	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b201	          0xc1ea11	                           shr edx, 0x11	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b204	     0xfaf15000000	            imul edx, dword [0x0400b20b]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b20b	            0x39d0	                            cmp eax, edx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b20d	     0xf85d6000000	                           jne 0x400b2e9	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b213	          0x8d4b02	                      lea ecx, [rbx + 2]	      4631	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x400b216	            0x39cf	                            cmp edi, ecx	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b218	     0xf8ec4000000	                           jle 0x400b2e2	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b21e	            0x89c2	                            mov edx, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b220	          0xc1ea03	                              shr edx, 3	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b223	    0x69d219040000	                    imul edx, edx, 0x419	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b229	          0xc1ea11	                           shr edx, 0x11	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b22c	     0xfaf15000000	            imul edx, dword [0x0400b233]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b233	            0x39d0	                            cmp eax, edx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b235	     0xf85a7000000	                           jne 0x400b2e2	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b23b	          0x8d4b03	                      lea ecx, [rbx + 3]	      4631	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x400b23e	            0x39cf	                            cmp edi, ecx	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b240	     0xf8e95000000	                           jle 0x400b2db	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400b246	            0x89c2	                            mov edx, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b248	          0xc1ea04	                              shr edx, 4	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b24b	    0x69d2d2000000	                     imul edx, edx, 0xd2	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b251	          0xc1ea11	                           shr edx, 0x11	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b254	     0xfaf15000000	            imul edx, dword [0x0400b25b]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b25b	            0x39d0	                            cmp eax, edx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b25d	            0x757c	                           jne 0x400b2db	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b25f	          0x83c304	                              add ebx, 4	      4631	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x400b262	      0xba04000000	                              mov edx, 4	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b267	            0x89d9	                            mov ecx, ebx	      4631	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x400b269	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4631	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x400b26e	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	      4631	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11
0x400b272	        0x894c2428	             mov dword [rsp + 0x28], ecx	      4602	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400b276	          0x4889df	                            mov rdi, rbx	      4602	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400b279	      0xe8125cffff	         call sym.decShiftToLeast.part.1	      4602	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400b27e	          0x4889df	                            mov rdi, rbx	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b281	            0x89c6	                            mov esi, eax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b283	      0xe81854ffff	                   call sym.decGetDigits	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b288	        0x89442430	             mov dword [rsp + 0x30], eax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b28c	      0xe908faffff	                           jmp 0x400ac99	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b291	          0x4889ef	                            mov rdi, rbp	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b294	      0xe8f75bffff	         call sym.decShiftToLeast.part.1	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b299	            0x89c6	                            mov esi, eax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b29b	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b2a0	        0x448b4004	                mov r8d, dword [rax + 4]	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b2a4	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b2a9	        0x448b4804	                mov r9d, dword [rax + 4]	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b2ad	      0xe9aaf9ffff	                           jmp 0x400ac5c	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x400b2b2	     0xf85d8f9ffff	                           jne 0x400ac90	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b2b8	          0x4584ed	                         test r13b, r13b	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b2bb	     0xf85e9fdffff	                           jne 0x400b0aa	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b2c1	      0xe9caf9ffff	                           jmp 0x400ac90	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400b2c6	          0x8d4802	                      lea ecx, [rax + 2]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b2c9	            0x89c8	                            mov eax, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b2cb	            0xf7ef	                                imul edi	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b2cd	            0x89c8	                            mov eax, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b2cf	          0xc1f81f	                           sar eax, 0x1f	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b2d2	            0x89d1	                            mov ecx, edx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b2d4	            0x29c1	                            sub ecx, eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b2d6	      0xe926feffff	                           jmp 0x400b101	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400b2db	      0xba03000000	                              mov edx, 3	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b2e0	            0xeb87	                           jmp 0x400b269	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b2e2	      0xba02000000	                              mov edx, 2	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b2e7	            0xeb80	                           jmp 0x400b269	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b2e9	      0xba01000000	                              mov edx, 1	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400b2ee	      0xe976ffffff	                           jmp 0x400b269	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
decNumberClass	SWITCH,0:functions,0:IF,9:WHILE,0:CALL,9:FOR,0:DO,0:ELSE,0	45
0x4007dc0	         0xfb65708	               movzx edx, byte [rdi + 8]	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4007dc4	          0xf6c270	                           test dl, 0x70	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4007dc7	            0x7527	                           jne 0x4007df0	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4007dc9	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4007dce	            0x7548	                           jne 0x4007e18	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4007dd0	            0x8b07	                    mov eax, dword [rdi]	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4007dd2	          0x83f801	                              cmp eax, 1	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4007dd5	            0x7459	                            je 0x4007e30	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4007dd7	           0x34704	                add eax, dword [rdi + 4]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4007dda	          0x3b4608	                cmp eax, dword [rsi + 8]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4007ddd	            0x7f43	                            jg 0x4007e22	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4007ddf	           0xfbec2	                           movsx eax, dl	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4007de2	          0xc1f81f	                           sar eax, 0x1f	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4007de5	          0x83e0fd	                     and eax, 0xfffffffd	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4007de8	          0x83c007	                              add eax, 7	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4007deb	              0xc3	                                     ret	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4007dec	         0xf1f4000	                         nop dword [rax]	      3311	decNumber.c	FUNCTION_68	FUNCTION_50	CALL_9
0x4007df0	          0xf6c220	                           test dl, 0x20	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4007df3	      0xb801000000	                              mov eax, 1	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4007df8	            0x7516	                           jne 0x4007e10	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4007dfa	            0x31c0	                            xor eax, eax	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4007dfc	          0xf6c210	                           test dl, 0x10	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4007dff	            0x750f	                           jne 0x4007e10	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4007e01	           0xfbec2	                           movsx eax, dl	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4007e04	          0xc1f81f	                           sar eax, 0x1f	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4007e07	          0x83e0f9	                     and eax, 0xfffffff9	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4007e0a	          0x83c009	                              add eax, 9	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4007e0d	              0xc3	                                     ret	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4007e0e	            0x6690	                                     nop	      3298	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_4
0x4007e10	            0xf3c3	                                     ret	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
0x4007e12	    0x660f1f440000	                    nop word [rax + rax]	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
0x4007e18	          0x8b4704	                mov eax, dword [rdi + 4]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4007e1b	             0x307	                    add eax, dword [rdi]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4007e1d	          0x394608	                cmp dword [rsi + 8], eax	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4007e20	            0x7dbd	                           jge 0x4007ddf	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x4007e22	           0xfbec2	                           movsx eax, dl	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4007e25	          0xc1f81f	                           sar eax, 0x1f	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4007e28	          0x83e0fb	                     and eax, 0xfffffffb	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4007e2b	          0x83c008	                              add eax, 8	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4007e2e	              0xc3	                                     ret	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4007e2f	              0x90	                                     nop	      3303	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_6
0x4007e30	           0xfbec2	                           movsx eax, dl	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4007e33	          0xc1f81f	                           sar eax, 0x1f	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4007e36	          0x83c006	                              add eax, 6	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
0x4007e39	              0xc3	                                     ret	      3308	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_8
decNumberSubtract	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	40
0x40099f0	              0x55	                                push rbp	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40099f1	              0x53	                                push rbx	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40099f2	    0x41b880000000	                           mov r8d, 0x80	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40099f8	          0x4889fb	                            mov rbx, rdi	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40099fb	          0x4889cd	                            mov rbp, rcx	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40099fe	        0x4883ec18	                           sub rsp, 0x18	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a02	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x4009a07	    0xc74424040000	                  mov dword [rsp + 4], 0	      3141	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a0f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a18	      0x4889442408	                mov qword [rsp + 8], rax	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a1d	            0x31c0	                            xor eax, eax	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a1f	      0xe82cf6ffff	                       call sym.decAddOp	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x4009a24	        0x8b742404	                mov esi, dword [rsp + 4]	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4009a28	            0x85f6	                           test esi, esi	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4009a2a	            0x7524	                           jne 0x4009a50	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4009a2c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a31	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a3a	          0x4889d8	                            mov rax, rbx	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a3d	            0x7549	                           jne 0x4009a88	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a3f	        0x4883c418	                           add rsp, 0x18	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a43	              0x5b	                                 pop rbx	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a44	              0x5d	                                 pop rbp	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a45	              0xc3	                                     ret	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4009a50	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4009a54	            0x741f	                            je 0x4009a75	      7736	decNumber.c	FUNCTION_24	IF_1
0x4009a56	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009a5c	            0x7522	                           jne 0x4009a80	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009a5e	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009a60	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009a67	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009a6d	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009a71	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4009a75	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009a78	      0xe800000000	                          call 0x4009a7d	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009a7d	            0xebad	                           jmp 0x4009a2c	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009a7f	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009a80	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009a86	            0xebed	                           jmp 0x4009a75	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009a88	      0xe800000000	                          call 0x4009a8d	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
decNumberRemainderNear	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	40
0x400b4e0	              0x55	                                push rbp	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b4e1	              0x53	                                push rbx	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b4e2	    0x41b810000000	                           mov r8d, 0x10	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x400b4e8	          0x4889fb	                            mov rbx, rdi	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b4eb	          0x4889cd	                            mov rbp, rcx	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b4ee	        0x4883ec18	                           sub rsp, 0x18	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b4f2	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x400b4f7	    0xc74424040000	                  mov dword [rsp + 4], 0	      2421	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b4ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b508	      0x4889442408	                mov qword [rsp + 8], rax	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b50d	            0x31c0	                            xor eax, eax	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b50f	      0xe89cedffff	                    call sym.decDivideOp	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x400b514	        0x8b742404	                mov esi, dword [rsp + 4]	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x400b518	            0x85f6	                           test esi, esi	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x400b51a	            0x7524	                           jne 0x400b540	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x400b51c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b521	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b52a	          0x4889d8	                            mov rax, rbx	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b52d	            0x7549	                           jne 0x400b578	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b52f	        0x4883c418	                           add rsp, 0x18	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b533	              0x5b	                                 pop rbx	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b534	              0x5d	                                 pop rbp	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b535	              0xc3	                                     ret	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400b540	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400b544	            0x741f	                            je 0x400b565	      7736	decNumber.c	FUNCTION_24	IF_1
0x400b546	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b54c	            0x7522	                           jne 0x400b570	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b54e	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b550	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b557	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b55d	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b561	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400b565	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b568	      0xe800000000	                          call 0x400b56d	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b56d	            0xebad	                           jmp 0x400b51c	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b56f	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b570	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b576	            0xebed	                           jmp 0x400b565	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b578	      0xe800000000	                          call 0x400b57d	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
decNumberDivideInteger	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,2:FOR,0:DO,0:ELSE,0	40
0x400b3a0	              0x55	                                push rbp	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3a1	              0x53	                                push rbx	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3a2	    0x41b820000000	                           mov r8d, 0x20	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400b3a8	          0x4889fb	                            mov rbx, rdi	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3ab	          0x4889cd	                            mov rbp, rcx	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3ae	        0x4883ec18	                           sub rsp, 0x18	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3b2	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400b3b7	    0xc74424040000	                  mov dword [rsp + 4], 0	      1016	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3bf	    0x64488b042528	                mov rax, qword fs:[0x28]	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3c8	      0x4889442408	                mov qword [rsp + 8], rax	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3cd	            0x31c0	                            xor eax, eax	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3cf	      0xe8dceeffff	                    call sym.decDivideOp	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400b3d4	        0x8b742404	                mov esi, dword [rsp + 4]	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x400b3d8	            0x85f6	                           test esi, esi	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x400b3da	            0x7524	                           jne 0x400b400	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x400b3dc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3e1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3ea	          0x4889d8	                            mov rax, rbx	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3ed	            0x7549	                           jne 0x400b438	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3ef	        0x4883c418	                           add rsp, 0x18	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3f3	              0x5b	                                 pop rbx	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3f4	              0x5d	                                 pop rbp	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3f5	              0xc3	                                     ret	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b3f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400b400	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400b404	            0x741f	                            je 0x400b425	      7736	decNumber.c	FUNCTION_24	IF_1
0x400b406	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b40c	            0x7522	                           jne 0x400b430	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b40e	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b410	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b417	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b41d	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b421	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400b425	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b428	      0xe800000000	                          call 0x400b42d	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b42d	            0xebad	                           jmp 0x400b3dc	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b42f	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b430	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b436	            0xebed	                           jmp 0x400b425	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b438	      0xe800000000	                          call 0x400b43d	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
decNumberNormalize	SWITCH,0:functions,0:IF,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0	518
0x40069f0	            0x4157	                                push r15	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x40069f2	            0x4156	                                push r14	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x40069f4	            0x4155	                                push r13	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x40069f6	            0x4154	                                push r12	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x40069f8	              0x55	                                push rbp	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x40069f9	              0x53	                                push rbx	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x40069fa	          0x4889d5	                            mov rbp, rdx	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x40069fd	          0x4889fb	                            mov rbx, rdi	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006a00	        0x4883ec28	                           sub rsp, 0x28	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006a04	         0xfb64e08	               movzx ecx, byte [rsi + 8]	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4006a08	    0x64488b042528	                mov rax, qword fs:[0x28]	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006a11	      0x4889442418	             mov qword [rsp + 0x18], rax	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006a16	            0x31c0	                            xor eax, eax	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006a18	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2317	decNumber.c	FUNCTION_68	FUNCTION_37
0x4006a20	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2318	decNumber.c	FUNCTION_68	FUNCTION_37
0x4006a28	          0xf6c130	                           test cl, 0x30	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4006a2b	     0xf84bf020000	                            je 0x4006cf0	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4006a31	            0x31ff	                            xor edi, edi	      7689	decNumber.c	FUNCTION_23	IF_1
0x4006a33	          0xf6c110	                           test cl, 0x10	      7689	decNumber.c	FUNCTION_23	IF_1
0x4006a36	            0x740d	                            je 0x4006a45	      7689	decNumber.c	FUNCTION_23	IF_1
0x4006a38	    0xc744240c8000	      mov dword [rsp + 0xc], 0x40000080 	      7690	decNumber.c	FUNCTION_23	IF_1
0x4006a40	      0xbf80000040	                     mov edi, 0x40000080	      7690	decNumber.c	FUNCTION_23	IF_1
0x4006a45	            0x8b06	                    mov eax, dword [rsi]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4006a47	          0x3b4500	                    cmp eax, dword [rbp]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4006a4a	     0xf8e70030000	                           jle 0x4006dc0	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4006a50	          0x884b08	                  mov byte [rbx + 8], cl	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x4006a53	        0x448b4d00	                    mov r9d, dword [rbp]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a57	        0x4c8d530a	                    lea r10, [rbx + 0xa]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a5b	        0x4183f931	                           cmp r9d, 0x31	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a5f	     0xf8e33030000	                           jle 0x4006d98	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a65	        0x418d4902	                       lea ecx, [r9 + 2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a69	      0xba56555555	                     mov edx, 0x55555556	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a6e	            0x89c8	                            mov eax, ecx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a70	          0xc1f91f	                           sar ecx, 0x1f	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a73	            0xf7ea	                                imul edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a75	            0x29ca	                            sub edx, ecx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a77	          0x4863c2	                         movsxd rax, edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a7a	        0x4d8d0442	                   lea r8, [r10 + rax*2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006a7e	        0x488d460a	                    lea rax, [rsi + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006a82	          0x4d39c2	                             cmp r10, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006a85	     0xf8387050000	                           jae 0x4007012	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006a8b	        0x488d4b0c	                    lea rcx, [rbx + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006a8f	      0xba01000000	                              mov edx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006a94	        0x4c8d5810	                   lea r11, [rax + 0x10]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006a98	          0x4889d6	                            mov rsi, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006a9b	        0x4c8d7b0b	                    lea r15, [rbx + 0xb]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006a9f	          0x4829ce	                            sub rsi, rcx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aa2	          0x4c01c6	                             add rsi, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aa5	          0x48d1ee	                              shr rsi, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aa8	          0x4d39da	                            cmp r10, r11	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aab	        0x4c8d5b1a	                   lea r11, [rbx + 0x1a]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aaf	        0x410f93c5	                              setae r13b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ab3	        0x4c8d6601	                      lea r12, [rsi + 1]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ab7	          0x4c39d8	                            cmp rax, r11	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aba	        0x410f93c3	                              setae r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006abe	          0x4508dd	                           or r13b, r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ac1	     0xf8429060000	                            je 0x40070f0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ac7	          0x4d39c7	                             cmp r15, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aca	        0x410f96c5	                              setbe r13b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ace	        0x4983fc0e	                            cmp r12, 0xe	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ad2	        0x410f97c3	                               seta r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ad6	          0x4584dd	                         test r13b, r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ad9	     0xf8411060000	                            je 0x40070f0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006adf	          0x4d39c7	                             cmp r15, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ae2	        0x4c0f47e2	                          cmova r12, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ae6	          0x4c89d2	                            mov rdx, r10	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ae9	          0x83e20f	                            and edx, 0xf	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aec	          0x48d1ea	                              shr rdx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aef	          0x48f7da	                                 neg rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006af2	          0x83e207	                              and edx, 7	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006af5	          0x4c39e2	                            cmp rdx, r12	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006af8	        0x490f47d4	                          cmova rdx, r12	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006afc	          0x4885d2	                           test rdx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006aff	     0xf84db050000	                            je 0x40070e0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b05	        0x440fb718	                  movzx r11d, word [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b09	        0x4883fa01	                              cmp rdx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b0d	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b12	        0x4c8d5802	                      lea r11, [rax + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b16	            0x747e	                            je 0x4006b96	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b18	         0xfb74802	               movzx ecx, word [rax + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b1c	        0x4883fa02	                              cmp rdx, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b20	        0x4c8d5804	                      lea r11, [rax + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b24	        0x66894b0c	                mov word [rbx + 0xc], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b28	        0x488d4b0e	                    lea rcx, [rbx + 0xe]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b2c	            0x7468	                            je 0x4006b96	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b2e	         0xfb74804	               movzx ecx, word [rax + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b32	        0x4883fa03	                              cmp rdx, 3	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b36	        0x4c8d5806	                      lea r11, [rax + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b3a	        0x66894b0e	                mov word [rbx + 0xe], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b3e	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b42	            0x7452	                            je 0x4006b96	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b44	         0xfb74806	               movzx ecx, word [rax + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b48	        0x4883fa04	                              cmp rdx, 4	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b4c	        0x4c8d5808	                      lea r11, [rax + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b50	        0x66894b10	               mov word [rbx + 0x10], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b54	        0x488d4b12	                   lea rcx, [rbx + 0x12]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b58	            0x743c	                            je 0x4006b96	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b5a	         0xfb74808	               movzx ecx, word [rax + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b5e	        0x4883fa05	                              cmp rdx, 5	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b62	        0x4c8d580a	                    lea r11, [rax + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b66	        0x66894b12	               mov word [rbx + 0x12], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b6a	        0x488d4b14	                   lea rcx, [rbx + 0x14]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b6e	            0x7426	                            je 0x4006b96	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b70	         0xfb7480a	            movzx ecx, word [rax + 0xa] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b74	        0x4883fa07	                              cmp rdx, 7	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b78	        0x4c8d580c	                    lea r11, [rax + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b7c	        0x66894b14	               mov word [rbx + 0x14], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b80	        0x488d4b16	                   lea rcx, [rbx + 0x16]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b84	            0x7510	                           jne 0x4006b96	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b86	         0xfb7480c	            movzx ecx, word [rax + 0xc] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b8a	        0x4c8d580e	                    lea r11, [rax + 0xe]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b8e	        0x66894b16	               mov word [rbx + 0x16], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b92	        0x488d4b18	                   lea rcx, [rbx + 0x18]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b96	          0x4939d4	                            cmp r12, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b99	     0xf84d3000000	                            je 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006b9f	          0x4929d4	                            sub r12, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ba2	      0x4d8d6c24f8	                      lea r13, [r12 - 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006ba7	        0x49c1ed03	                              shr r13, 3	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bab	        0x4983c501	                              add r13, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006baf	          0x4d39c7	                             cmp r15, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bb2	    0x41bf00000000	                             mov r15d, 0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bb8	        0x490f47f7	                          cmova rsi, r15	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bbc	    0x4e8d34ed0000	                        lea r14, [r13*8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bc4	          0x4829d6	                            sub rsi, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bc7	        0x4883fe06	                              cmp rsi, 6	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bcb	            0x7632	                           jbe 0x4006bff	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bcd	          0x4801d2	                            add rdx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bd0	          0x4801d0	                            add rax, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bd3	      0x488d74130a	              lea rsi, [rbx + rdx + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bd8	            0x31d2	                            xor edx, edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006bda	      0xf30f6f0410	        movdqu xmm0, xmmword [rax + rdx]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bdf	        0x4983c701	                              add r15, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006be3	         0xf290416	        movaps xmmword [rsi + rdx], xmm0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006be7	        0x4883c210	                           add rdx, 0x10	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006beb	          0x4d39ef	                            cmp r15, r13	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bee	            0x72ea	                            jb 0x4006bda	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bf0	        0x4b8d0436	                    lea rax, [r14 + r14]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bf4	          0x4901c3	                            add r11, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bf7	          0x4801c1	                            add rcx, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bfa	          0x4d39f4	                            cmp r12, r14	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bfd	            0x7473	                            je 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006bff	        0x410fb703	                   movzx eax, word [r11]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c03	          0x668901	                      mov word [rcx], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c06	        0x488d4102	                      lea rax, [rcx + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c0a	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c0d	            0x7663	                           jbe 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c0f	      0x410fb74302	               movzx eax, word [r11 + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c14	        0x66894102	                  mov word [rcx + 2], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c18	        0x488d4104	                      lea rax, [rcx + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c1c	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c1f	            0x7651	                           jbe 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c21	      0x410fb74304	               movzx eax, word [r11 + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c26	        0x66894104	                  mov word [rcx + 4], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c2a	        0x488d4106	                      lea rax, [rcx + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c2e	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c31	            0x763f	                           jbe 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c33	      0x410fb74306	               movzx eax, word [r11 + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c38	        0x66894106	                  mov word [rcx + 6], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c3c	        0x488d4108	                      lea rax, [rcx + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c40	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c43	            0x762d	                           jbe 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c45	      0x410fb74308	               movzx eax, word [r11 + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c4a	        0x66894108	                  mov word [rcx + 8], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c4e	        0x488d410a	                    lea rax, [rcx + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c52	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c55	            0x761b	                           jbe 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c57	      0x410fb7430a	            movzx eax, word [r11 + 0xa] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c5c	        0x6689410a	                mov word [rcx + 0xa], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c60	        0x488d410c	                    lea rax, [rcx + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c64	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c67	            0x7609	                           jbe 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c69	      0x410fb7430c	            movzx eax, word [r11 + 0xc] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c6e	        0x6689410c	                mov word [rcx + 0xc], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006c72	        0x4183f931	                           cmp r9d, 0x31	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4006c76	          0x4963d1	                         movsxd rdx, r9d	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4006c79	     0xf8f81030000	                            jg 0x4007000	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4006c7f	     0xfb682000000	                   movzx eax, byte [rdx]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4006c86	          0x8d0440	                  lea eax, [rax + rax*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4006c89	          0x4139c1	                            cmp r9d, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4006c8c	            0x8903	                    mov dword [rbx], eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4006c8e	     0xf8c8c030000	                            jl 0x4007020	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4006c94	         0xfb64b08	               movzx ecx, byte [rbx + 8]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4006c98	          0x83e1ef	                     and ecx, 0xffffffef	      7714	decNumber.c	FUNCTION_23
0x4006c9b	            0x89fe	                            mov esi, edi	      7715	decNumber.c	FUNCTION_23
0x4006c9d	    0xc74304000000	                  mov dword [rbx + 4], 0	      7715	decNumber.c	FUNCTION_23
0x4006ca4	          0x83c920	                            or ecx, 0x20	      7714	decNumber.c	FUNCTION_23
0x4006ca7	            0x85f6	                           test esi, esi	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4006ca9	          0x884b08	                  mov byte [rbx + 8], cl	      7714	decNumber.c	FUNCTION_23
0x4006cac	     0xf84bb000000	                            je 0x4006d6d	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4006cb2	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4006cb6	            0x7423	                            je 0x4006cdb	      7736	decNumber.c	FUNCTION_24	IF_1
0x4006cb8	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006cbe	     0xf852c030000	                           jne 0x4006ff0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006cc4	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006cc6	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006ccd	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006cd3	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006cd7	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4006cdb	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4006cde	      0xe800000000	                          call 0x4006ce3	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4006ce3	      0xe985000000	                           jmp 0x4006d6d	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4006ce8	     0xf1f84000000	                   nop dword [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4006cf0	          0x884f08	                  mov byte [rdi + 8], cl	      6839	decNumber.c	FUNCTION_11
0x4006cf3	          0x8b4604	                mov eax, dword [rsi + 4]	      6840	decNumber.c	FUNCTION_11
0x4006cf6	        0x488d560a	                    lea rdx, [rsi + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006cfa	            0x8b0e	                    mov ecx, dword [rsi]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006cfc	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006d01	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006d06	          0x4889ee	                            mov rsi, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006d09	          0x894704	                mov dword [rdi + 4], eax	      6840	decNumber.c	FUNCTION_11
0x4006d0c	      0xe88fa6ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006d11	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4006d16	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4006d1b	          0x4889ee	                            mov rsi, rbp	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4006d1e	          0x4889df	                            mov rdi, rbx	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4006d21	      0xe8cabfffff	                    call sym.decFinalize	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4006d26	        0xf6430870	               test byte [rbx + 8], 0x70	      6596	decNumber.c	FUNCTION_6	IF_2
0x4006d2a	    0xc74424140000	               mov dword [rsp + 0x14], 0	      6595	decNumber.c	FUNCTION_6
0x4006d32	            0x752d	                           jne 0x4006d61	      6596	decNumber.c	FUNCTION_6	IF_2
0x4006d34	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      6597	decNumber.c	FUNCTION_6	IF_2
0x4006d38	            0xa801	                              test al, 1	      6597	decNumber.c	FUNCTION_6	IF_2
0x4006d3a	            0x7525	                           jne 0x4006d61	      6597	decNumber.c	FUNCTION_6	IF_2
0x4006d3c	          0x6685c0	                             test ax, ax	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d3f	            0x7509	                           jne 0x4006d4a	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d41	          0x833b01	                      cmp dword [rbx], 1	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d44	     0xf8456040000	                            je 0x40071a0	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d4a	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d4f	            0x31c9	                            xor ecx, ecx	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d51	      0xba01000000	                              mov edx, 1	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d56	          0x4889ee	                            mov rsi, rbp	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d59	          0x4889df	                            mov rdi, rbx	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d5c	      0xe8ffa4ffff	                 call sym.decTrim.part.2	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d61	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4006d65	            0x85f6	                           test esi, esi	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4006d67	     0xf8545ffffff	                           jne 0x4006cb2	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4006d6d	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d72	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d7b	          0x4889d8	                            mov rax, rbx	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d7e	     0xf852c040000	                           jne 0x40071b0	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d84	        0x4883c428	                           add rsp, 0x28	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d88	              0x5b	                                 pop rbx	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d89	              0x5d	                                 pop rbp	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d8a	            0x415c	                                 pop r12	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d8c	            0x415d	                                 pop r13	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d8e	            0x415e	                                 pop r14	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d90	            0x415f	                                 pop r15	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d92	              0xc3	                                     ret	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d93	       0xf1f440000	                   nop dword [rax + rax]	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4006d98	          0x4963d1	                         movsxd rdx, r9d	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006d9b	     0xfb682000000	                   movzx eax, byte [rdx]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006da2	        0x4d8d0442	                   lea r8, [r10 + rax*2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4006da6	        0x488d460a	                    lea rax, [rsi + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006daa	          0x4d39d0	                             cmp r8, r10	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006dad	     0xf87d8fcffff	                            ja 0x4006a8b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006db3	      0xe9c7feffff	                           jmp 0x4006c7f	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006db8	     0xf1f84000000	                   nop dword [rax + rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4006dc0	          0x4839f3	                            cmp rbx, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4006dc3	     0xf84cbfeffff	                            je 0x4006c94	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4006dc9	          0x884b08	                  mov byte [rbx + 8], cl	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4006dcc	          0x8b5604	                mov edx, dword [rsi + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4006dcf	            0x8903	                    mov dword [rbx], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4006dd1	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4006dd5	          0x895304	                mov dword [rbx + 4], edx	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4006dd8	        0x6689430a	                mov word [rbx + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4006ddc	          0x486306	                 movsxd rax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4006ddf	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4006de2	     0xf8ee8020000	                           jle 0x40070d0	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4006de8	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006deb	        0x4c8d430c	                     lea r8, [rbx + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4006def	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006df3	     0xf8e5f030000	                           jle 0x4007158	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006df9	          0x8d7802	                      lea edi, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006dfc	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e01	            0x89f8	                            mov eax, edi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e03	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e05	            0x89f8	                            mov eax, edi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e07	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e0a	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e0c	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e0f	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e12	        0x488d560c	                    lea rdx, [rsi + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e16	          0x4901c1	                             add r9, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4006e19	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e1c	     0xf86ae020000	                           jbe 0x40070d0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e22	        0x488d4e0e	                    lea rcx, [rsi + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e26	          0x4c89c8	                             mov rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e29	          0x4829c8	                            sub rax, rcx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e2c	        0x488d7801	                      lea rdi, [rax + 1]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e30	        0x488d461c	                   lea rax, [rsi + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e34	          0x48d1ef	                              shr rdi, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e37	        0x4883c701	                              add rdi, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e3b	          0x4939c0	                             cmp r8, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e3e	        0x488d431c	                   lea rax, [rbx + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e42	        0x410f93c2	                              setae r10b	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e46	          0x4839c2	                            cmp rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e49	           0xf93c0	                                setae al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e4c	          0x4108c2	                             or r10b, al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e4f	     0xf84e3020000	                            je 0x4007138	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e55	        0x4883ff0e	                            cmp rdi, 0xe	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e59	     0xf86d9020000	                           jbe 0x4007138	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e5f	          0x4889d0	                            mov rax, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e62	          0x83e00f	                            and eax, 0xf	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e65	          0x48d1e8	                              shr rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e68	          0x48f7d8	                                 neg rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e6b	          0x83e007	                              and eax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e6e	          0x4839f8	                            cmp rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e71	        0x480f47c7	                          cmova rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e75	          0x4885c0	                           test rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e78	     0xf84f2020000	                            je 0x4007170	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e7e	      0x440fb7560c	           movzx r10d, word [rsi + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e83	        0x4883f801	                              cmp rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e87	      0x664489530c	              mov word [rbx + 0xc], r10w	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e8c	        0x4c8d530e	                    lea r10, [rbx + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e90	            0x747e	                            je 0x4006f10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e92	         0xfb74e0e	            movzx ecx, word [rsi + 0xe] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e96	        0x4883f802	                              cmp rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e9a	        0x4c8d5310	                   lea r10, [rbx + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006e9e	        0x66894b0e	                mov word [rbx + 0xe], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ea2	        0x488d4e10	                   lea rcx, [rsi + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ea6	            0x7468	                            je 0x4006f10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ea8	         0xfb74e10	           movzx ecx, word [rsi + 0x10] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006eac	        0x4883f803	                              cmp rax, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006eb0	        0x4c8d5312	                   lea r10, [rbx + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006eb4	        0x66894b10	               mov word [rbx + 0x10], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006eb8	        0x488d4e12	                   lea rcx, [rsi + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ebc	            0x7452	                            je 0x4006f10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ebe	         0xfb74e12	           movzx ecx, word [rsi + 0x12] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ec2	        0x4883f804	                              cmp rax, 4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ec6	        0x4c8d5314	                   lea r10, [rbx + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006eca	        0x66894b12	               mov word [rbx + 0x12], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ece	        0x488d4e14	                   lea rcx, [rsi + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ed2	            0x743c	                            je 0x4006f10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ed4	         0xfb74e14	           movzx ecx, word [rsi + 0x14] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ed8	        0x4883f805	                              cmp rax, 5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006edc	        0x4c8d5316	                   lea r10, [rbx + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ee0	        0x66894b14	               mov word [rbx + 0x14], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ee4	        0x488d4e16	                   lea rcx, [rsi + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ee8	            0x7426	                            je 0x4006f10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006eea	         0xfb74e16	           movzx ecx, word [rsi + 0x16] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006eee	        0x4883f807	                              cmp rax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ef2	        0x4c8d5318	                   lea r10, [rbx + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ef6	        0x66894b16	               mov word [rbx + 0x16], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006efa	        0x488d4e18	                   lea rcx, [rsi + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006efe	            0x7510	                           jne 0x4006f10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f00	         0xfb74e18	           movzx ecx, word [rsi + 0x18] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f04	        0x4c8d531a	                   lea r10, [rbx + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f08	        0x66894b18	               mov word [rbx + 0x18], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f0c	        0x488d4e1a	                   lea rcx, [rsi + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f10	          0x4829c7	                            sub rdi, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f13	          0x4801c0	                            add rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f16	          0x4531e4	                          xor r12d, r12d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f19	        0x4c8d5ff8	                      lea r11, [rdi - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f1d	          0x4801c2	                            add rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f20	          0x4c01c0	                             add rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f23	          0x4531c0	                            xor r8d, r8d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f26	        0x49c1eb03	                              shr r11, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f2a	        0x4983c301	                              add r11, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f2e	    0x4a8d34dd0000	                        lea rsi, [r11*8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f36	    0x66420f6f0402	         movdqa xmm0, xmmword [rdx + r8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f3c	        0x4983c401	                              add r12, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f40	      0x420f110400	         movups xmmword [rax + r8], xmm0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f45	        0x4983c010	                            add r8, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f49	          0x4d39e3	                            cmp r11, r12	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f4c	            0x77e8	                            ja 0x4006f36	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f4e	        0x488d0436	                    lea rax, [rsi + rsi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f52	          0x4801c1	                            add rcx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f55	          0x4c01d0	                            add rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f58	          0x4839fe	                            cmp rsi, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f5b	     0xf846b010000	                            je 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f61	           0xfb711	                   movzx edx, word [rcx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f64	          0x668910	                      mov word [rax], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f67	        0x488d5102	                      lea rdx, [rcx + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f6b	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f6e	     0xf8658010000	                           jbe 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f74	         0xfb75102	               movzx edx, word [rcx + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f78	        0x66895002	                  mov word [rax + 2], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f7c	        0x488d5104	                      lea rdx, [rcx + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f80	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f83	     0xf8643010000	                           jbe 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f89	         0xfb75104	               movzx edx, word [rcx + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f8d	        0x66895004	                  mov word [rax + 4], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f91	        0x488d5106	                      lea rdx, [rcx + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f95	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f98	     0xf862e010000	                           jbe 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006f9e	         0xfb75106	               movzx edx, word [rcx + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fa2	        0x66895006	                  mov word [rax + 6], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fa6	        0x488d5108	                      lea rdx, [rcx + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006faa	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fad	     0xf8619010000	                           jbe 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fb3	         0xfb75108	               movzx edx, word [rcx + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fb7	        0x66895008	                  mov word [rax + 8], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fbb	        0x488d510a	                    lea rdx, [rcx + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fbf	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fc2	     0xf8604010000	                           jbe 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fc8	         0xfb7510a	            movzx edx, word [rcx + 0xa] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fcc	        0x6689500a	                mov word [rax + 0xa], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fd0	        0x488d510c	                    lea rdx, [rcx + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fd4	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fd7	     0xf86ef000000	                           jbe 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fdd	         0xfb7510c	            movzx edx, word [rcx + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fe1	        0x6689500c	                mov word [rax + 0xc], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fe5	      0xe9e2000000	                           jmp 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006fea	    0x660f1f440000	                    nop word [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4006ff0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006ff6	      0xe9e0fcffff	                           jmp 0x4006cdb	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006ffb	       0xf1f440000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4007000	        0x418d4902	                       lea ecx, [r9 + 2]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4007004	      0xba56555555	                     mov edx, 0x55555556	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4007009	            0x89c8	                            mov eax, ecx	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400700b	          0xc1f91f	                           sar ecx, 0x1f	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400700e	            0xf7ea	                                imul edx	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4007010	            0x29ca	                            sub edx, ecx	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4007012	          0x8d0452	                  lea eax, [rdx + rdx*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4007015	          0x4139c1	                            cmp r9d, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4007018	            0x8903	                    mov dword [rbx], eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400701a	     0xf8d74fcffff	                           jge 0x4006c94	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4007020	            0x89c2	                            mov edx, eax	      7628	decNumber.c	FUNCTION_21	IF_1
0x4007022	          0x4429ca	                            sub edx, r9d	      7628	decNumber.c	FUNCTION_21	IF_1
0x4007025	            0x39d0	                            cmp eax, edx	      7628	decNumber.c	FUNCTION_21	IF_1
0x4007027	     0xf8e93000000	                           jle 0x40070c0	      7628	decNumber.c	FUNCTION_21	IF_1
0x400702d	        0x4183f931	                           cmp r9d, 0x31	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007031	     0xf8ee1000000	                           jle 0x4007118	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007037	        0x418d4902	                       lea ecx, [r9 + 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400703b	      0xba56555555	                     mov edx, 0x55555556	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007040	            0x89c8	                            mov eax, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007042	          0xc1f91f	                           sar ecx, 0x1f	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007045	            0xf7ea	                                imul edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007047	            0x29ca	                            sub edx, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007049	          0x4863c2	                         movsxd rax, edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400704c	      0x488d4c00fe	                lea rcx, [rax + rax - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007051	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4007055	        0x498d340a	                    lea rsi, [r10 + rcx]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007059	          0x4489ca	                            mov edx, r9d	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400705c	            0x29c2	                            sub edx, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400705e	          0x83fa03	                              cmp edx, 3	      7640	decNumber.c	FUNCTION_21	IF_3
0x4007061	            0x7413	                            je 0x4007076	      7640	decNumber.c	FUNCTION_21	IF_3
0x4007063	           0xfb706	                   movzx eax, word [rsi]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4007066	          0x4c63f2	                         movsxd r14, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4007069	            0x31d2	                            xor edx, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x400706b	    0x42f734b50000	                       div dword [r14*4]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4007073	          0x668916	                      mov word [rsi], dx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4007076	          0x48d1f9	                              sar rcx, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4007079	          0x8d4101	                      lea eax, [rcx + 1]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400707c	        0x8d544901	              lea edx, [rcx + rcx*2 + 1]	      7763	decNumber.c	FUNCTION_25
0x4007080	            0x4898	                                    cdqe	      7762	decNumber.c	FUNCTION_25
0x4007082	      0x498d4442fe	              lea rax, [r10 + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x4007087	          0x4939c2	                            cmp r10, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400708a	            0x7724	                            ja 0x40070b0	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400708c	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400708f	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007092	     0xf85e8000000	                           jne 0x4007180	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4007098	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400709b	            0x7413	                            je 0x40070b0	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400709d	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40070a1	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x40070a4	          0x4939c2	                            cmp r10, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40070a7	            0x76e3	                           jbe 0x400708c	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40070a9	     0xf1f80000000	                         nop dword [rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40070b0	            0x8913	                    mov dword [rbx], edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x40070b2	      0xe9ddfbffff	                           jmp 0x4006c94	      7642	decNumber.c	FUNCTION_21	CALL_4
0x40070b7	    0x660f1f840000	                    nop word [rax + rax]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x40070c0	            0x31d2	                            xor edx, edx	      7634	decNumber.c	FUNCTION_21	IF_1
0x40070c2	    0xc70301000000	                      mov dword [rbx], 1	      7635	decNumber.c	FUNCTION_21	IF_1
0x40070c8	        0x6689530a	                mov word [rbx + 0xa], dx	      7634	decNumber.c	FUNCTION_21	IF_1
0x40070cc	         0xfb64b08	               movzx ecx, byte [rbx + 8]	      7634	decNumber.c	FUNCTION_21	IF_1
0x40070d0	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      7634	decNumber.c	FUNCTION_21	IF_1
0x40070d4	      0xe9bffbffff	                           jmp 0x4006c98	      7634	decNumber.c	FUNCTION_21	IF_1
0x40070d9	     0xf1f80000000	                         nop dword [rax]	      7634	decNumber.c	FUNCTION_21	IF_1
0x40070e0	          0x4c89d1	                            mov rcx, r10	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x40070e3	          0x4989c3	                            mov r11, rax	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x40070e6	      0xe9b4faffff	                           jmp 0x4006b9f	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x40070eb	       0xf1f440000	                   nop dword [rax + rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x40070f0	          0x4c89d2	                            mov rdx, r10	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x40070f3	       0xf1f440000	                   nop dword [rax + rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x40070f8	           0xfb708	                   movzx ecx, word [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40070fb	        0x4883c202	                              add rdx, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40070ff	        0x4883c002	                              add rax, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4007103	        0x66894afe	                  mov word [rdx - 2], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4007107	          0x4939d0	                             cmp r8, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400710a	            0x77ec	                            ja 0x40070f8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400710c	      0xe961fbffff	                           jmp 0x4006c72	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4007111	     0xf1f80000000	                         nop dword [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4007118	          0x4963c1	                         movsxd rax, r9d	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400711b	     0xfb690000000	                   movzx edx, byte [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007122	      0x488d4c12fe	                lea rcx, [rdx + rdx - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007127	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400712b	        0x498d340a	                    lea rsi, [r10 + rcx]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400712f	      0xe925ffffff	                           jmp 0x4007059	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007134	         0xf1f4000	                         nop dword [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4007138	           0xfb702	                   movzx eax, word [rdx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400713b	        0x4883c202	                              add rdx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400713f	        0x4983c002	                               add r8, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4007143	      0x66418940fe	                   mov word [r8 - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4007148	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400714b	            0x77eb	                            ja 0x4007138	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400714d	      0xe97affffff	                           jmp 0x40070cc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4007152	    0x660f1f440000	                    nop word [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4007158	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400715f	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4007162	      0xe9abfcffff	                           jmp 0x4006e12	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4007167	    0x660f1f840000	                    nop word [rax + rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4007170	          0x4d89c2	                             mov r10, r8	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4007173	          0x4889d1	                            mov rcx, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4007176	      0xe995fdffff	                           jmp 0x4006f10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400717b	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4007180	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4007184	     0xf8626ffffff	                           jbe 0x40070b0	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400718a	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400718d	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4007190	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4007194	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4007197	            0x8913	                    mov dword [rbx], edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4007199	      0xe9f6faffff	                           jmp 0x4006c94	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400719e	            0x6690	                                     nop	      7642	decNumber.c	FUNCTION_21	CALL_4
0x40071a0	    0xc74304000000	                  mov dword [rbx + 4], 0	      6599	decNumber.c	FUNCTION_6	IF_3
0x40071a7	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      6599	decNumber.c	FUNCTION_6	IF_3
0x40071ab	      0xe9b5fbffff	                           jmp 0x4006d65	      6599	decNumber.c	FUNCTION_6	IF_3
0x40071b0	      0xe800000000	                          call 0x40071b5	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
decNumberCompareSignal	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,2:FOR,0:DO,0:ELSE,0	73
0x4004f20	              0x55	                                push rbp	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f21	              0x53	                                push rbx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f22	          0x4889fb	                            mov rbx, rdi	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f25	          0x4889f7	                            mov rdi, rsi	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f28	          0x4889cd	                            mov rbp, rcx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f2b	          0x4889d6	                            mov rsi, rdx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f2e	        0x4883ec18	                           sub rsp, 0x18	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f32	    0x64488b042528	                mov rax, qword fs:[0x28]	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f3b	      0x4889442408	                mov qword [rsp + 8], rax	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f40	            0x31c0	                            xor eax, eax	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f42	         0xfb64708	               movzx eax, byte [rdi + 8]	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4004f46	    0xc74424040000	                  mov dword [rsp + 4], 0	       886	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f4e	           0xa4208	                   or al, byte [rdx + 8]	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4004f51	            0xa830	                           test al, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4004f53	            0x755b	                           jne 0x4004fb0	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4004f55	            0x31d2	                            xor edx, edx	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4004f57	      0xe804cdffff	                     call sym.decCompare	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4004f5c	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x4004f61	     0xf84b9000000	                            je 0x4005020	      6087	decNumber.c	FUNCTION_2	IF_23
0x4004f67	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004f69	            0x85c0	                           test eax, eax	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4004f6b	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004f6f	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004f76	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004f7c	        0x66894b0a	                mov word [rbx + 0xa], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004f80	            0x757e	                           jne 0x4005000	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4004f82	        0x8b742404	                mov esi, dword [rsp + 4]	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4004f86	            0x85f6	                           test esi, esi	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4004f88	            0x7546	                           jne 0x4004fd0	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4004f8a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f8f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f98	          0x4889d8	                            mov rax, rbx	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004f9b	     0xf8597000000	                           jne 0x4005038	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004fa1	        0x4883c418	                           add rsp, 0x18	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004fa5	              0x5b	                                 pop rbx	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004fa6	              0x5d	                                 pop rbp	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004fa7	              0xc3	                                     ret	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004fa8	     0xf1f84000000	                   nop dword [rax + rax]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4004fb0	      0x4c8d442404	                       lea r8, [rsp + 4]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4004fb5	          0x4889fe	                            mov rsi, rdi	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4004fb8	          0x4889df	                            mov rdi, rbx	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4004fbb	    0xc74424048000	        mov dword [rsp + 4], 0x40000080 	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x4004fc3	      0xe878d6ffff	                 call sym.decNaNs.isra.6	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4004fc8	        0x8b742404	                mov esi, dword [rsp + 4]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4004fcc	            0x85f6	                           test esi, esi	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4004fce	            0x74ba	                            je 0x4004f8a	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4004fd0	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4004fd4	            0x741f	                            je 0x4004ff5	      7736	decNumber.c	FUNCTION_24	IF_1
0x4004fd6	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4004fdc	            0x7552	                           jne 0x4005030	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4004fde	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004fe0	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004fe7	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004fed	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004ff1	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4004ff5	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4004ff8	      0xe800000000	                          call 0x4004ffd	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4004ffd	            0xeb8b	                           jmp 0x4004f8a	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4004fff	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005000	      0xba01000000	                              mov edx, 1	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4005005	        0x6689530a	                mov word [rbx + 0xa], dx	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4005009	     0xf8973ffffff	                           jns 0x4004f82	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400500f	        0xc6430880	                mov byte [rbx + 8], 0x80	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4005013	      0xe96affffff	                           jmp 0x4004f82	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4005018	     0xf1f84000000	                   nop dword [rax + rax]	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4005020	        0x8b742404	                mov esi, dword [rsp + 4]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005024	          0x83ce10	                            or esi, 0x10	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005027	        0x89742404	                mov dword [rsp + 4], esi	      6087	decNumber.c	FUNCTION_2	IF_23
0x400502b	            0xeba3	                           jmp 0x4004fd0	      6087	decNumber.c	FUNCTION_2	IF_23
0x400502d	           0xf1f00	                         nop dword [rax]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005030	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005036	            0xebbd	                           jmp 0x4004ff5	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005038	      0xe800000000	                          call 0x400503d	       890	decNumber.c	FUNCTION_68	FUNCTION_12
decNumberScaleB	SWITCH,0:functions,0:IF,6:WHILE,0:CALL,11:FOR,0:DO,0:ELSE,3	546
0x4008590	            0x4157	                                push r15	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008592	            0x4156	                                push r14	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008594	            0x4155	                                push r13	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008596	            0x4154	                                push r12	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008598	              0x55	                                push rbp	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008599	              0x53	                                push rbx	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x400859a	          0x4889cd	                            mov rbp, rcx	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x400859d	          0x4889fb	                            mov rbx, rdi	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40085a0	        0x4883ec28	                           sub rsp, 0x28	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40085a4	         0xfb64e08	               movzx ecx, byte [rsi + 8]	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x40085a8	    0x64488b042528	                mov rax, qword fs:[0x28]	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40085b1	      0x4889442418	             mov qword [rsp + 0x18], rax	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40085b6	            0x31c0	                            xor eax, eax	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40085b8	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2614	decNumber.c	FUNCTION_68	FUNCTION_43
0x40085c0	          0xf6c130	                           test cl, 0x30	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x40085c3	            0x750c	                           jne 0x40085d1	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x40085c5	         0xfb64208	               movzx eax, byte [rdx + 8]	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x40085c9	            0xa830	                           test al, 0x30	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x40085cb	     0xf84bf020000	                            je 0x4008890	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x40085d1	          0xf6c110	                           test cl, 0x10	      7689	decNumber.c	FUNCTION_23	IF_1
0x40085d4	     0xf843e030000	                            je 0x4008918	      7689	decNumber.c	FUNCTION_23	IF_1
0x40085da	    0xc74424108000	     mov dword [rsp + 0x10], 0x40000080 	      7690	decNumber.c	FUNCTION_23	IF_1
0x40085e2	      0xbf80000040	                     mov edi, 0x40000080	      7690	decNumber.c	FUNCTION_23	IF_1
0x40085e7	            0x8b06	                    mov eax, dword [rsi]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x40085e9	          0x3b4500	                    cmp eax, dword [rbp]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x40085ec	     0xf8e58030000	                           jle 0x400894a	      7700	decNumber.c	FUNCTION_23	CALL_1
0x40085f2	          0x884b08	                  mov byte [rbx + 8], cl	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x40085f5	        0x448b5500	                   mov r10d, dword [rbp]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x40085f9	        0x4c8d4b0a	                     lea r9, [rbx + 0xa]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x40085fd	        0x4183fa31	                          cmp r10d, 0x31	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008601	     0xf8f71050000	                            jg 0x4008b78	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008607	          0x4963d2	                        movsxd rdx, r10d	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400860a	     0xfb682000000	                   movzx eax, byte [rdx]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008611	        0x4d8d0441	                    lea r8, [r9 + rax*2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008615	        0x488d460a	                    lea rax, [rsi + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008619	          0x4d39c1	                              cmp r9, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400861c	     0xf83f4010000	                           jae 0x4008816	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008622	        0x488d4b0c	                    lea rcx, [rbx + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008626	      0xba01000000	                              mov edx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400862b	        0x4c8d5810	                   lea r11, [rax + 0x10]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400862f	          0x4889d6	                            mov rsi, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008632	        0x4c8d7b0b	                    lea r15, [rbx + 0xb]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008636	          0x4829ce	                            sub rsi, rcx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008639	          0x4c01c6	                             add rsi, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400863c	          0x48d1ee	                              shr rsi, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400863f	          0x4d39d9	                             cmp r9, r11	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008642	        0x4c8d5b1a	                   lea r11, [rbx + 0x1a]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008646	        0x410f93c5	                              setae r13b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400864a	        0x4c8d6601	                      lea r12, [rsi + 1]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400864e	          0x4c39d8	                            cmp rax, r11	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008651	        0x410f93c3	                              setae r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008655	          0x4508dd	                           or r13b, r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008658	     0xf844a060000	                            je 0x4008ca8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400865e	          0x4d39c7	                             cmp r15, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008661	        0x410f96c5	                              setbe r13b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008665	        0x4983fc0e	                            cmp r12, 0xe	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008669	        0x410f97c3	                               seta r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400866d	          0x4584dd	                         test r13b, r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008670	     0xf8432060000	                            je 0x4008ca8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008676	          0x4d39c7	                             cmp r15, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008679	        0x4c0f47e2	                          cmova r12, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400867d	          0x4c89ca	                             mov rdx, r9	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008680	          0x83e20f	                            and edx, 0xf	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008683	          0x48d1ea	                              shr rdx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008686	          0x48f7da	                                 neg rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008689	          0x83e207	                              and edx, 7	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400868c	          0x4c39e2	                            cmp rdx, r12	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400868f	        0x490f47d4	                          cmova rdx, r12	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008693	          0x4885d2	                           test rdx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008696	     0xf84fc050000	                            je 0x4008c98	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400869c	        0x440fb718	                  movzx r11d, word [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086a0	        0x4883fa01	                              cmp rdx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086a4	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086a9	        0x4c8d5802	                      lea r11, [rax + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086ad	            0x747e	                            je 0x400872d	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086af	         0xfb74802	               movzx ecx, word [rax + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086b3	        0x4883fa02	                              cmp rdx, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086b7	        0x4c8d5804	                      lea r11, [rax + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086bb	        0x66894b0c	                mov word [rbx + 0xc], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086bf	        0x488d4b0e	                    lea rcx, [rbx + 0xe]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086c3	            0x7468	                            je 0x400872d	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086c5	         0xfb74804	               movzx ecx, word [rax + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086c9	        0x4883fa03	                              cmp rdx, 3	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086cd	        0x4c8d5806	                      lea r11, [rax + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086d1	        0x66894b0e	                mov word [rbx + 0xe], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086d5	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086d9	            0x7452	                            je 0x400872d	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086db	         0xfb74806	               movzx ecx, word [rax + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086df	        0x4883fa04	                              cmp rdx, 4	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086e3	        0x4c8d5808	                      lea r11, [rax + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086e7	        0x66894b10	               mov word [rbx + 0x10], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086eb	        0x488d4b12	                   lea rcx, [rbx + 0x12]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086ef	            0x743c	                            je 0x400872d	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086f1	         0xfb74808	               movzx ecx, word [rax + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086f5	        0x4883fa05	                              cmp rdx, 5	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086f9	        0x4c8d580a	                    lea r11, [rax + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40086fd	        0x66894b12	               mov word [rbx + 0x12], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008701	        0x488d4b14	                   lea rcx, [rbx + 0x14]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008705	            0x7426	                            je 0x400872d	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008707	         0xfb7480a	            movzx ecx, word [rax + 0xa] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400870b	        0x4883fa07	                              cmp rdx, 7	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400870f	        0x4c8d580c	                    lea r11, [rax + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008713	        0x66894b14	               mov word [rbx + 0x14], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008717	        0x488d4b16	                   lea rcx, [rbx + 0x16]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400871b	            0x7510	                           jne 0x400872d	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400871d	         0xfb7480c	            movzx ecx, word [rax + 0xc] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008721	        0x4c8d580e	                    lea r11, [rax + 0xe]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008725	        0x66894b16	               mov word [rbx + 0x16], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008729	        0x488d4b18	                   lea rcx, [rbx + 0x18]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400872d	          0x4939d4	                            cmp r12, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008730	     0xf84d3000000	                            je 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008736	          0x4929d4	                            sub r12, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008739	      0x4d8d6c24f8	                      lea r13, [r12 - 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400873e	        0x49c1ed03	                              shr r13, 3	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008742	        0x4983c501	                              add r13, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008746	          0x4d39c7	                             cmp r15, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008749	    0x41bf00000000	                             mov r15d, 0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400874f	        0x490f47f7	                          cmova rsi, r15	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008753	    0x4e8d34ed0000	                        lea r14, [r13*8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400875b	          0x4829d6	                            sub rsi, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400875e	        0x4883fe06	                              cmp rsi, 6	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008762	            0x7632	                           jbe 0x4008796	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008764	          0x4801d2	                            add rdx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008767	          0x4801d0	                            add rax, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400876a	      0x488d74130a	              lea rsi, [rbx + rdx + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400876f	            0x31d2	                            xor edx, edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008771	      0xf30f6f0410	        movdqu xmm0, xmmword [rax + rdx]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008776	        0x4983c701	                              add r15, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400877a	         0xf290416	        movaps xmmword [rsi + rdx], xmm0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400877e	        0x4883c210	                           add rdx, 0x10	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008782	          0x4d39ef	                            cmp r15, r13	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008785	            0x72ea	                            jb 0x4008771	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008787	        0x4b8d0436	                    lea rax, [r14 + r14]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400878b	          0x4901c3	                            add r11, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400878e	          0x4801c1	                            add rcx, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008791	          0x4d39f4	                            cmp r12, r14	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008794	            0x7473	                            je 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008796	        0x410fb703	                   movzx eax, word [r11]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400879a	          0x668901	                      mov word [rcx], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400879d	        0x488d4102	                      lea rax, [rcx + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087a1	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087a4	            0x7663	                           jbe 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087a6	      0x410fb74302	               movzx eax, word [r11 + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087ab	        0x66894102	                  mov word [rcx + 2], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087af	        0x488d4104	                      lea rax, [rcx + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087b3	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087b6	            0x7651	                           jbe 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087b8	      0x410fb74304	               movzx eax, word [r11 + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087bd	        0x66894104	                  mov word [rcx + 4], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087c1	        0x488d4106	                      lea rax, [rcx + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087c5	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087c8	            0x763f	                           jbe 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087ca	      0x410fb74306	               movzx eax, word [r11 + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087cf	        0x66894106	                  mov word [rcx + 6], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087d3	        0x488d4108	                      lea rax, [rcx + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087d7	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087da	            0x762d	                           jbe 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087dc	      0x410fb74308	               movzx eax, word [r11 + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087e1	        0x66894108	                  mov word [rcx + 8], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087e5	        0x488d410a	                    lea rax, [rcx + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087e9	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087ec	            0x761b	                           jbe 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087ee	      0x410fb7430a	            movzx eax, word [r11 + 0xa] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087f3	        0x6689410a	                mov word [rcx + 0xa], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087f7	        0x488d410c	                    lea rax, [rcx + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087fb	          0x4939c0	                             cmp r8, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x40087fe	            0x7609	                           jbe 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008800	      0x410fb7430c	            movzx eax, word [r11 + 0xc] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008805	        0x6689410c	                mov word [rcx + 0xc], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008809	        0x4183fa31	                          cmp r10d, 0x31	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400880d	          0x4963d2	                        movsxd rdx, r10d	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008810	     0xf8f2a040000	                            jg 0x4008c40	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008816	     0xfb682000000	                   movzx eax, byte [rdx]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400881d	          0x8d0440	                  lea eax, [rax + rax*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008820	          0x4139c2	                           cmp r10d, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4008823	            0x8903	                    mov dword [rbx], eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008825	     0xf8c88030000	                            jl 0x4008bb3	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400882b	         0xfb64b08	               movzx ecx, byte [rbx + 8]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400882f	          0x83e1ef	                     and ecx, 0xffffffef	      7714	decNumber.c	FUNCTION_23
0x4008832	    0xc74304000000	                  mov dword [rbx + 4], 0	      7715	decNumber.c	FUNCTION_23
0x4008839	            0x89fe	                            mov esi, edi	      7715	decNumber.c	FUNCTION_23
0x400883b	          0x83c920	                            or ecx, 0x20	      7714	decNumber.c	FUNCTION_23
0x400883e	          0x884b08	                  mov byte [rbx + 8], cl	      7714	decNumber.c	FUNCTION_23
0x4008841	            0x85f6	                           test esi, esi	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4008843	            0x7420	                            je 0x4008865	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4008845	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4008849	            0x7412	                            je 0x400885d	      7736	decNumber.c	FUNCTION_24	IF_1
0x400884b	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4008851	     0xf849e000000	                            je 0x40088f5	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4008857	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400885d	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4008860	      0xe800000000	                          call 0x4008865	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4008865	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400886a	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008873	          0x4889d8	                            mov rax, rbx	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008876	     0xf8535050000	                           jne 0x4008db1	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400887c	        0x4883c428	                           add rsp, 0x28	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008880	              0x5b	                                 pop rbx	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008881	              0x5d	                                 pop rbp	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008882	            0x415c	                                 pop r12	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008884	            0x415d	                                 pop r13	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008886	            0x415e	                                 pop r14	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008888	            0x415f	                                 pop r15	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400888a	              0xc3	                                     ret	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400888b	       0xf1f440000	                   nop dword [rax + rax]	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4008890	            0xa840	                           test al, 0x40	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4008892	            0x7554	                           jne 0x40088e8	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4008894	          0x8b4a04	                mov ecx, dword [rdx + 4]	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4008897	            0x85c9	                           test ecx, ecx	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4008899	            0x754d	                           jne 0x40088e8	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x400889b	          0x4889d7	                            mov rdi, rdx	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x400889e	      0x4889742408	                mov qword [rsp + 8], rsi	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x40088a3	      0xe8e87bffff	                      call sym.decGetInt	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x40088a8	          0x4189c4	                           mov r12d, eax	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x40088ab	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40088b1	          0x83f801	                              cmp eax, 1	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40088b4	            0x7632	                           jbe 0x40088e8	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40088b6	    0x4181fc000000	                    cmp r12d, 0x80000000	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40088bd	            0x7429	                            je 0x40088e8	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40088bf	          0x4489e0	                           mov eax, r12d	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088c2	      0x488b742408	                mov rsi, qword [rsp + 8]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088c7	          0xc1f81f	                           sar eax, 0x1f	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088ca	            0x89c2	                            mov edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088cc	          0x4431e2	                           xor edx, r12d	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088cf	            0x29c2	                            sub edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088d1	          0x8b4504	                mov eax, dword [rbp + 4]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088d4	           0x34500	                    add eax, dword [rbp]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088d7	             0x1c0	                            add eax, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088d9	            0x39c2	                            cmp edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088db	     0xf8e4e040000	                           jle 0x4008d2f	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088e1	     0xf1f80000000	                         nop dword [rax]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40088e8	    0xc74424108000	           mov dword [rsp + 0x10], 0x80 	      2626	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3
0x40088f0	      0xbe80000000	                           mov esi, 0x80	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40088f5	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40088f7	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40088fe	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008904	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008908	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400890c	      0xe94cffffff	                           jmp 0x400885d	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4008911	     0xf1f80000000	                         nop dword [rax]	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4008918	          0x4885d2	                           test rdx, rdx	      7691	decNumber.c	FUNCTION_23	IF_2
0x400891b	     0xf842f040000	                            je 0x4008d50	      7691	decNumber.c	FUNCTION_23	IF_2
0x4008921	         0xfb64208	               movzx eax, byte [rdx + 8]	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4008925	            0xa810	                           test al, 0x10	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4008927	     0xf8433030000	                            je 0x4008c60	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400892d	          0x4889d6	                            mov rsi, rdx	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4008930	            0x89c1	                            mov ecx, eax	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4008932	    0xc74424108000	     mov dword [rsp + 0x10], 0x40000080 	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400893a	            0x8b06	                    mov eax, dword [rsi]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400893c	          0x3b4500	                    cmp eax, dword [rbp]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400893f	      0xbf80000040	                     mov edi, 0x40000080	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4008944	     0xf8fa8fcffff	                            jg 0x40085f2	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400894a	          0x4839f3	                            cmp rbx, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400894d	     0xf84d8feffff	                            je 0x400882b	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4008953	          0x884b08	                  mov byte [rbx + 8], cl	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4008956	          0x8b5604	                mov edx, dword [rsi + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4008959	            0x8903	                    mov dword [rbx], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x400895b	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400895f	          0x895304	                mov dword [rbx + 4], edx	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4008962	        0x6689430a	                mov word [rbx + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4008966	          0x486306	                 movsxd rax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4008969	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400896c	     0xf8e16030000	                           jle 0x4008c88	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4008972	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008975	        0x4c8d430c	                     lea r8, [rbx + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4008979	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400897d	     0xf8e9d030000	                           jle 0x4008d20	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008983	          0x8d7802	                      lea edi, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008986	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400898b	            0x89f8	                            mov eax, edi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400898d	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400898f	            0x89f8	                            mov eax, edi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008991	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008994	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008996	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008999	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400899c	        0x488d560c	                    lea rdx, [rsi + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089a0	          0x4901c1	                             add r9, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40089a3	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089a6	     0xf86dc020000	                           jbe 0x4008c88	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089ac	        0x488d4e0e	                    lea rcx, [rsi + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089b0	          0x4c89c8	                             mov rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089b3	          0x4829c8	                            sub rax, rcx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089b6	        0x488d7801	                      lea rdi, [rax + 1]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089ba	        0x488d461c	                   lea rax, [rsi + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089be	          0x48d1ef	                              shr rdi, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089c1	        0x4883c701	                              add rdi, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089c5	          0x4939c0	                             cmp r8, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089c8	        0x488d431c	                   lea rax, [rbx + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089cc	        0x410f93c2	                              setae r10b	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089d0	          0x4839c2	                            cmp rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089d3	           0xf93c0	                                setae al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089d6	          0x4108c2	                             or r10b, al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089d9	     0xf8421030000	                            je 0x4008d00	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089df	        0x4883ff0e	                            cmp rdi, 0xe	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089e3	     0xf8617030000	                           jbe 0x4008d00	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089e9	          0x4c89c0	                             mov rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089ec	          0x83e00f	                            and eax, 0xf	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089ef	          0x48d1e8	                              shr rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089f2	          0x48f7d8	                                 neg rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089f5	          0x83e007	                              and eax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089f8	          0x4839f8	                            cmp rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089fb	        0x480f47c7	                          cmova rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40089ff	          0x4885c0	                           test rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a02	     0xf8458030000	                            je 0x4008d60	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a08	      0x440fb7560c	           movzx r10d, word [rsi + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a0d	        0x4883f801	                              cmp rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a11	      0x664489530c	              mov word [rbx + 0xc], r10w	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a16	        0x4c8d530e	                    lea r10, [rbx + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a1a	            0x747e	                            je 0x4008a9a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a1c	         0xfb74e0e	            movzx ecx, word [rsi + 0xe] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a20	        0x4883f802	                              cmp rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a24	        0x4c8d5310	                   lea r10, [rbx + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a28	        0x66894b0e	                mov word [rbx + 0xe], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a2c	        0x488d4e10	                   lea rcx, [rsi + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a30	            0x7468	                            je 0x4008a9a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a32	         0xfb74e10	           movzx ecx, word [rsi + 0x10] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a36	        0x4883f803	                              cmp rax, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a3a	        0x4c8d5312	                   lea r10, [rbx + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a3e	        0x66894b10	               mov word [rbx + 0x10], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a42	        0x488d4e12	                   lea rcx, [rsi + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a46	            0x7452	                            je 0x4008a9a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a48	         0xfb74e12	           movzx ecx, word [rsi + 0x12] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a4c	        0x4883f804	                              cmp rax, 4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a50	        0x4c8d5314	                   lea r10, [rbx + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a54	        0x66894b12	               mov word [rbx + 0x12], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a58	        0x488d4e14	                   lea rcx, [rsi + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a5c	            0x743c	                            je 0x4008a9a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a5e	         0xfb74e14	           movzx ecx, word [rsi + 0x14] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a62	        0x4883f805	                              cmp rax, 5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a66	        0x4c8d5316	                   lea r10, [rbx + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a6a	        0x66894b14	               mov word [rbx + 0x14], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a6e	        0x488d4e16	                   lea rcx, [rsi + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a72	            0x7426	                            je 0x4008a9a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a74	         0xfb74e16	           movzx ecx, word [rsi + 0x16] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a78	        0x4883f807	                              cmp rax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a7c	        0x4c8d5318	                   lea r10, [rbx + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a80	        0x66894b16	               mov word [rbx + 0x16], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a84	        0x488d4e18	                   lea rcx, [rsi + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a88	            0x7510	                           jne 0x4008a9a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a8a	         0xfb74e18	           movzx ecx, word [rsi + 0x18] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a8e	        0x4c8d531a	                   lea r10, [rbx + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a92	        0x66894b18	               mov word [rbx + 0x18], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a96	        0x488d4e1a	                   lea rcx, [rsi + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a9a	          0x4829c7	                            sub rdi, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008a9d	          0x4801c0	                            add rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008aa0	          0x4531e4	                          xor r12d, r12d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008aa3	        0x4c8d5ff8	                      lea r11, [rdi - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008aa7	          0x4801c2	                            add rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008aaa	          0x4c01c0	                             add rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008aad	          0x4531c0	                            xor r8d, r8d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ab0	        0x49c1eb03	                              shr r11, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ab4	        0x4983c301	                              add r11, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ab8	    0x4a8d34dd0000	                        lea rsi, [r11*8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ac0	    0xf3420f6f0402	         movdqu xmm0, xmmword [rdx + r8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ac6	        0x4983c401	                              add r12, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008aca	      0x420f290400	         movaps xmmword [rax + r8], xmm0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008acf	        0x4983c010	                            add r8, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ad3	          0x4d39e3	                            cmp r11, r12	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ad6	            0x77e8	                            ja 0x4008ac0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ad8	        0x488d0436	                    lea rax, [rsi + rsi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008adc	          0x4801c1	                            add rcx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008adf	          0x4c01d0	                            add rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ae2	          0x4839fe	                            cmp rsi, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008ae5	     0xf8499010000	                            je 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008aeb	           0xfb711	                   movzx edx, word [rcx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008aee	          0x668910	                      mov word [rax], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008af1	        0x488d5102	                      lea rdx, [rcx + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008af5	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008af8	     0xf8686010000	                           jbe 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008afe	         0xfb75102	               movzx edx, word [rcx + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b02	        0x66895002	                  mov word [rax + 2], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b06	        0x488d5104	                      lea rdx, [rcx + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b0a	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b0d	     0xf8671010000	                           jbe 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b13	         0xfb75104	               movzx edx, word [rcx + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b17	        0x66895004	                  mov word [rax + 4], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b1b	        0x488d5106	                      lea rdx, [rcx + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b1f	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b22	     0xf865c010000	                           jbe 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b28	         0xfb75106	               movzx edx, word [rcx + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b2c	        0x66895006	                  mov word [rax + 6], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b30	        0x488d5108	                      lea rdx, [rcx + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b34	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b37	     0xf8647010000	                           jbe 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b3d	         0xfb75108	               movzx edx, word [rcx + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b41	        0x66895008	                  mov word [rax + 8], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b45	        0x488d510a	                    lea rdx, [rcx + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b49	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b4c	     0xf8632010000	                           jbe 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b52	         0xfb7510a	            movzx edx, word [rcx + 0xa] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b56	        0x6689500a	                mov word [rax + 0xa], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b5a	        0x488d510c	                    lea rdx, [rcx + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b5e	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b61	     0xf861d010000	                           jbe 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b67	         0xfb7510c	            movzx edx, word [rcx + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b6b	        0x6689500c	                mov word [rax + 0xc], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b6f	      0xe910010000	                           jmp 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b74	         0xf1f4000	                         nop dword [rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008b78	        0x418d4a02	                      lea ecx, [r10 + 2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008b7c	      0xba56555555	                     mov edx, 0x55555556	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008b81	            0x89c8	                            mov eax, ecx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008b83	          0xc1f91f	                           sar ecx, 0x1f	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008b86	            0xf7ea	                                imul edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008b88	            0x29ca	                            sub edx, ecx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008b8a	          0x4863c2	                         movsxd rax, edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008b8d	        0x4d8d0441	                    lea r8, [r9 + rax*2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008b91	        0x488d460a	                    lea rax, [rsi + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008b95	          0x4d39c1	                              cmp r9, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008b98	     0xf8284faffff	                            jb 0x4008622	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008b9e	          0x8d0452	                  lea eax, [rdx + rdx*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008ba1	     0xf1f80000000	                         nop dword [rax]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008ba8	          0x4139c2	                           cmp r10d, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4008bab	            0x8903	                    mov dword [rbx], eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008bad	     0xf8d78fcffff	                           jge 0x400882b	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4008bb3	            0x89c2	                            mov edx, eax	      7628	decNumber.c	FUNCTION_21	IF_1
0x4008bb5	          0x4429d2	                           sub edx, r10d	      7628	decNumber.c	FUNCTION_21	IF_1
0x4008bb8	            0x39d0	                            cmp eax, edx	      7628	decNumber.c	FUNCTION_21	IF_1
0x4008bba	     0xf8eb8000000	                           jle 0x4008c78	      7628	decNumber.c	FUNCTION_21	IF_1
0x4008bc0	        0x4183fa31	                          cmp r10d, 0x31	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008bc4	     0xf8f06010000	                            jg 0x4008cd0	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008bca	          0x4963c2	                        movsxd rax, r10d	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008bcd	     0xfb690000000	                   movzx edx, byte [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008bd4	      0x488d4c12fe	                lea rcx, [rdx + rdx - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008bd9	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4008bdd	        0x498d3409	                     lea rsi, [r9 + rcx]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008be1	          0x4489d2	                           mov edx, r10d	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4008be4	            0x29c2	                            sub edx, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4008be6	          0x83fa03	                              cmp edx, 3	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008be9	            0x7413	                            je 0x4008bfe	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008beb	           0xfb706	                   movzx eax, word [rsi]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008bee	          0x4c63f2	                         movsxd r14, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008bf1	            0x31d2	                            xor edx, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008bf3	    0x42f734b50000	                       div dword [r14*4]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008bfb	          0x668916	                      mov word [rsi], dx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008bfe	          0x48d1f9	                              sar rcx, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c01	          0x8d4101	                      lea eax, [rcx + 1]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c04	        0x8d544901	              lea edx, [rcx + rcx*2 + 1]	      7763	decNumber.c	FUNCTION_25
0x4008c08	            0x4898	                                    cdqe	      7762	decNumber.c	FUNCTION_25
0x4008c0a	      0x498d4441fe	               lea rax, [r9 + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x4008c0f	          0x4939c1	                             cmp r9, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008c12	            0x7724	                            ja 0x4008c38	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008c14	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4008c17	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4008c1a	     0xf8550010000	                           jne 0x4008d70	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4008c20	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4008c23	            0x7413	                            je 0x4008c38	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4008c25	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008c29	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4008c2c	          0x4939c1	                             cmp r9, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008c2f	            0x76e3	                           jbe 0x4008c14	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008c31	     0xf1f80000000	                         nop dword [rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008c38	            0x8913	                    mov dword [rbx], edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c3a	      0xe9ecfbffff	                           jmp 0x400882b	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c3f	              0x90	                                     nop	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c40	        0x418d4a02	                      lea ecx, [r10 + 2]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c44	      0xba56555555	                     mov edx, 0x55555556	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c49	            0x89c8	                            mov eax, ecx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c4b	          0xc1f91f	                           sar ecx, 0x1f	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c4e	            0xf7ea	                                imul edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c50	            0x29ca	                            sub edx, ecx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008c52	          0x8d0452	                  lea eax, [rdx + rdx*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008c55	      0xe94effffff	                           jmp 0x4008ba8	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008c5a	    0x660f1f440000	                    nop word [rax + rax]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4008c60	            0x89cf	                            mov edi, ecx	      7696	decNumber.c	FUNCTION_23	IF_4
0x4008c62	          0x83e720	                           and edi, 0x20	      7696	decNumber.c	FUNCTION_23	IF_4
0x4008c65	           0xf44c8	                          cmove ecx, eax	      7696	decNumber.c	FUNCTION_23	IF_4
0x4008c68	        0x480f44f2	                          cmove rsi, rdx	      7696	decNumber.c	FUNCTION_23	IF_4
0x4008c6c	            0x31ff	                            xor edi, edi	      7696	decNumber.c	FUNCTION_23	IF_4
0x4008c6e	      0xe974f9ffff	                           jmp 0x40085e7	      7696	decNumber.c	FUNCTION_23	IF_4
0x4008c73	       0xf1f440000	                   nop dword [rax + rax]	      7696	decNumber.c	FUNCTION_23	IF_4
0x4008c78	            0x31f6	                            xor esi, esi	      7634	decNumber.c	FUNCTION_21	IF_1
0x4008c7a	    0xc70301000000	                      mov dword [rbx], 1	      7635	decNumber.c	FUNCTION_21	IF_1
0x4008c80	        0x6689730a	                mov word [rbx + 0xa], si	      7634	decNumber.c	FUNCTION_21	IF_1
0x4008c84	         0xfb64b08	               movzx ecx, byte [rbx + 8]	      7634	decNumber.c	FUNCTION_21	IF_1
0x4008c88	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      7634	decNumber.c	FUNCTION_21	IF_1
0x4008c8c	      0xe99efbffff	                           jmp 0x400882f	      7634	decNumber.c	FUNCTION_21	IF_1
0x4008c91	     0xf1f80000000	                         nop dword [rax]	      7634	decNumber.c	FUNCTION_21	IF_1
0x4008c98	          0x4c89c9	                             mov rcx, r9	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008c9b	          0x4989c3	                            mov r11, rax	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008c9e	      0xe993faffff	                           jmp 0x4008736	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008ca3	       0xf1f440000	                   nop dword [rax + rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008ca8	          0x4c89ca	                             mov rdx, r9	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008cab	       0xf1f440000	                   nop dword [rax + rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4008cb0	           0xfb708	                   movzx ecx, word [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008cb3	        0x4883c202	                              add rdx, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008cb7	        0x4883c002	                              add rax, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008cbb	        0x66894afe	                  mov word [rdx - 2], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008cbf	          0x4939d0	                             cmp r8, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008cc2	            0x77ec	                            ja 0x4008cb0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008cc4	      0xe940fbffff	                           jmp 0x4008809	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008cc9	     0xf1f80000000	                         nop dword [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4008cd0	        0x418d4a02	                      lea ecx, [r10 + 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008cd4	      0xba56555555	                     mov edx, 0x55555556	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008cd9	            0x89c8	                            mov eax, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008cdb	          0xc1f91f	                           sar ecx, 0x1f	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008cde	            0xf7ea	                                imul edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008ce0	            0x29ca	                            sub edx, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008ce2	          0x4863c2	                         movsxd rax, edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008ce5	      0x488d4c00fe	                lea rcx, [rax + rax - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008cea	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4008cee	        0x498d3409	                     lea rsi, [r9 + rcx]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008cf2	      0xe9eafeffff	                           jmp 0x4008be1	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008cf7	    0x660f1f840000	                    nop word [rax + rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008d00	           0xfb702	                   movzx eax, word [rdx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d03	        0x4883c202	                              add rdx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d07	        0x4983c002	                               add r8, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d0b	      0x66418940fe	                   mov word [r8 - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d10	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d13	            0x77eb	                            ja 0x4008d00	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d15	      0xe96affffff	                           jmp 0x4008c84	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d1a	    0x660f1f440000	                    nop word [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d20	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008d27	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008d2a	      0xe96dfcffff	                           jmp 0x400899c	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4008d2f	          0x4889df	                            mov rdi, rbx	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x4008d32	      0xe800000000	                          call 0x4008d37	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x4008d37	        0xf6430840	               test byte [rbx + 8], 0x40	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008d3b	            0x7451	                            je 0x4008d8e	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008d3d	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008d41	      0xe9fbfaffff	                           jmp 0x4008841	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008d46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008d50	            0x31ff	                            xor edi, edi	      7691	decNumber.c	FUNCTION_23	IF_2
0x4008d52	      0xe990f8ffff	                           jmp 0x40085e7	      7691	decNumber.c	FUNCTION_23	IF_2
0x4008d57	    0x660f1f840000	                    nop word [rax + rax]	      7691	decNumber.c	FUNCTION_23	IF_2
0x4008d60	          0x4d89c2	                             mov r10, r8	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4008d63	          0x4889d1	                            mov rcx, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d66	      0xe92ffdffff	                           jmp 0x4008a9a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d6b	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4008d70	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4008d74	     0xf86befeffff	                           jbe 0x4008c38	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4008d7a	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4008d7d	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4008d80	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4008d84	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4008d87	            0x8913	                    mov dword [rbx], edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008d89	      0xe99dfaffff	                           jmp 0x400882b	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008d8e	        0x44016304	               add dword [rbx + 4], r12d	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4008d92	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4008d97	      0x488d542414	                   lea rdx, [rsp + 0x14]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4008d9c	          0x4889ee	                            mov rsi, rbp	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4008d9f	          0x4889df	                            mov rdi, rbx	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4008da2	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2638	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4008daa	      0xe8419fffff	                    call sym.decFinalize	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4008daf	            0xeb8c	                           jmp 0x4008d3d	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4008db1	      0xe800000000	                          call 0x4008db6	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
decFinalize	SWITCH,0:functions,0:IF,9:WHILE,0:CALL,9:FOR,0:DO,0:ELSE,0	258
0x4002cf0	            0x4156	                                push r14	      7269	decNumber.c	FUNCTION_15
0x4002cf2	            0x4155	                                push r13	      7269	decNumber.c	FUNCTION_15
0x4002cf4	          0x4989d5	                            mov r13, rdx	      7269	decNumber.c	FUNCTION_15
0x4002cf7	            0x4154	                                push r12	      7269	decNumber.c	FUNCTION_15
0x4002cf9	              0x55	                                push rbp	      7269	decNumber.c	FUNCTION_15
0x4002cfa	          0x4989cc	                            mov r12, rcx	      7269	decNumber.c	FUNCTION_15
0x4002cfd	              0x53	                                push rbx	      7269	decNumber.c	FUNCTION_15
0x4002cfe	          0x4889f5	                            mov rbp, rsi	      7269	decNumber.c	FUNCTION_15
0x4002d01	          0x4889fb	                            mov rbx, rdi	      7269	decNumber.c	FUNCTION_15
0x4002d04	        0x4883ec40	                           sub rsp, 0x40	      7269	decNumber.c	FUNCTION_15
0x4002d08	        0x448b4608	                mov r8d, dword [rsi + 8]	      7271	decNumber.c	FUNCTION_15
0x4002d0c	          0x8b4f04	                mov ecx, dword [rdi + 4]	      7279	decNumber.c	FUNCTION_15	IF_1
0x4002d0f	    0x64488b042528	                mov rax, qword fs:[0x28]	      7269	decNumber.c	FUNCTION_15
0x4002d18	      0x4889442438	             mov qword [rsp + 0x38], rax	      7269	decNumber.c	FUNCTION_15
0x4002d1d	            0x31c0	                            xor eax, eax	      7269	decNumber.c	FUNCTION_15
0x4002d1f	          0x486307	                 movsxd rax, dword [rdi]	      7271	decNumber.c	FUNCTION_15
0x4002d22	          0x4489c2	                            mov edx, r8d	      7271	decNumber.c	FUNCTION_15
0x4002d25	            0x29c2	                            sub edx, eax	      7271	decNumber.c	FUNCTION_15
0x4002d27	          0x83c201	                              add edx, 1	      7271	decNumber.c	FUNCTION_15
0x4002d2a	            0x39ca	                            cmp edx, ecx	      7279	decNumber.c	FUNCTION_15	IF_1
0x4002d2c	     0xf8c7e000000	                            jl 0x4002db0	      7279	decNumber.c	FUNCTION_15	IF_1
0x4002d32	            0x7e3c	                           jle 0x4002d70	      7283	decNumber.c	FUNCTION_15	IF_1	IF_2
0x4002d34	          0x442b06	                    sub r8d, dword [rsi]	      7439	decNumber.c	FUNCTION_18
0x4002d37	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002d3c	        0x458d7001	                      lea r14d, [r8 + 1]	      7439	decNumber.c	FUNCTION_18
0x4002d40	     0xf859a010000	                           jne 0x4002ee0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002d46	          0x83f801	                              cmp eax, 1	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002d49	     0xf8591010000	                           jne 0x4002ee0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002d4f	        0xf6470870	               test byte [rdi + 8], 0x70	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002d53	     0xf8587010000	                           jne 0x4002ee0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002d59	          0x4439f1	                           cmp ecx, r14d	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002d5c	     0xf8dac000000	                           jge 0x4002e0e	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002d62	        0x44897304	               mov dword [rbx + 4], r14d	      7450	decNumber.c	FUNCTION_18	FUNCTION_1
0x4002d66	      0xe99b000000	                           jmp 0x4002e06	      7450	decNumber.c	FUNCTION_18	FUNCTION_1
0x4002d6b	       0xf1f440000	                   nop dword [rax + rax]	      7450	decNumber.c	FUNCTION_18	FUNCTION_1
0x4002d70	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002d75	      0xba01000000	                              mov edx, 1	      7290	decNumber.c	FUNCTION_15	IF_1
0x4002d7a	      0xc644242800	                mov byte [rsp + 0x28], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002d7f	      0x668954242a	               mov word [rsp + 0x2a], dx	      7290	decNumber.c	FUNCTION_15	IF_1
0x4002d84	    0xc74424200100	               mov dword [rsp + 0x20], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002d8c	      0x4489442424	             mov dword [rsp + 0x24], r8d	      7291	decNumber.c	FUNCTION_15	IF_1
0x4002d91	         0xfb65708	               movzx edx, byte [rdi + 8]	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002d95	     0xf8595000000	                           jne 0x4002e30	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002d9b	          0x83f801	                              cmp eax, 1	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002d9e	     0xf858c000000	                           jne 0x4002e30	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002da4	          0xf6c270	                           test dl, 0x70	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002da7	     0xf8583000000	                           jne 0x4002e30	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002dad	           0xf1f00	                         nop dword [rax]	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002db0	        0x418b5500	                    mov edx, dword [r13]	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4002db4	            0x85d2	                           test edx, edx	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4002db6	     0xf8504020000	                           jne 0x4002fc0	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4002dbc	          0x8b5504	                mov edx, dword [rbp + 4]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4002dbf	          0x8b7b04	                mov edi, dword [rbx + 4]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4002dc2	            0x89d1	                            mov ecx, edx	      7308	decNumber.c	FUNCTION_15	IF_6
0x4002dc4	          0x2b4d00	                    sub ecx, dword [rbp]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4002dc7	          0x83c101	                              add ecx, 1	      7308	decNumber.c	FUNCTION_15	IF_6
0x4002dca	            0x39cf	                            cmp edi, ecx	      7308	decNumber.c	FUNCTION_15	IF_6
0x4002dcc	            0x7e40	                           jle 0x4002e0e	      7308	decNumber.c	FUNCTION_15	IF_6
0x4002dce	            0x8b03	                    mov eax, dword [rbx]	      7312	decNumber.c	FUNCTION_15	IF_7
0x4002dd0	            0x29c2	                            sub edx, eax	      7312	decNumber.c	FUNCTION_15	IF_7
0x4002dd2	          0x83c201	                              add edx, 1	      7312	decNumber.c	FUNCTION_15	IF_7
0x4002dd5	            0x39d7	                            cmp edi, edx	      7312	decNumber.c	FUNCTION_15	IF_7
0x4002dd7	     0xf8ffb010000	                            jg 0x4002fd8	      7312	decNumber.c	FUNCTION_15	IF_7
0x4002ddd	        0x807d1800	                cmp byte [rbp + 0x18], 0	      7317	decNumber.c	FUNCTION_15	IF_8
0x4002de1	            0x742b	                            je 0x4002e0e	      7317	decNumber.c	FUNCTION_15	IF_8
0x4002de3	            0x89fd	                            mov ebp, edi	      7320	decNumber.c	FUNCTION_15
0x4002de5	            0x29cd	                            sub ebp, ecx	      7320	decNumber.c	FUNCTION_15
0x4002de7	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4002dec	            0x7509	                           jne 0x4002df7	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4002dee	          0x83f801	                              cmp eax, 1	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4002df1	     0xf84b9020000	                            je 0x40030b0	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4002df7	            0x85ed	                           test ebp, ebp	      6684	decNumber.c	FUNCTION_8	IF_1
0x4002df9	     0xf85a9010000	                           jne 0x4002fa8	      6684	decNumber.c	FUNCTION_8	IF_1
0x4002dff	            0x8903	                    mov dword [rbx], eax	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002e01	            0x29ef	                            sub edi, ebp	      7326	decNumber.c	FUNCTION_15
0x4002e03	          0x897b04	                mov dword [rbx + 4], edi	      7326	decNumber.c	FUNCTION_15
0x4002e06	    0x41810c240004	                   or dword [r12], 0x400	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4002e0e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7329	decNumber.c	FUNCTION_15
0x4002e13	    0x644833042528	                xor rax, qword fs:[0x28]	      7329	decNumber.c	FUNCTION_15
0x4002e1c	     0xf859d020000	                           jne 0x40030bf	      7329	decNumber.c	FUNCTION_15
0x4002e22	        0x4883c440	                           add rsp, 0x40	      7329	decNumber.c	FUNCTION_15
0x4002e26	              0x5b	                                 pop rbx	      7329	decNumber.c	FUNCTION_15
0x4002e27	              0x5d	                                 pop rbp	      7329	decNumber.c	FUNCTION_15
0x4002e28	            0x415c	                                 pop r12	      7329	decNumber.c	FUNCTION_15
0x4002e2a	            0x415d	                                 pop r13	      7329	decNumber.c	FUNCTION_15
0x4002e2c	            0x415e	                                 pop r14	      7329	decNumber.c	FUNCTION_15
0x4002e2e	              0xc3	                                     ret	      7329	decNumber.c	FUNCTION_15
0x4002e2f	              0x90	                                     nop	      7329	decNumber.c	FUNCTION_15
0x4002e30	          0x83e240	                           and edx, 0x40	      6188	decNumber.c	FUNCTION_3	IF_11
0x4002e33	     0xf8577ffffff	                           jne 0x4002db0	      6188	decNumber.c	FUNCTION_3	IF_11
0x4002e39	          0x4139c8	                            cmp r8d, ecx	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4002e3c	     0xf8dbe010000	                           jge 0x4003000	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4002e42	          0x4429c1	                            sub ecx, r8d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e45	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e48	          0x4189c8	                            mov r8d, ecx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e4b	     0xf8e73020000	                           jle 0x40030c4	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e51	          0x8d7002	                      lea esi, [rax + 2]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e54	      0xb956555555	                     mov ecx, 0x55555556	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e59	        0x4c8d4b0a	                     lea r9, [rbx + 0xa]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x4002e5d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6199	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4002e62	    0x41beffffffff	                    mov r14d, 0xffffffff	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4002e68	            0x89f0	                            mov eax, esi	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e6a	            0xf7e9	                                imul ecx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e6c	            0x89f0	                            mov eax, esi	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e6e	          0xc1f81f	                           sar eax, 0x1f	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e71	            0x89d1	                            mov ecx, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e73	            0x29c1	                            sub ecx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e75	      0xb801000000	                              mov eax, 1	      6204	decNumber.c	FUNCTION_3	CALL_10
0x4002e7a	     0xfb6b0000000	                   movzx esi, byte [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e81	        0x4883c70a	                            add rdi, 0xa	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e85	          0x4c89ca	                             mov rdx, r9	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e88	      0xe8d3ebffff	                 call sym.decUnitCompare	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4002e8d	      0x3d00000080	                     cmp eax, 0x80000000	      6206	decNumber.c	FUNCTION_3	IF_15
0x4002e92	     0xf8458010000	                            je 0x4002ff0	      6206	decNumber.c	FUNCTION_3	IF_15
0x4002e98	        0x410fafc6	                          imul eax, r14d	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002e9c	        0x418b5500	                    mov edx, dword [r13]	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002ea0	            0x85c0	                           test eax, eax	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002ea2	     0xf850cffffff	                           jne 0x4002db4	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002ea8	            0x89d0	                            mov eax, edx	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002eaa	          0xc1e81f	                           shr eax, 0x1f	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002ead	            0x84c0	                             test al, al	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002eaf	     0xf84fffeffff	                            je 0x4002db4	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002eb5	          0x4c89e1	                            mov rcx, r12	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002eb8	          0x4889ee	                            mov rsi, rbp	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002ebb	          0x4889df	                            mov rdi, rbx	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002ebe	      0xe86df2ffff	           call sym.decApplyRound.part.9	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4002ec3	          0x8b4500	                    mov eax, dword [rbp]	      7439	decNumber.c	FUNCTION_18
0x4002ec6	        0x448b7508	               mov r14d, dword [rbp + 8]	      7439	decNumber.c	FUNCTION_18
0x4002eca	          0x83e801	                              sub eax, 1	      7439	decNumber.c	FUNCTION_18
0x4002ecd	          0x4129c6	                           sub r14d, eax	      7439	decNumber.c	FUNCTION_18
0x4002ed0	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002ed5	     0xf8475010000	                            je 0x4003050	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002edb	       0xf1f440000	                   nop dword [rax + rax]	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4002ee0	        0x418b0424	                    mov eax, dword [r12]	      7456	decNumber.c	FUNCTION_18
0x4002ee4	            0x89c2	                            mov edx, eax	      7456	decNumber.c	FUNCTION_18
0x4002ee6	          0x80ce10	                             or dh, 0x10	      7456	decNumber.c	FUNCTION_18
0x4002ee9	        0x41891424	                    mov dword [r12], edx	      7456	decNumber.c	FUNCTION_18
0x4002eed	          0x4489f2	                           mov edx, r14d	      7457	decNumber.c	FUNCTION_18
0x4002ef0	          0x2b5304	                sub edx, dword [rbx + 4]	      7457	decNumber.c	FUNCTION_18
0x4002ef3	            0x85d2	                           test edx, edx	      7458	decNumber.c	FUNCTION_18	IF_3
0x4002ef5	     0xf8e95000000	                           jle 0x4002f90	      7458	decNumber.c	FUNCTION_18	IF_3
0x4002efb	        0x488b4500	                    mov rax, qword [rbp]	      7468	decNumber.c	FUNCTION_18
0x4002eff	            0x8b0b	                    mov ecx, dword [rbx]	      7469	decNumber.c	FUNCTION_18
0x4002f01	          0x4d89e1	                             mov r9, r12	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4002f04	          0x4d89e8	                             mov r8, r13	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4002f07	          0x4889e6	                            mov rsi, rsp	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4002f0a	          0x4889df	                            mov rdi, rbx	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4002f0d	        0x48890424	                    mov qword [rsp], rax	      7468	decNumber.c	FUNCTION_18
0x4002f11	        0x488b4508	                mov rax, qword [rbp + 8]	      7468	decNumber.c	FUNCTION_18
0x4002f15	      0x4889442408	                mov qword [rsp + 8], rax	      7468	decNumber.c	FUNCTION_18
0x4002f1a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      7468	decNumber.c	FUNCTION_18
0x4002f1e	      0x4889442410	             mov qword [rsp + 0x10], rax	      7468	decNumber.c	FUNCTION_18
0x4002f23	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      7468	decNumber.c	FUNCTION_18
0x4002f26	        0x488d6b0a	                    lea rbp, [rbx + 0xa]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4002f2a	        0x29542408	                sub dword [rsp + 8], edx	      7470	decNumber.c	FUNCTION_18
0x4002f2e	        0x89442418	             mov dword [rsp + 0x18], eax	      7468	decNumber.c	FUNCTION_18
0x4002f32	            0x89c8	                            mov eax, ecx	      7469	decNumber.c	FUNCTION_18
0x4002f34	            0x29d0	                            sub eax, edx	      7469	decNumber.c	FUNCTION_18
0x4002f36	          0x4889ea	                            mov rdx, rbp	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4002f39	          0x890424	                    mov dword [rsp], eax	      7469	decNumber.c	FUNCTION_18
0x4002f3c	      0xe85fe4ffff	             call sym.decSetCoeff.isra.3	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4002f41	        0x418b5500	                    mov edx, dword [r13]	      7473	decNumber.c	FUNCTION_18	CALL_3
0x4002f45	            0x85d2	                           test edx, edx	      7069	decNumber.c	FUNCTION_13	IF_1
0x4002f47	     0xf854b010000	                           jne 0x4003098	      7069	decNumber.c	FUNCTION_13	IF_1
0x4002f4d	        0x418b0424	                    mov eax, dword [r12]	      7477	decNumber.c	FUNCTION_18	IF_5
0x4002f51	            0xa820	                           test al, 0x20	      7477	decNumber.c	FUNCTION_18	IF_5
0x4002f53	            0x7407	                            je 0x4002f5c	      7477	decNumber.c	FUNCTION_18	IF_5
0x4002f55	          0x80cc20	                             or ah, 0x20	      7477	decNumber.c	FUNCTION_18	IF_5
0x4002f58	        0x41890424	                    mov dword [r12], eax	      7477	decNumber.c	FUNCTION_18	IF_5
0x4002f5c	        0x443b7304	               cmp r14d, dword [rbx + 4]	      7481	decNumber.c	FUNCTION_18	IF_6
0x4002f60	     0xf8c12010000	                            jl 0x4003078	      7481	decNumber.c	FUNCTION_18	IF_6
0x4002f66	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4002f6b	     0xf859dfeffff	                           jne 0x4002e0e	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4002f71	          0x833b01	                      cmp dword [rbx], 1	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4002f74	     0xf8594feffff	                           jne 0x4002e0e	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4002f7a	        0xf6430870	               test byte [rbx + 8], 0x70	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4002f7e	     0xf8482feffff	                            je 0x4002e06	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4002f84	      0xe985feffff	                           jmp 0x4002e0e	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4002f89	     0xf1f80000000	                         nop dword [rax]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4002f90	            0xa820	                           test al, 0x20	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4002f92	     0xf8476feffff	                            je 0x4002e0e	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4002f98	          0x80cc30	                             or ah, 0x30	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4002f9b	        0x41890424	                    mov dword [r12], eax	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4002f9f	      0xe96afeffff	                           jmp 0x4002e0e	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4002fa4	         0xf1f4000	                         nop dword [rax]	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4002fa8	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fac	            0x89ea	                            mov edx, ebp	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fae	            0x89c6	                            mov esi, eax	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fb0	      0xe8ebdcffff	          call sym.decShiftToMost.part.0	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fb5	          0x8b7b04	                mov edi, dword [rbx + 4]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fb8	      0xe942feffff	                           jmp 0x4002dff	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fbd	           0xf1f00	                         nop dword [rax]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fc0	          0x4c89e1	                            mov rcx, r12	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fc3	          0x4889ee	                            mov rsi, rbp	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fc6	          0x4889df	                            mov rdi, rbx	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fc9	      0xe862f1ffff	           call sym.decApplyRound.part.9	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fce	      0xe9e9fdffff	                           jmp 0x4002dbc	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fd3	       0xf1f440000	                   nop dword [rax + rax]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4002fd8	          0x4c89e2	                            mov rdx, r12	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4002fdb	          0x4889ee	                            mov rsi, rbp	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4002fde	          0x4889df	                            mov rdi, rbx	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4002fe1	      0xe8aad3ffff	                 call sym.decSetOverflow	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4002fe6	      0xe923feffff	                           jmp 0x4002e0e	      7314	decNumber.c	FUNCTION_15	IF_7
0x4002feb	       0xf1f440000	                   nop dword [rax + rax]	      7314	decNumber.c	FUNCTION_15	IF_7
0x4002ff0	      0x41830c2410	                    or dword [r12], 0x10	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4002ff5	      0xe914feffff	                           jmp 0x4002e0e	      7295	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4002ffa	    0x660f1f440000	                    nop word [rax + rax]	      7295	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4003000	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003005	          0x4129c8	                            sub r8d, ecx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003008	          0x4889df	                            mov rdi, rbx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400300b	    0x41be01000000	                             mov r14d, 1	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003011	      0xba01000000	                              mov edx, 1	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003016	        0x4983c10a	                             add r9, 0xa	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400301a	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400301d	     0xfb68a000000	                   movzx ecx, byte [rdx]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003024	     0xf8e50feffff	                           jle 0x4002e7a	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400302a	        0x448d5002	                     lea r10d, [rax + 2]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400302e	      0xbe56555555	                     mov esi, 0x55555556	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003033	          0x4489d0	                           mov eax, r10d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003036	            0xf7ee	                                imul esi	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003038	          0x4489d0	                           mov eax, r10d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400303b	          0xc1f81f	                           sar eax, 0x1f	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400303e	            0x89d6	                            mov esi, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003040	            0x29c6	                            sub esi, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003042	      0xe93afeffff	                           jmp 0x4002e81	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003047	    0x660f1f840000	                    nop word [rax + rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4003050	          0x833b01	                      cmp dword [rbx], 1	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4003053	     0xf8587feffff	                           jne 0x4002ee0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4003059	        0xf6430870	               test byte [rbx + 8], 0x70	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400305d	     0xf857dfeffff	                           jne 0x4002ee0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4003063	        0x443b7304	               cmp r14d, dword [rbx + 4]	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4003067	     0xf8ea1fdffff	                           jle 0x4002e0e	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400306d	      0xe9f0fcffff	                           jmp 0x4002d62	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4003072	    0x660f1f440000	                    nop word [rax + rax]	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4003078	            0x8b33	                    mov esi, dword [rbx]	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400307a	      0xba01000000	                              mov edx, 1	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x400307f	          0x4889ef	                            mov rdi, rbp	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4003082	      0xe819dcffff	          call sym.decShiftToMost.part.0	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4003087	        0x836b0401	                  sub dword [rbx + 4], 1	      7483	decNumber.c	FUNCTION_18	IF_6
0x400308b	            0x8903	                    mov dword [rbx], eax	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400308d	      0xe9d4feffff	                           jmp 0x4002f66	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4003092	    0x660f1f440000	                    nop word [rax + rax]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4003098	          0x4c89e1	                            mov rcx, r12	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400309b	          0x4889e6	                            mov rsi, rsp	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x400309e	          0x4889df	                            mov rdi, rbx	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x40030a1	      0xe88af0ffff	           call sym.decApplyRound.part.9	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x40030a6	      0xe9a2feffff	                           jmp 0x4002f4d	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x40030ab	       0xf1f440000	                   nop dword [rax + rax]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x40030b0	        0xf6430870	               test byte [rbx + 8], 0x70	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x40030b4	     0xf8447fdffff	                            je 0x4002e01	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x40030ba	      0xe938fdffff	                           jmp 0x4002df7	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x40030bf	      0xe800000000	                          call 0x40030c4	      7329	decNumber.c	FUNCTION_15
0x40030c4	          0x4863d0	                         movsxd rdx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40030c7	          0x4989d9	                             mov r9, rbx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40030ca	        0x4183ceff	                     or r14d, 0xffffffff	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x40030ce	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6199	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x40030d3	      0xb801000000	                              mov eax, 1	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40030d8	      0xe939ffffff	                           jmp 0x4003016	      6203	decNumber.c	FUNCTION_3	CALL_9
decNumberToIntegralValue	SWITCH,0:functions,0:IF,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0	394
0x400dd30	            0x4154	                                push r12	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd32	              0x55	                                push rbp	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd33	          0x4889d5	                            mov rbp, rdx	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd36	              0x53	                                push rbx	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd37	          0x4889fb	                            mov rbx, rdi	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd3a	        0x4883ec70	                           sub rsp, 0x70	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd3e	          0x488b3a	                    mov rdi, qword [rdx]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd41	        0x488b4a08	                mov rcx, qword [rdx + 8]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd45	    0x64488b042528	                mov rax, qword fs:[0x28]	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd4e	      0x4889442468	             mov qword [rsp + 0x68], rax	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd53	            0x31c0	                            xor eax, eax	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd55	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd59	          0x8b5218	            mov edx, dword [rdx + 0x18] 	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd5c	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd61	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd66	    0xc74424080000	                  mov dword [rsp + 8], 0	      3176	decNumber.c	FUNCTION_68	FUNCTION_47
0x400dd6e	      0x4889442420	             mov qword [rsp + 0x20], rax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd73	         0xfb64608	               movzx eax, byte [rsi + 8]	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x400dd77	        0x89542428	             mov dword [rsp + 0x28], edx	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd7b	    0xc74424200000	               mov dword [rsp + 0x20], 0	      3205	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dd83	            0xa870	                           test al, 0x70	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x400dd85	     0xf8485000000	                            je 0x400de10	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x400dd8b	            0xa840	                           test al, 0x40	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x400dd8d	     0xf859d020000	                           jne 0x400e030	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x400dd93	      0x4c8d442408	                       lea r8, [rsp + 8]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x400dd98	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x400dd9d	            0x31d2	                            xor edx, edx	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x400dd9f	          0x4889df	                            mov rdi, rbx	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x400dda2	      0xe89948ffff	                 call sym.decNaNs.isra.6	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x400dda7	        0x8b742408	                mov esi, dword [rsp + 8]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x400ddab	            0x85f6	                           test esi, esi	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400ddad	            0x7433	                            je 0x400dde2	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400ddaf	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400ddb3	            0x7423	                            je 0x400ddd8	      7736	decNumber.c	FUNCTION_24	IF_1
0x400ddb5	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400ddbb	     0xf852f050000	                           jne 0x400e2f0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400ddc1	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400ddc3	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400ddca	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400ddd0	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400ddd4	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400ddd8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400dddd	      0xe800000000	                          call 0x400dde2	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400dde2	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x400dde6	      0x2580000000	                           and eax, 0x80	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x400ddeb	           0x94514	              or dword [rbp + 0x14], eax	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x400ddee	          0x4889d8	                            mov rax, rbx	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400ddf1	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400ddf6	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400ddff	     0xf8523050000	                           jne 0x400e328	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400de05	        0x4883c470	                           add rsp, 0x70	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400de09	              0x5b	                                 pop rbx	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400de0a	              0x5d	                                 pop rbp	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400de0b	            0x415c	                                 pop r12	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400de0d	              0xc3	                                     ret	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400de0e	            0x6690	                                     nop	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x400de10	        0x448b4604	                mov r8d, dword [rsi + 4]	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x400de14	          0x4585c0	                           test r8d, r8d	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x400de17	     0xf8893030000	                            js 0x400e1b0	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x400de1d	          0x4839f3	                            cmp rbx, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400de20	            0x74c0	                            je 0x400dde2	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400de22	          0x884308	                  mov byte [rbx + 8], al	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x400de25	            0x8b06	                    mov eax, dword [rsi]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x400de27	        0x44894304	                mov dword [rbx + 4], r8d	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400de2b	            0x8903	                    mov dword [rbx], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x400de2d	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400de31	        0x6689430a	                mov word [rbx + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400de35	          0x486306	                 movsxd rax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400de38	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400de3b	            0x7ea5	                           jle 0x400dde2	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400de3d	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400de40	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400de44	        0x4c8d460a	                     lea r8, [rsi + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400de48	     0xf8f22040000	                            jg 0x400e270	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400de4e	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400de55	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400de58	        0x488d560c	                    lea rdx, [rsi + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de5c	          0x4901c0	                             add r8, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400de5f	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de62	     0xf867affffff	                           jbe 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de68	        0x4c8d4e0e	                     lea r9, [rsi + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de6c	          0x4c89c0	                             mov rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de6f	          0x4c29c8	                             sub rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de72	        0x4c8d5001	                      lea r10, [rax + 1]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de76	        0x488d431c	                   lea rax, [rbx + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de7a	          0x49d1ea	                              shr r10, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de7d	        0x4983c201	                              add r10, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de81	          0x4839c2	                            cmp rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de84	        0x488d461c	                   lea rax, [rsi + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de88	           0xf93c1	                                setae cl	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de8b	          0x4839c7	                            cmp rdi, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de8e	           0xf93c0	                                setae al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de91	             0x8c1	                               or cl, al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de93	     0xf8497030000	                            je 0x400e230	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de99	        0x4983fa0e	                            cmp r10, 0xe	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400de9d	     0xf868d030000	                           jbe 0x400e230	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dea3	          0x4889d0	                            mov rax, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dea6	          0x83e00f	                            and eax, 0xf	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dea9	          0x48d1e8	                              shr rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400deac	          0x48f7d8	                                 neg rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400deaf	          0x83e007	                              and eax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400deb2	          0x4c39d0	                            cmp rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400deb5	        0x490f47c2	                          cmova rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400deb9	          0x4885c0	                           test rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400debc	     0xf843e040000	                            je 0x400e300	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dec2	         0xfb74e0c	            movzx ecx, word [rsi + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dec6	        0x4883f801	                              cmp rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400deca	        0x66894b0c	                mov word [rbx + 0xc], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dece	        0x488d4b0e	                    lea rcx, [rbx + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400ded2	            0x747e	                            je 0x400df52	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400ded4	         0xfb74e0e	            movzx ecx, word [rsi + 0xe] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400ded8	        0x4883f802	                              cmp rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dedc	        0x4c8d4e10	                    lea r9, [rsi + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dee0	        0x66894b0e	                mov word [rbx + 0xe], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dee4	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dee8	            0x7468	                            je 0x400df52	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400deea	         0xfb74e10	           movzx ecx, word [rsi + 0x10] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400deee	        0x4883f803	                              cmp rax, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400def2	        0x4c8d4e12	                    lea r9, [rsi + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400def6	        0x66894b10	               mov word [rbx + 0x10], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400defa	        0x488d4b12	                   lea rcx, [rbx + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400defe	            0x7452	                            je 0x400df52	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df00	         0xfb74e12	           movzx ecx, word [rsi + 0x12] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df04	        0x4883f804	                              cmp rax, 4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df08	        0x4c8d4e14	                    lea r9, [rsi + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df0c	        0x66894b12	               mov word [rbx + 0x12], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df10	        0x488d4b14	                   lea rcx, [rbx + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df14	            0x743c	                            je 0x400df52	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df16	         0xfb74e14	           movzx ecx, word [rsi + 0x14] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df1a	        0x4883f805	                              cmp rax, 5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df1e	        0x4c8d4e16	                    lea r9, [rsi + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df22	        0x66894b14	               mov word [rbx + 0x14], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df26	        0x488d4b16	                   lea rcx, [rbx + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df2a	            0x7426	                            je 0x400df52	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df2c	         0xfb74e16	           movzx ecx, word [rsi + 0x16] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df30	        0x4883f807	                              cmp rax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df34	        0x4c8d4e18	                    lea r9, [rsi + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df38	        0x66894b16	               mov word [rbx + 0x16], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df3c	        0x488d4b18	                   lea rcx, [rbx + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df40	            0x7510	                           jne 0x400df52	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df42	         0xfb74e18	           movzx ecx, word [rsi + 0x18] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df46	        0x4c8d4e1a	                    lea r9, [rsi + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df4a	        0x66894b18	               mov word [rbx + 0x18], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df4e	        0x488d4b1a	                   lea rcx, [rbx + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df52	          0x4929c2	                            sub r10, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df55	          0x4801c0	                            add rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df58	          0x4531e4	                          xor r12d, r12d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df5b	        0x4d8d5af8	                      lea r11, [r10 - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df5f	          0x4801c2	                            add rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df62	          0x4801f8	                            add rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df65	            0x31ff	                            xor edi, edi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df67	        0x49c1eb03	                              shr r11, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df6b	        0x4983c301	                              add r11, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df6f	    0x4a8d34dd0000	                        lea rsi, [r11*8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df77	      0x660f6f043a	        movdqa xmm0, xmmword [rdx + rdi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df7c	        0x4983c401	                              add r12, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df80	         0xf110438	        movups xmmword [rax + rdi], xmm0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df84	        0x4883c710	                           add rdi, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df88	          0x4d39dc	                            cmp r12, r11	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df8b	            0x72ea	                            jb 0x400df77	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df8d	        0x488d0436	                    lea rax, [rsi + rsi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df91	          0x4901c1	                             add r9, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df94	          0x4801c8	                            add rax, rcx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df97	          0x4939f2	                            cmp r10, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400df9a	     0xf8442feffff	                            je 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfa0	        0x410fb711	                    movzx edx, word [r9]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfa4	          0x668910	                      mov word [rax], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfa7	        0x498d5102	                       lea rdx, [r9 + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfab	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfae	     0xf862efeffff	                           jbe 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfb4	      0x410fb75102	                movzx edx, word [r9 + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfb9	        0x66895002	                  mov word [rax + 2], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfbd	        0x498d5104	                       lea rdx, [r9 + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfc1	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfc4	     0xf8618feffff	                           jbe 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfca	      0x410fb75104	                movzx edx, word [r9 + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfcf	        0x66895004	                  mov word [rax + 4], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfd3	        0x498d5106	                       lea rdx, [r9 + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfd7	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfda	     0xf8602feffff	                           jbe 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfe0	      0x410fb75106	                movzx edx, word [r9 + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfe5	        0x66895006	                  mov word [rax + 6], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfe9	        0x498d5108	                       lea rdx, [r9 + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfed	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dff0	     0xf86ecfdffff	                           jbe 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dff6	      0x410fb75108	                movzx edx, word [r9 + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dffb	        0x66895008	                  mov word [rax + 8], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400dfff	        0x498d510a	                     lea rdx, [r9 + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e003	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e006	     0xf86d6fdffff	                           jbe 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e00c	      0x410fb7510a	              movzx edx, word [r9 + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e011	        0x6689500a	                mov word [rax + 0xa], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e015	        0x498d510c	                     lea rdx, [r9 + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e019	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e01c	     0xf86c0fdffff	                           jbe 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e022	      0x410fb7510c	              movzx edx, word [r9 + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e027	        0x6689500c	                mov word [rax + 0xc], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e02b	      0xe9b2fdffff	                           jmp 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e030	          0x4839f3	                            cmp rbx, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400e033	     0xf84a9fdffff	                            je 0x400dde2	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400e039	          0x884308	                  mov byte [rbx + 8], al	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e03c	          0x8b4604	                mov eax, dword [rsi + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e03f	          0x894304	                mov dword [rbx + 4], eax	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e042	            0x8b06	                    mov eax, dword [rsi]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e044	            0x8903	                    mov dword [rbx], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e046	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e04a	        0x6689430a	                mov word [rbx + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e04e	          0x486306	                 movsxd rax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e051	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e054	     0xf8e88fdffff	                           jle 0x400dde2	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e05a	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e05d	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e061	        0x4c8d460a	                     lea r8, [rsi + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e065	     0xf8f65020000	                            jg 0x400e2d0	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e06b	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e072	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e075	        0x488d560c	                    lea rdx, [rsi + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e079	          0x4901c0	                             add r8, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e07c	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e07f	     0xf865dfdffff	                           jbe 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e085	        0x4c8d4e0e	                     lea r9, [rsi + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e089	          0x4c89c0	                             mov rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e08c	          0x4c29c8	                             sub rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e08f	        0x4c8d5001	                      lea r10, [rax + 1]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e093	        0x488d461c	                   lea rax, [rsi + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e097	          0x49d1ea	                              shr r10, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e09a	        0x4983c201	                              add r10, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e09e	          0x4839c7	                            cmp rdi, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0a1	        0x488d431c	                   lea rax, [rbx + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0a5	           0xf93c1	                                setae cl	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0a8	          0x4839c2	                            cmp rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0ab	           0xf93c0	                                setae al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0ae	             0x8c1	                               or cl, al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0b0	     0xf849a010000	                            je 0x400e250	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0b6	        0x4983fa0e	                            cmp r10, 0xe	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0ba	     0xf8690010000	                           jbe 0x400e250	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0c0	          0x4889d0	                            mov rax, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0c3	          0x83e00f	                            and eax, 0xf	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0c6	          0x48d1e8	                              shr rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0c9	          0x48f7d8	                                 neg rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0cc	          0x83e007	                              and eax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0cf	          0x4c39d0	                            cmp rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0d2	        0x490f47c2	                          cmova rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0d6	          0x4885c0	                           test rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0d9	     0xf8431020000	                            je 0x400e310	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0df	         0xfb74e0c	            movzx ecx, word [rsi + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0e3	        0x4883f801	                              cmp rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0e7	        0x66894b0c	                mov word [rbx + 0xc], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0eb	        0x488d4b0e	                    lea rcx, [rbx + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0ef	            0x747e	                            je 0x400e16f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0f1	         0xfb74e0e	            movzx ecx, word [rsi + 0xe] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0f5	        0x4883f802	                              cmp rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0f9	        0x4c8d4e10	                    lea r9, [rsi + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e0fd	        0x66894b0e	                mov word [rbx + 0xe], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e101	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e105	            0x7468	                            je 0x400e16f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e107	         0xfb74e10	           movzx ecx, word [rsi + 0x10] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e10b	        0x4883f803	                              cmp rax, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e10f	        0x4c8d4e12	                    lea r9, [rsi + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e113	        0x66894b10	               mov word [rbx + 0x10], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e117	        0x488d4b12	                   lea rcx, [rbx + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e11b	            0x7452	                            je 0x400e16f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e11d	         0xfb74e12	           movzx ecx, word [rsi + 0x12] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e121	        0x4883f804	                              cmp rax, 4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e125	        0x4c8d4e14	                    lea r9, [rsi + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e129	        0x66894b12	               mov word [rbx + 0x12], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e12d	        0x488d4b14	                   lea rcx, [rbx + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e131	            0x743c	                            je 0x400e16f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e133	         0xfb74e14	           movzx ecx, word [rsi + 0x14] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e137	        0x4883f805	                              cmp rax, 5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e13b	        0x4c8d4e16	                    lea r9, [rsi + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e13f	        0x66894b14	               mov word [rbx + 0x14], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e143	        0x488d4b16	                   lea rcx, [rbx + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e147	            0x7426	                            je 0x400e16f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e149	         0xfb74e16	           movzx ecx, word [rsi + 0x16] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e14d	        0x4883f807	                              cmp rax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e151	        0x4c8d4e18	                    lea r9, [rsi + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e155	        0x66894b16	               mov word [rbx + 0x16], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e159	        0x488d4b18	                   lea rcx, [rbx + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e15d	            0x7510	                           jne 0x400e16f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e15f	         0xfb74e18	           movzx ecx, word [rsi + 0x18] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e163	        0x4c8d4e1a	                    lea r9, [rsi + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e167	        0x66894b18	               mov word [rbx + 0x18], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e16b	        0x488d4b1a	                   lea rcx, [rbx + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e16f	          0x4929c2	                            sub r10, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e172	          0x4801c0	                            add rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e175	          0x4531e4	                          xor r12d, r12d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e178	        0x4d8d5af8	                      lea r11, [r10 - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e17c	          0x4801c2	                            add rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e17f	          0x4801f8	                            add rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e182	            0x31ff	                            xor edi, edi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e184	        0x49c1eb03	                              shr r11, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e188	        0x4983c301	                              add r11, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e18c	    0x4a8d34dd0000	                        lea rsi, [r11*8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e194	      0x660f6f043a	        movdqa xmm0, xmmword [rdx + rdi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e199	        0x4983c401	                              add r12, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e19d	         0xf110438	        movups xmmword [rax + rdi], xmm0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e1a1	        0x4883c710	                           add rdi, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e1a5	          0x4d39e3	                            cmp r11, r12	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e1a8	            0x77ea	                            ja 0x400e194	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e1aa	      0xe9defdffff	                           jmp 0x400df8d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e1af	              0x90	                                     nop	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e1b0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e1b5	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e1ba	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e1bc	        0x89542448	             mov dword [rsp + 0x48], edx	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e1c0	      0x66894c245a	               mov word [rsp + 0x5a], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e1c5	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x400e1ca	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x400e1cf	      0x488d542450	                   lea rdx, [rsp + 0x50]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x400e1d4	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e1d9	      0x4889442440	             mov qword [rsp + 0x40], rax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e1de	            0x8b06	                    mov eax, dword [rsi]	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e1e0	    0x41b801000000	                              mov r8d, 1	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x400e1e6	          0x4889df	                            mov rdi, rbx	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x400e1e9	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3193	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e1f1	      0xc644245800	                mov byte [rsp + 0x58], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e1f6	    0xc74424540000	               mov dword [rsp + 0x54], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e1fe	    0xc74424500100	               mov dword [rsp + 0x50], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e206	        0x89442430	             mov dword [rsp + 0x30], eax	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e20a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2289	decNumber.c	FUNCTION_68	FUNCTION_35
0x400e212	      0xe839f0ffff	     call sym.decQuantizeOp.constprop.10	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x400e217	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x400e21b	            0x85f6	                           test esi, esi	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x400e21d	            0x7571	                           jne 0x400e290	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x400e21f	        0x8b742444	            mov esi, dword [rsp + 0x44] 	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e223	         0xb742408	                 or esi, dword [rsp + 8]	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e227	        0x89742408	                mov dword [rsp + 8], esi	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e22b	      0xe97bfbffff	                           jmp 0x400ddab	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400e230	           0xfb702	                   movzx eax, word [rdx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e233	        0x4883c202	                              add rdx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e237	        0x4883c702	                              add rdi, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e23b	        0x668947fe	                  mov word [rdi - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e23f	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e242	            0x77ec	                            ja 0x400e230	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e244	      0xe999fbffff	                           jmp 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e249	     0xf1f80000000	                         nop dword [rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e250	           0xfb702	                   movzx eax, word [rdx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e253	        0x4883c202	                              add rdx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e257	        0x4883c702	                              add rdi, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e25b	        0x668947fe	                  mov word [rdi - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e25f	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e262	            0x77ec	                            ja 0x400e250	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e264	      0xe979fbffff	                           jmp 0x400dde2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e269	     0xf1f80000000	                         nop dword [rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e270	          0x8d4802	                      lea ecx, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e273	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e278	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e27a	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e27c	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e27e	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e281	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e283	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e286	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e289	      0xe9cafbffff	                           jmp 0x400de58	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e28e	            0x6690	                                     nop	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e290	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e294	            0x7423	                            je 0x400e2b9	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e296	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e29c	     0xf857e000000	                           jne 0x400e320	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e2a2	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e2a4	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e2ab	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e2b1	        0x6689530a	                mov word [rbx + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e2b5	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400e2b9	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e2be	      0xe800000000	                          call 0x400e2c3	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e2c3	      0xe957ffffff	                           jmp 0x400e21f	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e2c8	     0xf1f84000000	                   nop dword [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e2d0	          0x8d4802	                      lea ecx, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2d3	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2d8	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2da	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2dc	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2de	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2e1	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2e3	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2e6	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2e9	      0xe987fdffff	                           jmp 0x400e075	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2ee	            0x6690	                                     nop	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e2f0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e2f6	      0xe9ddfaffff	                           jmp 0x400ddd8	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e2fb	       0xf1f440000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e300	          0x4889f9	                            mov rcx, rdi	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e303	          0x4989d1	                             mov r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e306	      0xe947fcffff	                           jmp 0x400df52	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e30b	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e310	          0x4889f9	                            mov rcx, rdi	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e313	          0x4989d1	                             mov r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e316	      0xe954feffff	                           jmp 0x400e16f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e31b	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e320	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e326	            0xeb91	                           jmp 0x400e2b9	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e328	      0xe800000000	                          call 0x400e32d	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
decNumberRotate	SWITCH,0:functions,0:IF,11:WHILE,0:CALL,20:FOR,1:DO,0:ELSE,4	270
0x4008180	            0x4157	                                push r15	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4008182	            0x4156	                                push r14	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4008184	            0x4155	                                push r13	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4008186	            0x4154	                                push r12	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4008188	              0x55	                                push rbp	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4008189	              0x53	                                push rbx	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400818a	          0x4889cd	                            mov rbp, rcx	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400818d	          0x4889fb	                            mov rbx, rdi	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4008190	        0x4883ec38	                           sub rsp, 0x38	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4008194	    0x64488b042528	                mov rax, qword fs:[0x28]	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400819d	      0x4889442428	             mov qword [rsp + 0x28], rax	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081a2	            0x31c0	                            xor eax, eax	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081a4	        0xf6460830	               test byte [rsi + 8], 0x30	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40081a8	    0xc74424240000	               mov dword [rsp + 0x24], 0	      2457	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081b0	            0x7508	                           jne 0x40081ba	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40081b2	         0xfb64208	               movzx eax, byte [rdx + 8]	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40081b6	            0xa830	                           test al, 0x30	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40081b8	            0x7446	                            je 0x4008200	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40081ba	      0x4c8d442424	                    lea r8, [rsp + 0x24]	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40081bf	          0x4889e9	                            mov rcx, rbp	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40081c2	          0x4889df	                            mov rdi, rbx	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40081c5	      0xe876a4ffff	                 call sym.decNaNs.isra.6	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40081ca	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40081ce	            0x85f6	                           test esi, esi	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40081d0	     0xf85ca020000	                           jne 0x40084a0	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40081d6	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081db	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081e4	          0x4889d8	                            mov rax, rbx	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081e7	     0xf8548030000	                           jne 0x4008535	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081ed	        0x4883c438	                           add rsp, 0x38	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081f1	              0x5b	                                 pop rbx	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081f2	              0x5d	                                 pop rbp	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081f3	            0x415c	                                 pop r12	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081f5	            0x415d	                                 pop r13	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081f7	            0x415e	                                 pop r14	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081f9	            0x415f	                                 pop r15	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081fb	              0xc3	                                     ret	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40081fc	         0xf1f4000	                         nop dword [rax]	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4008200	            0xa840	                           test al, 0x40	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4008202	            0x754c	                           jne 0x4008250	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4008204	          0x8b4a04	                mov ecx, dword [rdx + 4]	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4008207	            0x85c9	                           test ecx, ecx	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4008209	            0x7545	                           jne 0x4008250	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x400820b	          0x4889d7	                            mov rdi, rdx	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x400820e	      0x4889742408	                mov qword [rsp + 8], rsi	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4008213	      0xe87882ffff	                      call sym.decGetInt	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4008218	          0x4189c4	                           mov r12d, eax	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x400821b	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4008221	          0x83f801	                              cmp eax, 1	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4008224	            0x762a	                           jbe 0x4008250	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4008226	    0x4181fc000000	                    cmp r12d, 0x80000000	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x400822d	            0x7421	                            je 0x4008250	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x400822f	          0x4489e2	                           mov edx, r12d	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4008232	      0x488b742408	                mov rsi, qword [rsp + 8]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4008237	          0xc1fa1f	                           sar edx, 0x1f	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400823a	            0x89d0	                            mov eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400823c	          0x4431e0	                           xor eax, r12d	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400823f	            0x29d0	                            sub eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4008241	          0x3b4500	                    cmp eax, dword [rbp]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4008244	            0x7e3b	                           jle 0x4008281	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4008246	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4008250	    0xc74424248000	           mov dword [rsp + 0x24], 0x80 	      2469	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3
0x4008258	      0xbe80000000	                           mov esi, 0x80	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x400825d	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400825f	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008266	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400826c	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008270	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4008274	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4008277	      0xe800000000	                          call 0x400827c	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400827c	      0xe955ffffff	                           jmp 0x40081d6	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4008281	          0x4889df	                            mov rdi, rbx	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4008284	      0xe800000000	                          call 0x4008289	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4008289	          0x4585e4	                         test r12d, r12d	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x400828c	     0xf882f020000	                            js 0x40084c1	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4008292	          0x4585e4	                         test r12d, r12d	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008295	     0xf842fffffff	                            je 0x40081ca	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400829b	        0x448b7d00	                   mov r15d, dword [rbp]	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400829f	          0x4539fc	                          cmp r12d, r15d	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40082a2	     0xf8422ffffff	                            je 0x40081ca	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40082a8	        0xf6430840	               test byte [rbx + 8], 0x40	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x40082ac	     0xf8518ffffff	                           jne 0x40081ca	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x40082b2	          0x486303	                 movsxd rax, dword [rbx]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40082b5	        0x4c8d730a	                    lea r14, [rbx + 0xa]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40082b9	          0x83f831	                           cmp eax, 0x31	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40082bc	     0xf8f08020000	                            jg 0x40084ca	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40082c2	     0xfb680000000	                   movzx eax, byte [rax]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40082c9	      0x488d7c00fe	                lea rdi, [rax + rax - 2]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40082ce	        0x4183ff31	                          cmp r15d, 0x31	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40082d2	     0xf8f09020000	                            jg 0x40084e1	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40082d8	          0x4963c7	                        movsxd rax, r15d	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40082db	      0x498d7c3e02	                lea rdi, [r14 + rdi + 2]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40082e0	     0xfb690000000	                   movzx edx, byte [rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40082e7	      0x488d4c12fe	                lea rcx, [rdx + rdx - 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40082ec	        0x4d8d2c0e	                    lea r13, [r14 + rcx]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40082f0	      0x48894c2408	                mov qword [rsp + 8], rcx	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40082f5	          0x4939fd	                            cmp r13, rdi	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40082f8	     0xf8282020000	                            jb 0x4008580	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40082fe	          0x4c89e8	                            mov rax, r13	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008301	        0x488d7701	                      lea rsi, [rdi + 1]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008305	          0x4829f8	                            sub rax, rdi	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008308	          0x48d1e8	                              shr rax, 1	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400830b	      0x488d540002	                lea rdx, [rax + rax + 2]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008310	        0x498d4501	                      lea rax, [r13 + 1]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008314	          0x4839c6	                            cmp rsi, rax	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008317	      0xb802000000	                              mov eax, 2	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400831c	        0x480f47d0	                          cmova rdx, rax	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008320	            0x31f6	                            xor esi, esi	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008322	      0xe800000000	                          call 0x4008327	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008327	        0x4183ff31	                          cmp r15d, 0x31	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400832b	          0x44893b	                   mov dword [rbx], r15d	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400832e	        0x418d7702	                      lea esi, [r15 + 2]	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008332	     0xf8fda010000	                            jg 0x4008512	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008338	          0x4963c7	                        movsxd rax, r15d	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400833b	     0xfb6b0000000	                   movzx esi, byte [rax]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008342	          0x4589f8	                           mov r8d, r15d	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008345	      0xbf03000000	                              mov edi, 3	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400834a	          0x8d46ff	                      lea eax, [rsi - 1]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400834d	          0x8d0440	                  lea eax, [rax + rax*2]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008350	          0x4129c0	                            sub r8d, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008353	          0x4489f8	                           mov eax, r15d	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008356	          0x4429e0	                           sub eax, r12d	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008359	              0x99	                                     cdq	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400835a	            0xf7ff	                                idiv edi	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400835c	            0x85d2	                           test edx, edx	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400835e	          0x4189c2	                           mov r10d, eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008361	          0x4189c4	                           mov r12d, eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008364	            0x89d7	                            mov edi, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008366	          0x4189d1	                            mov r9d, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008369	            0x7451	                            je 0x40083bc	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400836b	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400836f	            0x89d1	                            mov ecx, edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4008371	            0x31d2	                            xor edx, edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4008373	    0xf7348d000000	                       div dword [rcx*4]	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400837a	            0x85ff	                           test edi, edi	      6740	decNumber.c	FUNCTION_9	IF_1
0x400837c	          0x4189d7	                           mov r15d, edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400837f	     0xf85ce010000	                           jne 0x4008553	      6740	decNumber.c	FUNCTION_9	IF_1
0x4008385	          0x4539c8	                            cmp r8d, r9d	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4008388	     0xf83ac010000	                           jae 0x400853a	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400838e	          0x4489ca	                            mov edx, r9d	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4008391	          0x4489f8	                           mov eax, r15d	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4008394	          0x4429c2	                            sub edx, r8d	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4008397	          0x4889d7	                            mov rdi, rdx	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400839a	            0x31d2	                            xor edx, edx	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400839c	    0xf734bd000000	                       div dword [rdi*4]	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40083a3	      0x6641894500	                      mov word [r13], ax	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40083a8	        0x418d4003	                       lea eax, [r8 + 3]	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40083ac	          0x4429c8	                            sub eax, r9d	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40083af	     0xfaf14850000	                 imul edx, dword [rax*4]	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40083b7	      0x66410155fe	                  add word [r13 - 2], dx	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40083bc	          0x4585e4	                         test r12d, r12d	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40083bf	     0xf84b9000000	                            je 0x400847e	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40083c5	      0xbe03000000	                              mov esi, 3	      2544	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40083ca	      0x4489442414	             mov dword [rsp + 0x14], r8d	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083cf	          0x4429c6	                            sub esi, r8d	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083d2	            0x7432	                            je 0x4008406	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083d4	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083d8	            0x89f7	                            mov edi, esi	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083da	            0x31d2	                            xor edx, edx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083dc	    0xf734bd000000	                       div dword [rdi*4]	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083e3	          0x4c89f7	                            mov rdi, r14	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083e6	          0x4189d7	                           mov r15d, edx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083e9	            0x89f2	                            mov edx, esi	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083eb	          0x4489d6	                           mov esi, r10d	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083ee	      0xe89d8affff	         call sym.decShiftToLeast.part.1	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083f3	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40083f8	    0x460faf3c8500	                 imul r15d, dword [r8*4]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4008401	      0x6645017d00	                    add word [r13], r15w	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4008406	          0x4d01e4	                            add r12, r12	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4008409	          0x4c89ea	                            mov rdx, r13	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400840c	        0x4b8d0426	                    lea rax, [r14 + r12]	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4008410	          0x4c39e8	                            cmp rax, r13	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008413	            0x731b	                           jae 0x4008430	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008415	           0xfb730	                   movzx esi, word [rax]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x4008418	           0xfb73a	                   movzx edi, word [rdx]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x400841b	        0x4883c002	                              add rax, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400841f	        0x4883ea02	                              sub rdx, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008423	        0x668978fe	                  mov word [rax - 2], di	      6660	decNumber.c	FUNCTION_7	FOR_1
0x4008427	        0x66897202	                  mov word [rdx + 2], si	      6661	decNumber.c	FUNCTION_7	FOR_1
0x400842b	          0x4839d0	                            cmp rax, rdx	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400842e	            0x72e5	                            jb 0x4008415	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008430	      0x4b8d4426fe	                lea rax, [r14 + r12 - 2]	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4008435	          0x4c89f2	                            mov rdx, r14	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008438	          0x4939c6	                            cmp r14, rax	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400843b	            0x731b	                           jae 0x4008458	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400843d	           0xfb732	                   movzx esi, word [rdx]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x4008440	           0xfb738	                   movzx edi, word [rax]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x4008443	        0x4883c202	                              add rdx, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008447	        0x4883e802	                              sub rax, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400844b	        0x66897afe	                  mov word [rdx - 2], di	      6660	decNumber.c	FUNCTION_7	FOR_1
0x400844f	        0x66897002	                  mov word [rax + 2], si	      6661	decNumber.c	FUNCTION_7	FOR_1
0x4008453	          0x4839c2	                            cmp rdx, rax	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008456	            0x72e5	                            jb 0x400843d	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008458	          0x4d39ee	                            cmp r14, r13	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400845b	          0x4c89f0	                            mov rax, r14	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400845e	            0x731e	                           jae 0x400847e	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008460	           0xfb710	                   movzx edx, word [rax]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x4008463	      0x410fb77500	                   movzx esi, word [r13]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x4008468	        0x4883c002	                              add rax, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400846c	        0x4983ed02	                              sub r13, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4008470	        0x668970fe	                  mov word [rax - 2], si	      6660	decNumber.c	FUNCTION_7	FOR_1
0x4008474	      0x6641895502	                  mov word [r13 + 2], dx	      6661	decNumber.c	FUNCTION_7	FOR_1
0x4008479	          0x4c39e8	                            cmp rax, r13	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400847c	            0x72e2	                            jb 0x4008460	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400847e	      0x488b742408	                mov rsi, qword [rsp + 8]	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4008483	          0x4c89f7	                            mov rdi, r14	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4008486	          0x48d1fe	                              sar rsi, 1	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4008489	          0x83c601	                              add esi, 1	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x400848c	      0xe80f82ffff	                   call sym.decGetDigits	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4008491	            0x8903	                    mov dword [rbx], eax	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4008493	      0xe932fdffff	                           jmp 0x40081ca	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4008498	     0xf1f84000000	                   nop dword [rax + rax]	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x40084a0	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40084a4	     0xf84cafdffff	                            je 0x4008274	      7736	decNumber.c	FUNCTION_24	IF_1
0x40084aa	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40084b0	     0xf84a7fdffff	                            je 0x400825d	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40084b6	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40084bc	      0xe9b3fdffff	                           jmp 0x4008274	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40084c1	        0x44036500	                   add r12d, dword [rbp]	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x40084c5	      0xe9c8fdffff	                           jmp 0x4008292	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x40084ca	          0x83c002	                              add eax, 2	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40084cd	      0xbe03000000	                              mov esi, 3	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40084d2	              0x99	                                     cdq	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40084d3	            0xf7fe	                                idiv esi	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40084d5	            0x4898	                                    cdqe	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40084d7	      0x488d7c00fe	                lea rdi, [rax + rax - 2]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40084dc	      0xe9edfdffff	                           jmp 0x40082ce	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40084e1	        0x418d7702	                      lea esi, [r15 + 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40084e5	    0x41b803000000	                              mov r8d, 3	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40084eb	      0x498d7c3e02	                lea rdi, [r14 + rdi + 2]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40084f0	            0x89f0	                            mov eax, esi	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40084f2	              0x99	                                     cdq	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40084f3	          0x41f7f8	                                idiv r8d	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40084f6	            0x4898	                                    cdqe	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40084f8	      0x488d4400fe	                lea rax, [rax + rax - 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40084fd	        0x4d8d2c06	                    lea r13, [r14 + rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4008501	      0x4889442408	                mov qword [rsp + 8], rax	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4008506	          0x4c39ef	                            cmp rdi, r13	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4008509	     0xf86effdffff	                           jbe 0x40082fe	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400850f	          0x44893b	                   mov dword [rbx], r15d	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008512	            0x89f0	                            mov eax, esi	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008514	      0xbf03000000	                              mov edi, 3	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008519	          0x4589f8	                           mov r8d, r15d	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400851c	              0x99	                                     cdq	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400851d	            0xf7ff	                                idiv edi	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400851f	            0x89c6	                            mov esi, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008521	          0x8d40ff	                      lea eax, [rax - 1]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008524	          0x8d0440	                  lea eax, [rax + rax*2]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4008527	          0x4129c0	                            sub r8d, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400852a	          0x4489f8	                           mov eax, r15d	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400852d	          0x4429e0	                           sub eax, r12d	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008530	      0xe924feffff	                           jmp 0x4008359	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008535	      0xe800000000	                          call 0x400853a	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x400853a	          0x4489c0	                            mov eax, r8d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x400853d	          0x4429c8	                            sub eax, r9d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008540	    0x440faf3c8500	                imul r15d, dword [rax*4]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008549	      0x6645017d00	                    add word [r13], r15w	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x400854e	      0xe969feffff	                           jmp 0x40083bc	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008553	            0x89fa	                            mov edx, edi	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008555	          0x4c89f7	                            mov rdi, r14	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008558	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x400855d	      0x4489542418	            mov dword [rsp + 0x18], r10d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008562	      0x44894c2414	             mov dword [rsp + 0x14], r9d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008567	      0xe82489ffff	         call sym.decShiftToLeast.part.1	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x400856c	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008571	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008576	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x400857b	      0xe905feffff	                           jmp 0x4008385	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4008580	          0x44893b	                   mov dword [rbx], r15d	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4008583	      0xe9b3fdffff	                           jmp 0x400833b	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
decNumberVersion	SWITCH,0:functions,0:IF,0:WHILE,0:CALL,0:FOR,0:DO,0:ELSE,0	2
0x4012530	      0xb800000000	                              mov eax, 0	      3571	decNumber.c	FUNCTION_68	FUNCTION_61
0x4012535	              0xc3	                                     ret	      3571	decNumber.c	FUNCTION_68	FUNCTION_61
decMultiplyOp	SWITCH,0:functions,0:IF,22:WHILE,0:CALL,16:FOR,11:DO,1:ELSE,3	614
0x40035e0	            0x4157	                                push r15	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035e2	            0x4156	                                push r14	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035e4	            0x4155	                                push r13	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035e6	            0x4154	                                push r12	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035e8	              0x55	                                push rbp	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035e9	              0x53	                                push rbx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035ea	          0x4889d3	                            mov rbx, rdx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035ed	    0x4881ec180200	                          sub rsp, 0x218	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035f4	         0xfb64308	               movzx eax, byte [rbx + 8]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035f8	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x40035fd	         0xfb65608	               movzx edx, byte [rsi + 8]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003601	      0x48894c2450	             mov qword [rsp + 0x50], rcx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003606	      0x48897c2408	                mov qword [rsp + 8], rdi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400360b	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003614	    0x4889bc240802	            mov qword [rsp + 0x208], rdi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400361c	            0x31ff	                            xor edi, edi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400361e	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003623	      0x4c89442438	              mov qword [rsp + 0x38], r8	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003628	            0x89d1	                            mov ecx, edx	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x400362a	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	      4836	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003635	            0x31c1	                            xor ecx, eax	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003637	          0x83e180	                     and ecx, 0xffffff80	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x400363a	        0x884c2437	               mov byte [rsp + 0x37], cl	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x400363e	            0x89d1	                            mov ecx, edx	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003640	             0x9c1	                             or ecx, eax	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003642	          0xf6c170	                           test cl, 0x70	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003645	     0xf849d000000	                            je 0x40036e8	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x400364b	          0x83e130	                           and ecx, 0x30	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x400364e	     0xf85dc050000	                           jne 0x4003c30	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x4003654	          0xf6c240	                           test dl, 0x40	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003657	            0x7517	                           jne 0x4003670	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003659	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400365e	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003663	            0x750b	                           jne 0x4003670	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003665	          0x833b01	                      cmp dword [rbx], 1	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003668	     0xf849e080000	                            je 0x4003f0c	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400366e	            0x6690	                                     nop	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003670	            0xa840	                           test al, 0x40	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003672	            0x751c	                           jne 0x4003690	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003674	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003679	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x400367e	            0x7510	                           jne 0x4003690	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003680	          0x833b01	                      cmp dword [rbx], 1	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003683	            0x750b	                           jne 0x4003690	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003685	            0xa870	                           test al, 0x70	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003687	     0xf8488080000	                            je 0x4003f15	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x400368d	           0xf1f00	                         nop dword [rax]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003690	       0xfb6442437	           movzx eax, byte [rsp + 0x37] 	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003695	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400369a	          0x4531c0	                            xor r8d, r8d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400369d	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40036a4	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40036aa	          0x83c840	                            or eax, 0x40	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40036ad	      0x664489430a	               mov word [rbx + 0xa], r8w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40036b2	          0x884308	                  mov byte [rbx + 8], al	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40036b5	          0x4889d8	                            mov rax, rbx	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40036b8	    0x488b9c240802	           mov rbx, qword [rsp + 0x208] 	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036c0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036c9	     0xf8500090000	                           jne 0x4003fcf	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036cf	    0x4881c4180200	                          add rsp, 0x218	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036d6	              0x5b	                                 pop rbx	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036d7	              0x5d	                                 pop rbp	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036d8	            0x415c	                                 pop r12	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036da	            0x415d	                                 pop r13	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036dc	            0x415e	                                 pop r14	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036de	            0x415f	                                 pop r15	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036e0	              0xc3	                                     ret	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036e1	     0xf1f80000000	                         nop dword [rax]	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036e8	          0x4889df	                            mov rdi, rbx	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x40036eb	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x40036f0	            0x8b07	                    mov eax, dword [rdi]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x40036f2	          0x4c633b	                 movsxd r15, dword [rbx]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x40036f5	          0x4139c7	                           cmp r15d, eax	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x40036f8	     0xf8cea030000	                            jl 0x4003ae8	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x40036fe	          0x4d63e7	                        movsxd r12, r15d	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003701	          0x4c63f8	                         movsxd r15, eax	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003704	        0x4183ff06	                             cmp r15d, 6	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003708	     0xf8ef4030000	                           jle 0x4003b02	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400370e	      0x418d742408	                      lea esi, [r12 + 8]	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003713	    0x41be398ee338	                    mov r14d, 0x38e38e39	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003719	            0x89f0	                            mov eax, esi	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400371b	          0xc1fe1f	                           sar esi, 0x1f	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400371e	          0x41f7ee	                               imul r14d	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003721	            0xd1fa	                              sar edx, 1	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003723	            0x89d1	                            mov ecx, edx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003725	            0x29f1	                            sub ecx, esi	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003727	        0x418d7708	                      lea esi, [r15 + 8]	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400372b	            0x89f0	                            mov eax, esi	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400372d	          0xc1fe1f	                           sar esi, 0x1f	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003730	          0x41f7ee	                               imul r14d	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003733	            0xd1fa	                              sar edx, 1	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003735	          0x4189d6	                           mov r14d, edx	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003738	          0x4129f6	                           sub r14d, esi	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400373b	        0x468d2c31	                   lea r13d, [rcx + r14]	      4949	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400373f	          0xc1e102	                              shl ecx, 2	      4952	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003742	          0x83f928	                           cmp ecx, 0x28	      4953	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003745	     0xf8f05050000	                            jg 0x4003c50	      4953	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x400374b	    0x488dac249000	                   lea rbp, [rsp + 0x90]	      4863	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003753	            0x31db	                            xor ebx, ebx	      4863	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003755	    0x48c744246800	               mov qword [rsp + 0x68], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x400375e	        0x41c1e602	                             shl r14d, 2	      4956	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003762	        0x4183fe28	                          cmp r14d, 0x28	      4957	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003766	     0xf8f84070000	                            jg 0x4003ef0	      4957	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x400376c	    0x4c8d9c24c000	                   lea r11, [rsp + 0xc0]	      4866	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003774	          0x4531f6	                          xor r14d, r14d	      4866	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003777	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003780	    0x428d04ed0000	                        lea eax, [r13*8]	      4968	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003788	      0x3da0000000	                           cmp eax, 0xa0	      4973	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400378d	     0xf8f2d070000	                            jg 0x4003ec0	      4973	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003793	            0x84db	                             test bl, bl	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003795	     0xf8505070000	                           jne 0x4003ea0	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400379b	          0x4584f6	                         test r14b, r14b	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400379e	     0xf85fc060000	                           jne 0x4003ea0	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x40037a4	    0x488d9c246001	                  lea rbx, [rsp + 0x160]	      4870	decNumber.c	FUNCTION_68	FUNCTION_66
0x40037ac	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x40037b5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40037ba	          0x4585e4	                         test r12d, r12d	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40037bd	    0x8b1500000000	            mov edx, dword [0x040037c3] 	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40037c3	          0x4989ee	                            mov r14, rbp	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40037c6	    0x8b0d00000000	            mov ecx, dword [0x040037cc] 	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40037cc	    0x8b3500000000	            mov esi, dword [0x040037d2] 	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40037d2	        0x4c8d400a	                     lea r8, [rax + 0xa]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40037d6	            0x7e60	                           jle 0x4003838	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x40037d8	    0x8b0d00000000	            mov ecx, dword [0x040037de] 	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037de	    0x8b3500000000	            mov esi, dword [0x040037e4] 	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037e4	          0x4989ee	                            mov r14, rbp	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037e7	            0xeb39	                           jmp 0x4003822	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037e9	     0xf1f80000000	                         nop dword [rax]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037f0	      0x410fb74002	                movzx eax, word [r8 + 2]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037f5	           0xfafc1	                           imul eax, ecx	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037f8	             0x1f8	                            add eax, edi	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037fa	        0x4183fc06	                             cmp r12d, 6	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x40037fe	          0x418906	                    mov dword [r14], eax	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003801	            0x7e31	                           jle 0x4003834	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003803	      0x410fb77804	                movzx edi, word [r8 + 4]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003808	        0x4183ec09	                             sub r12d, 9	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400380c	        0x4983c006	                               add r8, 6	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003810	        0x4983c604	                              add r14, 4	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003814	           0xfaffe	                           imul edi, esi	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003817	             0x1f8	                            add eax, edi	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003819	        0x418946fc	                mov dword [r14 - 4], eax	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400381d	          0x4585e4	                         test r12d, r12d	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003820	            0x7e16	                           jle 0x4003838	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003822	        0x410fb700	                    movzx eax, word [r8]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003826	           0xfafc2	                           imul eax, edx	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003829	        0x4183fc03	                             cmp r12d, 3	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400382d	            0x89c7	                            mov edi, eax	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400382f	          0x418906	                    mov dword [r14], eax	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003832	            0x7fbc	                            jg 0x40037f0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003834	        0x4983c604	                              add r14, 4	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003838	        0x498d46fc	                      lea rax, [r14 - 4]	      4990	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400383c	          0x4d89dc	                            mov r12, r11	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400383f	      0x4889442428	             mov qword [rsp + 0x28], rax	      4990	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003844	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003849	        0x4c8d400a	                     lea r8, [rax + 0xa]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x400384d	            0xeb38	                           jmp 0x4003887	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x400384f	              0x90	                                     nop	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003850	      0x410fb74002	                movzx eax, word [r8 + 2]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003855	           0xfafc1	                           imul eax, ecx	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003858	             0x1f8	                            add eax, edi	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400385a	        0x4183ff06	                             cmp r15d, 6	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400385e	        0x41890424	                    mov dword [r12], eax	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003862	            0x7e36	                           jle 0x400389a	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003864	      0x410fb77804	                movzx edi, word [r8 + 4]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003869	        0x4183ef09	                             sub r15d, 9	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400386d	        0x4983c006	                               add r8, 6	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003871	           0xfaffe	                           imul edi, esi	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003874	             0x1f8	                            add eax, edi	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003876	          0x4585ff	                         test r15d, r15d	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003879	        0x41890424	                    mov dword [r12], eax	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400387d	      0x498d442404	                      lea rax, [r12 + 4]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003882	            0x7e16	                           jle 0x400389a	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003884	          0x4989c4	                            mov r12, rax	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003887	        0x410fb700	                    movzx eax, word [r8]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400388b	           0xfafc2	                           imul eax, edx	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400388e	        0x4183ff03	                             cmp r15d, 3	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003892	            0x89c7	                            mov edi, eax	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003894	        0x41890424	                    mov dword [r12], eax	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003898	            0x7fb6	                            jg 0x4003850	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400389a	          0x4d63ed	                        movsxd r13, r13d	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400389d	        0x4e8d2ceb	                  lea r13, [rbx + r13*8]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038a1	          0x4939dd	                            cmp r13, rbx	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038a4	     0xf860b070000	                           jbe 0x4003fb5	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038aa	          0x4889d8	                            mov rax, rbx	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038ad	            0x31f6	                            xor esi, esi	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038af	          0x4889df	                            mov rdi, rbx	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038b2	          0x48f7d0	                                 not rax	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038b5	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038ba	          0x4c01e8	                            add rax, r13	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038bd	        0x48c1e803	                              shr rax, 3	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038c1	    0x488d14c50800	                    lea rdx, [rax*8 + 8]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038c9	      0xe800000000	                          call 0x40038ce	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038ce	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40038d3	          0x4d39e3	                            cmp r11, r12	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40038d6	     0xf8748050000	                            ja 0x4003e24	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40038dc	          0x4929ee	                            sub r14, rbp	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40038df	      0x4c895c2458	             mov qword [rsp + 0x58], r11	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40038e4	    0x41ba12000000	                          mov r10d, 0x12	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038ea	        0x498d46fc	                      lea rax, [r14 - 4]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038ee	          0x4989df	                            mov r15, rbx	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40038f1	      0x4c89642420	             mov qword [rsp + 0x20], r12	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40038f6	        0x48c1e802	                              shr rax, 2	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40038fa	      0x4889442478	             mov qword [rsp + 0x78], rax	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40038ff	        0x4c8d7001	                      lea r14, [rax + 1]	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003903	      0xe992010000	                           jmp 0x4003a9a	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003908	     0xf1f84000000	                   nop dword [rax + rax]	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003910	          0x4c89f2	                            mov rdx, r14	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003913	          0x8b4d00	                    mov ecx, dword [rbp]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003916	        0x488d7008	                      lea rsi, [rax + 8]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400391a	        0x480fafcf	                           imul rcx, rdi	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400391e	          0x480108	                    add qword [rax], rcx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003921	        0x4883fa01	                              cmp rdx, 1	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003925	        0x488d4d04	                      lea rcx, [rbp + 4]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003929	     0xf84e1030000	                            je 0x4003d10	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400392f	          0x8b4d04	                mov ecx, dword [rbp + 4]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003932	        0x488d7010	                   lea rsi, [rax + 0x10]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003936	        0x480fafcf	                           imul rcx, rdi	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400393a	        0x48014808	                add qword [rax + 8], rcx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400393e	        0x4883fa02	                              cmp rdx, 2	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003942	        0x488d4d08	                      lea rcx, [rbp + 8]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003946	     0xf84c4030000	                            je 0x4003d10	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400394c	          0x8b4d08	                mov ecx, dword [rbp + 8]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400394f	        0x488d7018	                   lea rsi, [rax + 0x18]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003953	        0x480fafcf	                           imul rcx, rdi	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003957	        0x48014810	            add qword [rax + 0x10], rcx 	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400395b	        0x4883fa04	                              cmp rdx, 4	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400395f	        0x488d4d0c	                    lea rcx, [rbp + 0xc]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003963	     0xf85a7030000	                           jne 0x4003d10	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003969	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400396c	        0x480fafcf	                           imul rcx, rdi	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003970	        0x48014818	            add qword [rax + 0x18], rcx 	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003974	        0x488d4d10	                   lea rcx, [rbp + 0x10]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003978	        0x4883c020	                           add rax, 0x20	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400397c	          0x4939d6	                            cmp r14, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400397f	     0xf84ee000000	                            je 0x4003a73	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003985	          0x4d89f4	                            mov r12, r14	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003988	      0x4c8b4c2478	              mov r9, qword [rsp + 0x78]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400398d	          0x4929d4	                            sub r12, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003990	      0x498d7424fc	                      lea rsi, [r12 - 4]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003995	          0x4929d1	                             sub r9, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003998	        0x48c1ee02	                              shr rsi, 2	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400399c	        0x4883c601	                              add rsi, 1	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039a0	        0x4983f902	                               cmp r9, 2	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039a4	    0x488d1cb50000	                        lea rbx, [rsi*4]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039ac	     0xf868b000000	                           jbe 0x4003a3d	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039b2	    0x660f6e642448	          movd xmm4, dword [rsp + 0x48] 	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039b8	          0x4901d0	                             add r8, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039bb	      0x488d549500	                  lea rdx, [rbp + rdx*4]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039c0	      0x4889442448	             mov qword [rsp + 0x48], rax	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039c5	        0x4f8d04c7	                    lea r8, [r15 + r8*8]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039c9	          0x4531c9	                            xor r9d, r9d	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039cc	      0x660f70c400	                    pshufd xmm0, xmm4, 0	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039d1	      0x4889542440	             mov qword [rsp + 0x40], rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039d6	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039db	            0x31d2	                            xor edx, edx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039dd	        0x660f6fd8	                       movdqa xmm3, xmm0	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039e1	        0x660f6fc8	                       movdqa xmm1, xmm0	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039e5	        0x660f6ad8	                    punpckhdq xmm3, xmm0	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039e9	        0x660f62c8	                    punpckldq xmm1, xmm0	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039ed	      0xf30f6f0410	        movdqu xmm0, xmmword [rax + rdx]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039f2	        0x4983c101	                               add r9, 1	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039f6	        0x660f6fd0	                       movdqa xmm2, xmm0	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039fa	        0x660f6ad0	                    punpckhdq xmm2, xmm0	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40039fe	        0x660f62c0	                    punpckldq xmm0, xmm0	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a02	        0x660ff4d3	                      pmuludq xmm2, xmm3	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a06	    0x66410fd45450	 paddq xmm2, xmmword [r8 + rdx*2 + 0x10]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a0d	    0x410f29545010	movaps xmmword [r8 + rdx*2 + 0x10], xmm2	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a13	        0x660ff4c1	                      pmuludq xmm0, xmm1	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a17	    0x66410fd40450	        paddq xmm0, xmmword [r8 + rdx*2]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a1d	      0x410f290450	       movaps xmmword [r8 + rdx*2], xmm0	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a22	        0x4883c210	                           add rdx, 0x10	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a26	          0x4939f1	                             cmp r9, rsi	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a29	            0x72c2	                            jb 0x40039ed	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a2b	          0x4c39e3	                            cmp rbx, r12	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a2e	        0x488d0c99	                  lea rcx, [rcx + rbx*4]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a32	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a37	        0x488d04d8	                  lea rax, [rax + rbx*8]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a3b	            0x7436	                            je 0x4003a73	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a3d	            0x8b11	                    mov edx, dword [rcx]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a3f	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a44	        0x480fafd7	                           imul rdx, rdi	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a48	          0x480110	                    add qword [rax], rdx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a4b	        0x488d5104	                      lea rdx, [rcx + 4]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a4f	          0x4839d3	                            cmp rbx, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a52	            0x721f	                            jb 0x4003a73	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a54	          0x8b5104	                mov edx, dword [rcx + 4]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a57	        0x480fafd7	                           imul rdx, rdi	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a5b	        0x48015008	                add qword [rax + 8], rdx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a5f	        0x488d5108	                      lea rdx, [rcx + 8]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a63	          0x4839d3	                            cmp rbx, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a66	            0x720b	                            jb 0x4003a73	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a68	          0x8b5108	                mov edx, dword [rcx + 8]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a6b	        0x480faffa	                           imul rdi, rdx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a6f	        0x48017810	            add qword [rax + 0x10], rdi 	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003a73	        0x4183ea01	                             sub r10d, 1	      5023	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a77	          0x4585d2	                         test r10d, r10d	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4003a7a	     0xf8ef0010000	                           jle 0x4003c70	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4003a80	      0x4c395c2420	            cmp qword [rsp + 0x20], r11 	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4003a85	     0xf84e5010000	                            je 0x4003c70	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4003a8b	        0x4983c304	                              add r11, 4	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a8f	      0x4c3b5c2420	            cmp r11, qword [rsp + 0x20] 	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a94	     0xf877e030000	                            ja 0x4003e18	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a9a	          0x4d89d8	                             mov r8, r11	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a9d	      0x4c2b442458	              sub r8, qword [rsp + 0x58]	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003aa2	        0x49c1f802	                               sar r8, 2	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003aa6	      0x483b6c2428	            cmp rbp, qword [rsp + 0x28] 	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003aab	        0x4b8d04c7	                   lea rax, [r15 + r8*8]	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003aaf	            0x77c2	                            ja 0x4003a73	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ab1	          0x4889c2	                            mov rdx, rax	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ab4	          0x418b3b	                    mov edi, dword [r11]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ab7	        0x48c1e23c	                           shl rdx, 0x3c	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003abb	        0x48c1ea3f	                           shr rdx, 0x3f	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003abf	          0x4c39f2	                            cmp rdx, r14	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ac2	        0x490f47d6	                          cmova rdx, r14	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ac6	        0x4983fe04	                              cmp r14, 4	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003aca	        0x897c2448	             mov dword [rsp + 0x48], edi	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ace	     0xf863cfeffff	                           jbe 0x4003910	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ad4	          0x4885d2	                           test rdx, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ad7	     0xf8536feffff	                           jne 0x4003913	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003add	          0x4889e9	                            mov rcx, rbp	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ae0	      0xe9a0feffff	                           jmp 0x4003985	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ae5	           0xf1f00	                         nop dword [rax]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003ae8	          0x4c63e0	                         movsxd r12, eax	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003aeb	        0x4183ff06	                             cmp r15d, 6	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003aef	          0x4889d8	                            mov rax, rbx	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003af2	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003af7	      0x4889442410	             mov qword [rsp + 0x10], rax	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003afc	     0xf8f0cfcffff	                            jg 0x400370e	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003b02	        0x4183fc31	                          cmp r12d, 0x31	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b06	     0xf8edc000000	                           jle 0x4003be8	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b0c	        0x4183c402	                             add r12d, 2	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b10	    0x41bd56555555	                    mov r13d, 0x55555556	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b16	          0x4489e0	                           mov eax, r12d	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b19	        0x41c1fc1f	                          sar r12d, 0x1f	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b1d	          0x41f7ed	                               imul r13d	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b20	    0x410fb6870000	                   movzx eax, byte [r15]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b28	          0x4429e2	                           sub edx, r12d	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b2b	          0x4989c4	                            mov r12, rax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b2e	             0x1d0	                            add eax, edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b30	          0x4189d5	                           mov r13d, edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b33	             0x1c0	                            add eax, eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003b35	          0x83f862	                           cmp eax, 0x62	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003b38	     0xf8f39040000	                            jg 0x4003f77	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003b3e	            0x31c9	                            xor ecx, ecx	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003b40	    0x488d9c24f000	                   lea rbx, [rsp + 0xf0]	      5067	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003b48	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003b51	    0x66898c24f000	               mov word [rsp + 0xf0], cx	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003b59	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b5e	        0x488d680a	                    lea rbp, [rax + 0xa]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b62	      0x4e8d746500	                  lea r14, [rbp + r12*2]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b67	          0x4c39f5	                            cmp rbp, r14	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003b6a	     0xf83ba030000	                           jae 0x4003f2a	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003b70	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b75	          0x4989df	                            mov r15, rbx	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b78	          0x4531e4	                          xor r12d, r12d	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003b7b	      0xbe01000000	                              mov esi, 1	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003b80	        0x4883c00a	                            add rax, 0xa	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b84	      0x4889442420	             mov qword [rsp + 0x20], rax	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b89	          0x4c89f0	                            mov rax, r14	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b8c	          0x4989de	                            mov r14, rbx	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b8f	          0x4889c3	                            mov rbx, rax	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b92	            0xeb26	                           jmp 0x4003bba	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b94	         0xf1f4000	                         nop dword [rax]	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b98	          0x4863c6	                         movsxd rax, esi	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4003b9b	            0x31ff	                            xor edi, edi	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4003b9d	          0x83c601	                              add esi, 1	      5095	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4003ba0	      0x6641893c46	              mov word [r14 + rax*2], di	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4003ba5	        0x4883c502	                              add rbp, 2	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003ba9	        0x4183c401	                             add r12d, 1	      5098	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003bad	        0x4983c702	                              add r15, 2	      5098	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003bb1	          0x4839eb	                            cmp rbx, rbp	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003bb4	     0xf8666010000	                           jbe 0x4003d20	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003bba	      0x440fb74d00	                   movzx r9d, word [rbp]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bbf	        0x664585c9	                           test r9w, r9w	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bc3	            0x74d3	                            je 0x4003b98	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bc5	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bca	          0x4429e6	                           sub esi, r12d	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bcd	          0x4d89f8	                             mov r8, r15	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bd0	          0x4489e9	                           mov ecx, r13d	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bd3	          0x4c89ff	                            mov rdi, r15	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bd6	      0xe885e2ffff	     call sym.decUnitAddSub.constprop.11	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bdb	        0x428d3420	                    lea esi, [rax + r12]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bdf	            0xebc4	                           jmp 0x4003ba5	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003be1	     0xf1f80000000	                         nop dword [rax]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003be8	    0x450fb6ac2400	                  movzx r13d, byte [r12]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003bf1	    0x410fb6870000	                   movzx eax, byte [r15]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003bf9	          0x4989c4	                            mov r12, rax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003bfc	          0x4401e8	                           add eax, r13d	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003bff	             0x1c0	                            add eax, eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003c01	          0x83f862	                           cmp eax, 0x62	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003c04	     0xf8634ffffff	                           jbe 0x4003b3e	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003c0a	          0x4863f8	                         movsxd rdi, eax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003c0d	      0xe800000000	                          call 0x4003c12	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003c12	          0x4885c0	                           test rax, rax	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003c15	      0x4889442460	             mov qword [rsp + 0x60], rax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003c1a	     0xf846d030000	                            je 0x4003f8d	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003c20	            0x31d2	                            xor edx, edx	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003c22	          0x4889c3	                            mov rbx, rax	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003c25	          0x668910	                      mov word [rax], dx	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003c28	      0xe92cffffff	                           jmp 0x4003b59	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003c2d	           0xf1f00	                         nop dword [rax]	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003c30	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4003c35	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4003c3a	          0x4889da	                            mov rdx, rbx	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4003c3d	      0xe8fee9ffff	                 call sym.decNaNs.isra.6	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4003c42	      0x488b442408	                mov rax, qword [rsp + 8]	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x4003c47	      0xe96cfaffff	                           jmp 0x40036b8	      4903	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x4003c4c	         0xf1f4000	                         nop dword [rax]	      4903	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x4003c50	          0x4863f9	                         movsxd rdi, ecx	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003c53	      0xe800000000	                          call 0x4003c58	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003c58	          0x4885c0	                           test rax, rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003c5b	          0x4889c5	                            mov rbp, rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003c5e	      0x4889442468	             mov qword [rsp + 0x68], rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003c63	           0xf94c3	                                 sete bl	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003c66	      0xe9f3faffff	                           jmp 0x400375e	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003c6b	       0xf1f440000	                   nop dword [rax + rax]	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003c70	          0x4d39fd	                            cmp r13, r15	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003c73	          0x4c89fe	                            mov rsi, r15	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003c76	     0xf8689000000	                           jbe 0x4003d05	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003c7c	         0xf1f4000	                         nop dword [rax]	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003c80	          0x488b3e	                    mov rdi, qword [rsi]	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x4003c83	    0x4881ffffc99a	                     cmp rdi, 0x3b9ac9ff	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x4003c8a	            0x766c	                           jbe 0x4003cf8	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x4003c8c	          0x4889fa	                            mov rdx, rdi	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003c8f	    0x48b8535a9ba0	            movabs rax, 0x44b82fa09b5a53	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003c99	        0x48c1ea09	                              shr rdx, 9	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003c9d	          0x48f7e2	                                 mul rdx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003ca0	          0x4889d1	                            mov rcx, rdx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003ca3	        0x48c1e90b	                            shr rcx, 0xb	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003ca7	    0x4881f9ffc99a	                     cmp rcx, 0x3b9ac9ff	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x4003cae	            0x7635	                           jbe 0x4003ce5	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x4003cb0	          0x4889fa	                            mov rdx, rdi	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003cb3	    0x48b80f494777	              movabs rax, 0x49c97747490f	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003cbd	        0x48c1ea12	                           shr rdx, 0x12	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003cc1	          0x48f7e2	                                 mul rdx	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003cc4	    0x48b8000064a7	           movabs rax, 0xde0b6b3a7640000	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003cce	        0x48c1ea18	                           shr rdx, 0x18	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003cd2	        0x48015610	            add qword [rsi + 0x10], rdx 	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003cd6	        0x480fafc2	                           imul rax, rdx	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003cda	    0x69d200ca9a3b	               imul edx, edx, 0x3b9aca00	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003ce0	          0x4829c7	                            sub rdi, rax	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003ce3	            0x29d1	                            sub ecx, edx	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003ce5	            0x89c8	                            mov eax, ecx	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003ce7	        0x48014608	                add qword [rsi + 8], rax	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003ceb	    0x4869c000ca9a	               imul rax, rax, 0x3b9aca00	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003cf2	          0x4829c7	                            sub rdi, rax	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003cf5	          0x48893e	                    mov qword [rsi], rdi	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003cf8	        0x4883c608	                              add rsi, 8	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003cfc	          0x4c39ee	                            cmp rsi, r13	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003cff	     0xf827bffffff	                            jb 0x4003c80	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003d05	    0x41ba12000000	                          mov r10d, 0x12	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003d0b	      0xe97bfdffff	                           jmp 0x4003a8b	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003d10	          0x4889f0	                            mov rax, rsi	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003d13	      0xe964fcffff	                           jmp 0x400397c	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003d18	     0xf1f84000000	                   nop dword [rax + rax]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003d20	          0x4863c6	                         movsxd rax, esi	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003d23	        0x8d4c76fe	              lea ecx, [rsi + rsi*2 - 2]	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003d27	          0x4c89f3	                            mov rbx, r14	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003d2a	      0x488d4400fe	                lea rax, [rax + rax - 2]	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003d2f	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d38	    0x48c744246800	               mov qword [rsp + 0x68], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d41	       0xfb67c2437	           movzx edi, byte [rsp + 0x37] 	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003d46	      0x488b742408	                mov rsi, qword [rsp + 8]	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003d4b	          0x4801d8	                            add rax, rbx	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4003d4e	        0x40887e08	                 mov byte [rsi + 8], dil	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003d52	            0x7224	                            jb 0x4003d78	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4003d54	           0xfb710	                   movzx edx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4003d57	          0x6685d2	                             test dx, dx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4003d5a	     0xf85fb010000	                           jne 0x4003f5b	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4003d60	          0x83f901	                              cmp ecx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4003d63	            0x7413	                            je 0x4003d78	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4003d65	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4003d69	          0x83e903	                              sub ecx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4003d6c	          0x4839c3	                            cmp rbx, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4003d6f	            0x76e3	                           jbe 0x4003d54	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4003d71	     0xf1f80000000	                         nop dword [rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4003d78	      0x488b442408	                mov rax, qword [rsp + 8]	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4003d7d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003d82	            0x8908	                    mov dword [rax], ecx	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4003d84	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003d89	          0x8b5604	                mov edx, dword [rsi + 4]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003d8c	          0x8b4004	                mov eax, dword [rax + 4]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003d8f	          0x8d3410	                    lea esi, [rax + rdx]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003d92	          0xc1ea1f	                           shr edx, 0x1f	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003d95	          0xc1e81f	                           shr eax, 0x1f	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003d98	            0x84c2	                             test dl, al	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003d9a	            0x740a	                            je 0x4003da6	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003d9c	            0x85f6	                           test esi, esi	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003d9e	      0xb8026cca88	                     mov eax, 0x88ca6c02	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003da3	           0xf4ff0	                          cmovg esi, eax	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003da6	      0x488b442408	                mov rax, qword [rsp + 8]	      5122	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003dab	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003db0	    0x4c8d84248c00	                    lea r8, [rsp + 0x8c]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003db8	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003dbd	          0x4889da	                            mov rdx, rbx	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003dc0	          0x897004	                mov dword [rax + 4], esi	      5122	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003dc3	          0x4889c7	                            mov rdi, rax	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003dc6	          0x4d89f1	                             mov r9, r14	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003dc9	          0x4c89fe	                            mov rsi, r15	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003dcc	          0x4889c3	                            mov rbx, rax	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003dcf	      0xe8ccd5ffff	             call sym.decSetCoeff.isra.3	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003dd4	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003ddc	          0x4c89f1	                            mov rcx, r14	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003ddf	          0x4c89fe	                            mov rsi, r15	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003de2	          0x4889df	                            mov rdi, rbx	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003de5	      0xe806efffff	                    call sym.decFinalize	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003dea	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003def	      0xe800000000	                          call 0x4003df4	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003df4	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003df9	      0xe800000000	                          call 0x4003dfe	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dfe	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e03	      0xe800000000	                          call 0x4003e08	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e08	      0x488b442408	                mov rax, qword [rsp + 8]	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e0d	      0xe9a6f8ffff	                           jmp 0x40036b8	      5139	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e12	    0x660f1f440000	                    nop word [rax + rax]	      5139	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e18	          0x4d39fd	                            cmp r13, r15	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e1b	          0x4c89fb	                            mov rbx, r15	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e1e	     0xf869a010000	                           jbe 0x4003fbe	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e24	          0x4989d8	                             mov r8, rbx	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003e27	          0x4889df	                            mov rdi, rbx	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003e2a	    0x41bad34d6210	                    mov r10d, 0x10624dd3	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e30	    0x41b983de1b43	                     mov r9d, 0x431bde83	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e40	          0x498b08	                     mov rcx, qword [r8]	      5053	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e43	        0x4983c008	                               add r8, 8	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e47	        0x4883c706	                              add rdi, 6	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e4b	            0x89c8	                            mov eax, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e4d	          0x41f7e2	                                mul r10d	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e50	            0x89d6	                            mov esi, edx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e52	            0x89ca	                            mov edx, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e54	          0xc1ee06	                              shr esi, 6	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e57	      0x6669c6e803	                      imul ax, si, 0x3e8	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e5c	            0x29c2	                            sub edx, eax	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e5e	            0x89c8	                            mov eax, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e60	        0x668957fa	                  mov word [rdi - 6], dx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e64	          0x41f7e1	                                 mul r9d	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e67	            0x89d1	                            mov ecx, edx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e69	          0xc1e912	                           shr ecx, 0x12	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e6c	      0x6669c1e803	                      imul ax, cx, 0x3e8	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e71	        0x66894ffe	                  mov word [rdi - 2], cx	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e75	            0x29c6	                            sub esi, eax	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e77	        0x668977fc	                  mov word [rdi - 4], si	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003e7b	          0x4d39c5	                             cmp r13, r8	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e7e	            0x77c0	                            ja 0x4003e40	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e80	          0x4829df	                            sub rdi, rbx	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e83	          0x48d1ff	                              sar rdi, 1	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e86	          0x4863c7	                         movsxd rax, edi	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e89	        0x8d4c7ffe	              lea ecx, [rdi + rdi*2 - 2]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e8d	      0x488d4400fe	                lea rax, [rax + rax - 2]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e92	      0xe9aafeffff	                           jmp 0x4003d41	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003e97	    0x660f1f840000	                    nop word [rax + rax]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003ea0	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003ea9	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003eae	          0x830810	                    or dword [rax], 0x10	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003eb1	      0xe934ffffff	                           jmp 0x4003dea	      4978	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003eb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4978	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003ec0	          0x4863f8	                         movsxd rdi, eax	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003ec3	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003ec8	      0xe800000000	                          call 0x4003ecd	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003ecd	          0x4408f3	                             or bl, r14b	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003ed0	      0x4889442460	             mov qword [rsp + 0x60], rax	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003ed5	            0x75d2	                           jne 0x4003ea9	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003ed7	          0x4885c0	                           test rax, rax	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003eda	          0x4889c3	                            mov rbx, rax	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003edd	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003ee2	     0xf85cdf8ffff	                           jne 0x40037b5	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003ee8	            0xebbf	                           jmp 0x4003ea9	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003eea	    0x660f1f440000	                    nop word [rax + rax]	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003ef0	          0x4963fe	                        movsxd rdi, r14d	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003ef3	      0xe800000000	                          call 0x4003ef8	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003ef8	          0x4885c0	                           test rax, rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003efb	          0x4989c3	                            mov r11, rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003efe	      0x4889442470	             mov qword [rsp + 0x70], rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003f03	        0x410f94c6	                               sete r14b	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003f07	      0xe974f8ffff	                           jmp 0x4003780	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003f0c	          0x83e270	                           and edx, 0x70	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003f0f	     0xf855bf7ffff	                           jne 0x4003670	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003f15	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x4003f1a	    0x810880000000	                    or dword [rax], 0x80	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x4003f20	      0x488b442408	                mov rax, qword [rsp + 8]	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x4003f25	      0xe98ef7ffff	                           jmp 0x40036b8	      4908	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x4003f2a	           0xfb713	                   movzx edx, word [rbx]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4003f2d	       0xfb6742437	           movzx esi, byte [rsp + 0x37] 	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003f32	      0xb901000000	                              mov ecx, 1	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4003f37	      0x488b442408	                mov rax, qword [rsp + 8]	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003f3c	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003f45	    0x48c744246800	               mov qword [rsp + 0x68], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003f4e	          0x6685d2	                             test dx, dx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4003f51	        0x40887008	                 mov byte [rax + 8], sil	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003f55	     0xf841dfeffff	                            je 0x4003d78	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4003f5b	        0x6683fa09	                               cmp dx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4003f5f	     0xf8613feffff	                           jbe 0x4003d78	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4003f65	          0x8d4101	                      lea eax, [rcx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4003f68	          0x83c102	                              add ecx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4003f6b	        0x6683fa63	                            cmp dx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4003f6f	           0xf46c8	                         cmovbe ecx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4003f72	      0xe901feffff	                           jmp 0x4003d78	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4003f77	          0x4863f8	                         movsxd rdi, eax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003f7a	      0xe800000000	                          call 0x4003f7f	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003f7f	          0x4885c0	                           test rax, rax	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003f82	      0x4889442460	             mov qword [rsp + 0x60], rax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003f87	     0xf8593fcffff	                           jne 0x4003c20	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003f8d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003f92	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003f9b	    0x48c744246800	               mov qword [rsp + 0x68], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003fa4	    0x48c744246000	               mov qword [rsp + 0x60], 0	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003fad	          0x830810	                    or dword [rax], 0x10	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003fb0	      0xe935feffff	                           jmp 0x4003dea	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003fb5	          0x4d39e3	                            cmp r11, r12	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003fb8	     0xf861ef9ffff	                           jbe 0x40038dc	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003fbe	      0xb9feffffff	                     mov ecx, 0xfffffffe	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003fc3	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003fca	      0xe972fdffff	                           jmp 0x4003d41	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003fcf	      0xe800000000	                          call 0x4003fd4	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
decNumberLn	SWITCH,0:functions,0:IF,7:WHILE,0:CALL,7:FOR,0:DO,1:ELSE,0	73
0x4010a80	              0x55	                                push rbp	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010a81	              0x53	                                push rbx	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010a82	          0x4889fd	                            mov rbp, rdi	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010a85	          0x4889d3	                            mov rbx, rdx	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010a88	        0x4883ec18	                           sub rsp, 0x18	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010a8c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010a95	      0x4889442408	                mov qword [rsp + 8], rax	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010a9a	            0x31c0	                            xor eax, eax	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010a9c	    0x813a3f420f00	                cmp dword [rdx], 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x4010aa2	    0xc74424040000	                  mov dword [rsp + 4], 0	      1269	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010aaa	            0x7f64	                            jg 0x4010b10	      7511	decNumber.c	FUNCTION_19	IF_1
0x4010aac	    0x817a043f420f	           cmp dword [rdx + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x4010ab3	            0x7f5b	                            jg 0x4010b10	      7512	decNumber.c	FUNCTION_19	IF_1
0x4010ab5	          0x8b4208	                mov eax, dword [rdx + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010ab8	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010aba	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010abf	            0x7f4f	                            jg 0x4010b10	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010ac1	            0x8b06	                    mov eax, dword [rsi]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ac3	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ac8	            0x7e7e	                           jle 0x4010b48	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010aca	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010acf	            0x7509	                           jne 0x4010ada	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ad1	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ad4	     0xf84be000000	                            je 0x4010b98	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ada	      0xbe80000000	                           mov esi, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010adf	    0xc74424048000	               mov dword [rsp + 4], 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ae7	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010aeb	            0x7436	                            je 0x4010b23	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010aed	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010aef	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010af6	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010afd	        0x6689450a	                mov word [rbp + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4010b01	        0xc6450820	                mov byte [rbp + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4010b05	            0xeb1c	                           jmp 0x4010b23	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4010b07	    0x660f1f840000	                    nop word [rax + rax]	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4010b10	      0xbe40000000	                           mov esi, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010b15	    0xc74424044000	               mov dword [rsp + 4], 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x4010b1d	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010b21	            0x75ca	                           jne 0x4010aed	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010b23	          0x4889df	                            mov rdi, rbx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4010b26	      0xe800000000	                          call 0x4010b2b	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4010b2b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b30	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b39	          0x4889e8	                            mov rax, rbp	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b3c	            0x7566	                           jne 0x4010ba4	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b3e	        0x4883c418	                           add rsp, 0x18	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b42	              0x5b	                                 pop rbx	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b43	              0x5d	                                 pop rbp	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b44	              0xc3	                                     ret	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b45	           0xf1f00	                         nop dword [rax]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4010b48	          0x8b5604	                mov edx, dword [rsi + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010b4b	             0x1c2	                            add edx, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010b4d	    0x81c27c841e00	                       add edx, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010b53	    0x81fabcc62d00	                       cmp edx, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010b59	     0xf876bffffff	                            ja 0x4010aca	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010b5f	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4010b64	          0x4889da	                            mov rdx, rbx	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4010b67	          0x4889ef	                            mov rdi, rbp	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4010b6a	      0xe8c1e2ffff	                        call sym.decLnOp	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4010b6f	        0x8b742404	                mov esi, dword [rsp + 4]	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4010b73	            0x85f6	                           test esi, esi	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4010b75	            0x74b4	                            je 0x4010b2b	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4010b77	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010b7b	            0x74a6	                            je 0x4010b23	      7736	decNumber.c	FUNCTION_24	IF_1
0x4010b7d	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010b83	     0xf8464ffffff	                            je 0x4010aed	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010b89	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010b8f	            0xeb92	                           jmp 0x4010b23	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010b91	     0xf1f80000000	                         nop dword [rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4010b98	        0xf6460870	               test byte [rsi + 8], 0x70	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010b9c	     0xf8538ffffff	                           jne 0x4010ada	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ba2	            0xebbb	                           jmp 0x4010b5f	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4010ba4	      0xe800000000	                          call 0x4010ba9	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
decNumberRescale	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,2:FOR,0:DO,0:ELSE,0	362
0x400e330	            0x4157	                                push r15	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e332	            0x4156	                                push r14	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e334	            0x4155	                                push r13	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e336	            0x4154	                                push r12	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e338	              0x55	                                push rbp	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e339	              0x53	                                push rbx	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e33a	          0x4889cd	                            mov rbp, rcx	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e33d	          0x4889fb	                            mov rbx, rdi	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e340	        0x4883ec58	                           sub rsp, 0x58	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e344	      0x440fb66608	              movzx r12d, byte [rsi + 8]	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400e349	          0x448b29	                   mov r13d, dword [rcx]	      5833	decNumber.c	FUNCTION_1
0x400e34c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e355	      0x4889442448	             mov qword [rsp + 0x48], rax	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e35a	            0x31c0	                            xor eax, eax	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e35c	         0xfb64208	               movzx eax, byte [rdx + 8]	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400e360	      0x4889742408	                mov qword [rsp + 8], rsi	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e365	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2378	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e36d	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5835	decNumber.c	FUNCTION_1
0x400e375	          0x4489e1	                           mov ecx, r12d	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400e378	             0x9c1	                             or ecx, eax	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400e37a	          0xf6c170	                           test cl, 0x70	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400e37d	            0x7479	                            je 0x400e3f8	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x400e37f	          0x83e130	                           and ecx, 0x30	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400e382	     0xf8508040000	                           jne 0x400e790	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x400e388	          0x4431e0	                           xor eax, r12d	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400e38b	            0xa840	                           test al, 0x40	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400e38d	     0xf84a5010000	                            je 0x400e538	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400e393	    0xc74424188000	           mov dword [rsp + 0x18], 0x80 	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400e39b	      0xbe80000000	                           mov esi, 0x80	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x400e3a0	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e3a6	     0xf8504040000	                           jne 0x400e7b0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e3ac	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e3ae	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e3b5	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e3bb	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400e3bf	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400e3c3	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e3c6	      0xe800000000	                          call 0x400e3cb	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400e3cb	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3d0	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3d9	          0x4889d8	                            mov rax, rbx	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3dc	     0xf85db040000	                           jne 0x400e8bd	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3e2	        0x4883c458	                           add rsp, 0x58	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3e6	              0x5b	                                 pop rbx	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3e7	              0x5d	                                 pop rbp	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3e8	            0x415c	                                 pop r12	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3ea	            0x415d	                                 pop r13	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3ec	            0x415e	                                 pop r14	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3ee	            0x415f	                                 pop r15	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3f0	              0xc3	                                     ret	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3f1	     0xf1f80000000	                         nop dword [rax]	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400e3f8	          0x4889d7	                            mov rdi, rdx	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x400e3fb	      0xe89020ffff	                      call sym.decGetInt	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x400e400	      0x3d00000080	                     cmp eax, 0x80000000	      5886	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e405	          0x4189c6	                           mov r14d, eax	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x400e408	            0x7489	                            je 0x400e393	      5886	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e40a	          0x8b7d08	                mov edi, dword [rbp + 8]	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e40d	        0x418d45ff	                      lea eax, [r13 - 1]	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e411	            0x29c7	                            sub edi, eax	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e413	          0x4439f7	                           cmp edi, r14d	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e416	     0xf8f77ffffff	                            jg 0x400e393	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e41c	    0x418d86feffff	             lea eax, [r14 + 0x7ffffffe]	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e423	          0x83f801	                              cmp eax, 1	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e426	     0xf8667ffffff	                           jbe 0x400e393	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e42c	        0x443b7504	               cmp r14d, dword [rbp + 4]	      5889	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e430	     0xf8f5dffffff	                            jg 0x400e393	      5889	decNumber.c	FUNCTION_1	DO_1	IF_12
0x400e436	      0x488b442408	                mov rax, qword [rsp + 8]	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400e43b	      0x6683780a00	                 cmp word [rax + 0xa], 0	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400e440	            0x8b08	                    mov ecx, dword [rax]	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400e442	            0x7509	                           jne 0x400e44d	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400e444	          0x83f901	                              cmp ecx, 1	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400e447	     0xf84c3030000	                            je 0x400e810	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400e44d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400e452	          0x4589f7	                          mov r15d, r14d	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400e455	            0x89ca	                            mov edx, ecx	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400e457	          0x8b4704	                mov eax, dword [rdi + 4]	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400e45a	          0x4129c7	                           sub r15d, eax	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x400e45d	          0x4429fa	                           sub edx, r15d	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400e460	          0x4139d5	                           cmp r13d, edx	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400e463	     0xf8c2affffff	                            jl 0x400e393	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x400e469	          0x4585ff	                         test r15d, r15d	      5909	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e46c	     0xf8e7e030000	                           jle 0x400e7f0	      5909	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e472	        0x488b7500	                    mov rsi, qword [rbp]	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e476	      0x4c8d4c2418	                    lea r9, [rsp + 0x18]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400e47b	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400e480	      0x4889742420	             mov qword [rsp + 0x20], rsi	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e485	        0x488b7508	                mov rsi, qword [rbp + 8]	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e489	        0x89542420	             mov dword [rsp + 0x20], edx	      5914	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e48d	          0x4889fa	                            mov rdx, rdi	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400e490	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400e493	        0x4883c20a	                            add rdx, 0xa	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400e497	      0x4889742428	             mov qword [rsp + 0x28], rsi	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e49c	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e4a0	      0x4889742430	             mov qword [rsp + 0x30], rsi	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e4a5	          0x8b7518	            mov esi, dword [rbp + 0x18] 	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e4a8	        0x44886308	                mov byte [rbx + 8], r12b	      6839	decNumber.c	FUNCTION_11
0x400e4ac	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400e4af	        0x89742438	             mov dword [rsp + 0x38], esi	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e4b3	      0x488d742420	                   lea rsi, [rsp + 0x20]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400e4b8	      0xe8e32effff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400e4bd	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x400e4c1	            0x85d2	                           test edx, edx	      7069	decNumber.c	FUNCTION_13	IF_1
0x400e4c3	     0xf85a7030000	                           jne 0x400e870	      7069	decNumber.c	FUNCTION_13	IF_1
0x400e4c9	        0x448b7b04	               mov r15d, dword [rbx + 4]	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400e4cd	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5918	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x400e4d5	          0x4539fe	                          cmp r14d, r15d	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400e4d8	     0xf8d2a030000	                           jge 0x400e808	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400e4de	            0x8b33	                    mov esi, dword [rbx]	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e4e0	          0x4139f5	                           cmp r13d, esi	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e4e3	     0xf849e030000	                            je 0x400e887	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e4e9	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400e4ed	      0xba01000000	                              mov edx, 1	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400e4f2	      0xe8a927ffff	          call sym.decShiftToMost.part.0	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400e4f7	          0x8b7b04	                mov edi, dword [rbx + 4]	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400e4fa	            0x8903	                    mov dword [rbx], eax	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x400e4fc	        0x448d7fff	                     lea r15d, [rdi - 1]	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400e500	        0x44897b04	               mov dword [rbx + 4], r15d	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x400e504	          0x8b7504	                mov esi, dword [rbp + 4]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e507	            0x29c6	                            sub esi, eax	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e509	            0x89f0	                            mov eax, esi	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e50b	          0x83c001	                              add eax, 1	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e50e	          0x4439f8	                           cmp eax, r15d	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e511	     0xf8d21030000	                           jge 0x400e838	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e517	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e51b	        0x4080ce80	                            or sil, 0x80	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e51f	        0x89742418	             mov dword [rsp + 0x18], esi	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x400e523	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e527	     0xf8496feffff	                            je 0x400e3c3	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e52d	      0xe96efeffff	                           jmp 0x400e3a0	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e532	    0x660f1f440000	                    nop word [rax + rax]	      7736	decNumber.c	FUNCTION_24	IF_1
0x400e538	          0x4839f3	                            cmp rbx, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400e53b	          0x4889f7	                            mov rdi, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400e53e	     0xf8487feffff	                            je 0x400e3cb	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400e544	        0x44886308	                mov byte [rbx + 8], r12b	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e548	          0x8b4604	                mov eax, dword [rsi + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e54b	          0x894304	                mov dword [rbx + 4], eax	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e54e	            0x8b06	                    mov eax, dword [rsi]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e550	            0x8903	                    mov dword [rbx], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e552	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e556	        0x6689430a	                mov word [rbx + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400e55a	          0x486306	                 movsxd rax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e55d	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e560	     0xf8e65feffff	                           jle 0x400e3cb	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e566	        0x4883c70a	                            add rdi, 0xa	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e56a	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e56d	        0x488d730c	                    lea rsi, [rbx + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e571	     0xf8e69020000	                           jle 0x400e7e0	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e577	          0x8d4802	                      lea ecx, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e57a	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e57f	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e581	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e583	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e585	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e588	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e58a	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e58d	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e590	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e595	          0x4801c7	                            add rdi, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e598	        0x488d510c	                    lea rdx, [rcx + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e59c	          0x4839d7	                            cmp rdi, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e59f	     0xf8626feffff	                           jbe 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5a5	        0x4c8d410e	                     lea r8, [rcx + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5a9	          0x4889f8	                            mov rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5ac	          0x4989ca	                            mov r10, rcx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5af	          0x4c29c0	                             sub rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5b2	        0x4c8d4801	                       lea r9, [rax + 1]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5b6	        0x488d411c	                   lea rax, [rcx + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5ba	          0x49d1e9	                               shr r9, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5bd	        0x4983c101	                               add r9, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5c1	          0x4839c6	                            cmp rsi, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5c4	        0x488d431c	                   lea rax, [rbx + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5c8	           0xf93c1	                                setae cl	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5cb	          0x4839c2	                            cmp rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5ce	           0xf93c0	                                setae al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5d1	             0x8c1	                               or cl, al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5d3	     0xf84e7010000	                            je 0x400e7c0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5d9	        0x4983f90e	                             cmp r9, 0xe	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5dd	     0xf86dd010000	                           jbe 0x400e7c0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5e3	          0x4889d0	                            mov rax, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5e6	          0x83e00f	                            and eax, 0xf	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5e9	          0x48d1e8	                              shr rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5ec	          0x48f7d8	                                 neg rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5ef	          0x83e007	                              and eax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5f2	          0x4c39c8	                             cmp rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5f5	        0x490f47c1	                           cmova rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5f9	          0x4885c0	                           test rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e5fc	     0xf845e020000	                            je 0x400e860	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e602	      0x410fb74a0c	            movzx ecx, word [r10 + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e607	        0x4883f801	                              cmp rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e60b	        0x66894b0c	                mov word [rbx + 0xc], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e60f	        0x488d4b0e	                    lea rcx, [rbx + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e613	     0xf8496000000	                            je 0x400e6af	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e619	      0x410fb74a0e	            movzx ecx, word [r10 + 0xe] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e61e	          0x4d89d0	                             mov r8, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e621	        0x4983c010	                            add r8, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e625	        0x4883f802	                              cmp rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e629	        0x66894b0e	                mov word [rbx + 0xe], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e62d	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e631	            0x747c	                            je 0x400e6af	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e633	      0x410fb74a10	           movzx ecx, word [r10 + 0x10] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e638	          0x4d89d0	                             mov r8, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e63b	        0x4983c012	                            add r8, 0x12	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e63f	        0x4883f803	                              cmp rax, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e643	        0x66894b10	               mov word [rbx + 0x10], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e647	        0x488d4b12	                   lea rcx, [rbx + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e64b	            0x7462	                            je 0x400e6af	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e64d	      0x410fb74a12	           movzx ecx, word [r10 + 0x12] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e652	          0x4d89d0	                             mov r8, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e655	        0x4983c014	                            add r8, 0x14	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e659	        0x4883f804	                              cmp rax, 4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e65d	        0x66894b12	               mov word [rbx + 0x12], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e661	        0x488d4b14	                   lea rcx, [rbx + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e665	            0x7448	                            je 0x400e6af	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e667	      0x410fb74a14	           movzx ecx, word [r10 + 0x14] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e66c	          0x4d89d0	                             mov r8, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e66f	        0x4983c016	                            add r8, 0x16	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e673	        0x4883f805	                              cmp rax, 5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e677	        0x66894b14	               mov word [rbx + 0x14], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e67b	        0x488d4b16	                   lea rcx, [rbx + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e67f	            0x742e	                            je 0x400e6af	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e681	      0x410fb74a16	           movzx ecx, word [r10 + 0x16] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e686	          0x4d89d0	                             mov r8, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e689	        0x4983c018	                            add r8, 0x18	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e68d	        0x4883f807	                              cmp rax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e691	        0x66894b16	               mov word [rbx + 0x16], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e695	        0x488d4b18	                   lea rcx, [rbx + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e699	            0x7514	                           jne 0x400e6af	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e69b	      0x410fb74a18	           movzx ecx, word [r10 + 0x18] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6a0	          0x4d89d0	                             mov r8, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6a3	        0x4983c01a	                            add r8, 0x1a	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6a7	        0x66894b18	               mov word [rbx + 0x18], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6ab	        0x488d4b1a	                   lea rcx, [rbx + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6af	          0x4929c1	                             sub r9, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6b2	          0x4801c0	                            add rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6b5	            0x31ed	                            xor ebp, ebp	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6b7	        0x4d8d51f8	                       lea r10, [r9 - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6bb	          0x4801c2	                            add rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6be	          0x4801f0	                            add rax, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6c1	            0x31f6	                            xor esi, esi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6c3	        0x49c1ea03	                              shr r10, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6c7	        0x4983c201	                              add r10, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6cb	    0x4e8d1cd50000	                        lea r11, [r10*8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6d3	      0x660f6f0432	        movdqa xmm0, xmmword [rdx + rsi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6d8	        0x4883c501	                              add rbp, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6dc	         0xf110430	        movups xmmword [rax + rsi], xmm0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6e0	        0x4883c610	                           add rsi, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6e4	          0x4939ea	                            cmp r10, rbp	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6e7	            0x77ea	                            ja 0x400e6d3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6e9	        0x4b8d041b	                    lea rax, [r11 + r11]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6ed	          0x4901c0	                             add r8, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6f0	          0x4801c8	                            add rax, rcx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6f3	          0x4d39d9	                             cmp r9, r11	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6f6	     0xf84cffcffff	                            je 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e6fc	        0x410fb710	                    movzx edx, word [r8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e700	          0x668910	                      mov word [rax], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e703	        0x498d5002	                       lea rdx, [r8 + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e707	          0x4839d7	                            cmp rdi, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e70a	     0xf86bbfcffff	                           jbe 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e710	      0x410fb75002	                movzx edx, word [r8 + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e715	        0x66895002	                  mov word [rax + 2], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e719	        0x498d5004	                       lea rdx, [r8 + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e71d	          0x4839d7	                            cmp rdi, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e720	     0xf86a5fcffff	                           jbe 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e726	      0x410fb75004	                movzx edx, word [r8 + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e72b	        0x66895004	                  mov word [rax + 4], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e72f	        0x498d5006	                       lea rdx, [r8 + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e733	          0x4839d7	                            cmp rdi, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e736	     0xf868ffcffff	                           jbe 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e73c	      0x410fb75006	                movzx edx, word [r8 + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e741	        0x66895006	                  mov word [rax + 6], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e745	        0x498d5008	                       lea rdx, [r8 + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e749	          0x4839d7	                            cmp rdi, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e74c	     0xf8679fcffff	                           jbe 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e752	      0x410fb75008	                movzx edx, word [r8 + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e757	        0x66895008	                  mov word [rax + 8], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e75b	        0x498d500a	                     lea rdx, [r8 + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e75f	          0x4839d7	                            cmp rdi, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e762	     0xf8663fcffff	                           jbe 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e768	      0x410fb7500a	              movzx edx, word [r8 + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e76d	        0x6689500a	                mov word [rax + 0xa], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e771	        0x498d500c	                     lea rdx, [r8 + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e775	          0x4839d7	                            cmp rdi, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e778	     0xf864dfcffff	                           jbe 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e77e	      0x410fb7500c	              movzx edx, word [r8 + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e783	        0x6689500c	                mov word [rax + 0xc], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e787	      0xe93ffcffff	                           jmp 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e78c	         0xf1f4000	                         nop dword [rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e790	      0x4c8d442418	                    lea r8, [rsp + 0x18]	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400e795	          0x4889e9	                            mov rcx, rbp	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400e798	      0xe8a33effff	                 call sym.decNaNs.isra.6	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400e79d	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x400e7a1	            0x85f6	                           test esi, esi	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x400e7a3	     0xf8422fcffff	                            je 0x400e3cb	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x400e7a9	      0xe975fdffff	                           jmp 0x400e523	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x400e7ae	            0x6690	                                     nop	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x400e7b0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e7b6	      0xe908fcffff	                           jmp 0x400e3c3	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e7bb	       0xf1f440000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400e7c0	           0xfb702	                   movzx eax, word [rdx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e7c3	        0x4883c202	                              add rdx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e7c7	        0x4883c602	                              add rsi, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e7cb	        0x668946fe	                  mov word [rsi - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e7cf	          0x4839fa	                            cmp rdx, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e7d2	            0x72ec	                            jb 0x400e7c0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e7d4	      0xe9f2fbffff	                           jmp 0x400e3cb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e7d9	     0xf1f80000000	                         nop dword [rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e7e0	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e7e7	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e7ea	      0xe9a1fdffff	                           jmp 0x400e590	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e7ef	              0x90	                                     nop	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e7f0	          0x4889fe	                            mov rsi, rdi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400e7f3	          0x4889df	                            mov rdi, rbx	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x400e7f6	      0xe800000000	                          call 0x400e7fb	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x400e7fb	          0x4585ff	                         test r15d, r15d	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e7fe	     0xf859a000000	                           jne 0x400e89e	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e804	        0x448b7b04	               mov r15d, dword [rbx + 4]	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e808	            0x8b03	                    mov eax, dword [rbx]	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e80a	      0xe9f5fcffff	                           jmp 0x400e504	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e80f	              0x90	                                     nop	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e810	        0x41f6c470	                         test r12b, 0x70	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400e814	     0xf8533fcffff	                           jne 0x400e44d	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x400e81a	          0x4889c6	                            mov rsi, rax	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x400e81d	          0x4889df	                            mov rdi, rbx	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x400e820	          0x4589f7	                          mov r15d, r14d	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400e823	      0xe800000000	                          call 0x400e828	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x400e828	        0x44897304	               mov dword [rbx + 4], r14d	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400e82c	            0x8b03	                    mov eax, dword [rbx]	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400e82e	      0xe9d1fcffff	                           jmp 0x400e504	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400e833	       0xf1f440000	                   nop dword [rax + rax]	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x400e838	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400e83d	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400e842	          0x4889ee	                            mov rsi, rbp	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400e845	          0x4889df	                            mov rdi, rbx	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400e848	      0xe8a344ffff	                    call sym.decFinalize	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x400e84d	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400e851	    0x81e6ffdfffff	                     and esi, 0xffffdfff	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400e857	        0x89742418	             mov dword [rsp + 0x18], esi	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400e85b	      0xe941ffffff	                           jmp 0x400e7a1	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x400e860	          0x4889f1	                            mov rcx, rsi	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400e863	          0x4989d0	                             mov r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e866	      0xe944feffff	                           jmp 0x400e6af	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e86b	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e870	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e875	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e87a	          0x4889df	                            mov rdi, rbx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e87d	      0xe8ae38ffff	           call sym.decApplyRound.part.9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e882	      0xe942fcffff	                           jmp 0x400e4c9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400e887	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e88b	    0x81e6dff7ffff	                     and esi, 0xfffff7df	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e891	        0x4080ce80	                            or sil, 0x80	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e895	        0x89742418	             mov dword [rsp + 0x18], esi	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e899	      0xe985fcffff	                           jmp 0x400e523	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e89e	            0x8b33	                    mov esi, dword [rbx]	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e8a0	          0x4489fa	                           mov edx, r15d	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x400e8a3	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400e8a7	            0xf7da	                                 neg edx	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400e8a9	      0xe8f223ffff	          call sym.decShiftToMost.part.0	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400e8ae	        0x44037b04	               add r15d, dword [rbx + 4]	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e8b2	            0x8903	                    mov dword [rbx], eax	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x400e8b4	        0x44897b04	               mov dword [rbx + 4], r15d	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e8b8	      0xe947fcffff	                           jmp 0x400e504	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x400e8bd	      0xe800000000	                          call 0x400e8c2	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
decNumberMin	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	136
0x4006170	            0x4155	                                push r13	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006172	            0x4154	                                push r12	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006174	          0x4989cc	                            mov r12, rcx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006177	              0x55	                                push rbp	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006178	              0x53	                                push rbx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006179	          0x4989d5	                            mov r13, rdx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400617c	          0x4889fb	                            mov rbx, rdi	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400617f	          0x4889f5	                            mov rbp, rsi	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006182	        0x4883ec18	                           sub rsp, 0x18	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006186	         0xfb64a08	               movzx ecx, byte [rdx + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400618a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006193	      0x4889442408	                mov qword [rsp + 8], rax	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006198	            0x31c0	                            xor eax, eax	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400619a	         0xfb64608	               movzx eax, byte [rsi + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400619e	    0xc70424000000	                      mov dword [rsp], 0	      1585	decNumber.c	FUNCTION_68	FUNCTION_25
0x40061a5	            0x89c2	                            mov edx, eax	      6044	decNumber.c	FUNCTION_2	DO_1
0x40061a7	             0x9ca	                             or edx, ecx	      6044	decNumber.c	FUNCTION_2	DO_1
0x40061a9	          0xf6c230	                           test dl, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40061ac	            0x755a	                           jne 0x4006208	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40061ae	            0x31d2	                            xor edx, edx	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40061b0	          0x4c89ee	                            mov rsi, r13	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40061b3	          0x4889ef	                            mov rdi, rbp	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40061b6	      0xe8a5baffff	                     call sym.decCompare	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40061bb	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x40061c0	     0xf8432010000	                            je 0x40062f8	      6087	decNumber.c	FUNCTION_2	IF_23
0x40061c6	            0x85c0	                           test eax, eax	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40061c8	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40061d0	     0xf855a010000	                           jne 0x4006330	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40061d6	         0xfb64508	               movzx eax, byte [rbp + 8]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40061da	      0x410fb64d08	               movzx ecx, byte [r13 + 8]	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x40061df	            0x89c2	                            mov edx, eax	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40061e1	            0x89ce	                            mov esi, ecx	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x40061e3	          0x83e280	                     and edx, 0xffffff80	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x40061e6	          0x83e680	                     and esi, 0xffffff80	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x40061e9	          0x4038f2	                             cmp dl, sil	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x40061ec	     0xf845e010000	                            je 0x4006350	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x40061f2	            0x84d2	                             test dl, dl	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x40061f4	     0xf857f000000	                           jne 0x4006279	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x40061fa	            0x89c8	                            mov eax, ecx	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x40061fc	          0x4c89ed	                            mov rbp, r13	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x40061ff	            0xeb78	                           jmp 0x4006279	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006201	     0xf1f80000000	                         nop dword [rax]	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006208	          0x83e210	                           and edx, 0x10	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x400620b	            0x7443	                            je 0x4006250	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x400620d	          0x4889ee	                            mov rsi, rbp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006210	          0x4989e0	                             mov r8, rsp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006213	          0x4c89e1	                            mov rcx, r12	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006216	          0x4c89ea	                            mov rdx, r13	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006219	          0x4889df	                            mov rdi, rbx	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400621c	      0xe81fc4ffff	                 call sym.decNaNs.isra.6	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006221	          0x8b3424	                    mov esi, dword [rsp]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006224	            0x85f6	                           test esi, esi	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4006226	     0xf8594000000	                           jne 0x40062c0	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x400622c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006231	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x400623a	          0x4889d8	                            mov rax, rbx	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x400623d	     0xf853b010000	                           jne 0x400637e	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006243	        0x4883c418	                           add rsp, 0x18	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006247	              0x5b	                                 pop rbx	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006248	              0x5d	                                 pop rbp	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006249	            0x415c	                                 pop r12	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x400624b	            0x415d	                                 pop r13	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x400624d	              0xc3	                                     ret	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x400624e	            0x6690	                                     nop	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4006250	            0xa830	                           test al, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006252	     0xf85b0000000	                           jne 0x4006308	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006258	          0x83e020	                           and eax, 0x20	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400625b	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006263	            0x3c01	                               cmp al, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4006265	            0x19c0	                            sbb eax, eax	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4006267	          0x83e002	                              and eax, 2	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400626a	          0x83e801	                              sub eax, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400626d	            0x85c0	                           test eax, eax	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400626f	     0xf8ecb000000	                           jle 0x4006340	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006275	         0xfb64508	               movzx eax, byte [rbp + 8]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006279	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x400627c	          0x8b4504	                mov eax, dword [rbp + 4]	      6840	decNumber.c	FUNCTION_11
0x400627f	        0x488d550a	                    lea rdx, [rbp + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006283	          0x8b4d00	                    mov ecx, dword [rbp]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006286	      0x4c8d442404	                       lea r8, [rsp + 4]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400628b	          0x4989e1	                             mov r9, rsp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400628e	          0x4c89e6	                            mov rsi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006291	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006294	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x4006297	      0xe804b1ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400629c	      0x488d542404	                      lea rdx, [rsp + 4]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40062a1	          0x4c89e6	                            mov rsi, r12	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40062a4	          0x4889e1	                            mov rcx, rsp	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40062a7	          0x4889df	                            mov rdi, rbx	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40062aa	      0xe841caffff	                    call sym.decFinalize	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40062af	          0x8b3424	                    mov esi, dword [rsp]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40062b2	            0x85f6	                           test esi, esi	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40062b4	     0xf8472ffffff	                            je 0x400622c	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40062ba	    0x660f1f440000	                    nop word [rax + rax]	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40062c0	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40062c4	            0x741f	                            je 0x40062e5	      7736	decNumber.c	FUNCTION_24	IF_1
0x40062c6	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40062cc	            0x7552	                           jne 0x4006320	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40062ce	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062d0	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062d7	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062dd	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062e1	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40062e5	          0x4c89e7	                            mov rdi, r12	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40062e8	      0xe800000000	                          call 0x40062ed	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40062ed	      0xe93affffff	                           jmp 0x400622c	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40062f2	    0x660f1f440000	                    nop word [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40062f8	          0x8b3424	                    mov esi, dword [rsp]	      6087	decNumber.c	FUNCTION_2	IF_23
0x40062fb	          0x83ce10	                            or esi, 0x10	      6087	decNumber.c	FUNCTION_2	IF_23
0x40062fe	          0x893424	                    mov dword [rsp], esi	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006301	            0xebbd	                           jmp 0x40062c0	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006303	       0xf1f440000	                   nop dword [rax + rax]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006308	          0x83e130	                           and ecx, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400630b	     0xf85fcfeffff	                           jne 0x400620d	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006311	      0xe942ffffff	                           jmp 0x4006258	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006320	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006326	            0xebbd	                           jmp 0x40062e5	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006328	     0xf1f84000000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006330	            0xf7d8	                                 neg eax	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006332	      0xe936ffffff	                           jmp 0x400626d	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006337	    0x660f1f840000	                    nop word [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006340	      0x410fb64d08	               movzx ecx, byte [r13 + 8]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006345	      0xe9b0feffff	                           jmp 0x40061fa	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400634a	    0x660f1f440000	                    nop word [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006350	            0x84d2	                             test dl, dl	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4006352	        0x418b7d04	                mov edi, dword [r13 + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006356	            0x7418	                            je 0x4006370	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4006358	          0x397d04	                cmp dword [rbp + 4], edi	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400635b	     0xf8c99feffff	                            jl 0x40061fa	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006361	      0xe913ffffff	                           jmp 0x4006279	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006366	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006370	          0x397d04	                cmp dword [rbp + 4], edi	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4006373	     0xf8f81feffff	                            jg 0x40061fa	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4006379	      0xe9fbfeffff	                           jmp 0x4006279	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400637e	      0xe800000000	                          call 0x4006383	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
decNumberToUInt32	SWITCH,0:functions,0:IF,3:WHILE,0:CALL,4:FOR,1:DO,0:ELSE,2	67
0x4004250	        0x4883ec08	                              sub rsp, 8	       416	decNumber.c	FUNCTION_68	FUNCTION_4
0x4004254	         0xfb64708	               movzx eax, byte [rdi + 8]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4004258	            0xa870	                           test al, 0x70	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x400425a	            0x7507	                           jne 0x4004263	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x400425c	            0x8b0f	                    mov ecx, dword [rdi]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x400425e	          0x83f90a	                            cmp ecx, 0xa	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4004261	            0x7e1d	                           jle 0x4004280	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4004263	          0x4889f7	                            mov rdi, rsi	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4004266	      0xbe80000000	                           mov esi, 0x80	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x400426b	      0xe800000000	                          call 0x4004270	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x4004270	            0x31c0	                            xor eax, eax	       442	decNumber.c	FUNCTION_68	FUNCTION_4
0x4004272	        0x4883c408	                              add rsp, 8	       443	decNumber.c	FUNCTION_68	FUNCTION_4
0x4004276	              0xc3	                                     ret	       443	decNumber.c	FUNCTION_68	FUNCTION_4
0x4004277	    0x660f1f840000	                    nop word [rax + rax]	       443	decNumber.c	FUNCTION_68	FUNCTION_4
0x4004280	          0x8b5704	                mov edx, dword [rdi + 4]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4004283	            0x85d2	                           test edx, edx	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4004285	            0x75dc	                           jne 0x4004263	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4004287	            0x84c0	                             test al, al	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4004289	     0xf88a1000000	                            js 0x4004330	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x400428f	      0x440fb74f0a	            movzx r9d, word [rdi + 0xa] 	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4004294	      0xbacdcccccc	                     mov edx, 0xcccccccd	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4004299	          0x4489c8	                            mov eax, r9d	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400429c	            0xf7e2	                                 mul edx	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400429e	          0xc1ea03	                              shr edx, 3	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042a1	          0x83f903	                              cmp ecx, 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042a4	          0x4189d0	                            mov r8d, edx	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042a7	            0x7e41	                           jle 0x40042ea	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042a9	         0xfb7470c	            movzx eax, word [rdi + 0xc] 	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042ad	     0xfaf05000000	            imul eax, dword [0x040042b4]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042b4	          0x4101c0	                            add r8d, eax	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042b7	          0x83f906	                              cmp ecx, 6	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042ba	            0x7e21	                           jle 0x40042dd	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042bc	         0xfb7470e	            movzx eax, word [rdi + 0xe] 	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042c0	     0xfaf05000000	            imul eax, dword [0x040042c7]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042c7	          0x4101c0	                            add r8d, eax	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042ca	          0x83f90a	                            cmp ecx, 0xa	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042cd	            0x750e	                           jne 0x40042dd	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042cf	         0xfb74710	           movzx eax, word [rdi + 0x10] 	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042d3	     0xfaf05000000	            imul eax, dword [0x040042da]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042da	          0x4101c0	                            add r8d, eax	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40042dd	    0x4181f8999999	                     cmp r8d, 0x19999999	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x40042e4	     0xf8779ffffff	                            ja 0x4004263	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x40042ea	          0x4489c8	                            mov eax, r9d	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042ed	      0xb9cdcccccc	                     mov ecx, 0xcccccccd	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042f2	            0xf7e1	                                 mul ecx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042f4	            0x89d0	                            mov eax, edx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042f6	          0xc1e803	                              shr eax, 3	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042f9	          0x8d0480	                  lea eax, [rax + rax*4]	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042fc	             0x1c0	                            add eax, eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40042fe	          0x4129c1	                            sub r9d, eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4004301	    0x4181f8999999	                     cmp r8d, 0x19999999	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4004308	          0x4489c8	                            mov eax, r9d	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400430b	            0x750a	                           jne 0x4004317	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x400430d	        0x4183f905	                              cmp r9d, 5	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4004311	     0xf874cffffff	                            ja 0x4004263	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4004317	    0x428d14c50000	                         lea edx, [r8*8]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x400431f	        0x428d1442	                   lea edx, [rdx + r8*2]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4004323	             0x1d0	                            add eax, edx	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4004325	      0xe948ffffff	                           jmp 0x4004272	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x400432a	    0x660f1f440000	                    nop word [rax + rax]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4004330	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4004335	     0xf8528ffffff	                           jne 0x4004263	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x400433b	          0x4531c9	                            xor r9d, r9d	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400433e	          0x4531c0	                            xor r8d, r8d	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4004341	          0x83f901	                              cmp ecx, 1	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4004344	     0xf8519ffffff	                           jne 0x4004263	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x400434a	            0xeb9e	                           jmp 0x40042ea	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
decNumberMaxMag	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	135
0x4005f60	            0x4155	                                push r13	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f62	            0x4154	                                push r12	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f64	          0x4989cd	                            mov r13, rcx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f67	              0x55	                                push rbp	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f68	              0x53	                                push rbx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f69	          0x4989d4	                            mov r12, rdx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f6c	          0x4889fb	                            mov rbx, rdi	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f6f	          0x4889f5	                            mov rbp, rsi	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f72	        0x4883ec18	                           sub rsp, 0x18	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f76	         0xfb64a08	               movzx ecx, byte [rdx + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x4005f7a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f83	      0x4889442408	                mov qword [rsp + 8], rax	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f88	            0x31c0	                            xor eax, eax	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f8a	         0xfb64608	               movzx eax, byte [rsi + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x4005f8e	    0xc70424000000	                      mov dword [rsp], 0	      1562	decNumber.c	FUNCTION_68	FUNCTION_24
0x4005f95	            0x89c2	                            mov edx, eax	      6044	decNumber.c	FUNCTION_2	DO_1
0x4005f97	             0x9ca	                             or edx, ecx	      6044	decNumber.c	FUNCTION_2	DO_1
0x4005f99	          0xf6c230	                           test dl, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4005f9c	            0x755a	                           jne 0x4005ff8	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4005f9e	      0xba01000000	                              mov edx, 1	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4005fa3	          0x4c89e6	                            mov rsi, r12	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4005fa6	          0x4889ef	                            mov rdi, rbp	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4005fa9	      0xe8b2bcffff	                     call sym.decCompare	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4005fae	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005fb3	     0xf8457010000	                            je 0x4006110	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005fb9	            0x85c0	                           test eax, eax	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005fbb	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4005fc3	     0xf8594000000	                           jne 0x400605d	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005fc9	         0xfb64d08	               movzx ecx, byte [rbp + 8]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005fcd	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      6113	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005fd3	            0x89ca	                            mov edx, ecx	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005fd5	            0x89c6	                            mov esi, eax	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4005fd7	          0x83e280	                     and edx, 0xffffff80	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005fda	          0x83e680	                     and esi, 0xffffff80	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4005fdd	          0x4038f2	                             cmp dl, sil	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4005fe0	     0xf844a010000	                            je 0x4006130	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4005fe6	            0x84d2	                             test dl, dl	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005fe8	           0xf44c1	                          cmove eax, ecx	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005feb	        0x490f45ec	                         cmovne rbp, r12	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005fef	            0xeb78	                           jmp 0x4006069	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005ff1	     0xf1f80000000	                         nop dword [rax]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4005ff8	          0x83e210	                           and edx, 0x10	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x4005ffb	            0x7443	                            je 0x4006040	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x4005ffd	          0x4889ee	                            mov rsi, rbp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006000	          0x4989e0	                             mov r8, rsp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006003	          0x4c89e9	                            mov rcx, r13	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006006	          0x4c89e2	                            mov rdx, r12	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006009	          0x4889df	                            mov rdi, rbx	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400600c	      0xe82fc6ffff	                 call sym.decNaNs.isra.6	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006011	          0x8b3424	                    mov esi, dword [rsp]	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4006014	            0x85f6	                           test esi, esi	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4006016	     0xf8594000000	                           jne 0x40060b0	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x400601c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4006021	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400602a	          0x4889d8	                            mov rax, rbx	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400602d	     0xf852e010000	                           jne 0x4006161	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4006033	        0x4883c418	                           add rsp, 0x18	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4006037	              0x5b	                                 pop rbx	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4006038	              0x5d	                                 pop rbp	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4006039	            0x415c	                                 pop r12	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400603b	            0x415d	                                 pop r13	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400603d	              0xc3	                                     ret	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400603e	            0x6690	                                     nop	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4006040	            0xa830	                           test al, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006042	     0xf85a0000000	                           jne 0x40060e8	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006048	          0x83e020	                           and eax, 0x20	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400604b	    0xc74424040000	                  mov dword [rsp + 4], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006053	            0x3c01	                               cmp al, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4006055	            0x19c0	                            sbb eax, eax	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4006057	          0x83e002	                              and eax, 2	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400605a	          0x83e801	                              sub eax, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400605d	            0x85c0	                           test eax, eax	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400605f	     0xf8ebb000000	                           jle 0x4006120	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006065	         0xfb64508	               movzx eax, byte [rbp + 8]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006069	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x400606c	          0x8b4504	                mov eax, dword [rbp + 4]	      6840	decNumber.c	FUNCTION_11
0x400606f	        0x488d550a	                    lea rdx, [rbp + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006073	          0x8b4d00	                    mov ecx, dword [rbp]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006076	      0x4c8d442404	                       lea r8, [rsp + 4]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400607b	          0x4989e1	                             mov r9, rsp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400607e	          0x4c89ee	                            mov rsi, r13	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006081	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006084	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x4006087	      0xe814b3ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400608c	      0x488d542404	                      lea rdx, [rsp + 4]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006091	          0x4c89ee	                            mov rsi, r13	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006094	          0x4889e1	                            mov rcx, rsp	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006097	          0x4889df	                            mov rdi, rbx	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400609a	      0xe851ccffff	                    call sym.decFinalize	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400609f	          0x8b3424	                    mov esi, dword [rsp]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40060a2	            0x85f6	                           test esi, esi	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40060a4	     0xf8472ffffff	                            je 0x400601c	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40060aa	    0x660f1f440000	                    nop word [rax + rax]	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x40060b0	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40060b4	            0x741f	                            je 0x40060d5	      7736	decNumber.c	FUNCTION_24	IF_1
0x40060b6	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40060bc	            0x7542	                           jne 0x4006100	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40060be	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40060c0	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40060c7	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40060cd	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40060d1	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40060d5	          0x4c89ef	                            mov rdi, r13	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40060d8	      0xe800000000	                          call 0x40060dd	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40060dd	      0xe93affffff	                           jmp 0x400601c	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40060e2	    0x660f1f440000	                    nop word [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40060e8	          0x83e130	                           and ecx, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x40060eb	     0xf850cffffff	                           jne 0x4005ffd	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x40060f1	      0xe952ffffff	                           jmp 0x4006048	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x40060f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4006100	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006106	            0xebcd	                           jmp 0x40060d5	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006108	     0xf1f84000000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4006110	          0x8b3424	                    mov esi, dword [rsp]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006113	          0x83ce10	                            or esi, 0x10	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006116	          0x893424	                    mov dword [rsp], esi	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006119	            0xeb95	                           jmp 0x40060b0	      6087	decNumber.c	FUNCTION_2	IF_23
0x400611b	       0xf1f440000	                   nop dword [rax + rax]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006120	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4006126	          0x4c89e5	                            mov rbp, r12	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006129	      0xe93bffffff	                           jmp 0x4006069	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400612e	            0x6690	                                     nop	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4006130	            0x84d2	                             test dl, dl	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4006132	          0x8b5504	                mov edx, dword [rbp + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006135	            0x7419	                            je 0x4006150	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4006137	      0x413b542404	                cmp edx, dword [r12 + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400613c	        0x490f4dec	                         cmovge rbp, r12	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006140	           0xf4cc1	                          cmovl eax, ecx	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006143	      0xe921ffffff	                           jmp 0x4006069	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006148	     0xf1f84000000	                   nop dword [rax + rax]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4006150	      0x413b542404	                cmp edx, dword [r12 + 4]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4006155	        0x490f4eec	                         cmovle rbp, r12	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4006159	           0xf4fc1	                          cmovg eax, ecx	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400615c	      0xe908ffffff	                           jmp 0x4006069	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4006161	      0xe800000000	                          call 0x4006166	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
decNumberNextToward	SWITCH,0:functions,0:IF,9:WHILE,0:CALL,12:FOR,0:DO,0:ELSE,4	621
0x400bf50	            0x4157	                                push r15	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf52	            0x4156	                                push r14	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf54	            0x4155	                                push r13	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf56	            0x4154	                                push r12	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf58	          0x4989cc	                            mov r12, rcx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf5b	              0x55	                                push rbp	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf5c	              0x53	                                push rbx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf5d	          0x4889fd	                            mov rbp, rdi	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf60	          0x4889f3	                            mov rbx, rsi	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf63	          0x4989d5	                            mov r13, rdx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf66	        0x4883ec58	                           sub rsp, 0x58	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf6a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf73	      0x4889442448	             mov qword [rsp + 0x48], rax	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf78	            0x31c0	                            xor eax, eax	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf7a	          0x488b01	                    mov rax, qword [rcx]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf7d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1742	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf85	      0x4889442410	             mov qword [rsp + 0x10], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf8a	        0x488b4108	                mov rax, qword [rcx + 8]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf8e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf93	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf97	      0x4889442420	             mov qword [rsp + 0x20], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf9c	          0x8b4118	            mov eax, dword [rcx + 0x18] 	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bf9f	         0xfb64e08	               movzx ecx, byte [rsi + 8]	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400bfa3	        0x89442428	             mov dword [rsp + 0x28], eax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x400bfa7	          0xf6c130	                           test cl, 0x30	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400bfaa	            0x750a	                           jne 0x400bfb6	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400bfac	        0xf6420830	               test byte [rdx + 8], 0x30	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400bfb0	     0xf840a050000	                            je 0x400c4c0	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x400bfb6	          0xf6c110	                           test cl, 0x10	      7689	decNumber.c	FUNCTION_23	IF_1
0x400bfb9	     0xf84a1020000	                            je 0x400c260	      7689	decNumber.c	FUNCTION_23	IF_1
0x400bfbf	    0xc744240c8000	      mov dword [rsp + 0xc], 0x40000080 	      7690	decNumber.c	FUNCTION_23	IF_1
0x400bfc7	      0xbe80000040	                     mov esi, 0x40000080	      7690	decNumber.c	FUNCTION_23	IF_1
0x400bfcc	            0x8b03	                    mov eax, dword [rbx]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400bfce	        0x413b0424	                    cmp eax, dword [r12]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400bfd2	     0xf8ebc020000	                           jle 0x400c294	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400bfd8	          0x884d08	                  mov byte [rbp + 8], cl	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x400bfdb	        0x458b0c24	                    mov r9d, dword [r12]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400bfdf	        0x4c8d450a	                     lea r8, [rbp + 0xa]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400bfe3	        0x4183f931	                           cmp r9d, 0x31	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400bfe7	     0xf8f33050000	                            jg 0x400c520	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400bfed	          0x4963d1	                         movsxd rdx, r9d	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400bff0	     0xfb682000000	                   movzx eax, byte [rdx]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400bff7	        0x498d3c40	                   lea rdi, [r8 + rax*2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400bffb	        0x488d430a	                    lea rax, [rbx + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400bfff	          0x4939f8	                             cmp r8, rdi	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c002	     0xf83f7010000	                           jae 0x400c1ff	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c008	        0x488d4d0c	                    lea rcx, [rbp + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c00c	      0xba01000000	                              mov edx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c011	        0x4c8d5810	                   lea r11, [rax + 0x10]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c015	          0x4989d2	                            mov r10, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c018	        0x4c8d7d0b	                    lea r15, [rbp + 0xb]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c01c	          0x4929ca	                            sub r10, rcx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c01f	          0x4901fa	                            add r10, rdi	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c022	          0x49d1ea	                              shr r10, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c025	          0x4d39d8	                             cmp r8, r11	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c028	        0x4c8d5d1a	                   lea r11, [rbp + 0x1a]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c02c	        0x410f93c5	                              setae r13b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c030	        0x498d5a01	                      lea rbx, [r10 + 1]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c034	          0x4c39d8	                            cmp rax, r11	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c037	        0x410f93c3	                              setae r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c03b	          0x4508dd	                           or r13b, r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c03e	     0xf84bc060000	                            je 0x400c700	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c044	          0x4939ff	                            cmp r15, rdi	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c047	        0x410f96c5	                              setbe r13b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c04b	        0x4883fb0e	                            cmp rbx, 0xe	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c04f	        0x410f97c3	                               seta r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c053	          0x4584dd	                         test r13b, r11b	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c056	     0xf84a4060000	                            je 0x400c700	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c05c	          0x4939ff	                            cmp r15, rdi	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c05f	        0x480f47da	                          cmova rbx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c063	          0x4c89c2	                             mov rdx, r8	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c066	          0x83e20f	                            and edx, 0xf	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c069	          0x48d1ea	                              shr rdx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c06c	          0x48f7da	                                 neg rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c06f	          0x83e207	                              and edx, 7	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c072	          0x4839da	                            cmp rdx, rbx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c075	        0x480f47d3	                          cmova rdx, rbx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c079	          0x4885d2	                           test rdx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c07c	     0xf846e060000	                            je 0x400c6f0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c082	        0x440fb718	                  movzx r11d, word [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c086	        0x4883fa01	                              cmp rdx, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c08a	      0x6644895d0a	              mov word [rbp + 0xa], r11w	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c08f	        0x4c8d5802	                      lea r11, [rax + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c093	            0x747e	                            je 0x400c113	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c095	         0xfb74802	               movzx ecx, word [rax + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c099	        0x4883fa02	                              cmp rdx, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c09d	        0x4c8d5804	                      lea r11, [rax + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0a1	        0x66894d0c	                mov word [rbp + 0xc], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0a5	        0x488d4d0e	                    lea rcx, [rbp + 0xe]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0a9	            0x7468	                            je 0x400c113	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0ab	         0xfb74804	               movzx ecx, word [rax + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0af	        0x4883fa03	                              cmp rdx, 3	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0b3	        0x4c8d5806	                      lea r11, [rax + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0b7	        0x66894d0e	                mov word [rbp + 0xe], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0bb	        0x488d4d10	                   lea rcx, [rbp + 0x10]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0bf	            0x7452	                            je 0x400c113	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0c1	         0xfb74806	               movzx ecx, word [rax + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0c5	        0x4883fa04	                              cmp rdx, 4	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0c9	        0x4c8d5808	                      lea r11, [rax + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0cd	        0x66894d10	               mov word [rbp + 0x10], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0d1	        0x488d4d12	                   lea rcx, [rbp + 0x12]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0d5	            0x743c	                            je 0x400c113	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0d7	         0xfb74808	               movzx ecx, word [rax + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0db	        0x4883fa05	                              cmp rdx, 5	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0df	        0x4c8d580a	                    lea r11, [rax + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0e3	        0x66894d12	               mov word [rbp + 0x12], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0e7	        0x488d4d14	                   lea rcx, [rbp + 0x14]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0eb	            0x7426	                            je 0x400c113	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0ed	         0xfb7480a	            movzx ecx, word [rax + 0xa] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0f1	        0x4883fa07	                              cmp rdx, 7	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0f5	        0x4c8d580c	                    lea r11, [rax + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0f9	        0x66894d14	               mov word [rbp + 0x14], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c0fd	        0x488d4d16	                   lea rcx, [rbp + 0x16]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c101	            0x7510	                           jne 0x400c113	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c103	         0xfb7480c	            movzx ecx, word [rax + 0xc] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c107	        0x4c8d580e	                    lea r11, [rax + 0xe]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c10b	        0x66894d16	               mov word [rbp + 0x16], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c10f	        0x488d4d18	                   lea rcx, [rbp + 0x18]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c113	          0x4839d3	                            cmp rbx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c116	     0xf84d6000000	                            je 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c11c	          0x4829d3	                            sub rbx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c11f	        0x4c8d6bf8	                      lea r13, [rbx - 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c123	        0x49c1ed03	                              shr r13, 3	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c127	        0x4983c501	                              add r13, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c12b	          0x4939ff	                            cmp r15, rdi	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c12e	    0x41bf00000000	                             mov r15d, 0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c134	        0x4d0f47d7	                          cmova r10, r15	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c138	    0x4e8d34ed0000	                        lea r14, [r13*8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c140	          0x4929d2	                            sub r10, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c143	        0x4983fa06	                              cmp r10, 6	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c147	            0x7636	                           jbe 0x400c17f	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c149	          0x4801d2	                            add rdx, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c14c	          0x4531d2	                          xor r10d, r10d	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c14f	          0x4801d0	                            add rax, rdx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c152	      0x4c8d7c150a	              lea r15, [rbp + rdx + 0xa]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c157	            0x31d2	                            xor edx, edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c159	      0xf30f6f0410	        movdqu xmm0, xmmword [rax + rdx]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c15e	        0x4983c201	                              add r10, 1	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c162	      0x410f290417	        movaps xmmword [r15 + rdx], xmm0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c167	        0x4883c210	                           add rdx, 0x10	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c16b	          0x4d39ea	                            cmp r10, r13	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c16e	            0x72e9	                            jb 0x400c159	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c170	        0x4b8d0436	                    lea rax, [r14 + r14]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c174	          0x4901c3	                            add r11, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c177	          0x4801c1	                            add rcx, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c17a	          0x4c39f3	                            cmp rbx, r14	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c17d	            0x7473	                            je 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c17f	        0x410fb703	                   movzx eax, word [r11]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c183	          0x668901	                      mov word [rcx], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c186	        0x488d4102	                      lea rax, [rcx + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c18a	          0x4839c7	                            cmp rdi, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c18d	            0x7663	                           jbe 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c18f	      0x410fb74302	               movzx eax, word [r11 + 2]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c194	        0x66894102	                  mov word [rcx + 2], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c198	        0x488d4104	                      lea rax, [rcx + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c19c	          0x4839c7	                            cmp rdi, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c19f	            0x7651	                           jbe 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1a1	      0x410fb74304	               movzx eax, word [r11 + 4]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1a6	        0x66894104	                  mov word [rcx + 4], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1aa	        0x488d4106	                      lea rax, [rcx + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1ae	          0x4839c7	                            cmp rdi, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1b1	            0x763f	                           jbe 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1b3	      0x410fb74306	               movzx eax, word [r11 + 6]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1b8	        0x66894106	                  mov word [rcx + 6], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1bc	        0x488d4108	                      lea rax, [rcx + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1c0	          0x4839c7	                            cmp rdi, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1c3	            0x762d	                           jbe 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1c5	      0x410fb74308	               movzx eax, word [r11 + 8]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1ca	        0x66894108	                  mov word [rcx + 8], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1ce	        0x488d410a	                    lea rax, [rcx + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1d2	          0x4839c7	                            cmp rdi, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1d5	            0x761b	                           jbe 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1d7	      0x410fb7430a	            movzx eax, word [r11 + 0xa] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1dc	        0x6689410a	                mov word [rcx + 0xa], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1e0	        0x488d410c	                    lea rax, [rcx + 0xc]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1e4	          0x4839c7	                            cmp rdi, rax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1e7	            0x7609	                           jbe 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1e9	      0x410fb7430c	            movzx eax, word [r11 + 0xc] 	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1ee	        0x6689410c	                mov word [rcx + 0xc], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c1f2	        0x4183f931	                           cmp r9d, 0x31	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c1f6	          0x4963d1	                         movsxd rdx, r9d	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c1f9	     0xf8ff1030000	                            jg 0x400c5f0	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c1ff	     0xfb682000000	                   movzx eax, byte [rdx]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c206	          0x8d0440	                  lea eax, [rax + rax*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c209	          0x4139c1	                            cmp r9d, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400c20c	          0x894500	                    mov dword [rbp], eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c20f	     0xf8c47030000	                            jl 0x400c55c	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400c215	         0xfb64d08	               movzx ecx, byte [rbp + 8]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400c219	          0x83e1ef	                     and ecx, 0xffffffef	      7714	decNumber.c	FUNCTION_23
0x400c21c	    0xc74504000000	                  mov dword [rbp + 4], 0	      7715	decNumber.c	FUNCTION_23
0x400c223	          0x83c920	                            or ecx, 0x20	      7714	decNumber.c	FUNCTION_23
0x400c226	          0x884d08	                  mov byte [rbp + 8], cl	      7714	decNumber.c	FUNCTION_23
0x400c229	            0x85f6	                           test esi, esi	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x400c22b	     0xf85b7020000	                           jne 0x400c4e8	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x400c231	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c236	    0x644833342528	                xor rsi, qword fs:[0x28]	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c23f	          0x4889e8	                            mov rax, rbp	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c242	     0xf8568060000	                           jne 0x400c8b0	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c248	        0x4883c458	                           add rsp, 0x58	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c24c	              0x5b	                                 pop rbx	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c24d	              0x5d	                                 pop rbp	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c24e	            0x415c	                                 pop r12	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c250	            0x415d	                                 pop r13	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c252	            0x415e	                                 pop r14	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c254	            0x415f	                                 pop r15	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c256	              0xc3	                                     ret	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c257	    0x660f1f840000	                    nop word [rax + rax]	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x400c260	          0x4d85ed	                           test r13, r13	      7691	decNumber.c	FUNCTION_23	IF_2
0x400c263	     0xf84e7040000	                            je 0x400c750	      7691	decNumber.c	FUNCTION_23	IF_2
0x400c269	      0x410fb64508	               movzx eax, byte [r13 + 8]	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400c26e	            0xa810	                           test al, 0x10	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400c270	     0xf849a030000	                            je 0x400c610	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400c276	          0x4c89eb	                            mov rbx, r13	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400c279	            0x89c1	                            mov ecx, eax	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400c27b	    0xc744240c8000	      mov dword [rsp + 0xc], 0x40000080 	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400c283	            0x8b03	                    mov eax, dword [rbx]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400c285	        0x413b0424	                    cmp eax, dword [r12]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400c289	      0xbe80000040	                     mov esi, 0x40000080	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x400c28e	     0xf8f44fdffff	                            jg 0x400bfd8	      7700	decNumber.c	FUNCTION_23	CALL_1
0x400c294	          0x4839dd	                            cmp rbp, rbx	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400c297	     0xf8478ffffff	                            je 0x400c215	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400c29d	          0x884d08	                  mov byte [rbp + 8], cl	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x400c2a0	          0x8b5304	                mov edx, dword [rbx + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400c2a3	          0x894500	                    mov dword [rbp], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x400c2a6	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400c2aa	          0x895504	                mov dword [rbp + 4], edx	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400c2ad	        0x6689450a	                mov word [rbp + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400c2b1	          0x486303	                 movsxd rax, dword [rbx]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400c2b4	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400c2b7	     0xf8e14040000	                           jle 0x400c6d1	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400c2bd	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2c0	        0x488d7d0c	                    lea rdi, [rbp + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400c2c4	        0x4c8d430a	                     lea r8, [rbx + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2c8	     0xf8eb2040000	                           jle 0x400c780	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2ce	          0x8d7002	                      lea esi, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2d1	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2d6	            0x89f0	                            mov eax, esi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2d8	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2da	            0x89f0	                            mov eax, esi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2dc	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2df	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2e1	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2e4	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2e7	        0x488d530c	                    lea rdx, [rbx + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c2eb	          0x4901c0	                             add r8, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c2ee	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c2f1	     0xf86da030000	                           jbe 0x400c6d1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c2f7	        0x488d4b0e	                    lea rcx, [rbx + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c2fb	          0x4c89c0	                             mov rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c2fe	          0x4829c8	                            sub rax, rcx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c301	        0x488d7001	                      lea rsi, [rax + 1]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c305	        0x488d431c	                   lea rax, [rbx + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c309	          0x48d1ee	                              shr rsi, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c30c	        0x4883c601	                              add rsi, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c310	          0x4839c7	                            cmp rdi, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c313	        0x488d451c	                   lea rax, [rbp + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c317	        0x410f93c1	                               setae r9b	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c31b	          0x4839c2	                            cmp rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c31e	           0xf93c0	                                setae al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c321	          0x4108c1	                              or r9b, al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c324	     0xf8436040000	                            je 0x400c760	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c32a	        0x4883fe0e	                            cmp rsi, 0xe	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c32e	     0xf862c040000	                           jbe 0x400c760	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c334	          0x4889f8	                            mov rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c337	          0x83e00f	                            and eax, 0xf	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c33a	          0x48d1e8	                              shr rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c33d	          0x48f7d8	                                 neg rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c340	          0x83e007	                              and eax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c343	          0x4839f0	                            cmp rax, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c346	        0x480f47c6	                          cmova rax, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c34a	          0x4885c0	                           test rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c34d	     0xf84dd040000	                            je 0x400c830	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c353	      0x440fb74b0c	            movzx r9d, word [rbx + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c358	        0x4883f801	                              cmp rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c35c	      0x6644894d0c	               mov word [rbp + 0xc], r9w	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c361	        0x4c8d4d0e	                     lea r9, [rbp + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c365	            0x747e	                            je 0x400c3e5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c367	         0xfb74b0e	            movzx ecx, word [rbx + 0xe] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c36b	        0x4883f802	                              cmp rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c36f	        0x4c8d4d10	                    lea r9, [rbp + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c373	        0x66894d0e	                mov word [rbp + 0xe], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c377	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c37b	            0x7468	                            je 0x400c3e5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c37d	         0xfb74b10	           movzx ecx, word [rbx + 0x10] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c381	        0x4883f803	                              cmp rax, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c385	        0x4c8d4d12	                    lea r9, [rbp + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c389	        0x66894d10	               mov word [rbp + 0x10], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c38d	        0x488d4b12	                   lea rcx, [rbx + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c391	            0x7452	                            je 0x400c3e5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c393	         0xfb74b12	           movzx ecx, word [rbx + 0x12] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c397	        0x4883f804	                              cmp rax, 4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c39b	        0x4c8d4d14	                    lea r9, [rbp + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c39f	        0x66894d12	               mov word [rbp + 0x12], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3a3	        0x488d4b14	                   lea rcx, [rbx + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3a7	            0x743c	                            je 0x400c3e5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3a9	         0xfb74b14	           movzx ecx, word [rbx + 0x14] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3ad	        0x4883f805	                              cmp rax, 5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3b1	        0x4c8d4d16	                    lea r9, [rbp + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3b5	        0x66894d14	               mov word [rbp + 0x14], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3b9	        0x488d4b16	                   lea rcx, [rbx + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3bd	            0x7426	                            je 0x400c3e5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3bf	         0xfb74b16	           movzx ecx, word [rbx + 0x16] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3c3	        0x4883f807	                              cmp rax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3c7	        0x4c8d4d18	                    lea r9, [rbp + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3cb	        0x66894d16	               mov word [rbp + 0x16], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3cf	        0x488d4b18	                   lea rcx, [rbx + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3d3	            0x7510	                           jne 0x400c3e5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3d5	         0xfb74b18	           movzx ecx, word [rbx + 0x18] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3d9	        0x4c8d4d1a	                    lea r9, [rbp + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3dd	        0x66894d18	               mov word [rbp + 0x18], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3e1	        0x488d4b1a	                   lea rcx, [rbx + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3e5	          0x4829c6	                            sub rsi, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3e8	          0x4801c0	                            add rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3eb	            0x31db	                            xor ebx, ebx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3ed	        0x4c8d5ef8	                      lea r11, [rsi - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3f1	          0x4801c2	                            add rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3f4	          0x4801f8	                            add rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3f7	            0x31ff	                            xor edi, edi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3f9	        0x49c1eb03	                              shr r11, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c3fd	        0x4983c301	                              add r11, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c401	    0x4e8d14dd0000	                        lea r10, [r11*8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c409	      0xf30f6f043a	        movdqu xmm0, xmmword [rdx + rdi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c40e	        0x4883c301	                              add rbx, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c412	         0xf290438	        movaps xmmword [rax + rdi], xmm0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c416	        0x4883c710	                           add rdi, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c41a	          0x4939db	                            cmp r11, rbx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c41d	            0x77ea	                            ja 0x400c409	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c41f	        0x4b8d0412	                    lea rax, [r10 + r10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c423	          0x4801c1	                            add rcx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c426	          0x4c01c8	                             add rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c429	          0x4939f2	                            cmp r10, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c42c	     0xf849b020000	                            je 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c432	           0xfb711	                   movzx edx, word [rcx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c435	          0x668910	                      mov word [rax], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c438	        0x488d5102	                      lea rdx, [rcx + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c43c	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c43f	     0xf8688020000	                           jbe 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c445	         0xfb75102	               movzx edx, word [rcx + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c449	        0x66895002	                  mov word [rax + 2], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c44d	        0x488d5104	                      lea rdx, [rcx + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c451	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c454	     0xf8673020000	                           jbe 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c45a	         0xfb75104	               movzx edx, word [rcx + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c45e	        0x66895004	                  mov word [rax + 4], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c462	        0x488d5106	                      lea rdx, [rcx + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c466	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c469	     0xf865e020000	                           jbe 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c46f	         0xfb75106	               movzx edx, word [rcx + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c473	        0x66895006	                  mov word [rax + 6], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c477	        0x488d5108	                      lea rdx, [rcx + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c47b	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c47e	     0xf8649020000	                           jbe 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c484	         0xfb75108	               movzx edx, word [rcx + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c488	        0x66895008	                  mov word [rax + 8], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c48c	        0x488d510a	                    lea rdx, [rcx + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c490	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c493	     0xf8634020000	                           jbe 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c499	         0xfb7510a	            movzx edx, word [rcx + 0xa] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c49d	        0x6689500a	                mov word [rax + 0xa], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c4a1	        0x488d510c	                    lea rdx, [rcx + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c4a5	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c4a8	     0xf861f020000	                           jbe 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c4ae	         0xfb7510c	            movzx edx, word [rcx + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c4b2	        0x6689500c	                mov word [rax + 0xc], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c4b6	      0xe912020000	                           jmp 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c4bb	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c4c0	            0x31d2	                            xor edx, edx	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x400c4c2	          0x4c89ee	                            mov rsi, r13	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x400c4c5	          0x4889df	                            mov rdi, rbx	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x400c4c8	      0xe89357ffff	                     call sym.decCompare	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x400c4cd	      0x3d00000080	                     cmp eax, 0x80000000	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x400c4d2	     0xf8550010000	                           jne 0x400c628	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x400c4d8	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x400c4dc	          0x83ce10	                            or esi, 0x10	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x400c4df	        0x8974240c	              mov dword [rsp + 0xc], esi	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x400c4e3	       0xf1f440000	                   nop dword [rax + rax]	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x400c4e8	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400c4ec	            0x7424	                            je 0x400c512	      7736	decNumber.c	FUNCTION_24	IF_1
0x400c4ee	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c4f4	     0xf85e6010000	                           jne 0x400c6e0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c4fa	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400c4fc	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400c503	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400c50a	        0x6689450a	                mov word [rbp + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400c50e	        0xc6450820	                mov byte [rbp + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400c512	          0x4c89e7	                            mov rdi, r12	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400c515	      0xe800000000	                          call 0x400c51a	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400c51a	      0xe912fdffff	                           jmp 0x400c231	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400c51f	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400c520	        0x418d4902	                       lea ecx, [r9 + 2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c524	      0xba56555555	                     mov edx, 0x55555556	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c529	            0x89c8	                            mov eax, ecx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c52b	          0xc1f91f	                           sar ecx, 0x1f	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c52e	            0xf7ea	                                imul edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c530	            0x29ca	                            sub edx, ecx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c532	          0x4863c2	                         movsxd rax, edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c535	        0x498d3c40	                   lea rdi, [r8 + rax*2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c539	        0x488d430a	                    lea rax, [rbx + 0xa]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c53d	          0x4939f8	                             cmp r8, rdi	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c540	     0xf82c2faffff	                            jb 0x400c008	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c546	          0x8d0452	                  lea eax, [rdx + rdx*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c549	     0xf1f80000000	                         nop dword [rax]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c550	          0x4139c1	                            cmp r9d, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400c553	          0x894500	                    mov dword [rbp], eax	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c556	     0xf8db9fcffff	                           jge 0x400c215	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x400c55c	            0x89c2	                            mov edx, eax	      7628	decNumber.c	FUNCTION_21	IF_1
0x400c55e	          0x4429ca	                            sub edx, r9d	      7628	decNumber.c	FUNCTION_21	IF_1
0x400c561	            0x39d0	                            cmp eax, edx	      7628	decNumber.c	FUNCTION_21	IF_1
0x400c563	     0xf8e57010000	                           jle 0x400c6c0	      7628	decNumber.c	FUNCTION_21	IF_1
0x400c569	        0x4183f931	                           cmp r9d, 0x31	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c56d	     0xf8fb5010000	                            jg 0x400c728	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c573	          0x4963c1	                         movsxd rax, r9d	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c576	     0xfb690000000	                   movzx edx, byte [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c57d	      0x488d4c12fe	                lea rcx, [rdx + rdx - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c582	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400c586	        0x498d3c08	                     lea rdi, [r8 + rcx]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c58a	          0x4489ca	                            mov edx, r9d	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400c58d	            0x29c2	                            sub edx, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400c58f	          0x83fa03	                              cmp edx, 3	      7640	decNumber.c	FUNCTION_21	IF_3
0x400c592	            0x7412	                            je 0x400c5a6	      7640	decNumber.c	FUNCTION_21	IF_3
0x400c594	           0xfb707	                   movzx eax, word [rdi]	      7640	decNumber.c	FUNCTION_21	IF_3
0x400c597	          0x4863da	                         movsxd rbx, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x400c59a	            0x31d2	                            xor edx, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x400c59c	    0xf7349d000000	                       div dword [rbx*4]	      7640	decNumber.c	FUNCTION_21	IF_3
0x400c5a3	          0x668917	                      mov word [rdi], dx	      7640	decNumber.c	FUNCTION_21	IF_3
0x400c5a6	          0x48d1f9	                              sar rcx, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5a9	          0x8d4101	                      lea eax, [rcx + 1]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5ac	        0x8d544901	              lea edx, [rcx + rcx*2 + 1]	      7763	decNumber.c	FUNCTION_25
0x400c5b0	            0x4898	                                    cdqe	      7762	decNumber.c	FUNCTION_25
0x400c5b2	      0x498d4440fe	               lea rax, [r8 + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x400c5b7	          0x4939c0	                             cmp r8, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400c5ba	            0x7724	                            ja 0x400c5e0	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400c5bc	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400c5bf	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400c5c2	     0xf8578020000	                           jne 0x400c840	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400c5c8	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400c5cb	            0x7413	                            je 0x400c5e0	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400c5cd	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400c5d1	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400c5d4	          0x4939c0	                             cmp r8, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400c5d7	            0x76e3	                           jbe 0x400c5bc	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400c5d9	     0xf1f80000000	                         nop dword [rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400c5e0	          0x895500	                    mov dword [rbp], edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5e3	      0xe92dfcffff	                           jmp 0x400c215	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5e8	     0xf1f84000000	                   nop dword [rax + rax]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5f0	        0x418d4902	                       lea ecx, [r9 + 2]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5f4	      0xba56555555	                     mov edx, 0x55555556	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5f9	            0x89c8	                            mov eax, ecx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5fb	          0xc1f91f	                           sar ecx, 0x1f	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c5fe	            0xf7ea	                                imul edx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c600	            0x29ca	                            sub edx, ecx	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400c602	          0x8d0452	                  lea eax, [rdx + rdx*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c605	      0xe946ffffff	                           jmp 0x400c550	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c60a	    0x660f1f440000	                    nop word [rax + rax]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x400c610	            0x89ca	                            mov edx, ecx	      7696	decNumber.c	FUNCTION_23	IF_4
0x400c612	          0x83e220	                           and edx, 0x20	      7696	decNumber.c	FUNCTION_23	IF_4
0x400c615	           0xf44c8	                          cmove ecx, eax	      7696	decNumber.c	FUNCTION_23	IF_4
0x400c618	        0x490f44dd	                          cmove rbx, r13	      7696	decNumber.c	FUNCTION_23	IF_4
0x400c61c	            0x31f6	                            xor esi, esi	      7696	decNumber.c	FUNCTION_23	IF_4
0x400c61e	      0xe9a9f9ffff	                           jmp 0x400bfcc	      7696	decNumber.c	FUNCTION_23	IF_4
0x400c623	       0xf1f440000	                   nop dword [rax + rax]	      7696	decNumber.c	FUNCTION_23	IF_4
0x400c628	            0x85c0	                           test eax, eax	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x400c62a	     0xf8460010000	                            je 0x400c790	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x400c630	         0xfb64308	               movzx eax, byte [rbx + 8]	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400c634	     0xf8886010000	                            js 0x400c7c0	      1757	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400c63a	          0x83e0c0	                     and eax, 0xffffffc0	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x400c63d	            0x3c40	                            cmp al, 0x40	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x400c63f	     0xf849b010000	                            je 0x400c7e0	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x400c645	    0xc744241c0600	               mov dword [rsp + 0x1c], 6	      1773	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4
0x400c64d	    0x41b880000000	                           mov r8d, 0x80	      1773	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4
0x400c653	      0xba01000000	                              mov edx, 1	      1777	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x400c658	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x400c65d	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x400c662	      0x668954243a	               mov word [rsp + 0x3a], dx	      1777	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x400c667	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x400c66c	          0x4889de	                            mov rsi, rbx	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x400c66f	          0x4889ef	                            mov rdi, rbp	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x400c672	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400c677	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400c67f	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1778	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x400c687	      0xe8c4c9ffff	                       call sym.decAddOp	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x400c68c	        0xf6450870	               test byte [rbp + 8], 0x70	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x400c690	            0x751d	                           jne 0x400c6af	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x400c692	      0x66837d0a00	                 cmp word [rbp + 0xa], 0	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400c697	          0x8b4500	                    mov eax, dword [rbp]	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400c69a	            0x7505	                           jne 0x400c6a1	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400c69c	          0x83f801	                              cmp eax, 1	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400c69f	            0x740e	                            je 0x400c6af	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x400c6a1	           0x34504	                add eax, dword [rbp + 4]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x400c6a4	      0x413b442408	                cmp eax, dword [r12 + 8]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x400c6a9	     0xf8f82fbffff	                            jg 0x400c231	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x400c6af	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x400c6b3	      0xe971fbffff	                           jmp 0x400c229	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x400c6b8	     0xf1f84000000	                   nop dword [rax + rax]	      3520	decNumber.c	FUNCTION_68	FUNCTION_58	IF_4
0x400c6c0	            0x31ff	                            xor edi, edi	      7634	decNumber.c	FUNCTION_21	IF_1
0x400c6c2	    0xc74500010000	                      mov dword [rbp], 1	      7635	decNumber.c	FUNCTION_21	IF_1
0x400c6c9	        0x66897d0a	                mov word [rbp + 0xa], di	      7634	decNumber.c	FUNCTION_21	IF_1
0x400c6cd	         0xfb64d08	               movzx ecx, byte [rbp + 8]	      7634	decNumber.c	FUNCTION_21	IF_1
0x400c6d1	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      7634	decNumber.c	FUNCTION_21	IF_1
0x400c6d5	      0xe93ffbffff	                           jmp 0x400c219	      7634	decNumber.c	FUNCTION_21	IF_1
0x400c6da	    0x660f1f440000	                    nop word [rax + rax]	      7634	decNumber.c	FUNCTION_21	IF_1
0x400c6e0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c6e6	      0xe927feffff	                           jmp 0x400c512	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c6eb	       0xf1f440000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c6f0	          0x4c89c1	                             mov rcx, r8	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c6f3	          0x4989c3	                            mov r11, rax	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c6f6	      0xe921faffff	                           jmp 0x400c11c	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c6fb	       0xf1f440000	                   nop dword [rax + rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c700	          0x4c89c2	                             mov rdx, r8	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c703	       0xf1f440000	                   nop dword [rax + rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x400c708	           0xfb708	                   movzx ecx, word [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c70b	        0x4883c202	                              add rdx, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c70f	        0x4883c002	                              add rax, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c713	        0x66894afe	                  mov word [rdx - 2], cx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c717	          0x4839d7	                            cmp rdi, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c71a	            0x77ec	                            ja 0x400c708	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c71c	      0xe9d1faffff	                           jmp 0x400c1f2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c721	     0xf1f80000000	                         nop dword [rax]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x400c728	        0x418d4902	                       lea ecx, [r9 + 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c72c	      0xba56555555	                     mov edx, 0x55555556	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c731	            0x89c8	                            mov eax, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c733	          0xc1f91f	                           sar ecx, 0x1f	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c736	            0xf7ea	                                imul edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c738	            0x29ca	                            sub edx, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c73a	          0x4863c2	                         movsxd rax, edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c73d	      0x488d4c00fe	                lea rcx, [rax + rax - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c742	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400c746	        0x498d3c08	                     lea rdi, [r8 + rcx]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c74a	      0xe93bfeffff	                           jmp 0x400c58a	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c74f	              0x90	                                     nop	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400c750	            0x31f6	                            xor esi, esi	      7691	decNumber.c	FUNCTION_23	IF_2
0x400c752	      0xe975f8ffff	                           jmp 0x400bfcc	      7691	decNumber.c	FUNCTION_23	IF_2
0x400c757	    0x660f1f840000	                    nop word [rax + rax]	      7691	decNumber.c	FUNCTION_23	IF_2
0x400c760	           0xfb702	                   movzx eax, word [rdx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c763	        0x4883c202	                              add rdx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c767	        0x4883c702	                              add rdi, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c76b	        0x668947fe	                  mov word [rdi - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c76f	          0x4939d0	                             cmp r8, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c772	            0x77ec	                            ja 0x400c760	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c774	      0xe954ffffff	                           jmp 0x400c6cd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c779	     0xf1f80000000	                         nop dword [rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c780	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c787	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c78a	      0xe958fbffff	                           jmp 0x400c2e7	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c78f	              0x90	                                     nop	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400c790	          0x4889de	                            mov rsi, rbx	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x400c793	          0x4889ef	                            mov rdi, rbp	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x400c796	      0x450fb66d08	              movzx r13d, byte [r13 + 8]	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c79b	      0xe800000000	                          call 0x400c7a0	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x400c7a0	         0xfb64508	               movzx eax, byte [rbp + 8]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c7a4	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c7a8	        0x4183e580	                    and r13d, 0xffffff80	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c7ac	          0x83e07f	                           and eax, 0x7f	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c7af	          0x4109c5	                            or r13d, eax	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c7b2	        0x44886d08	                mov byte [rbp + 8], r13b	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c7b6	      0xe96efaffff	                           jmp 0x400c229	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c7bb	       0xf1f440000	                   nop dword [rax + rax]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400c7c0	          0x83e0c0	                     and eax, 0xffffffc0	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400c7c3	            0x3cc0	                            cmp al, 0xc0	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400c7c5	     0xf8491000000	                            je 0x400c85c	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400c7cb	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400c7d3	          0x4531c0	                            xor r8d, r8d	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400c7d6	      0xe978feffff	                           jmp 0x400c653	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400c7db	       0xf1f440000	                   nop dword [rax + rax]	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400c7e0	        0x418b0424	                    mov eax, dword [r12]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400c7e4	        0x488d550a	                    lea rdx, [rbp + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400c7e8	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c7eb	          0x894500	                    mov dword [rbp], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400c7ee	            0x7e15	                           jle 0x400c805	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c7f0	      0xb9e7030000	                          mov ecx, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c7f5	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x400c7f8	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400c7fc	        0x66894afe	                  mov word [rdx - 2], cx	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c800	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c803	            0x7feb	                            jg 0x400c7f0	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c805	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400c807	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400c80e	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400c811	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400c814	        0xc6450800	                   mov byte [rbp + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400c818	      0x418b442404	                mov eax, dword [r12 + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400c81d	        0x412b0424	                    sub eax, dword [r12]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400c821	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400c824	          0x894504	                mov dword [rbp + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400c827	      0xe905faffff	                           jmp 0x400c231	      1771	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x400c82c	         0xf1f4000	                         nop dword [rax]	      1771	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x400c830	          0x4989f9	                             mov r9, rdi	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400c833	          0x4889d1	                            mov rcx, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c836	      0xe9aafbffff	                           jmp 0x400c3e5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c83b	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400c840	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400c844	     0xf8696fdffff	                           jbe 0x400c5e0	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400c84a	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400c84d	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400c850	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400c854	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400c857	      0xe984fdffff	                           jmp 0x400c5e0	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400c85c	        0x418b0424	                    mov eax, dword [r12]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400c860	        0x488d550a	                    lea rdx, [rbp + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400c864	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c867	          0x894500	                    mov dword [rbp], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400c86a	            0x7e19	                           jle 0x400c885	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c86c	         0xf1f4000	                         nop dword [rax]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c870	      0xbee7030000	                          mov esi, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c875	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x400c878	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400c87c	        0x668972fe	                  mov word [rdx - 2], si	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c880	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c883	            0x7feb	                            jg 0x400c870	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400c885	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400c887	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400c88e	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400c891	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400c894	        0xc6450800	                   mov byte [rbp + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400c898	      0x418b442404	                mov eax, dword [r12 + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400c89d	        0x412b0424	                    sub eax, dword [r12]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400c8a1	        0xc6450880	                mov byte [rbp + 8], 0x80	      1761	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400c8a5	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400c8a8	          0x894504	                mov dword [rbp + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400c8ab	      0xe981f9ffff	                           jmp 0x400c231	      1762	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400c8b0	      0xe800000000	                          call 0x400c8b5	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
decLnOp	SWITCH,0:functions,44:IF,29:WHILE,0:CALL,44:FOR,1:DO,1:ELSE,3	1612
0x400ee30	            0x4157	                                push r15	      5582	decNumber.c	FUNCTION_68
0x400ee32	            0x4156	                                push r14	      5582	decNumber.c	FUNCTION_68
0x400ee34	            0x4155	                                push r13	      5582	decNumber.c	FUNCTION_68
0x400ee36	            0x4154	                                push r12	      5582	decNumber.c	FUNCTION_68
0x400ee38	              0x55	                                push rbp	      5582	decNumber.c	FUNCTION_68
0x400ee39	              0x53	                                push rbx	      5582	decNumber.c	FUNCTION_68
0x400ee3a	    0x4881ecb80100	                          sub rsp, 0x1b8	      5582	decNumber.c	FUNCTION_68
0x400ee41	         0xfb64608	               movzx eax, byte [rsi + 8]	      5610	decNumber.c	DO_1	IF_2
0x400ee45	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      5582	decNumber.c	FUNCTION_68
0x400ee4e	    0x48899c24a801	            mov qword [rsp + 0x1a8], rbx	      5582	decNumber.c	FUNCTION_68
0x400ee56	            0x31db	                            xor ebx, ebx	      5582	decNumber.c	FUNCTION_68
0x400ee58	      0x48897c2440	             mov qword [rsp + 0x40], rdi	      5582	decNumber.c	FUNCTION_68
0x400ee5d	      0x4889742408	                mov qword [rsp + 8], rsi	      5582	decNumber.c	FUNCTION_68
0x400ee62	      0x4889542438	             mov qword [rsp + 0x38], rdx	      5582	decNumber.c	FUNCTION_68
0x400ee67	    0x48898c248000	             mov qword [rsp + 0x80], rcx	      5582	decNumber.c	FUNCTION_68
0x400ee6f	            0xa870	                           test al, 0x70	      5610	decNumber.c	DO_1	IF_2
0x400ee71	    0xc78424940000	               mov dword [rsp + 0x94], 0	      5583	decNumber.c	
0x400ee7c	            0x7472	                            je 0x400eef0	      5610	decNumber.c	DO_1	IF_2
0x400ee7e	            0xa840	                           test al, 0x40	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400ee80	     0xf847a060000	                            je 0x400f500	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400ee86	            0x84c0	                             test al, al	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x400ee88	     0xf88a2050000	                            js 0x400f430	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x400ee8e	      0x488b742408	                mov rsi, qword [rsp + 8]	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x400ee93	      0xe800000000	                          call 0x400ee98	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x400ee98	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5597	decNumber.c	
0x400eea1	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5594	decNumber.c	
0x400eeaa	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5797	decNumber.c	DO_1
0x400eeaf	      0xe800000000	                          call 0x400eeb4	      5797	decNumber.c	DO_1
0x400eeb4	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      5798	decNumber.c	DO_1
0x400eeb9	      0xe800000000	                          call 0x400eebe	      5798	decNumber.c	DO_1
0x400eebe	    0x488b9c24a801	           mov rbx, qword [rsp + 0x1a8] 	      5801	decNumber.c	DO_1
0x400eec6	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5801	decNumber.c	DO_1
0x400eecf	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5801	decNumber.c	DO_1
0x400eed4	     0xf858c1b0000	                           jne 0x4010a66	      5801	decNumber.c	DO_1
0x400eeda	    0x4881c4b80100	                          add rsp, 0x1b8	      5801	decNumber.c	DO_1
0x400eee1	              0x5b	                                 pop rbx	      5801	decNumber.c	DO_1
0x400eee2	              0x5d	                                 pop rbp	      5801	decNumber.c	DO_1
0x400eee3	            0x415c	                                 pop r12	      5801	decNumber.c	DO_1
0x400eee5	            0x415d	                                 pop r13	      5801	decNumber.c	DO_1
0x400eee7	            0x415e	                                 pop r14	      5801	decNumber.c	DO_1
0x400eee9	            0x415f	                                 pop r15	      5801	decNumber.c	DO_1
0x400eeeb	              0xc3	                                     ret	      5801	decNumber.c	DO_1
0x400eeec	         0xf1f4000	                         nop dword [rax]	      5801	decNumber.c	DO_1
0x400eef0	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400eef5	         0xfb7530a	            movzx edx, word [rbx + 0xa] 	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400eef9	          0x6685d2	                             test dx, dx	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400eefc	     0xf84ee040000	                            je 0x400f3f0	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400ef02	            0x84c0	                             test al, al	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x400ef04	     0xf8826050000	                            js 0x400f430	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x400ef0a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5632	decNumber.c	DO_1	IF_7
0x400ef0f	        0x448b7b04	               mov r15d, dword [rbx + 4]	      5632	decNumber.c	DO_1	IF_7
0x400ef13	          0x4585ff	                         test r15d, r15d	      5632	decNumber.c	DO_1	IF_7
0x400ef16	     0xf843c050000	                            je 0x400f458	      5632	decNumber.c	DO_1	IF_7
0x400ef1c	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5632	decNumber.c	DO_1	IF_7
0x400ef21	            0x8b1b	                    mov ebx, dword [rbx]	      5632	decNumber.c	DO_1	IF_7
0x400ef23	            0x8b00	                    mov eax, dword [rax]	      5632	decNumber.c	DO_1	IF_7
0x400ef25	            0x39c3	                            cmp ebx, eax	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400ef27	      0xba07000000	                              mov edx, 7	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400ef2c	           0xf4dc3	                         cmovge eax, ebx	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400ef2f	          0x83f807	                              cmp eax, 7	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400ef32	           0xf4cc2	                          cmovl eax, edx	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400ef35	          0x83c002	                              add eax, 2	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400ef38	          0x83f831	                           cmp eax, 0x31	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ef3b	        0x89442458	             mov dword [rsp + 0x58], eax	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400ef3f	          0x4863f8	                         movsxd rdi, eax	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ef42	     0xf8f88160000	                            jg 0x40105d0	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ef48	          0x83f810	                           cmp eax, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ef4b	      0xb810000000	                           mov eax, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ef50	        0x480f4dc7	                         cmovge rax, rdi	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ef54	     0xfb680000000	                   movzx eax, byte [rax]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ef5b	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400ef5f	          0x83f830	                           cmp eax, 0x30	      5665	decNumber.c	DO_1	IF_7	IF_11
0x400ef62	    0x4c8dbc24f000	                   lea r15, [rsp + 0xf0]	      5595	decNumber.c	
0x400ef6a	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5594	decNumber.c	
0x400ef73	     0xf87bc160000	                            ja 0x4010635	      5665	decNumber.c	DO_1	IF_7	IF_11
0x400ef79	         0x35c2458	             add ebx, dword [rsp + 0x58]	      5672	decNumber.c	DO_1	IF_7
0x400ef7d	          0x83fb31	                           cmp ebx, 0x31	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ef80	     0xf8f8a160000	                            jg 0x4010610	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ef86	      0xb810000000	                           mov eax, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ef8b	          0x83fb10	                           cmp ebx, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ef8e	           0xf4cd8	                          cmovl ebx, eax	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ef91	          0x4863c3	                         movsxd rax, ebx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ef94	     0xfb680000000	                   movzx eax, byte [rax]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ef9b	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400ef9f	          0x83f83c	                           cmp eax, 0x3c	      5674	decNumber.c	DO_1	IF_7	IF_13
0x400efa2	     0xf8650160000	                           jbe 0x40105f8	      5674	decNumber.c	DO_1	IF_7	IF_13
0x400efa8	            0x89c7	                            mov edi, eax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400efaa	      0xe800000000	                          call 0x400efaf	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400efaf	          0x4885c0	                           test rax, rax	      5676	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400efb2	      0x4889442450	             mov qword [rsp + 0x50], rax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400efb7	          0x4989c5	                            mov r13, rax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400efba	     0xf84f7190000	                            je 0x40109b7	      5676	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400efc0	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400efc8	      0xbe40000000	                           mov esi, 0x40	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400efcd	      0xe800000000	                          call 0x400efd2	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400efd2	      0x488b442408	                mov rax, qword [rsp + 8]	      5692	decNumber.c	DO_1	IF_7
0x400efd7	          0x448b00	                    mov r8d, dword [rax]	      5692	decNumber.c	DO_1	IF_7
0x400efda	          0x4489c3	                            mov ebx, r8d	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400efdd	           0x35804	                add ebx, dword [rax + 4]	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400efe0	            0x89d9	                            mov ecx, ebx	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400efe2	     0xf88d4160000	                            js 0x40106bc	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400efe8	    0x41be00000000	                             mov r14d, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400efee	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400eff3	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400effb	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f002	      0x664589770a	              mov word [r15 + 0xa], r14w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f007	     0xf85db160000	                           jne 0x40106e8	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x400f00d	        0x498d470a	                    lea rax, [r15 + 0xa]	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x400f011	      0x4889442430	             mov qword [rsp + 0x30], rax	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x400f016	        0x498d450a	                    lea rax, [r13 + 0xa]	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f01a	      0xbb2e010000	                          mov ebx, 0x12e	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f01f	      0xba03000000	                              mov edx, 3	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x400f024	      0x6641895d0c	                mov word [r13 + 0xc], bx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f029	    0x41bb49020000	                         mov r11d, 0x249	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f02f	      0xbd02000000	                              mov ebp, 2	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f034	          0x4889c3	                            mov rbx, rax	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f037	      0x4889442428	             mov qword [rsp + 0x28], rax	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f03c	      0x488d4450fe	              lea rax, [rax + rdx*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x400f041	      0x41c6450800	                   mov byte [r13 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f046	      0x6645895d0a	              mov word [r13 + 0xa], r11w	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f04b	        0x8d5452fe	              lea edx, [rdx + rdx*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x400f04f	          0x4839c3	                            cmp rbx, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f052	      0x6641896d0e	                mov word [r13 + 0xe], bp	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x400f057	            0x7731	                            ja 0x400f08a	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f059	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f05c	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f05f	     0xf85b2170000	                           jne 0x4010817	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f065	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f068	          0x4889de	                            mov rsi, rbx	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f06b	            0x741d	                            je 0x400f08a	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f06d	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f071	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f074	          0x4839c6	                            cmp rsi, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f077	            0x7711	                            ja 0x400f08a	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f079	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f07c	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f07f	     0xf8592170000	                           jne 0x4010817	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f085	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f088	            0x75e3	                           jne 0x400f06d	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f08a	    0x4c8d84249400	                    lea r8, [rsp + 0x94]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400f092	    0x488d8c24a000	                   lea rcx, [rsp + 0xa0]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400f09a	        0x41895500	                    mov dword [r13], edx	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x400f09e	          0x4c89fe	                            mov rsi, r15	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400f0a1	          0x4c89ea	                            mov rdx, r13	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400f0a4	          0x4c89ff	                            mov rdi, r15	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400f0a7	    0x41c74504faff	        mov dword [r13 + 4], 0xfffffffa 	      5695	decNumber.c	DO_1	IF_7
0x400f0af	      0xe82c45ffff	                  call sym.decMultiplyOp	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400f0b4	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      6839	decNumber.c	FUNCTION_11
0x400f0b9	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f0c1	    0x4c8d84249800	                    lea r8, [rsp + 0x98]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f0c9	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f0d1	          0x4c89ef	                            mov rdi, r13	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f0d4	    0xc78424980000	               mov dword [rsp + 0x98], 0	      5699	decNumber.c	DO_1	IF_7
0x400f0df	    0xc78424a00000	               mov dword [rsp + 0xa0], 2	      5700	decNumber.c	DO_1	IF_7
0x400f0ea	    0xc78424ac0000	               mov dword [rsp + 0xac], 5	      5700	decNumber.c	DO_1	IF_7
0x400f0f5	         0xfb64308	               movzx eax, byte [rbx + 8]	      6839	decNumber.c	FUNCTION_11
0x400f0f9	            0x8b0b	                    mov ecx, dword [rbx]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f0fb	        0x488d530a	                    lea rdx, [rbx + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f0ff	        0x41884508	                  mov byte [r13 + 8], al	      6839	decNumber.c	FUNCTION_11
0x400f103	          0x8b4304	                mov eax, dword [rbx + 4]	      6840	decNumber.c	FUNCTION_11
0x400f106	        0x41894504	                mov dword [r13 + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400f10a	      0xe89122ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f10f	    0x41c745040000	                  mov dword [r13 + 4], 0	      5702	decNumber.c	DO_1	IF_7
0x400f117	          0x4c89ef	                            mov rdi, r13	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x400f11a	      0xe87113ffff	                      call sym.decGetInt	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x400f11f	          0x83f809	                              cmp eax, 9	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400f122	            0x7f0a	                            jg 0x400f12e	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400f124	    0x8d14c5000000	                        lea edx, [rax*8]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400f12b	          0x8d0442	                  lea eax, [rdx + rax*2]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x400f12e	          0x83e80a	                            sub eax, 0xa	      5705	decNumber.c	DO_1	IF_7
0x400f131	          0x4531d2	                          xor r10d, r10d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f134	      0x41c6450800	                   mov byte [r13 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f139	            0x4898	                                    cdqe	      5705	decNumber.c	DO_1	IF_7
0x400f13b	    0x41c745000100	                      mov dword [r13], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f143	      0x664589550a	              mov word [r13 + 0xa], r10w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f148	     0xfb78c000000	             movzx ecx, word [rax + rax]	      5705	decNumber.c	DO_1	IF_7
0x400f150	            0x89cb	                            mov ebx, ecx	      5705	decNumber.c	DO_1	IF_7
0x400f152	          0xc1f902	                              sar ecx, 2	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400f155	            0x85c9	                           test ecx, ecx	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x400f157	     0xf8513150000	                           jne 0x4010670	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x400f15d	          0x4189d8	                            mov r8d, ebx	      5707	decNumber.c	DO_1	IF_7
0x400f160	      0xb8fdffffff	                     mov eax, 0xfffffffd	      5707	decNumber.c	DO_1	IF_7
0x400f165	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400f16d	        0x4183e003	                              and r8d, 3	      5707	decNumber.c	DO_1	IF_7
0x400f171	    0x488d8c24a000	                   lea rcx, [rsp + 0xa0]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400f179	      0x41c6450880	                mov byte [r13 + 8], 0x80	      5708	decNumber.c	DO_1	IF_7
0x400f17e	          0x4429c0	                            sub eax, r8d	      5707	decNumber.c	DO_1	IF_7
0x400f181	          0x4c89ea	                            mov rdx, r13	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400f184	          0x4531c0	                            xor r8d, r8d	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400f187	        0x41894504	                mov dword [r13 + 4], eax	      5707	decNumber.c	DO_1	IF_7
0x400f18b	          0x4c89fe	                            mov rsi, r15	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400f18e	          0x4c89ff	                            mov rdi, r15	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400f191	    0xc78424a00000	           mov dword [rsp + 0xa0], 0x10 	      5709	decNumber.c	DO_1	IF_7
0x400f19c	    0xc78424ac0000	               mov dword [rsp + 0xac], 3	      5709	decNumber.c	DO_1	IF_7
0x400f1a7	      0xe8a49effff	                       call sym.decAddOp	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400f1ac	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      5719	decNumber.c	DO_1	IF_7
0x400f1b1	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      5721	decNumber.c	DO_1	IF_7
0x400f1b9	    0x41b901000000	                              mov r9d, 1	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x400f1bf	    0xc68424e80000	                mov byte [rsp + 0xe8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f1c7	    0xc78424e40000	               mov dword [rsp + 0xe4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f1d2	    0xc78424e00000	               mov dword [rsp + 0xe0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f1dd	    0x6644898c24ea	              mov word [rsp + 0xea], r9w	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x400f1e6	          0x8b4304	                mov eax, dword [rbx + 4]	      5719	decNumber.c	DO_1	IF_7
0x400f1e9	    0xc78424c40000	       mov dword [rsp + 0xc4], 0x1e847e 	      5724	decNumber.c	DO_1	IF_7
0x400f1f4	    0xc78424a00000	               mov dword [rsp + 0xa0], 9	      5732	decNumber.c	DO_1	IF_7
0x400f1ff	    0xc74424100900	               mov dword [rsp + 0x10], 9	      5729	decNumber.c	DO_1	IF_7
0x400f207	    0x898424a40000	             mov dword [rsp + 0xa4], eax	      5719	decNumber.c	DO_1	IF_7
0x400f20e	          0x8b4308	                mov eax, dword [rbx + 8]	      5720	decNumber.c	DO_1	IF_7
0x400f211	      0x410fb65f08	               movzx ebx, byte [r15 + 8]	      5720	decNumber.c	DO_1	IF_7
0x400f216	    0x898424a80000	             mov dword [rsp + 0xa8], eax	      5720	decNumber.c	DO_1	IF_7
0x400f21d	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      5723	decNumber.c	DO_1	IF_7
0x400f225	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      5723	decNumber.c	DO_1	IF_7
0x400f22d	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      5723	decNumber.c	DO_1	IF_7
0x400f235	    0xc78424c80000	     mov dword [rsp + 0xc8], 0xffe17b82 	      5725	decNumber.c	DO_1	IF_7
0x400f240	    0x48898424d000	             mov qword [rsp + 0xd0], rax	      5723	decNumber.c	DO_1	IF_7
0x400f248	    0x8b8424b80000	            mov eax, dword [rsp + 0xb8] 	      5723	decNumber.c	DO_1	IF_7
0x400f24f	    0x898424d80000	             mov dword [rsp + 0xd8], eax	      5723	decNumber.c	DO_1	IF_7
0x400f256	      0x488b442408	                mov rax, qword [rsp + 8]	      5733	decNumber.c	DO_1	IF_7
0x400f25b	            0x8b00	                    mov eax, dword [rax]	      5733	decNumber.c	DO_1	IF_7
0x400f25d	          0x83c009	                              add eax, 9	      5733	decNumber.c	DO_1	IF_7
0x400f260	    0x898424c00000	             mov dword [rsp + 0xc0], eax	      5733	decNumber.c	DO_1	IF_7
0x400f267	    0x488d8424ea00	                   lea rax, [rsp + 0xea]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f26f	    0x488984248800	             mov qword [rsp + 0x88], rax	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f277	    0x660f1f840000	                    nop word [rax + rax]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400f280	          0x83c380	             add ebx, 0xffffffffffffff80	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x400f283	    0x488d8c249400	                   lea rcx, [rsp + 0x94]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400f28b	    0x488d9424c000	                   lea rdx, [rsp + 0xc0]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400f293	        0x41885f08	                  mov byte [r15 + 8], bl	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x400f297	          0x4c89fe	                            mov rsi, r15	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400f29a	          0x4c89ef	                            mov rdi, r13	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400f29d	      0xe8dec2ffff	                       call sym.decExpOp	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x400f2a2	      0x4180470880	                add byte [r15 + 8], 0x80	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x400f2a7	      0x488b542408	                mov rdx, qword [rsp + 8]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400f2ac	    0x4c8d84249400	                    lea r8, [rsp + 0x94]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400f2b4	    0x488d8c24c000	                   lea rcx, [rsp + 0xc0]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400f2bc	          0x4c89ee	                            mov rsi, r13	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400f2bf	          0x4c89ef	                            mov rdi, r13	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400f2c2	      0xe81943ffff	                  call sym.decMultiplyOp	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x400f2c7	      0x410fb65d08	               movzx ebx, byte [r13 + 8]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f2cc	     0xfb68424e800	           movzx eax, byte [rsp + 0xe8] 	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f2d4	            0x89da	                            mov edx, ebx	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f2d6	            0x31c2	                            xor edx, eax	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f2d8	          0x83c280	             add edx, 0xffffffffffffff80	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f2db	          0x83e280	                     and edx, 0xffffff80	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f2de	        0x88542414	               mov byte [rsp + 0x14], dl	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f2e2	            0x89da	                            mov edx, ebx	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x400f2e4	             0x9c2	                             or edx, eax	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x400f2e6	          0xf6c270	                           test dl, 0x70	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x400f2e9	     0xf84e9020000	                            je 0x400f5d8	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x400f2ef	          0x83e230	                           and edx, 0x30	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x400f2f2	     0xf85900c0000	                           jne 0x400ff88	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x400f2f8	          0xf6c340	                           test bl, 0x40	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x400f2fb	     0xf842f020000	                            je 0x400f530	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x400f301	            0xa840	                           test al, 0x40	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400f303	     0xf842a020000	                            je 0x400f533	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400f309	      0x807c241400	                cmp byte [rsp + 0x14], 0	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400f30e	     0xf841f020000	                            je 0x400f533	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400f314	    0x818c24940000	             or dword [rsp + 0x94], 0x80	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x400f31f	      0x450fb74d0a	            movzx r9d, word [r13 + 0xa] 	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x400f324	        0x49636d00	                 movsxd rbp, dword [r13]	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x400f328	        0x664585c9	                           test r9w, r9w	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f32c	     0xf8493080000	                            je 0x400fbc5	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f332	    0x660f1f440000	                    nop word [rax + rax]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f338	        0x418b4504	                mov eax, dword [r13 + 4]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f33c	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f341	          0x4d6327	                 movsxd r12, dword [r15]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x400f344	        0x418b5704	                mov edx, dword [r15 + 4]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f348	             0x1e8	                            add eax, ebp	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f34a	             0x303	                    add eax, dword [rbx]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f34c	          0x4401e2	                           add edx, r12d	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f34f	            0x39d0	                            cmp eax, edx	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f351	     0xf8c29020000	                            jl 0x400f580	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f357	      0x410fb65f08	               movzx ebx, byte [r15 + 8]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f35c	      0x410fb64508	               movzx eax, byte [r13 + 8]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f361	            0x89c2	                            mov edx, eax	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f363	            0x31da	                            xor edx, ebx	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f365	          0x83e280	                     and edx, 0xffffff80	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f368	        0x88542414	               mov byte [rsp + 0x14], dl	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f36c	            0x89c2	                            mov edx, eax	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x400f36e	             0x9da	                             or edx, ebx	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x400f370	          0xf6c270	                           test dl, 0x70	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x400f373	     0xf84d7040000	                            je 0x400f850	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x400f379	          0x83e230	                           and edx, 0x30	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x400f37c	     0xf853e0c0000	                           jne 0x400ffc0	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x400f382	          0xf6c340	                           test bl, 0x40	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x400f385	     0xf842d090000	                            je 0x400fcb8	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x400f38b	            0xa840	                           test al, 0x40	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400f38d	     0xf840d0a0000	                            je 0x400fda0	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400f393	      0x807c241400	                cmp byte [rsp + 0x14], 0	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400f398	     0xf84020a0000	                            je 0x400fda0	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400f39e	    0x818c24940000	             or dword [rsp + 0x94], 0x80	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x400f3a9	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f3ac	         0xf1f4000	                         nop dword [rax]	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f3b0	          0x4c89f7	                            mov rdi, r14	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f3b3	      0xe800000000	                          call 0x400f3b8	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f3b8	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x400f3bc	        0x8b742458	            mov esi, dword [rsp + 0x58] 	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x400f3c0	            0x39f0	                            cmp eax, esi	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x400f3c2	     0xf84b8feffff	                            je 0x400f280	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x400f3c8	             0x1c0	                            add eax, eax	      5776	decNumber.c	DO_1	IF_7	FOR_1
0x400f3ca	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400f3cf	            0x39c6	                            cmp esi, eax	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400f3d1	           0xf4ec6	                         cmovle eax, esi	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400f3d4	        0x89442410	             mov dword [rsp + 0x10], eax	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400f3d8	    0x898424a00000	             mov dword [rsp + 0xa0], eax	      5778	decNumber.c	DO_1	IF_7	FOR_1
0x400f3df	             0x307	                    add eax, dword [rdi]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400f3e1	    0x898424c00000	             mov dword [rsp + 0xc0], eax	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400f3e8	      0xe993feffff	                           jmp 0x400f280	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400f3ed	           0xf1f00	                         nop dword [rax]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x400f3f0	          0x833b01	                      cmp dword [rbx], 1	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400f3f3	     0xf8509fbffff	                           jne 0x400ef02	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x400f3f9	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f3fb	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f402	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f408	        0x6689570a	                mov word [rdi + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f40c	        0xc64708c0	                mov byte [rdi + 8], 0xc0	      5621	decNumber.c	DO_1	IF_5
0x400f410	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5597	decNumber.c	
0x400f419	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5594	decNumber.c	
0x400f422	      0xe983faffff	                           jmp 0x400eeaa	      5622	decNumber.c	DO_1	IF_5
0x400f427	    0x660f1f840000	                    nop word [rax + rax]	      5622	decNumber.c	DO_1	IF_5
0x400f430	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400f438	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5597	decNumber.c	
0x400f441	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5594	decNumber.c	
0x400f44a	    0x810880000000	                    or dword [rax], 0x80	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400f450	      0xe955faffff	                           jmp 0x400eeaa	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400f455	           0xf1f00	                         nop dword [rax]	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x400f458	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5632	decNumber.c	DO_1	IF_7
0x400f45d	            0x8b1b	                    mov ebx, dword [rbx]	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400f45f	            0x8b00	                    mov eax, dword [rax]	      5632	decNumber.c	DO_1	IF_7
0x400f461	          0x83f828	                           cmp eax, 0x28	      5632	decNumber.c	DO_1	IF_7
0x400f464	     0xf8fbbfaffff	                            jg 0x400ef25	      5632	decNumber.c	DO_1	IF_7
0x400f46a	        0x6683fa0a	                             cmp dx, 0xa	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400f46e	     0xf84b6140000	                            je 0x401092a	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x400f474	        0x6683fa02	                               cmp dx, 2	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f478	     0xf85a7faffff	                           jne 0x400ef25	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f47e	          0x83fb01	                              cmp ebx, 1	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f481	     0xf859efaffff	                           jne 0x400ef25	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f487	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f48c	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400f494	      0xbe00000000	                              mov esi, 0	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400f499	          0x488b03	                    mov rax, qword [rbx]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f49c	    0x48898424a000	             mov qword [rsp + 0xa0], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4a4	        0x488b4308	                mov rax, qword [rbx + 8]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4a8	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4b0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4b4	    0xc78424ac0000	               mov dword [rsp + 0xac], 3	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4bf	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4c7	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4ca	    0x898424b80000	             mov dword [rsp + 0xb8], eax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4d1	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400f4d6	      0xe800000000	                          call 0x400f4db	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400f4db	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4e3	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5597	decNumber.c	
0x400f4ec	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5594	decNumber.c	
0x400f4f5	    0x810820080000	                   or dword [rax], 0x820	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f4fb	      0xe9aaf9ffff	                           jmp 0x400eeaa	      5648	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f500	          0x4989c8	                             mov r8, rcx	      5648	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400f503	      0x488b742408	                mov rsi, qword [rsp + 8]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400f508	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400f50d	            0x31d2	                            xor edx, edx	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400f50f	      0xe82c31ffff	                 call sym.decNaNs.isra.6	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x400f514	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5597	decNumber.c	
0x400f51d	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5594	decNumber.c	
0x400f526	      0xe97ff9ffff	                           jmp 0x400eeaa	      5594	decNumber.c	
0x400f52b	       0xf1f440000	                   nop dword [rax + rax]	      5594	decNumber.c	
0x400f530	          0x8d5880	                   lea ebx, [rax - 0x80]	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x400f533	          0x83e380	                     and ebx, 0xffffff80	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x400f536	          0x4531c0	                            xor r8d, r8d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f539	    0x41c745040000	                  mov dword [r13 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f541	          0x83cb40	                            or ebx, 0x40	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x400f544	    0x41c745000100	                      mov dword [r13], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f54c	      0x664589450a	               mov word [r13 + 0xa], r8w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400f551	        0x41885d08	                  mov byte [r13 + 8], bl	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x400f555	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f55e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f563	      0xe800000000	                          call 0x400f568	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f568	      0x41f6450870	               test byte [r13 + 8], 0x70	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f56d	     0xf857d0c0000	                           jne 0x40101f0	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f573	          0x4d6327	                 movsxd r12, dword [r15]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f576	          0x4531c9	                            xor r9d, r9d	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f579	      0xbd01000000	                              mov ebp, 1	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f57e	            0x6690	                                     nop	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400f580	      0x4439642458	           cmp dword [rsp + 0x58], r12d 	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x400f585	     0xf84c50e0000	                            je 0x4010450	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x400f58b	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400f591	      0x410fb65f08	               movzx ebx, byte [r15 + 8]	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400f596	            0x750a	                           jne 0x400f5a2	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400f598	        0x4183fc01	                             cmp r12d, 1	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400f59c	     0xf84960b0000	                            je 0x4010138	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400f5a2	        0x664585c9	                           test r9w, r9w	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5a6	      0x410fb64508	               movzx eax, byte [r13 + 8]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5ab	     0xf85b0fdffff	                           jne 0x400f361	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5b1	          0x83fd01	                              cmp ebp, 1	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5b4	     0xf85a7fdffff	                           jne 0x400f361	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5ba	            0xa870	                           test al, 0x70	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5bc	     0xf859ffdffff	                           jne 0x400f361	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5c2	        0x418b5704	                mov edx, dword [r15 + 4]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5c6	        0x2b542458	             sub edx, dword [rsp + 0x58]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5ca	        0x41895504	                mov dword [r13 + 4], edx	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5ce	      0xe98efdffff	                           jmp 0x400f361	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5d3	       0xf1f440000	                   nop dword [rax + rax]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x400f5d8	      0x450fb74d0a	            movzx r9d, word [r13 + 0xa] 	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f5dd	        0x49636d00	                 movsxd rbp, dword [r13]	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f5e1	        0x664585c9	                           test r9w, r9w	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f5e5	            0x7509	                           jne 0x400f5f0	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f5e7	          0x83fd01	                              cmp ebp, 1	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f5ea	     0xf84100c0000	                            je 0x4010200	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f5f0	     0xfb7b424ea00	           movzx esi, word [rsp + 0xea] 	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f5f8	    0x8bbc24c00000	            mov edi, dword [rsp + 0xc0] 	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f5ff	    0x4c63a424e000	         movsxd r12, dword [rsp + 0xe0] 	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f607	        0x897c2420	             mov dword [rsp + 0x20], edi	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f60b	          0x6685f6	                             test si, si	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f60e	            0x750a	                           jne 0x400f61a	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f610	        0x4183fc01	                             cmp r12d, 1	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f614	     0xf84b6040000	                            je 0x400fad0	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f61a	    0x8b9424e40000	            mov edx, dword [rsp + 0xe4] 	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f621	            0x89d1	                            mov ecx, edx	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f623	        0x412b4d04	                sub ecx, dword [r13 + 4]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f627	     0xf85c3040000	                           jne 0x400faf0	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f62d	        0x4183fc03	                             cmp r12d, 3	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f631	     0xf8ee9070000	                           jle 0x400fe20	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f637	    0x4c8d9424e000	                   lea r10, [rsp + 0xe0]	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f63f	          0x4863f5	                         movsxd rsi, ebp	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f642	          0x4489e7	                           mov edi, r12d	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f645	          0x4d89eb	                            mov r11, r13	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f648	      0xb901000000	                              mov ecx, 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f64d	          0x4531c0	                            xor r8d, r8d	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f650	       0xfb6542414	           movzx edx, byte [rsp + 0x14] 	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f655	            0x89c8	                            mov eax, ecx	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f657	            0xf7d8	                                 neg eax	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f659	            0x84d2	                             test dl, dl	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f65b	           0xf45c8	                         cmovne ecx, eax	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f65e	            0x39fe	                            cmp esi, edi	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f660	           0xf4dfe	                         cmovge edi, esi	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f663	        0x397c2420	            cmp dword [rsp + 0x20], edi 	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f667	            0x7e12	                           jle 0x400f67b	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f669	          0x4d39d5	                            cmp r13, r10	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f66c	     0xf859e090000	                           jne 0x4010010	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f672	          0x4585c0	                           test r8d, r8d	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f675	     0xf8e95090000	                           jle 0x4010010	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f67b	          0x83ff31	                           cmp edi, 0x31	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f67e	     0xf8f4c070000	                            jg 0x400fdd0	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f684	          0x4863ff	                         movsxd rdi, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f687	     0xfb6bf000000	                   movzx edi, byte [rdi]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f68e	          0x83c701	                              add edi, 1	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f691	          0x4863ff	                         movsxd rdi, edi	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400f694	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f69d	    0x4c8db4246001	                  lea r14, [rsp + 0x160]	      4035	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f6a5	          0x4801ff	                            add rdi, rdi	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400f6a8	        0x4883ff3e	                           cmp rdi, 0x3e	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400f6ac	     0xf87ce090000	                            ja 0x4010080	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400f6b2	          0x83e380	                     and ebx, 0xffffff80	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f6b5	        0x4183fc31	                          cmp r12d, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6b9	        0x41885d08	                  mov byte [r13 + 8], bl	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f6bd	        0x418b4304	                mov eax, dword [r11 + 4]	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f6c1	        0x41894504	                mov dword [r13 + 4], eax	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f6c5	     0xf8f55060000	                            jg 0x400fd20	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6cb	    0x410fb69c2400	                   movzx ebx, byte [r12]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6d4	        0x4983c20a	                            add r10, 0xa	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x400f6d8	          0x83fe31	                           cmp esi, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6db	     0xf8f1f060000	                            jg 0x400fd00	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6e1	     0xfb6b6000000	                   movzx esi, byte [rsi]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6e8	        0x4883ec08	                              sub rsp, 8	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6ec	        0x498d7b0a	                    lea rdi, [r11 + 0xa]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6f0	          0x4d89f1	                             mov r9, r14	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6f3	              0x51	                                push rcx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6f4	          0x4c89d2	                            mov rdx, r10	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6f7	            0x89d9	                            mov ecx, ebx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6f9	      0xe84209ffff	                  call sym.decUnitAddSub	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f6fe	          0x8d0c40	                  lea ecx, [rax + rax*2]	      4059	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f701	              0x5e	                                 pop rsi	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f702	            0x85c9	                           test ecx, ecx	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f704	              0x5f	                                 pop rdi	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f705	     0xf88e5080000	                            js 0x400fff0	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f70b	        0x41894d00	                    mov dword [r13], ecx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f70f	      0x4c39742428	            cmp qword [rsp + 0x28], r14 	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x400f714	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4071	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f71f	            0x747a	                            je 0x400f79b	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x400f721	        0x394c2420	            cmp dword [rsp + 0x20], ecx 	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x400f725	            0x7d4d	                           jge 0x400f774	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x400f727	          0x83f931	                           cmp ecx, 0x31	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f72a	     0xf8fa00a0000	                            jg 0x40101d0	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f730	          0x4863c9	                         movsxd rcx, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f733	     0xfb691000000	                   movzx edx, byte [rcx]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f73a	          0x4863c2	                         movsxd rax, edx	      7762	decNumber.c	FUNCTION_25
0x400f73d	        0x8d4c52fe	              lea ecx, [rdx + rdx*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x400f741	      0x498d4446fe	              lea rax, [r14 + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x400f746	          0x4939c6	                            cmp r14, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f749	            0x7725	                            ja 0x400f770	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f74b	           0xfb710	                   movzx edx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f74e	          0x6685d2	                             test dx, dx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f751	     0xf85390e0000	                           jne 0x4010590	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f757	          0x83f901	                              cmp ecx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f75a	            0x7414	                            je 0x400f770	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f75c	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f760	          0x83e903	                              sub ecx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f763	          0x4939c6	                            cmp r14, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f766	            0x76e3	                           jbe 0x400f74b	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f768	     0xf1f84000000	                   nop dword [rax + rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f770	        0x41894d00	                    mov dword [r13], ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f774	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f77c	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f784	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f78c	          0x4c89f2	                            mov rdx, r14	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f78f	          0x4c89ef	                            mov rdi, r13	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f792	      0xe8091cffff	             call sym.decSetCoeff.isra.3	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f797	        0x418b4d00	                    mov ecx, dword [r13]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f79b	          0x83f931	                           cmp ecx, 0x31	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400f79e	     0xf8f44050000	                            jg 0x400fce8	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400f7a4	          0x4863c9	                         movsxd rcx, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400f7a7	     0xfb691000000	                   movzx edx, byte [rcx]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400f7ae	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      7762	decNumber.c	FUNCTION_25
0x400f7b3	          0x4863c2	                         movsxd rax, edx	      7762	decNumber.c	FUNCTION_25
0x400f7b6	        0x8d5452fe	              lea edx, [rdx + rdx*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x400f7ba	      0x488d4447fe	              lea rax, [rdi + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x400f7bf	          0x4839c7	                            cmp rdi, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f7c2	            0x7731	                            ja 0x400f7f5	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f7c4	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f7c7	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f7ca	     0xf85400c0000	                           jne 0x4010410	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f7d0	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f7d3	          0x4889fe	                            mov rsi, rdi	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f7d6	            0x741d	                            je 0x400f7f5	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f7d8	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f7dc	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f7df	          0x4839c6	                            cmp rsi, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f7e2	            0x7711	                            ja 0x400f7f5	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f7e4	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f7e7	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f7ea	     0xf85200c0000	                           jne 0x4010410	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f7f0	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f7f3	            0x75e3	                           jne 0x400f7d8	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f7f5	        0x41895500	                    mov dword [r13], edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400f7f9	    0x488d8c249400	                   lea rcx, [rsp + 0x94]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f801	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f809	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f811	          0x4c89ef	                            mov rdi, r13	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f814	      0xe8d734ffff	                    call sym.decFinalize	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f819	      0x450fb74d0a	            movzx r9d, word [r13 + 0xa] 	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400f81e	        0x664585c9	                           test r9w, r9w	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400f822	     0xf8588050000	                           jne 0x400fdb0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400f828	        0x49636d00	                 movsxd rbp, dword [r13]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400f82c	          0x83fd01	                              cmp ebp, 1	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400f82f	     0xf8403080000	                            je 0x4010038	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400f835	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f83a	      0x44894c2414	             mov dword [rsp + 0x14], r9d	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f83f	      0xe800000000	                          call 0x400f844	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f844	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f849	      0xe9eafaffff	                           jmp 0x400f338	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f84e	            0x6690	                                     nop	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f850	      0x410fb74f0a	            movzx ecx, word [r15 + 0xa] 	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f855	          0x6685c9	                             test cx, cx	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f858	            0x750a	                           jne 0x400f864	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f85a	        0x4183fc01	                             cmp r12d, 1	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f85e	     0xf847c0a0000	                            je 0x40102e0	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400f864	    0x8bbc24a00000	            mov edi, dword [rsp + 0xa0] 	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f86b	        0x664585c9	                           test r9w, r9w	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f86f	        0x897c2418	             mov dword [rsp + 0x18], edi	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f873	            0x7509	                           jne 0x400f87e	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f875	          0x83fd01	                              cmp ebp, 1	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f878	     0xf845a030000	                            je 0x400fbd8	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400f87e	        0x418b5504	                mov edx, dword [r13 + 4]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f882	          0x4189d2	                           mov r10d, edx	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f885	        0x452b5704	               sub r10d, dword [r15 + 4]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f889	     0xf8569030000	                           jne 0x400fbf8	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f88f	          0x83fd03	                              cmp ebp, 3	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f892	     0xf8e38060000	                           jle 0x400fed0	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f898	            0x89ef	                            mov edi, ebp	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f89a	            0x89d9	                            mov ecx, ebx	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f89c	          0x4c89ee	                            mov rsi, r13	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f89f	          0x4d89f9	                             mov r9, r15	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400f8a2	    0x41bb01000000	                             mov r11d, 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f8a8	          0x4531c0	                            xor r8d, r8d	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f8ab	       0xfb6542414	           movzx edx, byte [rsp + 0x14] 	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f8b0	          0x4489d8	                           mov eax, r11d	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f8b3	            0xf7d8	                                 neg eax	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f8b5	            0x84d2	                             test dl, dl	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f8b7	        0x440f45d8	                        cmovne r11d, eax	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f8bb	          0x4139fc	                           cmp r12d, edi	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f8be	        0x410f4dfc	                        cmovge edi, r12d	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x400f8c2	        0x3b7c2418	            cmp edi, dword [rsp + 0x18] 	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f8c6	            0x7d12	                           jge 0x400f8da	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f8c8	          0x4939f7	                            cmp r15, rsi	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f8cb	     0xf8557070000	                           jne 0x4010028	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f8d1	          0x4585c0	                           test r8d, r8d	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f8d4	     0xf8e4e070000	                           jle 0x4010028	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f8da	          0x83ff31	                           cmp edi, 0x31	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f8dd	     0xf8f1d050000	                            jg 0x400fe00	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f8e3	          0x4863ff	                         movsxd rdi, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f8e6	     0xfb6bf000000	                   movzx edi, byte [rdi]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f8ed	          0x83c701	                              add edi, 1	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400f8f0	          0x4863ff	                         movsxd rdi, edi	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400f8f3	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400f8f6	    0x4c8d94246001	                  lea r10, [rsp + 0x160]	      4035	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x400f8fe	          0x4801ff	                            add rdi, rdi	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400f901	        0x4883ff3e	                           cmp rdi, 0x3e	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400f905	     0xf87d5070000	                            ja 0x40100e0	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400f90b	          0x83e180	                     and ecx, 0xffffff80	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f90e	          0x83fd31	                           cmp ebp, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f911	        0x41884f08	                  mov byte [r15 + 8], cl	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f915	        0x418b4104	                 mov eax, dword [r9 + 4]	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f919	        0x41894704	                mov dword [r15 + 4], eax	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f91d	     0xf8f5d040000	                            jg 0x400fd80	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f923	     0xfb68d000000	                   movzx ecx, byte [rbp]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f92a	        0x4183fc31	                          cmp r12d, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f92e	        0x488d5e0a	                    lea rbx, [rsi + 0xa]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x400f932	     0xf8f28040000	                            jg 0x400fd60	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f938	    0x410fb6b42400	                   movzx esi, byte [r12]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f941	        0x4883ec08	                              sub rsp, 8	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f945	        0x498d790a	                     lea rdi, [r9 + 0xa]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f949	          0x4889da	                            mov rdx, rbx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f94c	            0x4153	                                push r11	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f94e	          0x4d89d1	                             mov r9, r10	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f951	      0x4c89542430	             mov qword [rsp + 0x30], r10	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f956	      0xe8e506ffff	                  call sym.decUnitAddSub	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f95b	          0x8d0c40	                  lea ecx, [rax + rax*2]	      4059	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f95e	              0x58	                                 pop rax	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f95f	            0x85c9	                           test ecx, ecx	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f961	              0x5a	                                 pop rdx	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f962	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f967	     0xf8893060000	                            js 0x4010000	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400f96d	          0x41890f	                    mov dword [r15], ecx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400f970	      0x4c3b542430	            cmp r10, qword [rsp + 0x30] 	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x400f975	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4071	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400f980	            0x7477	                            je 0x400f9f9	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x400f982	        0x394c2418	            cmp dword [rsp + 0x18], ecx 	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x400f986	            0x7d4b	                           jge 0x400f9d3	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x400f988	          0x83f931	                           cmp ecx, 0x31	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f98b	     0xf8f2f090000	                            jg 0x40102c0	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f991	          0x4863c9	                         movsxd rcx, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f994	     0xfb691000000	                   movzx edx, byte [rcx]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f99b	          0x4863c2	                         movsxd rax, edx	      7762	decNumber.c	FUNCTION_25
0x400f99e	        0x8d4c52fe	              lea ecx, [rdx + rdx*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x400f9a2	      0x498d4442fe	              lea rax, [r10 + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x400f9a7	          0x4939c2	                            cmp r10, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f9aa	            0x7724	                            ja 0x400f9d0	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f9ac	           0xfb710	                   movzx edx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f9af	          0x6685d2	                             test dx, dx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f9b2	     0xf85f80b0000	                           jne 0x40105b0	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f9b8	          0x83f901	                              cmp ecx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f9bb	            0x7413	                            je 0x400f9d0	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400f9bd	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f9c1	          0x83e903	                              sub ecx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400f9c4	          0x4939c2	                            cmp r10, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f9c7	            0x76e3	                           jbe 0x400f9ac	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f9c9	     0xf1f80000000	                         nop dword [rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400f9d0	          0x41890f	                    mov dword [r15], ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400f9d3	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f9db	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f9e3	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f9eb	          0x4c89d2	                            mov rdx, r10	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f9ee	          0x4c89ff	                            mov rdi, r15	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f9f1	      0xe8aa19ffff	             call sym.decSetCoeff.isra.3	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f9f6	          0x418b0f	                    mov ecx, dword [r15]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x400f9f9	          0x83f931	                           cmp ecx, 0x31	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400f9fc	     0xf8f3e030000	                            jg 0x400fd40	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fa02	          0x4863c9	                         movsxd rcx, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fa05	     0xfb691000000	                   movzx edx, byte [rcx]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fa0c	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      7762	decNumber.c	FUNCTION_25
0x400fa11	          0x4863c2	                         movsxd rax, edx	      7762	decNumber.c	FUNCTION_25
0x400fa14	        0x8d5452fe	              lea edx, [rdx + rdx*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x400fa18	      0x488d4443fe	              lea rax, [rbx + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x400fa1d	          0x4839d8	                            cmp rax, rbx	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400fa20	            0x7231	                            jb 0x400fa53	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400fa22	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400fa25	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400fa28	     0xf85020a0000	                           jne 0x4010430	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400fa2e	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400fa31	          0x4889de	                            mov rsi, rbx	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400fa34	            0x741d	                            je 0x400fa53	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400fa36	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400fa3a	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400fa3d	          0x4839f0	                            cmp rax, rsi	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400fa40	            0x7211	                            jb 0x400fa53	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400fa42	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400fa45	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400fa48	     0xf85e2090000	                           jne 0x4010430	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400fa4e	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400fa51	            0x75e3	                           jne 0x400fa36	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400fa53	          0x418917	                    mov dword [r15], edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fa56	    0x488d8c249400	                   lea rcx, [rsp + 0x94]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400fa5e	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400fa66	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400fa6e	          0x4c89ff	                            mov rdi, r15	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400fa71	      0xe87a32ffff	                    call sym.decFinalize	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400fa76	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400fa7c	     0xf856e030000	                           jne 0x400fdf0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400fa82	        0x41833f01	                      cmp dword [r15], 1	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400fa86	      0x410fb65f08	               movzx ebx, byte [r15 + 8]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400fa8b	     0xf851ff9ffff	                           jne 0x400f3b0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400fa91	          0xf6c370	                           test bl, 0x70	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400fa94	     0xf8516f9ffff	                           jne 0x400f3b0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400fa9a	      0x807c241400	                cmp byte [rsp + 0x14], 0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400fa9f	     0xf840bf9ffff	                            je 0x400f3b0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x400faa5	    0xf68424940000	           test byte [rsp + 0x94], 0x20 	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x400faad	     0xf85fdf8ffff	                           jne 0x400f3b0	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x400fab3	    0x83bc24ac0000	               cmp dword [rsp + 0xac], 6	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x400fabb	     0xf844a0d0000	                            je 0x401080b	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x400fac1	          0x83e37f	                           and ebx, 0x7f	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x400fac4	        0x41885f08	                  mov byte [r15 + 8], bl	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x400fac8	      0xe9e3f8ffff	                           jmp 0x400f3b0	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x400facd	           0xf1f00	                         nop dword [rax]	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x400fad0	            0xa870	                           test al, 0x70	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400fad2	     0xf84f0090000	                            je 0x40104c8	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400fad8	    0x8b9424e40000	            mov edx, dword [rsp + 0xe4] 	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400fadf	            0x89d1	                            mov ecx, edx	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fae1	        0x412b4d04	                sub ecx, dword [r13 + 4]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fae5	     0xf8435030000	                            je 0x400fe20	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400faeb	       0xf1f440000	                   nop dword [rax + rax]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400faf0	            0x85c9	                           test ecx, ecx	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400faf2	     0xf8888080000	                            js 0x4010380	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400faf8	    0x4c8d9424e000	                   lea r10, [rsp + 0xe0]	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fb00	          0x4863f5	                         movsxd rsi, ebp	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fb03	          0x4d89eb	                            mov r11, r13	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fb06	          0x4531f6	                          xor r14d, r14d	      3983	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400fb09	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fb0e	        0x428d3c21	                    lea edi, [rcx + r12]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fb12	      0x418d543001	                 lea edx, [r8 + rsi + 1]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fb17	            0x39d7	                            cmp edi, edx	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fb19	     0xf8e81030000	                           jle 0x400fea0	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fb1f	          0x4489c5	                            mov ebp, r8d	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fb22	        0x41884508	                  mov byte [r13 + 8], al	      6839	decNumber.c	FUNCTION_11
0x400fb26	        0x418b4204	                mov eax, dword [r10 + 4]	      6840	decNumber.c	FUNCTION_11
0x400fb2a	          0x4429e5	                           sub ebp, r12d	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fb2d	      0x807c241401	                cmp byte [rsp + 0x14], 1	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fb32	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fb3a	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fb42	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fb4a	          0x4489e1	                           mov ecx, r12d	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fb4d	        0x41894504	                mov dword [r13 + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400fb51	          0x4c89ef	                            mov rdi, r13	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fb54	            0x19d2	                            sbb edx, edx	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fb56	          0x83e202	                              and edx, 2	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fb59	          0x83ea01	                              sub edx, 1	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fb5c	    0x8994249c0000	             mov dword [rsp + 0x9c], edx	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fb63	        0x498d520a	                    lea rdx, [r10 + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fb67	      0xe83418ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fb6c	            0x85ed	                           test ebp, ebp	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fb6e	            0x7e18	                           jle 0x400fb88	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fb70	        0x418b7500	                    mov esi, dword [r13]	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fb74	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fb79	            0x89ea	                            mov edx, ebp	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fb7b	      0xe82011ffff	          call sym.decShiftToMost.part.0	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fb80	        0x41296d04	                sub dword [r13 + 4], ebp	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fb84	        0x41894500	                    mov dword [r13], eax	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x400fb88	          0x4584f6	                         test r14b, r14b	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x400fb8b	            0x7505	                           jne 0x400fb92	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x400fb8d	      0x4180450880	                add byte [r13 + 8], 0x80	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x400fb92	    0x488d8c249400	                   lea rcx, [rsp + 0x94]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fb9a	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fba2	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fbaa	          0x4c89ef	                            mov rdi, r13	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fbad	      0xe83e31ffff	                    call sym.decFinalize	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fbb2	      0x450fb74d0a	            movzx r9d, word [r13 + 0xa] 	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fbb7	        0x49636d00	                 movsxd rbp, dword [r13]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fbbb	        0x664585c9	                           test r9w, r9w	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400fbbf	     0xf8573f7ffff	                           jne 0x400f338	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400fbc5	          0x83fd01	                              cmp ebp, 1	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400fbc8	     0xf856af7ffff	                           jne 0x400f338	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400fbce	      0xe995f9ffff	                           jmp 0x400f568	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400fbd3	       0xf1f440000	                   nop dword [rax + rax]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400fbd8	            0xa870	                           test al, 0x70	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400fbda	     0xf8438090000	                            je 0x4010518	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400fbe0	        0x418b5504	                mov edx, dword [r13 + 4]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400fbe4	          0x4189d2	                           mov r10d, edx	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fbe7	        0x452b5704	               sub r10d, dword [r15 + 4]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fbeb	     0xf84df020000	                            je 0x400fed0	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fbf1	     0xf1f80000000	                         nop dword [rax]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fbf8	          0x4585d2	                         test r10d, r10d	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fbfb	     0xf88a7070000	                            js 0x40103a8	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fc01	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fc06	            0x89d9	                            mov ecx, ebx	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fc08	          0x4c89ee	                            mov rsi, r13	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fc0b	          0x4d89f9	                             mov r9, r15	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400fc0e	      0x448b5c2418	           mov r11d, dword [rsp + 0x18] 	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc13	        0x418d3c2a	                    lea edi, [r10 + rbp]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc17	      0x478d441c01	                lea r8d, [r12 + r11 + 1]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc1c	          0x4439c7	                            cmp edi, r8d	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc1f	     0xf8e2b030000	                           jle 0x400ff50	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc25	          0x4589dc	                          mov r12d, r11d	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc28	        0x41884708	                  mov byte [r15 + 8], al	      6839	decNumber.c	FUNCTION_11
0x400fc2c	          0x8b4604	                mov eax, dword [rsi + 4]	      6840	decNumber.c	FUNCTION_11
0x400fc2f	          0x4129ec	                           sub r12d, ebp	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc32	      0x807c241401	                cmp byte [rsp + 0x14], 1	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fc37	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fc3f	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fc47	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fc4f	          0x4c89ff	                            mov rdi, r15	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fc52	        0x41894704	                mov dword [r15 + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400fc56	            0x19c9	                            sbb ecx, ecx	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fc58	          0x83e102	                              and ecx, 2	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fc5b	          0x83e901	                              sub ecx, 1	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fc5e	    0x898c249c0000	             mov dword [rsp + 0x9c], ecx	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x400fc65	            0x89e9	                            mov ecx, ebp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fc67	      0xe83417ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400fc6c	          0x4585e4	                         test r12d, r12d	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fc6f	            0x7e17	                           jle 0x400fc88	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fc71	          0x418b37	                    mov esi, dword [r15]	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fc74	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fc79	          0x4489e2	                           mov edx, r12d	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fc7c	      0xe81f10ffff	          call sym.decShiftToMost.part.0	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fc81	        0x45296704	               sub dword [r15 + 4], r12d	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x400fc85	          0x418907	                    mov dword [r15], eax	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x400fc88	    0x488d8c249400	                   lea rcx, [rsp + 0x94]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc90	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fc98	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fca0	          0x4c89ff	                            mov rdi, r15	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fca3	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fca6	      0xe84530ffff	                    call sym.decFinalize	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fcab	      0x410fb65f08	               movzx ebx, byte [r15 + 8]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fcb0	      0xe9fbf6ffff	                           jmp 0x400f3b0	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fcb5	           0xf1f00	                         nop dword [rax]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x400fcb8	          0x83e080	                     and eax, 0xffffff80	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x400fcbb	            0x89c3	                            mov ebx, eax	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x400fcbd	          0x83cb40	                            or ebx, 0x40	      3857	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x400fcc0	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400fcc2	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400fcca	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400fcd1	      0x6641894f0a	                mov word [r15 + 0xa], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400fcd6	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fcd9	        0x41885f08	                  mov byte [r15 + 8], bl	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x400fcdd	      0xe9cef6ffff	                           jmp 0x400f3b0	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x400fce2	    0x660f1f440000	                    nop word [rax + rax]	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x400fce8	          0x83c102	                              add ecx, 2	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fceb	      0xba56555555	                     mov edx, 0x55555556	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fcf0	            0x89c8	                            mov eax, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fcf2	          0xc1f91f	                           sar ecx, 0x1f	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fcf5	            0xf7ea	                                imul edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fcf7	            0x29ca	                            sub edx, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fcf9	      0xe9b0faffff	                           jmp 0x400f7ae	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fcfe	            0x6690	                                     nop	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd00	          0x8d7e02	                      lea edi, [rsi + 2]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd03	      0xbe56555555	                     mov esi, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd08	            0x89f8	                            mov eax, edi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd0a	          0xc1ff1f	                           sar edi, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd0d	            0xf7ee	                                imul esi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd0f	            0x29fa	                            sub edx, edi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd11	            0x89d6	                            mov esi, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd13	      0xe9d0f9ffff	                           jmp 0x400f6e8	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd18	     0xf1f84000000	                   nop dword [rax + rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd20	        0x4183c402	                             add r12d, 2	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd24	      0xba56555555	                     mov edx, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd29	          0x4489e0	                           mov eax, r12d	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd2c	        0x41c1fc1f	                          sar r12d, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd30	            0xf7ea	                                imul edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd32	            0x89d3	                            mov ebx, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd34	          0x4429e3	                           sub ebx, r12d	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd37	      0xe998f9ffff	                           jmp 0x400f6d4	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd3c	         0xf1f4000	                         nop dword [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd40	          0x83c102	                              add ecx, 2	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd43	      0xba56555555	                     mov edx, 0x55555556	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd48	            0x89c8	                            mov eax, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd4a	          0xc1f91f	                           sar ecx, 0x1f	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd4d	            0xf7ea	                                imul edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd4f	            0x29ca	                            sub edx, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd51	      0xe9b6fcffff	                           jmp 0x400fa0c	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400fd60	        0x4183c402	                             add r12d, 2	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd64	      0xbe56555555	                     mov esi, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd69	          0x4489e0	                           mov eax, r12d	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd6c	        0x41c1fc1f	                          sar r12d, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd70	            0xf7ee	                                imul esi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd72	            0x89d6	                            mov esi, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd74	          0x4429e6	                           sub esi, r12d	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd77	      0xe9c5fbffff	                           jmp 0x400f941	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd7c	         0xf1f4000	                         nop dword [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd80	          0x83c502	                              add ebp, 2	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd83	      0xb956555555	                     mov ecx, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd88	            0x89e8	                            mov eax, ebp	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd8a	          0xc1fd1f	                           sar ebp, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd8d	            0xf7e9	                                imul ecx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd8f	            0x89d1	                            mov ecx, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd91	            0x29e9	                            sub ecx, ebp	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd93	      0xe992fbffff	                           jmp 0x400f92a	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fd98	     0xf1f84000000	                   nop dword [rax + rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x400fda0	          0x83e380	                     and ebx, 0xffffff80	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x400fda3	      0xe915ffffff	                           jmp 0x400fcbd	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x400fda8	     0xf1f84000000	                   nop dword [rax + rax]	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x400fdb0	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fdb5	      0x44894c2414	             mov dword [rsp + 0x14], r9d	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fdba	        0x49636d00	                 movsxd rbp, dword [r13]	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fdbe	      0xe800000000	                          call 0x400fdc3	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fdc3	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fdc8	      0xe96bf5ffff	                           jmp 0x400f338	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fdcd	           0xf1f00	                         nop dword [rax]	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x400fdd0	          0x83c702	                              add edi, 2	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fdd3	      0xba56555555	                     mov edx, 0x55555556	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fdd8	            0x89f8	                            mov eax, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fdda	          0xc1ff1f	                           sar edi, 0x1f	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fddd	            0xf7ea	                                imul edx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fddf	            0x29fa	                            sub edx, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fde1	          0x8d7a01	                      lea edi, [rdx + 1]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fde4	      0xe9a8f8ffff	                           jmp 0x400f691	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fde9	     0xf1f80000000	                         nop dword [rax]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fdf0	      0x410fb65f08	               movzx ebx, byte [r15 + 8]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fdf5	      0xe9b6f5ffff	                           jmp 0x400f3b0	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fdfa	    0x660f1f440000	                    nop word [rax + rax]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe00	          0x83c702	                              add edi, 2	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe03	      0xba56555555	                     mov edx, 0x55555556	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe08	            0x89f8	                            mov eax, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe0a	          0xc1ff1f	                           sar edi, 0x1f	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe0d	            0xf7ea	                                imul edx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe0f	            0x29fa	                            sub edx, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe11	          0x8d7a01	                      lea edi, [rdx + 1]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe14	      0xe9d7faffff	                           jmp 0x400f8f0	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe19	     0xf1f80000000	                         nop dword [rax]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400fe20	    0x399424c80000	            cmp dword [rsp + 0xc8], edx 	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe27	     0xf8f0af8ffff	                            jg 0x400f637	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe2d	    0x8b8424c40000	            mov eax, dword [rsp + 0xc4] 	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe34	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe38	            0x29f8	                            sub eax, edi	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe3a	          0x83c001	                              add eax, 1	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe3d	            0x39d0	                            cmp eax, edx	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe3f	     0xf8cf2f7ffff	                            jl 0x400f637	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe45	          0x4439e7	                           cmp edi, r12d	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe48	     0xf8ce9f7ffff	                            jl 0x400f637	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe4e	            0x39ef	                            cmp edi, ebp	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe50	     0xf8ce1f7ffff	                            jl 0x400f637	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe56	      0x807c241400	                cmp byte [rsp + 0x14], 0	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400fe5b	        0x410fb7c1	                          movzx eax, r9w	      3942	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fe5f	           0xfb7d6	                           movzx edx, si	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400fe62	     0xf85f3080000	                           jne 0x401075b	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400fe68	             0x1d0	                            add eax, edx	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400fe6a	      0x3de7030000	                          cmp eax, 0x3e7	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe6f	     0xf8f330a0000	                            jg 0x40108a8	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe75	          0x83fd02	                              cmp ebp, 2	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe78	            0x7f10	                            jg 0x400fe8a	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe7a	          0x4863d5	                         movsxd rdx, ebp	      3947	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe7d	    0x3b0495000000	                  cmp eax, dword [rdx*4]	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe84	     0xf8d1e0a0000	                           jge 0x40108a8	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe8a	          0x4101f1	                            add r9d, esi	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe8d	      0x6645894d0a	               mov word [r13 + 0xa], r9w	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe92	      0xe991f4ffff	                           jmp 0x400f328	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fe97	    0x660f1f840000	                    nop word [rax + rax]	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400fea0	          0x83f930	                           cmp ecx, 0x30	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400fea3	     0xf8f27050000	                            jg 0x40103d0	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400fea9	          0x8d4101	                      lea eax, [rcx + 1]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400feac	            0x4898	                                    cdqe	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400feae	    0x440fb6800000	                   movzx r8d, byte [rax]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400feb6	        0x4183e801	                              sub r8d, 1	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400feba	        0x438d0440	                    lea eax, [r8 + r8*2]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400febe	            0x29c1	                            sub ecx, eax	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400fec0	          0x4863c9	                         movsxd rcx, ecx	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400fec3	    0x8b0c8d000000	                  mov ecx, dword [rcx*4]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400feca	      0xe981f7ffff	                           jmp 0x400f650	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400fecf	              0x90	                                     nop	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400fed0	    0x399424a80000	            cmp dword [rsp + 0xa8], edx 	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fed7	     0xf8fbbf9ffff	                            jg 0x400f898	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fedd	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fee4	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fee8	            0x29f8	                            sub eax, edi	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400feea	          0x83c001	                              add eax, 1	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400feed	            0x39d0	                            cmp eax, edx	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400feef	     0xf8ca3f9ffff	                            jl 0x400f898	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fef5	            0x39ef	                            cmp edi, ebp	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fef7	     0xf8c9bf9ffff	                            jl 0x400f898	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400fefd	          0x4439e7	                           cmp edi, r12d	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400ff00	     0xf8c92f9ffff	                            jl 0x400f898	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400ff06	      0x807c241400	                cmp byte [rsp + 0x14], 0	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400ff0b	           0xfb7c1	                           movzx eax, cx	      3942	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400ff0e	        0x410fb7d1	                          movzx edx, r9w	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400ff12	     0xf8599080000	                           jne 0x40107b1	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400ff18	             0x1d0	                            add eax, edx	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400ff1a	      0x3de7030000	                          cmp eax, 0x3e7	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff1f	     0xf8fbf090000	                            jg 0x40108e4	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff25	        0x4183fc02	                             cmp r12d, 2	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff29	            0x7f10	                            jg 0x400ff3b	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff2b	          0x4963d4	                        movsxd rdx, r12d	      3947	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff2e	    0x3b0495000000	                  cmp eax, dword [rdx*4]	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff35	     0xf8da9090000	                           jge 0x40108e4	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff3b	          0x4401c9	                            add ecx, r9d	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff3e	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400ff41	      0x6641894f0a	                mov word [r15 + 0xa], cx	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff46	      0xe965f4ffff	                           jmp 0x400f3b0	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff4b	       0xf1f440000	                   nop dword [rax + rax]	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400ff50	        0x4183fa30	                          cmp r10d, 0x30	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400ff54	     0xf8f96040000	                            jg 0x40103f0	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400ff5a	        0x418d4201	                      lea eax, [r10 + 1]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400ff5e	            0x4898	                                    cdqe	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400ff60	    0x440fb6800000	                   movzx r8d, byte [rax]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400ff68	        0x4183e801	                              sub r8d, 1	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400ff6c	        0x438d0440	                    lea eax, [r8 + r8*2]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400ff70	          0x4129c2	                           sub r10d, eax	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400ff73	          0x4d63d2	                        movsxd r10, r10d	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400ff76	    0x468b1c950000	                 mov r11d, dword [r10*4]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400ff7e	      0xe928f9ffff	                           jmp 0x400f8ab	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400ff83	       0xf1f440000	                   nop dword [rax + rax]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x400ff88	    0x4c8d84249400	                    lea r8, [rsp + 0x94]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ff90	    0x488d8c24c000	                   lea rcx, [rsp + 0xc0]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ff98	    0x488d9424e000	                   lea rdx, [rsp + 0xe0]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffa0	          0x4c89ee	                            mov rsi, r13	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffa3	          0x4c89ef	                            mov rdi, r13	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffa6	      0xe89526ffff	                 call sym.decNaNs.isra.6	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffab	      0x450fb74d0a	            movzx r9d, word [r13 + 0xa] 	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffb0	        0x49636d00	                 movsxd rbp, dword [r13]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffb4	      0xe96ff3ffff	                           jmp 0x400f328	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffb9	     0xf1f80000000	                         nop dword [rax]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffc0	    0x4c8d84249400	                    lea r8, [rsp + 0x94]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffc8	    0x488d8c24a000	                   lea rcx, [rsp + 0xa0]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffd0	          0x4c89ea	                            mov rdx, r13	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffd3	          0x4c89fe	                            mov rsi, r15	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffd6	          0x4c89ff	                            mov rdi, r15	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffd9	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400ffdc	      0xe85f26ffff	                 call sym.decNaNs.isra.6	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffe1	      0x410fb65f08	               movzx ebx, byte [r15 + 8]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffe6	      0xe9c5f3ffff	                           jmp 0x400f3b0	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400ffeb	       0xf1f440000	                   nop dword [rax + rax]	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x400fff0	            0xf7d9	                                 neg ecx	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400fff2	      0x4180450880	                add byte [r13 + 8], 0x80	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400fff7	        0x41894d00	                    mov dword [r13], ecx	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400fffb	      0xe90ff7ffff	                           jmp 0x400f70f	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4010000	            0xf7d9	                                 neg ecx	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4010002	      0x4180470880	                add byte [r15 + 8], 0x80	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4010007	          0x41890f	                    mov dword [r15], ecx	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x401000a	      0xe961f9ffff	                           jmp 0x400f970	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x401000f	              0x90	                                     nop	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4010010	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010015	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x401001e	      0xe98ff6ffff	                           jmp 0x400f6b2	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010023	       0xf1f440000	                   nop dword [rax + rax]	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010028	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x401002d	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010030	      0xe9d6f8ffff	                           jmp 0x400f90b	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010035	           0xf1f00	                         nop dword [rax]	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010038	      0x410fb64508	               movzx eax, byte [r13 + 8]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x401003d	            0xa870	                           test al, 0x70	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x401003f	     0xf8519f5ffff	                           jne 0x400f55e	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4010045	      0x807c241400	                cmp byte [rsp + 0x14], 0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x401004a	     0xf840ef5ffff	                            je 0x400f55e	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4010050	    0xf68424940000	           test byte [rsp + 0x94], 0x20 	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4010058	     0xf8500f5ffff	                           jne 0x400f55e	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x401005e	    0x83bc24cc0000	               cmp dword [rsp + 0xcc], 6	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4010066	     0xf8493070000	                            je 0x40107ff	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x401006c	          0x83e07f	                           and eax, 0x7f	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x401006f	        0x41884508	                  mov byte [r13 + 8], al	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4010073	      0xe9e6f4ffff	                           jmp 0x400f55e	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4010078	     0xf1f84000000	                   nop dword [rax + rax]	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4010080	      0x44894c247c	             mov dword [rsp + 0x7c], r9d	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4010085	        0x89742478	             mov dword [rsp + 0x78], esi	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4010089	      0x4c89542470	             mov qword [rsp + 0x70], r10	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x401008e	      0x4c895c2468	             mov qword [rsp + 0x68], r11	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4010093	      0x4489442460	             mov dword [rsp + 0x60], r8d	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4010098	        0x894c245c	             mov dword [rsp + 0x5c], ecx	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x401009c	      0xe800000000	                          call 0x40100a1	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x40100a1	          0x4885c0	                           test rax, rax	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100a4	          0x4989c6	                            mov r14, rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x40100a7	      0x4889442418	             mov qword [rsp + 0x18], rax	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100ac	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100b0	      0x448b442460	            mov r8d, dword [rsp + 0x60] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100b5	      0x4c8b5c2468	            mov r11, qword [rsp + 0x68] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100ba	      0x4c8b542470	            mov r10, qword [rsp + 0x70] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100bf	      0x4863742478	         movsxd rsi, dword [rsp + 0x78] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100c4	      0x448b4c247c	            mov r9d, dword [rsp + 0x7c] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100c9	     0xf85e3f5ffff	                           jne 0x400f6b2	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100cf	    0x838c24940000	             or dword [rsp + 0x94], 0x10	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100d7	      0xe94cf2ffff	                           jmp 0x400f328	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100dc	         0xf1f4000	                         nop dword [rax]	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100e0	      0x4889742470	             mov qword [rsp + 0x70], rsi	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100e5	        0x884c2468	               mov byte [rsp + 0x68], cl	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100e9	      0x4c894c2460	              mov qword [rsp + 0x60], r9	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100ee	      0x44895c245c	            mov dword [rsp + 0x5c], r11d	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100f3	      0x4489442420	             mov dword [rsp + 0x20], r8d	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x40100f8	      0xe800000000	                          call 0x40100fd	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x40100fd	          0x4885c0	                           test rax, rax	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4010100	          0x4989c6	                            mov r14, rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4010103	          0x4989c2	                            mov r10, rax	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4010106	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x401010b	      0x448b5c245c	           mov r11d, dword [rsp + 0x5c] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4010110	      0x4c8b4c2460	              mov r9, qword [rsp + 0x60]	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4010115	       0xfb64c2468	           movzx ecx, byte [rsp + 0x68] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x401011a	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x401011f	     0xf85e6f7ffff	                           jne 0x400f90b	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4010125	    0x838c24940000	             or dword [rsp + 0x94], 0x10	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x401012d	      0xe97ef2ffff	                           jmp 0x400f3b0	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4010132	    0x660f1f440000	                    nop word [rax + rax]	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4010138	          0xf6c370	                           test bl, 0x70	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x401013b	     0xf8561f4ffff	                           jne 0x400f5a2	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4010141	      0x488b742408	                mov rsi, qword [rsp + 8]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4010146	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x401014e	    0x488d8c24a000	                   lea rcx, [rsp + 0xa0]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4010156	    0x488d9424e000	                   lea rdx, [rsp + 0xe0]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x401015e	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4010166	    0x41b801000000	                              mov r8d, 1	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x401016c	      0xe86f2fffff	                   call sym.decCompareOp	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4010171	    0x6683bc246a01	               cmp word [rsp + 0x16a], 0	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x401017a	     0xf851d080000	                           jne 0x401099d	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4010180	          0x458b27	                   mov r12d, dword [r15]	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4010183	    0x41c747040000	                  mov dword [r15 + 4], 0	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x401018b	            0x31c9	                            xor ecx, ecx	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x401018d	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4010193	    0xc78424980000	               mov dword [rsp + 0x98], 1	      5790	decNumber.c	DO_1	IF_7
0x401019e	     0xf85bb020000	                           jne 0x401045f	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101a4	        0x4183fc01	                             cmp r12d, 1	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101a8	     0xf85b1020000	                           jne 0x401045f	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101ae	      0x410fb64708	               movzx eax, byte [r15 + 8]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101b3	            0xa870	                           test al, 0x70	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101b5	     0xf85a9020000	                           jne 0x4010464	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101bb	    0xc78424980000	               mov dword [rsp + 0x98], 0	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101c6	      0xe999020000	                           jmp 0x4010464	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101cb	       0xf1f440000	                   nop dword [rax + rax]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x40101d0	          0x83c102	                              add ecx, 2	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101d3	      0xba56555555	                     mov edx, 0x55555556	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101d8	            0x89c8	                            mov eax, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101da	          0xc1f91f	                           sar ecx, 0x1f	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101dd	            0xf7ea	                                imul edx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101df	            0x29ca	                            sub edx, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101e1	      0xe954f5ffff	                           jmp 0x400f73a	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101f0	          0x4531c9	                            xor r9d, r9d	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101f3	      0xbd01000000	                              mov ebp, 1	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101f8	      0xe93bf1ffff	                           jmp 0x400f338	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40101fd	           0xf1f00	                         nop dword [rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4010200	          0xf6c370	                           test bl, 0x70	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4010203	     0xf85e7f3ffff	                           jne 0x400f5f0	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4010209	        0x41884508	                  mov byte [r13 + 8], al	      6839	decNumber.c	FUNCTION_11
0x401020d	    0x8b8424e40000	            mov eax, dword [rsp + 0xe4] 	      6840	decNumber.c	FUNCTION_11
0x4010214	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401021c	    0x8b8c24e00000	            mov ecx, dword [rsp + 0xe0] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010223	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401022b	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010233	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401023b	        0x418b6d04	                mov ebp, dword [r13 + 4]	      3867	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x401023f	          0x4c89ef	                            mov rdi, r13	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010242	        0x41894504	                mov dword [r13 + 4], eax	      6840	decNumber.c	FUNCTION_11
0x4010246	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      3869	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4010251	      0xe84a11ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010256	      0x410fb64508	               movzx eax, byte [r13 + 8]	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x401025b	        0x418b4d04	                mov ecx, dword [r13 + 4]	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x401025f	            0x89eb	                            mov ebx, ebp	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4010261	            0x29cb	                            sub ebx, ecx	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4010263	          0x83c080	             add eax, 0xffffffffffffff80	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4010266	    0x6641837d0a00	                 cmp word [r13 + 0xa], 0	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x401026c	        0x41884508	                  mov byte [r13 + 8], al	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4010270	            0x750b	                           jne 0x401027d	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4010272	      0x41837d0001	                      cmp dword [r13], 1	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4010277	     0xf84b6050000	                            je 0x4010833	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x401027d	            0x85db	                           test ebx, ebx	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x401027f	     0xf890df9ffff	                           jns 0x400fb92	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4010285	        0x418b4500	                    mov eax, dword [r13]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010289	    0x8b9424c00000	            mov edx, dword [rsp + 0xc0] 	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010290	            0x89c6	                            mov esi, eax	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010292	            0x29de	                            sub esi, ebx	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010294	            0x39d6	                            cmp esi, edx	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010296	            0x7e0f	                           jle 0x40102a7	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010298	    0x818c24940000	            or dword [rsp + 0x94], 0x800	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40102a3	            0x89c3	                            mov ebx, eax	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40102a5	            0x29d3	                            sub ebx, edx	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40102a7	            0x89da	                            mov edx, ebx	      6684	decNumber.c	FUNCTION_8	IF_1
0x40102a9	            0xf7da	                                 neg edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x40102ab	     0xf8595040000	                           jne 0x4010746	      6684	decNumber.c	FUNCTION_8	IF_1
0x40102b1	             0x1d9	                            add ecx, ebx	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40102b3	        0x41894500	                    mov dword [r13], eax	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x40102b7	        0x41894d04	                mov dword [r13 + 4], ecx	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40102bb	      0xe9d2f8ffff	                           jmp 0x400fb92	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40102c0	          0x83c102	                              add ecx, 2	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40102c3	      0xba56555555	                     mov edx, 0x55555556	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40102c8	            0x89c8	                            mov eax, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40102ca	          0xc1f91f	                           sar ecx, 0x1f	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40102cd	            0xf7ea	                                imul edx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40102cf	            0x29ca	                            sub edx, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40102d1	      0xe9c5f6ffff	                           jmp 0x400f99b	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40102d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x40102e0	          0xf6c370	                           test bl, 0x70	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x40102e3	     0xf857bf5ffff	                           jne 0x400f864	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x40102e9	        0x41884708	                  mov byte [r15 + 8], al	      6839	decNumber.c	FUNCTION_11
0x40102ed	        0x418b4504	                mov eax, dword [r13 + 4]	      6840	decNumber.c	FUNCTION_11
0x40102f1	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40102f9	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40102fe	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010306	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401030e	        0x418b5f04	                mov ebx, dword [r15 + 4]	      3867	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4010312	            0x89e9	                            mov ecx, ebp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010314	          0x4c89ff	                            mov rdi, r15	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010317	        0x41894704	                mov dword [r15 + 4], eax	      6840	decNumber.c	FUNCTION_11
0x401031b	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      3869	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4010326	      0xe87510ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401032b	        0x418b4f04	                mov ecx, dword [r15 + 4]	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x401032f	            0x89dd	                            mov ebp, ebx	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4010331	            0x29cd	                            sub ebp, ecx	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4010333	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4010339	            0x750a	                           jne 0x4010345	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x401033b	        0x41833f01	                      cmp dword [r15], 1	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x401033f	     0xf8427050000	                            je 0x401086c	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4010345	            0x85ed	                           test ebp, ebp	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4010347	     0xf893bf9ffff	                           jns 0x400fc88	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x401034d	          0x418b07	                    mov eax, dword [r15]	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4010350	    0x8b9424a00000	            mov edx, dword [rsp + 0xa0] 	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4010357	            0x89c6	                            mov esi, eax	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4010359	            0x29ee	                            sub esi, ebp	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x401035b	            0x39d6	                            cmp esi, edx	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x401035d	     0xf8f88040000	                            jg 0x40107eb	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4010363	            0x89ea	                            mov edx, ebp	      6684	decNumber.c	FUNCTION_8	IF_1
0x4010365	            0xf7da	                                 neg edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x4010367	     0xf851b060000	                           jne 0x4010988	      6684	decNumber.c	FUNCTION_8	IF_1
0x401036d	             0x1e9	                            add ecx, ebp	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x401036f	          0x418907	                    mov dword [r15], eax	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4010372	        0x41894f04	                mov dword [r15 + 4], ecx	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4010376	      0xe90df9ffff	                           jmp 0x400fc88	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x401037b	       0xf1f440000	                   nop dword [rax + rax]	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4010380	          0x8d5080	                   lea edx, [rax - 0x80]	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4010383	          0x4963f4	                        movsxd rsi, r12d	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4010386	            0x89d8	                            mov eax, ebx	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4010388	            0xf7d9	                                 neg ecx	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x401038a	          0x4c63e5	                         movsxd r12, ebp	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x401038d	          0x4d89ea	                            mov r10, r13	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4010390	            0x89d3	                            mov ebx, edx	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4010392	    0x41be01000000	                             mov r14d, 1	      3989	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4010398	    0x4c8d9c24e000	                   lea r11, [rsp + 0xe0]	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103a0	      0xe964f7ffff	                           jmp 0x400fb09	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103a5	           0xf1f00	                         nop dword [rax]	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103a8	            0x89e9	                            mov ecx, ebp	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103aa	          0x41f7da	                                neg r10d	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103ad	          0x4963ec	                        movsxd rbp, r12d	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103b0	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103b5	          0x4c63e1	                         movsxd r12, ecx	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103b8	          0x4c89fe	                            mov rsi, r15	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103bb	            0x89c1	                            mov ecx, eax	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103bd	          0x4d89e9	                             mov r9, r13	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103c0	            0x89d8	                            mov eax, ebx	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103c2	      0xe947f8ffff	                           jmp 0x400fc0e	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103c7	    0x660f1f840000	                    nop word [rax + rax]	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x40103d0	        0x448d7103	                     lea r14d, [rcx + 3]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103d4	      0xba56555555	                     mov edx, 0x55555556	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103d9	          0x4489f0	                           mov eax, r14d	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103dc	        0x41c1fe1f	                          sar r14d, 0x1f	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103e0	            0xf7ea	                                imul edx	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103e2	          0x4429f2	                           sub edx, r14d	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103e5	        0x448d42ff	                      lea r8d, [rdx - 1]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103e9	      0xe9ccfaffff	                           jmp 0x400feba	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103ee	            0x6690	                                     nop	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103f0	        0x458d5a03	                     lea r11d, [r10 + 3]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103f4	      0xba56555555	                     mov edx, 0x55555556	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103f9	          0x4489d8	                           mov eax, r11d	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x40103fc	        0x41c1fb1f	                          sar r11d, 0x1f	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4010400	            0xf7ea	                                imul edx	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4010402	          0x4429da	                           sub edx, r11d	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4010405	        0x448d42ff	                      lea r8d, [rdx - 1]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4010409	      0xe95efbffff	                           jmp 0x400ff6c	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x401040e	            0x6690	                                     nop	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4010410	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4010414	     0xf86dbf3ffff	                           jbe 0x400f7f5	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x401041a	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x401041d	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010420	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010424	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010427	      0xe9c9f3ffff	                           jmp 0x400f7f5	      7780	decNumber.c	FUNCTION_25	FOR_1
0x401042c	         0xf1f4000	                         nop dword [rax]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010430	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4010434	     0xf8619f6ffff	                           jbe 0x400fa53	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x401043a	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x401043d	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010440	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010444	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010447	      0xe907f6ffff	                           jmp 0x400fa53	      7780	decNumber.c	FUNCTION_25	FOR_1
0x401044c	         0xf1f4000	                         nop dword [rax]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010450	        0x418b4f04	                mov ecx, dword [r15 + 4]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010454	    0xc78424980000	               mov dword [rsp + 0x98], 1	      5790	decNumber.c	DO_1	IF_7
0x401045f	      0x410fb64708	               movzx eax, byte [r15 + 8]	      5790	decNumber.c	DO_1	IF_7
0x4010464	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      5792	decNumber.c	DO_1	IF_7
0x4010469	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      6839	decNumber.c	FUNCTION_11
0x401046e	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010476	    0x4c8bbc248000	            mov r15, qword [rsp + 0x80] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401047e	    0x4c8d84249800	                    lea r8, [rsp + 0x98]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010486	          0x418b16	                    mov edx, dword [r14]	      5792	decNumber.c	DO_1	IF_7
0x4010489	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401048c	          0x894b04	                mov dword [rbx + 4], ecx	      6840	decNumber.c	FUNCTION_11
0x401048f	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x4010492	          0x4489e1	                           mov ecx, r12d	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010495	          0x4d89f9	                             mov r9, r15	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010498	    0x899424a00000	             mov dword [rsp + 0xa0], edx	      5792	decNumber.c	DO_1	IF_7
0x401049f	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40104a4	      0xe8f70effff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40104a9	    0x488d94249800	                   lea rdx, [rsp + 0x98]	      5794	decNumber.c	DO_1	IF_7
0x40104b1	          0x4c89f9	                            mov rcx, r15	      5794	decNumber.c	DO_1	IF_7
0x40104b4	          0x4c89f6	                            mov rsi, r14	      5794	decNumber.c	DO_1	IF_7
0x40104b7	          0x4889df	                            mov rdi, rbx	      5794	decNumber.c	DO_1	IF_7
0x40104ba	      0xe83128ffff	                    call sym.decFinalize	      5794	decNumber.c	DO_1	IF_7
0x40104bf	      0xe9e6e9ffff	                           jmp 0x400eeaa	      5794	decNumber.c	DO_1	IF_7
0x40104c4	         0xf1f4000	                         nop dword [rax]	      5794	decNumber.c	DO_1	IF_7
0x40104c8	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40104cd	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40104d5	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40104dd	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40104e5	            0x89e9	                            mov ecx, ebp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40104e7	          0x4c89ef	                            mov rdi, r13	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40104ea	    0x8b9c24e40000	            mov ebx, dword [rsp + 0xe4] 	      3903	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x40104f1	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      3905	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x40104fc	      0xe89f0effff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010501	        0x418b4d04	                mov ecx, dword [r13 + 4]	      3912	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20
0x4010505	            0x29cb	                            sub ebx, ecx	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4010507	     0xf8985f6ffff	                           jns 0x400fb92	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x401050d	      0xe973fdffff	                           jmp 0x4010285	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4010512	    0x660f1f440000	                    nop word [rax + rax]	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4010518	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401051d	    0x4c8d8c249400	                    lea r9, [rsp + 0x94]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010525	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401052d	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010535	          0x4489e1	                           mov ecx, r12d	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4010538	          0x4c89ff	                            mov rdi, r15	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401053b	        0x418b5d04	                mov ebx, dword [r13 + 4]	      3903	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x401053f	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      3905	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x401054a	      0xe8510effff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x401054f	        0x418b4f04	                mov ecx, dword [r15 + 4]	      3912	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20
0x4010553	            0x29cb	                            sub ebx, ecx	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4010555	     0xf892df7ffff	                           jns 0x400fc88	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x401055b	          0x418b07	                    mov eax, dword [r15]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x401055e	    0x8b9424a00000	            mov edx, dword [rsp + 0xa0] 	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010565	            0x89c6	                            mov esi, eax	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010567	            0x29de	                            sub esi, ebx	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010569	            0x39d6	                            cmp esi, edx	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x401056b	     0xf8f2c020000	                            jg 0x401079d	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4010571	            0x89da	                            mov edx, ebx	      6684	decNumber.c	FUNCTION_8	IF_1
0x4010573	            0xf7da	                                 neg edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x4010575	     0xf859a030000	                           jne 0x4010915	      6684	decNumber.c	FUNCTION_8	IF_1
0x401057b	             0x1d9	                            add ecx, ebx	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x401057d	          0x418907	                    mov dword [r15], eax	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x4010580	        0x41894f04	                mov dword [r15 + 4], ecx	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4010584	      0xe9fff6ffff	                           jmp 0x400fc88	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4010589	     0xf1f80000000	                         nop dword [rax]	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x4010590	        0x6683fa09	                               cmp dx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4010594	     0xf86d6f1ffff	                           jbe 0x400f770	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x401059a	          0x8d4101	                      lea eax, [rcx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x401059d	          0x83c102	                              add ecx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105a0	        0x6683fa63	                            cmp dx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105a4	           0xf46c8	                         cmovbe ecx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105a7	      0xe9c4f1ffff	                           jmp 0x400f770	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105ac	         0xf1f4000	                         nop dword [rax]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105b0	        0x6683fa09	                               cmp dx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x40105b4	     0xf8616f4ffff	                           jbe 0x400f9d0	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x40105ba	          0x8d4101	                      lea eax, [rcx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105bd	          0x83c102	                              add ecx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105c0	        0x6683fa63	                            cmp dx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105c4	           0xf46c8	                         cmovbe ecx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105c7	      0xe904f4ffff	                           jmp 0x400f9d0	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105cc	         0xf1f4000	                         nop dword [rax]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40105d0	          0x83f810	                           cmp eax, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105d3	      0xb910000000	                           mov ecx, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105d8	      0xba56555555	                     mov edx, 0x55555556	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105dd	           0xf4dc8	                         cmovge ecx, eax	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105e0	          0x83c102	                              add ecx, 2	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105e3	            0x89c8	                            mov eax, ecx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105e5	          0xc1f91f	                           sar ecx, 0x1f	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105e8	            0xf7ea	                                imul edx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105ea	            0x29ca	                            sub edx, ecx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105ec	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105f0	      0xe96ae9ffff	                           jmp 0x400ef5f	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105f5	           0xf1f00	                         nop dword [rax]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x40105f8	    0x4c8dac242001	                  lea r13, [rsp + 0x120]	      5598	decNumber.c	
0x4010600	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5597	decNumber.c	
0x4010609	      0xe9b2e9ffff	                           jmp 0x400efc0	      5597	decNumber.c	
0x401060e	            0x6690	                                     nop	      5597	decNumber.c	
0x4010610	          0x83fb10	                           cmp ebx, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4010613	      0xb910000000	                           mov ecx, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4010618	      0xba56555555	                     mov edx, 0x55555556	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x401061d	           0xf4cd9	                          cmovl ebx, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4010620	          0x8d4b02	                      lea ecx, [rbx + 2]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4010623	            0x89c8	                            mov eax, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4010625	          0xc1f91f	                           sar ecx, 0x1f	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4010628	            0xf7ea	                                imul edx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x401062a	            0x29ca	                            sub edx, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x401062c	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4010630	      0xe96ae9ffff	                           jmp 0x400ef9f	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4010635	            0x89c7	                            mov edi, eax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x4010637	      0xe800000000	                          call 0x401063c	      5666	decNumber.c	DO_1	IF_7	IF_11
0x401063c	          0x4885c0	                           test rax, rax	      5667	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x401063f	      0x4889442448	             mov qword [rsp + 0x48], rax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x4010644	          0x4989c7	                            mov r15, rax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x4010647	     0xf852ce9ffff	                           jne 0x400ef79	      5667	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x401064d	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4010655	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5597	decNumber.c	
0x401065e	          0x830810	                    or dword [rax], 0x10	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4010661	      0xe944e8ffff	                           jmp 0x400eeaa	      5669	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4010666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5669	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4010670	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x4010675	      0xbfd34d6210	                     mov edi, 0x10624dd3	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401067a	          0x4189d8	                            mov r8d, ebx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401067d	           0xf1f00	                         nop dword [rax]	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010680	            0x89c8	                            mov eax, ecx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010682	        0x4883c602	                              add rsi, 2	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010686	            0xf7e7	                                 mul edi	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010688	          0xc1ea06	                              shr edx, 6	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401068b	    0x69c2e8030000	                    imul eax, edx, 0x3e8	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010691	            0x29c1	                            sub ecx, eax	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010693	        0x66894efe	                  mov word [rsi - 2], cx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010697	            0x85d2	                           test edx, edx	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010699	            0x89d1	                            mov ecx, edx	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401069b	            0x75e3	                           jne 0x4010680	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401069d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40106a2	          0x4489c3	                            mov ebx, r8d	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40106a5	          0x4829c6	                            sub rsi, rax	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40106a8	          0x4889c7	                            mov rdi, rax	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40106ab	          0x48d1fe	                              sar rsi, 1	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40106ae	      0xe8edfffeff	                   call sym.decGetDigits	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40106b3	        0x41894500	                    mov dword [r13], eax	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40106b7	      0xe9a1eaffff	                           jmp 0x400f15d	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x40106bc	            0xf7d9	                                 neg ecx	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x40106be	      0xb800000080	                     mov eax, 0x80000000	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x40106c3	    0x81fb00000080	                     cmp ebx, 0x80000000	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x40106c9	           0xf44c8	                          cmove ecx, eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x40106cc	          0x4531e4	                          xor r12d, r12d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40106cf	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40106d4	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40106dc	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40106e3	      0x664589670a	              mov word [r15 + 0xa], r12w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40106e8	        0x4d8d770a	                    lea r14, [r15 + 0xa]	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40106ec	      0xbfd34d6210	                     mov edi, 0x10624dd3	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40106f1	          0x4189d8	                            mov r8d, ebx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40106f4	          0x4c89f6	                            mov rsi, r14	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40106f7	          0x4d89f1	                             mov r9, r14	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x40106fa	    0x660f1f440000	                    nop word [rax + rax]	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010700	            0x89c8	                            mov eax, ecx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010702	        0x4883c602	                              add rsi, 2	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010706	            0xf7e7	                                 mul edi	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010708	          0xc1ea06	                              shr edx, 6	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401070b	    0x69c2e8030000	                    imul eax, edx, 0x3e8	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010711	            0x29c1	                            sub ecx, eax	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010713	        0x66894efe	                  mov word [rsi - 2], cx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010717	            0x85d2	                           test edx, edx	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4010719	            0x89d1	                            mov ecx, edx	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401071b	            0x75e3	                           jne 0x4010700	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x401071d	          0x4c29ce	                             sub rsi, r9	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4010720	          0x4c89cf	                             mov rdi, r9	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4010723	          0x48d1fe	                              sar rsi, 1	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4010726	      0xe875fffeff	                   call sym.decGetDigits	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x401072b	          0x4585c0	                           test r8d, r8d	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x401072e	          0x418907	                    mov dword [r15], eax	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4010731	     0xf8934030000	                           jns 0x4010a6b	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4010737	      0x41c6470880	                mov byte [r15 + 8], 0x80	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x401073c	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4010741	      0xe9d0e8ffff	                           jmp 0x400f016	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4010746	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x401074b	            0x89c6	                            mov esi, eax	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x401074d	      0xe84e05ffff	          call sym.decShiftToMost.part.0	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4010752	        0x418b4d04	                mov ecx, dword [r13 + 4]	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4010756	      0xe956fbffff	                           jmp 0x40102b1	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x401075b	            0x29d0	                            sub eax, edx	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x401075d	            0x85c0	                           test eax, eax	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x401075f	     0xf8ed1020000	                           jle 0x4010a36	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010765	          0x4129f1	                            sub r9d, esi	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010768	          0x83fd31	                           cmp ebp, 0x31	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x401076b	      0x6645894d0a	               mov word [r13 + 0xa], r9w	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010770	     0xf8f51020000	                            jg 0x40109c7	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4010776	     0xfb6b5000000	                   movzx esi, byte [rbp]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x401077d	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4010782	      0x44894c2414	             mov dword [rsp + 0x14], r9d	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4010787	      0xe814fffeff	                   call sym.decGetDigits	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x401078c	          0x4863e8	                         movsxd rbp, eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x401078f	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4010794	        0x41896d00	                    mov dword [r13], ebp	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4010798	      0xe98bebffff	                           jmp 0x400f328	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x401079d	            0x89c3	                            mov ebx, eax	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x401079f	    0x818c24940000	            or dword [rsp + 0x94], 0x800	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40107aa	            0x29d3	                            sub ebx, edx	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40107ac	      0xe9c0fdffff	                           jmp 0x4010571	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40107b1	            0x29d0	                            sub eax, edx	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40107b3	            0x85c0	                           test eax, eax	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40107b5	     0xf8e63020000	                           jle 0x4010a1e	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40107bb	          0x4429c9	                            sub ecx, r9d	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40107be	        0x4183fc31	                          cmp r12d, 0x31	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40107c2	      0x6641894f0a	                mov word [r15 + 0xa], cx	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40107c7	     0xf8f12020000	                            jg 0x40109df	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40107cd	    0x410fb6b42400	                   movzx esi, byte [r12]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40107d6	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40107db	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40107de	      0xe8bdfefeff	                   call sym.decGetDigits	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40107e3	          0x418907	                    mov dword [r15], eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40107e6	      0xe9c5ebffff	                           jmp 0x400f3b0	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40107eb	            0x89c5	                            mov ebp, eax	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x40107ed	    0x818c24940000	            or dword [rsp + 0x94], 0x800	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x40107f8	            0x29d5	                            sub ebp, edx	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x40107fa	      0xe964fbffff	                           jmp 0x4010363	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x40107ff	          0x83c880	                      or eax, 0xffffff80	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4010802	        0x41884508	                  mov byte [r13 + 8], al	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4010806	      0xe953edffff	                           jmp 0x400f55e	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x401080b	          0x83cb80	                      or ebx, 0xffffff80	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x401080e	        0x41885f08	                  mov byte [r15 + 8], bl	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4010812	      0xe999ebffff	                           jmp 0x400f3b0	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4010817	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x401081b	     0xf8669e8ffff	                           jbe 0x400f08a	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4010821	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010824	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010827	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x401082b	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x401082e	      0xe957e8ffff	                           jmp 0x400f08a	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4010833	            0xa870	                           test al, 0x70	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4010835	     0xf8542faffff	                           jne 0x401027d	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x401083b	            0x85db	                           test ebx, ebx	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x401083d	     0xf8811020000	                            js 0x4010a54	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4010843	      0x807c241400	                cmp byte [rsp + 0x14], 0	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x4010848	     0xf8444f3ffff	                            je 0x400fb92	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x401084e	    0x83bc24cc0000	               cmp dword [rsp + 0xcc], 6	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4010856	      0xb800000000	                              mov eax, 0	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x401085b	      0xbb80ffffff	                     mov ebx, 0xffffff80	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4010860	           0xf44c3	                          cmove eax, ebx	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4010863	        0x41884508	                  mov byte [r13 + 8], al	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4010867	      0xe926f3ffff	                           jmp 0x400fb92	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x401086c	      0x41f6470870	               test byte [r15 + 8], 0x70	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4010871	     0xf85cefaffff	                           jne 0x4010345	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4010877	            0x85ed	                           test ebp, ebp	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4010879	     0xf88de010000	                            js 0x4010a5d	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x401087f	      0x807c241400	                cmp byte [rsp + 0x14], 0	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x4010884	     0xf84fef3ffff	                            je 0x400fc88	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x401088a	    0x83bc24ac0000	               cmp dword [rsp + 0xac], 6	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4010892	      0xb800000000	                              mov eax, 0	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4010897	      0xbb80ffffff	                     mov ebx, 0xffffff80	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x401089c	           0xf44c3	                          cmove eax, ebx	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x401089f	        0x41884708	                  mov byte [r15 + 8], al	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40108a3	      0xe9e0f3ffff	                           jmp 0x400fc88	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40108a8	          0x4139ec	                           cmp r12d, ebp	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40108ab	            0x89ef	                            mov edi, ebp	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40108ad	          0x4863f5	                         movsxd rsi, ebp	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108b0	        0x410f4dfc	                        cmovge edi, r12d	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108b4	        0x397c2420	            cmp dword [rsp + 0x20], edi 	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108b8	          0x4d89eb	                            mov r11, r13	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108bb	     0xf8e3a010000	                           jle 0x40109fb	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108c1	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108c6	    0x4c8d9424e000	                   lea r10, [rsp + 0xe0]	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108ce	          0x4531c0	                            xor r8d, r8d	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108d1	      0xb901000000	                              mov ecx, 1	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108d6	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40108df	      0xe9ceedffff	                           jmp 0x400f6b2	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40108e4	          0x4139ec	                           cmp r12d, ebp	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40108e7	            0x89ef	                            mov edi, ebp	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40108e9	          0x4c89ee	                            mov rsi, r13	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108ec	        0x410f4dfc	                        cmovge edi, r12d	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108f0	        0x397c2418	            cmp dword [rsp + 0x18], edi 	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108f4	            0x89d9	                            mov ecx, ebx	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108f6	          0x4d89f9	                             mov r9, r15	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108f9	     0xf8e11010000	                           jle 0x4010a10	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x40108ff	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010904	    0x41bb01000000	                             mov r11d, 1	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x401090a	          0x4531c0	                            xor r8d, r8d	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x401090d	          0x4531f6	                          xor r14d, r14d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010910	      0xe9f6efffff	                           jmp 0x400f90b	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010915	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x401091a	            0x89c6	                            mov esi, eax	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x401091c	      0xe87f03ffff	          call sym.decShiftToMost.part.0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010921	        0x418b4f04	                mov ecx, dword [r15 + 4]	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4010925	      0xe951fcffff	                           jmp 0x401057b	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x401092a	          0x83fb02	                              cmp ebx, 2	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x401092d	     0xf85f2e5ffff	                           jne 0x400ef25	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010933	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010938	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x4010940	      0xbe00000000	                              mov esi, 0	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x4010945	          0x488b03	                    mov rax, qword [rbx]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010948	    0x48898424a000	             mov qword [rsp + 0xa0], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010950	        0x488b4308	                mov rax, qword [rbx + 8]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010954	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x401095c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010960	    0xc78424ac0000	               mov dword [rsp + 0xac], 3	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x401096b	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010973	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010976	    0x898424b80000	             mov dword [rsp + 0xb8], eax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x401097d	      0xe94febffff	                           jmp 0x400f4d1	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010982	    0x660f1f440000	                    nop word [rax + rax]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010988	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x401098d	            0x89c6	                            mov esi, eax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x401098f	      0xe80c03ffff	          call sym.decShiftToMost.part.0	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010994	        0x418b4f04	                mov ecx, dword [r15 + 4]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4010998	      0xe9d0f9ffff	                           jmp 0x401036d	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x401099d	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x40109a5	        0x418b4f04	                mov ecx, dword [r15 + 4]	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x40109a9	          0x458b27	                   mov r12d, dword [r15]	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x40109ac	    0x810820080000	                   or dword [rax], 0x820	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x40109b2	      0xe9d6f7ffff	                           jmp 0x401018d	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x40109b7	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x40109bf	          0x830810	                    or dword [rax], 0x10	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x40109c2	      0xe9e3e4ffff	                           jmp 0x400eeaa	      5678	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x40109c7	          0x83c502	                              add ebp, 2	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109ca	      0xba56555555	                     mov edx, 0x55555556	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109cf	            0x89e8	                            mov eax, ebp	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109d1	          0xc1fd1f	                           sar ebp, 0x1f	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109d4	            0xf7ea	                                imul edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109d6	            0x89d6	                            mov esi, edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109d8	            0x29ee	                            sub esi, ebp	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109da	      0xe99efdffff	                           jmp 0x401077d	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109df	        0x4183c402	                             add r12d, 2	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109e3	      0xba56555555	                     mov edx, 0x55555556	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109e8	          0x4489e0	                           mov eax, r12d	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109eb	        0x41c1fc1f	                          sar r12d, 0x1f	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109ef	            0xf7ea	                                imul edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109f1	            0x89d6	                            mov esi, edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109f3	          0x4429e6	                           sub esi, r12d	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109f6	      0xe9dbfdffff	                           jmp 0x40107d6	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40109fb	    0x4c8d9424e000	                   lea r10, [rsp + 0xe0]	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010a03	          0x4531c0	                            xor r8d, r8d	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010a06	      0xb901000000	                              mov ecx, 1	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010a0b	      0xe96becffff	                           jmp 0x400f67b	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010a10	    0x41bb01000000	                             mov r11d, 1	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010a16	          0x4531c0	                            xor r8d, r8d	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010a19	      0xe9bceeffff	                           jmp 0x400f8da	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4010a1e	            0x89ef	                            mov edi, ebp	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a20	            0x89d9	                            mov ecx, ebx	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a22	          0x4d89f9	                             mov r9, r15	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a25	          0x4c89ee	                            mov rsi, r13	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a28	    0x41bbffffffff	                    mov r11d, 0xffffffff	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a2e	          0x4531c0	                            xor r8d, r8d	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4010a31	      0xe985eeffff	                           jmp 0x400f8bb	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4010a36	          0x4489e7	                           mov edi, r12d	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a39	          0x4863f5	                         movsxd rsi, ebp	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a3c	          0x4d89eb	                            mov r11, r13	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a3f	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a44	          0x4531c0	                            xor r8d, r8d	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4010a47	    0x4c8d9424e000	                   lea r10, [rsp + 0xe0]	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a4f	      0xe90aecffff	                           jmp 0x400f65e	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4010a54	        0x41896d04	                mov dword [r13 + 4], ebp	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4010a58	      0xe9e6fdffff	                           jmp 0x4010843	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4010a5d	        0x41895f04	                mov dword [r15 + 4], ebx	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4010a61	      0xe919feffff	                           jmp 0x401087f	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4010a66	      0xe800000000	                          call 0x4010a6b	      5801	decNumber.c	DO_1
0x4010a6b	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4010a70	      0xe9a1e5ffff	                           jmp 0x400f016	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
decNumberLogB	SWITCH,0:functions,0:IF,5:WHILE,0:CALL,9:FOR,0:DO,0:ELSE,3	294
0x40058e0	              0x55	                                push rbp	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x40058e1	              0x53	                                push rbx	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x40058e2	          0x4889d5	                            mov rbp, rdx	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x40058e5	          0x4889fb	                            mov rbx, rdi	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x40058e8	        0x4883ec18	                           sub rsp, 0x18	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x40058ec	         0xfb64e08	               movzx ecx, byte [rsi + 8]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x40058f0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x40058f9	      0x4889442408	                mov qword [rsp + 8], rax	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x40058fe	            0x31c0	                            xor eax, eax	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005900	    0xc74424040000	                  mov dword [rsp + 4], 0	      1335	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005908	          0xf6c130	                           test cl, 0x30	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x400590b	            0x7573	                           jne 0x4005980	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x400590d	          0xf6c140	                           test cl, 0x40	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4005910	     0xf85ba000000	                           jne 0x40059d0	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4005916	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x400591b	            0x8b06	                    mov eax, dword [rsi]	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x400591d	            0x7509	                           jne 0x4005928	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x400591f	          0x83f801	                              cmp eax, 1	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4005922	     0xf8488030000	                            je 0x4005cb0	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4005928	           0x34604	                add eax, dword [rsi + 4]	      1350	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3
0x400592b	          0x83e801	                              sub eax, 1	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400592e	            0x89c7	                            mov edi, eax	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4005930	     0xf88da020000	                            js 0x4005c10	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4005936	      0xbe00000000	                              mov esi, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400593b	            0x89c1	                            mov ecx, eax	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x400593d	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005941	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005948	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400594e	        0x6689730a	                mov word [rbx + 0xa], si	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005952	     0xf85d9020000	                           jne 0x4005c31	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x4005958	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x400595d	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005966	          0x4889d8	                            mov rax, rbx	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005969	     0xf85cd030000	                           jne 0x4005d3c	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x400596f	        0x4883c418	                           add rsp, 0x18	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005973	              0x5b	                                 pop rbx	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005974	              0x5d	                                 pop rbp	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005975	              0xc3	                                     ret	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005976	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4005980	      0x4c8d442404	                       lea r8, [rsp + 4]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4005985	          0x4889d1	                            mov rcx, rdx	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4005988	            0x31d2	                            xor edx, edx	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x400598a	      0xe8b1ccffff	                 call sym.decNaNs.isra.6	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x400598f	        0x8b742404	                mov esi, dword [rsp + 4]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4005993	            0x85f6	                           test esi, esi	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4005995	            0x74c1	                            je 0x4005958	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4005997	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400599b	            0x7423	                            je 0x40059c0	      7736	decNumber.c	FUNCTION_24	IF_1
0x400599d	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40059a3	     0xf8557020000	                           jne 0x4005c00	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40059a9	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059ab	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059b2	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059b8	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059bc	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40059c0	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40059c3	      0xe800000000	                          call 0x40059c8	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40059c8	            0xeb8e	                           jmp 0x4005958	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40059ca	    0x660f1f440000	                    nop word [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40059d0	          0x4839fe	                            cmp rsi, rdi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x40059d3	     0xf84f2010000	                            je 0x4005bcb	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x40059d9	          0x884f08	                  mov byte [rdi + 8], cl	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x40059dc	          0x8b4604	                mov eax, dword [rsi + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x40059df	          0x894704	                mov dword [rdi + 4], eax	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x40059e2	            0x8b06	                    mov eax, dword [rsi]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x40059e4	            0x8907	                    mov dword [rdi], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x40059e6	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x40059ea	        0x6689470a	                mov word [rdi + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x40059ee	          0x486306	                 movsxd rax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x40059f1	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x40059f4	     0xf8ed1010000	                           jle 0x4005bcb	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x40059fa	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40059fd	        0x4c8d470c	                     lea r8, [rdi + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005a01	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005a05	     0xf8fdd020000	                            jg 0x4005ce8	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005a0b	     0xfb680000000	                   movzx eax, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005a12	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005a15	        0x488d560c	                    lea rdx, [rsi + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a19	          0x4901c1	                             add r9, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005a1c	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a1f	     0xf86a6010000	                           jbe 0x4005bcb	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a25	        0x488d7e0e	                    lea rdi, [rsi + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a29	          0x4c89c8	                             mov rax, r9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a2c	          0x4829f8	                            sub rax, rdi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a2f	        0x4c8d5001	                      lea r10, [rax + 1]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a33	        0x488d461c	                   lea rax, [rsi + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a37	          0x49d1ea	                              shr r10, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a3a	        0x4983c201	                              add r10, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a3e	          0x4939c0	                             cmp r8, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a41	        0x488d431c	                   lea rax, [rbx + 0x1c]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a45	           0xf93c1	                                setae cl	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a48	          0x4839c2	                            cmp rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a4b	           0xf93c0	                                setae al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a4e	             0x8c1	                               or cl, al	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a50	     0xf848a010000	                            je 0x4005be0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a56	        0x4983fa0e	                            cmp r10, 0xe	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a5a	     0xf8680010000	                           jbe 0x4005be0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a60	          0x4889d0	                            mov rax, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a63	          0x83e00f	                            and eax, 0xf	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a66	          0x48d1e8	                              shr rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a69	          0x48f7d8	                                 neg rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a6c	          0x83e007	                              and eax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a6f	          0x4c39d0	                            cmp rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a72	        0x490f47c2	                          cmova rax, r10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a76	          0x4885c0	                           test rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a79	     0xf8491020000	                            je 0x4005d10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a7f	         0xfb74e0c	            movzx ecx, word [rsi + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a83	        0x4883f801	                              cmp rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a87	        0x66894b0c	                mov word [rbx + 0xc], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a8b	        0x488d4b0e	                    lea rcx, [rbx + 0xe]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a8f	            0x747e	                            je 0x4005b0f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a91	         0xfb74e0e	            movzx ecx, word [rsi + 0xe] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a95	        0x4883f802	                              cmp rax, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a99	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005a9d	        0x66894b0e	                mov word [rbx + 0xe], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005aa1	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005aa5	            0x7468	                            je 0x4005b0f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005aa7	         0xfb74e10	           movzx ecx, word [rsi + 0x10] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005aab	        0x4883f803	                              cmp rax, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005aaf	        0x488d7e12	                   lea rdi, [rsi + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ab3	        0x66894b10	               mov word [rbx + 0x10], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ab7	        0x488d4b12	                   lea rcx, [rbx + 0x12]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005abb	            0x7452	                            je 0x4005b0f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005abd	         0xfb74e12	           movzx ecx, word [rsi + 0x12] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ac1	        0x4883f804	                              cmp rax, 4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ac5	        0x488d7e14	                   lea rdi, [rsi + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ac9	        0x66894b12	               mov word [rbx + 0x12], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005acd	        0x488d4b14	                   lea rcx, [rbx + 0x14]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ad1	            0x743c	                            je 0x4005b0f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ad3	         0xfb74e14	           movzx ecx, word [rsi + 0x14] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ad7	        0x4883f805	                              cmp rax, 5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005adb	        0x488d7e16	                   lea rdi, [rsi + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005adf	        0x66894b14	               mov word [rbx + 0x14], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ae3	        0x488d4b16	                   lea rcx, [rbx + 0x16]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ae7	            0x7426	                            je 0x4005b0f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ae9	         0xfb74e16	           movzx ecx, word [rsi + 0x16] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005aed	        0x4883f807	                              cmp rax, 7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005af1	        0x488d7e18	                   lea rdi, [rsi + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005af5	        0x66894b16	               mov word [rbx + 0x16], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005af9	        0x488d4b18	                   lea rcx, [rbx + 0x18]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005afd	            0x7510	                           jne 0x4005b0f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005aff	         0xfb74e18	           movzx ecx, word [rsi + 0x18] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b03	        0x488d7e1a	                   lea rdi, [rsi + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b07	        0x66894b18	               mov word [rbx + 0x18], cx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b0b	        0x488d4b1a	                   lea rcx, [rbx + 0x1a]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b0f	          0x4929c2	                            sub r10, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b12	          0x4801c0	                            add rax, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b15	            0x31ed	                            xor ebp, ebp	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b17	        0x498d72f8	                      lea rsi, [r10 - 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b1b	          0x4801c2	                            add rdx, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b1e	          0x4c01c0	                             add rax, r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b21	          0x4531c0	                            xor r8d, r8d	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b24	        0x48c1ee03	                              shr rsi, 3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b28	        0x4883c601	                              add rsi, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b2c	    0x4c8d1cf50000	                        lea r11, [rsi*8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b34	    0x66420f6f0402	         movdqa xmm0, xmmword [rdx + r8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b3a	        0x4883c501	                              add rbp, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b3e	      0x420f110400	         movups xmmword [rax + r8], xmm0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b43	        0x4983c010	                            add r8, 0x10	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b47	          0x4839ee	                            cmp rsi, rbp	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b4a	            0x77e8	                            ja 0x4005b34	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b4c	        0x4b8d041b	                    lea rax, [r11 + r11]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b50	          0x4801c7	                            add rdi, rax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b53	          0x4801c8	                            add rax, rcx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b56	          0x4d39da	                            cmp r10, r11	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b59	            0x746c	                            je 0x4005bc7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b5b	           0xfb717	                   movzx edx, word [rdi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b5e	          0x668910	                      mov word [rax], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b61	        0x488d5702	                      lea rdx, [rdi + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b65	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b68	            0x765d	                           jbe 0x4005bc7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b6a	         0xfb75702	               movzx edx, word [rdi + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b6e	        0x66895002	                  mov word [rax + 2], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b72	        0x488d5704	                      lea rdx, [rdi + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b76	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b79	            0x764c	                           jbe 0x4005bc7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b7b	         0xfb75704	               movzx edx, word [rdi + 4]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b7f	        0x66895004	                  mov word [rax + 4], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b83	        0x488d5706	                      lea rdx, [rdi + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b87	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b8a	            0x763b	                           jbe 0x4005bc7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b8c	         0xfb75706	               movzx edx, word [rdi + 6]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b90	        0x66895006	                  mov word [rax + 6], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b94	        0x488d5708	                      lea rdx, [rdi + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b98	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b9b	            0x762a	                           jbe 0x4005bc7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005b9d	         0xfb75708	               movzx edx, word [rdi + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ba1	        0x66895008	                  mov word [rax + 8], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ba5	        0x488d570a	                    lea rdx, [rdi + 0xa]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005ba9	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bac	            0x7619	                           jbe 0x4005bc7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bae	         0xfb7570a	            movzx edx, word [rdi + 0xa] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bb2	        0x6689500a	                mov word [rax + 0xa], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bb6	        0x488d570c	                    lea rdx, [rdi + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bba	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bbd	            0x7608	                           jbe 0x4005bc7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bbf	         0xfb7570c	            movzx edx, word [rdi + 0xc] 	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bc3	        0x6689500c	                mov word [rax + 0xc], dx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bc7	         0xfb64b08	               movzx ecx, byte [rbx + 8]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bcb	          0x83e17f	                           and ecx, 0x7f	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005bce	          0x884b08	                  mov byte [rbx + 8], cl	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005bd1	      0xe982fdffff	                           jmp 0x4005958	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005bd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4005be0	           0xfb702	                   movzx eax, word [rdx]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005be3	        0x4883c202	                              add rdx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005be7	        0x4983c002	                               add r8, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005beb	      0x66418940fe	                   mov word [r8 - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bf0	          0x4939d1	                             cmp r9, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bf3	            0x77eb	                            ja 0x4005be0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bf5	            0xebd0	                           jmp 0x4005bc7	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005bf7	    0x660f1f840000	                    nop word [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005c00	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005c06	      0xe9b5fdffff	                           jmp 0x40059c0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005c0b	       0xf1f440000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005c10	            0xf7d8	                                 neg eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4005c12	      0xb900000080	                     mov ecx, 0x80000000	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4005c17	    0x81ff00000080	                     cmp edi, 0x80000000	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4005c1d	           0xf45c8	                         cmovne ecx, eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4005c20	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005c22	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005c26	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005c2d	        0x6689530a	                mov word [rbx + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005c31	        0x4c8d430a	                     lea r8, [rbx + 0xa]	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c35	    0x41b9d34d6210	                     mov r9d, 0x10624dd3	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c3b	          0x4c89c6	                             mov rsi, r8	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c3e	            0x6690	                                     nop	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c40	            0x89c8	                            mov eax, ecx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c42	        0x4883c602	                              add rsi, 2	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c46	          0x41f7e1	                                 mul r9d	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c49	          0xc1ea06	                              shr edx, 6	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c4c	    0x69c2e8030000	                    imul eax, edx, 0x3e8	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c52	            0x29c1	                            sub ecx, eax	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c54	        0x66894efe	                  mov word [rsi - 2], cx	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c58	            0x85d2	                           test edx, edx	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c5a	            0x89d1	                            mov ecx, edx	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c5c	            0x75e2	                           jne 0x4005c40	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4005c5e	          0x4c29c6	                             sub rsi, r8	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4005c61	          0x48d1fe	                              sar rsi, 1	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4005c64	          0x4863c6	                         movsxd rax, esi	      7762	decNumber.c	FUNCTION_25
0x4005c67	        0x8d5476fe	              lea edx, [rsi + rsi*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x4005c6b	      0x498d4440fe	               lea rax, [r8 + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x4005c70	          0x4939c0	                             cmp r8, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005c73	            0x7723	                            ja 0x4005c98	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005c75	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4005c78	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4005c7b	     0xf859f000000	                           jne 0x4005d20	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4005c81	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4005c84	            0x7412	                            je 0x4005c98	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4005c86	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005c8a	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4005c8d	          0x4939c0	                             cmp r8, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005c90	            0x76e3	                           jbe 0x4005c75	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005c92	    0x660f1f440000	                    nop word [rax + rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005c98	            0x85ff	                           test edi, edi	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4005c9a	            0x8913	                    mov dword [rbx], edx	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4005c9c	     0xf89b6fcffff	                           jns 0x4005958	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4005ca2	        0xc6430880	                mov byte [rbx + 8], 0x80	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4005ca6	        0x8b742404	                mov esi, dword [rsp + 4]	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4005caa	      0xe9e4fcffff	                           jmp 0x4005993	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4005caf	              0x90	                                     nop	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4005cb0	          0x83e170	                           and ecx, 0x70	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4005cb3	     0xf856ffcffff	                           jne 0x4005928	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4005cb9	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005cc0	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005cc6	            0x31ff	                            xor edi, edi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005cc8	        0x66897b0a	                mov word [rbx + 0xa], di	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005ccc	        0xc64308c0	                mov byte [rbx + 8], 0xc0	      1346	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4005cd0	      0xbe02000000	                              mov esi, 2	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4005cd5	    0xc74424040200	                  mov dword [rsp + 4], 2	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4005cdd	      0xe9defcffff	                           jmp 0x40059c0	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4005ce2	    0x660f1f440000	                    nop word [rax + rax]	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4005ce8	          0x8d7802	                      lea edi, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005ceb	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005cf0	            0x89f8	                            mov eax, edi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005cf2	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005cf4	            0x89f8	                            mov eax, edi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005cf6	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005cf9	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005cfb	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005cfe	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005d01	      0xe90ffdffff	                           jmp 0x4005a15	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005d06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005d10	          0x4c89c1	                             mov rcx, r8	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005d13	          0x4889d7	                            mov rdi, rdx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005d16	      0xe9f4fdffff	                           jmp 0x4005b0f	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005d1b	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005d20	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4005d24	     0xf866effffff	                           jbe 0x4005c98	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4005d2a	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4005d2d	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4005d30	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4005d34	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4005d37	      0xe95cffffff	                           jmp 0x4005c98	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4005d3c	      0xe800000000	                          call 0x4005d41	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
decNumberExp	SWITCH,0:functions,0:IF,6:WHILE,0:CALL,6:FOR,0:DO,1:ELSE,0	73
0x400be20	              0x55	                                push rbp	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be21	              0x53	                                push rbx	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be22	          0x4889fd	                            mov rbp, rdi	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be25	          0x4889d3	                            mov rbx, rdx	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be28	        0x4883ec18	                           sub rsp, 0x18	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be2c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be35	      0x4889442408	                mov qword [rsp + 8], rax	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be3a	            0x31c0	                            xor eax, eax	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be3c	    0x813a3f420f00	                cmp dword [rdx], 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x400be42	    0xc74424040000	                  mov dword [rsp + 4], 0	      1049	decNumber.c	FUNCTION_68	FUNCTION_17
0x400be4a	            0x7f64	                            jg 0x400beb0	      7511	decNumber.c	FUNCTION_19	IF_1
0x400be4c	    0x817a043f420f	           cmp dword [rdx + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x400be53	            0x7f5b	                            jg 0x400beb0	      7512	decNumber.c	FUNCTION_19	IF_1
0x400be55	          0x8b4208	                mov eax, dword [rdx + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x400be58	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x400be5a	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x400be5f	            0x7f4f	                            jg 0x400beb0	      7513	decNumber.c	FUNCTION_19	IF_1
0x400be61	            0x8b06	                    mov eax, dword [rsi]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be63	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be68	            0x7e7e	                           jle 0x400bee8	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be6a	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be6f	            0x7509	                           jne 0x400be7a	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be71	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be74	     0xf84be000000	                            je 0x400bf38	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be7a	      0xbe80000000	                           mov esi, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be7f	    0xc74424048000	               mov dword [rsp + 4], 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400be87	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400be8b	            0x7436	                            je 0x400bec3	      7736	decNumber.c	FUNCTION_24	IF_1
0x400be8d	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400be8f	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400be96	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400be9d	        0x6689450a	                mov word [rbp + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400bea1	        0xc6450820	                mov byte [rbp + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400bea5	            0xeb1c	                           jmp 0x400bec3	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400bea7	    0x660f1f840000	                    nop word [rax + rax]	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400beb0	      0xbe40000000	                           mov esi, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x400beb5	    0xc74424044000	               mov dword [rsp + 4], 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x400bebd	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400bec1	            0x75ca	                           jne 0x400be8d	      7736	decNumber.c	FUNCTION_24	IF_1
0x400bec3	          0x4889df	                            mov rdi, rbx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400bec6	      0xe800000000	                          call 0x400becb	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400becb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bed0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bed9	          0x4889e8	                            mov rax, rbp	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bedc	            0x7566	                           jne 0x400bf44	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bede	        0x4883c418	                           add rsp, 0x18	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bee2	              0x5b	                                 pop rbx	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bee3	              0x5d	                                 pop rbp	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bee4	              0xc3	                                     ret	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bee5	           0xf1f00	                         nop dword [rax]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x400bee8	          0x8b5604	                mov edx, dword [rsi + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400beeb	             0x1c2	                            add edx, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400beed	    0x81c27c841e00	                       add edx, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400bef3	    0x81fabcc62d00	                       cmp edx, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400bef9	     0xf876bffffff	                            ja 0x400be6a	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400beff	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x400bf04	          0x4889da	                            mov rdx, rbx	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x400bf07	          0x4889ef	                            mov rdi, rbp	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x400bf0a	      0xe871f6ffff	                       call sym.decExpOp	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x400bf0f	        0x8b742404	                mov esi, dword [rsp + 4]	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x400bf13	            0x85f6	                           test esi, esi	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x400bf15	            0x74b4	                            je 0x400becb	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x400bf17	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400bf1b	            0x74a6	                            je 0x400bec3	      7736	decNumber.c	FUNCTION_24	IF_1
0x400bf1d	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400bf23	     0xf8464ffffff	                            je 0x400be8d	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400bf29	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400bf2f	            0xeb92	                           jmp 0x400bec3	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400bf31	     0xf1f80000000	                         nop dword [rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400bf38	        0xf6460870	               test byte [rsi + 8], 0x70	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400bf3c	     0xf8538ffffff	                           jne 0x400be7a	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400bf42	            0xebbb	                           jmp 0x400beff	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400bf44	      0xe800000000	                          call 0x400bf49	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
decNumberPower	SWITCH,0:functions,0:IF,53:WHILE,0:CALL,54:FOR,1:DO,1:ELSE,9	621
0x40110f0	            0x4157	                                push r15	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40110f2	            0x4156	                                push r14	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40110f4	          0x4989d1	                             mov r9, rdx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40110f7	            0x4155	                                push r13	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40110f9	            0x4154	                                push r12	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40110fb	          0x4989f5	                            mov r13, rsi	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40110fe	              0x55	                                push rbp	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40110ff	              0x53	                                push rbx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011100	          0x4989cc	                            mov r12, rcx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011103	          0x4889fb	                            mov rbx, rdi	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011106	    0x4881ece80000	                           sub rsp, 0xe8	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x401110d	      0x440fb67e08	              movzx r15d, byte [rsi + 8]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4011112	      0x440fb67208	              movzx r14d, byte [rdx + 8]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4011117	    0x64488b042528	                mov rax, qword fs:[0x28]	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011120	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011128	            0x31c0	                            xor eax, eax	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x401112a	            0x8b01	                    mov eax, dword [rcx]	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x401112c	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1961	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011134	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1962	decNumber.c	FUNCTION_68	FUNCTION_34
0x401113c	        0x89442408	                mov dword [rsp + 8], eax	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011140	          0x4489f8	                           mov eax, r15d	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4011143	          0x4409f0	                            or eax, r14d	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4011146	            0xa870	                           test al, 0x70	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x4011148	            0x7466	                            je 0x40111b0	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x401114a	            0xa830	                           test al, 0x30	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x401114c	     0xf841e010000	                            je 0x4011270	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4011152	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x4011157	      0xe8e414ffff	                 call sym.decNaNs.isra.6	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x401115c	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x4011160	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011168	          0x4531db	                          xor r11d, r11d	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x401116b	          0x4c89df	                            mov rdi, r11	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x401116e	      0xe800000000	                          call 0x4011173	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011173	        0x488b3c24	                    mov rdi, qword [rsp]	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011177	      0xe800000000	                          call 0x401117c	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x401117c	            0x85ed	                           test ebp, ebp	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x401117e	     0xf85fc020000	                           jne 0x4011480	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4011184	    0x488bbc24d800	            mov rdi, qword [rsp + 0xd8] 	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x401118c	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011195	          0x4889d8	                            mov rax, rbx	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011198	     0xf85a1090000	                           jne 0x4011b3f	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x401119e	    0x4881c4e80000	                           add rsp, 0xe8	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x40111a5	              0x5b	                                 pop rbx	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x40111a6	              0x5d	                                 pop rbp	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x40111a7	            0x415c	                                 pop r12	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x40111a9	            0x415d	                                 pop r13	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x40111ab	            0x415e	                                 pop r14	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x40111ad	            0x415f	                                 pop r15	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x40111af	              0xc3	                                     ret	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x40111b0	          0x4c89cf	                             mov rdi, r9	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x40111b3	        0x4c890c24	                     mov qword [rsp], r9	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x40111b7	      0xe8d4f2feff	                      call sym.decGetInt	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x40111bc	      0x3d00000080	                     cmp eax, 0x80000000	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x40111c1	            0x89c5	                            mov ebp, eax	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x40111c3	        0x4c8b0c24	                     mov r9, qword [rsp]	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x40111c7	     0xf848b010000	                            je 0x4011358	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x40111cd	          0x4584ff	                         test r15b, r15b	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40111d0	     0xf899a020000	                           jns 0x4011470	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40111d6	    0x41ba80ffffff	                    mov r10d, 0xffffff80	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40111dc	        0x40f6c501	                             test bpl, 1	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40111e0	      0xb8c0ffffff	                     mov eax, 0xffffffc0	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40111e5	          0x4489d2	                           mov edx, r10d	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40111e8	     0xf8482020000	                            je 0x4011470	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x40111ee	        0x41f6c740	                         test r15b, 0x40	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40111f2	            0x742c	                            je 0x4011220	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40111f4	            0x85ed	                           test ebp, ebp	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x40111f6	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40111fa	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011201	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011207	     0xf85d3010000	                           jne 0x40113e0	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x401120d	      0xbf01000000	                              mov edi, 1	      2115	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4011212	        0x66897b0a	                mov word [rbx + 0xa], di	      2115	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4011216	      0xe969ffffff	                           jmp 0x4011184	      2116	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x401121b	       0xf1f440000	                   nop dword [rax + rax]	      2116	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4011220	    0x8d8dfeffff7f	             lea ecx, [rbp + 0x7ffffffe]	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x4011226	    0x41b801000000	                              mov r8d, 1	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x401122c	          0x83f901	                              cmp ecx, 1	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x401122f	      0x410fb74d0a	            movzx ecx, word [r13 + 0xa] 	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4011234	        0x400f97c6	                                seta sil	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x4011238	          0x6685c9	                             test cx, cx	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x401123b	            0x750d	                           jne 0x401124a	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x401123d	            0x31c9	                            xor ecx, ecx	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x401123f	      0x41837d0001	                      cmp dword [r13], 1	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4011244	     0xf84e6030000	                            je 0x4011630	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x401124a	          0x4084f6	                           test sil, sil	      2084	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x401124d	     0xf8433010000	                            je 0x4011386	      2084	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4011253	            0x85ed	                           test ebp, ebp	      2112	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4011255	     0xf8575020000	                           jne 0x40114d0	      2112	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x401125b	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x401125f	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011266	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x401126c	            0xeb9f	                           jmp 0x401120d	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x401126e	            0x6690	                                     nop	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011270	        0x41f6c640	                         test r14b, 0x40	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x4011274	     0xf8436ffffff	                            je 0x40111b0	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x401127a	          0x4584ff	                         test r15b, r15b	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x401127d	     0xf88a5010000	                            js 0x4011428	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x4011283	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4011288	      0x488d542460	                   lea rdx, [rsp + 0x60]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x401128d	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4011292	          0x4c89ee	                            mov rsi, r13	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4011295	    0x41bf01000000	                             mov r15d, 1	      2005	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1
0x401129b	    0x41b801000000	                              mov r8d, 1	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x40112a1	          0x4c89e1	                            mov rcx, r12	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x40112a4	      0xc644246800	                mov byte [rsp + 0x68], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40112a9	    0xc74424640000	               mov dword [rsp + 0x64], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40112b1	    0xc74424600100	               mov dword [rsp + 0x60], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40112b9	    0x6644897c246a	             mov word [rsp + 0x6a], r15w	      2005	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1
0x40112bf	    0xc74424400000	               mov dword [rsp + 0x40], 0	       866	decNumber.c	FUNCTION_68	FUNCTION_11
0x40112c7	      0xe8141effff	                   call sym.decCompareOp	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x40112cc	        0x8b742440	            mov esi, dword [rsp + 0x40] 	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40112d0	            0x85f6	                           test esi, esi	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40112d2	     0xf85c0040000	                           jne 0x4011798	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40112d8	          0x4531db	                          xor r11d, r11d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40112db	        0x4183e680	                    and r14d, 0xffffff80	      1999	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x40112df	      0x807c247800	                cmp byte [rsp + 0x78], 0	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x40112e4	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40112e8	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40112ef	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40112f5	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40112fa	     0xf8818050000	                            js 0x4011818	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x4011300	    0x66837c247a00	                cmp word [rsp + 0x7a], 0	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4011306	     0xf85cc040000	                           jne 0x40117d8	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x401130c	        0x418b1424	                    mov edx, dword [r12]	      2013	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4011310	    0x41ba01000000	                             mov r10d, 1	      2014	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4011316	      0xb801000000	                              mov eax, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x401131b	      0x664489530a	              mov word [rbx + 0xa], r10w	      2014	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4011320	          0x83ea01	                              sub edx, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011323	            0x89d5	                            mov ebp, edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011325	     0xf85bb060000	                           jne 0x40119e6	      6684	decNumber.c	FUNCTION_8	IF_1
0x401132b	            0x89ea	                            mov edx, ebp	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x401132d	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4011331	            0x8903	                    mov dword [rbx], eax	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4011333	            0xf7da	                                 neg edx	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4011335	          0x4531db	                          xor r11d, r11d	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011338	          0x895304	                mov dword [rbx + 4], edx	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x401133b	    0x81cd20080000	                           or ebp, 0x820	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4011341	        0x896c243c	             mov dword [rsp + 0x3c], ebp	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4011345	          0x4c89df	                            mov rdi, r11	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011348	      0xe800000000	                          call 0x401134d	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x401134d	            0x89ee	                            mov esi, ebp	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x401134f	      0xe92e010000	                           jmp 0x4011482	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011354	         0xf1f4000	                         nop dword [rax]	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011358	        0x41f6c740	                         test r15b, 0x40	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x401135c	     0xf853e010000	                           jne 0x40114a0	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x4011362	      0x410fb74d0a	            movzx ecx, word [r13 + 0xa] 	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4011367	          0x6685c9	                             test cx, cx	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x401136a	            0x7514	                           jne 0x4011380	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x401136c	            0x31d2	                            xor edx, edx	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x401136e	          0x4531c0	                            xor r8d, r8d	      1952	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011371	      0xb840000000	                           mov eax, 0x40	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4011376	          0x4531d2	                          xor r10d, r10d	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4011379	            0x31f6	                            xor esi, esi	      1953	decNumber.c	FUNCTION_68	FUNCTION_34
0x401137b	      0xe9bdfeffff	                           jmp 0x401123d	      1953	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011380	          0x4531c0	                            xor r8d, r8d	      1952	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011383	          0x4531d2	                          xor r10d, r10d	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4011386	          0x4584ff	                         test r15b, r15b	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4011389	     0xf88b1000000	                            js 0x4011440	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x401138f	    0x817c24083f42	           cmp dword [rsp + 8], 0xf423f 	      7511	decNumber.c	FUNCTION_19	IF_1
0x4011397	            0x7f67	                            jg 0x4011400	      7511	decNumber.c	FUNCTION_19	IF_1
0x4011399	    0x41817c24043f	           cmp dword [r12 + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x40113a2	            0x7f5c	                            jg 0x4011400	      7512	decNumber.c	FUNCTION_19	IF_1
0x40113a4	      0x418b442408	                mov eax, dword [r12 + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x40113a9	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x40113ab	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x40113b0	            0x7f4e	                            jg 0x4011400	      7513	decNumber.c	FUNCTION_19	IF_1
0x40113b2	        0x418b4500	                    mov eax, dword [r13]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113b6	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113bb	     0xf8e70050000	                           jle 0x4011931	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113c1	          0x6685c9	                             test cx, cx	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113c4	            0x7509	                           jne 0x40113cf	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113c6	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113c9	     0xf843f070000	                            je 0x4011b0e	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113cf	    0xc744243c8000	           mov dword [rsp + 0x3c], 0x80 	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113d7	      0xbe80000000	                           mov esi, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113dc	            0xeb2f	                           jmp 0x401140d	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113de	            0x6690	                                     nop	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40113e0	          0x4531c9	                            xor r9d, r9d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40113e3	      0x6644894b0a	               mov word [rbx + 0xa], r9w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40113e8	          0x4584f6	                         test r14b, r14b	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x40113eb	           0xf48c2	                          cmovs eax, edx	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x40113ee	          0x884308	                  mov byte [rbx + 8], al	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x40113f1	      0xe98efdffff	                           jmp 0x4011184	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x40113f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x4011400	    0xc744243c4000	           mov dword [rsp + 0x3c], 0x40 	      7513	decNumber.c	FUNCTION_19	IF_1
0x4011408	      0xbe40000000	                           mov esi, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x401140d	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4011411	            0x7543	                           jne 0x4011456	      7736	decNumber.c	FUNCTION_24	IF_1
0x4011413	       0xf1f440000	                   nop dword [rax + rax]	      7736	decNumber.c	FUNCTION_24	IF_1
0x4011418	          0x4c89e7	                            mov rdi, r12	      7744	decNumber.c	FUNCTION_24	CALL_2
0x401141b	      0xe800000000	                          call 0x4011420	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4011420	      0xe95ffdffff	                           jmp 0x4011184	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4011425	           0xf1f00	                         nop dword [rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4011428	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x401142d	            0x7511	                           jne 0x4011440	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x401142f	          0x833e01	                      cmp dword [rsi], 1	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4011432	            0x750c	                           jne 0x4011440	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4011434	        0x4183e770	                          and r15d, 0x70	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4011438	     0xf8445feffff	                            je 0x4011283	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x401143e	            0x6690	                                     nop	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x4011440	    0xc744243c8000	           mov dword [rsp + 0x3c], 0x80 	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011448	      0xb880000000	                           mov eax, 0x80	      7736	decNumber.c	FUNCTION_24	IF_1
0x401144d	      0xa900000040	                    test eax, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4011452	            0x89c6	                            mov esi, eax	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4011454	            0x753a	                           jne 0x4011490	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4011456	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011458	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x401145f	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011465	        0x6689530a	                mov word [rbx + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011469	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x401146d	            0xeba9	                           jmp 0x4011418	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x401146f	              0x90	                                     nop	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4011470	          0x4531d2	                          xor r10d, r10d	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4011473	      0xb840000000	                           mov eax, 0x40	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4011478	            0x31d2	                            xor edx, edx	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x401147a	      0xe96ffdffff	                           jmp 0x40111ee	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x401147f	              0x90	                                     nop	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011480	            0x89ee	                            mov esi, ebp	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011482	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4011486	            0x7490	                            je 0x4011418	      7736	decNumber.c	FUNCTION_24	IF_1
0x4011488	            0x89f0	                            mov eax, esi	      7736	decNumber.c	FUNCTION_24	IF_1
0x401148a	            0xebc1	                           jmp 0x401144d	      7736	decNumber.c	FUNCTION_24	IF_1
0x401148c	         0xf1f4000	                         nop dword [rax]	      7736	decNumber.c	FUNCTION_24	IF_1
0x4011490	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4011496	            0xeb80	                           jmp 0x4011418	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4011498	     0xf1f84000000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40114a0	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40114a2	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40114a6	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40114ad	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40114b3	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40114b7	      0x41807d0800	                   cmp byte [r13 + 8], 0	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x40114bc	            0x7882	                            js 0x4011440	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x40114be	      0xb840000000	                           mov eax, 0x40	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x40114c3	            0x31d2	                            xor edx, edx	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x40114c5	      0xe91effffff	                           jmp 0x40113e8	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x40114ca	    0x660f1f440000	                    nop word [rax + rax]	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x40114d0	        0x498b0424	                    mov rax, qword [r12]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114d4	        0x8b542408	                mov edx, dword [rsp + 8]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114d8	      0x4889442440	             mov qword [rsp + 0x40], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114dd	      0x498b442408	                mov rax, qword [r12 + 8]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114e2	      0x4889442448	             mov qword [rsp + 0x48], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114e7	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114ec	    0xc744244c0300	               mov dword [rsp + 0x4c], 3	      2121	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114f4	      0x4889442450	             mov qword [rsp + 0x50], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114f9	      0x418b442418	            mov eax, dword [r12 + 0x18] 	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x40114fe	        0x89442458	             mov dword [rsp + 0x58], eax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4011502	        0x418b4104	                 mov eax, dword [r9 + 4]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4011506	          0x410301	                     add eax, dword [r9]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4011509	        0x8d440202	                lea eax, [rdx + rax + 2]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x401150d	      0x3dffc99a3b	                     cmp eax, 0x3b9ac9ff	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4011512	        0x89442440	             mov dword [rsp + 0x40], eax	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4011516	     0xf8f24ffffff	                            jg 0x4011440	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x401151c	            0x89ea	                            mov edx, ebp	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x401151e	      0xb901000000	                              mov ecx, 1	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4011523	          0xc1fa1f	                           sar edx, 0x1f	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4011526	            0x31d5	                            xor ebp, edx	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4011528	            0x29d5	                            sub ebp, edx	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x401152a	          0x83f831	                           cmp eax, 0x31	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x401152d	     0xf8f45020000	                            jg 0x4011778	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011533	            0x4898	                                    cdqe	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011535	     0xfb680000000	                   movzx eax, byte [rax]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x401153c	      0x448d74000a	            lea r14d, [rax + rax + 0xa] 	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011541	          0x4531db	                          xor r11d, r11d	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011544	        0x4183fe30	                          cmp r14d, 0x30	      2135	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4011548	      0x4c8d7c2470	                   lea r15, [rsp + 0x70]	      1968	decNumber.c	FUNCTION_68	FUNCTION_34
0x401154d	     0xf87cd020000	                            ja 0x4011820	      2135	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4011553	            0x84c9	                             test cl, cl	      2144	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36
0x4011555	     0xf8415030000	                            je 0x4011870	      2144	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36
0x401155b	      0x4180790800	                    cmp byte [r9 + 8], 0	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x4011560	      0x488d44243c	                   lea rax, [rsp + 0x3c]	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x4011565	      0xb901000000	                              mov ecx, 1	      2169	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x401156a	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x401156f	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011577	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x401157e	      0x6641894f0a	                mov word [r15 + 0xa], cx	      2169	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x4011583	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x401158b	      0x4889442408	                mov qword [rsp + 8], rax	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011590	     0xf886e040000	                            js 0x4011a04	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x4011596	    0x41be01000000	                             mov r14d, 1	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x401159c	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115a1	      0x4c89642428	             mov qword [rsp + 0x28], r12	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115a6	          0x4489f3	                           mov ebx, r14d	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115a9	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115ad	            0x31d2	                            xor edx, edx	      2199	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x40115af	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115b4	      0x4488542418	             mov byte [rsp + 0x18], r10b	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115b9	          0x4d89fc	                            mov r12, r15	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115bc	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115c1	            0xeb08	                           jmp 0x40115cb	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115c3	       0xf1f440000	                   nop dword [rax + rax]	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115c8	          0x83c301	                              add ebx, 1	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x40115cb	            0x89c1	                            mov ecx, eax	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x40115cd	    0x81e100220000	                         and ecx, 0x2200	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x40115d3	            0x7423	                            je 0x40115f8	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x40115d5	          0xf6c402	                              test ah, 2	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40115d8	     0xf8531030000	                           jne 0x401190f	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40115de	    0x6641837c240a	                 cmp word [r12 + 0xa], 0	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40115e5	            0x7511	                           jne 0x40115f8	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40115e7	      0x41833c2401	                      cmp dword [r12], 1	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40115ec	     0xf841e010000	                            je 0x4011710	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40115f2	    0x660f1f440000	                    nop word [rax + rax]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x40115f8	             0x1ed	                            add ebp, ebp	      2208	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x40115fa	            0x786c	                            js 0x4011668	      2208	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x40115fc	          0x83fb1f	                           cmp ebx, 0x1f	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40115ff	     0xf84f3010000	                            je 0x40117f8	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4011605	            0x84d2	                             test dl, dl	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4011607	            0x74bf	                            je 0x40115c8	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4011609	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x401160e	          0x4c89e2	                            mov rdx, r12	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4011611	          0x4d89f0	                             mov r8, r14	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4011614	          0x4c89f9	                            mov rcx, r15	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4011617	          0x4c89e6	                            mov rsi, r12	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x401161a	          0x4c89e7	                            mov rdi, r12	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x401161d	      0xe8be1fffff	                  call sym.decMultiplyOp	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4011622	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4011626	      0xba01000000	                              mov edx, 1	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x401162b	            0xeb9b	                           jmp 0x40115c8	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x401162d	           0xf1f00	                         nop dword [rax]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4011630	        0x41f6c770	                         test r15b, 0x70	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4011634	     0xf8510fcffff	                           jne 0x401124a	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x401163a	            0x85ed	                           test ebp, ebp	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x401163c	     0xf84fefdffff	                            je 0x4011440	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x4011642	          0x4584f6	                         test r14b, r14b	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x4011645	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x401164c	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011652	           0xf48d0	                          cmovs edx, eax	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011655	          0x4531c0	                            xor r8d, r8d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4011658	      0x664489430a	               mov word [rbx + 0xa], r8w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x401165d	          0x885308	                  mov byte [rbx + 8], dl	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x4011660	      0xe91ffbffff	                           jmp 0x4011184	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x4011665	           0xf1f00	                         nop dword [rax]	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x4011668	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x401166d	          0x4d89f0	                             mov r8, r14	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4011670	          0x4c89ea	                            mov rdx, r13	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4011673	          0x4c89e6	                            mov rsi, r12	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4011676	          0x4c89e7	                            mov rdi, r12	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4011679	          0x4c89f9	                            mov rcx, r15	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x401167c	      0xe85f1fffff	                  call sym.decMultiplyOp	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4011681	          0x83fb1f	                           cmp ebx, 0x1f	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4011684	            0x7588	                           jne 0x401160e	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4011686	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x401168a	    0x440fb6542418	          movzx r10d, byte [rsp + 0x18] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4011690	          0x4d89e7	                            mov r15, r12	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4011693	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4011698	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x401169d	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40116a2	    0x81e100220000	                         and ecx, 0x2200	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40116a8	     0xf1f84000000	                   nop dword [rax + rax]	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40116b0	            0x85c9	                           test ecx, ecx	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40116b2	     0xf858c040000	                           jne 0x4011b44	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40116b8	      0x410fb65708	               movzx edx, byte [r15 + 8]	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40116bd	        0x418b4704	                mov eax, dword [r15 + 4]	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40116c1	        0x498d6f0a	                    lea rbp, [r15 + 0xa]	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40116c5	      0x4c8b742408	                mov r14, qword [rsp + 8]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116ca	          0x418b0f	                    mov ecx, dword [r15]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116cd	      0x4c8d442438	                    lea r8, [rsp + 0x38]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116d2	          0x885308	                  mov byte [rbx + 8], dl	      6839	decNumber.c	FUNCTION_11
0x40116d5	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x40116d8	          0x4889ea	                            mov rdx, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116db	          0x4c89e6	                            mov rsi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116de	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116e1	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116e6	          0x4d89f1	                             mov r9, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116e9	      0xe8b2fcfeff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40116ee	      0x488d542438	                   lea rdx, [rsp + 0x38]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x40116f3	          0x4c89f1	                            mov rcx, r14	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x40116f6	          0x4c89e6	                            mov rsi, r12	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x40116f9	          0x4889df	                            mov rdi, rbx	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x40116fc	      0xe8ef15ffff	                    call sym.decFinalize	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4011701	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4011705	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x401170a	      0xe95cfaffff	                           jmp 0x401116b	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x401170f	              0x90	                                     nop	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4011710	    0x410fb6742408	               movzx esi, byte [r12 + 8]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4011716	        0x40f6c670	                          test sil, 0x70	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x401171a	     0xf85d8feffff	                           jne 0x40115f8	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4011720	    0x440fb6542418	          movzx r10d, byte [rsp + 0x18] 	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4011726	          0x4d89e7	                            mov r15, r12	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4011729	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x401172e	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4011733	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4011738	          0x83e67f	                           and esi, 0x7f	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x401173b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4011740	      0x488d542438	                   lea rdx, [rsp + 0x38]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4011745	          0x4109f2	                            or r10d, esi	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4011748	          0x4c89ff	                            mov rdi, r15	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x401174b	          0x4c89e6	                            mov rsi, r12	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x401174e	        0x45885708	                mov byte [r15 + 8], r10b	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4011752	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4011757	      0xe89415ffff	                    call sym.decFinalize	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x401175c	          0x4c89fe	                            mov rsi, r15	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x401175f	          0x4889df	                            mov rdi, rbx	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4011762	      0xe800000000	                          call 0x4011767	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4011767	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x401176b	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2236	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4011770	      0xe9f6f9ffff	                           jmp 0x401116b	      2236	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4011775	           0xf1f00	                         nop dword [rax]	      2236	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4011778	          0x8d7002	                      lea esi, [rax + 2]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x401177b	      0xba56555555	                     mov edx, 0x55555556	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011780	            0x89f0	                            mov eax, esi	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011782	            0xf7ea	                                imul edx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011784	            0x89f0	                            mov eax, esi	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011786	          0xc1f81f	                           sar eax, 0x1f	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011789	            0x29c2	                            sub edx, eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x401178b	      0x448d74120a	            lea r14d, [rdx + rdx + 0xa] 	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011790	      0xe9acfdffff	                           jmp 0x4011541	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011795	           0xf1f00	                         nop dword [rax]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4011798	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x401179c	            0x7428	                            je 0x40117c6	      7736	decNumber.c	FUNCTION_24	IF_1
0x401179e	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40117a4	     0xf854f020000	                           jne 0x40119f9	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40117aa	            0x31ed	                            xor ebp, ebp	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40117ac	    0xc74424740000	               mov dword [rsp + 0x74], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40117b4	    0xc74424700100	               mov dword [rsp + 0x70], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40117bc	      0x66896c247a	               mov word [rsp + 0x7a], bp	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40117c1	      0xc644247820	            mov byte [rsp + 0x78], 0x20 	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40117c6	          0x4c89e7	                            mov rdi, r12	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40117c9	      0xe800000000	                          call 0x40117ce	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40117ce	      0xe905fbffff	                           jmp 0x40112d8	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40117d3	       0xf1f440000	                   nop dword [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40117d8	          0x4584f6	                         test r14b, r14b	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x40117db	            0x7504	                           jne 0x40117e1	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x40117dd	        0xc6430840	                mov byte [rbx + 8], 0x40	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40117e1	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x40117e5	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x40117ed	          0x4531db	                          xor r11d, r11d	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40117f0	      0xe976f9ffff	                           jmp 0x401116b	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40117f5	           0xf1f00	                         nop dword [rax]	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40117f8	          0x4d89e7	                            mov r15, r12	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40117fb	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011800	    0x440fb6542418	          movzx r10d, byte [rsp + 0x18] 	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011806	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x401180b	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011810	      0xe99bfeffff	                           jmp 0x40116b0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011815	           0xf1f00	                         nop dword [rax]	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011818	          0x4584f6	                         test r14b, r14b	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x401181b	            0x74c4	                            je 0x40117e1	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x401181d	            0xebbe	                           jmp 0x40117dd	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x401181f	              0x90	                                     nop	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4011820	          0x4489f7	                           mov edi, r14d	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4011823	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4011828	      0x4488442410	              mov byte [rsp + 0x10], r8b	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x401182d	        0x884c2408	                  mov byte [rsp + 8], cl	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4011831	        0x44881424	                    mov byte [rsp], r10b	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4011835	      0xe800000000	                          call 0x401183a	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x401183a	          0x4885c0	                           test rax, rax	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x401183d	          0x4989c3	                            mov r11, rax	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4011840	          0x4989c7	                            mov r15, rax	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4011843	      0x440fb61424	                  movzx r10d, byte [rsp]	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4011848	       0xfb64c2408	               movzx ecx, byte [rsp + 8]	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x401184d	    0x440fb6442410	           movzx r8d, byte [rsp + 0x10] 	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4011853	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4011858	     0xf85f5fcffff	                           jne 0x4011553	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x401185e	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4011862	          0x83cd10	                            or ebp, 0x10	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4011865	        0x896c243c	             mov dword [rsp + 0x3c], ebp	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4011869	      0xe9d7faffff	                           jmp 0x4011345	      2186	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x401186e	            0x6690	                                     nop	      2186	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4011870	      0x488d44243c	                   lea rax, [rsp + 0x3c]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4011875	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x401187a	          0x4c89ee	                            mov rsi, r13	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x401187d	          0x4c89ff	                            mov rdi, r15	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4011880	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4011885	        0x4c891c24	                    mov qword [rsp], r11	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4011889	          0x4889c1	                            mov rcx, rax	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x401188c	      0x4488442418	              mov byte [rsp + 0x18], r8b	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4011891	      0x4889442408	                mov qword [rsp + 8], rax	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4011896	          0x4989d6	                            mov r14, rdx	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4011899	      0xe892d5ffff	                        call sym.decLnOp	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x401189e	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40118a4	        0x4c8b1c24	                    mov r11, qword [rsp]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40118a8	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40118ad	            0x7512	                           jne 0x40118c1	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40118af	          0x418b07	                    mov eax, dword [r15]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40118b2	    0x440fb6442418	           movzx r8d, byte [rsp + 0x18] 	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40118b8	          0x83f801	                              cmp eax, 1	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40118bb	     0xf84e7010000	                            je 0x4011aa8	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x40118c1	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x40118c6	          0x4c89ca	                             mov rdx, r9	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x40118c9	          0x4c89f1	                            mov rcx, r14	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x40118cc	          0x4c89fe	                            mov rsi, r15	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x40118cf	          0x4c89ff	                            mov rdi, r15	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x40118d2	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x40118d7	          0x4989e8	                             mov r8, rbp	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x40118da	      0xe8011dffff	                  call sym.decMultiplyOp	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x40118df	          0x4889e9	                            mov rcx, rbp	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x40118e2	          0x4c89f2	                            mov rdx, r14	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x40118e5	          0x4c89fe	                            mov rsi, r15	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x40118e8	          0x4c89ff	                            mov rdi, r15	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x40118eb	        0x498d6f0a	                    lea rbp, [r15 + 0xa]	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x40118ef	      0xe88c9cffff	                       call sym.decExpOp	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x40118f4	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x40118fc	      0x410fb65708	               movzx edx, byte [r15 + 8]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011901	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011906	        0x418b4704	                mov eax, dword [r15 + 4]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x401190a	      0xe9b6fdffff	                           jmp 0x40116c5	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x401190f	          0x4d89e7	                            mov r15, r12	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011912	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011917	    0x440fb6542418	          movzx r10d, byte [rsp + 0x18] 	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x401191d	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011922	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011927	      0x410fb67708	               movzx esi, byte [r15 + 8]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x401192c	      0xe907feffff	                           jmp 0x4011738	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011931	        0x418b5504	                mov edx, dword [r13 + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011935	             0x1c2	                            add edx, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011937	    0x81c27c841e00	                       add edx, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x401193d	    0x81fabcc62d00	                       cmp edx, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011943	     0xf8778faffff	                            ja 0x40113c1	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011949	          0x418b01	                     mov eax, dword [r9]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x401194c	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011951	            0x7f14	                            jg 0x4011967	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011953	        0x418b5104	                 mov edx, dword [r9 + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011957	             0x1c2	                            add edx, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011959	    0x81c27c841e00	                       add edx, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x401195f	    0x81fabcc62d00	                       cmp edx, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011965	            0x761f	                           jbe 0x4011986	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011967	    0x664183790a00	                  cmp word [r9 + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x401196d	     0xf85cdfaffff	                           jne 0x4011440	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011973	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011976	     0xf85c4faffff	                           jne 0x4011440	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x401197c	        0x4180e670	                          and r14b, 0x70	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011980	     0xf85bafaffff	                           jne 0x4011440	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011986	      0x488d442440	                   lea rax, [rsp + 0x40]	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x401198b	      0xbe40000000	                           mov esi, 0x40	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4011990	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4011995	      0x4488442408	                 mov byte [rsp + 8], r8b	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x401199a	        0x44881424	                    mov byte [rsp], r10b	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x401199e	          0x4889c7	                            mov rdi, rax	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x40119a1	      0xe800000000	                          call 0x40119a6	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x40119a6	        0x418b0424	                    mov eax, dword [r12]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40119aa	        0x41394500	                    cmp dword [r13], eax	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40119ae	      0x410f4d4500	                 cmovge eax, dword [r13]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40119b3	    0xc74424443f42	        mov dword [rsp + 0x44], 0xf423f 	      2094	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40119bb	            0x31c9	                            xor ecx, ecx	      2094	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40119bd	    0xc7442448c1bd	     mov dword [rsp + 0x48], 0xfff0bdc1 	      2095	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40119c5	      0xc644245800	                mov byte [rsp + 0x58], 0	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40119ca	      0x440fb61424	                  movzx r10d, byte [rsp]	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40119cf	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40119d5	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40119da	          0x83c00a	                            add eax, 0xa	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40119dd	        0x89442440	             mov dword [rsp + 0x40], eax	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40119e1	      0xe944fbffff	                           jmp 0x401152a	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x40119e6	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40119ea	      0xbe01000000	                              mov esi, 1	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40119ef	      0xe8acf2feff	          call sym.decShiftToMost.part.0	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40119f4	      0xe932f9ffff	                           jmp 0x401132b	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40119f9	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40119ff	      0xe9c2fdffff	                           jmp 0x40117c6	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4011a04	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4011a09	          0x4c89fe	                            mov rsi, r15	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4011a0c	      0x4488542418	             mov byte [rsp + 0x18], r10b	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4011a11	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4011a16	      0xe800000000	                          call 0x4011a1b	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4011a1b	      0x488d442440	                   lea rax, [rsp + 0x40]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4011a20	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4011a25	      0x488d742460	                   lea rsi, [rsp + 0x60]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4011a2a	    0x41b880000000	                           mov r8d, 0x80	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4011a30	          0x4c89ea	                            mov rdx, r13	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4011a33	          0x4c89ff	                            mov rdi, r15	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4011a36	          0x4889c1	                            mov rcx, rax	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4011a39	      0xe87288ffff	                    call sym.decDivideOp	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4011a3e	        0x4183fe30	                          cmp r14d, 0x30	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4011a42	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4011a47	    0x440fb6542418	          movzx r10d, byte [rsp + 0x18] 	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4011a4d	     0xf86ca000000	                           jbe 0x4011b1d	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4011a53	          0x4489f7	                           mov edi, r14d	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4011a56	      0xe800000000	                          call 0x4011a5b	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4011a5b	          0x4885c0	                           test rax, rax	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4011a5e	          0x4989c5	                            mov r13, rax	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4011a61	        0x48890424	                    mov qword [rsp], rax	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4011a65	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4011a6a	    0x440fb6542418	          movzx r10d, byte [rsp + 0x18] 	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4011a70	     0xf84e8fdffff	                            je 0x401185e	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4011a76	          0x4c89fe	                            mov rsi, r15	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4011a79	          0x4c89ef	                            mov rdi, r13	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4011a7c	      0x4488542418	             mov byte [rsp + 0x18], r10b	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4011a81	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4011a86	      0xe800000000	                          call 0x4011a8b	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4011a8b	      0x488d742460	                   lea rsi, [rsp + 0x60]	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4011a90	          0x4c89ff	                            mov rdi, r15	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4011a93	      0xe800000000	                          call 0x4011a98	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4011a98	    0x440fb6542418	          movzx r10d, byte [rsp + 0x18] 	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4011a9e	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4011aa3	      0xe9eefaffff	                           jmp 0x4011596	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4011aa8	      0x410fb65708	               movzx edx, byte [r15 + 8]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4011aad	          0xf6c270	                           test dl, 0x70	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4011ab0	     0xf850bfeffff	                           jne 0x40118c1	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4011ab6	      0xbe01000000	                              mov esi, 1	      2152	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37
0x4011abb	          0x4584c0	                           test r8b, r8b	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4011abe	      0x664189770a	                mov word [r15 + 0xa], si	      2152	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37
0x4011ac3	            0x7565	                           jne 0x4011b2a	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4011ac5	        0x458b2c24	                   mov r13d, dword [r12]	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011ac9	        0x498d6f0a	                    lea rbp, [r15 + 0xa]	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011acd	        0x4183ed01	                             sub r13d, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011ad1	            0x7419	                            je 0x4011aec	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011ad3	          0x4489ea	                           mov edx, r13d	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011ad6	      0xbe01000000	                              mov esi, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011adb	          0x4889ef	                            mov rdi, rbp	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011ade	      0xe8bdf1feff	          call sym.decShiftToMost.part.0	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011ae3	      0x410fb65708	               movzx edx, byte [r15 + 8]	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011ae8	        0x4c8b1c24	                    mov r11, qword [rsp]	      6684	decNumber.c	FUNCTION_8	IF_1
0x4011aec	          0x41f7dd	                                neg r13d	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4011aef	          0x418907	                    mov dword [r15], eax	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4011af2	    0x814c243c2008	            or dword [rsp + 0x3c], 0x820	      2157	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4011afa	        0x45896f04	               mov dword [r15 + 4], r13d	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4011afe	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b06	          0x4489e8	                           mov eax, r13d	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b09	      0xe9b7fbffff	                           jmp 0x40116c5	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b0e	        0x4183e770	                          and r15d, 0x70	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011b12	     0xf85b7f8ffff	                           jne 0x40113cf	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011b18	      0xe92cfeffff	                           jmp 0x4011949	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4011b1d	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      2174	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39
0x4011b25	      0xe94cffffff	                           jmp 0x4011a76	      2174	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39
0x4011b2a	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b32	        0x498d6f0a	                    lea rbp, [r15 + 0xa]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b36	        0x418b4704	                mov eax, dword [r15 + 4]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b3a	      0xe986fbffff	                           jmp 0x40116c5	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b3f	      0xe800000000	                          call 0x4011b44	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b44	      0x410fb67708	               movzx esi, byte [r15 + 8]	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4011b49	      0xe9eafbffff	                           jmp 0x4011738	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
decNumberSetBCD	SWITCH,0:functions,0:IF,0:WHILE,0:CALL,3:FOR,3:DO,0:ELSE,0	64
0x4012370	          0x486307	                 movsxd rax, dword [rdi]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012373	              0x53	                                push rbx	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x4012374	        0x4c8d5f0a	                    lea r11, [rdi + 0xa]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012378	            0x89d3	                            mov ebx, edx	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x401237a	          0x83f831	                           cmp eax, 0x31	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x401237d	     0xf8f99000000	                            jg 0x401241c	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012383	     0xfb680000000	                   movzx eax, byte [rax]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x401238a	      0x4c8d4400fe	                 lea r8, [rax + rax - 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x401238f	          0x4d01d8	                             add r8, r11	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012392	          0x83fb31	                           cmp ebx, 0x31	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4012395	            0x7773	                            ja 0x401240a	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4012397	            0x89d8	                            mov eax, ebx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4012399	     0xfb680000000	                   movzx eax, byte [rax]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x40123a0	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x40123a4	            0x89da	                            mov edx, ebx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x40123a6	            0x29c2	                            sub edx, eax	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x40123a8	          0x4d39c3	                             cmp r11, r8	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40123ab	            0x89d0	                            mov eax, edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x40123ad	            0x7754	                            ja 0x4012403	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40123af	              0x90	                                     nop	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40123b0	            0x31d2	                            xor edx, edx	      3495	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40123b2	            0x85c0	                           test eax, eax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123b4	        0x66418910	                       mov word [r8], dx	      3495	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40123b8	            0x7e3b	                           jle 0x40123f5	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123ba	          0x83e801	                              sub eax, 1	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123bd	          0x4889f2	                            mov rdx, rsi	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123c0	          0x4989c2	                            mov r10, rax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123c3	      0x4c8d4c0601	                 lea r9, [rsi + rax + 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123c8	            0x31c0	                            xor eax, eax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123ca	    0x660f1f440000	                    nop word [rax + rax]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123d0	    0x8d0cc5000000	                        lea ecx, [rax*8]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123d7	        0x4883c201	                              add rdx, 1	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123db	          0x8d0441	                  lea eax, [rcx + rax*2]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123de	         0xfb64aff	               movzx ecx, byte [rdx - 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123e2	             0x1c8	                            add eax, ecx	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123e4	          0x4939d1	                             cmp r9, rdx	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123e7	        0x66418900	                       mov word [r8], ax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123eb	            0x75e3	                           jne 0x40123d0	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123ed	          0x4963c2	                        movsxd rax, r10d	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123f0	      0x488d740601	                lea rsi, [rsi + rax + 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x40123f5	        0x4983e802	                               sub r8, 2	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40123f9	      0xb803000000	                              mov eax, 3	      3497	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x40123fe	          0x4d39c3	                             cmp r11, r8	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4012401	            0x76ad	                           jbe 0x40123b0	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4012403	            0x891f	                    mov dword [rdi], ebx	      3500	decNumber.c	FUNCTION_68	FUNCTION_57
0x4012405	          0x4889f8	                            mov rax, rdi	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x4012408	              0x5b	                                 pop rbx	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x4012409	              0xc3	                                     ret	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x401240a	          0x8d4302	                      lea eax, [rbx + 2]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x401240d	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4012412	            0xf7e2	                                 mul edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4012414	            0xd1ea	                              shr edx, 1	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4012416	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x401241a	            0xeb88	                           jmp 0x40123a4	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x401241c	          0x8d4802	                      lea ecx, [rax + 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x401241f	      0xba56555555	                     mov edx, 0x55555556	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012424	            0x89c8	                            mov eax, ecx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012426	            0xf7ea	                                imul edx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012428	            0x89c8	                            mov eax, ecx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x401242a	          0xc1f81f	                           sar eax, 0x1f	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x401242d	            0x29c2	                            sub edx, eax	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x401242f	          0x4863c2	                         movsxd rax, edx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012432	      0x4c8d4400fe	                 lea r8, [rax + rax - 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4012437	      0xe953ffffff	                           jmp 0x401238f	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
decSetOverflow	SWITCH,1:functions,0:IF,6:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,1	71
0x4000390	         0xfb64708	               movzx eax, byte [rdi + 8]	      7344	decNumber.c	FUNCTION_16
0x4000394	          0x4189c0	                            mov r8d, eax	      7344	decNumber.c	FUNCTION_16
0x4000397	        0x4183e080	                     and r8d, 0xffffff80	      7344	decNumber.c	FUNCTION_16
0x400039b	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x40003a0	            0x7509	                           jne 0x40003ab	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x40003a2	          0x833f01	                      cmp dword [rdi], 1	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x40003a5	     0xf84a5000000	                            je 0x4000450	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x40003ab	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003af	          0x8b460c	              mov eax, dword [rsi + 0xc]	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003b2	          0x4531d2	                          xor r10d, r10d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003b5	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003bc	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003c2	      0x664489570a	              mov word [rdi + 0xa], r10w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003c7	          0x83f805	                              cmp eax, 5	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003ca	            0x7410	                            je 0x40003dc	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003cc	            0x7662	                           jbe 0x4000430	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003ce	          0x83f806	                              cmp eax, 6	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003d1	     0xf84a9000000	                            je 0x4000480	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003d7	          0x83f807	                              cmp eax, 7	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003da	            0x755d	                           jne 0x4000439	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003dc	            0x8b06	                    mov eax, dword [rsi]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x40003de	        0x488d4f0a	                    lea rcx, [rdi + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x40003e2	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x40003e5	            0x8907	                    mov dword [rdi], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x40003e7	            0x7e1e	                           jle 0x4000407	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x40003e9	     0xf1f80000000	                         nop dword [rax]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x40003f0	    0x41b9e7030000	                          mov r9d, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x40003f6	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x40003f9	        0x4883c102	                              add rcx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x40003fd	      0x66448949fe	                 mov word [rcx - 2], r9w	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000402	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000405	            0x7fe9	                            jg 0x40003f0	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000407	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000409	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000410	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000413	          0x668901	                      mov word [rcx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000416	        0xc6470800	                   mov byte [rdi + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400041a	          0x8b4604	                mov eax, dword [rsi + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400041d	            0x2b06	                    sub eax, dword [rsi]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400041f	        0x44884708	                 mov byte [rdi + 8], r8b	      7374	decNumber.c	FUNCTION_16	IF_6
0x4000423	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4000426	          0x894704	                mov dword [rdi + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4000429	    0x810a200a0000	                   or dword [rdx], 0xa20	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400042f	              0xc3	                                     ret	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x4000430	            0x85c0	                           test eax, eax	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x4000432	            0x7505	                           jne 0x4000439	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x4000434	          0x4584c0	                           test r8b, r8b	      7365	decNumber.c	FUNCTION_16	SWITCH_1	IF_4
0x4000437	            0x75a3	                           jne 0x40003dc	      7365	decNumber.c	FUNCTION_16	SWITCH_1	IF_4
0x4000439	        0x4183c840	                            or r8d, 0x40	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x400043d	        0x44884708	                 mov byte [rdi + 8], r8b	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x4000441	    0x810a200a0000	                   or dword [rdx], 0xa20	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x4000447	              0xc3	                                     ret	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x4000448	     0xf1f84000000	                   nop dword [rax + rax]	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x4000450	            0xa870	                           test al, 0x70	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4000452	     0xf8553ffffff	                           jne 0x40003ab	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4000458	        0x807e1800	                cmp byte [rsi + 0x18], 0	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400045c	          0x8b4604	                mov eax, dword [rsi + 4]	      7347	decNumber.c	FUNCTION_16	IF_1
0x400045f	            0x7405	                            je 0x4000466	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4000461	            0x2b06	                    sub eax, dword [rsi]	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4000463	          0x83c001	                              add eax, 1	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4000466	          0x3b4704	                cmp eax, dword [rdi + 4]	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000469	            0x7d0d	                           jge 0x4000478	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400046b	          0x894704	                mov dword [rdi + 4], eax	      7350	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400046e	    0x810a00040000	                   or dword [rdx], 0x400	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000474	              0xc3	                                     ret	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000475	           0xf1f00	                         nop dword [rax]	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000478	            0xf3c3	                                     ret	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400047a	    0x660f1f440000	                    nop word [rax + rax]	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000480	          0x4584c0	                           test r8b, r8b	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
0x4000483	     0xf8453ffffff	                            je 0x40003dc	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
0x4000489	            0xebae	                           jmp 0x4000439	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
decNumberSameQuantum	SWITCH,0:functions,0:IF,5:WHILE,0:CALL,6:FOR,0:DO,0:ELSE,2	31
0x4007990	          0x4889f8	                            mov rax, rdi	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x4007993	         0xfb67e08	               movzx edi, byte [rsi + 8]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4007997	         0xfb64a08	               movzx ecx, byte [rdx + 8]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x400799b	          0x4189f8	                            mov r8d, edi	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x400799e	          0x4109c8	                             or r8d, ecx	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x40079a1	        0x4183e070	                           and r8d, 0x70	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x40079a5	            0x7419	                            je 0x40079c0	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x40079a7	        0x40f6c730	                          test dil, 0x30	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x40079ab	            0x753b	                           jne 0x40079e8	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x40079ad	            0x31d2	                            xor edx, edx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079af	          0x83e740	                           and edi, 0x40	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40079b2	            0x7417	                            je 0x40079cb	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x40079b4	          0xc0e906	                               shr cl, 6	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079b7	            0x89ca	                            mov edx, ecx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079b9	          0x83e201	                              and edx, 1	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079bc	            0xeb0d	                           jmp 0x40079cb	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079be	            0x6690	                                     nop	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079c0	          0x8b4a04	                mov ecx, dword [rdx + 4]	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079c3	            0x31d2	                            xor edx, edx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079c5	          0x394e04	                cmp dword [rsi + 4], ecx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079c8	           0xf94c2	                                 sete dl	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079cb	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079cf	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079d6	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079dc	        0x6689500a	                mov word [rax + 0xa], dx	      2592	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079e0	              0xc3	                                     ret	      2594	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079e1	     0xf1f80000000	                         nop dword [rax]	      2594	decNumber.c	FUNCTION_68	FUNCTION_42
0x40079e8	          0xf6c130	                           test cl, 0x30	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x40079eb	      0xba01000000	                              mov edx, 1	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x40079f0	            0x74bb	                            je 0x40079ad	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x40079f2	            0xebd7	                           jmp 0x40079cb	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
decNumberFMA	SWITCH,0:functions,0:IF,10:WHILE,0:CALL,17:FOR,0:DO,1:ELSE,1	215
0x4009a90	            0x4157	                                push r15	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009a92	            0x4156	                                push r14	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009a94	            0x4155	                                push r13	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009a96	            0x4154	                                push r12	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009a98	          0x4989d5	                            mov r13, rdx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009a9b	              0x55	                                push rbp	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009a9c	              0x53	                                push rbx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009a9d	          0x4989cc	                            mov r12, rcx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009aa0	          0x4889fb	                            mov rbx, rdi	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009aa3	          0x4c89c5	                             mov rbp, r8	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009aa6	    0x4881eca80000	                           sub rsp, 0xa8	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009aad	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009ab6	    0x488984249800	             mov qword [rsp + 0x98], rax	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009abe	            0x31c0	                            xor eax, eax	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009ac0	        0xf6460870	               test byte [rsi + 8], 0x70	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4009ac4	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1106	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009acc	     0xf84be010000	                            je 0x4009c90	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4009ad2	        0xf6420870	               test byte [rdx + 8], 0x70	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4009ad6	     0xf8404030000	                            je 0x4009de0	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4009adc	    0x41f644240870	               test byte [r12 + 8], 0x70	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4009ae2	     0xf84b8020000	                            je 0x4009da0	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4009ae8	        0x418b4500	                    mov eax, dword [r13]	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4009aec	        0x488b5508	                mov rdx, qword [rbp + 8]	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009af0	             0x306	                    add eax, dword [rsi]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009af2	    0xc7442424ffc9	     mov dword [rsp + 0x24], 0x3b9ac9ff 	      1133	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009afa	      0x4889542428	             mov qword [rsp + 0x28], rdx	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009aff	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009b03	          0x83f831	                           cmp eax, 0x31	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b06	        0x89442420	             mov dword [rsp + 0x20], eax	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009b0a	    0xc74424280136	     mov dword [rsp + 0x28], 0xc4653601 	      1134	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009b12	      0x4889542430	             mov qword [rsp + 0x30], rdx	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009b17	          0x8b5518	            mov edx, dword [rbp + 0x18] 	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009b1a	        0x89542438	             mov dword [rsp + 0x38], edx	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009b1e	     0xf8ee4000000	                           jle 0x4009c08	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b24	          0x8d4802	                      lea ecx, [rax + 2]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b27	      0xba56555555	                     mov edx, 0x55555556	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b2c	            0x89c8	                            mov eax, ecx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b2e	            0xf7ea	                                imul edx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b30	            0x89c8	                            mov eax, ecx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b32	          0xc1f81f	                           sar eax, 0x1f	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b35	            0x29c2	                            sub edx, eax	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b37	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009b3b	          0x83ff3c	                           cmp edi, 0x3c	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4009b3e	     0xf86da000000	                           jbe 0x4009c1e	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4009b44	      0x4889742408	                mov qword [rsp + 8], rsi	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4009b49	      0xe800000000	                          call 0x4009b4e	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4009b4e	          0x4885c0	                           test rax, rax	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4009b51	          0x4989c6	                            mov r14, rax	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4009b54	          0x4989c7	                            mov r15, rax	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4009b57	      0x488b742408	                mov rsi, qword [rsp + 8]	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4009b5c	     0xf84ee020000	                            je 0x4009e50	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4009b62	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4009b67	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4009b6c	          0x4c89ea	                            mov rdx, r13	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4009b6f	          0x4c89ff	                            mov rdi, r15	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4009b72	      0xe8699affff	                  call sym.decMultiplyOp	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4009b77	      0x448b6c241c	           mov r13d, dword [rsp + 0x1c] 	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4009b7c	        0x41f6c580	                         test r13b, 0x80	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4009b80	     0xf84cb000000	                            je 0x4009c51	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4009b86	    0x41f7c5000000	                   test r13d, 0x40000000	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4009b8d	     0xf859d000000	                           jne 0x4009c30	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4009b93	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009b95	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009b9c	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009ba2	        0x66894b0a	                mov word [rbx + 0xa], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009ba6	        0xc6430820	                mov byte [rbx + 8], 0x20	      1157	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4009baa	          0x4c89f7	                            mov rdi, r14	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bad	      0xe800000000	                          call 0x4009bb2	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bb2	          0x4489ee	                           mov esi, r13d	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bb5	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4009bb9	            0x7415	                            je 0x4009bd0	      7736	decNumber.c	FUNCTION_24	IF_1
0x4009bbb	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009bc1	     0xf84f9010000	                            je 0x4009dc0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009bc7	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009bcd	           0xf1f00	                         nop dword [rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009bd0	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009bd3	      0xe800000000	                          call 0x4009bd8	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009bd8	          0x4889d8	                            mov rax, rbx	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bdb	    0x488b9c249800	            mov rbx, qword [rsp + 0x98] 	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009be3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bec	     0xf8570020000	                           jne 0x4009e62	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bf2	    0x4881c4a80000	                           add rsp, 0xa8	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bf9	              0x5b	                                 pop rbx	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bfa	              0x5d	                                 pop rbp	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bfb	            0x415c	                                 pop r12	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bfd	            0x415d	                                 pop r13	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009bff	            0x415e	                                 pop r14	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c01	            0x415f	                                 pop r15	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c03	              0xc3	                                     ret	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c04	         0xf1f4000	                         nop dword [rax]	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c08	            0x4898	                                    cdqe	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009c0a	     0xfb680000000	                   movzx eax, byte [rax]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009c11	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4009c15	          0x83ff3c	                           cmp edi, 0x3c	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4009c18	     0xf8726ffffff	                            ja 0x4009b44	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4009c1e	      0x4c8d7c2450	                   lea r15, [rsp + 0x50]	      1136	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4009c23	          0x4531f6	                          xor r14d, r14d	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c26	      0xe937ffffff	                           jmp 0x4009b62	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c2b	       0xf1f440000	                   nop dword [rax + rax]	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c30	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009c32	      0x4c8d642440	                   lea r12, [rsp + 0x40]	      1161	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4009c37	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009c3c	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009c44	    0xc74424400100	               mov dword [rsp + 0x40], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009c4c	      0x668954244a	               mov word [rsp + 0x4a], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009c51	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4009c56	          0x4531c0	                            xor r8d, r8d	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4009c59	          0x4889e9	                            mov rcx, rbp	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4009c5c	          0x4c89e2	                            mov rdx, r12	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4009c5f	          0x4c89fe	                            mov rsi, r15	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4009c62	          0x4889df	                            mov rdi, rbx	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4009c65	      0xe8e6f3ffff	                       call sym.decAddOp	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4009c6a	      0x448b6c241c	           mov r13d, dword [rsp + 0x1c] 	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4009c6f	          0x4c89f7	                            mov rdi, r14	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c72	      0xe800000000	                          call 0x4009c77	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009c77	          0x4585ed	                         test r13d, r13d	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4009c7a	     0xf8458ffffff	                            je 0x4009bd8	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4009c80	          0x4489ee	                           mov esi, r13d	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4009c83	      0xe92dffffff	                           jmp 0x4009bb5	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4009c88	     0xf1f84000000	                   nop dword [rax + rax]	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4009c90	    0x4181383f420f	                 cmp dword [r8], 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x4009c97	     0xf8f0c010000	                            jg 0x4009da9	      7511	decNumber.c	FUNCTION_19	IF_1
0x4009c9d	    0x418178043f42	            cmp dword [r8 + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x4009ca5	     0xf8ffe000000	                            jg 0x4009da9	      7512	decNumber.c	FUNCTION_19	IF_1
0x4009cab	        0x418b4008	                 mov eax, dword [r8 + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009caf	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009cb1	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009cb6	     0xf8fed000000	                            jg 0x4009da9	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009cbc	            0x8b06	                    mov eax, dword [rsi]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009cbe	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009cc3	     0xf8e67010000	                           jle 0x4009e30	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009cc9	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009cce	     0xf85b7000000	                           jne 0x4009d8b	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009cd4	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009cd7	     0xf85ae000000	                           jne 0x4009d8b	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009cdd	      0x41f6450870	               test byte [r13 + 8], 0x70	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4009ce2	     0xf85f4fdffff	                           jne 0x4009adc	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4009ce8	     0xf1f84000000	                   nop dword [rax + rax]	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4009cf0	    0x817d043f420f	           cmp dword [rbp + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x4009cf7	     0xf8ff0000000	                            jg 0x4009ded	      7512	decNumber.c	FUNCTION_19	IF_1
0x4009cfd	          0x8b4508	                mov eax, dword [rbp + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009d00	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009d02	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009d07	     0xf8fe0000000	                            jg 0x4009ded	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009d0d	        0x418b4500	                    mov eax, dword [r13]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d11	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d16	     0xf8fec000000	                            jg 0x4009e08	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d1c	        0x418b5504	                mov edx, dword [r13 + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d20	             0x1c2	                            add edx, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d22	    0x81c27c841e00	                       add edx, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d28	    0x81fabcc62d00	                       cmp edx, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d2e	     0xf87d4000000	                            ja 0x4009e08	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d34	    0x41f644240870	               test byte [r12 + 8], 0x70	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4009d3a	     0xf85acfdffff	                           jne 0x4009aec	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4009d40	    0x817d043f420f	           cmp dword [rbp + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x4009d47	            0x7f60	                            jg 0x4009da9	      7512	decNumber.c	FUNCTION_19	IF_1
0x4009d49	          0x8b4508	                mov eax, dword [rbp + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009d4c	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009d4e	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009d53	            0x7f54	                            jg 0x4009da9	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009d55	        0x418b0424	                    mov eax, dword [r12]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d59	      0x3d3f420f00	                        cmp eax, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d5e	            0x7f19	                            jg 0x4009d79	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d60	      0x418b542404	                mov edx, dword [r12 + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d65	             0x1c2	                            add edx, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d67	    0x81c27c841e00	                       add edx, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d6d	    0x81fabcc62d00	                       cmp edx, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d73	     0xf866ffdffff	                           jbe 0x4009ae8	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d79	    0x6641837c240a	                 cmp word [r12 + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d80	            0x7509	                           jne 0x4009d8b	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d82	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d85	     0xf845dfdffff	                            je 0x4009ae8	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d8b	    0xc744241c8000	           mov dword [rsp + 0x1c], 0x80 	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d93	      0xbe80000000	                           mov esi, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d98	            0xeb1c	                           jmp 0x4009db6	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009d9a	    0x660f1f440000	                    nop word [rax + rax]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009da0	    0x817d003f420f	                cmp dword [rbp], 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x4009da7	            0x7e97	                           jle 0x4009d40	      7511	decNumber.c	FUNCTION_19	IF_1
0x4009da9	    0xc744241c4000	           mov dword [rsp + 0x1c], 0x40 	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009db1	      0xbe40000000	                           mov esi, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009db6	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4009dba	     0xf8410feffff	                            je 0x4009bd0	      7736	decNumber.c	FUNCTION_24	IF_1
0x4009dc0	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009dc2	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009dc9	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009dcf	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009dd3	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4009dd7	      0xe9f4fdffff	                           jmp 0x4009bd0	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4009ddc	         0xf1f4000	                         nop dword [rax]	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4009de0	    0x4181383f420f	                 cmp dword [r8], 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x4009de7	     0xf8e03ffffff	                           jle 0x4009cf0	      7511	decNumber.c	FUNCTION_19	IF_1
0x4009ded	    0xc744241c4000	           mov dword [rsp + 0x1c], 0x40 	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009df5	    0x41bd40000000	                          mov r13d, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x4009dfb	          0x4531f6	                          xor r14d, r14d	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009dfe	      0xe9a7fdffff	                           jmp 0x4009baa	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009e03	       0xf1f440000	                   nop dword [rax + rax]	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4009e08	    0x6641837d0a00	                 cmp word [r13 + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e0e	            0x7509	                           jne 0x4009e19	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e10	          0x83f801	                              cmp eax, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e13	     0xf841bffffff	                            je 0x4009d34	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e19	    0xc744241c8000	           mov dword [rsp + 0x1c], 0x80 	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e21	    0x41bd80000000	                          mov r13d, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e27	            0xebd2	                           jmp 0x4009dfb	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e29	     0xf1f80000000	                         nop dword [rax]	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e30	          0x8b5604	                mov edx, dword [rsi + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e33	             0x1c2	                            add edx, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e35	    0x81c27c841e00	                       add edx, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e3b	    0x81fabcc62d00	                       cmp edx, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e41	     0xf8782feffff	                            ja 0x4009cc9	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e47	      0xe991feffff	                           jmp 0x4009cdd	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e4c	         0xf1f4000	                         nop dword [rax]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4009e50	    0xc744241c1000	           mov dword [rsp + 0x1c], 0x10 	      1141	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4009e58	      0xbe10000000	                           mov esi, 0x10	      1142	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4009e5d	      0xe954ffffff	                           jmp 0x4009db6	      1142	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4009e62	      0xe800000000	                          call 0x4009e67	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
decNumberShift	SWITCH,0:functions,0:IF,11:WHILE,0:CALL,14:FOR,0:DO,0:ELSE,6	178
0x4008dc0	            0x4154	                                push r12	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dc2	              0x55	                                push rbp	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dc3	          0x4889cd	                            mov rbp, rcx	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dc6	              0x53	                                push rbx	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dc7	          0x4889fb	                            mov rbx, rdi	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dca	        0x4883ec20	                           sub rsp, 0x20	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dce	    0x64488b042528	                mov rax, qword fs:[0x28]	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dd7	      0x4889442418	             mov qword [rsp + 0x18], rax	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008ddc	            0x31c0	                            xor eax, eax	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dde	        0xf6460830	               test byte [rsi + 8], 0x30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4008de2	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2670	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008dea	            0x7508	                           jne 0x4008df4	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4008dec	         0xfb64208	               movzx eax, byte [rdx + 8]	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4008df0	            0xa830	                           test al, 0x30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4008df2	            0x743c	                            je 0x4008e30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4008df4	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4008df9	          0x4889e9	                            mov rcx, rbp	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4008dfc	          0x4889df	                            mov rdi, rbx	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4008dff	      0xe83c98ffff	                 call sym.decNaNs.isra.6	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4008e04	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4008e08	            0x85f6	                           test esi, esi	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4008e0a	     0xf85f8000000	                           jne 0x4008f08	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4008e10	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e15	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e1e	          0x4889d8	                            mov rax, rbx	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e21	     0xf853f010000	                           jne 0x4008f66	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e27	        0x4883c420	                           add rsp, 0x20	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e2b	              0x5b	                                 pop rbx	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e2c	              0x5d	                                 pop rbp	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e2d	            0x415c	                                 pop r12	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e2f	              0xc3	                                     ret	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008e30	            0xa840	                           test al, 0x40	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4008e32	            0x754c	                           jne 0x4008e80	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4008e34	          0x8b4a04	                mov ecx, dword [rdx + 4]	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4008e37	            0x85c9	                           test ecx, ecx	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4008e39	            0x7545	                           jne 0x4008e80	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4008e3b	          0x4889d7	                            mov rdi, rdx	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4008e3e	      0x4889742408	                mov qword [rsp + 8], rsi	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4008e43	      0xe84876ffff	                      call sym.decGetInt	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4008e48	          0x4189c4	                           mov r12d, eax	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4008e4b	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4008e51	          0x83f801	                              cmp eax, 1	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4008e54	            0x762a	                           jbe 0x4008e80	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4008e56	    0x4181fc000000	                    cmp r12d, 0x80000000	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4008e5d	            0x7421	                            je 0x4008e80	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4008e5f	          0x4489e2	                           mov edx, r12d	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e62	      0x488b742408	                mov rsi, qword [rsp + 8]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e67	          0xc1fa1f	                           sar edx, 0x1f	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e6a	            0x89d0	                            mov eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e6c	          0x4431e0	                           xor eax, r12d	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e6f	            0x29d0	                            sub eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e71	          0x3b4500	                    cmp eax, dword [rbp]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e74	            0x7e3b	                           jle 0x4008eb1	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4008e80	    0xc74424148000	           mov dword [rsp + 0x14], 0x80 	      2682	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3
0x4008e88	      0xbe80000000	                           mov esi, 0x80	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4008e8d	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008e8f	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008e96	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008e9c	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008ea0	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4008ea4	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4008ea7	      0xe800000000	                          call 0x4008eac	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4008eac	      0xe95fffffff	                           jmp 0x4008e10	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4008eb1	          0x4889df	                            mov rdi, rbx	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x4008eb4	      0xe800000000	                          call 0x4008eb9	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x4008eb9	          0x4585e4	                         test r12d, r12d	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008ebc	     0xf8442ffffff	                            je 0x4008e04	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008ec2	        0xf6430840	               test byte [rbx + 8], 0x40	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008ec6	     0xf8538ffffff	                           jne 0x4008e04	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4008ecc	          0x4585e4	                         test r12d, r12d	      2692	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6
0x4008ecf	            0x7e62	                           jle 0x4008f33	      2692	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6
0x4008ed1	          0x8b5500	                    mov edx, dword [rbp]	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4008ed4	          0x4139d4	                           cmp r12d, edx	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4008ed7	            0x7449	                            je 0x4008f22	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4008ed9	            0x8b33	                    mov esi, dword [rbx]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4008edb	        0x418d0434	                    lea eax, [r12 + rsi]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4008edf	            0x39c2	                            cmp edx, eax	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4008ee1	     0xf8c84000000	                            jl 0x4008f6b	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4008ee7	          0x83fe01	                              cmp esi, 1	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4008eea	     0xf8e07010000	                           jle 0x4008ff7	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4008ef0	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4008ef4	          0x4489e2	                           mov edx, r12d	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4008ef7	      0xe8a47dffff	          call sym.decShiftToMost.part.0	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4008efc	            0x8903	                    mov dword [rbx], eax	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4008efe	      0xe901ffffff	                           jmp 0x4008e04	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4008f03	       0xf1f440000	                   nop dword [rax + rax]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4008f08	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4008f0c	            0x7496	                            je 0x4008ea4	      7736	decNumber.c	FUNCTION_24	IF_1
0x4008f0e	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4008f14	     0xf8473ffffff	                            je 0x4008e8d	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4008f1a	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4008f20	            0xeb82	                           jmp 0x4008ea4	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4008f22	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      7634	decNumber.c	FUNCTION_21	IF_1
0x4008f28	    0xc70301000000	                      mov dword [rbx], 1	      7635	decNumber.c	FUNCTION_21	IF_1
0x4008f2e	      0xe9d1feffff	                           jmp 0x4008e04	      7635	decNumber.c	FUNCTION_21	IF_1
0x4008f33	          0x486303	                 movsxd rax, dword [rbx]	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4008f36	          0x4489e1	                           mov ecx, r12d	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4008f39	            0xf7d9	                                 neg ecx	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4008f3b	            0x39c1	                            cmp ecx, eax	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4008f3d	            0x7de3	                           jge 0x4008f22	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4008f3f	          0x83f831	                           cmp eax, 0x31	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008f42	     0xf8f9d000000	                            jg 0x4008fe5	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008f48	     0xfb6b0000000	                   movzx esi, byte [rax]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008f4f	            0x85c9	                           test ecx, ecx	      6740	decNumber.c	FUNCTION_9	IF_1
0x4008f51	            0x740b	                            je 0x4008f5e	      6740	decNumber.c	FUNCTION_9	IF_1
0x4008f53	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008f57	            0x89ca	                            mov edx, ecx	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008f59	      0xe8327fffff	         call sym.decShiftToLeast.part.1	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008f5e	          0x440123	                   add dword [rbx], r12d	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x4008f61	      0xe99efeffff	                           jmp 0x4008e04	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x4008f66	      0xe800000000	                          call 0x4008f6b	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4008f6b	            0x29d0	                            sub eax, edx	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x4008f6d	            0x39c6	                            cmp esi, eax	      7628	decNumber.c	FUNCTION_21	IF_1
0x4008f6f	            0x7eb1	                           jle 0x4008f22	      7628	decNumber.c	FUNCTION_21	IF_1
0x4008f71	            0x29c6	                            sub esi, eax	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f73	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f77	          0x83fe31	                           cmp esi, 0x31	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f7a	     0xf8fa3000000	                            jg 0x4009023	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f80	          0x4863c6	                         movsxd rax, esi	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f83	     0xfb690000000	                   movzx edx, byte [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f8a	          0x4889d0	                            mov rax, rdx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f8d	      0x488d4c12fe	                lea rcx, [rdx + rdx - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f92	          0x83e801	                              sub eax, 1	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4008f95	        0x4c8d040f	                     lea r8, [rdi + rcx]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4008f99	          0x8d0440	                  lea eax, [rax + rax*2]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4008f9c	            0x29c6	                            sub esi, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4008f9e	          0x83fe03	                              cmp esi, 3	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008fa1	            0x7414	                            je 0x4008fb7	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008fa3	        0x410fb700	                    movzx eax, word [r8]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008fa7	          0x4863f6	                         movsxd rsi, esi	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008faa	            0x31d2	                            xor edx, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008fac	    0xf734b5000000	                       div dword [rsi*4]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008fb3	        0x66418910	                       mov word [r8], dx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4008fb7	          0x48d1f9	                              sar rcx, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008fba	          0x8d4101	                      lea eax, [rcx + 1]	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4008fbd	          0x8d0c49	                  lea ecx, [rcx + rcx*2]	      7763	decNumber.c	FUNCTION_25
0x4008fc0	            0x4898	                                    cdqe	      7762	decNumber.c	FUNCTION_25
0x4008fc2	      0x488d5447fe	              lea rdx, [rdi + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x4008fc7	          0x8d4101	                      lea eax, [rcx + 1]	      7763	decNumber.c	FUNCTION_25
0x4008fca	          0x4839d7	                            cmp rdi, rdx	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008fcd	            0x774b	                            ja 0x400901a	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008fcf	           0xfb70a	                   movzx ecx, word [rdx]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4008fd2	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4008fd5	            0x7530	                           jne 0x4009007	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4008fd7	          0x83f801	                              cmp eax, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4008fda	            0x743e	                            je 0x400901a	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4008fdc	          0x83e803	                              sub eax, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4008fdf	        0x4883ea02	                              sub rdx, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008fe3	            0xebe5	                           jmp 0x4008fca	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4008fe5	          0x83c002	                              add eax, 2	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008fe8	      0xbf03000000	                              mov edi, 3	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008fed	              0x99	                                     cdq	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008fee	            0xf7ff	                                idiv edi	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008ff0	            0x89c6	                            mov esi, eax	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008ff2	      0xe958ffffff	                           jmp 0x4008f4f	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4008ff7	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4008ffc	     0xf85eefeffff	                           jne 0x4008ef0	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4009002	      0xe9fdfdffff	                           jmp 0x4008e04	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4009007	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400900b	            0x760d	                           jbe 0x400901a	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400900d	          0x8d5001	                      lea edx, [rax + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4009010	          0x83c002	                              add eax, 2	      7783	decNumber.c	FUNCTION_25	FOR_1
0x4009013	        0x6683f964	                            cmp cx, 0x64	      7783	decNumber.c	FUNCTION_25	FOR_1
0x4009017	           0xf42c2	                          cmovb eax, edx	      7783	decNumber.c	FUNCTION_25	FOR_1
0x400901a	            0x8903	                    mov dword [rbx], eax	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400901c	            0x89c6	                            mov esi, eax	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400901e	      0xe9c4feffff	                           jmp 0x4008ee7	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4009023	          0x8d4602	                      lea eax, [rsi + 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4009026	      0xb903000000	                              mov ecx, 3	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400902b	              0x99	                                     cdq	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400902c	            0xf7f9	                                idiv ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400902e	          0x4863d0	                         movsxd rdx, eax	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4009031	          0x83e801	                              sub eax, 1	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4009034	      0x488d4c12fe	                lea rcx, [rdx + rdx - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4009039	          0x8d0440	                  lea eax, [rax + rax*2]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x400903c	        0x4c8d040f	                     lea r8, [rdi + rcx]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4009040	      0xe957ffffff	                           jmp 0x4008f9c	      7638	decNumber.c	FUNCTION_21	CALL_2
decNumberOr	SWITCH,0:functions,0:IF,8:WHILE,0:CALL,12:FOR,2:DO,0:ELSE,2	252
0x40065a0	            0x4157	                                push r15	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065a2	            0x4156	                                push r14	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065a4	            0x4155	                                push r13	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065a6	            0x4154	                                push r12	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065a8	              0x55	                                push rbp	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065a9	              0x53	                                push rbx	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065aa	          0x4889fb	                            mov rbx, rdi	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065ad	        0x4883ec28	                           sub rsp, 0x28	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065b1	        0x448b4e04	                mov r9d, dword [rsi + 4]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x40065b5	          0x4585c9	                           test r9d, r9d	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x40065b8	     0xf85aa020000	                           jne 0x4006868	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x40065be	         0xfb64608	               movzx eax, byte [rsi + 8]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x40065c2	            0xa870	                           test al, 0x70	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x40065c4	     0xf859e020000	                           jne 0x4006868	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x40065ca	            0x84c0	                             test al, al	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x40065cc	     0xf8896020000	                            js 0x4006868	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x40065d2	          0x8b7a04	                mov edi, dword [rdx + 4]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065d5	          0x4989d0	                             mov r8, rdx	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065d8	            0x85ff	                           test edi, edi	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065da	     0xf8588020000	                           jne 0x4006868	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065e0	         0xfb64208	               movzx eax, byte [rdx + 8]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065e4	            0xa870	                           test al, 0x70	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065e6	     0xf857c020000	                           jne 0x4006868	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065ec	            0x84c0	                             test al, al	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065ee	     0xf8874020000	                            js 0x4006868	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x40065f4	        0x488d430a	                    lea rax, [rbx + 0xa]	      1823	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065f8	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	      1821	decNumber.c	FUNCTION_68	FUNCTION_31
0x40065fc	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	      1822	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006600	      0x4889442408	                mov qword [rsp + 8], rax	      1823	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006605	          0x486306	                 movsxd rax, dword [rsi]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006608	          0x83f831	                           cmp eax, 0x31	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400660b	     0xf8fff020000	                            jg 0x4006910	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006611	     0xfb680000000	                   movzx eax, byte [rax]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006618	      0x488d7c00fe	                lea rdi, [rax + rax - 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400661d	          0x496300	                  movsxd rax, dword [r8]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4006620	          0x4c01df	                            add rdi, r11	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006623	          0x83f831	                           cmp eax, 0x31	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4006626	     0xf8fc4020000	                            jg 0x40068f0	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x400662c	     0xfb680000000	                   movzx eax, byte [rax]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4006633	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4006638	            0x8b31	                    mov esi, dword [rcx]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x400663a	          0x4901ec	                            add r12, rbp	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x400663d	          0x83fe31	                           cmp esi, 0x31	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4006640	     0xf8f7a020000	                            jg 0x40068c0	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4006646	          0x4863c6	                         movsxd rax, esi	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4006649	        0x4c8d4b0a	                     lea r9, [rbx + 0xa]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x400664d	     0xfb690000000	                   movzx edx, byte [rax]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4006654	      0x4d8d6c51fe	               lea r13, [r9 + rdx*2 - 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4006659	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x400665d	            0x29c6	                            sub esi, eax	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x400665f	        0x488d430a	                    lea rax, [rbx + 0xa]	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4006663	        0x8974241c	             mov dword [rsp + 0x1c], esi	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4006667	          0x4c39e8	                            cmp rax, r13	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x400666a	     0xf87dc020000	                            ja 0x400694c	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4006670	          0x4989c1	                             mov r9, rax	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4006673	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4006678	     0xf1f84000000	                   nop dword [rax + rax]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4006680	          0x4c39df	                            cmp rdi, r11	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4006683	     0xf8217020000	                            jb 0x40068a0	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4006689	            0x31c0	                            xor eax, eax	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x400668b	          0x4c39e5	                            cmp rbp, r12	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x400668e	        0x410fb713	                   movzx edx, word [r11]	      1831	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_1
0x4006692	            0x7704	                            ja 0x4006698	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4006694	         0xfb74500	                   movzx eax, word [rbp]	      1833	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4006698	          0x4189c2	                           mov r10d, eax	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x400669b	            0x31c9	                            xor ecx, ecx	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x400669d	        0x664109d2	                             or r10w, dx	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x40066a1	        0x66418909	                       mov word [r9], cx	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x40066a5	     0xf8438010000	                            je 0x40067e3	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x40066ab	      0x664183e201	                             and r10w, 1	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40066b0	            0x740e	                            je 0x40066c0	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40066b2	     0xfb70d000000	           movzx ecx, word [0x040066b9] 	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40066b9	        0x66418909	                       mov word [r9], cx	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40066bd	          0x4189ca	                           mov r10d, ecx	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40066c0	        0x440fb7c2	                           movzx r8d, dx	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40066c4	           0xfb7f0	                           movzx esi, ax	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40066c7	          0x4189d7	                           mov r15d, edx	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066ca	    0x4569c0cdcc00	                   imul r8d, r8d, 0xcccd	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40066d1	            0x89c1	                            mov ecx, eax	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066d3	    0x69f6cdcc0000	                   imul esi, esi, 0xcccd	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40066d9	        0x41c1e813	                           shr r8d, 0x13	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40066dd	        0x478d3480	                   lea r14d, [r8 + r8*4]	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066e1	          0xc1ee13	                           shr esi, 0x13	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40066e4	          0x4501f6	                          add r14d, r14d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066e7	          0x4529f7	                          sub r15d, r14d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066ea	        0x448d34b6	                 lea r14d, [rsi + rsi*4]	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066ee	          0x4501f6	                          add r14d, r14d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066f1	          0x4429f1	                           sub ecx, r14d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066f4	          0x4189ce	                           mov r14d, ecx	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066f7	          0x4509fe	                           or r14d, r15d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066fa	      0x664183fe01	                             cmp r14w, 1	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40066ff	     0xf875b010000	                            ja 0x4006860	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006705	          0x4d39e9	                             cmp r9, r13	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4006708	        0x410f94c6	                               sete r14b	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x400670c	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4006711	            0x7509	                           jne 0x400671c	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4006713	          0x4584f6	                         test r14b, r14b	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4006716	     0xf85c7000000	                           jne 0x40067e3	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x400671c	          0x4589c7	                           mov r15d, r8d	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400671f	          0x4109f7	                            or r15d, esi	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4006722	        0x4183e701	                             and r15d, 1	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4006726	            0x740c	                            je 0x4006734	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4006728	    0x664403150000	             add r10w, word [0x04006730]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4006730	        0x66458911	                     mov word [r9], r10w	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4006734	        0x450fb7f8	                         movzx r15d, r8w	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006738	        0x66c1ea02	                               shr dx, 2	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x400673c	        0x66c1e802	                               shr ax, 2	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4006740	    0x4569ffcdcc00	                 imul r15d, r15d, 0xcccd	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006747	           0xfb7d2	                           movzx edx, dx	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x400674a	           0xfb7c0	                           movzx eax, ax	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x400674d	    0x69d27b140000	                   imul edx, edx, 0x147b	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4006753	        0x41c1ef13	                          shr r15d, 0x13	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006757	        0x478d3cbf	                 lea r15d, [r15 + r15*4]	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x400675b	          0xc1ea11	                           shr edx, 0x11	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x400675e	    0x69c07b140000	                   imul eax, eax, 0x147b	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4006764	          0x4501ff	                          add r15d, r15d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006767	          0x4529f8	                           sub r8d, r15d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x400676a	        0x440fb7fe	                          movzx r15d, si	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x400676e	    0x4569ffcdcc00	                 imul r15d, r15d, 0xcccd	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006775	          0xc1e811	                           shr eax, 0x11	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4006778	        0x41c1ef13	                          shr r15d, 0x13	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x400677c	        0x478d3cbf	                 lea r15d, [r15 + r15*4]	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006780	          0x4501ff	                          add r15d, r15d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006783	          0x4429fe	                           sub esi, r15d	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006786	          0x4109f0	                             or r8d, esi	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006789	      0x664183f801	                              cmp r8w, 1	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x400678e	     0xf87cc000000	                            ja 0x4006860	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4006794	      0x837c241c02	               cmp dword [rsp + 0x1c], 2	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4006799	            0x7505	                           jne 0x40067a0	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x400679b	          0x4584f6	                         test r14b, r14b	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x400679e	            0x7543	                           jne 0x40067e3	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40067a0	            0x89d6	                            mov esi, edx	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40067a2	             0x9c6	                             or esi, eax	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40067a4	          0x83e601	                              and esi, 1	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40067a7	            0x740c	                            je 0x40067b5	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40067a9	    0x664403150000	             add r10w, word [0x040067b1]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40067b1	        0x66458911	                     mov word [r9], r10w	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40067b5	           0xfb7f2	                           movzx esi, dx	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067b8	    0x69f6cdcc0000	                   imul esi, esi, 0xcccd	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067be	          0xc1ee13	                           shr esi, 0x13	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067c1	          0x8d34b6	                  lea esi, [rsi + rsi*4]	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067c4	             0x1f6	                            add esi, esi	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067c6	            0x29f2	                            sub edx, esi	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067c8	           0xfb7f0	                           movzx esi, ax	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067cb	    0x69f6cdcc0000	                   imul esi, esi, 0xcccd	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067d1	          0xc1ee13	                           shr esi, 0x13	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067d4	          0x8d34b6	                  lea esi, [rsi + rsi*4]	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067d7	             0x1f6	                            add esi, esi	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067d9	            0x29f0	                            sub eax, esi	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067db	             0x9d0	                             or eax, edx	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067dd	        0x6683f801	                               cmp ax, 1	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067e1	            0x777d	                            ja 0x4006860	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40067e3	        0x4983c102	                               add r9, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x40067e7	        0x4983c302	                              add r11, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x40067eb	        0x4883c502	                              add rbp, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x40067ef	          0x4d39e9	                             cmp r9, r13	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x40067f2	     0xf8688feffff	                           jbe 0x4006680	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x40067f8	      0x4c2b4c2408	                 sub r9, qword [rsp + 8]	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x40067fd	          0x49d1f9	                               sar r9, 1	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4006800	          0x4963c1	                         movsxd rax, r9d	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4006803	      0x438d5449fe	                lea edx, [r9 + r9*2 - 2]	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4006808	      0x488d4400fe	                lea rax, [rax + rax - 2]	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x400680d	      0x4803442408	                add rax, qword [rsp + 8]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4006812	            0x7233	                            jb 0x4006847	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4006814	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4006817	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400681a	     0xf8510010000	                           jne 0x4006930	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4006820	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4006823	      0x488b742408	                mov rsi, qword [rsp + 8]	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4006828	            0x741d	                            je 0x4006847	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x400682a	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400682e	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4006831	          0x4839c6	                            cmp rsi, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4006834	            0x7711	                            ja 0x4006847	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4006836	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4006839	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x400683c	     0xf85ee000000	                           jne 0x4006930	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4006842	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4006845	            0x75e3	                           jne 0x400682a	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4006847	            0x8913	                    mov dword [rbx], edx	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4006849	    0xc74304000000	                  mov dword [rbx + 4], 0	      1854	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006850	        0xc6430800	                   mov byte [rbx + 8], 0	      1855	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006854	            0xeb38	                           jmp 0x400688e	      1856	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006856	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1856	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006860	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1856	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006865	           0xf1f00	                         nop dword [rax]	      1856	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006868	          0x4531c0	                            xor r8d, r8d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400686b	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006872	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006878	      0x664489430a	               mov word [rbx + 0xa], r8w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400687d	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4006881	      0xbe80000000	                           mov esi, 0x80	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4006886	          0x4889cf	                            mov rdi, rcx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4006889	      0xe800000000	                          call 0x400688e	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400688e	        0x4883c428	                           add rsp, 0x28	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006892	          0x4889d8	                            mov rax, rbx	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006895	              0x5b	                                 pop rbx	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006896	              0x5d	                                 pop rbp	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006897	            0x415c	                                 pop r12	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4006899	            0x415d	                                 pop r13	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x400689b	            0x415e	                                 pop r14	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x400689d	            0x415f	                                 pop r15	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x400689f	              0xc3	                                     ret	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x40068a0	            0x31d2	                            xor edx, edx	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x40068a2	          0x4c39e5	                            cmp rbp, r12	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x40068a5	     0xf86e9fdffff	                           jbe 0x4006694	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x40068ab	            0x31c0	                            xor eax, eax	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x40068ad	        0x66418901	                       mov word [r9], ax	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x40068b1	      0xe92dffffff	                           jmp 0x40067e3	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x40068b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x40068c0	        0x448d4602	                      lea r8d, [rsi + 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068c4	      0xba56555555	                     mov edx, 0x55555556	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068c9	        0x4c8d4b0a	                     lea r9, [rbx + 0xa]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068cd	          0x4489c0	                            mov eax, r8d	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068d0	        0x41c1f81f	                           sar r8d, 0x1f	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068d4	            0xf7ea	                                imul edx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068d6	          0x4429c2	                            sub edx, r8d	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068d9	          0x4863c2	                         movsxd rax, edx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068dc	      0x4d8d6c41fe	               lea r13, [r9 + rax*2 - 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40068e1	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x40068e5	      0xe973fdffff	                           jmp 0x400665d	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x40068ea	    0x660f1f440000	                    nop word [rax + rax]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x40068f0	          0x8d7002	                      lea esi, [rax + 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40068f3	      0xba56555555	                     mov edx, 0x55555556	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40068f8	            0x89f0	                            mov eax, esi	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40068fa	            0xf7ea	                                imul edx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40068fc	            0x89f0	                            mov eax, esi	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40068fe	          0xc1f81f	                           sar eax, 0x1f	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4006901	            0x29c2	                            sub edx, eax	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4006903	          0x4863d2	                         movsxd rdx, edx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4006906	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x400690b	      0xe928fdffff	                           jmp 0x4006638	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4006910	          0x8d7002	                      lea esi, [rax + 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006913	      0xba56555555	                     mov edx, 0x55555556	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006918	            0x89f0	                            mov eax, esi	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400691a	            0xf7ea	                                imul edx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400691c	            0x89f0	                            mov eax, esi	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400691e	          0xc1f81f	                           sar eax, 0x1f	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006921	            0x29c2	                            sub edx, eax	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006923	          0x4863d2	                         movsxd rdx, edx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006926	      0x488d7c12fe	                lea rdi, [rdx + rdx - 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400692b	      0xe9edfcffff	                           jmp 0x400661d	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4006930	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4006934	     0xf860dffffff	                           jbe 0x4006847	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400693a	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400693d	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4006940	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4006944	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4006947	      0xe9fbfeffff	                           jmp 0x4006847	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400694c	      0xbafeffffff	                     mov edx, 0xfffffffe	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4006951	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4006958	      0xe9b0feffff	                           jmp 0x400680d	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
decNumberPlus	SWITCH,0:functions,0:IF,2:WHILE,0:CALL,5:FOR,0:DO,0:ELSE,0	49
0x400a1f0	              0x55	                                push rbp	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a1f1	              0x53	                                push rbx	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a1f2	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a1f4	          0x4889d5	                            mov rbp, rdx	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a1f7	          0x4531c0	                            xor r8d, r8d	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x400a1fa	          0x4889fb	                            mov rbx, rdi	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a1fd	        0x4883ec38	                           sub rsp, 0x38	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a201	    0x64488b042528	                mov rax, qword fs:[0x28]	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a20a	      0x4889442428	             mov qword [rsp + 0x28], rax	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a20f	            0x31c0	                            xor eax, eax	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a211	          0x8b4604	                mov eax, dword [rsi + 4]	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a214	      0x66894c241a	               mov word [rsp + 0x1a], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a219	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x400a21e	          0x4889d1	                            mov rcx, rdx	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x400a221	          0x4889f2	                            mov rdx, rsi	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x400a224	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x400a229	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1878	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a231	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a236	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a23e	        0x89442414	             mov dword [rsp + 0x14], eax	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a242	      0xe809eeffff	                       call sym.decAddOp	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x400a247	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x400a24b	            0x85f6	                           test esi, esi	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x400a24d	            0x7521	                           jne 0x400a270	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x400a24f	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a254	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a25d	          0x4889d8	                            mov rax, rbx	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a260	            0x7546	                           jne 0x400a2a8	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a262	        0x4883c438	                           add rsp, 0x38	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a266	              0x5b	                                 pop rbx	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a267	              0x5d	                                 pop rbp	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a268	              0xc3	                                     ret	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a269	     0xf1f80000000	                         nop dword [rax]	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400a270	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400a274	            0x741f	                            je 0x400a295	      7736	decNumber.c	FUNCTION_24	IF_1
0x400a276	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a27c	            0x7522	                           jne 0x400a2a0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a27e	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a280	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a287	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a28d	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400a291	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400a295	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a298	      0xe800000000	                          call 0x400a29d	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a29d	            0xebb0	                           jmp 0x400a24f	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a29f	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400a2a0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a2a6	            0xebed	                           jmp 0x400a295	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400a2a8	      0xe800000000	                          call 0x400a2ad	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
decNumberClassToString	SWITCH,0:functions,0:IF,10:WHILE,0:CALL,0:FOR,0:DO,0:ELSE,0	50
0x4007e40	          0x83ff08	                              cmp edi, 8	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4007e43	            0x745b	                            je 0x4007ea0	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4007e45	          0x83ff03	                              cmp edi, 3	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4007e48	            0x7466	                            je 0x4007eb0	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4007e4a	          0x83ff06	                              cmp edi, 6	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4007e4d	            0x7471	                            je 0x4007ec0	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4007e4f	          0x83ff05	                              cmp edi, 5	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4007e52	            0x743c	                            je 0x4007e90	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4007e54	          0x83ff07	                              cmp edi, 7	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4007e57	            0x7477	                            je 0x4007ed0	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4007e59	          0x83ff04	                              cmp edi, 4	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4007e5c	     0xf847e000000	                            je 0x4007ee0	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4007e62	          0x83ff09	                              cmp edi, 9	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4007e65	     0xf8485000000	                            je 0x4007ef0	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4007e6b	          0x83ff02	                              cmp edi, 2	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4007e6e	     0xf848c000000	                            je 0x4007f00	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4007e74	          0x83ff01	                              cmp edi, 1	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4007e77	     0xf8493000000	                            je 0x4007f10	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4007e7d	            0x85ff	                           test edi, edi	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4007e7f	      0xba00000000	                              mov edx, 0	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4007e84	      0xb800000000	                              mov eax, 0	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4007e89	        0x480f45c2	                         cmovne rax, rdx	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4007e8d	              0xc3	                                     ret	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4007e8e	            0x6690	                                     nop	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4007e90	      0xb800000000	                              mov eax, 0	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4007e95	              0xc3	                                     ret	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4007e96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4007ea0	      0xb800000000	                              mov eax, 0	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4007ea5	              0xc3	                                     ret	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4007ea6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4007eb0	      0xb800000000	                              mov eax, 0	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4007eb5	              0xc3	                                     ret	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4007eb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4007ec0	      0xb800000000	                              mov eax, 0	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4007ec5	              0xc3	                                     ret	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4007ec6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4007ed0	      0xb800000000	                              mov eax, 0	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4007ed5	              0xc3	                                     ret	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4007ed6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4007ee0	      0xb800000000	                              mov eax, 0	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4007ee5	              0xc3	                                     ret	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4007ee6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4007ef0	      0xb800000000	                              mov eax, 0	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4007ef5	              0xc3	                                     ret	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4007ef6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4007f00	      0xb800000000	                              mov eax, 0	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4007f05	              0xc3	                                     ret	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4007f06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4007f10	      0xb800000000	                              mov eax, 0	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4007f15	              0xc3	                                     ret	      3333	decNumber.c	FUNCTION_68	FUNCTION_51
decNumberAnd	SWITCH,0:functions,0:IF,8:WHILE,0:CALL,12:FOR,2:DO,0:ELSE,2	277
0x40049f0	            0x4157	                                push r15	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40049f2	            0x4156	                                push r14	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40049f4	            0x4155	                                push r13	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40049f6	            0x4154	                                push r12	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40049f8	              0x55	                                push rbp	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40049f9	              0x53	                                push rbx	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40049fa	          0x4889fb	                            mov rbx, rdi	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40049fd	        0x4883ec28	                           sub rsp, 0x28	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004a01	          0x8b6e04	                mov ebp, dword [rsi + 4]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4004a04	            0x85ed	                           test ebp, ebp	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4004a06	     0xf85bc020000	                           jne 0x4004cc8	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4004a0c	         0xfb64608	               movzx eax, byte [rsi + 8]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4004a10	            0xa870	                           test al, 0x70	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4004a12	     0xf85b0020000	                           jne 0x4004cc8	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4004a18	            0x84c0	                             test al, al	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4004a1a	     0xf88a8020000	                            js 0x4004cc8	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4004a20	        0x448b5204	               mov r10d, dword [rdx + 4]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a24	          0x4989d0	                             mov r8, rdx	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a27	          0x4585d2	                         test r10d, r10d	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a2a	     0xf8598020000	                           jne 0x4004cc8	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a30	         0xfb64208	               movzx eax, byte [rdx + 8]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a34	            0xa870	                           test al, 0x70	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a36	     0xf858c020000	                           jne 0x4004cc8	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a3c	            0x84c0	                             test al, al	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a3e	     0xf8884020000	                            js 0x4004cc8	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4004a44	        0x488d470a	                    lea rax, [rdi + 0xa]	       815	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004a48	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	       813	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004a4c	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	       814	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004a50	      0x4889442408	                mov qword [rsp + 8], rax	       815	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004a55	          0x486306	                 movsxd rax, dword [rsi]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004a58	          0x83f831	                           cmp eax, 0x31	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004a5b	     0xf8f5f030000	                            jg 0x4004dc0	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004a61	     0xfb680000000	                   movzx eax, byte [rax]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004a68	      0x488d7c00fe	                lea rdi, [rax + rax - 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004a6d	          0x496300	                  movsxd rax, dword [r8]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004a70	          0x4c01df	                            add rdi, r11	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004a73	          0x83f831	                           cmp eax, 0x31	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004a76	     0xf8f24030000	                            jg 0x4004da0	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004a7c	     0xfb680000000	                   movzx eax, byte [rax]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004a83	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004a88	            0x8b31	                    mov esi, dword [rcx]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004a8a	          0x4901ec	                            add r12, rbp	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004a8d	          0x83fe31	                           cmp esi, 0x31	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004a90	     0xf8fda020000	                            jg 0x4004d70	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004a96	          0x4863c6	                         movsxd rax, esi	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004a99	        0x4c8d730a	                    lea r14, [rbx + 0xa]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004a9d	     0xfb690000000	                   movzx edx, byte [rax]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004aa4	      0x4d8d6c56fe	              lea r13, [r14 + rdx*2 - 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004aa9	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4004aad	            0x29c6	                            sub esi, eax	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4004aaf	        0x488d430a	                    lea rax, [rbx + 0xa]	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004ab3	        0x8974241c	             mov dword [rsp + 0x1c], esi	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4004ab7	          0x4c39e8	                            cmp rax, r13	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004aba	     0xf873c030000	                            ja 0x4004dfc	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004ac0	          0x4989c2	                            mov r10, rax	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004ac3	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004ac8	     0xf1f84000000	                   nop dword [rax + rax]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004ad0	          0x4c39df	                            cmp rdi, r11	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004ad3	     0xf8227020000	                            jb 0x4004d00	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004ad9	          0x4939ec	                            cmp r12, rbp	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4004adc	        0x450fb703	                   movzx r8d, word [r11]	       823	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_1
0x4004ae0	     0xf8262020000	                            jb 0x4004d48	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4004ae6	         0xfb77500	                   movzx esi, word [rbp]	       825	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004aea	          0x4489c0	                            mov eax, r8d	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004aed	          0x4531c9	                            xor r9d, r9d	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004af0	        0x6645890a	                     mov word [r10], r9w	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004af4	          0x6609f0	                               or ax, si	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004af7	     0xf844c010000	                            je 0x4004c49	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004afd	            0x89f0	                            mov eax, esi	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004aff	          0x83e001	                              and eax, 1	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b02	        0x664485c0	                            test ax, r8w	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b06	     0xf840f020000	                            je 0x4004d1b	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b0c	        0x440fb7fe	                          movzx r15d, si	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b10	     0xfb705000000	           movzx eax, word [0x04004b17] 	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b17	    0x440fb7350000	          movzx r14d, word [0x04004b1f] 	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b1f	    0x4569ffcdcc00	                 imul r15d, r15d, 0xcccd	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b26	        0x41c1ef13	                          shr r15d, 0x13	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b2a	        0x66418902	                      mov word [r10], ax	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b2e	          0x4489f8	                           mov eax, r15d	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b31	          0x4189f7	                           mov r15d, esi	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b34	          0x8d1480	                  lea edx, [rax + rax*4]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b37	             0x1d2	                            add edx, edx	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b39	          0x4129d7	                           sub r15d, edx	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b3c	        0x450fb7c8	                          movzx r9d, r8w	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004b40	          0x4489c1	                            mov ecx, r8d	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b43	    0x4569c9cdcc00	                   imul r9d, r9d, 0xcccd	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004b4a	        0x41c1e913	                           shr r9d, 0x13	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004b4e	        0x438d1489	                    lea edx, [r9 + r9*4]	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b52	             0x1d2	                            add edx, edx	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b54	            0x29d1	                            sub ecx, edx	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b56	            0x89ca	                            mov edx, ecx	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b58	          0x4109d7	                            or r15d, edx	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b5b	      0x664183ff01	                             cmp r15w, 1	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b60	     0xf875a010000	                            ja 0x4004cc0	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b66	          0x4d39ea	                            cmp r10, r13	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004b69	           0xf94c2	                                 sete dl	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004b6c	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004b71	            0x7508	                           jne 0x4004b7b	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004b73	            0x84d2	                             test dl, dl	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004b75	     0xf85ce000000	                           jne 0x4004c49	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004b7b	          0x4189c7	                           mov r15d, eax	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b7e	        0x4183e701	                             and r15d, 1	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b82	        0x664585cf	                          test r15w, r9w	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b86	            0x740c	                            je 0x4004b94	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b88	    0x664403350000	             add r14w, word [0x04004b90]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b90	        0x66458932	                    mov word [r10], r14w	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004b94	        0x450fb7f9	                         movzx r15d, r9w	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004b98	      0x6641c1e802	                              shr r8w, 2	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004b9d	        0x66c1ee02	                               shr si, 2	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004ba1	    0x4569ffcdcc00	                 imul r15d, r15d, 0xcccd	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004ba8	        0x450fb7c0	                          movzx r8d, r8w	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004bac	           0xfb7f6	                           movzx esi, si	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004baf	    0x4569c07b1400	                   imul r8d, r8d, 0x147b	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004bb6	        0x41c1ef13	                          shr r15d, 0x13	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bba	        0x478d3cbf	                 lea r15d, [r15 + r15*4]	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bbe	        0x41c1e811	                           shr r8d, 0x11	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004bc2	    0x69f67b140000	                   imul esi, esi, 0x147b	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004bc8	          0x4501ff	                          add r15d, r15d	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bcb	          0x4529f9	                           sub r9d, r15d	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bce	        0x440fb7f8	                          movzx r15d, ax	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bd2	    0x4569ffcdcc00	                 imul r15d, r15d, 0xcccd	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bd9	          0xc1ee11	                           shr esi, 0x11	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4004bdc	        0x41c1ef13	                          shr r15d, 0x13	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004be0	        0x478d3cbf	                 lea r15d, [r15 + r15*4]	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004be4	          0x4501ff	                          add r15d, r15d	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004be7	          0x4429f8	                           sub eax, r15d	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bea	          0x4109c1	                             or r9d, eax	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bed	      0x664183f901	                              cmp r9w, 1	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bf2	     0xf87c8000000	                            ja 0x4004cc0	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004bf8	      0x837c241c02	               cmp dword [rsp + 0x1c], 2	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004bfd	            0x7504	                           jne 0x4004c03	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004bff	            0x84d2	                             test dl, dl	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004c01	            0x7546	                           jne 0x4004c49	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4004c03	          0x4489c0	                            mov eax, r8d	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004c06	            0x21f0	                            and eax, esi	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004c08	            0xa801	                              test al, 1	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004c0a	            0x740c	                            je 0x4004c18	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004c0c	    0x664403350000	             add r14w, word [0x04004c14]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004c14	        0x66458932	                    mov word [r10], r14w	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4004c18	        0x410fb7c0	                          movzx eax, r8w	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c1c	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c22	          0xc1e813	                           shr eax, 0x13	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c25	          0x8d0480	                  lea eax, [rax + rax*4]	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c28	             0x1c0	                            add eax, eax	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c2a	          0x4129c0	                            sub r8d, eax	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c2d	           0xfb7c6	                           movzx eax, si	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c30	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c36	          0xc1e813	                           shr eax, 0x13	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c39	          0x8d0480	                  lea eax, [rax + rax*4]	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c3c	             0x1c0	                            add eax, eax	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c3e	            0x29c6	                            sub esi, eax	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c40	          0x4409c6	                             or esi, r8d	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c43	        0x6683fe01	                               cmp si, 1	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c47	            0x7777	                            ja 0x4004cc0	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4004c49	        0x4983c202	                              add r10, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c4d	        0x4983c302	                              add r11, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c51	        0x4883c502	                              add rbp, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c55	          0x4d39ea	                            cmp r10, r13	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c58	     0xf8672feffff	                           jbe 0x4004ad0	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c5e	      0x4c2b542408	                sub r10, qword [rsp + 8]	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c63	          0x49d1fa	                              sar r10, 1	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c66	          0x4963c2	                        movsxd rax, r10d	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c69	      0x438d5452fe	              lea edx, [r10 + r10*2 - 2]	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c6e	      0x488d4400fe	                lea rax, [rax + rax - 2]	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004c73	      0x4803442408	                add rax, qword [rsp + 8]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4004c78	            0x7233	                            jb 0x4004cad	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4004c7a	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4004c7d	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4004c80	     0xf855a010000	                           jne 0x4004de0	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4004c86	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4004c89	      0x488b742408	                mov rsi, qword [rsp + 8]	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4004c8e	            0x741d	                            je 0x4004cad	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4004c90	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4004c94	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4004c97	          0x4839c6	                            cmp rsi, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4004c9a	            0x7711	                            ja 0x4004cad	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4004c9c	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4004c9f	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4004ca2	     0xf8538010000	                           jne 0x4004de0	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4004ca8	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4004cab	            0x75e3	                           jne 0x4004c90	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4004cad	            0x8913	                    mov dword [rbx], edx	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4004caf	    0xc74304000000	                  mov dword [rbx + 4], 0	       847	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cb6	        0xc6430800	                   mov byte [rbx + 8], 0	       848	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cba	            0xeb32	                           jmp 0x4004cee	       849	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cbc	         0xf1f4000	                         nop dword [rax]	       849	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cc0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       849	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cc5	           0xf1f00	                         nop dword [rax]	       849	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cc8	          0x4531db	                          xor r11d, r11d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004ccb	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004cd2	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004cd8	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004cdd	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4004ce1	      0xbe80000000	                           mov esi, 0x80	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4004ce6	          0x4889cf	                            mov rdi, rcx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4004ce9	      0xe800000000	                          call 0x4004cee	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4004cee	        0x4883c428	                           add rsp, 0x28	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cf2	          0x4889d8	                            mov rax, rbx	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cf5	              0x5b	                                 pop rbx	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cf6	              0x5d	                                 pop rbp	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cf7	            0x415c	                                 pop r12	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cf9	            0x415d	                                 pop r13	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cfb	            0x415e	                                 pop r14	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cfd	            0x415f	                                 pop r15	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004cff	              0xc3	                                     ret	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4004d00	          0x4939ec	                            cmp r12, rbp	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4004d03	            0x7233	                            jb 0x4004d38	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4004d05	         0xfb77500	                   movzx esi, word [rbp]	       825	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d09	            0x31c0	                            xor eax, eax	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d0b	        0x66418902	                      mov word [r10], ax	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d0f	          0x6685f6	                             test si, si	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004d12	     0xf8431ffffff	                            je 0x4004c49	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004d18	          0x4531c0	                            xor r8d, r8d	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d1b	            0x89f0	                            mov eax, esi	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d1d	      0xb90a000000	                            mov ecx, 0xa	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d22	            0x31d2	                            xor edx, edx	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d24	          0x66f7f1	                                  div cx	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d27	          0x4531f6	                          xor r14d, r14d	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d2a	          0x4189d7	                           mov r15d, edx	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d2d	      0xe90afeffff	                           jmp 0x4004b3c	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d32	    0x660f1f440000	                    nop word [rax + rax]	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4004d38	            0x31d2	                            xor edx, edx	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d3a	        0x66418912	                      mov word [r10], dx	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d3e	      0xe906ffffff	                           jmp 0x4004c49	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d43	       0xf1f440000	                   nop dword [rax + rax]	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d48	            0x31c9	                            xor ecx, ecx	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d4a	        0x664585c0	                           test r8w, r8w	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004d4e	        0x6641890a	                      mov word [r10], cx	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4004d52	     0xf84f1feffff	                            je 0x4004c49	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004d58	          0x4531f6	                          xor r14d, r14d	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004d5b	            0x31c0	                            xor eax, eax	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004d5d	          0x4531ff	                          xor r15d, r15d	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x4004d60	            0x31f6	                            xor esi, esi	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4004d62	      0xe9d5fdffff	                           jmp 0x4004b3c	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4004d67	    0x660f1f840000	                    nop word [rax + rax]	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4004d70	        0x448d4602	                      lea r8d, [rsi + 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d74	      0xba56555555	                     mov edx, 0x55555556	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d79	        0x4c8d730a	                    lea r14, [rbx + 0xa]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d7d	          0x4489c0	                            mov eax, r8d	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d80	        0x41c1f81f	                           sar r8d, 0x1f	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d84	            0xf7ea	                                imul edx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d86	          0x4429c2	                            sub edx, r8d	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d89	          0x4863c2	                         movsxd rax, edx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d8c	      0x4d8d6c46fe	              lea r13, [r14 + rax*2 - 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4004d91	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4004d95	      0xe913fdffff	                           jmp 0x4004aad	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4004d9a	    0x660f1f440000	                    nop word [rax + rax]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4004da0	          0x8d7002	                      lea esi, [rax + 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004da3	      0xba56555555	                     mov edx, 0x55555556	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004da8	            0x89f0	                            mov eax, esi	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004daa	            0xf7ea	                                imul edx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004dac	            0x89f0	                            mov eax, esi	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004dae	          0xc1f81f	                           sar eax, 0x1f	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004db1	            0x29c2	                            sub edx, eax	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004db3	          0x4863d2	                         movsxd rdx, edx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004db6	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004dbb	      0xe9c8fcffff	                           jmp 0x4004a88	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4004dc0	          0x8d7002	                      lea esi, [rax + 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004dc3	      0xba56555555	                     mov edx, 0x55555556	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004dc8	            0x89f0	                            mov eax, esi	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004dca	            0xf7ea	                                imul edx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004dcc	            0x89f0	                            mov eax, esi	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004dce	          0xc1f81f	                           sar eax, 0x1f	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004dd1	            0x29c2	                            sub edx, eax	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004dd3	          0x4863d2	                         movsxd rdx, edx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004dd6	      0x488d7c12fe	                lea rdi, [rdx + rdx - 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004ddb	      0xe98dfcffff	                           jmp 0x4004a6d	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4004de0	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4004de4	     0xf86c3feffff	                           jbe 0x4004cad	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4004dea	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4004ded	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4004df0	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4004df4	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4004df7	      0xe9b1feffff	                           jmp 0x4004cad	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4004dfc	      0xbafeffffff	                     mov edx, 0xfffffffe	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004e01	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4004e08	      0xe966feffff	                           jmp 0x4004c73	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
decNumberAbs	SWITCH,0:functions,0:IF,2:WHILE,0:CALL,5:FOR,0:DO,0:ELSE,0	50
0x4009880	              0x55	                                push rbp	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4009881	              0x53	                                push rbx	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4009882	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009884	          0x4889d5	                            mov rbp, rdx	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4009887	          0x4889fb	                            mov rbx, rdi	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x400988a	        0x4883ec38	                           sub rsp, 0x38	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x400988e	      0x440fb64608	               movzx r8d, byte [rsi + 8]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4009893	    0x64488b042528	                mov rax, qword fs:[0x28]	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x400989c	      0x4889442428	             mov qword [rsp + 0x28], rax	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098a1	            0x31c0	                            xor eax, eax	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098a3	          0x8b4604	                mov eax, dword [rsi + 4]	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098a6	      0x66894c241a	               mov word [rsp + 0x1a], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40098ab	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40098b0	          0x4889d1	                            mov rcx, rdx	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40098b3	          0x4889f2	                            mov rdx, rsi	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40098b6	      0x488d742410	                   lea rsi, [rsp + 0x10]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40098bb	    0x4181e0800000	                           and r8d, 0x80	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40098c2	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       741	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098ca	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40098cf	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40098d7	        0x89442414	             mov dword [rsp + 0x14], eax	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098db	      0xe870f7ffff	                       call sym.decAddOp	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40098e0	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x40098e4	            0x85f6	                           test esi, esi	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x40098e6	            0x7520	                           jne 0x4009908	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x40098e8	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098ed	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098f6	          0x4889d8	                            mov rax, rbx	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098f9	            0x754d	                           jne 0x4009948	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098fb	        0x4883c438	                           add rsp, 0x38	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x40098ff	              0x5b	                                 pop rbx	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4009900	              0x5d	                                 pop rbp	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4009901	              0xc3	                                     ret	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4009902	    0x660f1f440000	                    nop word [rax + rax]	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4009908	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400990c	            0x741f	                            je 0x400992d	      7736	decNumber.c	FUNCTION_24	IF_1
0x400990e	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009914	            0x752a	                           jne 0x4009940	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009916	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009918	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400991f	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009925	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009929	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400992d	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009930	      0xe800000000	                          call 0x4009935	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009935	            0xebb1	                           jmp 0x40098e8	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009937	    0x660f1f840000	                    nop word [rax + rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009940	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009946	            0xebe5	                           jmp 0x400992d	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009948	      0xe800000000	                          call 0x400994d	       755	decNumber.c	FUNCTION_68	FUNCTION_8
decNumberDivide	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	40
0x400b300	              0x55	                                push rbp	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b301	              0x53	                                push rbx	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b302	    0x41b880000000	                           mov r8d, 0x80	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x400b308	          0x4889fb	                            mov rbx, rdi	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b30b	          0x4889cd	                            mov rbp, rcx	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b30e	        0x4883ec18	                           sub rsp, 0x18	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b312	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x400b317	    0xc74424040000	                  mov dword [rsp + 4], 0	       993	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b31f	    0x64488b042528	                mov rax, qword fs:[0x28]	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b328	      0x4889442408	                mov qword [rsp + 8], rax	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b32d	            0x31c0	                            xor eax, eax	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b32f	      0xe87cefffff	                    call sym.decDivideOp	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x400b334	        0x8b742404	                mov esi, dword [rsp + 4]	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x400b338	            0x85f6	                           test esi, esi	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x400b33a	            0x7524	                           jne 0x400b360	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x400b33c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b341	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b34a	          0x4889d8	                            mov rax, rbx	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b34d	            0x7549	                           jne 0x400b398	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b34f	        0x4883c418	                           add rsp, 0x18	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b353	              0x5b	                                 pop rbx	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b354	              0x5d	                                 pop rbp	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b355	              0xc3	                                     ret	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400b360	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400b364	            0x741f	                            je 0x400b385	      7736	decNumber.c	FUNCTION_24	IF_1
0x400b366	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b36c	            0x7522	                           jne 0x400b390	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b36e	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b370	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b377	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b37d	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400b381	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400b385	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b388	      0xe800000000	                          call 0x400b38d	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b38d	            0xebad	                           jmp 0x400b33c	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b38f	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400b390	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b396	            0xebed	                           jmp 0x400b385	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400b398	      0xe800000000	                          call 0x400b39d	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
decNumberGetBCD	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,0:FOR,2:DO,0:ELSE,0	39
0x40122f0	          0x486307	                 movsxd rax, dword [rdi]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x40122f3	        0x4c8d4f0a	                     lea r9, [rdi + 0xa]	      3453	decNumber.c	FUNCTION_68	FUNCTION_56
0x40122f7	         0xfb77f0a	            movzx edi, word [rdi + 0xa] 	      3458	decNumber.c	FUNCTION_68	FUNCTION_56
0x40122fb	      0x4c8d4406ff	                 lea r8, [rsi + rax - 1]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4012300	          0x4c39c6	                             cmp rsi, r8	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012303	            0x7764	                            ja 0x4012369	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012305	            0x89f8	                            mov eax, edi	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012307	    0x41bacdcccccc	                    mov r10d, 0xcccccccd	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401230d	        0x4c8d5eff	                      lea r11, [rsi - 1]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012311	          0x41f7e2	                                mul r10d	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012314	          0xc1ea03	                              shr edx, 3	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012317	          0x8d0492	                  lea eax, [rdx + rdx*4]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401231a	            0x89d1	                            mov ecx, edx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401231c	             0x1c0	                            add eax, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401231e	            0x29c7	                            sub edi, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012320	          0x418838	                      mov byte [r8], dil	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012323	      0xbf02000000	                              mov edi, 2	      3463	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012328	     0xf1f84000000	                   nop dword [rax + rax]	      3463	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012330	        0x4983e801	                               sub r8, 1	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012334	          0x4d39d8	                             cmp r8, r11	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012337	            0x7430	                            je 0x4012369	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012339	            0x89c8	                            mov eax, ecx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401233b	          0x41f7e2	                                mul r10d	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401233e	          0xc1ea03	                              shr edx, 3	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012341	          0x8d0492	                  lea eax, [rdx + rdx*4]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012344	             0x1c0	                            add eax, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012346	            0x29c1	                            sub ecx, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012348	          0x83ef01	                              sub edi, 1	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x401234b	          0x418808	                       mov byte [r8], cl	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401234e	            0x89d1	                            mov ecx, edx	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012350	            0x75de	                           jne 0x4012330	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x4012352	        0x4983e801	                               sub r8, 1	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012356	      0x410fb74902	                movzx ecx, word [r9 + 2]	      3466	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401235b	        0x4983c102	                               add r9, 2	      3465	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x401235f	          0x4d39d8	                             cmp r8, r11	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012362	      0xbf03000000	                              mov edi, 3	      3467	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012367	            0x75d0	                           jne 0x4012339	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4012369	          0x4889f0	                            mov rax, rsi	      3471	decNumber.c	FUNCTION_68	FUNCTION_56
0x401236c	              0xc3	                                     ret	      3471	decNumber.c	FUNCTION_68	FUNCTION_56
decNumberCompareTotalMag	SWITCH,0:functions,0:IF,8:WHILE,0:CALL,11:FOR,0:DO,1:ELSE,0	218
0x40052d0	            0x4157	                                push r15	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052d2	            0x4156	                                push r14	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052d4	          0x4531f6	                          xor r14d, r14d	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052d7	            0x4155	                                push r13	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052d9	            0x4154	                                push r12	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052db	          0x4989fd	                            mov r13, rdi	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052de	              0x55	                                push rbp	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052df	              0x53	                                push rbx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052e0	          0x4889f5	                            mov rbp, rsi	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052e3	          0x4889d3	                            mov rbx, rdx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052e6	    0x4881ec880000	                           sub rsp, 0x88	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052ed	      0x440fb66608	              movzx r12d, byte [rsi + 8]	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x40052f2	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x40052fb	      0x4889442478	             mov qword [rsp + 0x78], rax	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005300	            0x31c0	                            xor eax, eax	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005302	        0x48890c24	                    mov qword [rsp], rcx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005306	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       928	decNumber.c	FUNCTION_68	FUNCTION_14
0x400530e	          0x4584e4	                         test r12b, r12b	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4005311	     0xf8819010000	                            js 0x4005430	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4005317	      0x440fb66308	              movzx r12d, byte [rbx + 8]	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x400531c	          0x4531ff	                          xor r15d, r15d	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x400531f	          0x4584e4	                         test r12b, r12b	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4005322	            0x786c	                            js 0x4005390	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4005324	        0x488b0c24	                    mov rcx, qword [rsp]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005328	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x400532d	          0x4889da	                            mov rdx, rbx	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005330	    0x41b804000000	                              mov r8d, 4	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005336	          0x4889ee	                            mov rsi, rbp	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005339	          0x4c89ef	                            mov rdi, r13	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x400533c	      0xe89fddffff	                   call sym.decCompareOp	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005341	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005345	          0x4c89f7	                            mov rdi, r14	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005348	      0xe800000000	                          call 0x400534d	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x400534d	          0x4c89ff	                            mov rdi, r15	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005350	      0xe800000000	                          call 0x4005355	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005355	            0x85db	                           test ebx, ebx	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005357	     0xf8593000000	                           jne 0x40053f0	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x400535d	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005362	    0x644833142528	                xor rdx, qword fs:[0x28]	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x400536b	          0x4c89e8	                            mov rax, r13	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x400536e	     0xf85c9020000	                           jne 0x400563d	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005374	    0x4881c4880000	                           add rsp, 0x88	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x400537b	              0x5b	                                 pop rbx	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x400537c	              0x5d	                                 pop rbp	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x400537d	            0x415c	                                 pop r12	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x400537f	            0x415d	                                 pop r13	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005381	            0x415e	                                 pop r14	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005383	            0x415f	                                 pop r15	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005385	              0xc3	                                     ret	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005386	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005390	          0x48630b	                 movsxd rcx, dword [rbx]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005393	          0x83f931	                           cmp ecx, 0x31	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005396	     0xf8fe4010000	                            jg 0x4005580	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400539c	          0x4863c1	                         movsxd rax, ecx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400539f	     0xfb680000000	                   movzx eax, byte [rax]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x40053a6	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x40053aa	          0x83ff24	                           cmp edi, 0x24	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40053ad	     0xf8635010000	                           jbe 0x40054e8	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40053b3	        0x894c2408	                mov dword [rsp + 8], ecx	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40053b7	      0xe800000000	                          call 0x40053bc	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40053bc	          0x4885c0	                           test rax, rax	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40053bf	          0x4989c7	                            mov r15, rax	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x40053c2	      0x48634c2408	            movsxd rcx, dword [rsp + 8] 	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40053c7	     0xf8443020000	                            je 0x4005610	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x40053cd	          0x4839c3	                            cmp rbx, rax	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x40053d0	          0x4989c0	                             mov r8, rax	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x40053d3	     0xf8517010000	                           jne 0x40054f0	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x40053d9	        0x4183e47f	                          and r12d, 0x7f	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40053dd	          0x4c89c3	                             mov rbx, r8	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40053e0	        0x45886008	                 mov byte [r8 + 8], r12b	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40053e4	      0xe93bffffff	                           jmp 0x4005324	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40053e9	     0xf1f80000000	                         nop dword [rax]	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40053f0	          0xf6c3dd	                           test bl, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40053f3	            0x7428	                            je 0x400541d	      7736	decNumber.c	FUNCTION_24	IF_1
0x40053f5	    0xf7c300000040	                    test ebx, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40053fb	     0xf85df010000	                           jne 0x40055e0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4005401	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005403	    0x41c745040000	                  mov dword [r13 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400540b	    0x41c745000100	                      mov dword [r13], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005413	      0x664189450a	                mov word [r13 + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005418	      0x41c6450820	                mov byte [r13 + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400541d	        0x488b3c24	                    mov rdi, qword [rsp]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005421	            0x89de	                            mov esi, ebx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005423	      0xe800000000	                          call 0x4005428	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005428	      0xe930ffffff	                           jmp 0x400535d	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400542d	           0xf1f00	                         nop dword [rax]	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005430	          0x486336	                 movsxd rsi, dword [rsi]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005433	          0x83fe31	                           cmp esi, 0x31	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005436	     0xf8e64010000	                           jle 0x40055a0	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400543c	          0x8d4e02	                      lea ecx, [rsi + 2]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400543f	      0xba56555555	                     mov edx, 0x55555556	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005444	            0x89c8	                            mov eax, ecx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005446	          0xc1f91f	                           sar ecx, 0x1f	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005449	            0xf7ea	                                imul edx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400544b	            0x29ca	                            sub edx, ecx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400544d	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005451	          0x83ff24	                           cmp edi, 0x24	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005454	     0xf865d010000	                           jbe 0x40055b7	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x400545a	        0x89742408	                mov dword [rsp + 8], esi	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x400545e	      0xe800000000	                          call 0x4005463	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005463	          0x4885c0	                           test rax, rax	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x4005466	          0x4989c7	                            mov r15, rax	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005469	      0x4863742408	            movsxd rsi, dword [rsp + 8] 	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x400546e	     0xf84bc010000	                            je 0x4005630	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x4005474	          0x4839c5	                            cmp rbp, rax	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4005477	          0x4989c6	                            mov r14, rax	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400547a	            0x7457	                            je 0x40054d3	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x400547c	          0x8b4504	                mov eax, dword [rbp + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400547f	          0x83fe03	                              cmp esi, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005482	        0x45886708	                mov byte [r15 + 8], r12b	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005486	          0x418937	                    mov dword [r15], esi	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005489	        0x41894704	                mov dword [r15 + 4], eax	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400548d	         0xfb7450a	            movzx eax, word [rbp + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005491	      0x664189470a	                mov word [r15 + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005496	            0x7e3b	                           jle 0x40054d3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005498	          0x83fe31	                           cmp esi, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400549b	        0x488d7d0a	                    lea rdi, [rbp + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400549f	     0xf8f4b010000	                            jg 0x40055f0	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40054a5	     0xfb686000000	                   movzx eax, byte [rsi]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40054ac	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40054af	        0x488d750c	                    lea rsi, [rbp + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054b3	          0x4801f8	                            add rax, rdi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40054b6	          0x4839f0	                            cmp rax, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054b9	            0x7618	                           jbe 0x40054d3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054bb	          0x4829e8	                            sub rax, rbp	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054be	        0x498d7f0c	                    lea rdi, [r15 + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054c2	        0x4883e80d	                            sub rax, 0xd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054c6	          0x48d1e8	                              shr rax, 1	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054c9	      0x488d540002	                lea rdx, [rax + rax + 2]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054ce	      0xe800000000	                          call 0x40054d3	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40054d3	        0x4183e47f	                          and r12d, 0x7f	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40054d7	          0x4c89fd	                            mov rbp, r15	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40054da	        0x45886708	                mov byte [r15 + 8], r12b	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40054de	      0xe934feffff	                           jmp 0x4005317	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40054e3	       0xf1f440000	                   nop dword [rax + rax]	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40054e8	      0x4c8d442450	                    lea r8, [rsp + 0x50]	       957	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x40054ed	          0x4531ff	                          xor r15d, r15d	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x40054f0	          0x8b4304	                mov eax, dword [rbx + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x40054f3	          0x83f903	                              cmp ecx, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x40054f6	        0x45886008	                 mov byte [r8 + 8], r12b	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x40054fa	          0x418908	                     mov dword [r8], ecx	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x40054fd	        0x41894004	                 mov dword [r8 + 4], eax	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005501	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4005505	      0x664189400a	                 mov word [r8 + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400550a	     0xf8ec9feffff	                           jle 0x40053d9	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4005510	          0x83f931	                           cmp ecx, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005513	        0x488d730a	                    lea rsi, [rbx + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005517	     0xf8eab000000	                           jle 0x40055c8	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400551d	          0x83c102	                              add ecx, 2	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005520	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005525	            0x89c8	                            mov eax, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005527	          0xc1f91f	                           sar ecx, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400552a	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400552c	            0x29ca	                            sub edx, ecx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400552e	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005531	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005534	          0x4801f0	                            add rax, rsi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005537	        0x488d730c	                    lea rsi, [rbx + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400553b	          0x4839f0	                            cmp rax, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400553e	     0xf8695feffff	                           jbe 0x40053d9	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005544	          0x4829d8	                            sub rax, rbx	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005547	        0x498d780c	                     lea rdi, [r8 + 0xc]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x400554b	      0x4c89442408	                 mov qword [rsp + 8], r8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005550	        0x4883e80d	                            sub rax, 0xd	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4005554	        0x4183e47f	                          and r12d, 0x7f	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005558	          0x48d1e8	                              shr rax, 1	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x400555b	      0x488d540002	                lea rdx, [rax + rax + 2]	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005560	      0xe800000000	                          call 0x4005565	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005565	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x400556a	        0x45886008	                 mov byte [r8 + 8], r12b	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x400556e	          0x4c89c3	                             mov rbx, r8	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005571	      0xe9aefdffff	                           jmp 0x4005324	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005576	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005580	          0x8d7102	                      lea esi, [rcx + 2]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005583	      0xba56555555	                     mov edx, 0x55555556	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005588	            0x89f0	                            mov eax, esi	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400558a	          0xc1fe1f	                           sar esi, 0x1f	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400558d	            0xf7ea	                                imul edx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400558f	            0x29f2	                            sub edx, esi	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005591	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005595	      0xe910feffff	                           jmp 0x40053aa	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400559a	    0x660f1f440000	                    nop word [rax + rax]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x40055a0	          0x4863c6	                         movsxd rax, esi	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40055a3	     0xfb680000000	                   movzx eax, byte [rax]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40055aa	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40055ae	          0x83ff24	                           cmp edi, 0x24	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40055b1	     0xf87a3feffff	                            ja 0x400545a	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40055b7	      0x4c8d7c2420	                   lea r15, [rsp + 0x20]	       943	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40055bc	          0x4531f6	                          xor r14d, r14d	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055bf	      0xe9b8feffff	                           jmp 0x400547c	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055c4	         0xf1f4000	                         nop dword [rax]	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055c8	     0xfb681000000	                   movzx eax, byte [rcx]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055cf	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055d2	      0xe95dffffff	                           jmp 0x4005534	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055d7	    0x660f1f840000	                    nop word [rax + rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055e0	    0x81e3ffffffbf	                     and ebx, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40055e6	      0xe932feffff	                           jmp 0x400541d	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40055eb	       0xf1f440000	                   nop dword [rax + rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40055f0	          0x83c602	                              add esi, 2	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055f3	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055f8	            0x89f0	                            mov eax, esi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055fa	          0xc1fe1f	                           sar esi, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055fd	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40055ff	            0x29f2	                            sub edx, esi	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005601	          0x4863c2	                         movsxd rax, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005604	          0x4801c0	                            add rax, rax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005607	      0xe9a3feffff	                           jmp 0x40054af	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400560c	         0xf1f4000	                         nop dword [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4005610	    0xc744241c1000	           mov dword [rsp + 0x1c], 0x10 	       962	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x4005618	          0x4c89f7	                            mov rdi, r14	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x400561b	      0xbb10000000	                           mov ebx, 0x10	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005620	      0xe800000000	                          call 0x4005625	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005625	      0xe9cbfdffff	                           jmp 0x40053f5	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x400562a	    0x660f1f440000	                    nop word [rax + rax]	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005630	    0xc744241c1000	           mov dword [rsp + 0x1c], 0x10 	       948	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x4005638	          0x4531f6	                          xor r14d, r14d	       949	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x400563b	            0xebdb	                           jmp 0x4005618	       949	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x400563d	      0xe800000000	                          call 0x4005642	       977	decNumber.c	FUNCTION_68	FUNCTION_14
decNumberCompareTotal	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,2:FOR,0:DO,0:ELSE,0	174
0x4005040	            0x4154	                                push r12	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005042	              0x55	                                push rbp	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005043	          0x4889f5	                            mov rbp, rsi	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005046	              0x53	                                push rbx	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005047	          0x4989d4	                            mov r12, rdx	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x400504a	          0x4889fb	                            mov rbx, rdi	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x400504d	        0x4883ec10	                           sub rsp, 0x10	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005051	         0xfb67608	               movzx esi, byte [rsi + 8]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4005055	         0xfb65208	               movzx edx, byte [rdx + 8]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4005059	          0x4084f6	                           test sil, sil	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400505c	            0x793a	                           jns 0x4005098	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400505e	            0x84d2	                             test dl, dl	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4005060	      0xb8ffffffff	                     mov eax, 0xffffffff	      6033	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8
0x4005065	            0x7831	                            js 0x4005098	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4005067	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400506b	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005072	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005078	      0xb901000000	                              mov ecx, 1	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400507d	            0x85c0	                           test eax, eax	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400507f	        0x66894b0a	                mov word [rbx + 0xa], cx	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4005083	     0xf88df010000	                            js 0x4005268	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4005089	        0x4883c410	                           add rsp, 0x10	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400508d	          0x4889d8	                            mov rax, rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005090	              0x5b	                                 pop rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005091	              0x5d	                                 pop rbp	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005092	            0x415c	                                 pop r12	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005094	              0xc3	                                     ret	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005095	           0xf1f00	                         nop dword [rax]	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005098	          0x4084f6	                           test sil, sil	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400509b	            0x7809	                            js 0x40050a6	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400509d	            0x84d2	                             test dl, dl	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400509f	      0xb801000000	                              mov eax, 1	      6037	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9
0x40050a4	            0x78c1	                            js 0x4005067	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x40050a6	            0x89f0	                            mov eax, esi	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40050a8	             0x9d0	                             or eax, edx	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40050aa	            0xa830	                           test al, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40050ac	     0xf843e010000	                            je 0x40051f0	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40050b2	        0x40f6c630	                          test sil, 0x30	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40050b6	      0xb901000000	                              mov ecx, 1	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40050bb	      0xb8ffffffff	                     mov eax, 0xffffffff	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40050c0	     0xf84d2000000	                            je 0x4005198	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40050c6	          0xf6c230	                           test dl, 0x30	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x40050c9	            0x89c1	                            mov ecx, eax	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x40050cb	      0xb801000000	                              mov eax, 1	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x40050d0	     0xf84c2000000	                            je 0x4005198	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x40050d6	        0x40f6c610	                          test sil, 0x10	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40050da	            0x7413	                            je 0x40050ef	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40050dc	          0xf6c220	                           test dl, 0x20	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40050df	      0xb901000000	                              mov ecx, 1	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40050e4	      0xb8ffffffff	                     mov eax, 0xffffffff	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40050e9	     0xf85a9000000	                           jne 0x4005198	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40050ef	        0x40f6c620	                          test sil, 0x20	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x40050f3	            0x7413	                            je 0x4005108	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x40050f5	          0x83e210	                           and edx, 0x10	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x40050f8	      0xb9ffffffff	                     mov ecx, 0xffffffff	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x40050fd	      0xb801000000	                              mov eax, 1	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x4005102	     0xf8590000000	                           jne 0x4005198	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x4005108	        0x49630424	                 movsxd rax, dword [r12]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400510c	          0x83f831	                           cmp eax, 0x31	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400510f	     0xf8f74010000	                            jg 0x4005289	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005115	     0xfb6b8000000	                   movzx edi, byte [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400511c	        0x48634500	                 movsxd rax, dword [rbp]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005120	          0x83f831	                           cmp eax, 0x31	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005123	     0xf8f48010000	                            jg 0x4005271	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005129	     0xfb690000000	                   movzx edx, byte [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005130	            0x39fa	                            cmp edx, edi	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x4005132	      0xb9ffffffff	                     mov ecx, 0xffffffff	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x4005137	      0xb801000000	                              mov eax, 1	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400513c	            0x7f5a	                            jg 0x4005198	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x400513e	     0xf8c5f010000	                            jl 0x40052a3	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x4005144	          0x4863d2	                         movsxd rdx, edx	      6240	decNumber.c	FUNCTION_4	IF_1
0x4005147	        0x4c8d450a	                     lea r8, [rbp + 0xa]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400514b	      0x488d5412fe	                lea rdx, [rdx + rdx - 2]	      6240	decNumber.c	FUNCTION_4	IF_1
0x4005150	      0x498d7c140a	              lea rdi, [r12 + rdx + 0xa]	      6241	decNumber.c	FUNCTION_4	IF_1
0x4005155	          0x4c01c2	                             add rdx, r8	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x4005158	            0x7235	                            jb 0x400518f	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400515a	        0x440fb70a	                   movzx r9d, word [rdx]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400515e	        0x6644390f	                     cmp word [rdi], r9w	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x4005162	            0x7234	                            jb 0x4005198	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x4005164	            0x761c	                           jbe 0x4005182	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x4005166	      0xe938010000	                           jmp 0x40052a3	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400516b	       0xf1f440000	                   nop dword [rax + rax]	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x4005170	           0xfb707	                   movzx eax, word [rdi]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x4005173	          0x663902	                      cmp word [rdx], ax	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x4005176	     0xf8736010000	                            ja 0x40052b2	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400517c	     0xf8221010000	                            jb 0x40052a3	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x4005182	        0x4883ea02	                              sub rdx, 2	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x4005186	        0x4883ef02	                              sub rdi, 2	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400518a	          0x4939d0	                             cmp r8, rdx	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400518d	            0x76e1	                           jbe 0x4005170	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x400518f	            0x31c9	                            xor ecx, ecx	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x4005191	            0x31c0	                            xor eax, eax	      6246	decNumber.c	FUNCTION_4	IF_1
0x4005193	       0xf1f440000	                   nop dword [rax + rax]	      6246	decNumber.c	FUNCTION_4	IF_1
0x4005198	          0x4084f6	                           test sil, sil	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400519b	           0xf48c1	                          cmovs eax, ecx	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400519e	            0x85c0	                           test eax, eax	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x40051a0	     0xf85c1feffff	                           jne 0x4005067	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x40051a6	      0x418b442404	                mov eax, dword [r12 + 4]	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x40051ab	          0x394504	                cmp dword [rbp + 4], eax	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x40051ae	     0xf848c000000	                            je 0x4005240	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x40051b4	           0xf9cc2	                                 setl dl	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x40051b7	           0xf9dc0	                                setge al	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x40051ba	        0x807d0800	                   cmp byte [rbp + 8], 0	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x40051be	           0xfb6d2	                           movzx edx, dl	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x40051c1	           0xfb6c0	                           movzx eax, al	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x40051c4	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40051c8	        0x8d5412ff	                lea edx, [rdx + rdx - 1]	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x40051cc	        0x8d4400ff	                lea eax, [rax + rax - 1]	      6094	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	IF_27
0x40051d0	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40051d7	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40051dd	     0xf8995feffff	                           jns 0x4005078	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x40051e3	            0x89d0	                            mov eax, edx	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x40051e5	      0xe98efeffff	                           jmp 0x4005078	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x40051ea	    0x660f1f440000	                    nop word [rax + rax]	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x40051f0	            0x31d2	                            xor edx, edx	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40051f2	          0x4c89e6	                            mov rsi, r12	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40051f5	          0x4889ef	                            mov rdi, rbp	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40051f8	      0x48894c2408	                mov qword [rsp + 8], rcx	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40051fd	      0xe85ecaffff	                     call sym.decCompare	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4005202	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x4005207	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6087	decNumber.c	FUNCTION_2	IF_23
0x400520c	            0x7590	                           jne 0x400519e	      6087	decNumber.c	FUNCTION_2	IF_23
0x400520e	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005210	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005217	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400521d	        0x6689530a	                mov word [rbx + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005221	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4005225	      0xbe10000000	                           mov esi, 0x10	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400522a	          0x4889cf	                            mov rdi, rcx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400522d	      0xe800000000	                          call 0x4005232	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005232	        0x4883c410	                           add rsp, 0x10	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005236	          0x4889d8	                            mov rax, rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005239	              0x5b	                                 pop rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400523a	              0x5d	                                 pop rbp	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400523b	            0x415c	                                 pop r12	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400523d	              0xc3	                                     ret	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400523e	            0x6690	                                     nop	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005240	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005242	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005246	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400524d	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005251	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005257	        0x4883c410	                           add rsp, 0x10	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400525b	          0x4889d8	                            mov rax, rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400525e	              0x5b	                                 pop rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400525f	              0x5d	                                 pop rbp	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005260	            0x415c	                                 pop r12	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005262	              0xc3	                                     ret	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005263	       0xf1f440000	                   nop dword [rax + rax]	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4005268	        0xc6430880	                mov byte [rbx + 8], 0x80	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400526c	      0xe918feffff	                           jmp 0x4005089	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4005271	          0x8d4802	                      lea ecx, [rax + 2]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005274	      0xba56555555	                     mov edx, 0x55555556	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005279	            0x89c8	                            mov eax, ecx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400527b	            0xf7ea	                                imul edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400527d	            0x89c8	                            mov eax, ecx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400527f	          0xc1f81f	                           sar eax, 0x1f	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005282	            0x29c2	                            sub edx, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005284	      0xe9a7feffff	                           jmp 0x4005130	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005289	          0x8d4802	                      lea ecx, [rax + 2]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400528c	      0xba56555555	                     mov edx, 0x55555556	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005291	            0x89c8	                            mov eax, ecx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005293	            0xf7ea	                                imul edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005295	            0x89c8	                            mov eax, ecx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4005297	          0xc1f81f	                           sar eax, 0x1f	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400529a	            0x89d7	                            mov edi, edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400529c	            0x29c7	                            sub edi, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400529e	      0xe979feffff	                           jmp 0x400511c	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40052a3	      0xb901000000	                              mov ecx, 1	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x40052a8	      0xb8ffffffff	                     mov eax, 0xffffffff	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40052ad	      0xe9e6feffff	                           jmp 0x4005198	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40052b2	      0xb9ffffffff	                     mov ecx, 0xffffffff	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40052b7	      0xb801000000	                              mov eax, 1	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x40052bc	      0xe9d7feffff	                           jmp 0x4005198	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
decNumberTrim	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	37
0x40124a0	              0x53	                                push rbx	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x40124a1	          0x4889fb	                            mov rbx, rdi	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x40124a4	            0x31f6	                            xor esi, esi	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x40124a6	        0x4883ec40	                           sub rsp, 0x40	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x40124aa	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x40124af	    0x64488b042528	                mov rax, qword fs:[0x28]	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x40124b8	      0x4889442438	             mov qword [rsp + 0x38], rax	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x40124bd	            0x31c0	                            xor eax, eax	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x40124bf	      0xe800000000	                          call 0x40124c4	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x40124c4	        0xf6430870	               test byte [rbx + 8], 0x70	      6596	decNumber.c	FUNCTION_6	IF_2
0x40124c8	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      6595	decNumber.c	FUNCTION_6
0x40124d0	            0x751e	                           jne 0x40124f0	      6596	decNumber.c	FUNCTION_6	IF_2
0x40124d2	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      6597	decNumber.c	FUNCTION_6	IF_2
0x40124d6	            0xa801	                              test al, 1	      6597	decNumber.c	FUNCTION_6	IF_2
0x40124d8	            0x7516	                           jne 0x40124f0	      6597	decNumber.c	FUNCTION_6	IF_2
0x40124da	          0x6685c0	                             test ax, ax	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x40124dd	            0x7531	                           jne 0x4012510	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x40124df	          0x833b01	                      cmp dword [rbx], 1	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x40124e2	            0x752c	                           jne 0x4012510	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x40124e4	    0xc74304000000	                  mov dword [rbx + 4], 0	      6599	decNumber.c	FUNCTION_6	IF_3
0x40124eb	       0xf1f440000	                   nop dword [rax + rax]	      6599	decNumber.c	FUNCTION_6	IF_3
0x40124f0	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x40124f5	    0x644833142528	                xor rdx, qword fs:[0x28]	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x40124fe	          0x4889d8	                            mov rax, rbx	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012501	            0x7528	                           jne 0x401252b	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012503	        0x4883c440	                           add rsp, 0x40	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012507	              0x5b	                                 pop rbx	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012508	              0xc3	                                     ret	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012509	     0xf1f80000000	                         nop dword [rax]	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012510	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012515	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x401251a	      0xb901000000	                              mov ecx, 1	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x401251f	            0x31d2	                            xor edx, edx	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012521	          0x4889df	                            mov rdi, rbx	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012524	      0xe837edfeff	                 call sym.decTrim.part.2	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4012529	            0xebc5	                           jmp 0x40124f0	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x401252b	      0xe800000000	               call sym.decNumberVersion	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
decNumberSquareRoot	SWITCH,0:functions,0:IF,29:WHILE,0:CALL,51:FOR,1:DO,1:ELSE,8	517
0x400c8c0	            0x4157	                                push r15	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8c2	            0x4156	                                push r14	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8c4	          0x4989d7	                            mov r15, rdx	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8c7	            0x4155	                                push r13	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8c9	            0x4154	                                push r12	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8cb	          0x4989f6	                            mov r14, rsi	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8ce	              0x55	                                push rbp	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8cf	              0x53	                                push rbx	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8d0	    0x4881ec580100	                          sub rsp, 0x158	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8d7	    0x64488b042528	                mov rax, qword fs:[0x28]	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8e0	    0x488984244801	            mov qword [rsp + 0x148], rax	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8e8	            0x31c0	                            xor eax, eax	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8ea	         0xfb64608	               movzx eax, byte [rsi + 8]	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x400c8ee	      0x48897c2408	                mov qword [rsp + 8], rdi	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8f3	    0xc74424480000	               mov dword [rsp + 0x48], 0	      2803	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c8fb	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      2804	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c903	    0xc74424500000	               mov dword [rsp + 0x50], 0	      2804	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c90b	            0xa870	                           test al, 0x70	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x400c90d	     0xf847d000000	                            je 0x400c990	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x400c913	            0xa840	                           test al, 0x40	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x400c915	     0xf8435060000	                            je 0x400cf50	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x400c91b	            0x84c0	                             test al, al	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x400c91d	     0xf888d050000	                            js 0x400ceb0	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x400c923	      0xe800000000	                          call 0x400c928	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x400c928	        0x8b5c244c	            mov ebx, dword [rsp + 0x4c] 	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x400c92c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c935	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c93e	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c947	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c94c	      0xe800000000	                          call 0x400c951	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c951	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c956	      0xe800000000	                          call 0x400c95b	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c95b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c960	      0xe800000000	                          call 0x400c965	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c965	            0x85db	                           test ebx, ebx	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x400c967	     0xf849c050000	                            je 0x400cf09	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x400c96d	          0xf6c3dd	                           test bl, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400c970	     0xf8489050000	                            je 0x400ceff	      7736	decNumber.c	FUNCTION_24	IF_1
0x400c976	    0xf7c300000040	                    test ebx, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c97c	     0xf844e060000	                            je 0x400cfd0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c982	    0x81e3ffffffbf	                     and ebx, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c988	      0xe972050000	                           jmp 0x400ceff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c98d	           0xf1f00	                         nop dword [rax]	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400c990	          0x8b7604	                mov esi, dword [rsi + 4]	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400c993	            0xd1fe	                              sar esi, 1	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400c995	    0x6641837e0a00	                 cmp word [r14 + 0xa], 0	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400c99b	        0x89742438	             mov dword [rsp + 0x38], esi	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400c99f	     0xf84b3040000	                            je 0x400ce58	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400c9a5	            0x84c0	                             test al, al	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x400c9a7	     0xf8803050000	                            js 0x400ceb0	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x400c9ad	          0x496306	                 movsxd rax, dword [r14]	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x400c9b0	          0x418b37	                    mov esi, dword [r15]	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x400c9b3	      0xba07000000	                              mov edx, 7	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x400c9b8	          0x8d4e01	                      lea ecx, [rsi + 1]	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x400c9bb	          0x83f807	                              cmp eax, 7	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x400c9be	           0xf4dd0	                         cmovge edx, eax	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x400c9c1	            0x39d1	                            cmp ecx, edx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x400c9c3	           0xf4dd1	                         cmovge edx, ecx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x400c9c6	          0x83f831	                           cmp eax, 0x31	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9c9	        0x8954242c	             mov dword [rsp + 0x2c], edx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x400c9cd	        0x448d6202	                     lea r12d, [rdx + 2]	      2888	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400c9d1	     0xf8e69050000	                           jle 0x400cf40	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9d7	          0x8d4802	                      lea ecx, [rax + 2]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9da	      0xba56555555	                     mov edx, 0x55555556	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9df	            0x89c8	                            mov eax, ecx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9e1	            0xf7ea	                                imul edx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9e3	            0x89c8	                            mov eax, ecx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9e5	          0xc1f81f	                           sar eax, 0x1f	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9e8	            0x29c2	                            sub edx, eax	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9ea	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400c9ee	          0x83ff24	                           cmp edi, 0x24	      2891	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400c9f1	    0x4c8dac24c000	                   lea r13, [rsp + 0xc0]	      2823	decNumber.c	FUNCTION_68	FUNCTION_45
0x400c9f9	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400ca02	     0xf8f30060000	                            jg 0x400d038	      2891	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400ca08	        0x4183fc31	                          cmp r12d, 0x31	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400ca0c	     0xf8f9e050000	                            jg 0x400cfb0	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400ca12	          0x4963c4	                        movsxd rax, r12d	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400ca15	     0xfb680000000	                   movzx eax, byte [rax]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400ca1c	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400ca20	          0x83ff24	                           cmp edi, 0x24	      2900	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca23	     0xf8e5f050000	                           jle 0x400cf88	      2900	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca29	          0x4863df	                         movsxd rbx, edi	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca2c	          0x4889df	                            mov rdi, rbx	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca2f	      0xe800000000	                          call 0x400ca34	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca34	          0x4889df	                            mov rdi, rbx	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca37	          0x4889c5	                            mov rbp, rax	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca3a	      0x4889442418	             mov qword [rsp + 0x18], rax	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca3f	      0xe800000000	                          call 0x400ca44	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca44	          0x4885ed	                           test rbp, rbp	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400ca47	      0x4889442420	             mov qword [rsp + 0x20], rax	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400ca4c	          0x4889eb	                            mov rbx, rbp	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400ca4f	     0xf842b060000	                            je 0x400d080	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400ca55	          0x4885c0	                           test rax, rax	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400ca58	          0x4889c5	                            mov rbp, rax	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400ca5b	     0xf841f060000	                            je 0x400d080	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400ca61	          0x4c89f6	                            mov rsi, r14	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x400ca64	          0x4c89ef	                            mov rdi, r13	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x400ca67	      0xe800000000	                          call 0x400ca6c	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x400ca6c	        0x418b4500	                    mov eax, dword [r13]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ca70	        0x418b7504	                mov esi, dword [r13 + 4]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ca74	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x400ca79	             0x1c6	                            add esi, eax	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ca7b	            0xf7d8	                                 neg eax	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ca7d	        0x89742430	             mov dword [rsp + 0x30], esi	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ca81	        0x41894504	                mov dword [r13 + 4], eax	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ca85	      0xbe40000000	                           mov esi, 0x40	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x400ca8a	      0xe800000000	                          call 0x400ca8f	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x400ca8f	      0xf644243001	               test byte [rsp + 0x30], 1	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400ca94	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2924	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ca98	    0xc7442464ffc9	     mov dword [rsp + 0x64], 0x3b9ac9ff 	      2917	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400caa0	    0xc74424680136	     mov dword [rsp + 0x68], 0xc4653601 	      2918	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400caa8	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cab0	    0xc78424b00000	               mov dword [rsp + 0xb0], 3	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cabb	        0x89442460	             mov dword [rsp + 0x60], eax	      2924	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cabf	        0xc6430800	                   mov byte [rbx + 8], 0	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cac3	    0xc70303000000	                      mov dword [rbx], 3	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cac9	     0xf8529050000	                           jne 0x400cff8	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400cacf	    0x41bb03010000	                         mov r11d, 0x103	      2932	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400cad5	      0xb833030000	                          mov eax, 0x333	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400cada	    0xc78424b40000	     mov dword [rsp + 0xb4], 0xfffffffd 	      2929	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400cae5	    0xc74304fdffff	        mov dword [rbx + 4], 0xfffffffd 	      2930	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400caec	    0x6644899c24ba	             mov word [rsp + 0xba], r11w	      2932	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400caf5	        0x6689430a	                mov word [rbx + 0xa], ax	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400caf9	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400cafe	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400cb03	          0x4c89ea	                            mov rdx, r13	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400cb06	          0x4889de	                            mov rsi, rbx	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400cb09	          0x4889df	                            mov rdi, rbx	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400cb0c	      0xe8cf6affff	                  call sym.decMultiplyOp	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400cb11	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x400cb16	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x400cb1b	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x400cb23	          0x4531c0	                            xor r8d, r8d	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x400cb26	          0x4889df	                            mov rdi, rbx	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x400cb29	          0x4889de	                            mov rsi, rbx	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x400cb2c	      0xe81fc5ffff	                       call sym.decAddOp	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x400cb31	            0x31ff	                            xor edi, edi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cb33	    0x41b805000000	                              mov r8d, 5	      2968	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cb39	    0xc68424a80000	                mov byte [rsp + 0xa8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cb41	    0xc78424a40000	               mov dword [rsp + 0xa4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cb4c	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cb57	      0xb803000000	                              mov eax, 3	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cb5c	    0x6689bc24aa00	               mov word [rsp + 0xaa], di	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cb64	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cb6c	    0xc78424b00000	               mov dword [rsp + 0xb0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cb77	    0x6644898424ba	              mov word [rsp + 0xba], r8w	      2968	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cb80	    0xc78424b40000	     mov dword [rsp + 0xb4], 0xffffffff 	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cb8b	       0xf1f440000	                   nop dword [rax + rax]	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cb90	        0x8d4400fe	                lea eax, [rax + rax - 2]	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x400cb94	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400cb99	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400cb9e	    0x41b880000000	                           mov r8d, 0x80	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400cba4	          0x4889da	                            mov rdx, rbx	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400cba7	          0x4c89ee	                            mov rsi, r13	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400cbaa	          0x4439e0	                           cmp eax, r12d	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x400cbad	          0x4889ef	                            mov rdi, rbp	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400cbb0	        0x410f4fc4	                         cmovg eax, r12d	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x400cbb4	        0x89442460	             mov dword [rsp + 0x60], eax	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x400cbb8	      0xe8f3d6ffff	                    call sym.decDivideOp	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400cbbd	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400cbc2	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400cbc7	          0x4531c0	                            xor r8d, r8d	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400cbca	          0x4889da	                            mov rdx, rbx	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400cbcd	          0x4889ee	                            mov rsi, rbp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400cbd0	          0x4889ef	                            mov rdi, rbp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400cbd3	      0xe878c4ffff	                       call sym.decAddOp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400cbd8	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400cbdd	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400cbe2	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400cbea	          0x4889ee	                            mov rsi, rbp	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400cbed	          0x4889df	                            mov rdi, rbx	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400cbf0	      0xe8eb69ffff	                  call sym.decMultiplyOp	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400cbf5	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x400cbf9	          0x4139c4	                           cmp r12d, eax	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x400cbfc	            0x7f92	                            jg 0x400cb90	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x400cbfe	          0x498b07	                    mov rax, qword [r15]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc01	            0x8b0b	                    mov ecx, dword [rbx]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc03	      0x4c8d4c2454	                    lea r9, [rsp + 0x54]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc08	      0x4c8d442448	                    lea r8, [rsp + 0x48]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc0d	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc15	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc18	    0xc74424540000	               mov dword [rsp + 0x54], 0	      2988	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc20	    0xc74424480000	               mov dword [rsp + 0x48], 0	      2989	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc28	    0x488984248000	             mov qword [rsp + 0x80], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc30	        0x498b4708	                mov rax, qword [r15 + 8]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc34	    0x488984248800	             mov qword [rsp + 0x88], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc3c	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc40	    0xc784248c0000	               mov dword [rsp + 0x8c], 3	      2986	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc4b	    0x488984249000	             mov qword [rsp + 0x90], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc53	        0x418b4718	            mov eax, dword [r15 + 0x18] 	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc57	    0x898424980000	             mov dword [rsp + 0x98], eax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc5e	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc62	          0x4189c4	                           mov r12d, eax	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc65	        0x41c1ec1f	                          shr r12d, 0x1f	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc69	          0x4101c4	                           add r12d, eax	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc6c	        0x488d430a	                    lea rax, [rbx + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc70	          0x41d1fc	                             sar r12d, 1	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc73	        0x44016304	               add dword [rbx + 4], r12d	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc77	          0x4889c2	                            mov rdx, rax	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc7a	      0x4889442430	             mov qword [rsp + 0x30], rax	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc7f	      0xe81c47ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400cc84	      0x488d4c2454	                   lea rcx, [rsp + 0x54]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc89	      0x488d542448	                   lea rdx, [rsp + 0x48]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc8e	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc96	          0x4889df	                            mov rdi, rbx	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc99	      0xe85260ffff	                    call sym.decFinalize	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cc9e	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x400cca2	          0xf6c402	                              test ah, 2	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x400cca5	     0xf858d010000	                           jne 0x400ce38	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x400ccab	      0x25dff7ffff	                     and eax, 0xfffff7df	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ccb0	         0x944244c	              or dword [rsp + 0x4c], eax	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ccb4	          0x4489e0	                           mov eax, r12d	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ccb7	            0xf7d8	                                 neg eax	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ccb9	           0x14304	                add dword [rbx + 4], eax	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ccbc	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400ccc1	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ccc5	            0x8b03	                    mov eax, dword [rbx]	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ccc7	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400cccc	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400ccd4	    0x41b880000000	                           mov r8d, 0x80	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400ccda	          0x4889de	                            mov rsi, rbx	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400ccdd	          0x4889ef	                            mov rdi, rbp	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400cce0	            0xf7d0	                                 not eax	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cce2	      0x836c246001	               sub dword [rsp + 0x60], 1	      3012	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cce7	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400ccee	      0xe85dc3ffff	                       call sym.decAddOp	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400ccf3	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400ccf8	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400ccfd	          0x4889ea	                            mov rdx, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400cd00	          0x4889ee	                            mov rsi, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400cd03	          0x4889ef	                            mov rdi, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400cd06	    0xc744246c0100	               mov dword [rsp + 0x6c], 1	      3015	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cd0e	      0xe8cd68ffff	                  call sym.decMultiplyOp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400cd13	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400cd18	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400cd1d	    0x41b801000000	                              mov r8d, 1	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400cd23	          0x4889ea	                            mov rdx, rbp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400cd26	          0x4c89ee	                            mov rsi, r13	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400cd29	          0x4889ef	                            mov rdi, rbp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400cd2c	      0xe8af63ffff	                   call sym.decCompareOp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400cd31	        0x807d0800	                   cmp byte [rbp + 8], 0	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x400cd35	     0xf8855040000	                            js 0x400d190	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x400cd3b	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400cd40	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400cd45	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400cd4d	          0x4531c0	                            xor r8d, r8d	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400cd50	          0x4889de	                            mov rsi, rbx	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400cd53	          0x4889ef	                            mov rdi, rbp	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400cd56	      0xe8f5c2ffff	                       call sym.decAddOp	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400cd5b	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400cd60	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400cd65	          0x4889ea	                            mov rdx, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400cd68	          0x4889ee	                            mov rsi, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400cd6b	          0x4889ef	                            mov rdi, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400cd6e	    0xc744246c0500	               mov dword [rsp + 0x6c], 5	      3030	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4
0x400cd76	      0xe86568ffff	                  call sym.decMultiplyOp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400cd7b	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400cd80	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400cd85	    0x41b801000000	                              mov r8d, 1	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400cd8b	          0x4c89ea	                            mov rdx, r13	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400cd8e	          0x4889ee	                            mov rsi, rbp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400cd91	          0x4889ef	                            mov rdi, rbp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400cd94	      0xe84763ffff	                   call sym.decCompareOp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400cd99	        0x807d0800	                   cmp byte [rbp + 8], 0	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x400cd9d	     0xf885f040000	                            js 0x400d202	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x400cda3	        0x44016304	               add dword [rbx + 4], r12d	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400cda7	          0x4889de	                            mov rsi, rbx	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x400cdaa	          0x4889ef	                            mov rdi, rbp	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x400cdad	      0xe800000000	                          call 0x400cdb2	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x400cdb2	        0xf6450870	               test byte [rbp + 8], 0x70	      6596	decNumber.c	FUNCTION_6	IF_2
0x400cdb6	    0xc74424580000	               mov dword [rsp + 0x58], 0	      6595	decNumber.c	FUNCTION_6
0x400cdbe	            0x7531	                           jne 0x400cdf1	      6596	decNumber.c	FUNCTION_6	IF_2
0x400cdc0	         0xfb7450a	            movzx eax, word [rbp + 0xa] 	      6597	decNumber.c	FUNCTION_6	IF_2
0x400cdc4	            0xa801	                              test al, 1	      6597	decNumber.c	FUNCTION_6	IF_2
0x400cdc6	            0x7529	                           jne 0x400cdf1	      6597	decNumber.c	FUNCTION_6	IF_2
0x400cdc8	          0x6685c0	                             test ax, ax	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cdcb	            0x750a	                           jne 0x400cdd7	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cdcd	        0x837d0001	                      cmp dword [rbp], 1	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cdd1	     0xf84c0020000	                            je 0x400d097	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cdd7	      0x4c8d442458	                    lea r8, [rsp + 0x58]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cddc	      0xb901000000	                              mov ecx, 1	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cde1	      0xba01000000	                              mov edx, 1	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cde6	          0x4c89fe	                            mov rsi, r15	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cde9	          0x4889ef	                            mov rdi, rbp	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cdec	      0xe86f44ffff	                 call sym.decTrim.part.2	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cdf1	          0x8b4500	                    mov eax, dword [rbp]	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400cdf4	        0x8d4400ff	                lea eax, [rax + rax - 1]	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400cdf8	        0x3944242c	            cmp dword [rsp + 0x2c], eax 	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400cdfc	     0xf8d9e020000	                           jge 0x400d0a0	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400ce02	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400ce06	       0xd20080000	                           or eax, 0x820	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400ce0b	        0x8944244c	             mov dword [rsp + 0x4c], eax	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400ce0f	          0xf6c420	                           test ah, 0x20	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x400ce12	            0x7428	                            je 0x400ce3c	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x400ce14	        0x418b7708	                mov esi, dword [r15 + 8]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400ce18	          0x418b0e	                    mov ecx, dword [r14]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400ce1b	        0x41034e04	                add ecx, dword [r14 + 4]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400ce1f	          0x8d1436	                    lea edx, [rsi + rsi]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400ce22	            0x39d1	                            cmp ecx, edx	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400ce24	            0x7e07	                           jle 0x400ce2d	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400ce26	          0x80e4cf	                            and ah, 0xcf	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400ce29	        0x8944244c	             mov dword [rsp + 0x4c], eax	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400ce2d	            0xa820	                           test al, 0x20	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400ce2f	            0x750b	                           jne 0x400ce3c	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400ce31	          0x80e4df	                            and ah, 0xdf	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400ce34	         0xf1f4000	                         nop dword [rax]	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400ce38	        0x8944244c	             mov dword [rsp + 0x4c], eax	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400ce3c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400ce41	          0x4889de	                            mov rsi, rbx	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400ce44	      0xe800000000	                          call 0x400ce49	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400ce49	        0x8b5c244c	            mov ebx, dword [rsp + 0x4c] 	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400ce4d	      0xe9f5faffff	                           jmp 0x400c947	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400ce52	    0x660f1f440000	                    nop word [rax + rax]	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400ce58	        0x41833e01	                      cmp dword [r14], 1	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400ce5c	     0xf8543fbffff	                           jne 0x400c9a5	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400ce62	          0x4c89f6	                            mov rsi, r14	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400ce65	      0xe800000000	                          call 0x400ce6a	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400ce6a	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400ce6e	      0x488d4c244c	                   lea rcx, [rsp + 0x4c]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400ce73	      0x488d542448	                   lea rdx, [rsp + 0x48]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400ce78	          0x4c89fe	                            mov rsi, r15	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400ce7b	          0x895f04	                mov dword [rdi + 4], ebx	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400ce7e	      0xe86d5effff	                    call sym.decFinalize	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400ce83	        0x8b5c244c	            mov ebx, dword [rsp + 0x4c] 	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400ce87	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400ce90	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400ce99	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cea2	      0xe9a0faffff	                           jmp 0x400c947	      2870	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400cea7	    0x660f1f840000	                    nop word [rax + rax]	      2870	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400ceb0	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400ceb9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cebe	      0xbb80000000	                           mov ebx, 0x80	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cec3	    0xc744244c8000	           mov dword [rsp + 0x4c], 0x80 	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x400cecb	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400ced4	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cedd	      0xe800000000	                          call 0x400cee2	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cee2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cee7	      0xe800000000	                          call 0x400ceec	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x400ceec	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cef1	      0xe800000000	                          call 0x400cef6	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cef6	          0xf6c3dd	                           test bl, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x400cef9	     0xf85d1000000	                           jne 0x400cfd0	      7736	decNumber.c	FUNCTION_24	IF_1
0x400ceff	            0x89de	                            mov esi, ebx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400cf01	          0x4c89ff	                            mov rdi, r15	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400cf04	      0xe800000000	                          call 0x400cf09	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400cf09	    0x488bb4244801	           mov rsi, qword [rsp + 0x148] 	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf11	    0x644833342528	                xor rsi, qword fs:[0x28]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf1a	      0x488b442408	                mov rax, qword [rsp + 8]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf1f	     0xf851e030000	                           jne 0x400d243	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf25	    0x4881c4580100	                          add rsp, 0x158	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf2c	              0x5b	                                 pop rbx	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf2d	              0x5d	                                 pop rbp	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf2e	            0x415c	                                 pop r12	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf30	            0x415d	                                 pop r13	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf32	            0x415e	                                 pop r14	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf34	            0x415f	                                 pop r15	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf36	              0xc3	                                     ret	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf37	    0x660f1f840000	                    nop word [rax + rax]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf40	     0xfb680000000	                   movzx eax, byte [rax]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400cf47	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400cf4b	      0xe99efaffff	                           jmp 0x400c9ee	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400cf50	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400cf55	          0x4889d1	                            mov rcx, rdx	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400cf58	            0x31d2	                            xor edx, edx	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400cf5a	      0xe8e156ffff	                 call sym.decNaNs.isra.6	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400cf5f	        0x8b5c244c	            mov ebx, dword [rsp + 0x4c] 	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400cf63	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf6c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf75	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf7e	      0xe9c4f9ffff	                           jmp 0x400c947	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf83	       0xf1f440000	                   nop dword [rax + rax]	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf88	    0x488dac242001	                  lea rbp, [rsp + 0x120]	      2825	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf90	    0x488d9c24f000	                   lea rbx, [rsp + 0xf0]	      2824	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cf98	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cfa1	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cfaa	      0xe9b2faffff	                           jmp 0x400ca61	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cfaf	              0x90	                                     nop	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400cfb0	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfb4	      0xba56555555	                     mov edx, 0x55555556	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfb9	          0x8d4804	                      lea ecx, [rax + 4]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfbc	            0x89c8	                            mov eax, ecx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfbe	          0xc1f91f	                           sar ecx, 0x1f	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfc1	            0xf7ea	                                imul edx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfc3	            0x29ca	                            sub edx, ecx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfc5	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfc9	      0xe952faffff	                           jmp 0x400ca20	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfce	            0x6690	                                     nop	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400cfd0	      0x488b442408	                mov rax, qword [rsp + 8]	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cfd5	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cfd7	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cfde	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cfe4	        0x6689500a	                mov word [rax + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400cfe8	        0xc6400820	                mov byte [rax + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400cfec	      0xe90effffff	                           jmp 0x400ceff	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400cff1	     0xf1f80000000	                         nop dword [rax]	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400cff8	    0x41b933030000	                          mov r9d, 0x333	      2949	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400cffe	    0x41ba03010000	                         mov r10d, 0x103	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d004	      0x41836d0401	                  sub dword [r13 + 4], 1	      2944	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d009	      0x8344243001	               add dword [rsp + 0x30], 1	      2945	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d00e	    0xc78424b40000	     mov dword [rsp + 0xb4], 0xfffffffc 	      2946	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d019	    0xc74304feffff	        mov dword [rbx + 4], 0xfffffffe 	      2947	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d020	    0x6644898c24ba	              mov word [rsp + 0xba], r9w	      2949	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d029	      0x664489530a	              mov word [rbx + 0xa], r10w	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d02e	      0xe9c6faffff	                           jmp 0x400caf9	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d033	       0xf1f440000	                   nop dword [rax + rax]	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400d038	          0x4863ff	                         movsxd rdi, edi	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400d03b	      0xe800000000	                          call 0x400d040	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400d040	          0x4885c0	                           test rax, rax	      2893	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400d043	      0x4889442410	             mov qword [rsp + 0x10], rax	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400d048	          0x4989c5	                            mov r13, rax	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400d04b	     0xf85b7f9ffff	                           jne 0x400ca08	      2893	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400d051	    0xc744244c1000	           mov dword [rsp + 0x4c], 0x10 	      2894	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400d059	      0xbb10000000	                           mov ebx, 0x10	      2895	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400d05e	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400d067	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400d070	          0x4889c7	                            mov rdi, rax	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400d073	      0xe965feffff	                           jmp 0x400cedd	      2895	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400d078	     0xf1f84000000	                   nop dword [rax + rax]	      2895	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400d080	    0xc744244c1000	           mov dword [rsp + 0x4c], 0x10 	      2904	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400d088	      0xbb10000000	                           mov ebx, 0x10	      2905	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400d08d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2905	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400d092	      0xe946feffff	                           jmp 0x400cedd	      2905	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400d097	    0xc74504000000	                  mov dword [rbp + 4], 0	      6599	decNumber.c	FUNCTION_6	IF_3
0x400d09e	            0x6690	                                     nop	      6599	decNumber.c	FUNCTION_6	IF_3
0x400d0a0	      0x4c8d44245c	                    lea r8, [rsp + 0x5c]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400d0a5	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400d0aa	          0x4889ea	                            mov rdx, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400d0ad	          0x4889ee	                            mov rsi, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400d0b0	          0x4889ef	                            mov rdi, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400d0b3	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3062	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5
0x400d0bb	      0xe82065ffff	                  call sym.decMultiplyOp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400d0c0	      0xf644245d02	               test byte [rsp + 0x5d], 2	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x400d0c5	     0xf8537fdffff	                           jne 0x400ce02	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x400d0cb	      0x4c8d4c245c	                    lea r9, [rsp + 0x5c]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400d0d0	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400d0d5	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400d0dd	    0x41b801000000	                              mov r8d, 1	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400d0e3	          0x4c89f2	                            mov rdx, r14	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400d0e6	          0x4889ee	                            mov rsi, rbp	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400d0e9	      0xe8f25fffff	                   call sym.decCompareOp	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400d0ee	    0x6683bc24ba00	                cmp word [rsp + 0xba], 0	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400d0f7	     0xf8505fdffff	                           jne 0x400ce02	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400d0fd	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 1	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400d105	     0xf85f7fcffff	                           jne 0x400ce02	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400d10b	    0xf68424b80000	           test byte [rsp + 0xb8], 0x70 	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400d113	     0xf85e9fcffff	                           jne 0x400ce02	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400d119	          0x8b5304	                mov edx, dword [rbx + 4]	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x400d11c	        0x8b6c2438	            mov ebp, dword [rsp + 0x38] 	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400d120	            0x29d5	                            sub ebp, edx	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400d122	     0xf880b010000	                            js 0x400d233	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400d128	        0x418b4704	                mov eax, dword [r15 + 4]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400d12c	          0x412b07	                    sub eax, dword [r15]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400d12f	          0x83c001	                              add eax, 1	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400d132	            0x29d0	                            sub eax, edx	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400d134	            0x39c5	                            cmp ebp, eax	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x400d136	            0x7e11	                           jle 0x400d149	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x400d138	      0x41807f1800	                cmp byte [r15 + 0x18], 0	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x400d13d	            0x740a	                            je 0x400d149	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x400d13f	    0x814c244c0004	            or dword [rsp + 0x4c], 0x400	      3081	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x400d147	            0x89c5	                            mov ebp, eax	      3081	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x400d149	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x400d14d	            0x39c5	                            cmp ebp, eax	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x400d14f	            0x7e0a	                           jle 0x400d15b	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x400d151	    0x814c244c0004	            or dword [rsp + 0x4c], 0x400	      3085	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x400d159	            0x89c5	                            mov ebp, eax	      3085	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x400d15b	            0x85ed	                           test ebp, ebp	      3087	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400d15d	            0x7e24	                           jle 0x400d183	      3087	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400d15f	          0x486303	                 movsxd rax, dword [rbx]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d162	          0x83f831	                           cmp eax, 0x31	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d165	     0xf8fb6000000	                            jg 0x400d221	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d16b	     0xfb6b0000000	                   movzx esi, byte [rax]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d172	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d177	            0x89ea	                            mov edx, ebp	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d179	      0xe8123dffff	         call sym.decShiftToLeast.part.1	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d17e	           0x16b04	                add dword [rbx + 4], ebp	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400d181	            0x292b	                    sub dword [rbx], ebp	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400d183	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400d187	      0xe983fcffff	                           jmp 0x400ce0f	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400d18c	         0xf1f4000	                         nop dword [rax]	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400d190	    0x838424b40000	               add dword [rsp + 0xb4], 1	      3020	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x400d198	      0xbe01000000	                              mov esi, 1	      3021	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x400d19d	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x400d1a2	    0x6689b424ba00	               mov word [rsp + 0xba], si	      3021	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x400d1aa	    0x41b880000000	                           mov r8d, 0x80	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x400d1b0	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400d1b5	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400d1bd	          0x4889de	                            mov rsi, rbx	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400d1c0	          0x4889df	                            mov rdi, rbx	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400d1c3	      0xe888beffff	                       call sym.decAddOp	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400d1c8	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400d1cd	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400d1d5	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400d1dd	          0x4531c0	                            xor r8d, r8d	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400d1e0	          0x4889da	                            mov rdx, rbx	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400d1e3	          0x4889df	                            mov rdi, rbx	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400d1e6	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400d1ea	     0x18424880000	             add dword [rsp + 0x88], eax	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400d1f1	     0x18424840000	             add dword [rsp + 0x84], eax	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400d1f8	      0xe853beffff	                       call sym.decAddOp	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400d1fd	      0xe9a1fbffff	                           jmp 0x400cda3	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400d202	      0xb901000000	                              mov ecx, 1	      3035	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400d207	    0x838424b40000	               add dword [rsp + 0xb4], 1	      3034	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400d20f	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400d214	    0x66898c24ba00	               mov word [rsp + 0xba], cx	      3035	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400d21c	          0x4531c0	                            xor r8d, r8d	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400d21f	            0xeb8f	                           jmp 0x400d1b0	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400d221	          0x83c002	                              add eax, 2	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d224	      0xb903000000	                              mov ecx, 3	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d229	              0x99	                                     cdq	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d22a	            0xf7f9	                                idiv ecx	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d22c	            0x89c6	                            mov esi, eax	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d22e	      0xe93fffffff	                           jmp 0x400d172	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400d233	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400d237	          0x80cc08	                                or ah, 8	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400d23a	        0x8944244c	             mov dword [rsp + 0x4c], eax	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400d23e	      0xe9ccfbffff	                           jmp 0x400ce0f	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400d243	      0xe800000000	                          call 0x400d248	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
decNumberInvert	SWITCH,0:functions,0:IF,6:WHILE,0:CALL,9:FOR,2:DO,0:ELSE,1	182
0x4005650	            0x4157	                                push r15	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005652	            0x4156	                                push r14	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005654	            0x4155	                                push r13	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005656	            0x4154	                                push r12	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005658	              0x55	                                push rbp	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005659	              0x53	                                push rbx	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x400565a	          0x4889fb	                            mov rbx, rdi	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x400565d	          0x4889d7	                            mov rdi, rdx	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005660	        0x4883ec18	                           sub rsp, 0x18	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005664	        0x448b4604	                mov r8d, dword [rsi + 4]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4005668	          0x4585c0	                           test r8d, r8d	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x400566b	     0xf85af010000	                           jne 0x4005820	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4005671	         0xfb64608	               movzx eax, byte [rsi + 8]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4005675	            0xa870	                           test al, 0x70	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4005677	     0xf85a3010000	                           jne 0x4005820	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x400567d	            0x84c0	                             test al, al	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x400567f	     0xf889b010000	                            js 0x4005820	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4005685	          0x486306	                 movsxd rax, dword [rsi]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4005688	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      1208	decNumber.c	FUNCTION_68	FUNCTION_19
0x400568c	        0x4c8d630a	                    lea r12, [rbx + 0xa]	      1209	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005690	          0x83f831	                           cmp eax, 0x31	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4005693	     0xf8ebf010000	                           jle 0x4005858	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4005699	          0x8d4802	                      lea ecx, [rax + 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x400569c	      0xba56555555	                     mov edx, 0x55555556	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056a1	            0x89c8	                            mov eax, ecx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056a3	            0xf7ea	                                imul edx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056a5	            0x89c8	                            mov eax, ecx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056a7	            0x8b0f	                    mov ecx, dword [rdi]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x40056a9	          0xc1f81f	                           sar eax, 0x1f	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056ac	            0x29c2	                            sub edx, eax	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056ae	          0x4863d2	                         movsxd rdx, edx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056b1	      0x4c8d5412fe	                lea r10, [rdx + rdx - 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056b6	          0x4d01ca	                             add r10, r9	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x40056b9	          0x83f931	                           cmp ecx, 0x31	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x40056bc	     0xf8fb0010000	                            jg 0x4005872	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x40056c2	          0x4863c1	                         movsxd rax, ecx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x40056c5	     0xfb690000000	                   movzx edx, byte [rax]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x40056cc	      0x4d8d5c54fe	              lea r11, [r12 + rdx*2 - 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x40056d1	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x40056d5	            0x29c1	                            sub ecx, eax	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x40056d7	          0x4d39dc	                            cmp r12, r11	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40056da	          0x4189cf	                           mov r15d, ecx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x40056dd	     0xf87c6010000	                            ja 0x40058a9	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40056e3	     0xfb72d000000	           movzx ebp, word [0x040056ea] 	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40056ea	    0x440fb72d0000	          movzx r13d, word [0x040056f2] 	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40056f2	          0x4c89e6	                            mov rsi, r12	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40056f5	    0x440fb7350000	          movzx r14d, word [0x040056fd] 	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40056fd	           0xf1f00	                         nop dword [rax]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4005700	          0x4d39ca	                             cmp r10, r9	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4005703	     0xf828f010000	                            jb 0x4005898	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4005709	        0x410fb701	                    movzx eax, word [r9]	      1217	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x400570d	            0x31d2	                            xor edx, edx	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x400570f	          0x668916	                      mov word [rsi], dx	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4005712	           0xfb7d0	                           movzx edx, ax	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4005715	          0x4189c0	                            mov r8d, eax	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4005718	    0x69d2cdcc0000	                   imul edx, edx, 0xcccd	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x400571e	          0xc1ea13	                           shr edx, 0x13	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4005721	            0x89d1	                            mov ecx, edx	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4005723	          0x8d1489	                  lea edx, [rcx + rcx*4]	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4005726	             0x1d2	                            add edx, edx	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4005728	          0x4129d0	                            sub r8d, edx	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x400572b	            0xa801	                              test al, 1	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x400572d	          0x4489c2	                            mov edx, r8d	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4005730	     0xf8468010000	                            je 0x400589e	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4005736	          0x4531c0	                            xor r8d, r8d	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4005739	        0x6683fa01	                               cmp dx, 1	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x400573d	     0xf87dd000000	                            ja 0x4005820	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4005743	          0x4939f3	                            cmp r11, rsi	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4005746	       0xf9444240f	                   sete byte [rsp + 0xf]	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x400574b	        0x4183ff01	                             cmp r15d, 1	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x400574f	       0xfb654240f	            movzx edx, byte [rsp + 0xf] 	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4005754	            0x7504	                           jne 0x400575a	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4005756	            0x84d2	                             test dl, dl	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4005758	            0x756a	                           jne 0x40057c4	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x400575a	          0xf6c101	                              test cl, 1	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x400575d	            0x7507	                           jne 0x4005766	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x400575f	          0x4501e8	                           add r8d, r13d	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4005762	        0x66448906	                     mov word [rsi], r8w	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4005766	           0xfb7d1	                           movzx edx, cx	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4005769	        0x66c1e802	                               shr ax, 2	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x400576d	    0x69d2cdcc0000	                   imul edx, edx, 0xcccd	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4005773	           0xfb7c0	                           movzx eax, ax	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4005776	    0x69c07b140000	                   imul eax, eax, 0x147b	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x400577c	          0xc1ea13	                           shr edx, 0x13	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x400577f	          0x8d1492	                  lea edx, [rdx + rdx*4]	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4005782	          0xc1e811	                           shr eax, 0x11	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4005785	             0x1d2	                            add edx, edx	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4005787	            0x29d1	                            sub ecx, edx	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4005789	        0x6683f901	                               cmp cx, 1	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x400578d	     0xf878d000000	                            ja 0x4005820	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4005793	        0x4183ff02	                             cmp r15d, 2	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4005797	            0x7507	                           jne 0x40057a0	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4005799	      0x807c240f00	                 cmp byte [rsp + 0xf], 0	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x400579e	            0x7524	                           jne 0x40057c4	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x40057a0	            0xa801	                              test al, 1	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40057a2	            0x7507	                           jne 0x40057ab	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40057a4	          0x4501f0	                           add r8d, r14d	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40057a7	        0x66448906	                     mov word [rsi], r8w	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40057ab	           0xfb7d0	                           movzx edx, ax	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40057ae	    0x69d2cdcc0000	                   imul edx, edx, 0xcccd	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40057b4	          0xc1ea13	                           shr edx, 0x13	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40057b7	          0x8d1492	                  lea edx, [rdx + rdx*4]	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40057ba	             0x1d2	                            add edx, edx	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40057bc	            0x29d0	                            sub eax, edx	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40057be	        0x6683f801	                               cmp ax, 1	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40057c2	            0x775c	                            ja 0x4005820	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40057c4	        0x4883c602	                              add rsi, 2	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057c8	        0x4983c102	                               add r9, 2	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057cc	          0x4c39de	                            cmp rsi, r11	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057cf	     0xf862bffffff	                           jbe 0x4005700	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057d5	          0x4c29e6	                            sub rsi, r12	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057d8	          0x48d1fe	                              sar rsi, 1	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057db	          0x4863c6	                         movsxd rax, esi	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057de	        0x8d5476fe	              lea edx, [rsi + rsi*2 - 2]	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057e2	      0x488d4400fe	                lea rax, [rax + rax - 2]	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40057e7	          0x4c01e0	                            add rax, r12	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40057ea	            0x7224	                            jb 0x4005810	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40057ec	           0xfb708	                   movzx ecx, word [rax]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x40057ef	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x40057f2	     0xf85c2000000	                           jne 0x40058ba	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x40057f8	          0x83fa01	                              cmp edx, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40057fb	            0x7413	                            je 0x4005810	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40057fd	        0x4883e802	                              sub rax, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005801	          0x83ea03	                              sub edx, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4005804	          0x4939c4	                            cmp r12, rax	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005807	            0x76e3	                           jbe 0x40057ec	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005809	     0xf1f80000000	                         nop dword [rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4005810	            0x8913	                    mov dword [rbx], edx	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4005812	    0xc74304000000	                  mov dword [rbx + 4], 0	      1234	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005819	        0xc6430800	                   mov byte [rbx + 8], 0	      1235	decNumber.c	FUNCTION_68	FUNCTION_19
0x400581d	            0xeb22	                           jmp 0x4005841	      1236	decNumber.c	FUNCTION_68	FUNCTION_19
0x400581f	              0x90	                                     nop	      1236	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005820	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005822	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005829	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400582f	        0x66894b0a	                mov word [rbx + 0xa], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005833	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4005837	      0xbe80000000	                           mov esi, 0x80	      7744	decNumber.c	FUNCTION_24	CALL_2
0x400583c	      0xe800000000	                          call 0x4005841	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4005841	        0x4883c418	                           add rsp, 0x18	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005845	          0x4889d8	                            mov rax, rbx	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005848	              0x5b	                                 pop rbx	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005849	              0x5d	                                 pop rbp	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x400584a	            0x415c	                                 pop r12	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x400584c	            0x415d	                                 pop r13	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x400584e	            0x415e	                                 pop r14	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005850	            0x415f	                                 pop r15	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005852	              0xc3	                                     ret	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005853	       0xf1f440000	                   nop dword [rax + rax]	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4005858	     0xfb680000000	                   movzx eax, byte [rax]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x400585f	            0x8b0f	                    mov ecx, dword [rdi]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4005861	      0x4c8d5400fe	                lea r10, [rax + rax - 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4005866	          0x4d01ca	                             add r10, r9	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4005869	          0x83f931	                           cmp ecx, 0x31	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400586c	     0xf8e50feffff	                           jle 0x40056c2	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4005872	          0x8d7102	                      lea esi, [rcx + 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4005875	      0xba56555555	                     mov edx, 0x55555556	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400587a	            0x89f0	                            mov eax, esi	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400587c	          0xc1fe1f	                           sar esi, 0x1f	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400587f	            0xf7ea	                                imul edx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4005881	            0x29f2	                            sub edx, esi	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4005883	          0x4863c2	                         movsxd rax, edx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4005886	      0x4d8d5c44fe	              lea r11, [r12 + rax*2 - 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400588b	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x400588f	      0xe941feffff	                           jmp 0x40056d5	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4005894	         0xf1f4000	                         nop dword [rax]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4005898	            0x31c9	                            xor ecx, ecx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x400589a	            0x31d2	                            xor edx, edx	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x400589c	            0x31c0	                            xor eax, eax	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x400589e	          0x66892e	                      mov word [rsi], bp	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40058a1	          0x4189e8	                            mov r8d, ebp	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40058a4	      0xe990feffff	                           jmp 0x4005739	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40058a9	      0xbafeffffff	                     mov edx, 0xfffffffe	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40058ae	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40058b5	      0xe92dffffff	                           jmp 0x40057e7	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40058ba	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x40058be	     0xf864cffffff	                           jbe 0x4005810	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x40058c4	          0x8d4201	                      lea eax, [rdx + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40058c7	          0x83c202	                              add edx, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40058ca	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40058ce	           0xf46d0	                         cmovbe edx, eax	      7780	decNumber.c	FUNCTION_25	FOR_1
0x40058d1	      0xe93affffff	                           jmp 0x4005810	      7780	decNumber.c	FUNCTION_25	FOR_1
decNumberIsSubnormal	SWITCH,0:functions,0:IF,4:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	13
0x4012470	            0x31c0	                            xor eax, eax	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4012472	        0xf6470870	               test byte [rdi + 8], 0x70	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4012476	            0x7519	                           jne 0x4012491	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4012478	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x401247d	            0x8b17	                    mov edx, dword [rdi]	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x401247f	            0x7505	                           jne 0x4012486	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x4012481	          0x83fa01	                              cmp edx, 1	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x4012484	            0x740b	                            je 0x4012491	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x4012486	           0x35704	                add edx, dword [rdi + 4]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4012489	            0x31c0	                            xor eax, eax	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x401248b	          0x3b5608	                cmp edx, dword [rsi + 8]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x401248e	           0xf9ec0	                                setle al	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4012491	            0xf3c3	                                     ret	      3542	decNumber.c	FUNCTION_68	FUNCTION_59
decNumberToEngString	SWITCH,0:functions,0:IF,0:WHILE,0:CALL,1:FOR,0:DO,0:ELSE,0	7
0x4004360	              0x53	                                push rbx	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4004361	      0xba01000000	                              mov edx, 1	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x4004366	          0x4889f3	                            mov rbx, rsi	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4004369	      0xe882c3ffff	                    call sym.decToString	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x400436e	          0x4889d8	                            mov rax, rbx	       467	decNumber.c	FUNCTION_68	FUNCTION_6
0x4004371	              0x5b	                                 pop rbx	       467	decNumber.c	FUNCTION_68	FUNCTION_6
0x4004372	              0xc3	                                     ret	       467	decNumber.c	FUNCTION_68	FUNCTION_6
decNumberMultiply	SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3:FOR,0:DO,0:ELSE,0	38
0x4006960	              0x55	                                push rbp	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4006961	              0x53	                                push rbx	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4006962	          0x4889cd	                            mov rbp, rcx	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4006965	          0x4889fb	                            mov rbx, rdi	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4006968	        0x4883ec18	                           sub rsp, 0x18	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x400696c	      0x4c8d442404	                       lea r8, [rsp + 4]	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4006971	    0xc74424040000	                  mov dword [rsp + 4], 0	      1907	decNumber.c	FUNCTION_68	FUNCTION_33
0x4006979	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4006982	      0x4889442408	                mov qword [rsp + 8], rax	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4006987	            0x31c0	                            xor eax, eax	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4006989	      0xe852ccffff	                  call sym.decMultiplyOp	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x400698e	        0x8b742404	                mov esi, dword [rsp + 4]	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4006992	            0x85f6	                           test esi, esi	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4006994	            0x751a	                           jne 0x40069b0	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4006996	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x400699b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x40069a4	          0x4889d8	                            mov rax, rbx	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x40069a7	            0x753f	                           jne 0x40069e8	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x40069a9	        0x4883c418	                           add rsp, 0x18	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x40069ad	              0x5b	                                 pop rbx	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x40069ae	              0x5d	                                 pop rbp	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x40069af	              0xc3	                                     ret	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x40069b0	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x40069b4	            0x741f	                            je 0x40069d5	      7736	decNumber.c	FUNCTION_24	IF_1
0x40069b6	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40069bc	            0x7522	                           jne 0x40069e0	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40069be	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40069c0	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40069c7	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40069cd	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40069d1	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40069d5	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40069d8	      0xe800000000	                          call 0x40069dd	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40069dd	            0xebb7	                           jmp 0x4006996	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40069df	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40069e0	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40069e6	            0xebed	                           jmp 0x40069d5	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x40069e8	      0xe800000000	                          call 0x40069ed	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
decNumberMinus	SWITCH,0:functions,0:IF,2:WHILE,0:CALL,5:FOR,0:DO,0:ELSE,0	49
0x4009e70	              0x55	                                push rbp	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e71	              0x53	                                push rbx	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e72	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009e74	          0x4889d5	                            mov rbp, rdx	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e77	    0x41b880000000	                           mov r8d, 0x80	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4009e7d	          0x4889fb	                            mov rbx, rdi	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e80	        0x4883ec38	                           sub rsp, 0x38	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e84	    0x64488b042528	                mov rax, qword fs:[0x28]	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e8d	      0x4889442428	             mov qword [rsp + 0x28], rax	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e92	            0x31c0	                            xor eax, eax	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e94	          0x8b4604	                mov eax, dword [rsi + 4]	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009e97	      0x66894c241a	               mov word [rsp + 0x1a], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009e9c	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4009ea1	          0x4889d1	                            mov rcx, rdx	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4009ea4	          0x4889f2	                            mov rdx, rsi	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4009ea7	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4009eac	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1634	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009eb4	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009eb9	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009ec1	        0x89442414	             mov dword [rsp + 0x14], eax	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009ec5	      0xe886f1ffff	                       call sym.decAddOp	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x4009eca	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4009ece	            0x85f6	                           test esi, esi	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4009ed0	            0x751e	                           jne 0x4009ef0	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4009ed2	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009ed7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009ee0	          0x4889d8	                            mov rax, rbx	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009ee3	            0x7543	                           jne 0x4009f28	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009ee5	        0x4883c438	                           add rsp, 0x38	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009ee9	              0x5b	                                 pop rbx	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009eea	              0x5d	                                 pop rbp	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009eeb	              0xc3	                                     ret	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009eec	         0xf1f4000	                         nop dword [rax]	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4009ef0	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4009ef4	            0x741f	                            je 0x4009f15	      7736	decNumber.c	FUNCTION_24	IF_1
0x4009ef6	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009efc	            0x7522	                           jne 0x4009f20	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009efe	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009f00	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009f07	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009f0d	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009f11	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4009f15	          0x4889ef	                            mov rdi, rbp	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009f18	      0xe800000000	                          call 0x4009f1d	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009f1d	            0xebb3	                           jmp 0x4009ed2	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009f1f	              0x90	                                     nop	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4009f20	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009f26	            0xebed	                           jmp 0x4009f15	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4009f28	      0xe800000000	                          call 0x4009f2d	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
decGetInt	SWITCH,0:functions,0:IF,15:WHILE,0:CALL,2:FOR,2:DO,0:ELSE,4	133
0x4000490	            0x8b07	                    mov eax, dword [rdi]	      7540	decNumber.c	FUNCTION_20
0x4000492	          0x8b4f04	                mov ecx, dword [rdi + 4]	      7540	decNumber.c	FUNCTION_20
0x4000495	      0x440fb64f08	               movzx r9d, byte [rdi + 8]	      7541	decNumber.c	FUNCTION_20	CALL_1
0x400049a	         0xfb7770a	            movzx esi, word [rdi + 0xa] 	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400049e	          0x83f801	                              cmp eax, 1	      7551	decNumber.c	FUNCTION_20	CALL_2
0x40004a1	        0x448d0408	                    lea r8d, [rax + rcx]	      7540	decNumber.c	FUNCTION_20
0x40004a5	            0x7509	                           jne 0x40004b0	      7551	decNumber.c	FUNCTION_20	CALL_2
0x40004a7	          0x6685f6	                             test si, si	      7551	decNumber.c	FUNCTION_20	CALL_2
0x40004aa	     0xf8440010000	                            je 0x40005f0	      7551	decNumber.c	FUNCTION_20	CALL_2
0x40004b0	        0x4883c70a	                            add rdi, 0xa	      7553	decNumber.c	FUNCTION_20
0x40004b4	            0x85c9	                           test ecx, ecx	      7555	decNumber.c	FUNCTION_20	IF_2
0x40004b6	     0xf88b4000000	                            js 0x4000570	      7555	decNumber.c	FUNCTION_20	IF_2
0x40004bc	     0xf8486000000	                            je 0x4000548	      7586	decNumber.c	FUNCTION_20	IF_6
0x40004c2	        0x4183f80a	                            cmp r8d, 0xa	      7588	decNumber.c	FUNCTION_20	IF_7
0x40004c6	     0xf8f34010000	                            jg 0x4000600	      7588	decNumber.c	FUNCTION_20	IF_7
0x40004cc	          0x4531d2	                          xor r10d, r10d	      7554	decNumber.c	FUNCTION_20
0x40004cf	          0x4439c1	                            cmp ecx, r8d	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004d2	     0xf8da8010000	                           jge 0x4000680	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004d8	          0x4863c1	                         movsxd rax, ecx	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004db	           0xfb737	                   movzx esi, word [rdi]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004de	        0x488d5702	                      lea rdx, [rdi + 2]	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004e2	     0xfaf34850000	                 imul esi, dword [rax*4]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004ea	          0x8d4103	                      lea eax, [rcx + 3]	      7593	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004ed	          0x4401d6	                           add esi, r10d	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004f0	          0x4139c0	                            cmp r8d, eax	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004f3	     0xf8e17010000	                           jle 0x4000610	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004f9	            0x4898	                                    cdqe	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004fb	         0xfb75702	               movzx edx, word [rdi + 2]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x40004ff	     0xfaf14850000	                 imul edx, dword [rax*4]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000507	          0x8d4106	                      lea eax, [rcx + 6]	      7593	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400050a	             0x1d6	                            add esi, edx	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400050c	          0x4139c0	                            cmp r8d, eax	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400050f	        0x488d5704	                      lea rdx, [rdi + 4]	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000513	     0xf8ef7000000	                           jle 0x4000610	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000519	         0xfb75704	               movzx edx, word [rdi + 4]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400051d	            0x4898	                                    cdqe	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400051f	          0x83c109	                              add ecx, 9	      7593	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000522	     0xfaf14850000	                 imul edx, dword [rax*4]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400052a	        0x4883c706	                              add rdi, 6	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400052e	             0x1d6	                            add esi, edx	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000530	        0x4183f80a	                            cmp r8d, 0xa	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000534	     0xf84e5000000	                            je 0x400061f	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x400053a	            0x89f0	                            mov eax, esi	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x400053c	            0xf7d8	                                 neg eax	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x400053e	          0x4584c9	                           test r9b, r9b	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000541	           0xf49c6	                         cmovns eax, esi	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000544	              0xc3	                                     ret	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000545	           0xf1f00	                         nop dword [rax]	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000548	        0x440fb7d6	                          movzx r10d, si	      7586	decNumber.c	FUNCTION_20	IF_6
0x400054c	        0x4883c702	                              add rdi, 2	      7586	decNumber.c	FUNCTION_20	IF_6
0x4000550	      0xb903000000	                              mov ecx, 3	      7586	decNumber.c	FUNCTION_20	IF_6
0x4000555	        0x4183f80a	                            cmp r8d, 0xa	      7588	decNumber.c	FUNCTION_20	IF_7
0x4000559	     0xf8e70ffffff	                           jle 0x40004cf	      7588	decNumber.c	FUNCTION_20	IF_7
0x400055f	          0x4489d6	                           mov esi, r10d	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x4000562	          0x83e601	                              and esi, 1	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x4000565	          0x83fe01	                              cmp esi, 1	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x4000568	            0x19c0	                            sbb eax, eax	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x400056a	      0x2dfdffff7f	                     sub eax, 0x7ffffffd	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x400056f	              0xc3	                                     ret	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x4000570	            0xf7d9	                                 neg ecx	      7560	decNumber.c	FUNCTION_20	ELSE_1
0x4000572	          0x83f902	                              cmp ecx, 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000575	     0xf8e0d010000	                           jle 0x4000688	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x400057b	          0x6685f6	                             test si, si	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400057e	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000583	            0x7418	                            je 0x400059d	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000585	      0xe906010000	                           jmp 0x4000690	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400058a	    0x660f1f440000	                    nop word [rax + rax]	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000590	        0x66833a00	                       cmp word [rdx], 0	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000594	          0x4889d7	                            mov rdi, rdx	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000597	     0xf85d3000000	                           jne 0x4000670	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x400059d	          0x83e903	                              sub ecx, 3	      7564	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x40005a0	        0x488d5702	                      lea rdx, [rdi + 2]	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x40005a4	          0x83f902	                              cmp ecx, 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x40005a7	            0x7fe7	                            jg 0x4000590	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x40005a9	            0x85c9	                           test ecx, ecx	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x40005ab	         0xfb77702	               movzx esi, word [rdi + 2]	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x40005af	          0x4889d7	                            mov rdi, rdx	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x40005b2	            0x7494	                            je 0x4000548	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x40005b4	           0xfb7fe	                           movzx edi, si	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005b7	          0x4863c1	                         movsxd rax, ecx	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005ba	            0x89fe	                            mov esi, edi	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005bc	            0xd3ee	                             shr esi, cl	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005be	     0xfaf34850000	                 imul esi, dword [rax*4]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005c6	          0xc1ee11	                           shr esi, 0x11	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005c9	          0x4189f2	                           mov r10d, esi	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005cc	     0xfaf34850000	                 imul esi, dword [rax*4]	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x40005d4	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005d9	            0x39f7	                            cmp edi, esi	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x40005db	            0x751f	                           jne 0x40005fc	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x40005dd	      0xb803000000	                              mov eax, 3	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005e2	        0x488d7a02	                      lea rdi, [rdx + 2]	      7580	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005e6	            0x29c8	                            sub eax, ecx	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005e8	            0x89c1	                            mov ecx, eax	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005ea	      0xe966ffffff	                           jmp 0x4000555	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005ef	              0x90	                                     nop	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x40005f0	            0x31c0	                            xor eax, eax	      7551	decNumber.c	FUNCTION_20	CALL_2
0x40005f2	        0x41f6c170	                          test r9b, 0x70	      7551	decNumber.c	FUNCTION_20	CALL_2
0x40005f6	     0xf85b4feffff	                           jne 0x40004b0	      7551	decNumber.c	FUNCTION_20	CALL_2
0x40005fc	            0xf3c3	                                     ret	      7611	decNumber.c	FUNCTION_20
0x40005fe	            0x6690	                                     nop	      7611	decNumber.c	FUNCTION_20
0x4000600	      0xb802000080	                     mov eax, 0x80000002	      7606	decNumber.c	FUNCTION_20	IF_13
0x4000605	              0xc3	                                     ret	      7611	decNumber.c	FUNCTION_20
0x4000606	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7611	decNumber.c	FUNCTION_20
0x4000610	        0x4183f80a	                            cmp r8d, 0xa	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000614	          0x4889d7	                            mov rdi, rdx	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000617	            0x89c1	                            mov ecx, eax	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000619	     0xf851bffffff	                           jne 0x400053a	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x400061f	          0x83e903	                              sub ecx, 3	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000622	            0x89f0	                            mov eax, esi	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000624	              0x99	                                     cdq	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000625	          0x4863c9	                         movsxd rcx, ecx	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000628	    0xf73c8d000000	                      idiv dword [rcx*4]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400062f	         0xfb757fe	               movzx edx, word [rdi - 2]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000633	            0x39d0	                            cmp eax, edx	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000635	     0xf8524ffffff	                           jne 0x400055f	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400063b	          0x4584c9	                           test r9b, r9b	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400063e	            0x790c	                           jns 0x400064c	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x4000640	    0x81fefd933577	                     cmp esi, 0x773593fd	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x4000646	     0xf8f13ffffff	                            jg 0x400055f	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400064c	          0x4584c9	                           test r9b, r9b	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x400064f	     0xf88e5feffff	                            js 0x400053a	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x4000655	    0x81feffc99a3b	                     cmp esi, 0x3b9ac9ff	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x400065b	     0xf8ffefeffff	                            jg 0x400055f	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x4000661	      0xe9d4feffff	                           jmp 0x400053a	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x4000666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x4000670	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000675	              0xc3	                                     ret	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000676	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000680	          0x4489d6	                           mov esi, r10d	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000683	      0xe9a8feffff	                           jmp 0x4000530	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000688	          0x4889fa	                            mov rdx, rdi	      7553	decNumber.c	FUNCTION_20
0x400068b	      0xe924ffffff	                           jmp 0x40005b4	      7553	decNumber.c	FUNCTION_20
0x4000690	            0xf3c3	                                     ret	      7553	decNumber.c	FUNCTION_20
