byte_get_64	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:CALL,4:ELSE,1:WHILE,0	17
0x4000980	    0x48813d000000	               cmp qword [0x0400098b], 0	       378	elfcomm.c	FUNCTION_8	IF_1
0x400098b	            0x7413	                            je 0x40009a0	       378	elfcomm.c	FUNCTION_8	IF_1
0x400098d	          0x8b4704	                mov eax, dword [rdi + 4]	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000990	          0x488906	                    mov qword [rsi], rax	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000993	            0x8b07	                    mov eax, dword [rdi]	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000995	          0x488902	                    mov qword [rdx], rax	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000998	              0xc3	                                     ret	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000999	     0xf1f80000000	                         nop dword [rax]	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x40009a0	            0x8b07	                    mov eax, dword [rdi]	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x40009a2	             0xfc8	                               bswap eax	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x40009a4	            0x89c0	                            mov eax, eax	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x40009a6	          0x488906	                    mov qword [rsi], rax	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x40009a9	          0x8b4704	                mov eax, dword [rdi + 4]	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x40009ac	             0xfc8	                               bswap eax	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x40009ae	            0x89c0	                            mov eax, eax	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x40009b0	          0x488902	                    mov qword [rdx], rax	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x40009b3	              0xc3	                                     ret	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
make_qualified_name	FOR,0:DO,0:IF,6:SWITCH,0:functions,0:CALL,8:ELSE,4:WHILE,0	104
0x40019e0	            0x4157	                                push r15	       890	elfcomm.c	FUNCTION_16
0x40019e2	            0x4156	                                push r14	       890	elfcomm.c	FUNCTION_16
0x40019e4	          0x4989ff	                            mov r15, rdi	       890	elfcomm.c	FUNCTION_16
0x40019e7	            0x4155	                                push r13	       890	elfcomm.c	FUNCTION_16
0x40019e9	            0x4154	                                push r12	       890	elfcomm.c	FUNCTION_16
0x40019eb	            0x31ff	                            xor edi, edi	       891	elfcomm.c	FUNCTION_16	CALL_1
0x40019ed	              0x55	                                push rbp	       890	elfcomm.c	FUNCTION_16
0x40019ee	              0x53	                                push rbx	       890	elfcomm.c	FUNCTION_16
0x40019ef	          0x4989d4	                            mov r12, rdx	       890	elfcomm.c	FUNCTION_16
0x40019f2	          0x4989f5	                            mov r13, rsi	       890	elfcomm.c	FUNCTION_16
0x40019f5	      0xba05000000	                              mov edx, 5	       891	elfcomm.c	FUNCTION_16	CALL_1
0x40019fa	      0xbe00000000	                              mov esi, 0	       891	elfcomm.c	FUNCTION_16	CALL_1
0x40019ff	        0x4883ec18	                           sub rsp, 0x18	       890	elfcomm.c	FUNCTION_16
0x4001a03	      0xe800000000	                          call 0x4001a08	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001a08	          0x498b2f	                    mov rbp, qword [r15]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001a0b	          0x4989c6	                            mov r14, rax	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001a0e	          0x4889ef	                            mov rdi, rbp	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001a11	      0xe800000000	                          call 0x4001a16	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001a16	          0x4c89e7	                            mov rdi, r12	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001a19	          0x4889c3	                            mov rbx, rax	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001a1c	      0xe800000000	                          call 0x4001a21	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001a21	        0x418b4f50	            mov ecx, dword [r15 + 0x50] 	       896	elfcomm.c	FUNCTION_16	IF_1
0x4001a25	          0x4801c3	                            add rbx, rax	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001a28	        0x488d7303	                      lea rsi, [rbx + 3]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001a2c	            0x85c9	                           test ecx, ecx	       896	elfcomm.c	FUNCTION_16	IF_1
0x4001a2e	            0x7460	                            je 0x4001a90	       896	elfcomm.c	FUNCTION_16	IF_1
0x4001a30	      0x49837f4000	               cmp qword [r15 + 0x40], 0	       897	elfcomm.c	FUNCTION_16	IF_1
0x4001a35	     0xf84ad000000	                            je 0x4001ae8	       897	elfcomm.c	FUNCTION_16	IF_1
0x4001a3b	        0x498b7d00	                    mov rdi, qword [r13]	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x4001a3f	          0x4885ff	                           test rdi, rdi	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x4001a42	     0xf84f0000000	                            je 0x4001b38	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x4001a48	      0xe800000000	                          call 0x4001a4d	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001a4d	      0x4c8d7c0305	                lea r15, [rbx + rax + 5]	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001a52	          0x4c89ff	                            mov rdi, r15	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001a55	      0xe800000000	                          call 0x4001a5a	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001a5a	          0x4885c0	                           test rax, rax	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001a5d	          0x4889c3	                            mov rbx, rax	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001a60	     0xf84ad000000	                            je 0x4001b13	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001a66	        0x498b4500	                    mov rax, qword [r13]	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001a6a	          0x4885c0	                           test rax, rax	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001a6d	     0xf84cd000000	                            je 0x4001b40	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001a73	            0x4154	                                push r12	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001a75	              0x50	                                push rax	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001a76	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001a79	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001a7f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001a86	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001a8b	          0x4c89fe	                            mov rsi, r15	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001a8e	            0xeb35	                           jmp 0x4001ac5	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001a90	          0x4889f7	                            mov rdi, rsi	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001a93	      0x4889742408	                mov qword [rsp + 8], rsi	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001a98	      0xe800000000	                          call 0x4001a9d	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001a9d	          0x4885c0	                           test rax, rax	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001aa0	          0x4889c3	                            mov rbx, rax	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001aa3	      0x488b742408	                mov rsi, qword [rsp + 8]	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001aa8	            0x7469	                            je 0x4001b13	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001aaa	        0x4883ec08	                              sub rsp, 8	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001aae	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ab1	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ab7	            0x4154	                                push r12	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ab9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ac0	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ac5	          0x4889df	                            mov rdi, rbx	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ac8	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001aca	      0xe800000000	                          call 0x4001acf	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001acf	              0x58	                                 pop rax	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ad0	              0x5a	                                 pop rdx	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ad1	          0x4889d8	                            mov rax, rbx	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001ad4	        0x4883c418	                           add rsp, 0x18	       929	elfcomm.c	FUNCTION_16
0x4001ad8	              0x5b	                                 pop rbx	       929	elfcomm.c	FUNCTION_16
0x4001ad9	              0x5d	                                 pop rbp	       929	elfcomm.c	FUNCTION_16
0x4001ada	            0x415c	                                 pop r12	       929	elfcomm.c	FUNCTION_16
0x4001adc	            0x415d	                                 pop r13	       929	elfcomm.c	FUNCTION_16
0x4001ade	            0x415e	                                 pop r14	       929	elfcomm.c	FUNCTION_16
0x4001ae0	            0x415f	                                 pop r15	       929	elfcomm.c	FUNCTION_16
0x4001ae2	              0xc3	                                     ret	       929	elfcomm.c	FUNCTION_16
0x4001ae3	       0xf1f440000	                   nop dword [rax + rax]	       929	elfcomm.c	FUNCTION_16
0x4001ae8	          0x4889f7	                            mov rdi, rsi	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001aeb	      0x4889742408	                mov qword [rsp + 8], rsi	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001af0	      0xe800000000	                          call 0x4001af5	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001af5	          0x4885c0	                           test rax, rax	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001af8	          0x4889c3	                            mov rbx, rax	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001afb	      0x488b742408	                mov rsi, qword [rsp + 8]	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001b00	            0x7411	                            je 0x4001b13	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001b02	        0x4883ec08	                              sub rsp, 8	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001b06	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001b09	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001b0f	            0x4154	                                push r12	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001b11	            0xeba6	                           jmp 0x4001ab9	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001b13	      0xba05000000	                              mov edx, 5	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001b18	      0xbe00000000	                              mov esi, 0	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001b1d	            0x31ff	                            xor edi, edi	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001b1f	      0xe800000000	                          call 0x4001b24	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001b24	          0x4889c7	                            mov rdi, rax	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001b27	            0x31c0	                            xor eax, eax	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001b29	      0xe800000000	                          call 0x4001b2e	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001b2e	            0x31c0	                            xor eax, eax	       910	elfcomm.c	FUNCTION_16	IF_3
0x4001b30	            0xeba2	                           jmp 0x4001ad4	       910	elfcomm.c	FUNCTION_16	IF_3
0x4001b32	    0x660f1f440000	                    nop word [rax + rax]	       910	elfcomm.c	FUNCTION_16	IF_3
0x4001b38	          0x4c89f7	                            mov rdi, r14	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001b3b	      0xe908ffffff	                           jmp 0x4001a48	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001b40	            0x4154	                                push r12	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001b42	            0x4156	                                push r14	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001b44	      0xe92dffffff	                           jmp 0x4001a76	        64	stdio2.h	FUNCTION_19	CALL_1
error	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:CALL,5:ELSE,0:WHILE,0	54
0x4000040	              0x55	                                push rbp	        35	elfcomm.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        35	elfcomm.c	FUNCTION_1
0x4000042	          0x4889fb	                            mov rbx, rdi	        35	elfcomm.c	FUNCTION_1
0x4000045	    0x4881ecd80000	                           sub rsp, 0xd8	        35	elfcomm.c	FUNCTION_1
0x400004c	            0x84c0	                             test al, al	        35	elfcomm.c	FUNCTION_1
0x400004e	      0x4889742428	             mov qword [rsp + 0x28], rsi	        35	elfcomm.c	FUNCTION_1
0x4000053	      0x4889542430	             mov qword [rsp + 0x30], rdx	        35	elfcomm.c	FUNCTION_1
0x4000058	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        35	elfcomm.c	FUNCTION_1
0x400005d	      0x4c89442440	              mov qword [rsp + 0x40], r8	        35	elfcomm.c	FUNCTION_1
0x4000062	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        35	elfcomm.c	FUNCTION_1
0x4000067	            0x7437	                            je 0x40000a0	        35	elfcomm.c	FUNCTION_1
0x4000069	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	        35	elfcomm.c	FUNCTION_1
0x400006e	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	        35	elfcomm.c	FUNCTION_1
0x4000073	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	        35	elfcomm.c	FUNCTION_1
0x4000078	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	        35	elfcomm.c	FUNCTION_1
0x4000080	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	        35	elfcomm.c	FUNCTION_1
0x4000088	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	        35	elfcomm.c	FUNCTION_1
0x4000090	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	        35	elfcomm.c	FUNCTION_1
0x4000098	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	        35	elfcomm.c	FUNCTION_1
0x40000a0	    0x64488b042528	                mov rax, qword fs:[0x28]	        35	elfcomm.c	FUNCTION_1
0x40000a9	      0x4889442418	             mov qword [rsp + 0x18], rax	        35	elfcomm.c	FUNCTION_1
0x40000ae	            0x31c0	                            xor eax, eax	        35	elfcomm.c	FUNCTION_1
0x40000b0	    0x488b3d000000	            mov rdi, qword [0x040000b7] 	        39	elfcomm.c	FUNCTION_1	CALL_1
0x40000b7	      0xe800000000	                          call 0x40000bc	        39	elfcomm.c	FUNCTION_1	CALL_1
0x40000bc	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000c4	            0x31ff	                            xor edi, edi	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000c6	    0x488b2d000000	            mov rbp, qword [0x040000cd] 	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000cd	      0xba05000000	                              mov edx, 5	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000d2	      0xbe00000000	                              mov esi, 0	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000d7	    0xc70424080000	                      mov dword [rsp], 8	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000de	      0x4889442408	                mov qword [rsp + 8], rax	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000e3	      0x488d442420	                   lea rax, [rsp + 0x20]	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000e8	    0xc74424043000	               mov dword [rsp + 4], 0x30	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000f0	      0x4889442410	             mov qword [rsp + 0x10], rax	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000f5	      0xe800000000	                          call 0x40000fa	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000fa	    0x488b3d000000	            mov rdi, qword [0x04000101] 	        97	stdio2.h	CALL_10
0x4000101	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_10
0x4000104	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_10
0x4000107	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x400010c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_10
0x400010e	      0xe800000000	                          call 0x4000113	        97	stdio2.h	CALL_10
0x4000113	    0x488b3d000000	            mov rdi, qword [0x0400011a] 	       127	stdio2.h	FUNCTION_22	CALL_1
0x400011a	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_22	CALL_1
0x400011d	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_22	CALL_1
0x4000120	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_22	CALL_1
0x4000125	      0xe800000000	                          call 0x400012a	       127	stdio2.h	FUNCTION_22	CALL_1
0x400012a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        45	elfcomm.c	FUNCTION_1
0x400012f	    0x644833042528	                xor rax, qword fs:[0x28]	        45	elfcomm.c	FUNCTION_1
0x4000138	            0x750a	                           jne 0x4000144	        45	elfcomm.c	FUNCTION_1
0x400013a	    0x4881c4d80000	                           add rsp, 0xd8	        45	elfcomm.c	FUNCTION_1
0x4000141	              0x5b	                                 pop rbx	        45	elfcomm.c	FUNCTION_1
0x4000142	              0x5d	                                 pop rbp	        45	elfcomm.c	FUNCTION_1
0x4000143	              0xc3	                                     ret	        45	elfcomm.c	FUNCTION_1
0x4000144	      0xe800000000	                          call 0x4000149	        45	elfcomm.c	FUNCTION_1
byte_put_big_endian	FOR,0:DO,0:IF,0:SWITCH,1:functions,0:CALL,3:ELSE,0:WHILE,0	37
0x4000790	          0x83fa08	                              cmp edx, 8	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000793	              0x53	                                push rbx	        95	elfcomm.c	FUNCTION_4
0x4000794	            0x89d3	                            mov ebx, edx	        95	elfcomm.c	FUNCTION_4
0x4000796	            0x7758	                            ja 0x40007f0	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000798	            0x89d0	                            mov eax, edx	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x400079a	    0xff24c5000000	                       jmp qword [rax*8]	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007a1	     0xf1f80000000	                         nop dword [rax]	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007a8	          0x4889f0	                            mov rax, rsi	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007ab	        0x40887707	                 mov byte [rdi + 7], sil	        99	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007af	        0x48c1e808	                              shr rax, 8	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007b3	          0x884706	                  mov byte [rdi + 6], al	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007b6	          0x4889f0	                            mov rax, rsi	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007b9	        0x48c1e810	                           shr rax, 0x10	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007bd	          0x884705	                  mov byte [rdi + 5], al	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007c0	          0x4889f0	                            mov rax, rsi	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007c3	        0x48c1ee20	                           shr rsi, 0x20	       104	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007c7	        0x48c1e818	                           shr rax, 0x18	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007cb	          0x884704	                  mov byte [rdi + 4], al	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007ce	        0x40887703	                 mov byte [rdi + 3], sil	       107	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007d2	        0x48c1ee08	                              shr rsi, 8	       108	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007d6	        0x40887702	                 mov byte [rdi + 2], sil	       111	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007da	        0x48c1ee08	                              shr rsi, 8	       112	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007de	        0x40887701	                 mov byte [rdi + 1], sil	       115	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007e2	        0x48c1ee08	                              shr rsi, 8	       116	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007e6	          0x408837	                     mov byte [rdi], sil	       119	elfcomm.c	FUNCTION_4	SWITCH_1
0x40007e9	              0x5b	                                 pop rbx	       126	elfcomm.c	FUNCTION_4
0x40007ea	              0xc3	                                     ret	       126	elfcomm.c	FUNCTION_4
0x40007eb	       0xf1f440000	                   nop dword [rax + rax]	       126	elfcomm.c	FUNCTION_4
0x40007f0	      0xba05000000	                              mov edx, 5	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x40007f5	      0xbe00000000	                              mov esi, 0	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x40007fa	            0x31ff	                            xor edi, edi	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x40007fc	      0xe800000000	                          call 0x4000801	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000801	            0x89de	                            mov esi, ebx	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000803	          0x4889c7	                            mov rdi, rax	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000806	            0x31c0	                            xor eax, eax	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000808	      0xe800000000	                          call 0x400080d	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x400080d	      0xe800000000	                          call 0x4000812	       124	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_3
warn	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:CALL,5:ELSE,0:WHILE,0	54
0x40005f0	              0x55	                                push rbp	        49	elfcomm.c	FUNCTION_2
0x40005f1	              0x53	                                push rbx	        49	elfcomm.c	FUNCTION_2
0x40005f2	          0x4889fb	                            mov rbx, rdi	        49	elfcomm.c	FUNCTION_2
0x40005f5	    0x4881ecd80000	                           sub rsp, 0xd8	        49	elfcomm.c	FUNCTION_2
0x40005fc	            0x84c0	                             test al, al	        49	elfcomm.c	FUNCTION_2
0x40005fe	      0x4889742428	             mov qword [rsp + 0x28], rsi	        49	elfcomm.c	FUNCTION_2
0x4000603	      0x4889542430	             mov qword [rsp + 0x30], rdx	        49	elfcomm.c	FUNCTION_2
0x4000608	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        49	elfcomm.c	FUNCTION_2
0x400060d	      0x4c89442440	              mov qword [rsp + 0x40], r8	        49	elfcomm.c	FUNCTION_2
0x4000612	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        49	elfcomm.c	FUNCTION_2
0x4000617	            0x7437	                            je 0x4000650	        49	elfcomm.c	FUNCTION_2
0x4000619	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	        49	elfcomm.c	FUNCTION_2
0x400061e	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	        49	elfcomm.c	FUNCTION_2
0x4000623	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	        49	elfcomm.c	FUNCTION_2
0x4000628	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	        49	elfcomm.c	FUNCTION_2
0x4000630	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	        49	elfcomm.c	FUNCTION_2
0x4000638	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	        49	elfcomm.c	FUNCTION_2
0x4000640	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	        49	elfcomm.c	FUNCTION_2
0x4000648	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	        49	elfcomm.c	FUNCTION_2
0x4000650	    0x64488b042528	                mov rax, qword fs:[0x28]	        49	elfcomm.c	FUNCTION_2
0x4000659	      0x4889442418	             mov qword [rsp + 0x18], rax	        49	elfcomm.c	FUNCTION_2
0x400065e	            0x31c0	                            xor eax, eax	        49	elfcomm.c	FUNCTION_2
0x4000660	    0x488b3d000000	            mov rdi, qword [0x04000667] 	        53	elfcomm.c	FUNCTION_2	CALL_1
0x4000667	      0xe800000000	                          call 0x400066c	        53	elfcomm.c	FUNCTION_2	CALL_1
0x400066c	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	        55	elfcomm.c	FUNCTION_2	CALL_2
0x4000674	            0x31ff	                            xor edi, edi	        56	elfcomm.c	FUNCTION_2	CALL_3
0x4000676	    0x488b2d000000	            mov rbp, qword [0x0400067d] 	        56	elfcomm.c	FUNCTION_2	CALL_3
0x400067d	      0xba05000000	                              mov edx, 5	        56	elfcomm.c	FUNCTION_2	CALL_3
0x4000682	      0xbe00000000	                              mov esi, 0	        56	elfcomm.c	FUNCTION_2	CALL_3
0x4000687	    0xc70424080000	                      mov dword [rsp], 8	        55	elfcomm.c	FUNCTION_2	CALL_2
0x400068e	      0x4889442408	                mov qword [rsp + 8], rax	        55	elfcomm.c	FUNCTION_2	CALL_2
0x4000693	      0x488d442420	                   lea rax, [rsp + 0x20]	        55	elfcomm.c	FUNCTION_2	CALL_2
0x4000698	    0xc74424043000	               mov dword [rsp + 4], 0x30	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40006a0	      0x4889442410	             mov qword [rsp + 0x10], rax	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40006a5	      0xe800000000	                          call 0x40006aa	        56	elfcomm.c	FUNCTION_2	CALL_3
0x40006aa	    0x488b3d000000	            mov rdi, qword [0x040006b1] 	        97	stdio2.h	CALL_10
0x40006b1	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_10
0x40006b4	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_10
0x40006b7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x40006bc	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_10
0x40006be	      0xe800000000	                          call 0x40006c3	        97	stdio2.h	CALL_10
0x40006c3	    0x488b3d000000	            mov rdi, qword [0x040006ca] 	       127	stdio2.h	FUNCTION_22	CALL_1
0x40006ca	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_22	CALL_1
0x40006cd	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_22	CALL_1
0x40006d0	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_22	CALL_1
0x40006d5	      0xe800000000	                          call 0x40006da	       127	stdio2.h	FUNCTION_22	CALL_1
0x40006da	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        59	elfcomm.c	FUNCTION_2
0x40006df	    0x644833042528	                xor rax, qword fs:[0x28]	        59	elfcomm.c	FUNCTION_2
0x40006e8	            0x750a	                           jne 0x40006f4	        59	elfcomm.c	FUNCTION_2
0x40006ea	    0x4881c4d80000	                           add rsp, 0xd8	        59	elfcomm.c	FUNCTION_2
0x40006f1	              0x5b	                                 pop rbx	        59	elfcomm.c	FUNCTION_2
0x40006f2	              0x5d	                                 pop rbp	        59	elfcomm.c	FUNCTION_2
0x40006f3	              0xc3	                                     ret	        59	elfcomm.c	FUNCTION_2
0x40006f4	      0xe800000000	                          call 0x40006f9	        59	elfcomm.c	FUNCTION_2
byte_put_little_endian	FOR,0:DO,0:IF,0:SWITCH,1:functions,0:CALL,3:ELSE,0:WHILE,0	41
0x4000700	          0x83fa08	                              cmp edx, 8	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000703	              0x53	                                push rbx	        65	elfcomm.c	FUNCTION_3
0x4000704	            0x775a	                            ja 0x4000760	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000706	            0x89d0	                            mov eax, edx	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000708	    0xff24c5000000	                       jmp qword [rax*8]	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x400070f	              0x90	                                     nop	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000710	          0x4889f0	                            mov rax, rsi	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000713	        0x48c1e838	                           shr rax, 0x38	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000717	          0x884707	                  mov byte [rdi + 7], al	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x400071a	          0x4889f0	                            mov rax, rsi	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x400071d	        0x48c1e830	                           shr rax, 0x30	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000721	          0x884706	                  mov byte [rdi + 6], al	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000724	          0x4889f0	                            mov rax, rsi	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000727	        0x48c1e828	                           shr rax, 0x28	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x400072b	          0x884705	                  mov byte [rdi + 5], al	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x400072e	          0x4889f0	                            mov rax, rsi	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000731	        0x48c1e820	                           shr rax, 0x20	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000735	          0x884704	                  mov byte [rdi + 4], al	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000738	          0x4889f0	                            mov rax, rsi	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x400073b	        0x48c1e818	                           shr rax, 0x18	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x400073f	          0x884703	                  mov byte [rdi + 3], al	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000742	          0x4889f0	                            mov rax, rsi	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000745	        0x48c1e810	                           shr rax, 0x10	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000749	          0x884702	                  mov byte [rdi + 2], al	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x400074c	          0x4889f0	                            mov rax, rsi	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x400074f	        0x48c1e808	                              shr rax, 8	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000753	          0x884701	                  mov byte [rdi + 1], al	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000756	          0x408837	                     mov byte [rdi], sil	        84	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000759	              0x5b	                                 pop rbx	        91	elfcomm.c	FUNCTION_3
0x400075a	              0xc3	                                     ret	        91	elfcomm.c	FUNCTION_3
0x400075b	       0xf1f440000	                   nop dword [rax + rax]	        91	elfcomm.c	FUNCTION_3
0x4000760	            0x89d3	                            mov ebx, edx	        91	elfcomm.c	FUNCTION_3
0x4000762	      0xbe00000000	                              mov esi, 0	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000767	      0xba05000000	                              mov edx, 5	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x400076c	            0x31ff	                            xor edi, edi	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x400076e	      0xe800000000	                          call 0x4000773	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000773	            0x89de	                            mov esi, ebx	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000775	          0x4889c7	                            mov rdi, rax	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x4000778	            0x31c0	                            xor eax, eax	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x400077a	      0xe800000000	                          call 0x400077f	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x400077f	      0xe800000000	                          call 0x4000784	        89	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_3
byte_get_signed	FOR,0:DO,0:IF,0:SWITCH,1:functions,0:CALL,2:ELSE,0:WHILE,0	29
0x4000910	              0x53	                                push rbx	       345	elfcomm.c	FUNCTION_7
0x4000911	            0x89f3	                            mov ebx, esi	       345	elfcomm.c	FUNCTION_7
0x4000913	            0x89de	                            mov esi, ebx	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000915	    0xff1500000000	                 call qword [0x0400091b]	       346	elfcomm.c	FUNCTION_7	CALL_1
0x400091b	          0x83fb08	                              cmp ebx, 8	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x400091e	            0x7750	                            ja 0x4000970	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000920	    0xff24dd000000	                       jmp qword [rbx*8]	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000927	    0x660f1f840000	                    nop word [rax + rax]	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000930	    0x483500008000	                       xor rax, 0x800000	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000936	    0x482d00008000	                       sub rax, 0x800000	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x400093c	              0x5b	                                 pop rbx	       370	elfcomm.c	FUNCTION_7
0x400093d	              0xc3	                                     ret	       370	elfcomm.c	FUNCTION_7
0x400093e	            0x6690	                                     nop	       370	elfcomm.c	FUNCTION_7
0x4000940	      0xba00000080	                     mov edx, 0x80000000	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000945	          0x4831d0	                            xor rax, rdx	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000948	    0x480500000080	             add rax, 0xffffffff80000000	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x400094e	              0x5b	                                 pop rbx	       370	elfcomm.c	FUNCTION_7
0x400094f	              0xc3	                                     ret	       370	elfcomm.c	FUNCTION_7
0x4000950	            0x3480	                            xor al, 0x80	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000952	        0x4883c080	             add rax, 0xffffffffffffff80	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000956	              0x5b	                                 pop rbx	       370	elfcomm.c	FUNCTION_7
0x4000957	              0xc3	                                     ret	       370	elfcomm.c	FUNCTION_7
0x4000958	     0xf1f84000000	                   nop dword [rax + rax]	       370	elfcomm.c	FUNCTION_7
0x4000960	          0x80f480	                            xor ah, 0x80	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000963	    0x482d00800000	                         sub rax, 0x8000	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000969	              0x5b	                                 pop rbx	       370	elfcomm.c	FUNCTION_7
0x400096a	              0xc3	                                     ret	       370	elfcomm.c	FUNCTION_7
0x400096b	       0xf1f440000	                   nop dword [rax + rax]	       370	elfcomm.c	FUNCTION_7
0x4000970	      0xe800000000	                          call 0x4000975	       368	elfcomm.c	FUNCTION_7	SWITCH_1	CALL_2
get_archive_member_name_at	FOR,0:DO,0:IF,3:SWITCH,0:functions,0:CALL,10:ELSE,0:WHILE,0	272
0x4001160	            0x4155	                                push r13	       856	elfcomm.c	FUNCTION_15
0x4001162	            0x4154	                                push r12	       856	elfcomm.c	FUNCTION_15
0x4001164	          0x4989d4	                            mov r12, rdx	       856	elfcomm.c	FUNCTION_15
0x4001167	              0x55	                                push rbp	       856	elfcomm.c	FUNCTION_15
0x4001168	              0x53	                                push rbx	       856	elfcomm.c	FUNCTION_15
0x4001169	          0x4889fb	                            mov rbx, rdi	       856	elfcomm.c	FUNCTION_15
0x400116c	            0x31d2	                            xor edx, edx	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x400116e	        0x4883ec18	                           sub rsp, 0x18	       856	elfcomm.c	FUNCTION_15
0x4001172	        0x488b7f08	                mov rdi, qword [rdi + 8]	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001176	    0x64488b042528	                mov rax, qword fs:[0x28]	       856	elfcomm.c	FUNCTION_15
0x400117f	      0x4889442408	                mov qword [rsp + 8], rax	       856	elfcomm.c	FUNCTION_15
0x4001184	            0x31c0	                            xor eax, eax	       856	elfcomm.c	FUNCTION_15
0x4001186	      0xe800000000	                          call 0x400118b	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x400118b	            0x85c0	                           test eax, eax	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x400118d	     0xf85dd020000	                           jne 0x4001470	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001193	        0x488d6b58	                   lea rbp, [rbx + 0x58]	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001197	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_31	CALL_9
0x400119b	      0xba3c000000	                           mov edx, 0x3c	       295	stdio2.h	FUNCTION_31	CALL_9
0x40011a0	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_31	CALL_9
0x40011a5	          0x4889ef	                            mov rdi, rbp	       295	stdio2.h	FUNCTION_31	CALL_9
0x40011a8	      0xe800000000	                          call 0x40011ad	       295	stdio2.h	FUNCTION_31	CALL_9
0x40011ad	        0x4883f83c	                           cmp rax, 0x3c	       865	elfcomm.c	FUNCTION_15	IF_2
0x40011b1	     0xf8539020000	                           jne 0x40013f0	       865	elfcomm.c	FUNCTION_15	IF_2
0x40011b7	    0x488dbb920000	                   lea rdi, [rbx + 0x92]	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011be	      0xba02000000	                              mov edx, 2	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011c3	      0xbe00000000	                              mov esi, 0	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011c8	      0xe800000000	                          call 0x40011cd	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011cd	            0x85c0	                           test eax, eax	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011cf	     0xf854b020000	                           jne 0x4001420	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011d5	        0x807b582f	            cmp byte [rbx + 0x58], 0x2f 	       762	elfcomm.c	FUNCTION_14	IF_1
0x40011d9	     0xf84d9000000	                            je 0x40012b8	       762	elfcomm.c	FUNCTION_14	IF_1
0x40011df	        0x807b592f	            cmp byte [rbx + 0x59], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x40011e3	     0xf84e7020000	                            je 0x40014d0	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x40011e9	        0x807b5a2f	            cmp byte [rbx + 0x5a], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x40011ed	     0xf84ed020000	                            je 0x40014e0	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x40011f3	        0x807b5b2f	            cmp byte [rbx + 0x5b], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x40011f7	     0xf8433020000	                            je 0x4001430	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x40011fd	        0x807b5c2f	            cmp byte [rbx + 0x5c], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001201	     0xf84e9020000	                            je 0x40014f0	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001207	        0x807b5d2f	            cmp byte [rbx + 0x5d], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400120b	     0xf84ef020000	                            je 0x4001500	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001211	        0x807b5e2f	            cmp byte [rbx + 0x5e], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001215	     0xf84f5020000	                            je 0x4001510	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400121b	        0x807b5f2f	            cmp byte [rbx + 0x5f], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400121f	     0xf84fb020000	                            je 0x4001520	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001225	        0x807b602f	            cmp byte [rbx + 0x60], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001229	     0xf8411030000	                            je 0x4001540	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400122f	        0x807b612f	            cmp byte [rbx + 0x61], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001233	     0xf8417030000	                            je 0x4001550	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001239	        0x807b622f	            cmp byte [rbx + 0x62], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400123d	     0xf841d030000	                            je 0x4001560	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001243	        0x807b632f	            cmp byte [rbx + 0x63], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001247	     0xf8423030000	                            je 0x4001570	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400124d	        0x807b642f	            cmp byte [rbx + 0x64], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001251	     0xf8429030000	                            je 0x4001580	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001257	        0x807b652f	            cmp byte [rbx + 0x65], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400125b	     0xf842f030000	                            je 0x4001590	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001261	        0x807b662f	            cmp byte [rbx + 0x66], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001265	     0xf8435030000	                            je 0x40015a0	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400126b	        0x807b672f	            cmp byte [rbx + 0x67], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400126f	     0xf843b030000	                            je 0x40015b0	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001275	      0xbf11000000	                           mov edi, 0x11	       842	elfcomm.c	FUNCTION_14	CALL_14
0x400127a	      0xe800000000	                          call 0x400127f	       842	elfcomm.c	FUNCTION_14	CALL_14
0x400127f	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	        53	string3.h	FUNCTION_34	CALL_3
0x4001283	        0x488b5b60	            mov rbx, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_34	CALL_3
0x4001287	        0xc6401000	                mov byte [rax + 0x10], 0	       844	elfcomm.c	FUNCTION_14
0x400128b	          0x488908	                    mov qword [rax], rcx	        53	string3.h	FUNCTION_34	CALL_3
0x400128e	        0x48895808	                mov qword [rax + 8], rbx	        53	string3.h	FUNCTION_34	CALL_3
0x4001292	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       878	elfcomm.c	FUNCTION_15
0x4001297	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       878	elfcomm.c	FUNCTION_15
0x40012a0	     0xf8546030000	                           jne 0x40015ec	       878	elfcomm.c	FUNCTION_15
0x40012a6	        0x4883c418	                           add rsp, 0x18	       878	elfcomm.c	FUNCTION_15
0x40012aa	              0x5b	                                 pop rbx	       878	elfcomm.c	FUNCTION_15
0x40012ab	              0x5d	                                 pop rbp	       878	elfcomm.c	FUNCTION_15
0x40012ac	            0x415c	                                 pop r12	       878	elfcomm.c	FUNCTION_15
0x40012ae	            0x415d	                                 pop r13	       878	elfcomm.c	FUNCTION_15
0x40012b0	              0xc3	                                     ret	       878	elfcomm.c	FUNCTION_15
0x40012b1	     0xf1f80000000	                         nop dword [rax]	       878	elfcomm.c	FUNCTION_15
0x40012b8	      0x48837b3000	               cmp qword [rbx + 0x30], 0	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40012bd	            0x7407	                            je 0x40012c6	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40012bf	      0x48837b3800	               cmp qword [rbx + 0x38], 0	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40012c4	            0x7522	                           jne 0x40012e8	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x40012c6	      0xba05000000	                              mov edx, 5	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x40012cb	      0xbe00000000	                              mov esi, 0	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x40012d0	            0x31ff	                            xor edi, edi	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40012d2	      0xe800000000	                          call 0x40012d7	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40012d7	          0x4889c7	                            mov rdi, rax	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40012da	            0x31c0	                            xor eax, eax	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40012dc	      0xe800000000	                          call 0x40012e1	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40012e1	            0x31c0	                            xor eax, eax	       806	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x40012e3	            0xebad	                           jmp 0x4001292	       806	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x40012e5	           0xf1f00	                         nop dword [rax]	       806	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x40012e8	        0x488d7b59	                   lea rdi, [rbx + 0x59]	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x40012ec	    0x440fb6ab9200	          movzx r13d, byte [rbx + 0x92] 	       777	elfcomm.c	FUNCTION_14	IF_1
0x40012f4	      0xba0a000000	                            mov edx, 0xa	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x40012f9	    0x48c743400000	               mov qword [rbx + 0x40], 0	       776	elfcomm.c	FUNCTION_14	IF_1
0x4001301	    0xc68392000000	                mov byte [rbx + 0x92], 0	       778	elfcomm.c	FUNCTION_14	IF_1
0x4001308	          0x4889e6	                            mov rsi, rsp	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400130b	      0xe800000000	                          call 0x4001310	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001310	          0x8b5350	            mov edx, dword [rbx + 0x50] 	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001313	          0x4889c5	                            mov rbp, rax	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001316	            0x85d2	                           test edx, edx	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001318	            0x7426	                            je 0x4001340	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400131a	        0x488b0424	                    mov rax, qword [rsp]	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400131e	          0x4885c0	                           test rax, rax	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001321	            0x741d	                            je 0x4001340	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001323	          0x80383a	                    cmp byte [rax], 0x3a	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001326	            0x7518	                           jne 0x4001340	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001328	        0x488d7801	                      lea rdi, [rax + 1]	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x400132c	      0xba0a000000	                            mov edx, 0xa	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001331	            0x31f6	                            xor esi, esi	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001333	      0xe800000000	                          call 0x4001338	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001338	        0x48894340	             mov qword [rbx + 0x40], rax	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x400133c	         0xf1f4000	                         nop dword [rax]	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x4001340	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x4001344	    0x4488ab920000	             mov byte [rbx + 0x92], r13b	       782	elfcomm.c	FUNCTION_14	IF_1
0x400134b	          0x4839cd	                            cmp rbp, rcx	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x400134e	     0xf87f4000000	                            ja 0x4001448	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x4001354	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001358	     0xf835c020000	                           jae 0x40015ba	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x400135e	         0xfb6042e	             movzx eax, byte [rsi + rbp]	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001362	            0x84c0	                             test al, al	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001364	     0xf8450020000	                            je 0x40015ba	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x400136a	            0x3c0a	                             cmp al, 0xa	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x400136c	     0xf8448020000	                            je 0x40015ba	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001372	          0x4889e8	                            mov rax, rbp	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001375	            0xeb16	                           jmp 0x400138d	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001377	    0x660f1f840000	                    nop word [rax + rax]	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001380	         0xfb61406	             movzx edx, byte [rsi + rax]	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001384	          0x80fa0a	                             cmp dl, 0xa	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001387	            0x740d	                            je 0x4001396	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001389	            0x84d2	                             test dl, dl	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x400138b	            0x7409	                            je 0x4001396	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x400138d	        0x4883c001	                              add rax, 1	       792	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001391	          0x4839c1	                            cmp rcx, rax	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001394	            0x77ea	                            ja 0x4001380	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001396	          0x4885c0	                           test rax, rax	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001399	     0xf8491010000	                            je 0x4001530	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x400139f	      0x807c06ff2f	         cmp byte [rsi + rax - 1], 0x2f 	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x40013a4	        0x488d50ff	                      lea rdx, [rax - 1]	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x40013a8	        0x480f44c2	                          cmove rax, rdx	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x40013ac	          0x4839c1	                            cmp rcx, rax	       795	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x40013af	     0xf837b010000	                           jae 0x4001530	       795	elfcomm.c	FUNCTION_14	IF_1	IF_6
0x40013b5	        0xc6040e00	                 mov byte [rsi + rcx], 0	       797	elfcomm.c	FUNCTION_14	IF_1
0x40013b9	          0x8b4350	            mov eax, dword [rbx + 0x50] 	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x40013bc	            0x85c0	                           test eax, eax	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x40013be	     0xf84fc000000	                            je 0x40014c0	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x40013c4	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x40013c9	     0xf84f1000000	                            je 0x40014c0	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x40013cf	          0x4839cd	                            cmp rbp, rcx	       803	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x40013d2	     0xf82aa000000	                            jb 0x4001482	       803	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x40013d8	      0xba05000000	                              mov edx, 5	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40013dd	      0xbe00000000	                              mov esi, 0	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40013e2	      0xe9e9feffff	                           jmp 0x40012d0	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40013e7	    0x660f1f840000	                    nop word [rax + rax]	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x40013f0	          0x488b1b	                    mov rbx, qword [rbx]	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x40013f3	      0xba05000000	                              mov edx, 5	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x40013f8	      0xbe00000000	                              mov esi, 0	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x40013fd	            0x31ff	                            xor edi, edi	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x40013ff	      0xe800000000	                          call 0x4001404	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001404	          0x4889de	                            mov rsi, rbx	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001407	          0x4889c7	                            mov rdi, rax	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x400140a	            0x31c0	                            xor eax, eax	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x400140c	      0xe800000000	                          call 0x4001411	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001411	            0x31c0	                            xor eax, eax	       868	elfcomm.c	FUNCTION_15	IF_2
0x4001413	      0xe97afeffff	                           jmp 0x4001292	       868	elfcomm.c	FUNCTION_15	IF_2
0x4001418	     0xf1f84000000	                   nop dword [rax + rax]	       868	elfcomm.c	FUNCTION_15	IF_2
0x4001420	          0x488b1b	                    mov rbx, qword [rbx]	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001423	      0xba05000000	                              mov edx, 5	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001428	      0xbe00000000	                              mov esi, 0	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x400142d	            0xebce	                           jmp 0x40013fd	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x400142f	              0x90	                                     nop	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x4001430	      0xb803000000	                              mov eax, 3	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001435	           0xf1f00	                         nop dword [rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001438	      0xc644035800	          mov byte [rbx + rax + 0x58], 0	       835	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400143d	          0x4889e8	                            mov rax, rbp	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001440	      0xe94dfeffff	                           jmp 0x4001292	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001445	           0xf1f00	                         nop dword [rax]	       864	elfcomm.c	FUNCTION_15	CALL_4
0x4001448	      0xba05000000	                              mov edx, 5	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x400144d	      0xbe00000000	                              mov esi, 0	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x4001452	            0x31ff	                            xor edi, edi	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x4001454	      0xe800000000	                          call 0x4001459	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x4001459	          0x4889ee	                            mov rsi, rbp	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x400145c	          0x4889c7	                            mov rdi, rax	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x400145f	            0x31c0	                            xor eax, eax	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x4001461	      0xe800000000	                          call 0x4001466	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x4001466	            0x31c0	                            xor eax, eax	       787	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x4001468	      0xe925feffff	                           jmp 0x4001292	       787	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x400146d	           0xf1f00	                         nop dword [rax]	       787	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x4001470	          0x488b1b	                    mov rbx, qword [rbx]	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001473	      0xba05000000	                              mov edx, 5	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001478	      0xbe00000000	                              mov esi, 0	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x400147d	      0xe97bffffff	                           jmp 0x40013fd	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001482	          0x4889ee	                            mov rsi, rbp	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x4001485	        0x48037330	             add rsi, qword [rbx + 0x30]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x4001489	          0x488b3b	                    mov rdi, qword [rbx]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x400148c	          0x4829e9	                            sub rcx, rbp	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x400148f	          0x4889ca	                            mov rdx, rcx	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x4001492	      0xe800000000	                          call 0x4001497	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x4001497	          0x4885c0	                           test rax, rax	       813	elfcomm.c	FUNCTION_14	IF_1	IF_9
0x400149a	          0x4989c5	                            mov r13, rax	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x400149d	            0x7413	                            je 0x40014b2	       813	elfcomm.c	FUNCTION_14	IF_1	IF_9
0x400149f	          0x4889c6	                            mov rsi, rax	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40014a2	          0x4c89e7	                            mov rdi, r12	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40014a5	      0xe800000000	                          call 0x40014aa	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40014aa	            0x85c0	                           test eax, eax	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40014ac	     0xf8410010000	                            je 0x40015c2	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40014b2	          0x4c89ef	                            mov rdi, r13	       825	elfcomm.c	FUNCTION_14	IF_1	CALL_13
0x40014b5	      0xe800000000	                          call 0x40014ba	       825	elfcomm.c	FUNCTION_14	IF_1	CALL_13
0x40014ba	    0x660f1f440000	                    nop word [rax + rax]	       825	elfcomm.c	FUNCTION_14	IF_1	CALL_13
0x40014c0	          0x4889e8	                            mov rax, rbp	       828	elfcomm.c	FUNCTION_14	IF_1
0x40014c3	        0x48034330	             add rax, qword [rbx + 0x30]	       828	elfcomm.c	FUNCTION_14	IF_1
0x40014c7	      0xe9c6fdffff	                           jmp 0x4001292	       828	elfcomm.c	FUNCTION_14	IF_1
0x40014cc	         0xf1f4000	                         nop dword [rax]	       828	elfcomm.c	FUNCTION_14	IF_1
0x40014d0	      0xb801000000	                              mov eax, 1	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40014d5	      0xe95effffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40014da	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40014e0	      0xb802000000	                              mov eax, 2	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40014e5	      0xe94effffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40014ea	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40014f0	      0xb804000000	                              mov eax, 4	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40014f5	      0xe93effffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40014fa	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001500	      0xb805000000	                              mov eax, 5	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001505	      0xe92effffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400150a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001510	      0xb806000000	                              mov eax, 6	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001515	      0xe91effffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400151a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001520	      0xb807000000	                              mov eax, 7	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001525	      0xe90effffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400152a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001530	          0x4889c1	                            mov rcx, rax	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001533	      0xe97dfeffff	                           jmp 0x40013b5	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001538	     0xf1f84000000	                   nop dword [rax + rax]	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001540	      0xb808000000	                              mov eax, 8	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001545	      0xe9eefeffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400154a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001550	      0xb809000000	                              mov eax, 9	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001555	      0xe9defeffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400155a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001560	      0xb80a000000	                            mov eax, 0xa	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001565	      0xe9cefeffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400156a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001570	      0xb80b000000	                            mov eax, 0xb	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001575	      0xe9befeffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400157a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001580	      0xb80c000000	                            mov eax, 0xc	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001585	      0xe9aefeffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400158a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001590	      0xb80d000000	                            mov eax, 0xd	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001595	      0xe99efeffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x400159a	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40015a0	      0xb80e000000	                            mov eax, 0xe	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40015a5	      0xe98efeffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40015aa	    0x660f1f440000	                    nop word [rax + rax]	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40015b0	      0xb80f000000	                            mov eax, 0xf	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40015b5	      0xe97efeffff	                           jmp 0x4001438	       832	elfcomm.c	FUNCTION_14	FOR_1
0x40015ba	          0x4889e8	                            mov rax, rbp	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40015bd	      0xe9d4fdffff	                           jmp 0x4001396	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40015c2	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40015c6	            0x31d2	                            xor edx, edx	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40015c8	          0x4c89e7	                            mov rdi, r12	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40015cb	      0xe800000000	                          call 0x40015d0	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40015d0	          0x4885c0	                           test rax, rax	       819	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x40015d3	          0x4989c4	                            mov r12, rax	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40015d6	     0xf84d6feffff	                            je 0x40014b2	       819	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x40015dc	          0x4c89ef	                            mov rdi, r13	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x40015df	      0xe800000000	                          call 0x40015e4	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x40015e4	          0x4c89e0	                            mov rax, r12	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x40015e7	      0xe9a6fcffff	                           jmp 0x4001292	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x40015ec	      0xe800000000	                          call 0x40015f1	       878	elfcomm.c	FUNCTION_15
adjust_relative_path	FOR,0:DO,0:IF,5:SWITCH,0:functions,0:CALL,13:ELSE,1:WHILE,0	80
0x40009c0	            0x4157	                                push r15	       398	elfcomm.c	FUNCTION_9
0x40009c2	            0x4156	                                push r14	       398	elfcomm.c	FUNCTION_9
0x40009c4	          0x4989ff	                            mov r15, rdi	       398	elfcomm.c	FUNCTION_9
0x40009c7	            0x4155	                                push r13	       398	elfcomm.c	FUNCTION_9
0x40009c9	            0x4154	                                push r12	       398	elfcomm.c	FUNCTION_9
0x40009cb	          0x4989f5	                            mov r13, rsi	       398	elfcomm.c	FUNCTION_9
0x40009ce	              0x55	                                push rbp	       398	elfcomm.c	FUNCTION_9
0x40009cf	              0x53	                                push rbx	       398	elfcomm.c	FUNCTION_9
0x40009d0	          0x4989d4	                            mov r12, rdx	       398	elfcomm.c	FUNCTION_9
0x40009d3	        0x4883ec08	                              sub rsp, 8	       398	elfcomm.c	FUNCTION_9
0x40009d7	      0xe800000000	                          call 0x40009dc	       400	elfcomm.c	FUNCTION_9	CALL_1
0x40009dc	      0x41807d002f	                    cmp byte [r13], 0x2f	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x40009e1	            0x746d	                            je 0x4000a50	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x40009e3	          0x4939c7	                            cmp r15, rax	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x40009e6	            0x7468	                            je 0x4000a50	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x40009e8	          0x4c29f8	                            sub rax, r15	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x40009eb	        0x4e8d3420	                    lea r14, [rax + r12]	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x40009ef	          0x4889c3	                            mov rbx, rax	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x40009f2	        0x498d7e01	                      lea rdi, [r14 + 1]	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x40009f6	          0x4839f8	                            cmp rax, rdi	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x40009f9	     0xf8781000000	                            ja 0x4000a80	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x40009ff	          0x4939fc	                            cmp r12, rdi	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000a02	            0x777c	                            ja 0x4000a80	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000a04	      0xe800000000	                          call 0x4000a09	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000a09	          0x4885c0	                           test rax, rax	       440	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000a0c	          0x4889c5	                            mov rbp, rax	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000a0f	     0xf8493000000	                            je 0x4000aa8	       440	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000a15	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_34	CALL_3
0x4000a18	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_34	CALL_3
0x4000a1b	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_34	CALL_3
0x4000a1e	      0xe800000000	                          call 0x4000a23	        53	string3.h	FUNCTION_34	CALL_3
0x4000a23	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	        53	string3.h	FUNCTION_34	CALL_3
0x4000a28	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_34	CALL_3
0x4000a2b	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_34	CALL_3
0x4000a2e	      0xe800000000	                          call 0x4000a33	        53	string3.h	FUNCTION_34	CALL_3
0x4000a33	    0x42c644350000	                 mov byte [rbp + r14], 0	       447	elfcomm.c	FUNCTION_9	ELSE_1
0x4000a39	        0x4883c408	                              add rsp, 8	       450	elfcomm.c	FUNCTION_9
0x4000a3d	          0x4889e8	                            mov rax, rbp	       450	elfcomm.c	FUNCTION_9
0x4000a40	              0x5b	                                 pop rbx	       450	elfcomm.c	FUNCTION_9
0x4000a41	              0x5d	                                 pop rbp	       450	elfcomm.c	FUNCTION_9
0x4000a42	            0x415c	                                 pop r12	       450	elfcomm.c	FUNCTION_9
0x4000a44	            0x415d	                                 pop r13	       450	elfcomm.c	FUNCTION_9
0x4000a46	            0x415e	                                 pop r14	       450	elfcomm.c	FUNCTION_9
0x4000a48	            0x415f	                                 pop r15	       450	elfcomm.c	FUNCTION_9
0x4000a4a	              0xc3	                                     ret	       450	elfcomm.c	FUNCTION_9
0x4000a4b	       0xf1f440000	                   nop dword [rax + rax]	       450	elfcomm.c	FUNCTION_9
0x4000a50	          0x4c89e7	                            mov rdi, r12	       412	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000a53	            0x31ed	                            xor ebp, ebp	       413	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000a55	        0x4883c701	                              add rdi, 1	       412	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000a59	            0x74de	                            je 0x4000a39	       412	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000a5b	      0xe800000000	                          call 0x4000a60	       414	elfcomm.c	FUNCTION_9	IF_1	CALL_3
0x4000a60	          0x4885c0	                           test rax, rax	       415	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000a63	            0x7443	                            je 0x4000aa8	       415	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000a65	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_34	CALL_3
0x4000a68	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_34	CALL_3
0x4000a6b	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_34	CALL_3
0x4000a6e	      0xe800000000	                          call 0x4000a73	        53	string3.h	FUNCTION_34	CALL_3
0x4000a73	      0x42c6042000	                 mov byte [rax + r12], 0	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000a78	          0x4889c5	                            mov rbp, rax	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000a7b	            0xebbc	                           jmp 0x4000a39	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000a7d	           0xf1f00	                         nop dword [rax]	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000a80	      0xba05000000	                              mov edx, 5	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000a85	      0xbe00000000	                              mov esi, 0	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000a8a	            0x31ff	                            xor edi, edi	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000a8c	      0xe800000000	                          call 0x4000a91	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000a91	          0x4c89e6	                            mov rsi, r12	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000a94	          0x4889c7	                            mov rdi, rax	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000a97	            0x31c0	                            xor eax, eax	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000a99	      0xe800000000	                          call 0x4000a9e	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000a9e	            0x31ed	                            xor ebp, ebp	       436	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000aa0	            0xeb97	                           jmp 0x4000a39	       436	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000aa2	    0x660f1f440000	                    nop word [rax + rax]	       436	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000aa8	            0x31ff	                            xor edi, edi	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000aaa	      0xba05000000	                              mov edx, 5	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000aaf	      0xbe00000000	                              mov esi, 0	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000ab4	      0xe800000000	                          call 0x4000ab9	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000ab9	          0x4889c7	                            mov rdi, rax	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000abc	            0x31c0	                            xor eax, eax	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000abe	      0xe800000000	                          call 0x4000ac3	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000ac3	      0xe971ffffff	                           jmp 0x4000a39	       443	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
process_archive_index_and_symbols	FOR,1:DO,0:IF,13:SWITCH,0:functions,0:CALL,39:ELSE,1:WHILE,0	225
0x4000260	            0x4157	                                push r15	       466	elfcomm.c	FUNCTION_10
0x4000262	            0x4156	                                push r14	       466	elfcomm.c	FUNCTION_10
0x4000264	            0x4155	                                push r13	       466	elfcomm.c	FUNCTION_10
0x4000266	            0x4154	                                push r12	       466	elfcomm.c	FUNCTION_10
0x4000268	          0x4189d5	                           mov r13d, edx	       466	elfcomm.c	FUNCTION_10
0x400026b	              0x55	                                push rbp	       466	elfcomm.c	FUNCTION_10
0x400026c	              0x53	                                push rbx	       466	elfcomm.c	FUNCTION_10
0x400026d	          0x4189f4	                           mov r12d, esi	       466	elfcomm.c	FUNCTION_10
0x4000270	          0x4889fb	                            mov rbx, rdi	       466	elfcomm.c	FUNCTION_10
0x4000273	            0x31f6	                            xor esi, esi	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000275	    0x4881c7880000	                           add rdi, 0x88	       473	elfcomm.c	FUNCTION_10	CALL_1
0x400027c	        0x4883ec28	                           sub rsp, 0x28	       466	elfcomm.c	FUNCTION_10
0x4000280	      0x440fb6770a	           movzx r14d, byte [rdi + 0xa] 	       471	elfcomm.c	FUNCTION_10
0x4000285	      0xba0a000000	                            mov edx, 0xa	       473	elfcomm.c	FUNCTION_10	CALL_1
0x400028a	        0xc6470a00	                 mov byte [rdi + 0xa], 0	       472	elfcomm.c	FUNCTION_10
0x400028e	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	elfcomm.c	FUNCTION_10
0x4000297	      0x4889442418	             mov qword [rsp + 0x18], rax	       466	elfcomm.c	FUNCTION_10
0x400029c	            0x31c0	                            xor eax, eax	       466	elfcomm.c	FUNCTION_10
0x400029e	      0xe800000000	                          call 0x40002a3	       473	elfcomm.c	FUNCTION_10	CALL_1
0x40002a3	          0x4885c0	                           test rax, rax	       476	elfcomm.c	FUNCTION_10	IF_1
0x40002a6	          0x4889c5	                            mov rbp, rax	       473	elfcomm.c	FUNCTION_10	CALL_1
0x40002a9	    0x4488b3920000	             mov byte [rbx + 0x92], r14b	       474	elfcomm.c	FUNCTION_10
0x40002b0	     0xf887a010000	                            js 0x4000430	       476	elfcomm.c	FUNCTION_10	IF_1
0x40002b6	          0x83e001	                              and eax, 1	       483	elfcomm.c	FUNCTION_10
0x40002b9	          0x4801c5	                            add rbp, rax	       483	elfcomm.c	FUNCTION_10
0x40002bc	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       485	elfcomm.c	FUNCTION_10
0x40002c0	          0x4585ed	                         test r13d, r13d	       487	elfcomm.c	FUNCTION_10	IF_2
0x40002c3	      0x488d44053c	            lea rax, [rbp + rax + 0x3c] 	       485	elfcomm.c	FUNCTION_10
0x40002c8	        0x48894348	             mov qword [rbx + 0x48], rax	       485	elfcomm.c	FUNCTION_10
0x40002cc	     0xf8486000000	                            je 0x4000358	       487	elfcomm.c	FUNCTION_10	IF_2
0x40002d2	        0x4183fc08	                             cmp r12d, 8	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x40002d6	     0xf87ef020000	                            ja 0x40005cb	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x40002dc	          0x4589e5	                          mov r13d, r12d	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x40002df	          0x4c39ed	                            cmp rbp, r13	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x40002e2	     0xf82c0000000	                            jb 0x40003a8	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x40002e8	        0x4c8b4308	                 mov r8, qword [rbx + 8]	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x40002ec	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x40002f1	          0x4c89e9	                            mov rcx, r13	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x40002f4	      0xba01000000	                              mov edx, 1	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x40002f9	      0xbe08000000	                              mov esi, 8	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x40002fe	      0xe800000000	                          call 0x4000303	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x4000303	          0x4939c5	                            cmp r13, rax	       516	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x4000306	     0xf84c4000000	                            je 0x40003d0	       516	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x400030c	          0x488b1b	                    mov rbx, qword [rbx]	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x400030f	      0xba05000000	                              mov edx, 5	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000314	      0xbe00000000	                              mov esi, 0	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000319	            0x31ff	                            xor edi, edi	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x400031b	      0xe800000000	                          call 0x4000320	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x4000320	          0x4889de	                            mov rsi, rbx	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x4000323	          0x4889c7	                            mov rdi, rax	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x4000326	            0x31c0	                            xor eax, eax	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x4000328	      0xe800000000	                          call 0x400032d	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x400032d	            0x31c0	                            xor eax, eax	       511	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x400032f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       604	elfcomm.c	FUNCTION_10
0x4000334	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       604	elfcomm.c	FUNCTION_10
0x400033d	     0xf8583020000	                           jne 0x40005c6	       604	elfcomm.c	FUNCTION_10
0x4000343	        0x4883c428	                           add rsp, 0x28	       604	elfcomm.c	FUNCTION_10
0x4000347	              0x5b	                                 pop rbx	       604	elfcomm.c	FUNCTION_10
0x4000348	              0x5d	                                 pop rbp	       604	elfcomm.c	FUNCTION_10
0x4000349	            0x415c	                                 pop r12	       604	elfcomm.c	FUNCTION_10
0x400034b	            0x415d	                                 pop r13	       604	elfcomm.c	FUNCTION_10
0x400034d	            0x415e	                                 pop r14	       604	elfcomm.c	FUNCTION_10
0x400034f	            0x415f	                                 pop r15	       604	elfcomm.c	FUNCTION_10
0x4000351	              0xc3	                                     ret	       604	elfcomm.c	FUNCTION_10
0x4000352	    0x660f1f440000	                    nop word [rax + rax]	       604	elfcomm.c	FUNCTION_10
0x4000358	        0x488b7b08	                mov rdi, qword [rbx + 8]	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x400035c	      0xba01000000	                              mov edx, 1	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000361	          0x4889ee	                            mov rsi, rbp	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000364	      0xe800000000	                          call 0x4000369	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000369	            0x85c0	                           test eax, eax	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x400036b	     0xf85ef000000	                           jne 0x4000460	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x4000371	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000375	        0x488d7b58	                   lea rdi, [rbx + 0x58]	       595	elfcomm.c	FUNCTION_10	CALL_37
0x4000379	      0xba3c000000	                           mov edx, 0x3c	       295	stdio2.h	FUNCTION_31	CALL_9
0x400037e	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000383	      0xe800000000	                          call 0x4000388	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000388	        0x4883f83c	                           cmp rax, 0x3c	       596	elfcomm.c	FUNCTION_10	IF_13
0x400038c	            0x7432	                            je 0x40003c0	       596	elfcomm.c	FUNCTION_10	IF_13
0x400038e	          0x4885c0	                           test rax, rax	       596	elfcomm.c	FUNCTION_10	IF_13
0x4000391	            0x742d	                            je 0x40003c0	       596	elfcomm.c	FUNCTION_10	IF_13
0x4000393	          0x488b1b	                    mov rbx, qword [rbx]	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4000396	      0xba05000000	                              mov edx, 5	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x400039b	      0xbe00000000	                              mov esi, 0	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x40003a0	      0xe974ffffff	                           jmp 0x4000319	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x40003a5	           0xf1f00	                         nop dword [rax]	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x40003a8	          0x488b1b	                    mov rbx, qword [rbx]	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x40003ab	      0xba05000000	                              mov edx, 5	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x40003b0	      0xbe00000000	                              mov esi, 0	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x40003b5	      0xe95fffffff	                           jmp 0x4000319	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x40003ba	    0x660f1f440000	                    nop word [rax + rax]	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x40003c0	      0xb801000000	                              mov eax, 1	       603	elfcomm.c	FUNCTION_10
0x40003c5	      0xe965ffffff	                           jmp 0x400032f	       603	elfcomm.c	FUNCTION_10
0x40003ca	    0x660f1f440000	                    nop word [rax + rax]	       603	elfcomm.c	FUNCTION_10
0x40003d0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40003d5	          0x4489e6	                           mov esi, r12d	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40003d8	          0x4c29ed	                            sub rbp, r13	       523	elfcomm.c	FUNCTION_10	ELSE_1
0x40003db	      0xe800000000	                          call 0x40003e0	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40003e0	          0x4c89ef	                            mov rdi, r13	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40003e3	          0x4989c7	                            mov r15, rax	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40003e6	        0x48894310	             mov qword [rbx + 0x10], rax	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40003ea	        0x480faff8	                           imul rdi, rax	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40003ee	          0x4839fd	                            cmp rbp, rdi	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40003f1	            0x7209	                            jb 0x40003fc	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40003f3	          0x4839e8	                            cmp rax, rbp	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40003f6	     0xf867c000000	                           jbe 0x4000478	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40003fc	          0x488b1b	                    mov rbx, qword [rbx]	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40003ff	            0x31ff	                            xor edi, edi	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000401	      0xba05000000	                              mov edx, 5	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000406	      0xbe00000000	                              mov esi, 0	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x400040b	      0xe800000000	                          call 0x4000410	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000410	          0x4989e8	                             mov r8, rbp	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000413	          0x4889c7	                            mov rdi, rax	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000416	          0x4489e1	                           mov ecx, r12d	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000419	          0x4c89fa	                            mov rdx, r15	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x400041c	          0x4889de	                            mov rsi, rbx	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x400041f	            0x31c0	                            xor eax, eax	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000421	      0xe800000000	                          call 0x4000426	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x4000426	      0xe902ffffff	                           jmp 0x400032d	       531	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x400042b	       0xf1f440000	                   nop dword [rax + rax]	       531	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000430	          0x488b1b	                    mov rbx, qword [rbx]	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000433	      0xba05000000	                              mov edx, 5	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000438	      0xbe00000000	                              mov esi, 0	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x400043d	            0x31ff	                            xor edi, edi	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x400043f	      0xe800000000	                          call 0x4000444	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000444	          0x4889ea	                            mov rdx, rbp	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000447	          0x4889c7	                            mov rdi, rax	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x400044a	          0x4889de	                            mov rsi, rbx	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x400044d	            0x31c0	                            xor eax, eax	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x400044f	      0xe800000000	                          call 0x4000454	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000454	            0x31c0	                            xor eax, eax	       480	elfcomm.c	FUNCTION_10	IF_1
0x4000456	      0xe9d4feffff	                           jmp 0x400032f	       480	elfcomm.c	FUNCTION_10	IF_1
0x400045b	       0xf1f440000	                   nop dword [rax + rax]	       480	elfcomm.c	FUNCTION_10	IF_1
0x4000460	          0x488b1b	                    mov rbx, qword [rbx]	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000463	      0xba05000000	                              mov edx, 5	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000468	      0xbe00000000	                              mov esi, 0	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x400046d	      0xe9a7feffff	                           jmp 0x4000319	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000472	    0x660f1f440000	                    nop word [rax + rax]	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x4000478	      0xe800000000	                          call 0x400047d	       535	elfcomm.c	FUNCTION_10	ELSE_1
0x400047d	          0x4885c0	                           test rax, rax	       537	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x4000480	        0x48890424	                    mov qword [rsp], rax	       535	elfcomm.c	FUNCTION_10	ELSE_1
0x4000484	      0xba05000000	                              mov edx, 5	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000489	      0xbe00000000	                              mov esi, 0	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x400048e	     0xf8407010000	                            je 0x400059b	       537	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x4000494	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000498	          0x4c89fa	                            mov rdx, r15	       295	stdio2.h	FUNCTION_31	CALL_9
0x400049b	          0x4c89ee	                            mov rsi, r13	       295	stdio2.h	FUNCTION_31	CALL_9
0x400049e	          0x4889c7	                            mov rdi, rax	       295	stdio2.h	FUNCTION_31	CALL_9
0x40004a1	          0x4989c6	                            mov r14, rax	       295	stdio2.h	FUNCTION_31	CALL_9
0x40004a4	      0xe800000000	                          call 0x40004a9	       295	stdio2.h	FUNCTION_31	CALL_9
0x40004a9	        0x4c8b7b10	            mov r15, qword [rbx + 0x10] 	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x40004ad	          0x4939c7	                            cmp r15, rax	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x40004b0	            0x740d	                            je 0x40004bf	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x40004b2	          0x4c89f7	                            mov rdi, r14	       546	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_20
0x40004b5	      0xe800000000	                          call 0x40004ba	       546	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_20
0x40004ba	      0xe94dfeffff	                           jmp 0x400030c	       546	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_20
0x40004bf	          0x4c89e8	                            mov rax, r13	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x40004c2	    0x4a8d3cfd0000	                        lea rdi, [r15*8]	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x40004ca	        0x490fafc7	                           imul rax, r15	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x40004ce	          0x4829c5	                            sub rbp, rax	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x40004d1	      0x48896c2408	                mov qword [rsp + 8], rbp	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x40004d6	      0xe800000000	                          call 0x40004db	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x40004db	          0x4885c0	                           test rax, rax	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x40004de	        0x48894318	             mov qword [rbx + 0x18], rax	       554	elfcomm.c	FUNCTION_10	ELSE_1
0x40004e2	     0xf84c9000000	                            je 0x40005b1	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x40004e8	          0x4d85ff	                           test r15, r15	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40004eb	            0x7436	                            je 0x4000523	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40004ed	        0x488b2c24	                    mov rbp, qword [rsp]	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40004f1	          0x4531ff	                          xor r15d, r15d	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40004f4	            0xeb0e	                           jmp 0x4000504	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40004f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000500	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000504	        0x4e8d34f8	                  lea r14, [rax + r15*8]	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000508	          0x4889ef	                            mov rdi, rbp	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x400050b	          0x4489e6	                           mov esi, r12d	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x400050e	      0xe800000000	                          call 0x4000513	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x4000513	        0x4983c701	                              add r15, 1	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000517	          0x498906	                    mov qword [r14], rax	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x400051a	          0x4c01ed	                            add rbp, r13	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x400051d	        0x4c397b10	            cmp qword [rbx + 0x10], r15 	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000521	            0x77dd	                            ja 0x4000500	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000523	        0x488b3c24	                    mov rdi, qword [rsp]	       567	elfcomm.c	FUNCTION_10	ELSE_1	CALL_28
0x4000527	      0xe800000000	                          call 0x400052c	       567	elfcomm.c	FUNCTION_10	ELSE_1	CALL_28
0x400052c	    0x48837c240800	                  cmp qword [rsp + 8], 0	       570	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x4000532	            0x7512	                           jne 0x4000546	       570	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x4000534	          0x488b1b	                    mov rbx, qword [rbx]	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4000537	      0xba05000000	                              mov edx, 5	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x400053c	      0xbe00000000	                              mov esi, 0	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4000541	      0xe9d3fdffff	                           jmp 0x4000319	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4000546	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x400054b	      0xe800000000	                          call 0x4000550	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4000550	          0x4885c0	                           test rax, rax	       578	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x4000553	        0x48894320	             mov qword [rbx + 0x20], rax	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4000557	            0x7438	                            je 0x4000591	       578	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x4000559	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       584	elfcomm.c	FUNCTION_10	ELSE_1
0x400055e	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000562	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000567	          0x4889c7	                            mov rdi, rax	       295	stdio2.h	FUNCTION_31	CALL_9
0x400056a	        0x4c897b28	             mov qword [rbx + 0x28], r15	       584	elfcomm.c	FUNCTION_10	ELSE_1
0x400056e	          0x4c89fa	                            mov rdx, r15	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000571	      0xe800000000	                          call 0x4000576	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000576	          0x4939c7	                            cmp r15, rax	       586	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x4000579	     0xf84f2fdffff	                            je 0x4000371	       586	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x400057f	          0x488b1b	                    mov rbx, qword [rbx]	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x4000582	      0xba05000000	                              mov edx, 5	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x4000587	      0xbe00000000	                              mov esi, 0	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x400058c	      0xe988fdffff	                           jmp 0x4000319	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x4000591	      0xba05000000	                              mov edx, 5	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x4000596	      0xbe00000000	                              mov esi, 0	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x400059b	            0x31ff	                            xor edi, edi	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x400059d	      0xe800000000	                          call 0x40005a2	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x40005a2	          0x4889c7	                            mov rdi, rax	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x40005a5	            0x31c0	                            xor eax, eax	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x40005a7	      0xe800000000	                          call 0x40005ac	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x40005ac	      0xe97cfdffff	                           jmp 0x400032d	       581	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x40005b1	        0x488b3c24	                    mov rdi, qword [rsp]	       558	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_24
0x40005b5	      0xe800000000	                          call 0x40005ba	       558	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_24
0x40005ba	      0xba05000000	                              mov edx, 5	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005bf	      0xbe00000000	                              mov esi, 0	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005c4	            0xebd5	                           jmp 0x400059b	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005c6	      0xe800000000	                          call 0x40005cb	       604	elfcomm.c	FUNCTION_10
0x40005cb	      0xb900000000	                              mov ecx, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x40005d0	      0xbaf9010000	                          mov edx, 0x1f9	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x40005d5	      0xbe00000000	                              mov esi, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x40005da	      0xbf00000000	                              mov edi, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x40005df	      0xe800000000	                          call 0x40005e4	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
