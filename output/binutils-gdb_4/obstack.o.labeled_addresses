_obstack_begin_1	WHILE,0:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0:FOR,0:CALL,1	57
0x4000140	            0x4154	                                push r12	       173	obstack.c	FUNCTION_5
0x4000142	              0x55	                                push rbp	       173	obstack.c	FUNCTION_5
0x4000143	              0x53	                                push rbx	       173	obstack.c	FUNCTION_5
0x4000144	          0x4889fb	                            mov rbx, rdi	       173	obstack.c	FUNCTION_5
0x4000147	        0x4883ec10	                           sub rsp, 0x10	       173	obstack.c	FUNCTION_5
0x400014b	        0x804f5001	                 or byte [rdi + 0x50], 1	       177	obstack.c	FUNCTION_5
0x400014f	          0x4885d2	                           test rdx, rdx	       119	obstack.c	FUNCTION_3	IF_1
0x4000152	        0x48894f38	             mov qword [rdi + 0x38], rcx	       174	obstack.c	FUNCTION_5
0x4000156	        0x4c894740	              mov qword [rdi + 0x40], r8	       175	obstack.c	FUNCTION_5
0x400015a	        0x4c894f48	              mov qword [rdi + 0x48], r9	       176	obstack.c	FUNCTION_5
0x400015e	            0x7470	                            je 0x40001d0	       119	obstack.c	FUNCTION_3	IF_1
0x4000160	          0x4889d5	                            mov rbp, rdx	       119	obstack.c	FUNCTION_3	IF_1
0x4000163	        0x488d42ff	                      lea rax, [rdx - 1]	       119	obstack.c	FUNCTION_3	IF_1
0x4000167	          0x4989d4	                            mov r12, rdx	       119	obstack.c	FUNCTION_3	IF_1
0x400016a	          0x48f7dd	                                 neg rbp	       119	obstack.c	FUNCTION_3	IF_1
0x400016d	          0x4885f6	                           test rsi, rsi	       135	obstack.c	FUNCTION_3	IF_2
0x4000170	      0xbae00f0000	                          mov edx, 0xfe0	       135	obstack.c	FUNCTION_3	IF_2
0x4000175	        0x48894330	             mov qword [rbx + 0x30], rax	       139	obstack.c	FUNCTION_3
0x4000179	        0x480f44f2	                          cmove rsi, rdx	       135	obstack.c	FUNCTION_3	IF_2
0x400017d	        0xf6435001	               test byte [rbx + 0x50], 1	        91	obstack.c	FUNCTION_1	IF_1
0x4000181	          0x488933	                    mov qword [rbx], rsi	       138	obstack.c	FUNCTION_3
0x4000184	            0x7562	                           jne 0x40001e8	        91	obstack.c	FUNCTION_1	IF_1
0x4000186	          0x4889f7	                            mov rdi, rsi	        94	obstack.c	FUNCTION_1	CALL_2
0x4000189	            0xffd1	                                call rcx	        94	obstack.c	FUNCTION_1	CALL_2
0x400018b	          0x4885c0	                           test rax, rax	       142	obstack.c	FUNCTION_3	IF_3
0x400018e	            0x7462	                            je 0x40001f2	       142	obstack.c	FUNCTION_3	IF_3
0x4000190	      0x4a8d54200f	              lea rdx, [rax + r12 + 0xf]	       145	obstack.c	FUNCTION_3	CALL_2
0x4000195	        0x48894308	                mov qword [rbx + 8], rax	       144	obstack.c	FUNCTION_3
0x4000199	          0x4821ea	                            and rdx, rbp	       145	obstack.c	FUNCTION_3	CALL_2
0x400019c	        0x48895310	             mov qword [rbx + 0x10], rdx	       145	obstack.c	FUNCTION_3	CALL_2
0x40001a0	        0x48895318	             mov qword [rbx + 0x18], rdx	       145	obstack.c	FUNCTION_3	CALL_2
0x40001a4	          0x4889c2	                            mov rdx, rax	       147	obstack.c	FUNCTION_3
0x40001a7	          0x480313	                    add rdx, qword [rbx]	       147	obstack.c	FUNCTION_3
0x40001aa	          0x488910	                    mov qword [rax], rdx	       147	obstack.c	FUNCTION_3
0x40001ad	        0x48895320	             mov qword [rbx + 0x20], rdx	       147	obstack.c	FUNCTION_3
0x40001b1	    0x48c740080000	                  mov qword [rax + 8], 0	       148	obstack.c	FUNCTION_3
0x40001b9	        0x806350f9	             and byte [rbx + 0x50], 0xf9	       151	obstack.c	FUNCTION_3
0x40001bd	        0x4883c410	                           add rsp, 0x10	       179	obstack.c	FUNCTION_5
0x40001c1	              0x5b	                                 pop rbx	       179	obstack.c	FUNCTION_5
0x40001c2	      0xb801000000	                              mov eax, 1	       179	obstack.c	FUNCTION_5
0x40001c7	              0x5d	                                 pop rbp	       179	obstack.c	FUNCTION_5
0x40001c8	            0x415c	                                 pop r12	       179	obstack.c	FUNCTION_5
0x40001ca	              0xc3	                                     ret	       179	obstack.c	FUNCTION_5
0x40001cb	       0xf1f440000	                   nop dword [rax + rax]	       179	obstack.c	FUNCTION_5
0x40001d0	    0x48c7c5f0ffff	             mov rbp, 0xfffffffffffffff0	       119	obstack.c	FUNCTION_3	IF_1
0x40001d7	      0xb80f000000	                            mov eax, 0xf	       119	obstack.c	FUNCTION_3	IF_1
0x40001dc	    0x41bc10000000	                          mov r12d, 0x10	       120	obstack.c	FUNCTION_3	IF_1
0x40001e2	            0xeb89	                           jmp 0x400016d	       120	obstack.c	FUNCTION_3	IF_1
0x40001e4	         0xf1f4000	                         nop dword [rax]	       120	obstack.c	FUNCTION_3	IF_1
0x40001e8	          0x4c89cf	                             mov rdi, r9	        92	obstack.c	FUNCTION_1	CALL_1
0x40001eb	            0xffd1	                                call rcx	        92	obstack.c	FUNCTION_1	CALL_1
0x40001ed	          0x4885c0	                           test rax, rax	       142	obstack.c	FUNCTION_3	IF_3
0x40001f0	            0x759e	                           jne 0x4000190	       142	obstack.c	FUNCTION_3	IF_3
0x40001f2	      0x4889442408	                mov qword [rsp + 8], rax	       142	obstack.c	FUNCTION_3	IF_3
0x40001f7	    0xff1500000000	                 call qword [0x040001fd]	       143	obstack.c	FUNCTION_3	IF_3
0x40001fd	      0x488b442408	                mov rax, qword [rsp + 8]	       143	obstack.c	FUNCTION_3	IF_3
0x4000202	            0xeb8c	                           jmp 0x4000190	       143	obstack.c	FUNCTION_3	IF_3
_obstack_memory_used	WHILE,0:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0:FOR,1:CALL,0	13
0x40003e0	        0x488b5708	                mov rdx, qword [rdi + 8]	       303	obstack.c	FUNCTION_9	FOR_1
0x40003e4	            0x31c0	                            xor eax, eax	       303	obstack.c	FUNCTION_9	FOR_1
0x40003e6	          0x4885d2	                           test rdx, rdx	       303	obstack.c	FUNCTION_9	FOR_1
0x40003e9	            0x7419	                            je 0x4000404	       303	obstack.c	FUNCTION_9	FOR_1
0x40003eb	       0xf1f440000	                   nop dword [rax + rax]	       303	obstack.c	FUNCTION_9	FOR_1
0x40003f0	          0x488b0a	                    mov rcx, qword [rdx]	       305	obstack.c	FUNCTION_9	FOR_1
0x40003f3	          0x4829d1	                            sub rcx, rdx	       305	obstack.c	FUNCTION_9	FOR_1
0x40003f6	        0x488b5208	                mov rdx, qword [rdx + 8]	       303	obstack.c	FUNCTION_9	FOR_1
0x40003fa	          0x4801c8	                            add rax, rcx	       305	obstack.c	FUNCTION_9	FOR_1
0x40003fd	          0x4885d2	                           test rdx, rdx	       303	obstack.c	FUNCTION_9	FOR_1
0x4000400	            0x75ee	                           jne 0x40003f0	       303	obstack.c	FUNCTION_9	FOR_1
0x4000402	            0xf3c3	                                     ret	       303	obstack.c	FUNCTION_9	FOR_1
0x4000404	            0xf3c3	                                     ret	       308	obstack.c	FUNCTION_9
_obstack_free	WHILE,1:SWITCH,0:DO,0:IF,2:ELSE,1:functions,0:FOR,0:CALL,2	41
0x4000360	            0x4154	                                push r12	       269	obstack.c	FUNCTION_8
0x4000362	              0x55	                                push rbp	       269	obstack.c	FUNCTION_8
0x4000363	          0x4989f4	                            mov r12, rsi	       269	obstack.c	FUNCTION_8
0x4000366	              0x53	                                push rbx	       269	obstack.c	FUNCTION_8
0x4000367	          0x4889fb	                            mov rbx, rdi	       269	obstack.c	FUNCTION_8
0x400036a	        0x488b7f08	                mov rdi, qword [rdi + 8]	       273	obstack.c	FUNCTION_8
0x400036e	          0x4885ff	                           test rdi, rdi	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000371	            0x7514	                           jne 0x4000387	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000373	            0xeb3c	                           jmp 0x40003b1	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000375	           0xf1f00	                         nop dword [rax]	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000378	          0xff5340	                 call qword [rbx + 0x40]	       103	obstack.c	FUNCTION_2	CALL_2
0x400037b	        0x804b5002	                 or byte [rbx + 0x50], 2	       284	obstack.c	FUNCTION_8	WHILE_1
0x400037f	          0x4885ed	                           test rbp, rbp	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000382	            0x742d	                            je 0x40003b1	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000384	          0x4889ef	                            mov rdi, rbp	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000387	          0x4939fc	                            cmp r12, rdi	       277	obstack.c	FUNCTION_8	WHILE_1
0x400038a	            0x7608	                           jbe 0x4000394	       277	obstack.c	FUNCTION_8	WHILE_1
0x400038c	          0x488b07	                    mov rax, qword [rdi]	       277	obstack.c	FUNCTION_8	WHILE_1
0x400038f	          0x4939c4	                            cmp r12, rax	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000392	            0x762c	                           jbe 0x40003c0	       277	obstack.c	FUNCTION_8	WHILE_1
0x4000394	        0xf6435001	               test byte [rbx + 0x50], 1	       100	obstack.c	FUNCTION_2	IF_1
0x4000398	        0x488b6f08	                mov rbp, qword [rdi + 8]	       279	obstack.c	FUNCTION_8	WHILE_1
0x400039c	            0x74da	                            je 0x4000378	       100	obstack.c	FUNCTION_2	IF_1
0x400039e	          0x4889fe	                            mov rsi, rdi	       101	obstack.c	FUNCTION_2	CALL_1
0x40003a1	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	       101	obstack.c	FUNCTION_2	CALL_1
0x40003a5	          0xff5340	                 call qword [rbx + 0x40]	       101	obstack.c	FUNCTION_2	CALL_1
0x40003a8	        0x804b5002	                 or byte [rbx + 0x50], 2	       284	obstack.c	FUNCTION_8	WHILE_1
0x40003ac	          0x4885ed	                           test rbp, rbp	       277	obstack.c	FUNCTION_8	WHILE_1
0x40003af	            0x75d3	                           jne 0x4000384	       277	obstack.c	FUNCTION_8	WHILE_1
0x40003b1	          0x4d85e4	                           test r12, r12	       292	obstack.c	FUNCTION_8	ELSE_1	IF_2
0x40003b4	            0x741a	                            je 0x40003d0	       292	obstack.c	FUNCTION_8	ELSE_1	IF_2
0x40003b6	      0xe800000000	                          call 0x40003bb	       294	obstack.c	FUNCTION_8	ELSE_1	IF_2
0x40003bb	       0xf1f440000	                   nop dword [rax + rax]	       294	obstack.c	FUNCTION_8	ELSE_1	IF_2
0x40003c0	        0x4c896318	             mov qword [rbx + 0x18], r12	       288	obstack.c	FUNCTION_8	IF_1
0x40003c4	        0x4c896310	             mov qword [rbx + 0x10], r12	       288	obstack.c	FUNCTION_8	IF_1
0x40003c8	        0x48894320	             mov qword [rbx + 0x20], rax	       289	obstack.c	FUNCTION_8	IF_1
0x40003cc	        0x48897b08	                mov qword [rbx + 8], rdi	       290	obstack.c	FUNCTION_8	IF_1
0x40003d0	              0x5b	                                 pop rbx	       295	obstack.c	FUNCTION_8
0x40003d1	              0x5d	                                 pop rbp	       295	obstack.c	FUNCTION_8
0x40003d2	            0x415c	                                 pop r12	       295	obstack.c	FUNCTION_8
0x40003d4	              0xc3	                                     ret	       295	obstack.c	FUNCTION_8
_obstack_newchunk	WHILE,0:SWITCH,0:DO,0:IF,5:ELSE,0:functions,0:FOR,0:CALL,5	86
0x4000210	            0x4156	                                push r14	       189	obstack.c	FUNCTION_6
0x4000212	            0x4155	                                push r13	       189	obstack.c	FUNCTION_6
0x4000214	            0x4154	                                push r12	       189	obstack.c	FUNCTION_6
0x4000216	              0x55	                                push rbp	       189	obstack.c	FUNCTION_6
0x4000217	              0x53	                                push rbx	       189	obstack.c	FUNCTION_6
0x4000218	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       192	obstack.c	FUNCTION_6
0x400021c	          0x4889fb	                            mov rbx, rdi	       189	obstack.c	FUNCTION_6
0x400021f	        0x482b6f10	             sub rbp, qword [rdi + 0x10]	       192	obstack.c	FUNCTION_6
0x4000223	        0x4c8b6f08	                mov r13, qword [rdi + 8]	       190	obstack.c	FUNCTION_6
0x4000227	          0x4801ee	                            add rsi, rbp	       196	obstack.c	FUNCTION_6
0x400022a	          0x4889f0	                            mov rax, rsi	       197	obstack.c	FUNCTION_6
0x400022d	        0x48034730	             add rax, qword [rdi + 0x30]	       197	obstack.c	FUNCTION_6
0x4000231	          0x4839f5	                            cmp rbp, rsi	       205	obstack.c	FUNCTION_6	IF_3
0x4000234	            0x7705	                            ja 0x400023b	       205	obstack.c	FUNCTION_6	IF_3
0x4000236	          0x4839c6	                            cmp rsi, rax	       205	obstack.c	FUNCTION_6	IF_3
0x4000239	            0x761d	                           jbe 0x4000258	       205	obstack.c	FUNCTION_6	IF_3
0x400023b	    0xff1500000000	                 call qword [0x04000241]	       208	obstack.c	FUNCTION_6	IF_4
0x4000241	    0x48c743080000	                  mov qword [rbx + 8], 0	       209	obstack.c	FUNCTION_6
0x4000249	    0x4c892c250800	                      mov qword [8], r13	       210	obstack.c	FUNCTION_6
0x4000251	             0xf0b	                                     ud2	       210	obstack.c	FUNCTION_6
0x4000253	       0xf1f440000	                   nop dword [rax + rax]	       210	obstack.c	FUNCTION_6
0x4000258	          0x483907	                    cmp qword [rdi], rax	       210	obstack.c	FUNCTION_6
0x400025b	          0x4889ea	                            mov rdx, rbp	       198	obstack.c	FUNCTION_6
0x400025e	          0x4889c7	                            mov rdi, rax	       198	obstack.c	FUNCTION_6
0x4000261	        0x480f433b	                 cmovae rdi, qword [rbx]	       198	obstack.c	FUNCTION_6
0x4000265	        0x48c1ea03	                              shr rdx, 3	       198	obstack.c	FUNCTION_6
0x4000269	      0x488d441064	            lea rax, [rax + rdx + 0x64] 	       198	obstack.c	FUNCTION_6
0x400026e	          0x4839f8	                            cmp rax, rdi	       198	obstack.c	FUNCTION_6
0x4000271	        0x480f43f8	                         cmovae rdi, rax	       198	obstack.c	FUNCTION_6
0x4000275	        0xf6435001	               test byte [rbx + 0x50], 1	        91	obstack.c	FUNCTION_1	IF_1
0x4000279	          0x4989fc	                            mov r12, rdi	        91	obstack.c	FUNCTION_1	IF_1
0x400027c	            0x7572	                           jne 0x40002f0	        91	obstack.c	FUNCTION_1	IF_1
0x400027e	          0xff5338	                 call qword [rbx + 0x38]	        94	obstack.c	FUNCTION_1	CALL_2
0x4000281	          0x4989c6	                            mov r14, rax	        94	obstack.c	FUNCTION_1	CALL_2
0x4000284	          0x4d85f6	                           test r14, r14	       207	obstack.c	FUNCTION_6	IF_4
0x4000287	            0x74b2	                            je 0x400023b	       207	obstack.c	FUNCTION_6	IF_4
0x4000289	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       215	obstack.c	FUNCTION_6	CALL_2
0x400028d	        0x4b8d3c26	                    lea rdi, [r14 + r12]	       211	obstack.c	FUNCTION_6
0x4000291	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_11	CALL_3
0x4000295	        0x4c897308	                mov qword [rbx + 8], r14	       209	obstack.c	FUNCTION_6
0x4000299	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_11	CALL_3
0x400029c	        0x4d896e08	                mov qword [r14 + 8], r13	       210	obstack.c	FUNCTION_6
0x40002a0	        0x48897b20	             mov qword [rbx + 0x20], rdi	       211	obstack.c	FUNCTION_6
0x40002a4	          0x49893e	                    mov qword [r14], rdi	       211	obstack.c	FUNCTION_6
0x40002a7	      0x4d8d640610	            lea r12, [r14 + rax + 0x10] 	       214	obstack.c	FUNCTION_6
0x40002ac	          0x48f7d0	                                 not rax	       214	obstack.c	FUNCTION_6
0x40002af	          0x4921c4	                            and r12, rax	       214	obstack.c	FUNCTION_6
0x40002b2	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_11	CALL_3
0x40002b5	      0xe800000000	                          call 0x40002ba	        53	string3.h	FUNCTION_11	CALL_3
0x40002ba	         0xfb65350	           movzx edx, byte [rbx + 0x50] 	       223	obstack.c	FUNCTION_6	IF_5
0x40002be	          0xf6c202	                              test dl, 2	       223	obstack.c	FUNCTION_6	IF_5
0x40002c1	            0x7515	                           jne 0x40002d8	       223	obstack.c	FUNCTION_6	IF_5
0x40002c3	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       225	obstack.c	FUNCTION_6	IF_5	CALL_4
0x40002c7	      0x498d4c0510	            lea rcx, [r13 + rax + 0x10] 	       224	obstack.c	FUNCTION_6	IF_5
0x40002cc	          0x48f7d0	                                 not rax	       224	obstack.c	FUNCTION_6	IF_5
0x40002cf	          0x4821c8	                            and rax, rcx	       224	obstack.c	FUNCTION_6	IF_5
0x40002d2	        0x48394310	            cmp qword [rbx + 0x10], rax 	       224	obstack.c	FUNCTION_6	IF_5
0x40002d6	            0x7428	                            je 0x4000300	       224	obstack.c	FUNCTION_6	IF_5
0x40002d8	          0x4c01e5	                            add rbp, r12	       233	obstack.c	FUNCTION_6
0x40002db	        0x4c896310	             mov qword [rbx + 0x10], r12	       232	obstack.c	FUNCTION_6
0x40002df	        0x806350fd	             and byte [rbx + 0x50], 0xfd	       235	obstack.c	FUNCTION_6
0x40002e3	        0x48896b18	             mov qword [rbx + 0x18], rbp	       233	obstack.c	FUNCTION_6
0x40002e7	              0x5b	                                 pop rbx	       236	obstack.c	FUNCTION_6
0x40002e8	              0x5d	                                 pop rbp	       236	obstack.c	FUNCTION_6
0x40002e9	            0x415c	                                 pop r12	       236	obstack.c	FUNCTION_6
0x40002eb	            0x415d	                                 pop r13	       236	obstack.c	FUNCTION_6
0x40002ed	            0x415e	                                 pop r14	       236	obstack.c	FUNCTION_6
0x40002ef	              0xc3	                                     ret	       236	obstack.c	FUNCTION_6
0x40002f0	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	        92	obstack.c	FUNCTION_1	CALL_1
0x40002f4	          0x4c89e6	                            mov rsi, r12	        92	obstack.c	FUNCTION_1	CALL_1
0x40002f7	          0xff5338	                 call qword [rbx + 0x38]	        92	obstack.c	FUNCTION_1	CALL_1
0x40002fa	          0x4989c6	                            mov r14, rax	        92	obstack.c	FUNCTION_1	CALL_1
0x40002fd	            0xeb85	                           jmp 0x4000284	        92	obstack.c	FUNCTION_1	CALL_1
0x40002ff	              0x90	                                     nop	        92	obstack.c	FUNCTION_1	CALL_1
0x4000300	        0x498b4508	                mov rax, qword [r13 + 8]	       228	obstack.c	FUNCTION_6	IF_5
0x4000304	          0x83e201	                              and edx, 1	       100	obstack.c	FUNCTION_2	IF_1
0x4000307	        0x49894608	                mov qword [r14 + 8], rax	       228	obstack.c	FUNCTION_6	IF_5
0x400030b	            0x750b	                           jne 0x4000318	       100	obstack.c	FUNCTION_2	IF_1
0x400030d	          0x4c89ef	                            mov rdi, r13	       103	obstack.c	FUNCTION_2	CALL_2
0x4000310	          0xff5340	                 call qword [rbx + 0x40]	       103	obstack.c	FUNCTION_2	CALL_2
0x4000313	            0xebc3	                           jmp 0x40002d8	       103	obstack.c	FUNCTION_2	CALL_2
0x4000315	           0xf1f00	                         nop dword [rax]	       103	obstack.c	FUNCTION_2	CALL_2
0x4000318	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	       101	obstack.c	FUNCTION_2	CALL_1
0x400031c	          0x4c89ee	                            mov rsi, r13	       101	obstack.c	FUNCTION_2	CALL_1
0x400031f	          0xff5340	                 call qword [rbx + 0x40]	       101	obstack.c	FUNCTION_2	CALL_1
0x4000322	            0xebb4	                           jmp 0x40002d8	       101	obstack.c	FUNCTION_2	CALL_1
_obstack_begin	WHILE,0:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0:FOR,0:CALL,1	56
0x4000070	            0x4154	                                push r12	       160	obstack.c	FUNCTION_4
0x4000072	              0x55	                                push rbp	       160	obstack.c	FUNCTION_4
0x4000073	              0x53	                                push rbx	       160	obstack.c	FUNCTION_4
0x4000074	          0x4889fb	                            mov rbx, rdi	       160	obstack.c	FUNCTION_4
0x4000077	        0x4883ec10	                           sub rsp, 0x10	       160	obstack.c	FUNCTION_4
0x400007b	        0x806750fe	             and byte [rdi + 0x50], 0xfe	       163	obstack.c	FUNCTION_4
0x400007f	          0x4885d2	                           test rdx, rdx	       119	obstack.c	FUNCTION_3	IF_1
0x4000082	        0x48894f38	             mov qword [rdi + 0x38], rcx	       161	obstack.c	FUNCTION_4
0x4000086	        0x4c894740	              mov qword [rdi + 0x40], r8	       162	obstack.c	FUNCTION_4
0x400008a	            0x7474	                            je 0x4000100	       119	obstack.c	FUNCTION_3	IF_1
0x400008c	          0x4889d5	                            mov rbp, rdx	       119	obstack.c	FUNCTION_3	IF_1
0x400008f	        0x488d42ff	                      lea rax, [rdx - 1]	       119	obstack.c	FUNCTION_3	IF_1
0x4000093	          0x4989d4	                            mov r12, rdx	       119	obstack.c	FUNCTION_3	IF_1
0x4000096	          0x48f7dd	                                 neg rbp	       119	obstack.c	FUNCTION_3	IF_1
0x4000099	          0x4885f6	                           test rsi, rsi	       135	obstack.c	FUNCTION_3	IF_2
0x400009c	      0xbae00f0000	                          mov edx, 0xfe0	       135	obstack.c	FUNCTION_3	IF_2
0x40000a1	        0x48894330	             mov qword [rbx + 0x30], rax	       139	obstack.c	FUNCTION_3
0x40000a5	        0x480f44f2	                          cmove rsi, rdx	       135	obstack.c	FUNCTION_3	IF_2
0x40000a9	        0xf6435001	               test byte [rbx + 0x50], 1	        91	obstack.c	FUNCTION_1	IF_1
0x40000ad	          0x488933	                    mov qword [rbx], rsi	       138	obstack.c	FUNCTION_3
0x40000b0	            0x7566	                           jne 0x4000118	        91	obstack.c	FUNCTION_1	IF_1
0x40000b2	          0x4889f7	                            mov rdi, rsi	        94	obstack.c	FUNCTION_1	CALL_2
0x40000b5	            0xffd1	                                call rcx	        94	obstack.c	FUNCTION_1	CALL_2
0x40000b7	          0x4885c0	                           test rax, rax	       142	obstack.c	FUNCTION_3	IF_3
0x40000ba	            0x7467	                            je 0x4000123	       142	obstack.c	FUNCTION_3	IF_3
0x40000bc	      0x4a8d54200f	              lea rdx, [rax + r12 + 0xf]	       145	obstack.c	FUNCTION_3	CALL_2
0x40000c1	        0x48894308	                mov qword [rbx + 8], rax	       144	obstack.c	FUNCTION_3
0x40000c5	          0x4821ea	                            and rdx, rbp	       145	obstack.c	FUNCTION_3	CALL_2
0x40000c8	        0x48895310	             mov qword [rbx + 0x10], rdx	       145	obstack.c	FUNCTION_3	CALL_2
0x40000cc	        0x48895318	             mov qword [rbx + 0x18], rdx	       145	obstack.c	FUNCTION_3	CALL_2
0x40000d0	          0x4889c2	                            mov rdx, rax	       147	obstack.c	FUNCTION_3
0x40000d3	          0x480313	                    add rdx, qword [rbx]	       147	obstack.c	FUNCTION_3
0x40000d6	          0x488910	                    mov qword [rax], rdx	       147	obstack.c	FUNCTION_3
0x40000d9	        0x48895320	             mov qword [rbx + 0x20], rdx	       147	obstack.c	FUNCTION_3
0x40000dd	    0x48c740080000	                  mov qword [rax + 8], 0	       148	obstack.c	FUNCTION_3
0x40000e5	        0x806350f9	             and byte [rbx + 0x50], 0xf9	       151	obstack.c	FUNCTION_3
0x40000e9	        0x4883c410	                           add rsp, 0x10	       165	obstack.c	FUNCTION_4
0x40000ed	              0x5b	                                 pop rbx	       165	obstack.c	FUNCTION_4
0x40000ee	      0xb801000000	                              mov eax, 1	       165	obstack.c	FUNCTION_4
0x40000f3	              0x5d	                                 pop rbp	       165	obstack.c	FUNCTION_4
0x40000f4	            0x415c	                                 pop r12	       165	obstack.c	FUNCTION_4
0x40000f6	              0xc3	                                     ret	       165	obstack.c	FUNCTION_4
0x40000f7	    0x660f1f840000	                    nop word [rax + rax]	       165	obstack.c	FUNCTION_4
0x4000100	    0x48c7c5f0ffff	             mov rbp, 0xfffffffffffffff0	       119	obstack.c	FUNCTION_3	IF_1
0x4000107	      0xb80f000000	                            mov eax, 0xf	       119	obstack.c	FUNCTION_3	IF_1
0x400010c	    0x41bc10000000	                          mov r12d, 0x10	       120	obstack.c	FUNCTION_3	IF_1
0x4000112	            0xeb85	                           jmp 0x4000099	       120	obstack.c	FUNCTION_3	IF_1
0x4000114	         0xf1f4000	                         nop dword [rax]	       120	obstack.c	FUNCTION_3	IF_1
0x4000118	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	        92	obstack.c	FUNCTION_1	CALL_1
0x400011c	            0xffd1	                                call rcx	        92	obstack.c	FUNCTION_1	CALL_1
0x400011e	          0x4885c0	                           test rax, rax	       142	obstack.c	FUNCTION_3	IF_3
0x4000121	            0x7599	                           jne 0x40000bc	       142	obstack.c	FUNCTION_3	IF_3
0x4000123	      0x4889442408	                mov qword [rsp + 8], rax	       142	obstack.c	FUNCTION_3	IF_3
0x4000128	    0xff1500000000	                 call qword [0x0400012e]	       143	obstack.c	FUNCTION_3	IF_3
0x400012e	      0x488b442408	                mov rax, qword [rsp + 8]	       143	obstack.c	FUNCTION_3	IF_3
0x4000133	            0xeb87	                           jmp 0x40000bc	       143	obstack.c	FUNCTION_3	IF_3
_obstack_allocated_p	WHILE,1:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0:FOR,0:CALL,0	16
0x4000330	        0x488b4708	                mov rax, qword [rdi + 8]	       252	obstack.c	FUNCTION_7
0x4000334	          0x4885c0	                           test rax, rax	       256	obstack.c	FUNCTION_7	WHILE_1
0x4000337	            0x7425	                            je 0x400035e	       256	obstack.c	FUNCTION_7	WHILE_1
0x4000339	     0xf1f80000000	                         nop dword [rax]	       256	obstack.c	FUNCTION_7	WHILE_1
0x4000340	          0x4839c6	                            cmp rsi, rax	       256	obstack.c	FUNCTION_7	WHILE_1
0x4000343	            0x7605	                           jbe 0x400034a	       256	obstack.c	FUNCTION_7	WHILE_1
0x4000345	          0x483b30	                    cmp rsi, qword [rax]	       256	obstack.c	FUNCTION_7	WHILE_1
0x4000348	            0x760e	                           jbe 0x4000358	       256	obstack.c	FUNCTION_7	WHILE_1
0x400034a	        0x488b4008	                mov rax, qword [rax + 8]	       258	obstack.c	FUNCTION_7	WHILE_1
0x400034e	          0x4885c0	                           test rax, rax	       256	obstack.c	FUNCTION_7	WHILE_1
0x4000351	            0x75ed	                           jne 0x4000340	       256	obstack.c	FUNCTION_7	WHILE_1
0x4000353	            0xf3c3	                                     ret	       262	obstack.c	FUNCTION_7
0x4000355	           0xf1f00	                         nop dword [rax]	       262	obstack.c	FUNCTION_7
0x4000358	      0xb801000000	                              mov eax, 1	       262	obstack.c	FUNCTION_7
0x400035d	              0xc3	                                     ret	       262	obstack.c	FUNCTION_7
0x400035e	            0xf3c3	                                     ret	       262	obstack.c	FUNCTION_7
print_and_abort	WHILE,0:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0:FOR,0:CALL,2	9
0x4000040	        0x4883ec08	                              sub rsp, 8	       354	obstack.c	FUNCTION_10
0x4000044	    0x488b3d000000	            mov rdi, qword [0x0400004b] 	        97	stdio2.h	CALL_13
0x400004b	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000050	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_13
0x4000055	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400005a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x400005c	      0xe800000000	                          call 0x4000061	        97	stdio2.h	CALL_13
0x4000061	      0xbf01000000	                              mov edi, 1	       365	obstack.c	FUNCTION_10	CALL_2
0x4000066	      0xe800000000	                          call 0x400006b	       365	obstack.c	FUNCTION_10	CALL_2
