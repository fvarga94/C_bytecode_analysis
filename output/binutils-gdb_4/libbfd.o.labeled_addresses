bfd_putb16	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	5
0x40006d0	          0x4889f8	                            mov rax, rdi	       604	libbfd.c	FUNCTION_40
0x40006d3	        0x40887e01	                 mov byte [rsi + 1], dil	       605	libbfd.c	FUNCTION_40
0x40006d7	        0x48c1e808	                              shr rax, 8	       604	libbfd.c	FUNCTION_40
0x40006db	            0x8806	                      mov byte [rsi], al	       604	libbfd.c	FUNCTION_40
0x40006dd	              0xc3	                                     ret	       605	libbfd.c	FUNCTION_40
bfd_getb32	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	4
0x4000730	            0x8b07	                    mov eax, dword [rdi]	       639	libbfd.c	FUNCTION_44
0x4000732	             0xfc8	                               bswap eax	       639	libbfd.c	FUNCTION_44
0x4000734	            0x89c0	                            mov eax, eax	       647	libbfd.c	FUNCTION_44
0x4000736	              0xc3	                                     ret	       648	libbfd.c	FUNCTION_44
bfd_realloc_or_free	ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,2	62
0x40004a0	          0x4885ff	                           test rdi, rdi	       302	libbfd.c	FUNCTION_30	IF_1
0x40004a3	            0x4154	                                push r12	       342	libbfd.c	FUNCTION_32
0x40004a5	              0x55	                                push rbp	       342	libbfd.c	FUNCTION_32
0x40004a6	              0x53	                                push rbx	       342	libbfd.c	FUNCTION_32
0x40004a7	          0x4889f3	                            mov rbx, rsi	       342	libbfd.c	FUNCTION_32
0x40004aa	            0x7464	                            je 0x4000510	       302	libbfd.c	FUNCTION_30	IF_1
0x40004ac	          0x4885f6	                           test rsi, rsi	       305	libbfd.c	FUNCTION_30	IF_2
0x40004af	          0x4889fd	                            mov rbp, rdi	       305	libbfd.c	FUNCTION_30	IF_2
0x40004b2	            0x784c	                            js 0x4000500	       305	libbfd.c	FUNCTION_30	IF_2
0x40004b4	      0xe800000000	                          call 0x40004b9	       313	libbfd.c	FUNCTION_30	CALL_3
0x40004b9	          0x4885c0	                           test rax, rax	       315	libbfd.c	FUNCTION_30	IF_3
0x40004bc	          0x4989c4	                            mov r12, rax	       313	libbfd.c	FUNCTION_30	CALL_3
0x40004bf	            0x7527	                           jne 0x40004e8	       315	libbfd.c	FUNCTION_30	IF_3
0x40004c1	          0x4885db	                           test rbx, rbx	       315	libbfd.c	FUNCTION_30	IF_3
0x40004c4	            0x7422	                            je 0x40004e8	       315	libbfd.c	FUNCTION_30	IF_3
0x40004c6	      0xbf06000000	                              mov edi, 6	       316	libbfd.c	FUNCTION_30	CALL_4
0x40004cb	          0x4c89e3	                            mov rbx, r12	       313	libbfd.c	FUNCTION_30	CALL_3
0x40004ce	      0xe800000000	                          call 0x40004d3	       316	libbfd.c	FUNCTION_30	CALL_4
0x40004d3	          0x4889ef	                            mov rdi, rbp	       346	libbfd.c	FUNCTION_32	CALL_2
0x40004d6	      0xe800000000	                          call 0x40004db	       346	libbfd.c	FUNCTION_32	CALL_2
0x40004db	          0x4889d8	                            mov rax, rbx	       349	libbfd.c	FUNCTION_32
0x40004de	              0x5b	                                 pop rbx	       349	libbfd.c	FUNCTION_32
0x40004df	              0x5d	                                 pop rbp	       349	libbfd.c	FUNCTION_32
0x40004e0	            0x415c	                                 pop r12	       349	libbfd.c	FUNCTION_32
0x40004e2	              0xc3	                                     ret	       349	libbfd.c	FUNCTION_32
0x40004e3	       0xf1f440000	                   nop dword [rax + rax]	       349	libbfd.c	FUNCTION_32
0x40004e8	          0x4d85e4	                           test r12, r12	       345	libbfd.c	FUNCTION_32	IF_1
0x40004eb	            0x7466	                            je 0x4000553	       345	libbfd.c	FUNCTION_32	IF_1
0x40004ed	          0x4c89e3	                            mov rbx, r12	       313	libbfd.c	FUNCTION_30	CALL_3
0x40004f0	          0x4889d8	                            mov rax, rbx	       349	libbfd.c	FUNCTION_32
0x40004f3	              0x5b	                                 pop rbx	       349	libbfd.c	FUNCTION_32
0x40004f4	              0x5d	                                 pop rbp	       349	libbfd.c	FUNCTION_32
0x40004f5	            0x415c	                                 pop r12	       349	libbfd.c	FUNCTION_32
0x40004f7	              0xc3	                                     ret	       349	libbfd.c	FUNCTION_32
0x40004f8	     0xf1f84000000	                   nop dword [rax + rax]	       349	libbfd.c	FUNCTION_32
0x4000500	      0xbf06000000	                              mov edi, 6	       309	libbfd.c	FUNCTION_30	IF_2	CALL_2
0x4000505	            0x31db	                            xor ebx, ebx	       310	libbfd.c	FUNCTION_30	IF_2
0x4000507	      0xe800000000	                          call 0x400050c	       309	libbfd.c	FUNCTION_30	IF_2	CALL_2
0x400050c	            0xebc5	                           jmp 0x40004d3	       309	libbfd.c	FUNCTION_30	IF_2	CALL_2
0x400050e	            0x6690	                                     nop	       309	libbfd.c	FUNCTION_30	IF_2	CALL_2
0x4000510	          0x4885f6	                           test rsi, rsi	       263	libbfd.c	FUNCTION_28	IF_1
0x4000513	            0x7830	                            js 0x4000545	       263	libbfd.c	FUNCTION_28	IF_1
0x4000515	          0x4889f7	                            mov rdi, rsi	       271	libbfd.c	FUNCTION_28	CALL_2
0x4000518	      0xe800000000	                          call 0x400051d	       271	libbfd.c	FUNCTION_28	CALL_2
0x400051d	          0x4885c0	                           test rax, rax	       272	libbfd.c	FUNCTION_28	IF_2
0x4000520	          0x4889c5	                            mov rbp, rax	       271	libbfd.c	FUNCTION_28	CALL_2
0x4000523	            0x751b	                           jne 0x4000540	       272	libbfd.c	FUNCTION_28	IF_2
0x4000525	          0x4885db	                           test rbx, rbx	       272	libbfd.c	FUNCTION_28	IF_2
0x4000528	            0x7416	                            je 0x4000540	       272	libbfd.c	FUNCTION_28	IF_2
0x400052a	      0xbf06000000	                              mov edi, 6	       273	libbfd.c	FUNCTION_28	CALL_3
0x400052f	          0x4889eb	                            mov rbx, rbp	       273	libbfd.c	FUNCTION_28	CALL_3
0x4000532	      0xe800000000	                          call 0x4000537	       273	libbfd.c	FUNCTION_28	CALL_3
0x4000537	            0xebb7	                           jmp 0x40004f0	       273	libbfd.c	FUNCTION_28	CALL_3
0x4000539	     0xf1f80000000	                         nop dword [rax]	       273	libbfd.c	FUNCTION_28	CALL_3
0x4000540	          0x4889eb	                            mov rbx, rbp	       271	libbfd.c	FUNCTION_28	CALL_2
0x4000543	            0xebab	                           jmp 0x40004f0	       348	libbfd.c	FUNCTION_32
0x4000545	      0xbf06000000	                              mov edi, 6	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x400054a	            0x31db	                            xor ebx, ebx	       268	libbfd.c	FUNCTION_28	IF_1
0x400054c	      0xe800000000	                          call 0x4000551	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x4000551	            0xeb9d	                           jmp 0x40004f0	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x4000553	            0x31db	                            xor ebx, ebx	       313	libbfd.c	FUNCTION_30	CALL_3
0x4000555	      0xe979ffffff	                           jmp 0x40004d3	       313	libbfd.c	FUNCTION_30	CALL_3
bfd_putl24	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	7
0x4000710	          0x4889f8	                            mov rax, rdi	       632	libbfd.c	FUNCTION_43
0x4000713	          0x40883e	                     mov byte [rsi], dil	       631	libbfd.c	FUNCTION_43
0x4000716	        0x48c1ef10	                           shr rdi, 0x10	       633	libbfd.c	FUNCTION_43
0x400071a	        0x48c1e808	                              shr rax, 8	       632	libbfd.c	FUNCTION_43
0x400071e	        0x40887e02	                 mov byte [rsi + 2], dil	       633	libbfd.c	FUNCTION_43
0x4000722	          0x884601	                  mov byte [rsi + 1], al	       632	libbfd.c	FUNCTION_43
0x4000725	              0xc3	                                     ret	       633	libbfd.c	FUNCTION_43
_bfd_norelocs_get_reloc_upper_bound	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x40001b0	      0xb808000000	                              mov eax, 8	       188	libbfd.c	FUNCTION_20
0x40001b5	              0xc3	                                     ret	       188	libbfd.c	FUNCTION_20
bfd_put_bits	ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:FOR,1:DO,0:CALL,1	37
0x4000940	          0xf6c207	                              test dl, 7	       845	libbfd.c	FUNCTION_56	IF_1
0x4000943	            0x755d	                           jne 0x40009a2	       845	libbfd.c	FUNCTION_56	IF_1
0x4000945	          0x8d4207	                      lea eax, [rdx + 7]	       848	libbfd.c	FUNCTION_56
0x4000948	            0x85d2	                           test edx, edx	       848	libbfd.c	FUNCTION_56
0x400094a	           0xf48d0	                          cmovs edx, eax	       848	libbfd.c	FUNCTION_56
0x400094d	          0xc1fa03	                              sar edx, 3	       848	libbfd.c	FUNCTION_56
0x4000950	            0x85d2	                           test edx, edx	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000952	            0x7e4c	                           jle 0x40009a0	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000954	            0x85c9	                           test ecx, ecx	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000956	            0x7520	                           jne 0x4000978	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000958	          0x8d42ff	                      lea eax, [rdx - 1]	       849	libbfd.c	FUNCTION_56	FOR_1
0x400095b	      0x488d440601	                lea rax, [rsi + rax + 1]	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000960	          0x40883e	                     mov byte [rsi], dil	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000963	        0x4883c601	                              add rsi, 1	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000967	        0x48c1ef08	                              shr rdi, 8	       854	libbfd.c	FUNCTION_56	FOR_1
0x400096b	          0x4839c6	                            cmp rsi, rax	       849	libbfd.c	FUNCTION_56	FOR_1
0x400096e	            0x75f0	                           jne 0x4000960	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000970	            0xf3c3	                                     ret	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000972	    0x660f1f440000	                    nop word [rax + rax]	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000978	          0x4863ca	                         movsxd rcx, edx	       849	libbfd.c	FUNCTION_56	FOR_1
0x400097b	          0x83ea01	                              sub edx, 1	       849	libbfd.c	FUNCTION_56	FOR_1
0x400097e	      0x488d440eff	                lea rax, [rsi + rcx - 1]	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000983	        0x4883e902	                              sub rcx, 2	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000987	          0x4829d1	                            sub rcx, rdx	       849	libbfd.c	FUNCTION_56	FOR_1
0x400098a	          0x4801ce	                            add rsi, rcx	       849	libbfd.c	FUNCTION_56	FOR_1
0x400098d	           0xf1f00	                         nop dword [rax]	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000990	          0x408838	                     mov byte [rax], dil	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000993	        0x4883e801	                              sub rax, 1	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000997	        0x48c1ef08	                              shr rdi, 8	       854	libbfd.c	FUNCTION_56	FOR_1
0x400099b	          0x4839f0	                            cmp rax, rsi	       849	libbfd.c	FUNCTION_56	FOR_1
0x400099e	            0x75f0	                           jne 0x4000990	       849	libbfd.c	FUNCTION_56	FOR_1
0x40009a0	            0xf3c3	                                     ret	       849	libbfd.c	FUNCTION_56	FOR_1
0x40009a2	        0x4883ec08	                              sub rsp, 8	       840	libbfd.c	FUNCTION_56
0x40009a6	      0xba00000000	                              mov edx, 0	       846	libbfd.c	FUNCTION_56	CALL_1
0x40009ab	      0xbe4e030000	                          mov esi, 0x34e	       846	libbfd.c	FUNCTION_56	CALL_1
0x40009b0	      0xbf00000000	                              mov edi, 0	       846	libbfd.c	FUNCTION_56	CALL_1
0x40009b5	      0xe800000000	                          call 0x40009ba	       846	libbfd.c	FUNCTION_56	CALL_1
_bfd_read_signed_leb128	ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,1:CALL,1	23
0x4000e20	          0x4531c9	                            xor r9d, r9d	      1152	libbfd.c	FUNCTION_66
0x4000e23	            0x31c9	                            xor ecx, ecx	      1151	libbfd.c	FUNCTION_66
0x4000e25	            0x31c0	                            xor eax, eax	      1150	libbfd.c	FUNCTION_66
0x4000e27	    0x660f1f840000	                    nop word [rax + rax]	      1150	libbfd.c	FUNCTION_66
0x4000e30	        0x440fb606	                   movzx r8d, byte [rsi]	      1155	libbfd.c	FUNCTION_66	DO_1	CALL_1
0x4000e34	        0x4183c101	                              add r9d, 1	      1157	libbfd.c	FUNCTION_66	DO_1
0x4000e38	        0x4883c601	                              add rsi, 1	      1156	libbfd.c	FUNCTION_66	DO_1
0x4000e3c	          0x4c89c7	                             mov rdi, r8	      1158	libbfd.c	FUNCTION_66	DO_1
0x4000e3f	          0x83e77f	                           and edi, 0x7f	      1158	libbfd.c	FUNCTION_66	DO_1
0x4000e42	          0x48d3e7	                             shl rdi, cl	      1158	libbfd.c	FUNCTION_66	DO_1
0x4000e45	          0x83c107	                              add ecx, 7	      1159	libbfd.c	FUNCTION_66	DO_1
0x4000e48	          0x4809f8	                             or rax, rdi	      1158	libbfd.c	FUNCTION_66	DO_1
0x4000e4b	          0x4584c0	                           test r8b, r8b	      1161	libbfd.c	FUNCTION_66
0x4000e4e	            0x78e0	                            js 0x4000e30	      1161	libbfd.c	FUNCTION_66
0x4000e50	          0x83f93f	                           cmp ecx, 0x3f	      1162	libbfd.c	FUNCTION_66	IF_1
0x4000e53	            0x7713	                            ja 0x4000e68	      1162	libbfd.c	FUNCTION_66	IF_1
0x4000e55	        0x4183e040	                           and r8d, 0x40	      1162	libbfd.c	FUNCTION_66	IF_1
0x4000e59	            0x740d	                            je 0x4000e68	      1162	libbfd.c	FUNCTION_66	IF_1
0x4000e5b	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1163	libbfd.c	FUNCTION_66	IF_1
0x4000e62	          0x48d3e6	                             shl rsi, cl	      1163	libbfd.c	FUNCTION_66	IF_1
0x4000e65	          0x4809f0	                             or rax, rsi	      1163	libbfd.c	FUNCTION_66	IF_1
0x4000e68	          0x44890a	                    mov dword [rdx], r9d	      1164	libbfd.c	FUNCTION_66
0x4000e6b	              0xc3	                                     ret	      1166	libbfd.c	FUNCTION_66
bfd_getl_signed_16	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	5
0x40006b0	           0xfb707	                   movzx eax, word [rdi]	       595	libbfd.c	FUNCTION_39
0x40006b3	        0x66050080	                          add ax, 0x8000	       595	libbfd.c	FUNCTION_39
0x40006b7	           0xfb7c0	                           movzx eax, ax	       597	libbfd.c	FUNCTION_39
0x40006ba	    0x482d00800000	                         sub rax, 0x8000	       597	libbfd.c	FUNCTION_39
0x40006c0	              0xc3	                                     ret	       598	libbfd.c	FUNCTION_39
bfd_getb_signed_32	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	5
0x4000750	            0x8b07	                    mov eax, dword [rdi]	       665	libbfd.c	FUNCTION_46
0x4000752	             0xfc8	                               bswap eax	       665	libbfd.c	FUNCTION_46
0x4000754	       0x500000080	                     add eax, 0x80000000	       673	libbfd.c	FUNCTION_46
0x4000759	    0x480500000080	             add rax, 0xffffffff80000000	       673	libbfd.c	FUNCTION_46
0x400075f	              0xc3	                                     ret	       674	libbfd.c	FUNCTION_46
_bfd_generic_init_private_section_data	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x4000e70	      0xb801000000	                              mov eax, 1	      1176	libbfd.c	FUNCTION_67
0x4000e75	              0xc3	                                     ret	      1176	libbfd.c	FUNCTION_67
bfd_write_bigendian_4byte_int	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,2	27
0x4000600	        0x4883ec18	                           sub rsp, 0x18	       398	libbfd.c	FUNCTION_35
0x4000604	          0x4889fa	                            mov rdx, rdi	       398	libbfd.c	FUNCTION_35
0x4000607	    0x64488b042528	                mov rax, qword fs:[0x28]	       398	libbfd.c	FUNCTION_35
0x4000610	      0x4889442408	                mov qword [rsp + 8], rax	       398	libbfd.c	FUNCTION_35
0x4000615	            0x31c0	                            xor eax, eax	       398	libbfd.c	FUNCTION_35
0x4000617	            0x89f0	                            mov eax, esi	       400	libbfd.c	FUNCTION_35	CALL_1
0x4000619	      0x4088742403	                 mov byte [rsp + 3], sil	       789	libbfd.c	FUNCTION_52
0x400061e	          0x4889e7	                            mov rdi, rsp	       401	libbfd.c	FUNCTION_35	CALL_2
0x4000621	          0x4889c1	                            mov rcx, rax	       786	libbfd.c	FUNCTION_52
0x4000624	      0xbe04000000	                              mov esi, 4	       401	libbfd.c	FUNCTION_35	CALL_2
0x4000629	        0x48c1e918	                           shr rcx, 0x18	       786	libbfd.c	FUNCTION_52
0x400062d	          0x880c24	                      mov byte [rsp], cl	       786	libbfd.c	FUNCTION_52
0x4000630	          0x4889c1	                            mov rcx, rax	       787	libbfd.c	FUNCTION_52
0x4000633	        0x48c1e808	                              shr rax, 8	       788	libbfd.c	FUNCTION_52
0x4000637	        0x48c1e910	                           shr rcx, 0x10	       787	libbfd.c	FUNCTION_52
0x400063b	        0x88442402	                  mov byte [rsp + 2], al	       788	libbfd.c	FUNCTION_52
0x400063f	        0x884c2401	                  mov byte [rsp + 1], cl	       787	libbfd.c	FUNCTION_52
0x4000643	      0xe800000000	                          call 0x4000648	       401	libbfd.c	FUNCTION_35	CALL_2
0x4000648	        0x4883f804	                              cmp rax, 4	       401	libbfd.c	FUNCTION_35	CALL_2
0x400064c	           0xf94c0	                                 sete al	       401	libbfd.c	FUNCTION_35	CALL_2
0x400064f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       402	libbfd.c	FUNCTION_35
0x4000654	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       402	libbfd.c	FUNCTION_35
0x400065d	            0x7508	                           jne 0x4000667	       402	libbfd.c	FUNCTION_35
0x400065f	           0xfb6c0	                           movzx eax, al	       402	libbfd.c	FUNCTION_35
0x4000662	        0x4883c418	                           add rsp, 0x18	       402	libbfd.c	FUNCTION_35
0x4000666	              0xc3	                                     ret	       402	libbfd.c	FUNCTION_35
0x4000667	      0xe800000000	                          call 0x400066c	       402	libbfd.c	FUNCTION_35
bfd_zmalloc	ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,2	15
0x4000560	          0x4885ff	                           test rdi, rdi	       263	libbfd.c	FUNCTION_28	IF_1
0x4000563	              0x53	                                push rbx	       355	libbfd.c	FUNCTION_33
0x4000564	            0x7817	                            js 0x400057d	       263	libbfd.c	FUNCTION_28	IF_1
0x4000566	      0xbe01000000	                              mov esi, 1	       271	libbfd.c	FUNCTION_28	CALL_2
0x400056b	          0x4889fb	                            mov rbx, rdi	       271	libbfd.c	FUNCTION_28	CALL_2
0x400056e	      0xe800000000	                          call 0x4000573	       271	libbfd.c	FUNCTION_28	CALL_2
0x4000573	          0x4885c0	                           test rax, rax	       272	libbfd.c	FUNCTION_28	IF_2
0x4000576	            0x7511	                           jne 0x4000589	       272	libbfd.c	FUNCTION_28	IF_2
0x4000578	          0x4885db	                           test rbx, rbx	       272	libbfd.c	FUNCTION_28	IF_2
0x400057b	            0x740c	                            je 0x4000589	       272	libbfd.c	FUNCTION_28	IF_2
0x400057d	      0xbf06000000	                              mov edi, 6	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x4000582	      0xe800000000	                          call 0x4000587	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x4000587	            0x31c0	                            xor eax, eax	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x4000589	              0x5b	                                 pop rbx	       362	libbfd.c	FUNCTION_33
0x400058a	              0xc3	                                     ret	       362	libbfd.c	FUNCTION_33
bfd_getb_signed_64	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	16
0x40007e0	            0x8b07	                    mov eax, dword [rdi]	       738	libbfd.c	FUNCTION_50
0x40007e2	         0xfb65704	               movzx edx, byte [rdi + 4]	       747	libbfd.c	FUNCTION_50
0x40007e6	             0xfc8	                               bswap eax	       747	libbfd.c	FUNCTION_50
0x40007e8	            0x89c0	                            mov eax, eax	       747	libbfd.c	FUNCTION_50
0x40007ea	        0x48c1e008	                              shl rax, 8	       746	libbfd.c	FUNCTION_50
0x40007ee	          0x4809d0	                             or rax, rdx	       747	libbfd.c	FUNCTION_50
0x40007f1	         0xfb65705	               movzx edx, byte [rdi + 5]	       748	libbfd.c	FUNCTION_50
0x40007f5	        0x48c1e008	                              shl rax, 8	       747	libbfd.c	FUNCTION_50
0x40007f9	          0x4809d0	                             or rax, rdx	       748	libbfd.c	FUNCTION_50
0x40007fc	         0xfb65706	               movzx edx, byte [rdi + 6]	       749	libbfd.c	FUNCTION_50
0x4000800	        0x48c1e008	                              shl rax, 8	       748	libbfd.c	FUNCTION_50
0x4000804	          0x4809d0	                             or rax, rdx	       749	libbfd.c	FUNCTION_50
0x4000807	         0xfb65707	               movzx edx, byte [rdi + 7]	       752	libbfd.c	FUNCTION_50
0x400080b	        0x48c1e008	                              shl rax, 8	       749	libbfd.c	FUNCTION_50
0x400080f	          0x4809d0	                             or rax, rdx	       752	libbfd.c	FUNCTION_50
0x4000812	              0xc3	                                     ret	       757	libbfd.c	FUNCTION_50
_bfd_bool_bfd_true	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x40000a0	      0xb801000000	                              mov eax, 1	        80	libbfd.c	FUNCTION_5
0x40000a5	              0xc3	                                     ret	        80	libbfd.c	FUNCTION_5
_bfd_generic_set_section_contents	ELSE,0:IF,2:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,2	30
0x4000bb0	          0x4d85c0	                             test r8, r8	       999	libbfd.c	FUNCTION_60	IF_1
0x4000bb3	      0xb801000000	                              mov eax, 1	      1000	libbfd.c	FUNCTION_60	IF_1
0x4000bb8	            0x7506	                           jne 0x4000bc0	       999	libbfd.c	FUNCTION_60	IF_1
0x4000bba	              0xc3	                                     ret	      1007	libbfd.c	FUNCTION_60
0x4000bbb	       0xf1f440000	                   nop dword [rax + rax]	      1007	libbfd.c	FUNCTION_60
0x4000bc0	            0x4154	                                push r12	       998	libbfd.c	FUNCTION_60
0x4000bc2	              0x55	                                push rbp	       998	libbfd.c	FUNCTION_60
0x4000bc3	          0x4889d5	                            mov rbp, rdx	       998	libbfd.c	FUNCTION_60
0x4000bc6	              0x53	                                push rbx	       998	libbfd.c	FUNCTION_60
0x4000bc7	    0x48038e900000	             add rcx, qword [rsi + 0x90]	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000bce	            0x31d2	                            xor edx, edx	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000bd0	          0x4c89c3	                             mov rbx, r8	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000bd3	          0x4989fc	                            mov r12, rdi	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000bd6	          0x4889ce	                            mov rsi, rcx	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000bd9	      0xe800000000	                          call 0x4000bde	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000bde	            0x89c2	                            mov edx, eax	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000be0	            0x31c0	                            xor eax, eax	      1004	libbfd.c	FUNCTION_60	IF_2
0x4000be2	            0x85d2	                           test edx, edx	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000be4	            0x7517	                           jne 0x4000bfd	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000be6	          0x4c89e2	                            mov rdx, r12	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x4000be9	          0x4889de	                            mov rsi, rbx	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x4000bec	          0x4889ef	                            mov rdi, rbp	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x4000bef	      0xe800000000	                          call 0x4000bf4	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x4000bf4	          0x4839c3	                            cmp rbx, rax	      1000	libbfd.c	FUNCTION_60	IF_1
0x4000bf7	           0xf94c0	                                 sete al	      1000	libbfd.c	FUNCTION_60	IF_1
0x4000bfa	           0xfb6c0	                           movzx eax, al	      1000	libbfd.c	FUNCTION_60	IF_1
0x4000bfd	              0x5b	                                 pop rbx	      1007	libbfd.c	FUNCTION_60
0x4000bfe	              0x5d	                                 pop rbp	      1007	libbfd.c	FUNCTION_60
0x4000bff	            0x415c	                                 pop r12	      1007	libbfd.c	FUNCTION_60
0x4000c01	              0xc3	                                     ret	      1007	libbfd.c	FUNCTION_60
bfd_zmalloc2	ELSE,0:IF,2:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,2	34
0x4000590	          0x4889fa	                            mov rdx, rdi	       284	libbfd.c	FUNCTION_29	IF_1
0x4000593	      0xb8ffffffff	                     mov eax, 0xffffffff	       284	libbfd.c	FUNCTION_29	IF_1
0x4000598	              0x53	                                push rbx	       369	libbfd.c	FUNCTION_34
0x4000599	          0x4809f2	                             or rdx, rsi	       284	libbfd.c	FUNCTION_29	IF_1
0x400059c	          0x4839c2	                            cmp rdx, rax	       284	libbfd.c	FUNCTION_29	IF_1
0x400059f	            0x7616	                           jbe 0x40005b7	       284	libbfd.c	FUNCTION_29	IF_1
0x40005a1	          0x4885f6	                           test rsi, rsi	       284	libbfd.c	FUNCTION_29	IF_1
0x40005a4	            0x7411	                            je 0x40005b7	       284	libbfd.c	FUNCTION_29	IF_1
0x40005a6	            0x31d2	                            xor edx, edx	       285	libbfd.c	FUNCTION_29	IF_1
0x40005a8	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       285	libbfd.c	FUNCTION_29	IF_1
0x40005af	          0x48f7f6	                                 div rsi	       285	libbfd.c	FUNCTION_29	IF_1
0x40005b2	          0x4839c7	                            cmp rdi, rax	       285	libbfd.c	FUNCTION_29	IF_1
0x40005b5	            0x7723	                            ja 0x40005da	       285	libbfd.c	FUNCTION_29	IF_1
0x40005b7	          0x4889fb	                            mov rbx, rdi	       291	libbfd.c	FUNCTION_29	CALL_2
0x40005ba	        0x480fafde	                           imul rbx, rsi	       291	libbfd.c	FUNCTION_29	CALL_2
0x40005be	          0x4885db	                           test rbx, rbx	       263	libbfd.c	FUNCTION_28	IF_1
0x40005c1	            0x7817	                            js 0x40005da	       263	libbfd.c	FUNCTION_28	IF_1
0x40005c3	      0xbe01000000	                              mov esi, 1	       271	libbfd.c	FUNCTION_28	CALL_2
0x40005c8	          0x4889df	                            mov rdi, rbx	       271	libbfd.c	FUNCTION_28	CALL_2
0x40005cb	      0xe800000000	                          call 0x40005d0	       271	libbfd.c	FUNCTION_28	CALL_2
0x40005d0	          0x4885c0	                           test rax, rax	       272	libbfd.c	FUNCTION_28	IF_2
0x40005d3	            0x751b	                           jne 0x40005f0	       272	libbfd.c	FUNCTION_28	IF_2
0x40005d5	          0x4885db	                           test rbx, rbx	       272	libbfd.c	FUNCTION_28	IF_2
0x40005d8	            0x7416	                            je 0x40005f0	       272	libbfd.c	FUNCTION_28	IF_2
0x40005da	      0xbf06000000	                              mov edi, 6	       287	libbfd.c	FUNCTION_29	IF_1	CALL_1
0x40005df	      0xe800000000	                          call 0x40005e4	       287	libbfd.c	FUNCTION_29	IF_1	CALL_1
0x40005e4	            0x31c0	                            xor eax, eax	       369	libbfd.c	FUNCTION_34
0x40005e6	              0x5b	                                 pop rbx	       381	libbfd.c	FUNCTION_34
0x40005e7	              0xc3	                                     ret	       381	libbfd.c	FUNCTION_34
0x40005e8	     0xf1f84000000	                   nop dword [rax + rax]	       381	libbfd.c	FUNCTION_34
0x40005f0	          0x4885c0	                           test rax, rax	       372	libbfd.c	FUNCTION_34	IF_1
0x40005f3	            0x74ef	                            je 0x40005e4	       372	libbfd.c	FUNCTION_34	IF_1
0x40005f5	              0x5b	                                 pop rbx	       381	libbfd.c	FUNCTION_34
0x40005f6	              0xc3	                                     ret	       381	libbfd.c	FUNCTION_34
bfd_getb_signed_16	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	6
0x4000690	           0xfb707	                   movzx eax, word [rdi]	       588	libbfd.c	FUNCTION_38
0x4000693	        0x66c1c008	                               rol ax, 8	       588	libbfd.c	FUNCTION_38
0x4000697	        0x66050080	                          add ax, 0x8000	       588	libbfd.c	FUNCTION_38
0x400069b	           0xfb7c0	                           movzx eax, ax	       590	libbfd.c	FUNCTION_38
0x400069e	    0x482d00800000	                         sub rax, 0x8000	       590	libbfd.c	FUNCTION_38
0x40006a4	              0xc3	                                     ret	       591	libbfd.c	FUNCTION_38
bfd_getl32	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x4000740	            0x8b07	                    mov eax, dword [rdi]	       660	libbfd.c	FUNCTION_45
0x4000742	              0xc3	                                     ret	       661	libbfd.c	FUNCTION_45
_bfd_safe_read_leb128	ELSE,0:IF,3:SWITCH,0:WHILE,1:functions,0:FOR,0:DO,0:CALL,1	50
0x4000d70	          0x4c39c6	                             cmp rsi, r8	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000d73	          0x4189cb	                           mov r11d, ecx	      1110	libbfd.c	FUNCTION_65
0x4000d76	            0x737b	                           jae 0x4000df3	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000d78	        0x440fb60e	                   movzx r9d, byte [rsi]	      1118	libbfd.c	FUNCTION_65	WHILE_1	CALL_1
0x4000d7c	        0x4883c601	                              add rsi, 1	      1119	libbfd.c	FUNCTION_65	WHILE_1
0x4000d80	          0x4c89c8	                             mov rax, r9	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000d83	          0x83e07f	                           and eax, 0x7f	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000d86	          0x4584c9	                           test r9b, r9b	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000d89	            0x7979	                           jns 0x4000e04	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000d8b	      0xb907000000	                              mov ecx, 7	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000d90	    0x41ba01000000	                             mov r10d, 1	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000d96	            0xeb28	                           jmp 0x4000dc0	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000d98	     0xf1f84000000	                   nop dword [rax + rax]	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000da0	        0x440fb60e	                   movzx r9d, byte [rsi]	      1118	libbfd.c	FUNCTION_65	WHILE_1	CALL_1
0x4000da4	        0x4183c201	                             add r10d, 1	      1120	libbfd.c	FUNCTION_65	WHILE_1
0x4000da8	        0x4883c601	                              add rsi, 1	      1119	libbfd.c	FUNCTION_65	WHILE_1
0x4000dac	          0x4c89cf	                             mov rdi, r9	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000daf	          0x83e77f	                           and edi, 0x7f	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000db2	          0x48d3e7	                             shl rdi, cl	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000db5	          0x83c107	                              add ecx, 7	      1124	libbfd.c	FUNCTION_65	WHILE_1
0x4000db8	          0x4809f8	                             or rax, rdi	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000dbb	          0x4584c9	                           test r9b, r9b	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000dbe	            0x7905	                           jns 0x4000dc5	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000dc0	          0x4939f0	                             cmp r8, rsi	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000dc3	            0x75db	                           jne 0x4000da0	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000dc5	          0x83f93f	                           cmp ecx, 0x3f	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000dc8	        0x400f96c6	                               setbe sil	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000dcc	          0x4885d2	                           test rdx, rdx	      1129	libbfd.c	FUNCTION_65	IF_2
0x4000dcf	            0x7403	                            je 0x4000dd4	      1129	libbfd.c	FUNCTION_65	IF_2
0x4000dd1	          0x448912	                   mov dword [rdx], r10d	      1130	libbfd.c	FUNCTION_65	IF_2
0x4000dd4	          0x4585db	                         test r11d, r11d	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000dd7	            0x7418	                            je 0x4000df1	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000dd9	          0x4084f6	                           test sil, sil	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000ddc	            0x7413	                            je 0x4000df1	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000dde	        0x4183e140	                           and r9d, 0x40	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000de2	            0x740d	                            je 0x4000df1	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000de4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1133	libbfd.c	FUNCTION_65	IF_3
0x4000deb	          0x48d3e2	                             shl rdx, cl	      1133	libbfd.c	FUNCTION_65	IF_3
0x4000dee	          0x4809d0	                             or rax, rdx	      1133	libbfd.c	FUNCTION_65	IF_3
0x4000df1	            0xf3c3	                                     ret	      1136	libbfd.c	FUNCTION_65
0x4000df3	      0xbe01000000	                              mov esi, 1	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000df8	          0x4531c9	                            xor r9d, r9d	      1114	libbfd.c	FUNCTION_65
0x4000dfb	            0x31c9	                            xor ecx, ecx	      1113	libbfd.c	FUNCTION_65
0x4000dfd	          0x4531d2	                          xor r10d, r10d	      1112	libbfd.c	FUNCTION_65
0x4000e00	            0x31c0	                            xor eax, eax	      1111	libbfd.c	FUNCTION_65
0x4000e02	            0xebc8	                           jmp 0x4000dcc	      1111	libbfd.c	FUNCTION_65
0x4000e04	      0xbe01000000	                              mov esi, 1	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000e09	      0xb907000000	                              mov ecx, 7	      1124	libbfd.c	FUNCTION_65	WHILE_1
0x4000e0e	    0x41ba01000000	                             mov r10d, 1	      1120	libbfd.c	FUNCTION_65	WHILE_1
0x4000e14	            0xebb6	                           jmp 0x4000dcc	      1120	libbfd.c	FUNCTION_65	WHILE_1
_bfd_norelocs_canonicalize_reloc	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	3
0x40001c0	    0x48c702000000	                      mov qword [rdx], 0	       196	libbfd.c	FUNCTION_21
0x40001c7	            0x31c0	                            xor eax, eax	       198	libbfd.c	FUNCTION_21
0x40001c9	              0xc3	                                     ret	       198	libbfd.c	FUNCTION_21
bfd_generic_is_local_label_name	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	9
0x4000c40	        0x488b4708	                mov rax, qword [rdi + 8]	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4000c44	      0xba2e000000	                           mov edx, 0x2e	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4000c49	        0x80781c5f	            cmp byte [rax + 0x1c], 0x5f 	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4000c4d	      0xb84c000000	                           mov eax, 0x4c	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4000c52	           0xf45c2	                         cmovne eax, edx	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4000c55	            0x3806	                      cmp byte [rsi], al	      1040	libbfd.c	FUNCTION_62
0x4000c57	           0xf94c0	                                 sete al	      1040	libbfd.c	FUNCTION_62
0x4000c5a	           0xfb6c0	                           movzx eax, al	      1040	libbfd.c	FUNCTION_62
0x4000c5d	              0xc3	                                     ret	      1041	libbfd.c	FUNCTION_62
_bfd_long_bfd_0	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x4000150	            0x31c0	                            xor eax, eax	       154	libbfd.c	FUNCTION_15
0x4000152	              0xc3	                                     ret	       154	libbfd.c	FUNCTION_15
bfd_getb16	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	4
0x4000670	           0xfb707	                   movzx eax, word [rdi]	       576	libbfd.c	FUNCTION_36
0x4000673	        0x66c1c008	                               rol ax, 8	       576	libbfd.c	FUNCTION_36
0x4000677	           0xfb7c0	                           movzx eax, ax	       576	libbfd.c	FUNCTION_36
0x400067a	              0xc3	                                     ret	       577	libbfd.c	FUNCTION_36
bfd_getl16	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x4000680	           0xfb707	                   movzx eax, word [rdi]	       583	libbfd.c	FUNCTION_37
0x4000683	              0xc3	                                     ret	       584	libbfd.c	FUNCTION_37
bfd_putb24	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	8
0x40006f0	          0x4889f8	                            mov rax, rdi	       621	libbfd.c	FUNCTION_42
0x40006f3	        0x40887e02	                 mov byte [rsi + 2], dil	       623	libbfd.c	FUNCTION_42
0x40006f7	        0x48c1e810	                           shr rax, 0x10	       621	libbfd.c	FUNCTION_42
0x40006fb	            0x8806	                      mov byte [rsi], al	       621	libbfd.c	FUNCTION_42
0x40006fd	          0x4889f8	                            mov rax, rdi	       622	libbfd.c	FUNCTION_42
0x4000700	        0x48c1e808	                              shr rax, 8	       622	libbfd.c	FUNCTION_42
0x4000704	          0x884601	                  mov byte [rsi + 1], al	       622	libbfd.c	FUNCTION_42
0x4000707	              0xc3	                                     ret	       623	libbfd.c	FUNCTION_42
_bfd_uint_bfd_0	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x4000140	            0x31c0	                            xor eax, eax	       148	libbfd.c	FUNCTION_14
0x4000142	              0xc3	                                     ret	       148	libbfd.c	FUNCTION_14
_bfd_read_unsigned_leb128	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,1:CALL,1	16
0x4000d30	            0x31c9	                            xor ecx, ecx	      1084	libbfd.c	FUNCTION_64
0x4000d32	          0x4531c9	                            xor r9d, r9d	      1085	libbfd.c	FUNCTION_64
0x4000d35	            0x31c0	                            xor eax, eax	      1083	libbfd.c	FUNCTION_64
0x4000d37	    0x660f1f840000	                    nop word [rax + rax]	      1083	libbfd.c	FUNCTION_64
0x4000d40	        0x440fb606	                   movzx r8d, byte [rsi]	      1088	libbfd.c	FUNCTION_64	DO_1	CALL_1
0x4000d44	        0x4183c101	                              add r9d, 1	      1090	libbfd.c	FUNCTION_64	DO_1
0x4000d48	        0x4883c601	                              add rsi, 1	      1089	libbfd.c	FUNCTION_64	DO_1
0x4000d4c	          0x4c89c7	                             mov rdi, r8	      1091	libbfd.c	FUNCTION_64	DO_1
0x4000d4f	          0x83e77f	                           and edi, 0x7f	      1091	libbfd.c	FUNCTION_64	DO_1
0x4000d52	          0x48d3e7	                             shl rdi, cl	      1091	libbfd.c	FUNCTION_64	DO_1
0x4000d55	          0x83c107	                              add ecx, 7	      1092	libbfd.c	FUNCTION_64	DO_1
0x4000d58	          0x4809f8	                             or rax, rdi	      1091	libbfd.c	FUNCTION_64	DO_1
0x4000d5b	          0x4584c0	                           test r8b, r8b	      1094	libbfd.c	FUNCTION_64
0x4000d5e	            0x78e0	                            js 0x4000d40	      1094	libbfd.c	FUNCTION_64
0x4000d60	          0x44890a	                    mov dword [rdx], r9d	      1095	libbfd.c	FUNCTION_64
0x4000d63	              0xc3	                                     ret	      1097	libbfd.c	FUNCTION_64
_bfd_warn_deprecated	ELSE,1:IF,2:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,4	55
0x4000c60	          0x4889c8	                            mov rax, rcx	      1055	libbfd.c	FUNCTION_63	IF_1
0x4000c63	    0x480b05000000	              or rax, qword [0x04000c6a]	      1055	libbfd.c	FUNCTION_63	IF_1
0x4000c6a	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      1055	libbfd.c	FUNCTION_63	IF_1
0x4000c6e	     0xf8485000000	                            je 0x4000cf9	      1055	libbfd.c	FUNCTION_63	IF_1
0x4000c74	            0x4155	                                push r13	      1051	libbfd.c	FUNCTION_63
0x4000c76	            0x4154	                                push r12	      1051	libbfd.c	FUNCTION_63
0x4000c78	          0x4989cc	                            mov r12, rcx	      1051	libbfd.c	FUNCTION_63
0x4000c7b	              0x55	                                push rbp	      1051	libbfd.c	FUNCTION_63
0x4000c7c	              0x53	                                push rbx	      1051	libbfd.c	FUNCTION_63
0x4000c7d	          0x4889fb	                            mov rbx, rdi	      1051	libbfd.c	FUNCTION_63
0x4000c80	          0x4189d5	                           mov r13d, edx	      1051	libbfd.c	FUNCTION_63
0x4000c83	          0x4889f5	                            mov rbp, rsi	      1051	libbfd.c	FUNCTION_63
0x4000c86	        0x4883ec08	                              sub rsp, 8	      1051	libbfd.c	FUNCTION_63
0x4000c8a	    0x488b3d000000	            mov rdi, qword [0x04000c91] 	      1057	libbfd.c	FUNCTION_63	IF_1	CALL_1
0x4000c91	      0xe800000000	                          call 0x4000c96	      1057	libbfd.c	FUNCTION_63	IF_1	CALL_1
0x4000c96	          0x4d85e4	                           test r12, r12	      1060	libbfd.c	FUNCTION_63	IF_1	IF_2
0x4000c99	      0xba05000000	                              mov edx, 5	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x4000c9e	            0x7460	                            je 0x4000d00	      1060	libbfd.c	FUNCTION_63	IF_1	IF_2
0x4000ca0	      0xbe00000000	                              mov esi, 0	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x4000ca5	      0xbf00000000	                              mov edi, 0	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x4000caa	      0xe800000000	                          call 0x4000caf	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x4000caf	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_9
0x4000cb3	    0x488b3d000000	            mov rdi, qword [0x04000cba] 	        97	stdio2.h	CALL_9
0x4000cba	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_9
0x4000cbd	            0x4154	                                push r12	        97	stdio2.h	CALL_9
0x4000cbf	          0x4589e9	                           mov r9d, r13d	        97	stdio2.h	CALL_9
0x4000cc2	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_9
0x4000cc5	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_9
0x4000cc8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000ccd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000ccf	      0xe800000000	                          call 0x4000cd4	        97	stdio2.h	CALL_9
0x4000cd4	              0x58	                                 pop rax	        97	stdio2.h	CALL_9
0x4000cd5	              0x5a	                                 pop rdx	        97	stdio2.h	CALL_9
0x4000cd6	    0x488b3d000000	            mov rdi, qword [0x04000cdd] 	      1066	libbfd.c	FUNCTION_63	IF_1	CALL_4
0x4000cdd	      0xe800000000	                          call 0x4000ce2	      1066	libbfd.c	FUNCTION_63	IF_1	CALL_4
0x4000ce2	          0x4c89e1	                            mov rcx, r12	      1067	libbfd.c	FUNCTION_63	IF_1
0x4000ce5	          0x48f7d1	                                 not rcx	      1067	libbfd.c	FUNCTION_63	IF_1
0x4000ce8	    0x48090d000000	              or qword [0x04000cef], rcx	      1067	libbfd.c	FUNCTION_63	IF_1
0x4000cef	        0x4883c408	                              add rsp, 8	      1069	libbfd.c	FUNCTION_63
0x4000cf3	              0x5b	                                 pop rbx	      1069	libbfd.c	FUNCTION_63
0x4000cf4	              0x5d	                                 pop rbp	      1069	libbfd.c	FUNCTION_63
0x4000cf5	            0x415c	                                 pop r12	      1069	libbfd.c	FUNCTION_63
0x4000cf7	            0x415d	                                 pop r13	      1069	libbfd.c	FUNCTION_63
0x4000cf9	            0xf3c3	                                     ret	      1069	libbfd.c	FUNCTION_63
0x4000cfb	       0xf1f440000	                   nop dword [rax + rax]	      1069	libbfd.c	FUNCTION_63
0x4000d00	      0xbe00000000	                              mov esi, 0	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_3
0x4000d05	      0xbf00000000	                              mov edi, 0	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_3
0x4000d0a	      0xe800000000	                          call 0x4000d0f	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_3
0x4000d0f	    0x488b3d000000	            mov rdi, qword [0x04000d16] 	        97	stdio2.h	CALL_9
0x4000d16	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_9
0x4000d19	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_9
0x4000d1c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000d21	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000d23	      0xe800000000	                          call 0x4000d28	        97	stdio2.h	CALL_9
0x4000d28	            0xebac	                           jmp 0x4000cd6	        97	stdio2.h	CALL_9
bfd_getb64	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	16
0x4000770	            0x8b07	                    mov eax, dword [rdi]	       691	libbfd.c	FUNCTION_48
0x4000772	         0xfb65704	               movzx edx, byte [rdi + 4]	       700	libbfd.c	FUNCTION_48
0x4000776	             0xfc8	                               bswap eax	       700	libbfd.c	FUNCTION_48
0x4000778	            0x89c0	                            mov eax, eax	       700	libbfd.c	FUNCTION_48
0x400077a	        0x48c1e008	                              shl rax, 8	       699	libbfd.c	FUNCTION_48
0x400077e	          0x4809d0	                             or rax, rdx	       700	libbfd.c	FUNCTION_48
0x4000781	         0xfb65705	               movzx edx, byte [rdi + 5]	       701	libbfd.c	FUNCTION_48
0x4000785	        0x48c1e008	                              shl rax, 8	       700	libbfd.c	FUNCTION_48
0x4000789	          0x4809d0	                             or rax, rdx	       701	libbfd.c	FUNCTION_48
0x400078c	         0xfb65706	               movzx edx, byte [rdi + 6]	       702	libbfd.c	FUNCTION_48
0x4000790	        0x48c1e008	                              shl rax, 8	       701	libbfd.c	FUNCTION_48
0x4000794	          0x4809d0	                             or rax, rdx	       702	libbfd.c	FUNCTION_48
0x4000797	         0xfb65707	               movzx edx, byte [rdi + 7]	       705	libbfd.c	FUNCTION_48
0x400079b	        0x48c1e008	                              shl rax, 8	       702	libbfd.c	FUNCTION_48
0x400079f	          0x4809d0	                             or rax, rdx	       705	libbfd.c	FUNCTION_48
0x40007a2	              0xc3	                                     ret	       710	libbfd.c	FUNCTION_48
bfd_realloc2	ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,2	57
0x40003f0	              0x55	                                push rbp	       325	libbfd.c	FUNCTION_31
0x40003f1	          0x4889d1	                            mov rcx, rdx	       325	libbfd.c	FUNCTION_31
0x40003f4	              0x53	                                push rbx	       325	libbfd.c	FUNCTION_31
0x40003f5	          0x4889f2	                            mov rdx, rsi	       327	libbfd.c	FUNCTION_31	IF_1
0x40003f8	      0xb8ffffffff	                     mov eax, 0xffffffff	       327	libbfd.c	FUNCTION_31	IF_1
0x40003fd	          0x4809ca	                             or rdx, rcx	       327	libbfd.c	FUNCTION_31	IF_1
0x4000400	        0x4883ec08	                              sub rsp, 8	       325	libbfd.c	FUNCTION_31
0x4000404	          0x4839c2	                            cmp rdx, rax	       327	libbfd.c	FUNCTION_31	IF_1
0x4000407	            0x7616	                           jbe 0x400041f	       327	libbfd.c	FUNCTION_31	IF_1
0x4000409	          0x4885c9	                           test rcx, rcx	       327	libbfd.c	FUNCTION_31	IF_1
0x400040c	            0x7411	                            je 0x400041f	       327	libbfd.c	FUNCTION_31	IF_1
0x400040e	            0x31d2	                            xor edx, edx	       328	libbfd.c	FUNCTION_31	IF_1
0x4000410	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       328	libbfd.c	FUNCTION_31	IF_1
0x4000417	          0x48f7f1	                                 div rcx	       328	libbfd.c	FUNCTION_31	IF_1
0x400041a	          0x4839c6	                            cmp rsi, rax	       328	libbfd.c	FUNCTION_31	IF_1
0x400041d	            0x7761	                            ja 0x4000480	       328	libbfd.c	FUNCTION_31	IF_1
0x400041f	          0x4889f3	                            mov rbx, rsi	       334	libbfd.c	FUNCTION_31	CALL_2
0x4000422	        0x480fafd9	                           imul rbx, rcx	       334	libbfd.c	FUNCTION_31	CALL_2
0x4000426	          0x4885ff	                           test rdi, rdi	       302	libbfd.c	FUNCTION_30	IF_1
0x4000429	            0x7435	                            je 0x4000460	       302	libbfd.c	FUNCTION_30	IF_1
0x400042b	          0x4885db	                           test rbx, rbx	       305	libbfd.c	FUNCTION_30	IF_2
0x400042e	            0x7850	                            js 0x4000480	       305	libbfd.c	FUNCTION_30	IF_2
0x4000430	          0x4889de	                            mov rsi, rbx	       313	libbfd.c	FUNCTION_30	CALL_3
0x4000433	      0xe800000000	                          call 0x4000438	       313	libbfd.c	FUNCTION_30	CALL_3
0x4000438	          0x4885c0	                           test rax, rax	       315	libbfd.c	FUNCTION_30	IF_3
0x400043b	          0x4889c5	                            mov rbp, rax	       313	libbfd.c	FUNCTION_30	CALL_3
0x400043e	            0x7535	                           jne 0x4000475	       315	libbfd.c	FUNCTION_30	IF_3
0x4000440	          0x4885db	                           test rbx, rbx	       315	libbfd.c	FUNCTION_30	IF_3
0x4000443	            0x7430	                            je 0x4000475	       315	libbfd.c	FUNCTION_30	IF_3
0x4000445	      0xbf06000000	                              mov edi, 6	       316	libbfd.c	FUNCTION_30	CALL_4
0x400044a	      0xe800000000	                          call 0x400044f	       316	libbfd.c	FUNCTION_30	CALL_4
0x400044f	        0x4883c408	                              add rsp, 8	       335	libbfd.c	FUNCTION_31
0x4000453	          0x4889e8	                            mov rax, rbp	       316	libbfd.c	FUNCTION_30	CALL_4
0x4000456	              0x5b	                                 pop rbx	       335	libbfd.c	FUNCTION_31
0x4000457	              0x5d	                                 pop rbp	       335	libbfd.c	FUNCTION_31
0x4000458	              0xc3	                                     ret	       335	libbfd.c	FUNCTION_31
0x4000459	     0xf1f80000000	                         nop dword [rax]	       335	libbfd.c	FUNCTION_31
0x4000460	          0x4885db	                           test rbx, rbx	       263	libbfd.c	FUNCTION_28	IF_1
0x4000463	            0x781b	                            js 0x4000480	       263	libbfd.c	FUNCTION_28	IF_1
0x4000465	          0x4889df	                            mov rdi, rbx	       271	libbfd.c	FUNCTION_28	CALL_2
0x4000468	      0xe800000000	                          call 0x400046d	       271	libbfd.c	FUNCTION_28	CALL_2
0x400046d	          0x4885c0	                           test rax, rax	       272	libbfd.c	FUNCTION_28	IF_2
0x4000470	          0x4889c5	                            mov rbp, rax	       271	libbfd.c	FUNCTION_28	CALL_2
0x4000473	            0x74cb	                            je 0x4000440	       272	libbfd.c	FUNCTION_28	IF_2
0x4000475	        0x4883c408	                              add rsp, 8	       335	libbfd.c	FUNCTION_31
0x4000479	          0x4889e8	                            mov rax, rbp	       313	libbfd.c	FUNCTION_30	CALL_3
0x400047c	              0x5b	                                 pop rbx	       335	libbfd.c	FUNCTION_31
0x400047d	              0x5d	                                 pop rbp	       335	libbfd.c	FUNCTION_31
0x400047e	              0xc3	                                     ret	       335	libbfd.c	FUNCTION_31
0x400047f	              0x90	                                     nop	       335	libbfd.c	FUNCTION_31
0x4000480	      0xbf06000000	                              mov edi, 6	       330	libbfd.c	FUNCTION_31	IF_1	CALL_1
0x4000485	      0xe800000000	                          call 0x400048a	       330	libbfd.c	FUNCTION_31	IF_1	CALL_1
0x400048a	        0x4883c408	                              add rsp, 8	       335	libbfd.c	FUNCTION_31
0x400048e	            0x31c0	                            xor eax, eax	       331	libbfd.c	FUNCTION_31	IF_1
0x4000490	              0x5b	                                 pop rbx	       335	libbfd.c	FUNCTION_31
0x4000491	              0x5d	                                 pop rbp	       335	libbfd.c	FUNCTION_31
0x4000492	              0xc3	                                     ret	       335	libbfd.c	FUNCTION_31
_bfd_generic_get_section_contents	ELSE,1:IF,5:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,8	82
0x4000a60	          0x4d85c0	                             test r8, r8	       891	libbfd.c	FUNCTION_58	IF_1
0x4000a63	      0xb801000000	                              mov eax, 1	       892	libbfd.c	FUNCTION_58	IF_1
0x4000a68	     0xf84c8000000	                            je 0x4000b36	       891	libbfd.c	FUNCTION_58	IF_1
0x4000a6e	            0x4155	                                push r13	       889	libbfd.c	FUNCTION_58
0x4000a70	            0x4154	                                push r12	       889	libbfd.c	FUNCTION_58
0x4000a72	          0x4989d5	                            mov r13, rdx	       889	libbfd.c	FUNCTION_58
0x4000a75	              0x55	                                push rbp	       889	libbfd.c	FUNCTION_58
0x4000a76	              0x53	                                push rbx	       889	libbfd.c	FUNCTION_58
0x4000a77	          0x4d89c4	                             mov r12, r8	       889	libbfd.c	FUNCTION_58
0x4000a7a	          0x4889f3	                            mov rbx, rsi	       889	libbfd.c	FUNCTION_58
0x4000a7d	          0x4889fd	                            mov rbp, rdi	       889	libbfd.c	FUNCTION_58
0x4000a80	        0x4883ec08	                              sub rsp, 8	       889	libbfd.c	FUNCTION_58
0x4000a84	        0xf6462430	           test byte [rsi + 0x24], 0x30 	       894	libbfd.c	FUNCTION_58	IF_2
0x4000a88	     0xf85c2000000	                           jne 0x4000b50	       894	libbfd.c	FUNCTION_58	IF_2
0x4000a8e	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       909	libbfd.c	FUNCTION_58	IF_3
0x4000a92	          0x83e018	                           and eax, 0x18	       909	libbfd.c	FUNCTION_58	IF_3
0x4000a95	            0x3c10	                            cmp al, 0x10	       909	libbfd.c	FUNCTION_58	IF_3
0x4000a97	     0xf84a3000000	                            je 0x4000b40	       909	libbfd.c	FUNCTION_58	IF_3
0x4000a9d	        0x488b4640	            mov rax, qword [rsi + 0x40] 	       909	libbfd.c	FUNCTION_58	IF_3
0x4000aa1	          0x4885c0	                           test rax, rax	       909	libbfd.c	FUNCTION_58	IF_3
0x4000aa4	     0xf8496000000	                            je 0x4000b40	       909	libbfd.c	FUNCTION_58	IF_3
0x4000aaa	          0x4c89e2	                            mov rdx, r12	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000aad	          0x4801ca	                            add rdx, rcx	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000ab0	            0x726e	                            jb 0x4000b20	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000ab2	          0x4839d0	                            cmp rax, rdx	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000ab5	            0x7269	                            jb 0x4000b20	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000ab7	    0x488b85d00000	            mov rax, qword [rbp + 0xd0] 	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000abe	          0x4885c0	                           test rax, rax	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000ac1	            0x7406	                            je 0x4000ac9	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000ac3	        0xf6404801	               test byte [rax + 0x48], 1	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x4000ac7	            0x7437	                            je 0x4000b00	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x4000ac9	          0x4889ce	                            mov rsi, rcx	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x4000acc	    0x4803b3900000	             add rsi, qword [rbx + 0x90]	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x4000ad3	            0x31d2	                            xor edx, edx	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4000ad5	          0x4889ef	                            mov rdi, rbp	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4000ad8	      0xe800000000	                          call 0x4000add	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4000add	            0x89c2	                            mov edx, eax	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4000adf	            0x31c0	                            xor eax, eax	       926	libbfd.c	FUNCTION_58	IF_5
0x4000ae1	            0x85d2	                           test edx, edx	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4000ae3	            0x7547	                           jne 0x4000b2c	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4000ae5	          0x4889ea	                            mov rdx, rbp	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4000ae8	          0x4c89e6	                            mov rsi, r12	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4000aeb	          0x4c89ef	                            mov rdi, r13	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4000aee	      0xe800000000	                          call 0x4000af3	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x4000af3	          0x4939c4	                            cmp r12, rax	       892	libbfd.c	FUNCTION_58	IF_1
0x4000af6	           0xf94c0	                                 sete al	       892	libbfd.c	FUNCTION_58	IF_1
0x4000af9	           0xfb6c0	                           movzx eax, al	       892	libbfd.c	FUNCTION_58	IF_1
0x4000afc	            0xeb2e	                           jmp 0x4000b2c	       892	libbfd.c	FUNCTION_58	IF_1
0x4000afe	            0x6690	                                     nop	       892	libbfd.c	FUNCTION_58	IF_1
0x4000b00	    0x48038b900000	             add rcx, qword [rbx + 0x90]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000b07	    0x488b85c80000	            mov rax, qword [rbp + 0xc8] 	       918	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_5
0x4000b0e	        0x4a8d1421	                    lea rdx, [rcx + r12]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000b12	        0x483b5008	                cmp rdx, qword [rax + 8]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000b16	          0x4889ce	                            mov rsi, rcx	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000b19	            0x76b8	                           jbe 0x4000ad3	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000b1b	       0xf1f440000	                   nop dword [rax + rax]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000b20	      0xbf05000000	                              mov edi, 5	       920	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_6
0x4000b25	      0xe800000000	                          call 0x4000b2a	       920	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_6
0x4000b2a	            0x31c0	                            xor eax, eax	       921	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000b2c	        0x4883c408	                              add rsp, 8	       929	libbfd.c	FUNCTION_58
0x4000b30	              0x5b	                                 pop rbx	       929	libbfd.c	FUNCTION_58
0x4000b31	              0x5d	                                 pop rbp	       929	libbfd.c	FUNCTION_58
0x4000b32	            0x415c	                                 pop r12	       929	libbfd.c	FUNCTION_58
0x4000b34	            0x415d	                                 pop r13	       929	libbfd.c	FUNCTION_58
0x4000b36	            0xf3c3	                                     ret	       929	libbfd.c	FUNCTION_58
0x4000b38	     0xf1f84000000	                   nop dword [rax + rax]	       929	libbfd.c	FUNCTION_58
0x4000b40	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       912	libbfd.c	FUNCTION_58	ELSE_1
0x4000b44	      0xe961ffffff	                           jmp 0x4000aaa	       912	libbfd.c	FUNCTION_58	ELSE_1
0x4000b49	     0xf1f80000000	                         nop dword [rax]	       912	libbfd.c	FUNCTION_58	ELSE_1
0x4000b50	      0xba05000000	                              mov edx, 5	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000b55	      0xbe00000000	                              mov esi, 0	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000b5a	      0xbf00000000	                              mov edi, 0	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000b5f	      0xe800000000	                          call 0x4000b64	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000b64	          0x4889da	                            mov rdx, rbx	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4000b67	          0x4889c7	                            mov rdi, rax	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4000b6a	          0x4889ee	                            mov rsi, rbp	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4000b6d	            0x31c0	                            xor eax, eax	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4000b6f	      0xe800000000	                          call 0x4000b74	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4000b74	      0xbf05000000	                              mov edi, 5	       900	libbfd.c	FUNCTION_58	IF_2	CALL_3
0x4000b79	      0xe800000000	                          call 0x4000b7e	       900	libbfd.c	FUNCTION_58	IF_2	CALL_3
0x4000b7e	            0x31c0	                            xor eax, eax	       901	libbfd.c	FUNCTION_58	IF_2
0x4000b80	            0xebaa	                           jmp 0x4000b2c	       901	libbfd.c	FUNCTION_58	IF_2
bfd_get_bits	ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:FOR,1:DO,0:CALL,1	45
0x40009c0	        0x40f6c607	                             test sil, 7	       866	libbfd.c	FUNCTION_57	IF_1
0x40009c4	            0x7575	                           jne 0x4000a3b	       866	libbfd.c	FUNCTION_57	IF_1
0x40009c6	          0x8d4607	                      lea eax, [rsi + 7]	       870	libbfd.c	FUNCTION_57
0x40009c9	            0x85f6	                           test esi, esi	       870	libbfd.c	FUNCTION_57
0x40009cb	           0xf48f0	                          cmovs esi, eax	       870	libbfd.c	FUNCTION_57
0x40009ce	          0xc1fe03	                              sar esi, 3	       870	libbfd.c	FUNCTION_57
0x40009d1	            0x85f6	                           test esi, esi	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009d3	            0x7e63	                           jle 0x4000a38	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009d5	            0x85d2	                           test edx, edx	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009d7	            0x7427	                            je 0x4000a00	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009d9	          0x8d46ff	                      lea eax, [rsi - 1]	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009dc	      0x488d4c0701	                lea rcx, [rdi + rax + 1]	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009e1	            0x31c0	                            xor eax, eax	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009e3	       0xf1f440000	                   nop dword [rax + rax]	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009e8	           0xfb617	                   movzx edx, byte [rdi]	       875	libbfd.c	FUNCTION_57	FOR_1
0x40009eb	        0x48c1e008	                              shl rax, 8	       875	libbfd.c	FUNCTION_57	FOR_1
0x40009ef	        0x4883c701	                              add rdi, 1	       875	libbfd.c	FUNCTION_57	FOR_1
0x40009f3	          0x4809d0	                             or rax, rdx	       875	libbfd.c	FUNCTION_57	FOR_1
0x40009f6	          0x4839cf	                            cmp rdi, rcx	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009f9	            0x75ed	                           jne 0x40009e8	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009fb	            0xf3c3	                                     ret	       871	libbfd.c	FUNCTION_57	FOR_1
0x40009fd	           0xf1f00	                         nop dword [rax]	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a00	          0x4863c6	                         movsxd rax, esi	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a03	          0x8d4eff	                      lea ecx, [rsi - 1]	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a06	      0x488d5407ff	                lea rdx, [rdi + rax - 1]	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a0b	        0x4883e802	                              sub rax, 2	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a0f	          0x4829c8	                            sub rax, rcx	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a12	          0x4801c7	                            add rdi, rax	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a15	            0x31c0	                            xor eax, eax	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a17	    0x660f1f840000	                    nop word [rax + rax]	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a20	           0xfb60a	                   movzx ecx, byte [rdx]	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000a23	        0x48c1e008	                              shl rax, 8	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000a27	        0x4883ea01	                              sub rdx, 1	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000a2b	          0x4809c8	                             or rax, rcx	       875	libbfd.c	FUNCTION_57	FOR_1
0x4000a2e	          0x4839fa	                            cmp rdx, rdi	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a31	            0x75ed	                           jne 0x4000a20	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a33	            0xf3c3	                                     ret	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a35	           0xf1f00	                         nop dword [rax]	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000a38	            0x31c0	                            xor eax, eax	       869	libbfd.c	FUNCTION_57
0x4000a3a	              0xc3	                                     ret	       879	libbfd.c	FUNCTION_57
0x4000a3b	        0x4883ec08	                              sub rsp, 8	       860	libbfd.c	FUNCTION_57
0x4000a3f	      0xba00000000	                              mov edx, 0	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000a44	      0xbe63030000	                          mov esi, 0x363	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000a49	      0xbf00000000	                              mov edi, 0	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000a4e	      0xe800000000	                          call 0x4000a53	       867	libbfd.c	FUNCTION_57	CALL_1
_bfd_long_bfd_n1_error	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	6
0x4000160	        0x4883ec08	                              sub rsp, 8	       161	libbfd.c	FUNCTION_16
0x4000164	      0xbf05000000	                              mov edi, 5	       162	libbfd.c	FUNCTION_16	CALL_1
0x4000169	      0xe800000000	                          call 0x400016e	       162	libbfd.c	FUNCTION_16	CALL_1
0x400016e	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       164	libbfd.c	FUNCTION_16
0x4000175	        0x4883c408	                              add rsp, 8	       164	libbfd.c	FUNCTION_16
0x4000179	              0xc3	                                     ret	       164	libbfd.c	FUNCTION_16
bfd_getl64	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	14
0x40007b0	          0x8b4704	                mov eax, dword [rdi + 4]	       722	libbfd.c	FUNCTION_49
0x40007b3	         0xfb65703	               movzx edx, byte [rdi + 3]	       723	libbfd.c	FUNCTION_49
0x40007b7	        0x48c1e008	                              shl rax, 8	       722	libbfd.c	FUNCTION_49
0x40007bb	          0x4809d0	                             or rax, rdx	       723	libbfd.c	FUNCTION_49
0x40007be	         0xfb65702	               movzx edx, byte [rdi + 2]	       724	libbfd.c	FUNCTION_49
0x40007c2	        0x48c1e008	                              shl rax, 8	       723	libbfd.c	FUNCTION_49
0x40007c6	          0x4809d0	                             or rax, rdx	       724	libbfd.c	FUNCTION_49
0x40007c9	         0xfb65701	               movzx edx, byte [rdi + 1]	       725	libbfd.c	FUNCTION_49
0x40007cd	        0x48c1e008	                              shl rax, 8	       724	libbfd.c	FUNCTION_49
0x40007d1	          0x4809d0	                             or rax, rdx	       725	libbfd.c	FUNCTION_49
0x40007d4	           0xfb617	                   movzx edx, byte [rdi]	       728	libbfd.c	FUNCTION_49
0x40007d7	        0x48c1e008	                              shl rax, 8	       725	libbfd.c	FUNCTION_49
0x40007db	          0x4809d0	                             or rax, rdx	       728	libbfd.c	FUNCTION_49
0x40007de	              0xc3	                                     ret	       734	libbfd.c	FUNCTION_49
bfd_putb64	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	23
0x40008a0	          0x4889f8	                            mov rax, rdi	       807	libbfd.c	FUNCTION_54
0x40008a3	        0x40887e07	                 mov byte [rsi + 7], dil	       814	libbfd.c	FUNCTION_54
0x40008a7	        0x48c1e838	                           shr rax, 0x38	       807	libbfd.c	FUNCTION_54
0x40008ab	            0x8806	                      mov byte [rsi], al	       807	libbfd.c	FUNCTION_54
0x40008ad	          0x4889f8	                            mov rax, rdi	       808	libbfd.c	FUNCTION_54
0x40008b0	        0x48c1e830	                           shr rax, 0x30	       808	libbfd.c	FUNCTION_54
0x40008b4	          0x884601	                  mov byte [rsi + 1], al	       808	libbfd.c	FUNCTION_54
0x40008b7	          0x4889f8	                            mov rax, rdi	       809	libbfd.c	FUNCTION_54
0x40008ba	        0x48c1e828	                           shr rax, 0x28	       809	libbfd.c	FUNCTION_54
0x40008be	          0x884602	                  mov byte [rsi + 2], al	       809	libbfd.c	FUNCTION_54
0x40008c1	          0x4889f8	                            mov rax, rdi	       810	libbfd.c	FUNCTION_54
0x40008c4	        0x48c1e820	                           shr rax, 0x20	       810	libbfd.c	FUNCTION_54
0x40008c8	          0x884603	                  mov byte [rsi + 3], al	       810	libbfd.c	FUNCTION_54
0x40008cb	          0x4889f8	                            mov rax, rdi	       811	libbfd.c	FUNCTION_54
0x40008ce	        0x48c1e818	                           shr rax, 0x18	       811	libbfd.c	FUNCTION_54
0x40008d2	          0x884604	                  mov byte [rsi + 4], al	       811	libbfd.c	FUNCTION_54
0x40008d5	          0x4889f8	                            mov rax, rdi	       812	libbfd.c	FUNCTION_54
0x40008d8	        0x48c1e810	                           shr rax, 0x10	       812	libbfd.c	FUNCTION_54
0x40008dc	          0x884605	                  mov byte [rsi + 5], al	       812	libbfd.c	FUNCTION_54
0x40008df	          0x4889f8	                            mov rax, rdi	       813	libbfd.c	FUNCTION_54
0x40008e2	        0x48c1e808	                              shr rax, 8	       813	libbfd.c	FUNCTION_54
0x40008e6	          0x884606	                  mov byte [rsi + 6], al	       813	libbfd.c	FUNCTION_54
0x40008e9	              0xc3	                                     ret	       814	libbfd.c	FUNCTION_54
_bfd_dummy_target	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	6
0x4000260	        0x4883ec08	                              sub rsp, 8	       250	libbfd.c	FUNCTION_27
0x4000264	      0xbf03000000	                              mov edi, 3	       251	libbfd.c	FUNCTION_27	CALL_1
0x4000269	      0xe800000000	                          call 0x400026e	       251	libbfd.c	FUNCTION_27	CALL_1
0x400026e	            0x31c0	                            xor eax, eax	       253	libbfd.c	FUNCTION_27
0x4000270	        0x4883c408	                              add rsp, 8	       253	libbfd.c	FUNCTION_27
0x4000274	              0xc3	                                     ret	       253	libbfd.c	FUNCTION_27
bfd_getl_signed_64	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	14
0x4000820	          0x8b4704	                mov eax, dword [rdi + 4]	       769	libbfd.c	FUNCTION_51
0x4000823	         0xfb65703	               movzx edx, byte [rdi + 3]	       770	libbfd.c	FUNCTION_51
0x4000827	        0x48c1e008	                              shl rax, 8	       769	libbfd.c	FUNCTION_51
0x400082b	          0x4809d0	                             or rax, rdx	       770	libbfd.c	FUNCTION_51
0x400082e	         0xfb65702	               movzx edx, byte [rdi + 2]	       771	libbfd.c	FUNCTION_51
0x4000832	        0x48c1e008	                              shl rax, 8	       770	libbfd.c	FUNCTION_51
0x4000836	          0x4809d0	                             or rax, rdx	       771	libbfd.c	FUNCTION_51
0x4000839	         0xfb65701	               movzx edx, byte [rdi + 1]	       772	libbfd.c	FUNCTION_51
0x400083d	        0x48c1e008	                              shl rax, 8	       771	libbfd.c	FUNCTION_51
0x4000841	          0x4809d0	                             or rax, rdx	       772	libbfd.c	FUNCTION_51
0x4000844	           0xfb617	                   movzx edx, byte [rdi]	       775	libbfd.c	FUNCTION_51
0x4000847	        0x48c1e008	                              shl rax, 8	       772	libbfd.c	FUNCTION_51
0x400084b	          0x4809d0	                             or rax, rdx	       775	libbfd.c	FUNCTION_51
0x400084e	              0xc3	                                     ret	       780	libbfd.c	FUNCTION_51
bfd_putl16	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	4
0x40006e0	          0x40883e	                     mov byte [rsi], dil	       612	libbfd.c	FUNCTION_41
0x40006e3	        0x48c1ef08	                              shr rdi, 8	       613	libbfd.c	FUNCTION_41
0x40006e7	        0x40887e01	                 mov byte [rsi + 1], dil	       613	libbfd.c	FUNCTION_41
0x40006eb	              0xc3	                                     ret	       613	libbfd.c	FUNCTION_41
bfd_putl32	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	10
0x4000880	          0x4889f8	                            mov rax, rdi	       797	libbfd.c	FUNCTION_53
0x4000883	          0x40883e	                     mov byte [rsi], dil	       796	libbfd.c	FUNCTION_53
0x4000886	        0x48c1e808	                              shr rax, 8	       797	libbfd.c	FUNCTION_53
0x400088a	          0x884601	                  mov byte [rsi + 1], al	       797	libbfd.c	FUNCTION_53
0x400088d	          0x4889f8	                            mov rax, rdi	       798	libbfd.c	FUNCTION_53
0x4000890	        0x48c1ef18	                           shr rdi, 0x18	       799	libbfd.c	FUNCTION_53
0x4000894	        0x48c1e810	                           shr rax, 0x10	       798	libbfd.c	FUNCTION_53
0x4000898	        0x40887e03	                 mov byte [rsi + 3], dil	       799	libbfd.c	FUNCTION_53
0x400089c	          0x884602	                  mov byte [rsi + 2], al	       798	libbfd.c	FUNCTION_53
0x400089f	              0xc3	                                     ret	       799	libbfd.c	FUNCTION_53
_bfd_generic_get_section_contents_in_window	ELSE,1:IF,6:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,9	5
0x4000b90	        0x4883ec08	                              sub rsp, 8	       938	libbfd.c	FUNCTION_59
0x4000b94	      0xba00000000	                              mov edx, 0	       984	libbfd.c	FUNCTION_59	CALL_9
0x4000b99	      0xbed8030000	                          mov esi, 0x3d8	       984	libbfd.c	FUNCTION_59	CALL_9
0x4000b9e	      0xbf00000000	                              mov edi, 0	       984	libbfd.c	FUNCTION_59	CALL_9
0x4000ba3	      0xe800000000	                          call 0x4000ba8	       984	libbfd.c	FUNCTION_59	CALL_9
bfd_getl_signed_32	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	4
0x4000760	            0x8b07	                    mov eax, dword [rdi]	       678	libbfd.c	FUNCTION_47
0x4000762	       0x500000080	                     add eax, 0x80000000	       686	libbfd.c	FUNCTION_47
0x4000767	    0x480500000080	             add rax, 0xffffffff80000000	       686	libbfd.c	FUNCTION_47
0x400076d	              0xc3	                                     ret	       687	libbfd.c	FUNCTION_47
_bfd_bool_bfd_asymbol_false	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x4000050	            0x31c0	                            xor eax, eax	        54	libbfd.c	FUNCTION_2
0x4000052	              0xc3	                                     ret	        54	libbfd.c	FUNCTION_2
_bfd_norelocs_set_reloc	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	1
0x40001d0	            0xf3c3	                                     ret	       205	libbfd.c	FUNCTION_22
bfd_log2	ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,1:CALL,0	12
0x4000c10	        0x4883ff01	                              cmp rdi, 1	      1026	libbfd.c	FUNCTION_61	IF_1
0x4000c14	            0x761a	                           jbe 0x4000c30	      1026	libbfd.c	FUNCTION_61	IF_1
0x4000c16	        0x4883ef01	                              sub rdi, 1	      1028	libbfd.c	FUNCTION_61
0x4000c1a	            0x31c0	                            xor eax, eax	      1024	libbfd.c	FUNCTION_61
0x4000c1c	         0xf1f4000	                         nop dword [rax]	      1024	libbfd.c	FUNCTION_61
0x4000c20	          0x83c001	                              add eax, 1	      1030	libbfd.c	FUNCTION_61	DO_1
0x4000c23	          0x48d1ef	                              shr rdi, 1	      1031	libbfd.c	FUNCTION_61
0x4000c26	            0x75f8	                           jne 0x4000c20	      1031	libbfd.c	FUNCTION_61
0x4000c28	            0xf3c3	                                     ret	      1031	libbfd.c	FUNCTION_61
0x4000c2a	    0x660f1f440000	                    nop word [rax + rax]	      1031	libbfd.c	FUNCTION_61
0x4000c30	            0x31c0	                            xor eax, eax	      1027	libbfd.c	FUNCTION_61	IF_1
0x4000c32	              0xc3	                                     ret	      1033	libbfd.c	FUNCTION_61
_bfd_void_bfd	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	1
0x4000180	            0xf3c3	                                     ret	       168	libbfd.c	FUNCTION_17
bfd_putl64	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,1	23
0x40008f0	          0x4889f8	                            mov rax, rdi	       825	libbfd.c	FUNCTION_55
0x40008f3	          0x40883e	                     mov byte [rsi], dil	       832	libbfd.c	FUNCTION_55
0x40008f6	        0x48c1e838	                           shr rax, 0x38	       825	libbfd.c	FUNCTION_55
0x40008fa	          0x884607	                  mov byte [rsi + 7], al	       825	libbfd.c	FUNCTION_55
0x40008fd	          0x4889f8	                            mov rax, rdi	       826	libbfd.c	FUNCTION_55
0x4000900	        0x48c1e830	                           shr rax, 0x30	       826	libbfd.c	FUNCTION_55
0x4000904	          0x884606	                  mov byte [rsi + 6], al	       826	libbfd.c	FUNCTION_55
0x4000907	          0x4889f8	                            mov rax, rdi	       827	libbfd.c	FUNCTION_55
0x400090a	        0x48c1e828	                           shr rax, 0x28	       827	libbfd.c	FUNCTION_55
0x400090e	          0x884605	                  mov byte [rsi + 5], al	       827	libbfd.c	FUNCTION_55
0x4000911	          0x4889f8	                            mov rax, rdi	       828	libbfd.c	FUNCTION_55
0x4000914	        0x48c1e820	                           shr rax, 0x20	       828	libbfd.c	FUNCTION_55
0x4000918	          0x884604	                  mov byte [rsi + 4], al	       828	libbfd.c	FUNCTION_55
0x400091b	          0x4889f8	                            mov rax, rdi	       829	libbfd.c	FUNCTION_55
0x400091e	        0x48c1e818	                           shr rax, 0x18	       829	libbfd.c	FUNCTION_55
0x4000922	          0x884603	                  mov byte [rsi + 3], al	       829	libbfd.c	FUNCTION_55
0x4000925	          0x4889f8	                            mov rax, rdi	       830	libbfd.c	FUNCTION_55
0x4000928	        0x48c1e810	                           shr rax, 0x10	       830	libbfd.c	FUNCTION_55
0x400092c	          0x884602	                  mov byte [rsi + 2], al	       830	libbfd.c	FUNCTION_55
0x400092f	          0x4889f8	                            mov rax, rdi	       831	libbfd.c	FUNCTION_55
0x4000932	        0x48c1e808	                              shr rax, 8	       831	libbfd.c	FUNCTION_55
0x4000936	          0x884601	                  mov byte [rsi + 1], al	       831	libbfd.c	FUNCTION_55
0x4000939	              0xc3	                                     ret	       832	libbfd.c	FUNCTION_55
_bfd_bool_bfd_uint_true	ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:FOR,0:DO,0:CALL,0	2
0x40000d0	      0xb801000000	                              mov eax, 1	       101	libbfd.c	FUNCTION_8
0x40000d5	              0xc3	                                     ret	       101	libbfd.c	FUNCTION_8
