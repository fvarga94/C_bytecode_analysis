deflate_slow	DO,1:ELSE,2:WHILE,0:CALL,9:functions,0:IF,15:SWITCH,0:FOR,1	426
0x4001310	            0x4157	                                push r15	      1929	deflate.c	
0x4001312	            0x4156	                                push r14	      1929	deflate.c	
0x4001314	            0x4155	                                push r13	      1929	deflate.c	
0x4001316	            0x4154	                                push r12	      1929	deflate.c	
0x4001318	              0x55	                                push rbp	      1929	deflate.c	
0x4001319	              0x53	                                push rbx	      1929	deflate.c	
0x400131a	            0x89f5	                            mov ebp, esi	      1929	deflate.c	
0x400131c	          0x4889fb	                            mov rbx, rdi	      1929	deflate.c	
0x400131f	        0x4883ec08	                              sub rsp, 8	      1929	deflate.c	
0x4001323	    0x8bbbb4000000	            mov edi, dword [rbx + 0xb4] 	      1929	deflate.c	
0x4001329	     0xf1f80000000	                         nop dword [rax]	      1929	deflate.c	
0x4001330	    0x81ff05010000	                          cmp edi, 0x105	      1940	deflate.c	FUNCTION_22	FOR_1
0x4001336	     0xf86fa020000	                           jbe 0x4001636	      1940	deflate.c	FUNCTION_22	FOR_1
0x400133c	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001342	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001346	          0x8d4202	                      lea eax, [rdx + 2]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001349	            0x89d7	                            mov edi, edx	      1953	deflate.c	FUNCTION_22	FOR_1
0x400134b	          0x237b58	             and edi, dword [rbx + 0x58]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400134e	         0xfb63401	             movzx esi, byte [rcx + rax]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001352	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001358	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400135e	            0xd3e0	                             shl eax, cl	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001360	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001364	            0x31f0	                            xor eax, esi	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001366	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400136c	    0x898380000000	             mov dword [rbx + 0x80], eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001372	        0x488d0441	                  lea rax, [rcx + rax*2]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001376	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400137a	           0xfb730	                   movzx esi, word [rax]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400137d	        0x66893479	              mov word [rcx + rdi*2], si	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001381	          0x668910	                      mov word [rax], dx	      1953	deflate.c	FUNCTION_22	FOR_1
0x4001384	            0x85f6	                           test esi, esi	      1961	deflate.c	FUNCTION_22	FOR_1
0x4001386	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x400138c	    0x8b83b0000000	            mov eax, dword [rbx + 0xb0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4001392	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1959	deflate.c	FUNCTION_22	FOR_1
0x400139c	    0x8983a4000000	             mov dword [rbx + 0xa4], eax	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40013a2	    0x898bb8000000	             mov dword [rbx + 0xb8], ecx	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40013a8	      0xb802000000	                              mov eax, 2	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40013ad	            0x7421	                            je 0x40013d0	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013af	    0x3b8bc0000000	            cmp ecx, dword [rbx + 0xc0] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013b5	            0x7319	                           jae 0x40013d0	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013b7	          0x8b7b50	            mov edi, dword [rbx + 0x50] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013ba	          0x4189d0	                            mov r8d, edx	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013bd	          0x4129f0	                            sub r8d, esi	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013c0	    0x81ef06010000	                          sub edi, 0x106	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013c6	          0x4139f8	                            cmp r8d, edi	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013c9	     0xf86c1030000	                           jbe 0x4001790	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013cf	              0x90	                                     nop	      1961	deflate.c	FUNCTION_22	FOR_1
0x40013d0	          0x83f902	                              cmp ecx, 2	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40013d3	     0xf86c7010000	                           jbe 0x40015a0	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40013d9	            0x39c1	                            cmp ecx, eax	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40013db	     0xf82bf010000	                            jb 0x40015a0	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40013e1	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1987	deflate.c	FUNCTION_22	FOR_1
0x40013e7	    0x8bb30c170000	          mov esi, dword [rbx + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40013ed	          0x83e903	                              sub ecx, 3	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40013f0	    0x488bbb101700	          mov rdi, qword [rbx + 0x1710] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40013f7	      0x448d4402fd	                lea r8d, [rdx + rax - 3]	      1987	deflate.c	FUNCTION_22	FOR_1
0x40013fc	    0x662b93a40000	               sub dx, word [rbx + 0xa4]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001403	          0x4889f0	                            mov rax, rsi	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001406	          0x83c001	                              add eax, 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001409	        0x448d4aff	                      lea r9d, [rdx - 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400140d	          0x83ea02	                              sub edx, 2	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001410	      0x6644890c77	             mov word [rdi + rsi*2], r9w	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001415	    0x488bbb001700	          mov rdi, qword [rbx + 0x1700] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400141c	    0x89830c170000	          mov dword [rbx + 0x170c], eax 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001422	          0x880c37	                mov byte [rdi + rsi], cl	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001425	           0xfb6c9	                           movzx ecx, cl	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001428	     0xfb681000000	                   movzx eax, byte [rcx]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400142f	    0x66838483d804	       add word [rbx + rax*4 + 0x4d8], 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001438	      0x6681faff00	                            cmp dx, 0xff	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400143d	     0xf878d020000	                            ja 0x40016d0	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001443	           0xfb7d2	                           movzx edx, dx	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001446	     0xfb682000000	                   movzx eax, byte [rdx]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400144d	    0x66838483c809	       add word [rbx + rax*4 + 0x9c8], 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001456	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400145c	    0x448b93b80000	           mov r10d, dword [rbx + 0xb8] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001463	    0x448b9bac0000	           mov r11d, dword [rbx + 0xac] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400146a	    0x448ba30c1700	         mov r12d, dword [rbx + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001471	        0x448d48ff	                      lea r9d, [rax - 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001475	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400147b	        0x418d72fe	                      lea esi, [r10 - 2]	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400147f	    0x89b3b8000000	             mov dword [rbx + 0xb8], esi	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001485	          0x8d7801	                      lea edi, [rax + 1]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001488	        0x418d4301	                      lea eax, [r11 + 1]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400148c	          0x4429d7	                           sub edi, r10d	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400148f	    0x89bbb4000000	             mov dword [rbx + 0xb4], edi	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001495	           0xf1f00	                         nop dword [rax]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001498	          0x4139c0	                            cmp r8d, eax	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400149b	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014a1	            0x7248	                            jb 0x40014eb	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014a3	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014a7	          0x8d5002	                      lea edx, [rax + 2]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014aa	      0x440fb62c11	            movzx r13d, byte [rcx + rdx]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014af	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014b5	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014bb	            0xd3e2	                             shl edx, cl	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014bd	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014c1	          0x4431ea	                           xor edx, r13d	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014c4	    0x23938c000000	             and edx, dword [rbx + 0x8c]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014ca	          0x4189c5	                           mov r13d, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014cd	        0x44236b58	            and r13d, dword [rbx + 0x58]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014d1	    0x899380000000	             mov dword [rbx + 0x80], edx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014d7	        0x488d1451	                  lea rdx, [rcx + rdx*2]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014db	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014df	        0x440fb73a	                  movzx r15d, word [rdx]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014e3	      0x6646893c69	            mov word [rcx + r13*2], r15w	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014e8	          0x668902	                      mov word [rdx], ax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40014eb	          0x83ee01	                              sub esi, 1	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40014ee	          0x83c001	                              add eax, 1	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40014f1	            0x85f6	                           test esi, esi	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40014f3	    0x89b3b8000000	             mov dword [rbx + 0xb8], esi	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40014f9	            0x759d	                           jne 0x4001498	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40014fb	      0x438d441aff	                lea eax, [r10 + r11 - 1]	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x4001500	          0x4539cc	                           cmp r12d, r9d	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001503	    0xc783a8000000	               mov dword [rbx + 0xa8], 0	      2007	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x400150d	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      2008	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x4001517	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x400151d	     0xf850dfeffff	                           jne 0x4001330	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001523	    0x488b8b980000	            mov rcx, qword [rbx + 0x98] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400152a	            0x89c2	                            mov edx, eax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400152c	            0x31f6	                            xor esi, esi	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400152e	          0x4829ca	                            sub rdx, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001531	          0x4885c9	                           test rcx, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001534	            0x7809	                            js 0x400153f	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001536	            0x89c9	                            mov ecx, ecx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001538	          0x4889ce	                            mov rsi, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400153b	        0x48037360	             add rsi, qword [rbx + 0x60]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400153f	            0x31c9	                            xor ecx, ecx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001541	          0x4889df	                            mov rdi, rbx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001544	      0xe800000000	                          call 0x4001549	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001549	          0x4c8b2b	                    mov r13, qword [rbx]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400154c	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001552	        0x4d8b7538	            mov r14, qword [r13 + 0x38] 	       734	deflate.c	
0x4001556	    0x488983980000	             mov qword [rbx + 0x98], rax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400155d	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4001560	      0xe800000000	                          call 0x4001565	       736	deflate.c	FUNCTION_12
0x4001565	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4001569	        0x458b6520	           mov r12d, dword [r13 + 0x20] 	       738	deflate.c	FUNCTION_12
0x400156d	          0x4439e0	                           cmp eax, r12d	       738	deflate.c	FUNCTION_12
0x4001570	        0x440f46e0	                        cmovbe r12d, eax	       738	deflate.c	FUNCTION_12
0x4001574	          0x4585e4	                         test r12d, r12d	       739	deflate.c	FUNCTION_12
0x4001577	     0xf8545020000	                           jne 0x40017c2	       739	deflate.c	FUNCTION_12
0x400157d	          0x488b03	                    mov rax, qword [rbx]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001580	        0x448b6020	           mov r12d, dword [rax + 0x20] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001584	          0x4585e4	                         test r12d, r12d	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4001587	     0xf8596fdffff	                           jne 0x4001323	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400158d	            0x31c0	                            xor eax, eax	      1943	deflate.c	FUNCTION_22	FOR_1
0x400158f	        0x4883c408	                              add rsp, 8	      2049	deflate.c	FUNCTION_22	IF_14
0x4001593	              0x5b	                                 pop rbx	      2049	deflate.c	FUNCTION_22	IF_14
0x4001594	              0x5d	                                 pop rbp	      2049	deflate.c	FUNCTION_22	IF_14
0x4001595	            0x415c	                                 pop r12	      2049	deflate.c	FUNCTION_22	IF_14
0x4001597	            0x415d	                                 pop r13	      2049	deflate.c	FUNCTION_22	IF_14
0x4001599	            0x415e	                                 pop r14	      2049	deflate.c	FUNCTION_22	IF_14
0x400159b	            0x415f	                                 pop r15	      2049	deflate.c	FUNCTION_22	IF_14
0x400159d	              0xc3	                                     ret	      2049	deflate.c	FUNCTION_22	IF_14
0x400159e	            0x6690	                                     nop	      2049	deflate.c	FUNCTION_22	IF_14
0x40015a0	    0x448b9ba80000	           mov r11d, dword [rbx + 0xa8] 	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40015a7	          0x4585db	                         test r11d, r11d	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40015aa	     0xf84f0000000	                            je 0x40016a0	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40015b0	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015b6	          0x8d42ff	                      lea eax, [rdx - 1]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015b9	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015bd	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015c4	          0x4531d2	                          xor r10d, r10d	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015c7	         0xfb60402	             movzx eax, byte [rdx + rax]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015cb	      0x664489144e	            mov word [rsi + rcx*2], r10w	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015d0	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015d7	          0x4889ca	                            mov rdx, rcx	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015da	          0x83c201	                              add edx, 1	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015dd	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015e3	          0x88040e	                mov byte [rsi + rcx], al	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015e6	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015ef	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015f5	          0x83e801	                              sub eax, 1	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015f8	    0x39830c170000	          cmp dword [rbx + 0x170c], eax 	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40015fe	     0xf84ec000000	                            je 0x40016f0	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001604	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x400160a	    0x8383ac000000	               add dword [rbx + 0xac], 1	      2023	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	CALL_6
0x4001611	          0x8d78ff	                      lea edi, [rax - 1]	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4001614	          0x488b03	                    mov rax, qword [rbx]	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4001617	    0x89bbb4000000	             mov dword [rbx + 0xb4], edi	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x400161d	        0x448b4820	            mov r9d, dword [rax + 0x20] 	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4001621	          0x4585c9	                           test r9d, r9d	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4001624	     0xf8463ffffff	                            je 0x400158d	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x400162a	    0x81ff05010000	                          cmp edi, 0x105	      1940	deflate.c	FUNCTION_22	FOR_1
0x4001630	     0xf8706fdffff	                            ja 0x400133c	      1940	deflate.c	FUNCTION_22	FOR_1
0x4001636	          0x4889df	                            mov rdi, rbx	      1941	deflate.c	FUNCTION_22	FOR_1
0x4001639	      0xe832ecffff	                    call sym.fill_window	      1941	deflate.c	FUNCTION_22	FOR_1
0x400163e	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1942	deflate.c	FUNCTION_22	FOR_1
0x4001644	      0x3d05010000	                          cmp eax, 0x105	      1942	deflate.c	FUNCTION_22	FOR_1
0x4001649	     0xf87edfcffff	                            ja 0x400133c	      1942	deflate.c	FUNCTION_22	FOR_1
0x400164f	            0x85ed	                           test ebp, ebp	      1942	deflate.c	FUNCTION_22	FOR_1
0x4001651	     0xf8436ffffff	                            je 0x400158d	      1942	deflate.c	FUNCTION_22	FOR_1
0x4001657	            0x85c0	                           test eax, eax	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x4001659	     0xf84de010000	                            je 0x400183d	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x400165f	          0x83f802	                              cmp eax, 2	      1952	deflate.c	FUNCTION_22	FOR_1
0x4001662	     0xf87d4fcffff	                            ja 0x400133c	      1952	deflate.c	FUNCTION_22	FOR_1
0x4001668	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x400166e	    0x8b83b0000000	            mov eax, dword [rbx + 0xb0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4001674	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1959	deflate.c	FUNCTION_22	FOR_1
0x400167e	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1959	deflate.c	FUNCTION_22	FOR_1
0x4001684	    0x8983a4000000	             mov dword [rbx + 0xa4], eax	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x400168a	    0x898bb8000000	             mov dword [rbx + 0xb8], ecx	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4001690	      0xb802000000	                              mov eax, 2	      1959	deflate.c	FUNCTION_22	FOR_1
0x4001695	      0xe936fdffff	                           jmp 0x40013d0	      1959	deflate.c	FUNCTION_22	FOR_1
0x400169a	    0x660f1f440000	                    nop word [rax + rax]	      1959	deflate.c	FUNCTION_22	FOR_1
0x40016a0	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x40016a6	          0x83c201	                              add edx, 1	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x40016a9	    0xc783a8000000	               mov dword [rbx + 0xa8], 1	      2030	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40016b3	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x40016b9	          0x8d78ff	                      lea edi, [rax - 1]	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x40016bc	    0x89bbb4000000	             mov dword [rbx + 0xb4], edi	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x40016c2	      0xe969fcffff	                           jmp 0x4001330	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x40016c7	    0x660f1f840000	                    nop word [rax + rax]	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x40016d0	        0x66c1ea07	                               shr dx, 7	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40016d4	    0x488d82000100	                  lea rax, [rdx + 0x100]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40016db	      0x25ff030000	                          and eax, 0x3ff	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40016e0	     0xfb680000000	                   movzx eax, byte [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40016e7	      0xe961fdffff	                           jmp 0x400144d	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40016ec	         0xf1f4000	                         nop dword [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40016f0	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40016f6	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40016fd	            0x31f6	                            xor esi, esi	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40016ff	          0x4829c2	                            sub rdx, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001702	          0x4885c0	                           test rax, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001705	            0x7809	                            js 0x4001710	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001707	            0x89c0	                            mov eax, eax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001709	        0x48034360	             add rax, qword [rbx + 0x60]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400170d	          0x4889c6	                            mov rsi, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001710	            0x31c9	                            xor ecx, ecx	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001712	          0x4889df	                            mov rdi, rbx	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001715	      0xe800000000	                          call 0x400171a	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400171a	          0x4c8b2b	                    mov r13, qword [rbx]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400171d	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4001723	        0x4d8b7538	            mov r14, qword [r13 + 0x38] 	       734	deflate.c	
0x4001727	    0x488983980000	             mov qword [rbx + 0x98], rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400172e	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4001731	      0xe800000000	                          call 0x4001736	       736	deflate.c	FUNCTION_12
0x4001736	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x400173a	        0x458b6520	           mov r12d, dword [r13 + 0x20] 	       738	deflate.c	FUNCTION_12
0x400173e	          0x4439e0	                           cmp eax, r12d	       738	deflate.c	FUNCTION_12
0x4001741	        0x440f46e0	                        cmovbe r12d, eax	       738	deflate.c	FUNCTION_12
0x4001745	          0x4585e4	                         test r12d, r12d	       739	deflate.c	FUNCTION_12
0x4001748	     0xf84b6feffff	                            je 0x4001604	       739	deflate.c	FUNCTION_12
0x400174e	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001752	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001756	          0x4589e7	                          mov r15d, r12d	       741	deflate.c	FUNCTION_12
0x4001759	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x400175c	      0xe800000000	                          call 0x4001761	        53	string3.h	FUNCTION_25	CALL_3
0x4001761	        0x4d017d18	            add qword [r13 + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x4001765	        0x4d017e20	            add qword [r14 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x4001769	        0x4d017d28	            add qword [r13 + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x400176d	        0x45296520	            sub dword [r13 + 0x20], r12d	       745	deflate.c	FUNCTION_12	CALL_2
0x4001771	        0x4d297e28	             sub qword [r14 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x4001775	     0xf8589feffff	                           jne 0x4001604	       747	deflate.c	FUNCTION_12
0x400177b	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x400177f	        0x49894620	             mov qword [r14 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4001783	      0xe97cfeffff	                           jmp 0x4001604	       748	deflate.c	FUNCTION_12
0x4001788	     0xf1f84000000	                   nop dword [rax + rax]	       748	deflate.c	FUNCTION_12
0x4001790	          0x4889df	                            mov rdi, rbx	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4001793	      0xe8a8e8ffff	                  call sym.longest_match	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4001798	          0x83f805	                              cmp eax, 5	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400179b	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017a1	            0x770e	                            ja 0x40017b1	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017a3	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017aa	            0x7450	                            je 0x40017fc	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017ac	          0x83f803	                              cmp eax, 3	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017af	            0x746b	                            je 0x400181c	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017b1	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017b7	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017bd	      0xe90efcffff	                           jmp 0x40013d0	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40017c2	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40017c6	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x40017ca	          0x4589e7	                          mov r15d, r12d	       741	deflate.c	FUNCTION_12
0x40017cd	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x40017d0	      0xe800000000	                          call 0x40017d5	        53	string3.h	FUNCTION_25	CALL_3
0x40017d5	        0x4d017d18	            add qword [r13 + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x40017d9	        0x4d017e20	            add qword [r14 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x40017dd	        0x4d017d28	            add qword [r13 + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x40017e1	        0x45296520	            sub dword [r13 + 0x20], r12d	       745	deflate.c	FUNCTION_12	CALL_2
0x40017e5	        0x4d297e28	             sub qword [r14 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x40017e9	     0xf858efdffff	                           jne 0x400157d	       747	deflate.c	FUNCTION_12
0x40017ef	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x40017f3	        0x49894620	             mov qword [r14 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x40017f7	      0xe981fdffff	                           jmp 0x400157d	       748	deflate.c	FUNCTION_12
0x40017fc	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	       748	deflate.c	FUNCTION_12
0x4001802	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x400180c	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x4001812	      0xb802000000	                              mov eax, 2	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x4001817	      0xe9b4fbffff	                           jmp 0x40013d0	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x400181c	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1973	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4001822	            0x89d1	                            mov ecx, edx	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4001824	    0x2b8bb0000000	             sub ecx, dword [rbx + 0xb0]	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400182a	    0x81f900100000	                         cmp ecx, 0x1000	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4001830	            0x77d0	                            ja 0x4001802	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4001832	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4001838	      0xe993fbffff	                           jmp 0x40013d0	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400183d	    0x448b83a80000	            mov r8d, dword [rbx + 0xa8] 	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4001844	          0x4585c0	                           test r8d, r8d	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4001847	     0xf85aa000000	                           jne 0x40018f7	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x400184d	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4001853	      0xb802000000	                              mov eax, 2	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4001858	          0x83fa02	                              cmp edx, 2	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x400185b	           0xf46c2	                         cmovbe eax, edx	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x400185e	          0x83fd04	                              cmp ebp, 4	      2042	deflate.c	FUNCTION_22	IF_13	CALL_9
0x4001861	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4001867	     0xf84dc000000	                            je 0x4001949	      2042	deflate.c	FUNCTION_22	IF_13	CALL_9
0x400186d	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2046	deflate.c	FUNCTION_22	IF_14
0x4001873	      0xb801000000	                              mov eax, 1	      2048	deflate.c	FUNCTION_22	IF_14
0x4001878	            0x85c9	                           test ecx, ecx	      2046	deflate.c	FUNCTION_22	IF_14
0x400187a	     0xf840ffdffff	                            je 0x400158f	      2046	deflate.c	FUNCTION_22	IF_14
0x4001880	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4001887	            0x31f6	                            xor esi, esi	      2047	deflate.c	FUNCTION_22	IF_14
0x4001889	          0x4829c2	                            sub rdx, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x400188c	          0x4885c0	                           test rax, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x400188f	            0x7809	                            js 0x400189a	      2047	deflate.c	FUNCTION_22	IF_14
0x4001891	            0x89c0	                            mov eax, eax	      2047	deflate.c	FUNCTION_22	IF_14
0x4001893	        0x48034360	             add rax, qword [rbx + 0x60]	      2047	deflate.c	FUNCTION_22	IF_14
0x4001897	          0x4889c6	                            mov rsi, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x400189a	            0x31c9	                            xor ecx, ecx	      2047	deflate.c	FUNCTION_22	IF_14
0x400189c	          0x4889df	                            mov rdi, rbx	      2047	deflate.c	FUNCTION_22	IF_14
0x400189f	      0xe800000000	                          call 0x40018a4	      2047	deflate.c	FUNCTION_22	IF_14
0x40018a4	          0x4c8b23	                    mov r12, qword [rbx]	      2047	deflate.c	FUNCTION_22	IF_14
0x40018a7	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2047	deflate.c	FUNCTION_22	IF_14
0x40018ad	      0x498b6c2438	            mov rbp, qword [r12 + 0x38] 	       734	deflate.c	
0x40018b2	    0x488983980000	             mov qword [rbx + 0x98], rax	      2047	deflate.c	FUNCTION_22	IF_14
0x40018b9	          0x4889ef	                            mov rdi, rbp	       736	deflate.c	FUNCTION_12
0x40018bc	      0xe800000000	                          call 0x40018c1	       736	deflate.c	FUNCTION_12
0x40018c1	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       737	deflate.c	FUNCTION_12
0x40018c5	      0x458b6c2420	           mov r13d, dword [r12 + 0x20] 	       738	deflate.c	FUNCTION_12
0x40018ca	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x40018cd	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x40018d1	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x40018d4	     0xf85e3000000	                           jne 0x40019bd	       739	deflate.c	FUNCTION_12
0x40018da	          0x488b03	                    mov rax, qword [rbx]	      2047	deflate.c	FUNCTION_22	IF_14
0x40018dd	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1943	deflate.c	FUNCTION_22	FOR_1
0x40018e0	            0x85c0	                           test eax, eax	      1943	deflate.c	FUNCTION_22	FOR_1
0x40018e2	           0xf95c0	                                setne al	      1943	deflate.c	FUNCTION_22	FOR_1
0x40018e5	        0x4883c408	                              add rsp, 8	      2049	deflate.c	FUNCTION_22	IF_14
0x40018e9	              0x5b	                                 pop rbx	      2049	deflate.c	FUNCTION_22	IF_14
0x40018ea	           0xfb6c0	                           movzx eax, al	      1943	deflate.c	FUNCTION_22	FOR_1
0x40018ed	              0x5d	                                 pop rbp	      2049	deflate.c	FUNCTION_22	IF_14
0x40018ee	            0x415c	                                 pop r12	      2049	deflate.c	FUNCTION_22	IF_14
0x40018f0	            0x415d	                                 pop r13	      2049	deflate.c	FUNCTION_22	IF_14
0x40018f2	            0x415e	                                 pop r14	      2049	deflate.c	FUNCTION_22	IF_14
0x40018f4	            0x415f	                                 pop r15	      2049	deflate.c	FUNCTION_22	IF_14
0x40018f6	              0xc3	                                     ret	      2049	deflate.c	FUNCTION_22	IF_14
0x40018f7	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x40018fd	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001901	            0x31ff	                            xor edi, edi	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001903	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001909	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001910	          0x83e801	                              sub eax, 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001913	         0xfb60402	             movzx eax, byte [rdx + rax]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001917	        0x66893c4e	              mov word [rsi + rcx*2], di	      2038	deflate.c	FUNCTION_22	FOR_1
0x400191b	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001922	          0x4889ca	                            mov rdx, rcx	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001925	          0x83c201	                              add edx, 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001928	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      2038	deflate.c	FUNCTION_22	FOR_1
0x400192e	          0x88040e	                mov byte [rsi + rcx], al	      2038	deflate.c	FUNCTION_22	FOR_1
0x4001931	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x400193a	    0xc783a8000000	               mov dword [rbx + 0xa8], 0	      2039	deflate.c	FUNCTION_22	CALL_7
0x4001944	      0xe904ffffff	                           jmp 0x400184d	      2039	deflate.c	FUNCTION_22	CALL_7
0x4001949	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4001950	            0x31f6	                            xor esi, esi	      2043	deflate.c	FUNCTION_22	IF_13
0x4001952	          0x4829c2	                            sub rdx, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4001955	          0x4885c0	                           test rax, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4001958	            0x7809	                            js 0x4001963	      2043	deflate.c	FUNCTION_22	IF_13
0x400195a	            0x89c0	                            mov eax, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x400195c	        0x48034360	             add rax, qword [rbx + 0x60]	      2043	deflate.c	FUNCTION_22	IF_13
0x4001960	          0x4889c6	                            mov rsi, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4001963	      0xb901000000	                              mov ecx, 1	      2043	deflate.c	FUNCTION_22	IF_13
0x4001968	          0x4889df	                            mov rdi, rbx	      2043	deflate.c	FUNCTION_22	IF_13
0x400196b	      0xe800000000	                          call 0x4001970	      2043	deflate.c	FUNCTION_22	IF_13
0x4001970	          0x4c8b23	                    mov r12, qword [rbx]	      2043	deflate.c	FUNCTION_22	IF_13
0x4001973	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4001979	      0x498b6c2438	            mov rbp, qword [r12 + 0x38] 	       734	deflate.c	
0x400197e	    0x488983980000	             mov qword [rbx + 0x98], rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4001985	          0x4889ef	                            mov rdi, rbp	       736	deflate.c	FUNCTION_12
0x4001988	      0xe800000000	                          call 0x400198d	       736	deflate.c	FUNCTION_12
0x400198d	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       737	deflate.c	FUNCTION_12
0x4001991	      0x458b6c2420	           mov r13d, dword [r12 + 0x20] 	       738	deflate.c	FUNCTION_12
0x4001996	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4001999	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x400199d	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x40019a0	            0x7559	                           jne 0x40019fb	       739	deflate.c	FUNCTION_12
0x40019a2	          0x488b03	                    mov rax, qword [rbx]	      2043	deflate.c	FUNCTION_22	IF_13
0x40019a5	        0x83782001	               cmp dword [rax + 0x20], 1	      2043	deflate.c	FUNCTION_22	IF_13
0x40019a9	            0x19c0	                            sbb eax, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x40019ab	        0x4883c408	                              add rsp, 8	      2049	deflate.c	FUNCTION_22	IF_14
0x40019af	              0x5b	                                 pop rbx	      2049	deflate.c	FUNCTION_22	IF_14
0x40019b0	          0x83c003	                              add eax, 3	      2043	deflate.c	FUNCTION_22	IF_13
0x40019b3	              0x5d	                                 pop rbp	      2049	deflate.c	FUNCTION_22	IF_14
0x40019b4	            0x415c	                                 pop r12	      2049	deflate.c	FUNCTION_22	IF_14
0x40019b6	            0x415d	                                 pop r13	      2049	deflate.c	FUNCTION_22	IF_14
0x40019b8	            0x415e	                                 pop r14	      2049	deflate.c	FUNCTION_22	IF_14
0x40019ba	            0x415f	                                 pop r15	      2049	deflate.c	FUNCTION_22	IF_14
0x40019bc	              0xc3	                                     ret	      2049	deflate.c	FUNCTION_22	IF_14
0x40019bd	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40019c2	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x40019c6	          0x4589ee	                          mov r14d, r13d	       741	deflate.c	FUNCTION_12
0x40019c9	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x40019cc	      0xe800000000	                          call 0x40019d1	        53	string3.h	FUNCTION_25	CALL_3
0x40019d1	      0x4d01742418	            add qword [r12 + 0x18], r14 	       742	deflate.c	FUNCTION_12	IF_1
0x40019d6	        0x4c017520	            add qword [rbp + 0x20], r14 	       743	deflate.c	FUNCTION_12	IF_2
0x40019da	      0x4d01742428	            add qword [r12 + 0x28], r14 	       744	deflate.c	FUNCTION_12
0x40019df	      0x45296c2420	            sub dword [r12 + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x40019e4	        0x4c297528	             sub qword [rbp + 0x28], r14	       747	deflate.c	FUNCTION_12
0x40019e8	     0xf85ecfeffff	                           jne 0x40018da	       747	deflate.c	FUNCTION_12
0x40019ee	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       748	deflate.c	FUNCTION_12
0x40019f2	        0x48894520	            mov qword [rbp + 0x20], rax 	       748	deflate.c	FUNCTION_12
0x40019f6	      0xe9dffeffff	                           jmp 0x40018da	       748	deflate.c	FUNCTION_12
0x40019fb	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001a00	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001a04	          0x4589ee	                          mov r14d, r13d	       741	deflate.c	FUNCTION_12
0x4001a07	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x4001a0a	      0xe800000000	                          call 0x4001a0f	        53	string3.h	FUNCTION_25	CALL_3
0x4001a0f	      0x4d01742418	            add qword [r12 + 0x18], r14 	       742	deflate.c	FUNCTION_12	IF_1
0x4001a14	        0x4c017520	            add qword [rbp + 0x20], r14 	       743	deflate.c	FUNCTION_12	IF_2
0x4001a18	      0x4d01742428	            add qword [r12 + 0x28], r14 	       744	deflate.c	FUNCTION_12
0x4001a1d	      0x45296c2420	            sub dword [r12 + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x4001a22	        0x4c297528	             sub qword [rbp + 0x28], r14	       747	deflate.c	FUNCTION_12
0x4001a26	     0xf8576ffffff	                           jne 0x40019a2	       747	deflate.c	FUNCTION_12
0x4001a2c	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       748	deflate.c	FUNCTION_12
0x4001a30	        0x48894520	            mov qword [rbp + 0x20], rax 	       748	deflate.c	FUNCTION_12
0x4001a34	      0xe969ffffff	                           jmp 0x40019a2	       748	deflate.c	FUNCTION_12
deflateCopy	DO,0:ELSE,0:WHILE,0:CALL,13:functions,0:IF,3:SWITCH,0:FOR,0	175
0x4004980	          0x4885f6	                           test rsi, rsi	       357	deflate.c	
0x4004983	      0xb8feffffff	                     mov eax, 0xfffffffe	      1115	deflate.c	FUNCTION_15
0x4004988	            0x7431	                            je 0x40049bb	       357	deflate.c	
0x400498a	      0x48837e4000	               cmp qword [rsi + 0x40], 0	       357	deflate.c	
0x400498f	            0x742a	                            je 0x40049bb	       357	deflate.c	
0x4004991	      0x48837e4800	               cmp qword [rsi + 0x48], 0	       358	deflate.c	
0x4004996	            0x7423	                            je 0x40049bb	       358	deflate.c	
0x4004998	            0x4155	                                push r13	      1105	deflate.c	
0x400499a	            0x4154	                                push r12	      1105	deflate.c	
0x400499c	              0x55	                                push rbp	      1105	deflate.c	
0x400499d	              0x53	                                push rbx	      1105	deflate.c	
0x400499e	        0x4883ec08	                              sub rsp, 8	      1105	deflate.c	
0x40049a2	        0x4c8b6638	            mov r12, qword [rsi + 0x38] 	       360	deflate.c	FUNCTION_2
0x40049a6	          0x4d85e4	                           test r12, r12	       361	deflate.c	FUNCTION_2	IF_1
0x40049a9	            0x7406	                            je 0x40049b1	       361	deflate.c	FUNCTION_2	IF_1
0x40049ab	        0x493b3424	                    cmp rsi, qword [r12]	       361	deflate.c	FUNCTION_2	IF_1
0x40049af	            0x740f	                            je 0x40049c0	       361	deflate.c	FUNCTION_2	IF_1
0x40049b1	        0x4883c408	                              add rsp, 8	      1155	deflate.c	FUNCTION_15
0x40049b5	              0x5b	                                 pop rbx	      1155	deflate.c	FUNCTION_15
0x40049b6	              0x5d	                                 pop rbp	      1155	deflate.c	FUNCTION_15
0x40049b7	            0x415c	                                 pop r12	      1155	deflate.c	FUNCTION_15
0x40049b9	            0x415d	                                 pop r13	      1155	deflate.c	FUNCTION_15
0x40049bb	            0xf3c3	                                     ret	      1155	deflate.c	FUNCTION_15
0x40049bd	           0xf1f00	                         nop dword [rax]	      1155	deflate.c	FUNCTION_15
0x40049c0	      0x418b442408	                mov eax, dword [r12 + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x40049c5	      0xba01000000	                              mov edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40049ca	          0x8d48d6	                   lea ecx, [rax - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x40049cd	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x40049d0	            0x7717	                            ja 0x40049e9	       361	deflate.c	FUNCTION_2	IF_1
0x40049d2	    0x48ba01800088	          movabs rdx, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x40049dc	          0x48d3ea	                             shr rdx, cl	       361	deflate.c	FUNCTION_2	IF_1
0x40049df	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40049e2	        0x4883f201	                              xor rdx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40049e6	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40049e9	          0x83f871	                           cmp eax, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x40049ec	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x40049ef	      0x3d9a020000	                          cmp eax, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x40049f4	           0xf95c0	                                setne al	       369	deflate.c	FUNCTION_2	IF_2
0x40049f7	            0x84c1	                             test cl, al	       369	deflate.c	FUNCTION_2	IF_2
0x40049f9	            0x7409	                            je 0x4004a04	       369	deflate.c	FUNCTION_2	IF_2
0x40049fb	            0x84d2	                             test dl, dl	       369	deflate.c	FUNCTION_2	IF_2
0x40049fd	      0xb8feffffff	                     mov eax, 0xfffffffe	      1115	deflate.c	FUNCTION_15
0x4004a02	            0x75ad	                           jne 0x40049b1	       369	deflate.c	FUNCTION_2	IF_2
0x4004a04	          0x4885ff	                           test rdi, rdi	      1114	deflate.c	FUNCTION_15
0x4004a07	     0xf841b020000	                            je 0x4004c28	      1114	deflate.c	FUNCTION_15
0x4004a0d	          0x488b06	                    mov rax, qword [rsi]	        53	string3.h	FUNCTION_25	CALL_3
0x4004a10	          0x4889fd	                            mov rbp, rdi	        53	string3.h	FUNCTION_25	CALL_3
0x4004a13	          0x488907	                    mov qword [rdi], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a16	        0x488b4608	                mov rax, qword [rsi + 8]	        53	string3.h	FUNCTION_25	CALL_3
0x4004a1a	        0x48894708	                mov qword [rdi + 8], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a1e	        0x488b4610	            mov rax, qword [rsi + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a22	        0x48894710	             mov qword [rdi + 0x10], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a26	        0x488b4618	            mov rax, qword [rsi + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a2a	        0x48894718	             mov qword [rdi + 0x18], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a2e	        0x488b4620	            mov rax, qword [rsi + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a32	        0x48894720	             mov qword [rdi + 0x20], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a36	        0x488b4628	            mov rax, qword [rsi + 0x28] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a3a	        0x48894728	             mov qword [rdi + 0x28], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a3e	        0x488b4630	            mov rax, qword [rsi + 0x30] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a42	        0x48894730	             mov qword [rdi + 0x30], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a46	        0x488b4638	            mov rax, qword [rsi + 0x38] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a4a	        0x48894738	             mov qword [rdi + 0x38], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a4e	        0x488b4640	            mov rax, qword [rsi + 0x40] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a52	        0x48894740	             mov qword [rdi + 0x40], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004a56	        0x488b5648	            mov rdx, qword [rsi + 0x48] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a5a	        0x48895748	             mov qword [rdi + 0x48], rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4004a5e	        0x488b7e50	            mov rdi, qword [rsi + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a62	        0x48897d50	            mov qword [rbp + 0x50], rdi 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a66	        0x488b5658	            mov rdx, qword [rsi + 0x58] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a6a	        0x48895558	            mov qword [rbp + 0x58], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a6e	        0x488b5660	            mov rdx, qword [rsi + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a72	        0x48895560	            mov qword [rbp + 0x60], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a76	        0x488b5668	            mov rdx, qword [rsi + 0x68] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a7a	      0xbe01000000	                              mov esi, 1	      1122	deflate.c	FUNCTION_15
0x4004a7f	        0x48895568	            mov qword [rbp + 0x68], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x4004a83	      0xba40170000	                         mov edx, 0x1740	      1122	deflate.c	FUNCTION_15
0x4004a88	            0xffd0	                                call rax	      1122	deflate.c	FUNCTION_15
0x4004a8a	          0x4885c0	                           test rax, rax	      1123	deflate.c	FUNCTION_15
0x4004a8d	          0x4889c3	                            mov rbx, rax	      1122	deflate.c	FUNCTION_15
0x4004a90	     0xf84a2010000	                            je 0x4004c38	      1123	deflate.c	FUNCTION_15
0x4004a96	        0x48894538	            mov qword [rbp + 0x38], rax 	      1124	deflate.c	FUNCTION_15	CALL_2
0x4004a9a	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_25	CALL_3
0x4004a9e	        0x488d7b08	                      lea rdi, [rbx + 8]	        53	string3.h	FUNCTION_25	CALL_3
0x4004aa2	          0x4889d9	                            mov rcx, rbx	        53	string3.h	FUNCTION_25	CALL_3
0x4004aa5	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_25	CALL_3
0x4004aa8	      0xba02000000	                              mov edx, 2	      1128	deflate.c	FUNCTION_15
0x4004aad	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_25	CALL_3
0x4004ab1	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4004ab4	    0x498b84243817	          mov rax, qword [r12 + 0x1738] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004abc	          0x4829f9	                            sub rcx, rdi	        53	string3.h	FUNCTION_25	CALL_3
0x4004abf	          0x4829ce	                            sub rsi, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4004ac2	    0x81c140170000	                         add ecx, 0x1740	        53	string3.h	FUNCTION_25	CALL_3
0x4004ac8	          0xc1e903	                              shr ecx, 3	        53	string3.h	FUNCTION_25	CALL_3
0x4004acb	    0x488983381700	          mov qword [rbx + 0x1738], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4004ad2	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_25	CALL_3
0x4004ad5	          0x48892b	                    mov qword [rbx], rbp	      1126	deflate.c	FUNCTION_15	CALL_3
0x4004ad8	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      1128	deflate.c	FUNCTION_15
0x4004adb	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1128	deflate.c	FUNCTION_15
0x4004adf	          0xff5540	                 call qword [rbp + 0x40]	      1128	deflate.c	FUNCTION_15
0x4004ae2	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x4004ae5	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x4004ae9	      0xba02000000	                              mov edx, 2	      1129	deflate.c	FUNCTION_15	CALL_4
0x4004aee	        0x48894360	             mov qword [rbx + 0x60], rax	      1128	deflate.c	FUNCTION_15
0x4004af2	          0xff5540	                 call qword [rbp + 0x40]	      1129	deflate.c	FUNCTION_15	CALL_4
0x4004af5	    0x8bb384000000	            mov esi, dword [rbx + 0x84] 	      1130	deflate.c	FUNCTION_15
0x4004afb	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1130	deflate.c	FUNCTION_15
0x4004aff	      0xba02000000	                              mov edx, 2	      1130	deflate.c	FUNCTION_15
0x4004b04	        0x48894370	             mov qword [rbx + 0x70], rax	      1129	deflate.c	FUNCTION_15	CALL_4
0x4004b08	          0xff5540	                 call qword [rbp + 0x40]	      1130	deflate.c	FUNCTION_15
0x4004b0b	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1131	deflate.c	FUNCTION_15
0x4004b0f	        0x48894378	             mov qword [rbx + 0x78], rax	      1130	deflate.c	FUNCTION_15
0x4004b13	      0xba04000000	                              mov edx, 4	      1131	deflate.c	FUNCTION_15
0x4004b18	    0x8bb308170000	          mov esi, dword [rbx + 0x1708] 	      1131	deflate.c	FUNCTION_15
0x4004b1e	          0xff5540	                 call qword [rbp + 0x40]	      1131	deflate.c	FUNCTION_15
0x4004b21	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b25	          0x4989c5	                            mov r13, rax	      1131	deflate.c	FUNCTION_15
0x4004b28	        0x48894310	             mov qword [rbx + 0x10], rax	      1132	deflate.c	FUNCTION_15	CALL_5
0x4004b2c	          0x4885ff	                           test rdi, rdi	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b2f	     0xf84db000000	                            je 0x4004c10	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b35	      0x48837b7000	               cmp qword [rbx + 0x70], 0	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b3a	     0xf84d0000000	                            je 0x4004c10	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b40	      0x48837b7800	               cmp qword [rbx + 0x78], 0	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b45	     0xf84c5000000	                            je 0x4004c10	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b4b	          0x4885c0	                           test rax, rax	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b4e	     0xf84bc000000	                            je 0x4004c10	      1134	deflate.c	FUNCTION_15	CALL_7
0x4004b54	          0x8b4350	            mov eax, dword [rbx + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b57	      0x498b742460	            mov rsi, qword [r12 + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b5c	          0x8d1400	                    lea edx, [rax + rax]	        53	string3.h	FUNCTION_25	CALL_3
0x4004b5f	      0xe800000000	                          call 0x4004b64	        53	string3.h	FUNCTION_25	CALL_3
0x4004b64	          0x8b5350	            mov edx, dword [rbx + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b67	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b6b	      0x498b742470	            mov rsi, qword [r12 + 0x70] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b70	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4004b73	      0xe800000000	                          call 0x4004b78	        53	string3.h	FUNCTION_25	CALL_3
0x4004b78	    0x8b9384000000	            mov edx, dword [rbx + 0x84] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b7e	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b82	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b87	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4004b8a	      0xe800000000	                          call 0x4004b8f	        53	string3.h	FUNCTION_25	CALL_3
0x4004b8f	          0x8b5318	            mov edx, dword [rbx + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b92	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b96	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x4004b9b	      0xe800000000	                          call 0x4004ba0	        53	string3.h	FUNCTION_25	CALL_3
0x4004ba0	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1145	deflate.c	FUNCTION_15	CALL_11
0x4004ba4	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1146	deflate.c	FUNCTION_15	CALL_12
0x4004baa	          0x4889ca	                            mov rdx, rcx	      1145	deflate.c	FUNCTION_15	CALL_11
0x4004bad	      0x492b542410	             sub rdx, qword [r12 + 0x10]	      1145	deflate.c	FUNCTION_15	CALL_11
0x4004bb2	      0x4903542420	             add rdx, qword [r12 + 0x20]	      1145	deflate.c	FUNCTION_15	CALL_11
0x4004bb7	        0x48895320	             mov qword [rbx + 0x20], rdx	      1145	deflate.c	FUNCTION_15	CALL_11
0x4004bbb	            0x89c2	                            mov edx, eax	      1146	deflate.c	FUNCTION_15	CALL_12
0x4004bbd	        0x488d0440	                  lea rax, [rax + rax*2]	      1147	deflate.c	FUNCTION_15	CALL_13
0x4004bc1	            0xd1ea	                              shr edx, 1	      1146	deflate.c	FUNCTION_15	CALL_12
0x4004bc3	          0x4801c8	                            add rax, rcx	      1147	deflate.c	FUNCTION_15	CALL_13
0x4004bc6	      0x498d545500	                  lea rdx, [r13 + rdx*2]	      1146	deflate.c	FUNCTION_15	CALL_12
0x4004bcb	    0x488983001700	          mov qword [rbx + 0x1700], rax 	      1147	deflate.c	FUNCTION_15	CALL_13
0x4004bd2	    0x488d83d40000	                   lea rax, [rbx + 0xd4]	      1149	deflate.c	FUNCTION_15
0x4004bd9	    0x488993101700	          mov qword [rbx + 0x1710], rdx 	      1146	deflate.c	FUNCTION_15	CALL_12
0x4004be0	    0x488983580b00	            mov qword [rbx + 0xb58], rax	      1149	deflate.c	FUNCTION_15
0x4004be7	    0x488d83c80900	                  lea rax, [rbx + 0x9c8]	      1150	deflate.c	FUNCTION_15
0x4004bee	    0x488983700b00	            mov qword [rbx + 0xb70], rax	      1150	deflate.c	FUNCTION_15
0x4004bf5	    0x488d83bc0a00	                  lea rax, [rbx + 0xabc]	      1151	deflate.c	FUNCTION_15
0x4004bfc	    0x488983880b00	            mov qword [rbx + 0xb88], rax	      1151	deflate.c	FUNCTION_15
0x4004c03	            0x31c0	                            xor eax, eax	      1153	deflate.c	FUNCTION_15
0x4004c05	      0xe9a7fdffff	                           jmp 0x40049b1	      1153	deflate.c	FUNCTION_15
0x4004c0a	    0x660f1f440000	                    nop word [rax + rax]	      1153	deflate.c	FUNCTION_15
0x4004c10	          0x4889ef	                            mov rdi, rbp	      1136	deflate.c	FUNCTION_15
0x4004c13	      0xe800000000	                          call 0x4004c18	      1136	deflate.c	FUNCTION_15
0x4004c18	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1137	deflate.c	FUNCTION_15
0x4004c1d	      0xe98ffdffff	                           jmp 0x40049b1	      1137	deflate.c	FUNCTION_15
0x4004c22	    0x660f1f440000	                    nop word [rax + rax]	      1137	deflate.c	FUNCTION_15
0x4004c28	      0xb8feffffff	                     mov eax, 0xfffffffe	      1115	deflate.c	FUNCTION_15
0x4004c2d	      0xe97ffdffff	                           jmp 0x40049b1	      1115	deflate.c	FUNCTION_15
0x4004c32	    0x660f1f440000	                    nop word [rax + rax]	      1115	deflate.c	FUNCTION_15
0x4004c38	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1123	deflate.c	FUNCTION_15
0x4004c3d	      0xe96ffdffff	                           jmp 0x40049b1	      1123	deflate.c	FUNCTION_15
fill_window	DO,1:ELSE,2:WHILE,1:CALL,9:functions,0:IF,12:SWITCH,0:FOR,0	255
0x4000270	            0x4157	                                push r15	      1484	deflate.c	
0x4000272	            0x4156	                                push r14	      1484	deflate.c	
0x4000274	          0x4531f6	                          xor r14d, r14d	       212	deflate.c	FUNCTION_1
0x4000277	            0x4155	                                push r13	      1484	deflate.c	
0x4000279	            0x4154	                                push r12	      1484	deflate.c	
0x400027b	              0x55	                                push rbp	      1484	deflate.c	
0x400027c	              0x53	                                push rbx	      1484	deflate.c	
0x400027d	          0x4889fb	                            mov rbx, rdi	      1484	deflate.c	
0x4000280	        0x4883ec18	                           sub rsp, 0x18	      1484	deflate.c	
0x4000284	          0x8b6f50	            mov ebp, dword [rdi + 0x50] 	      1487	deflate.c	
0x4000287	    0x8bbfb4000000	            mov edi, dword [rdi + 0xb4] 	      1487	deflate.c	
0x400028d	    0x8db5fafeffff	                  lea esi, [rbp - 0x106]	      1487	deflate.c	
0x4000293	            0x89e8	                            mov eax, ebp	      1487	deflate.c	
0x4000295	        0x89742404	                mov dword [rsp + 4], esi	      1487	deflate.c	
0x4000299	            0x89ee	                            mov esi, ebp	        53	string3.h	FUNCTION_25	CALL_3
0x400029b	      0x4889742408	                mov qword [rsp + 8], rsi	        53	string3.h	FUNCTION_25	CALL_3
0x40002a0	    0x8bb3ac000000	            mov esi, dword [rbx + 0xac] 	      1492	deflate.c	FUNCTION_19
0x40002a6	        0x448b7b68	           mov r15d, dword [rbx + 0x68] 	      1492	deflate.c	FUNCTION_19
0x40002aa	         0x3442404	                add eax, dword [rsp + 4]	      1510	deflate.c	FUNCTION_19	DO_1
0x40002ae	          0x4129ff	                           sub r15d, edi	      1492	deflate.c	FUNCTION_19
0x40002b1	          0x4129f7	                           sub r15d, esi	      1492	deflate.c	FUNCTION_19
0x40002b4	            0x39c6	                            cmp esi, eax	      1510	deflate.c	FUNCTION_19	DO_1
0x40002b6	     0xf8364010000	                           jae 0x4000420	      1510	deflate.c	FUNCTION_19	DO_1
0x40002bc	          0x4c8b23	                    mov r12, qword [rbx]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40002bf	      0x458b6c2408	               mov r13d, dword [r12 + 8]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40002c4	          0x4585ed	                         test r13d, r13d	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40002c7	     0xf8423020000	                            je 0x40004f0	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40002cd	          0x4539ef	                          cmp r15d, r13d	      1171	deflate.c	
0x40002d0	    0x8bbbb4000000	            mov edi, dword [rbx + 0xb4] 	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40002d6	     0xf83e4000000	                           jae 0x40003c0	      1171	deflate.c	
0x40002dc	          0x4585ff	                         test r15d, r15d	      1172	deflate.c	
0x40002df	     0xf8551030000	                           jne 0x4000636	      1172	deflate.c	
0x40002e5	            0x31c9	                            xor ecx, ecx	      1172	deflate.c	
0x40002e7	    0x8b932c170000	          mov edx, dword [rbx + 0x172c] 	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x40002ed	             0x1cf	                            add edi, ecx	      1535	deflate.c	FUNCTION_19	DO_1
0x40002ef	    0x89bbb4000000	             mov dword [rbx + 0xb4], edi	      1535	deflate.c	FUNCTION_19	DO_1
0x40002f5	          0x8d0417	                    lea eax, [rdi + rdx]	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x40002f8	          0x83f802	                              cmp eax, 2	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x40002fb	     0xf869b000000	                           jbe 0x400039c	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4000301	    0x8bb3ac000000	            mov esi, dword [rbx + 0xac] 	      1539	deflate.c	FUNCTION_19	DO_1
0x4000307	        0x4c8b5b60	            mov r11, qword [rbx + 0x60] 	      1540	deflate.c	FUNCTION_19	DO_1
0x400030b	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1541	deflate.c	FUNCTION_19	DO_1
0x4000311	    0x448bbb8c0000	           mov r15d, dword [rbx + 0x8c] 	      1541	deflate.c	FUNCTION_19	DO_1
0x4000318	            0x29d6	                            sub esi, edx	      1539	deflate.c	FUNCTION_19	DO_1
0x400031a	            0x89f0	                            mov eax, esi	      1540	deflate.c	FUNCTION_19	DO_1
0x400031c	      0x450fb60403	             movzx r8d, byte [r11 + rax]	      1540	deflate.c	FUNCTION_19	DO_1
0x4000321	          0x8d4601	                      lea eax, [rsi + 1]	      1541	deflate.c	FUNCTION_19	DO_1
0x4000324	    0x448983800000	             mov dword [rbx + 0x80], r8d	      1540	deflate.c	FUNCTION_19	DO_1
0x400032b	      0x410fb60403	             movzx eax, byte [r11 + rax]	      1541	deflate.c	FUNCTION_19	DO_1
0x4000330	          0x41d3e0	                             shl r8d, cl	      1541	deflate.c	FUNCTION_19	DO_1
0x4000333	          0x4431c0	                            xor eax, r8d	      1541	deflate.c	FUNCTION_19	DO_1
0x4000336	          0x4421f8	                           and eax, r15d	      1541	deflate.c	FUNCTION_19	DO_1
0x4000339	    0x898380000000	             mov dword [rbx + 0x80], eax	      1541	deflate.c	FUNCTION_19	DO_1
0x400033f	            0xeb57	                           jmp 0x4000398	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000341	     0xf1f80000000	                         nop dword [rax]	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000348	        0x448d4602	                      lea r8d, [rsi + 2]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x400034c	            0xd3e0	                             shl eax, cl	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x400034e	          0x4189f2	                           mov r10d, esi	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000351	        0x44235358	            and r10d, dword [rbx + 0x58]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000355	          0x83ea01	                              sub edx, 1	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000358	      0x470fb60403	              movzx r8d, byte [r11 + r8]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x400035d	          0x4431c0	                            xor eax, r8d	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000360	        0x4c8b4378	              mov r8, qword [rbx + 0x78]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000364	          0x4421f8	                           and eax, r15d	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000367	          0x4189c1	                            mov r9d, eax	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400036a	    0x898380000000	             mov dword [rbx + 0x80], eax	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000370	        0x4f8d0448	                     lea r8, [r8 + r9*2]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000374	        0x4c8b4b70	              mov r9, qword [rbx + 0x70]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000378	        0x450fb720	                   movzx r12d, word [r8]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400037c	      0x6647892451	             mov word [r9 + r10*2], r12w	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000381	        0x66418930	                       mov word [r8], si	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000385	        0x448d0417	                    lea r8d, [rdi + rdx]	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000389	          0x83c601	                              add esi, 1	      1551	deflate.c	FUNCTION_19	DO_1	IF_6
0x400038c	    0x89932c170000	          mov dword [rbx + 0x172c], edx 	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000392	        0x4183f802	                              cmp r8d, 2	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000396	            0x7604	                           jbe 0x400039c	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000398	            0x85d2	                           test edx, edx	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x400039a	            0x75ac	                           jne 0x4000348	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x400039c	    0x81ff05010000	                          cmp edi, 0x105	      1561	deflate.c	FUNCTION_19	DO_1
0x40003a2	     0xf8748010000	                            ja 0x40004f0	      1561	deflate.c	FUNCTION_19	DO_1
0x40003a8	          0x488b03	                    mov rax, qword [rbx]	      1561	deflate.c	FUNCTION_19	DO_1
0x40003ab	        0x448b4008	                mov r8d, dword [rax + 8]	      1561	deflate.c	FUNCTION_19	DO_1
0x40003af	          0x4585c0	                           test r8d, r8d	      1561	deflate.c	FUNCTION_19	DO_1
0x40003b2	     0xf8438010000	                            je 0x40004f0	      1561	deflate.c	FUNCTION_19	DO_1
0x40003b8	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1561	deflate.c	FUNCTION_19	DO_1
0x40003bb	      0xe9e0feffff	                           jmp 0x40002a0	      1561	deflate.c	FUNCTION_19	DO_1
0x40003c0	            0x31c0	                            xor eax, eax	      1171	deflate.c	
0x40003c2	          0x4801fe	                            add rsi, rdi	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40003c5	        0x48037360	             add rsi, qword [rbx + 0x60]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40003c9	          0x4589ef	                          mov r15d, r13d	      1176	deflate.c	IF_22
0x40003cc	      0x4189442408	                mov dword [r12 + 8], eax	      1174	deflate.c	
0x40003d1	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x40003d4	          0x4989f1	                             mov r9, rsi	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x40003d7	        0x498b3424	                    mov rsi, qword [r12]	        53	string3.h	FUNCTION_25	CALL_3
0x40003db	          0x4c89cf	                             mov rdi, r9	        53	string3.h	FUNCTION_25	CALL_3
0x40003de	      0xe800000000	                          call 0x40003e3	        53	string3.h	FUNCTION_25	CALL_3
0x40003e3	          0x4989c1	                             mov r9, rax	        53	string3.h	FUNCTION_25	CALL_3
0x40003e6	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      1177	deflate.c	
0x40003eb	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1177	deflate.c	
0x40003ee	          0x83f801	                              cmp eax, 1	      1177	deflate.c	
0x40003f1	     0xf8475010000	                            je 0x400056c	      1177	deflate.c	
0x40003f7	          0x83f802	                              cmp eax, 2	      1181	deflate.c	IF_23
0x40003fa	     0xf8486010000	                            je 0x4000586	      1181	deflate.c	IF_23
0x4000400	        0x4d013c24	                    add qword [r12], r15	      1185	deflate.c	ELSE_2	IF_24
0x4000404	      0x4d017c2410	            add qword [r12 + 0x10], r15 	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x4000409	          0x4489e9	                           mov ecx, r13d	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x400040c	    0x8bbbb4000000	            mov edi, dword [rbx + 0xb4] 	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x4000412	      0xe9d0feffff	                           jmp 0x40002e7	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x4000417	    0x660f1f840000	                    nop word [rax + rax]	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x4000420	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1512	deflate.c	FUNCTION_19	DO_1
0x4000424	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	        53	string3.h	FUNCTION_25	CALL_3
0x4000429	            0x89ea	                            mov edx, ebp	        53	string3.h	FUNCTION_25	CALL_3
0x400042b	          0x4429fa	                           sub edx, r15d	        53	string3.h	FUNCTION_25	CALL_3
0x400042e	        0x4a8d342f	                    lea rsi, [rdi + r13]	        53	string3.h	FUNCTION_25	CALL_3
0x4000432	      0xe800000000	                          call 0x4000437	        53	string3.h	FUNCTION_25	CALL_3
0x4000437	    0x8bbb84000000	            mov edi, dword [rbx + 0x84] 	       208	deflate.c	FUNCTION_1
0x400043d	        0x488b4378	            mov rax, qword [rbx + 0x78] 	       209	deflate.c	FUNCTION_1
0x4000441	    0x49c7c0feffff	              mov r8, 0xfffffffffffffffe	       209	deflate.c	FUNCTION_1
0x4000448	    0x8bb3ac000000	            mov esi, dword [rbx + 0xac] 	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x400044e	    0x29abb0000000	             sub dword [rbx + 0xb0], ebp	      1513	deflate.c	FUNCTION_19	DO_1
0x4000454	    0x4c29ab980000	             sub qword [rbx + 0x98], r13	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x400045b	          0x8b5350	            mov edx, dword [rbx + 0x50] 	       206	deflate.c	
0x400045e	          0x4889f9	                            mov rcx, rdi	       208	deflate.c	FUNCTION_1
0x4000461	        0x488d0478	                  lea rax, [rax + rdi*2]	       209	deflate.c	FUNCTION_1
0x4000465	            0x29ee	                            sub esi, ebp	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x4000467	          0x83e901	                              sub ecx, 1	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x400046a	          0x4801c9	                            add rcx, rcx	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x400046d	    0x89b3ac000000	             mov dword [rbx + 0xac], esi	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x4000473	          0x4929c8	                             sub r8, rcx	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x4000476	          0x4901c0	                             add r8, rax	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x4000479	     0xf1f80000000	                         nop dword [rax]	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x4000480	        0x4883e802	                              sub rax, 2	       211	deflate.c	FUNCTION_1
0x4000484	           0xfb738	                   movzx edi, word [rax]	       211	deflate.c	FUNCTION_1
0x4000487	            0x89f9	                            mov ecx, edi	       212	deflate.c	FUNCTION_1
0x4000489	            0x29d1	                            sub ecx, edx	       212	deflate.c	FUNCTION_1
0x400048b	            0x39fa	                            cmp edx, edi	       212	deflate.c	FUNCTION_1
0x400048d	        0x410f47ce	                         cmova ecx, r14d	       212	deflate.c	FUNCTION_1
0x4000491	          0x4c39c0	                             cmp rax, r8	       213	deflate.c	FUNCTION_1
0x4000494	          0x668908	                      mov word [rax], cx	       212	deflate.c	FUNCTION_1
0x4000497	            0x75e7	                           jne 0x4000480	       213	deflate.c	FUNCTION_1
0x4000499	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	       216	deflate.c	FUNCTION_1	DO_1
0x400049d	            0x89d0	                            mov eax, edx	       216	deflate.c	FUNCTION_1	DO_1
0x400049f	    0x49c7c0feffff	              mov r8, 0xfffffffffffffffe	       216	deflate.c	FUNCTION_1	DO_1
0x40004a6	        0x488d0441	                  lea rax, [rcx + rax*2]	       216	deflate.c	FUNCTION_1	DO_1
0x40004aa	          0x8d4aff	                      lea ecx, [rdx - 1]	       216	deflate.c	FUNCTION_1	DO_1
0x40004ad	          0x4801c9	                            add rcx, rcx	       216	deflate.c	FUNCTION_1	DO_1
0x40004b0	          0x4929c8	                             sub r8, rcx	       216	deflate.c	FUNCTION_1	DO_1
0x40004b3	          0x4901c0	                             add r8, rax	       216	deflate.c	FUNCTION_1	DO_1
0x40004b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       216	deflate.c	FUNCTION_1	DO_1
0x40004c0	        0x4883e802	                              sub rax, 2	       218	deflate.c	FUNCTION_1
0x40004c4	           0xfb738	                   movzx edi, word [rax]	       218	deflate.c	FUNCTION_1
0x40004c7	            0x89f9	                            mov ecx, edi	       219	deflate.c	FUNCTION_1
0x40004c9	            0x29d1	                            sub ecx, edx	       219	deflate.c	FUNCTION_1
0x40004cb	            0x39fa	                            cmp edx, edi	       219	deflate.c	FUNCTION_1
0x40004cd	        0x410f47ce	                         cmova ecx, r14d	       219	deflate.c	FUNCTION_1
0x40004d1	          0x4c39c0	                             cmp rax, r8	       223	deflate.c	FUNCTION_1	DO_2
0x40004d4	          0x668908	                      mov word [rax], cx	       219	deflate.c	FUNCTION_1
0x40004d7	            0x75e7	                           jne 0x40004c0	       223	deflate.c	FUNCTION_1	DO_2
0x40004d9	          0x4c8b23	                    mov r12, qword [rbx]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40004dc	          0x4101ef	                           add r15d, ebp	      1517	deflate.c	FUNCTION_19	DO_1	IF_4
0x40004df	      0x458b6c2408	               mov r13d, dword [r12 + 8]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40004e4	          0x4585ed	                         test r13d, r13d	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40004e7	     0xf85e0fdffff	                           jne 0x40002cd	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40004ed	           0xf1f00	                         nop dword [rax]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40004f0	    0x488b8b381700	          mov rcx, qword [rbx + 0x1738] 	      1570	deflate.c	FUNCTION_19	DO_1
0x40004f7	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      1570	deflate.c	FUNCTION_19	DO_1
0x40004fb	          0x4839c1	                            cmp rcx, rax	      1570	deflate.c	FUNCTION_19	DO_1
0x40004fe	            0x735d	                           jae 0x400055d	      1570	deflate.c	FUNCTION_19	DO_1
0x4000500	    0x8bb3ac000000	            mov esi, dword [rbx + 0xac] 	      1571	deflate.c	FUNCTION_19	DO_1
0x4000506	    0x8b93b4000000	            mov edx, dword [rbx + 0xb4] 	      1571	deflate.c	FUNCTION_19	DO_1
0x400050c	          0x4801d6	                            add rsi, rdx	      1571	deflate.c	FUNCTION_19	DO_1
0x400050f	          0x4839f1	                            cmp rcx, rsi	      1574	deflate.c	FUNCTION_19	IF_8
0x4000512	     0xf8388000000	                           jae 0x40005a0	      1574	deflate.c	FUNCTION_19	IF_8
0x4000518	          0x4829f0	                            sub rax, rsi	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x400051b	      0xba02010000	                          mov edx, 0x102	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000520	    0x483d02010000	                          cmp rax, 0x102	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000526	        0x480f46d0	                         cmovbe rdx, rax	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x400052a	          0x4889f0	                            mov rax, rsi	        90	string3.h	FUNCTION_28	CALL_6
0x400052d	        0x48034360	             add rax, qword [rbx + 0x60]	        90	string3.h	FUNCTION_28	CALL_6
0x4000531	          0x83fa08	                              cmp edx, 8	        90	string3.h	FUNCTION_28	CALL_6
0x4000534	     0xf83ac000000	                           jae 0x40005e6	        90	string3.h	FUNCTION_28	CALL_6
0x400053a	          0xf6c204	                              test dl, 4	        90	string3.h	FUNCTION_28	CALL_6
0x400053d	     0xf85d0000000	                           jne 0x4000613	        90	string3.h	FUNCTION_28	CALL_6
0x4000543	            0x85d2	                           test edx, edx	        90	string3.h	FUNCTION_28	CALL_6
0x4000545	            0x740c	                            je 0x4000553	        90	string3.h	FUNCTION_28	CALL_6
0x4000547	          0xf6c202	                              test dl, 2	        90	string3.h	FUNCTION_28	CALL_6
0x400054a	          0xc60000	                       mov byte [rax], 0	        90	string3.h	FUNCTION_28	CALL_6
0x400054d	     0xf85d5000000	                           jne 0x4000628	        90	string3.h	FUNCTION_28	CALL_6
0x4000553	          0x4801f2	                            add rdx, rsi	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000556	    0x488993381700	          mov qword [rbx + 0x1738], rdx 	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x400055d	        0x4883c418	                           add rsp, 0x18	      1599	deflate.c	FUNCTION_19	IF_8
0x4000561	              0x5b	                                 pop rbx	      1599	deflate.c	FUNCTION_19	IF_8
0x4000562	              0x5d	                                 pop rbp	      1599	deflate.c	FUNCTION_19	IF_8
0x4000563	            0x415c	                                 pop r12	      1599	deflate.c	FUNCTION_19	IF_8
0x4000565	            0x415d	                                 pop r13	      1599	deflate.c	FUNCTION_19	IF_8
0x4000567	            0x415e	                                 pop r14	      1599	deflate.c	FUNCTION_19	IF_8
0x4000569	            0x415f	                                 pop r15	      1599	deflate.c	FUNCTION_19	IF_8
0x400056b	              0xc3	                                     ret	      1599	deflate.c	FUNCTION_19	IF_8
0x400056c	      0x498b7c2460	            mov rdi, qword [r12 + 0x60] 	      1178	deflate.c	
0x4000571	          0x4489ea	                           mov edx, r13d	      1178	deflate.c	
0x4000574	          0x4c89ce	                             mov rsi, r9	      1178	deflate.c	
0x4000577	      0xe800000000	                          call 0x400057c	      1178	deflate.c	
0x400057c	      0x4989442460	             mov qword [r12 + 0x60], rax	      1178	deflate.c	
0x4000581	      0xe97afeffff	                           jmp 0x4000400	      1178	deflate.c	
0x4000586	      0x498b7c2460	            mov rdi, qword [r12 + 0x60] 	      1182	deflate.c	IF_23	CALL_39
0x400058b	          0x4489ea	                           mov edx, r13d	      1182	deflate.c	IF_23	CALL_39
0x400058e	          0x4c89ce	                             mov rsi, r9	      1182	deflate.c	IF_23	CALL_39
0x4000591	      0xe800000000	                          call 0x4000596	      1182	deflate.c	IF_23	CALL_39
0x4000596	      0x4989442460	             mov qword [r12 + 0x60], rax	      1182	deflate.c	IF_23	CALL_39
0x400059b	      0xe960feffff	                           jmp 0x4000400	      1182	deflate.c	IF_23	CALL_39
0x40005a0	    0x488d96020100	                  lea rdx, [rsi + 0x102]	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x40005a7	          0x4839d1	                            cmp rcx, rdx	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x40005aa	            0x73b1	                           jae 0x400055d	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x40005ac	          0x4829ce	                            sub rsi, rcx	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005af	          0x4829c8	                            sub rax, rcx	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005b2	          0x4889cf	                            mov rdi, rcx	        90	string3.h	FUNCTION_28	CALL_6
0x40005b5	    0x488dae020100	                  lea rbp, [rsi + 0x102]	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005bc	          0x4839c5	                            cmp rbp, rax	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005bf	        0x480f47e8	                          cmova rbp, rax	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005c3	        0x48037b60	             add rdi, qword [rbx + 0x60]	        90	string3.h	FUNCTION_28	CALL_6
0x40005c7	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_28	CALL_6
0x40005c9	            0x89ea	                            mov edx, ebp	        90	string3.h	FUNCTION_28	CALL_6
0x40005cb	      0xe800000000	                          call 0x40005d0	        90	string3.h	FUNCTION_28	CALL_6
0x40005d0	    0x4801ab381700	          add qword [rbx + 0x1738], rbp 	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005d7	        0x4883c418	                           add rsp, 0x18	      1599	deflate.c	FUNCTION_19	IF_8
0x40005db	              0x5b	                                 pop rbx	      1599	deflate.c	FUNCTION_19	IF_8
0x40005dc	              0x5d	                                 pop rbp	      1599	deflate.c	FUNCTION_19	IF_8
0x40005dd	            0x415c	                                 pop r12	      1599	deflate.c	FUNCTION_19	IF_8
0x40005df	            0x415d	                                 pop r13	      1599	deflate.c	FUNCTION_19	IF_8
0x40005e1	            0x415e	                                 pop r14	      1599	deflate.c	FUNCTION_19	IF_8
0x40005e3	            0x415f	                                 pop r15	      1599	deflate.c	FUNCTION_19	IF_8
0x40005e5	              0xc3	                                     ret	      1599	deflate.c	FUNCTION_19	IF_8
0x40005e6	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_28	CALL_6
0x40005ea	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_28	CALL_6
0x40005ec	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_28	CALL_6
0x40005f3	    0x48c74408f800	            mov qword [rax + rcx - 8], 0	        90	string3.h	FUNCTION_28	CALL_6
0x40005fc	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_28	CALL_6
0x4000600	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_28	CALL_6
0x4000603	          0x8d0c02	                    lea ecx, [rdx + rax]	        90	string3.h	FUNCTION_28	CALL_6
0x4000606	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_28	CALL_6
0x4000608	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_28	CALL_6
0x400060b	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_28	CALL_6
0x400060e	      0xe940ffffff	                           jmp 0x4000553	        90	string3.h	FUNCTION_28	CALL_6
0x4000613	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_28	CALL_6
0x4000615	    0xc70000000000	                      mov dword [rax], 0	        90	string3.h	FUNCTION_28	CALL_6
0x400061b	    0xc74408fc0000	            mov dword [rax + rcx - 4], 0	        90	string3.h	FUNCTION_28	CALL_6
0x4000623	      0xe92bffffff	                           jmp 0x4000553	        90	string3.h	FUNCTION_28	CALL_6
0x4000628	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_28	CALL_6
0x400062a	            0x31ff	                            xor edi, edi	        90	string3.h	FUNCTION_28	CALL_6
0x400062c	      0x66897c08fe	            mov word [rax + rcx - 2], di	        90	string3.h	FUNCTION_28	CALL_6
0x4000631	      0xe91dffffff	                           jmp 0x4000553	        90	string3.h	FUNCTION_28	CALL_6
0x4000636	          0x4489e8	                           mov eax, r13d	        90	string3.h	FUNCTION_28	CALL_6
0x4000639	          0x4589fd	                          mov r13d, r15d	      1172	deflate.c	
0x400063c	          0x4429f8	                           sub eax, r15d	      1172	deflate.c	
0x400063f	      0xe97efdffff	                           jmp 0x40003c2	      1172	deflate.c	
deflate	DO,2:ELSE,7:WHILE,1:CALL,62:functions,0:IF,49:SWITCH,0:FOR,0	1493
0x4002530	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x4002533	      0xb8feffffff	                     mov eax, 0xfffffffe	       771	deflate.c	FUNCTION_13
0x4002538	            0x7438	                            je 0x4002572	       357	deflate.c	
0x400253a	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x400253f	            0x7431	                            je 0x4002572	       357	deflate.c	
0x4002541	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x4002546	            0x742a	                            je 0x4002572	       358	deflate.c	
0x4002548	            0x4157	                                push r15	       766	deflate.c	
0x400254a	            0x4156	                                push r14	       766	deflate.c	
0x400254c	            0x4155	                                push r13	       766	deflate.c	
0x400254e	            0x4154	                                push r12	       766	deflate.c	
0x4002550	              0x55	                                push rbp	       766	deflate.c	
0x4002551	              0x53	                                push rbx	       766	deflate.c	
0x4002552	        0x4883ec28	                           sub rsp, 0x28	       766	deflate.c	
0x4002556	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	       360	deflate.c	FUNCTION_2
0x400255a	          0x4885db	                           test rbx, rbx	       361	deflate.c	FUNCTION_2	IF_1
0x400255d	            0x7405	                            je 0x4002564	       361	deflate.c	FUNCTION_2	IF_1
0x400255f	          0x483b3b	                    cmp rdi, qword [rbx]	       361	deflate.c	FUNCTION_2	IF_1
0x4002562	            0x7414	                            je 0x4002578	       361	deflate.c	FUNCTION_2	IF_1
0x4002564	        0x4883c428	                           add rsp, 0x28	      1073	deflate.c	FUNCTION_13
0x4002568	              0x5b	                                 pop rbx	      1073	deflate.c	FUNCTION_13
0x4002569	              0x5d	                                 pop rbp	      1073	deflate.c	FUNCTION_13
0x400256a	            0x415c	                                 pop r12	      1073	deflate.c	FUNCTION_13
0x400256c	            0x415d	                                 pop r13	      1073	deflate.c	FUNCTION_13
0x400256e	            0x415e	                                 pop r14	      1073	deflate.c	FUNCTION_13
0x4002570	            0x415f	                                 pop r15	      1073	deflate.c	FUNCTION_13
0x4002572	            0xf3c3	                                     ret	      1073	deflate.c	FUNCTION_13
0x4002574	         0xf1f4000	                         nop dword [rax]	      1073	deflate.c	FUNCTION_13
0x4002578	          0x8b5308	                mov edx, dword [rbx + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x400257b	    0x41b801000000	                              mov r8d, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002581	          0x8d4ad6	                   lea ecx, [rdx - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x4002584	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x4002587	            0x771c	                            ja 0x40025a5	       361	deflate.c	FUNCTION_2	IF_1
0x4002589	    0x48b801800088	          movabs rax, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x4002593	          0x48d3e8	                             shr rax, cl	       361	deflate.c	FUNCTION_2	IF_1
0x4002596	          0x4989c0	                             mov r8, rax	       361	deflate.c	FUNCTION_2	IF_1
0x4002599	        0x4183e001	                              and r8d, 1	       361	deflate.c	FUNCTION_2	IF_1
0x400259d	        0x4983f001	                               xor r8, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40025a1	        0x4183e001	                              and r8d, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40025a5	    0x81fa9a020000	                          cmp edx, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x40025ab	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x40025ae	          0x83fa71	                           cmp edx, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x40025b1	           0xf95c0	                                setne al	       369	deflate.c	FUNCTION_2	IF_2
0x40025b4	            0x84c1	                             test cl, al	       369	deflate.c	FUNCTION_2	IF_2
0x40025b6	            0x740a	                            je 0x40025c2	       369	deflate.c	FUNCTION_2	IF_2
0x40025b8	          0x4584c0	                           test r8b, r8b	       369	deflate.c	FUNCTION_2	IF_2
0x40025bb	      0xb8feffffff	                     mov eax, 0xfffffffe	       771	deflate.c	FUNCTION_13
0x40025c0	            0x75a2	                           jne 0x4002564	       369	deflate.c	FUNCTION_2	IF_2
0x40025c2	          0x83fe05	                              cmp esi, 5	       770	deflate.c	FUNCTION_13
0x40025c5	     0xf87ba120000	                            ja 0x4003885	       770	deflate.c	FUNCTION_13
0x40025cb	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       775	deflate.c	FUNCTION_13	IF_1
0x40025d0	     0xf84d2120000	                            je 0x40038a8	       775	deflate.c	FUNCTION_13	IF_1
0x40025d6	          0x8b4708	                mov eax, dword [rdi + 8]	       776	deflate.c	FUNCTION_13	IF_1
0x40025d9	            0x85c0	                           test eax, eax	       775	deflate.c	FUNCTION_13	IF_1
0x40025db	            0x740a	                            je 0x40025e7	       775	deflate.c	FUNCTION_13	IF_1
0x40025dd	        0x48833f00	                      cmp qword [rdi], 0	       776	deflate.c	FUNCTION_13	IF_1
0x40025e1	     0xf84c1120000	                            je 0x40038a8	       776	deflate.c	FUNCTION_13	IF_1
0x40025e7	          0x83fe04	                              cmp esi, 4	       777	deflate.c	FUNCTION_13
0x40025ea	           0xf95c1	                                setne cl	       777	deflate.c	FUNCTION_13
0x40025ed	    0x81fa9a020000	                          cmp edx, 0x29a	       777	deflate.c	FUNCTION_13
0x40025f3	            0x7508	                           jne 0x40025fd	       777	deflate.c	FUNCTION_13
0x40025f5	            0x84c9	                             test cl, cl	       777	deflate.c	FUNCTION_13
0x40025f7	     0xf85ab120000	                           jne 0x40038a8	       777	deflate.c	FUNCTION_13
0x40025fd	        0x448b6f20	           mov r13d, dword [rdi + 0x20] 	       780	deflate.c	FUNCTION_13	IF_2
0x4002601	          0x4585ed	                         test r13d, r13d	       780	deflate.c	FUNCTION_13	IF_2
0x4002604	     0xf8485120000	                            je 0x400388f	       780	deflate.c	FUNCTION_13	IF_2
0x400260a	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       786	deflate.c	FUNCTION_13
0x400260f	          0x4189f2	                           mov r10d, esi	       786	deflate.c	FUNCTION_13
0x4002612	        0x89742414	             mov dword [rsp + 0x14], esi	       786	deflate.c	FUNCTION_13
0x4002616	          0x4889fd	                            mov rbp, rdi	       786	deflate.c	FUNCTION_13
0x4002619	          0x8b734c	            mov esi, dword [rbx + 0x4c] 	       782	deflate.c	FUNCTION_13	IF_2	CALL_2
0x400261c	        0x4489534c	            mov dword [rbx + 0x4c], r10d	       783	deflate.c	FUNCTION_13	IF_2
0x4002620	     0xf85d2030000	                           jne 0x40029f8	       786	deflate.c	FUNCTION_13
0x4002626	            0x85c0	                           test eax, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4002628	     0xf85a2030000	                           jne 0x40029d0	       803	deflate.c	FUNCTION_13	IF_4
0x400262e	        0x4183fa05	                             cmp r10d, 5	       803	deflate.c	FUNCTION_13	IF_4
0x4002632	        0x478d0412	                    lea r8d, [r10 + r10]	       803	deflate.c	FUNCTION_13	IF_4
0x4002636	          0x8d3c36	                    lea edi, [rsi + rsi]	       803	deflate.c	FUNCTION_13	IF_4
0x4002639	           0xf94c0	                                 sete al	       803	deflate.c	FUNCTION_13	IF_4
0x400263c	           0xfb6c0	                           movzx eax, al	       803	deflate.c	FUNCTION_13	IF_4
0x400263f	          0x8d04c0	                  lea eax, [rax + rax*8]	       803	deflate.c	FUNCTION_13	IF_4
0x4002642	          0x4129c0	                            sub r8d, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4002645	            0x31c0	                            xor eax, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4002647	          0x83fe05	                              cmp esi, 5	       803	deflate.c	FUNCTION_13	IF_4
0x400264a	           0xf9dc0	                                setge al	       803	deflate.c	FUNCTION_13	IF_4
0x400264d	          0x8d04c0	                  lea eax, [rax + rax*8]	       803	deflate.c	FUNCTION_13	IF_4
0x4002650	            0x29c7	                            sub edi, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4002652	          0x4139f8	                            cmp r8d, edi	       803	deflate.c	FUNCTION_13	IF_4
0x4002655	            0x7f08	                            jg 0x400265f	       803	deflate.c	FUNCTION_13	IF_4
0x4002657	            0x84c9	                             test cl, cl	       803	deflate.c	FUNCTION_13	IF_4
0x4002659	     0xf857d030000	                           jne 0x40029dc	       803	deflate.c	FUNCTION_13	IF_4
0x400265f	    0x81fa9a020000	                          cmp edx, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002665	     0xf84c5030000	                            je 0x4002a30	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x400266b	          0x83fa2a	                           cmp edx, 0x2a	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x400266e	     0xf84cc030000	                            je 0x4002a40	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x4002674	          0x83fa39	                           cmp edx, 0x39	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x4002677	     0xf84930a0000	                            je 0x4003110	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x400267d	          0x83fa45	                           cmp edx, 0x45	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002680	     0xf847a050000	                            je 0x4002c00	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002686	          0x83fa49	                           cmp edx, 0x49	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002689	     0xf84c90f0000	                            je 0x4003658	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x400268f	          0x83fa5b	                           cmp edx, 0x5b	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002692	     0xf8442120000	                            je 0x40038da	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002698	          0x83fa67	                           cmp edx, 0x67	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x400269b	     0xf8442120000	                            je 0x40038e3	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x40026a1	        0x448b6508	               mov r12d, dword [rbp + 8]	       996	deflate.c	FUNCTION_13
0x40026a5	          0x4585e4	                         test r12d, r12d	       996	deflate.c	FUNCTION_13
0x40026a8	            0x7526	                           jne 0x40026d0	       996	deflate.c	FUNCTION_13
0x40026aa	    0x448b9bb40000	           mov r11d, dword [rbx + 0xb4] 	       996	deflate.c	FUNCTION_13
0x40026b1	          0x4585db	                         test r11d, r11d	       996	deflate.c	FUNCTION_13
0x40026b4	            0x751a	                           jne 0x40026d0	       996	deflate.c	FUNCTION_13
0x40026b6	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	       996	deflate.c	FUNCTION_13
0x40026bb	          0x4585d2	                         test r10d, r10d	       996	deflate.c	FUNCTION_13
0x40026be	     0xf8404030000	                            je 0x40029c8	       996	deflate.c	FUNCTION_13
0x40026c4	    0x817b089a0200	              cmp dword [rbx + 8], 0x29a	       997	deflate.c	FUNCTION_13
0x40026cb	            0x745d	                            je 0x400272a	       997	deflate.c	FUNCTION_13
0x40026cd	           0xf1f00	                         nop dword [rax]	       997	deflate.c	FUNCTION_13
0x40026d0	    0x486383c40000	         movsxd rax, dword [rbx + 0xc4] 	      1000	deflate.c	FUNCTION_13	IF_36
0x40026d7	            0x85c0	                           test eax, eax	      1000	deflate.c	FUNCTION_13	IF_36
0x40026d9	     0xf8409050000	                            je 0x4002be8	      1000	deflate.c	FUNCTION_13	IF_36
0x40026df	    0x8b93c8000000	            mov edx, dword [rbx + 0xc8] 	      1001	deflate.c	FUNCTION_13	IF_36
0x40026e5	          0x83fa02	                              cmp edx, 2	      1000	deflate.c	FUNCTION_13	IF_36
0x40026e8	     0xf846a010000	                            je 0x4002858	      1000	deflate.c	FUNCTION_13	IF_36
0x40026ee	          0x83fa03	                              cmp edx, 3	      1000	deflate.c	FUNCTION_13	IF_36
0x40026f1	     0xf84390c0000	                            je 0x4003330	      1000	deflate.c	FUNCTION_13	IF_36
0x40026f7	        0x48c1e004	                              shl rax, 4	      1003	deflate.c	FUNCTION_13	IF_36
0x40026fb	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1000	deflate.c	FUNCTION_13	IF_36
0x40026ff	          0x4889df	                            mov rdi, rbx	      1000	deflate.c	FUNCTION_13	IF_36
0x4002702	    0xff9000000000	                        call qword [rax]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002708	          0x8d50fe	                      lea edx, [rax - 2]	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x400270b	          0x83fa01	                              cmp edx, 1	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x400270e	     0xf8694020000	                           jbe 0x40029a8	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4002714	            0x89c2	                            mov edx, eax	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4002716	          0x83e2fd	                     and edx, 0xfffffffd	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4002719	            0x85d2	                           test edx, edx	      1008	deflate.c	FUNCTION_13	IF_36
0x400271b	     0xf8499020000	                            je 0x40029ba	      1008	deflate.c	FUNCTION_13	IF_36
0x4002721	          0x83f801	                              cmp eax, 1	      1021	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002724	     0xf844e040000	                            je 0x4002b78	      1021	deflate.c	FUNCTION_13	IF_36	IF_38
0x400272a	      0x837c241404	               cmp dword [rsp + 0x14], 4	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x400272f	     0xf8593020000	                           jne 0x40029c8	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x4002735	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002738	            0x85c0	                           test eax, eax	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x400273a	     0xf8ec0120000	                           jle 0x4003a00	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002740	          0x83f802	                              cmp eax, 2	      1051	deflate.c	FUNCTION_13	IF_47
0x4002743	     0xf84a3110000	                            je 0x40038ec	      1051	deflate.c	FUNCTION_13	IF_47
0x4002749	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       720	deflate.c	
0x400274d	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1064	deflate.c	FUNCTION_13	IF_48
0x4002751	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       720	deflate.c	
0x4002755	        0x488d7201	                      lea rsi, [rdx + 1]	       720	deflate.c	
0x4002759	        0x48c1e810	                           shr rax, 0x10	      1064	deflate.c	FUNCTION_13	IF_48
0x400275d	        0x48897328	             mov qword [rbx + 0x28], rsi	       720	deflate.c	
0x4002761	            0x89c6	                            mov esi, eax	       720	deflate.c	
0x4002763	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4002766	        0x40883411	               mov byte [rcx + rdx], sil	       720	deflate.c	
0x400276a	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       721	deflate.c	
0x400276e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       721	deflate.c	
0x4002772	        0x488d7201	                      lea rsi, [rdx + 1]	       721	deflate.c	
0x4002776	        0x48897328	             mov qword [rbx + 0x28], rsi	       721	deflate.c	
0x400277a	          0x880411	                mov byte [rcx + rdx], al	       721	deflate.c	
0x400277d	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       720	deflate.c	
0x4002781	         0xfb75560	           movzx edx, word [rbp + 0x60] 	      1065	deflate.c	FUNCTION_13	ELSE_7
0x4002785	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       720	deflate.c	
0x4002789	        0x488d7001	                      lea rsi, [rax + 1]	       720	deflate.c	
0x400278d	        0x48897328	             mov qword [rbx + 0x28], rsi	       720	deflate.c	
0x4002791	            0x89d6	                            mov esi, edx	       720	deflate.c	
0x4002793	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4002796	        0x40883401	               mov byte [rcx + rax], sil	       720	deflate.c	
0x400279a	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       721	deflate.c	
0x400279e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       721	deflate.c	
0x40027a2	        0x488d7001	                      lea rsi, [rax + 1]	       721	deflate.c	
0x40027a6	        0x48897328	             mov qword [rbx + 0x28], rsi	       721	deflate.c	
0x40027aa	          0x881401	                mov byte [rcx + rax], dl	       721	deflate.c	
0x40027ad	        0x4c8b6d38	            mov r13, qword [rbp + 0x38] 	       734	deflate.c	
0x40027b1	          0x4c89ef	                            mov rdi, r13	       736	deflate.c	FUNCTION_12
0x40027b4	      0xe800000000	                          call 0x40027b9	       736	deflate.c	FUNCTION_12
0x40027b9	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       737	deflate.c	FUNCTION_12
0x40027bd	        0x448b6520	           mov r12d, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x40027c1	          0x4439e0	                           cmp eax, r12d	       738	deflate.c	FUNCTION_12
0x40027c4	        0x440f46e0	                        cmovbe r12d, eax	       738	deflate.c	FUNCTION_12
0x40027c8	          0x4585e4	                         test r12d, r12d	       739	deflate.c	FUNCTION_12
0x40027cb	     0xf85e50e0000	                           jne 0x40036b6	       739	deflate.c	FUNCTION_12
0x40027d1	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1071	deflate.c	FUNCTION_13	CALL_62
0x40027d4	            0x85c0	                           test eax, eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x40027d6	            0x7e05	                           jle 0x40027dd	      1071	deflate.c	FUNCTION_13	CALL_62
0x40027d8	            0xf7d8	                                 neg eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x40027da	          0x894330	             mov dword [rbx + 0x30], eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x40027dd	            0x31c0	                            xor eax, eax	      1072	deflate.c	FUNCTION_13
0x40027df	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      1072	deflate.c	FUNCTION_13
0x40027e4	           0xf94c0	                                 sete al	      1072	deflate.c	FUNCTION_13
0x40027e7	      0xe978fdffff	                           jmp 0x4002564	      1072	deflate.c	FUNCTION_13
0x40027ec	         0xf1f4000	                         nop dword [rax]	      1072	deflate.c	FUNCTION_13
0x40027f0	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40027f7	            0x31f6	                            xor esi, esi	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40027f9	          0x4829c2	                            sub rdx, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40027fc	          0x4885c0	                           test rax, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40027ff	            0x7809	                            js 0x400280a	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002801	            0x89c0	                            mov eax, eax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002803	        0x48034360	             add rax, qword [rbx + 0x60]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002807	          0x4889c6	                            mov rsi, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400280a	            0x31c9	                            xor ecx, ecx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400280c	          0x4889df	                            mov rdi, rbx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400280f	      0xe800000000	                          call 0x4002814	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002814	          0x4c8b33	                    mov r14, qword [rbx]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002817	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400281d	        0x4d8b7e38	            mov r15, qword [r14 + 0x38] 	       734	deflate.c	
0x4002821	    0x488983980000	             mov qword [rbx + 0x98], rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002828	          0x4c89ff	                            mov rdi, r15	       736	deflate.c	FUNCTION_12
0x400282b	      0xe800000000	                          call 0x4002830	       736	deflate.c	FUNCTION_12
0x4002830	        0x498b4728	            mov rax, qword [r15 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4002834	        0x458b6e20	           mov r13d, dword [r14 + 0x20] 	       738	deflate.c	FUNCTION_12
0x4002838	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x400283b	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x400283f	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4002842	     0xf85320f0000	                           jne 0x400377a	       739	deflate.c	FUNCTION_12
0x4002848	          0x488b03	                    mov rax, qword [rbx]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400284b	        0x448b7820	           mov r15d, dword [rax + 0x20] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400284f	          0x4585ff	                         test r15d, r15d	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002852	     0xf8462010000	                            je 0x40029ba	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002858	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400285e	            0xeb7d	                           jmp 0x40028dd	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002860	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002866	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x400286c	            0x31ff	                            xor edi, edi	      2150	deflate.c	FUNCTION_24	FOR_1
0x400286e	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002872	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002879	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      2148	deflate.c	FUNCTION_24	FOR_1	IF_1	IF_2
0x4002883	         0xfb60402	             movzx eax, byte [rdx + rax]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002887	        0x66893c4e	              mov word [rsi + rcx*2], di	      2150	deflate.c	FUNCTION_24	FOR_1
0x400288b	          0x4889ca	                            mov rdx, rcx	      2150	deflate.c	FUNCTION_24	FOR_1
0x400288e	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002895	          0x83c201	                              add edx, 1	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002898	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      2150	deflate.c	FUNCTION_24	FOR_1
0x400289e	          0x88040e	                mov byte [rsi + rcx], al	      2150	deflate.c	FUNCTION_24	FOR_1
0x40028a1	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2150	deflate.c	FUNCTION_24	FOR_1
0x40028aa	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40028b0	    0x8bbbac000000	            mov edi, dword [rbx + 0xac] 	      2152	deflate.c	FUNCTION_24	FOR_1
0x40028b6	          0x8d48ff	                      lea ecx, [rax - 1]	      2150	deflate.c	FUNCTION_24	FOR_1
0x40028b9	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2151	deflate.c	FUNCTION_24	FOR_1
0x40028bf	          0x8d5701	                      lea edx, [rdi + 1]	      2152	deflate.c	FUNCTION_24	FOR_1
0x40028c2	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      2152	deflate.c	FUNCTION_24	FOR_1
0x40028c8	          0x83e801	                              sub eax, 1	      2151	deflate.c	FUNCTION_24	FOR_1
0x40028cb	    0x398b0c170000	          cmp dword [rbx + 0x170c], ecx 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40028d1	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      2151	deflate.c	FUNCTION_24	FOR_1
0x40028d7	     0xf8413ffffff	                            je 0x40027f0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40028dd	            0x85c0	                           test eax, eax	      2138	deflate.c	FUNCTION_24
0x40028df	     0xf857bffffff	                           jne 0x4002860	      2138	deflate.c	FUNCTION_24
0x40028e5	          0x4889df	                            mov rdi, rbx	      2139	deflate.c	FUNCTION_24
0x40028e8	      0xe883d9ffff	                    call sym.fill_window	      2139	deflate.c	FUNCTION_24
0x40028ed	    0x448b8bb40000	            mov r9d, dword [rbx + 0xb4] 	      2140	deflate.c	FUNCTION_24	FOR_1
0x40028f4	          0x4585c9	                           test r9d, r9d	      2140	deflate.c	FUNCTION_24	FOR_1
0x40028f7	     0xf8563ffffff	                           jne 0x4002860	      2140	deflate.c	FUNCTION_24	FOR_1
0x40028fd	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	      2141	deflate.c	FUNCTION_24	FOR_1
0x4002902	          0x4585c0	                           test r8d, r8d	      2141	deflate.c	FUNCTION_24	FOR_1
0x4002905	     0xf84af000000	                            je 0x40029ba	      2141	deflate.c	FUNCTION_24	FOR_1
0x400290b	      0x837c241404	               cmp dword [rsp + 0x14], 4	      2156	deflate.c	FUNCTION_24	FOR_1
0x4002910	    0xc7832c170000	            mov dword [rbx + 0x172c], 0 	      2155	deflate.c	FUNCTION_24	FOR_1
0x400291a	     0xf84ea100000	                            je 0x4003a0a	      2156	deflate.c	FUNCTION_24	FOR_1
0x4002920	    0x448bab0c1700	         mov r13d, dword [rbx + 0x170c] 	      2160	deflate.c	FUNCTION_24	IF_5
0x4002927	          0x4585ed	                         test r13d, r13d	      2160	deflate.c	FUNCTION_24	IF_5
0x400292a	     0xf8448020000	                            je 0x4002b78	      2160	deflate.c	FUNCTION_24	IF_5
0x4002930	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2161	deflate.c	FUNCTION_24	IF_5
0x4002936	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2161	deflate.c	FUNCTION_24	IF_5
0x400293d	            0x31f6	                            xor esi, esi	      2161	deflate.c	FUNCTION_24	IF_5
0x400293f	          0x4829c2	                            sub rdx, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002942	          0x4885c0	                           test rax, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002945	            0x7809	                            js 0x4002950	      2161	deflate.c	FUNCTION_24	IF_5
0x4002947	            0x89c0	                            mov eax, eax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002949	        0x48034360	             add rax, qword [rbx + 0x60]	      2161	deflate.c	FUNCTION_24	IF_5
0x400294d	          0x4889c6	                            mov rsi, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002950	            0x31c9	                            xor ecx, ecx	      2161	deflate.c	FUNCTION_24	IF_5
0x4002952	          0x4889df	                            mov rdi, rbx	      2161	deflate.c	FUNCTION_24	IF_5
0x4002955	      0xe800000000	                          call 0x400295a	      2161	deflate.c	FUNCTION_24	IF_5
0x400295a	          0x4c8b33	                    mov r14, qword [rbx]	      2161	deflate.c	FUNCTION_24	IF_5
0x400295d	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2161	deflate.c	FUNCTION_24	IF_5
0x4002963	        0x4d8b6e38	            mov r13, qword [r14 + 0x38] 	       734	deflate.c	
0x4002967	    0x488983980000	             mov qword [rbx + 0x98], rax	      2161	deflate.c	FUNCTION_24	IF_5
0x400296e	          0x4c89ef	                            mov rdi, r13	       736	deflate.c	FUNCTION_12
0x4002971	      0xe800000000	                          call 0x4002976	       736	deflate.c	FUNCTION_12
0x4002976	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       737	deflate.c	FUNCTION_12
0x400297a	        0x458b7e20	           mov r15d, dword [r14 + 0x20] 	       738	deflate.c	FUNCTION_12
0x400297e	          0x4439f8	                           cmp eax, r15d	       738	deflate.c	FUNCTION_12
0x4002981	        0x440f46f8	                        cmovbe r15d, eax	       738	deflate.c	FUNCTION_12
0x4002985	          0x4585ff	                         test r15d, r15d	       739	deflate.c	FUNCTION_12
0x4002988	     0xf8578120000	                           jne 0x4003c06	       739	deflate.c	FUNCTION_12
0x400298e	          0x488b03	                    mov rax, qword [rbx]	      2122	deflate.c	FUNCTION_23	IF_9
0x4002991	          0x8b7820	            mov edi, dword [rax + 0x20] 	      2162	deflate.c	FUNCTION_24	IF_5
0x4002994	            0x31c0	                            xor eax, eax	      2162	deflate.c	FUNCTION_24	IF_5
0x4002996	            0x85ff	                           test edi, edi	      2162	deflate.c	FUNCTION_24	IF_5
0x4002998	           0xf95c0	                                setne al	      2162	deflate.c	FUNCTION_24	IF_5
0x400299b	            0x89c2	                            mov edx, eax	      2162	deflate.c	FUNCTION_24	IF_5
0x400299d	      0xe977fdffff	                           jmp 0x4002719	      2162	deflate.c	FUNCTION_24	IF_5
0x40029a2	    0x660f1f440000	                    nop word [rax + rax]	      2162	deflate.c	FUNCTION_24	IF_5
0x40029a8	          0x83e0fd	                     and eax, 0xfffffffd	      2162	deflate.c	FUNCTION_24	IF_5
0x40029ab	            0x85c0	                           test eax, eax	      1008	deflate.c	FUNCTION_13	IF_36
0x40029ad	    0xc743089a0200	              mov dword [rbx + 8], 0x29a	      1006	deflate.c	FUNCTION_13	IF_36	CALL_48
0x40029b4	     0xf8570fdffff	                           jne 0x400272a	      1008	deflate.c	FUNCTION_13	IF_36
0x40029ba	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40029bd	            0x85c0	                           test eax, eax	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40029bf	            0x7507	                           jne 0x40029c8	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40029c1	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	      1010	deflate.c	FUNCTION_13	IF_36	IF_37
0x40029c8	            0x31c0	                            xor eax, eax	      1012	deflate.c	FUNCTION_13	IF_36	IF_38
0x40029ca	      0xe995fbffff	                           jmp 0x4002564	      1012	deflate.c	FUNCTION_13	IF_36	IF_38
0x40029cf	              0x90	                                     nop	      1012	deflate.c	FUNCTION_13	IF_36	IF_38
0x40029d0	    0x81fa9a020000	                          cmp edx, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40029d6	     0xf858ffcffff	                           jne 0x400266b	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x40029dc	    0x488b05000000	            mov rax, qword [0x040029e3] 	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40029e3	        0x48894530	            mov qword [rbp + 0x30], rax 	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40029e7	      0xb8fbffffff	                     mov eax, 0xfffffffb	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40029ec	      0xe973fbffff	                           jmp 0x4002564	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40029f1	     0xf1f80000000	                         nop dword [rax]	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40029f8	          0x4889df	                            mov rdi, rbx	       736	deflate.c	FUNCTION_12
0x40029fb	      0xe800000000	                          call 0x4002a00	       736	deflate.c	FUNCTION_12
0x4002a00	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       737	deflate.c	FUNCTION_12
0x4002a04	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4002a07	          0x4189d5	                           mov r13d, edx	       738	deflate.c	FUNCTION_12
0x4002a0a	            0x39c2	                            cmp edx, eax	       738	deflate.c	FUNCTION_12
0x4002a0c	        0x440f47e8	                         cmova r13d, eax	       738	deflate.c	FUNCTION_12
0x4002a10	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4002a13	     0xf8597060000	                           jne 0x40030b0	       739	deflate.c	FUNCTION_12
0x4002a19	            0x85c0	                           test eax, eax	       788	deflate.c	FUNCTION_13
0x4002a1b	     0xf84b7010000	                            je 0x4002bd8	       788	deflate.c	FUNCTION_13
0x4002a21	          0x8b5308	                mov edx, dword [rbx + 8]	       788	deflate.c	FUNCTION_13
0x4002a24	    0x81fa9a020000	                          cmp edx, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002a2a	     0xf853bfcffff	                           jne 0x400266b	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002a30	        0x448b6508	               mov r12d, dword [rbp + 8]	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002a34	          0x4585e4	                         test r12d, r12d	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002a37	     0xf8464fcffff	                            je 0x40026a1	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002a3d	            0xeb9d	                           jmp 0x40029dc	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002a3f	              0x90	                                     nop	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002a40	          0x8b4354	            mov eax, dword [rbx + 0x54] 	       816	deflate.c	FUNCTION_13
0x4002a43	          0xc1e00c	                            shl eax, 0xc	       816	deflate.c	FUNCTION_13
0x4002a46	    0x8d880088ffff	                 lea ecx, [rax - 0x7800]	       816	deflate.c	FUNCTION_13
0x4002a4c	            0x31c0	                            xor eax, eax	       816	deflate.c	FUNCTION_13
0x4002a4e	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	       819	deflate.c	FUNCTION_13	IF_8
0x4002a55	     0xf8ec50b0000	                           jle 0x4003620	       819	deflate.c	FUNCTION_13	IF_8
0x4002a5b	    0x448b93ac0000	           mov r10d, dword [rbx + 0xac] 	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002a62	             0x9c1	                             or ecx, eax	       827	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002a64	      0xba85104208	                      mov edx, 0x8421085	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a69	            0x89c8	                            mov eax, ecx	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002a6b	          0x83c820	                            or eax, 0x20	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002a6e	          0x4585d2	                         test r10d, r10d	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002a71	           0xf45c8	                         cmovne ecx, eax	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002a74	            0x89c8	                            mov eax, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a76	            0xf7e2	                                 mul edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a78	            0x29d1	                            sub ecx, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a7a	            0xd1e9	                              shr ecx, 1	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a7c	             0x1ca	                            add edx, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a7e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       720	deflate.c	
0x4002a82	          0xc1ea04	                              shr edx, 4	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a85	            0x89d0	                            mov eax, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a87	          0xc1e005	                              shl eax, 5	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a8a	            0x29d0	                            sub eax, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a8c	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       720	deflate.c	
0x4002a90	          0x83c01f	                           add eax, 0x1f	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002a93	        0x488d7201	                      lea rsi, [rdx + 1]	       720	deflate.c	
0x4002a97	        0x48897328	             mov qword [rbx + 0x28], rsi	       720	deflate.c	
0x4002a9b	            0x89c6	                            mov esi, eax	       720	deflate.c	
0x4002a9d	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4002aa0	        0x40883411	               mov byte [rcx + rdx], sil	       720	deflate.c	
0x4002aa4	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       721	deflate.c	
0x4002aa8	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       721	deflate.c	
0x4002aac	        0x488d7201	                      lea rsi, [rdx + 1]	       721	deflate.c	
0x4002ab0	        0x48897328	             mov qword [rbx + 0x28], rsi	       721	deflate.c	
0x4002ab4	          0x880411	                mov byte [rcx + rdx], al	       721	deflate.c	
0x4002ab7	    0x448b9bac0000	           mov r11d, dword [rbx + 0xac] 	       834	deflate.c	FUNCTION_13	IF_8
0x4002abe	          0x4585db	                         test r11d, r11d	       834	deflate.c	FUNCTION_13	IF_8
0x4002ac1	            0x7464	                            je 0x4002b27	       834	deflate.c	FUNCTION_13	IF_8
0x4002ac3	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       720	deflate.c	
0x4002ac7	        0x488b4560	            mov rax, qword [rbp + 0x60] 	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x4002acb	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       720	deflate.c	
0x4002acf	        0x488d7201	                      lea rsi, [rdx + 1]	       720	deflate.c	
0x4002ad3	        0x48c1e810	                           shr rax, 0x10	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x4002ad7	        0x48897328	             mov qword [rbx + 0x28], rsi	       720	deflate.c	
0x4002adb	            0x89c6	                            mov esi, eax	       720	deflate.c	
0x4002add	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4002ae0	        0x40883411	               mov byte [rcx + rdx], sil	       720	deflate.c	
0x4002ae4	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       721	deflate.c	
0x4002ae8	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       721	deflate.c	
0x4002aec	        0x488d7201	                      lea rsi, [rdx + 1]	       721	deflate.c	
0x4002af0	        0x48897328	             mov qword [rbx + 0x28], rsi	       721	deflate.c	
0x4002af4	          0x880411	                mov byte [rcx + rdx], al	       721	deflate.c	
0x4002af7	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       720	deflate.c	
0x4002afb	         0xfb75560	           movzx edx, word [rbp + 0x60] 	       836	deflate.c	FUNCTION_13	IF_8
0x4002aff	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       720	deflate.c	
0x4002b03	        0x488d7001	                      lea rsi, [rax + 1]	       720	deflate.c	
0x4002b07	        0x48897328	             mov qword [rbx + 0x28], rsi	       720	deflate.c	
0x4002b0b	            0x89d6	                            mov esi, edx	       720	deflate.c	
0x4002b0d	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4002b10	        0x40883401	               mov byte [rcx + rax], sil	       720	deflate.c	
0x4002b14	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       721	deflate.c	
0x4002b18	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       721	deflate.c	
0x4002b1c	        0x488d7001	                      lea rsi, [rax + 1]	       721	deflate.c	
0x4002b20	        0x48897328	             mov qword [rbx + 0x28], rsi	       721	deflate.c	
0x4002b24	          0x881401	                mov byte [rcx + rax], dl	       721	deflate.c	
0x4002b27	            0x31d2	                            xor edx, edx	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4002b29	            0x31f6	                            xor esi, esi	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4002b2b	            0x31ff	                            xor edi, edi	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4002b2d	      0xe800000000	                          call 0x4002b32	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4002b32	        0x4c8b7538	            mov r14, qword [rbp + 0x38] 	       734	deflate.c	
0x4002b36	        0x48894560	            mov qword [rbp + 0x60], rax 	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4002b3a	    0xc74308710000	               mov dword [rbx + 8], 0x71	       839	deflate.c	FUNCTION_13	IF_8	IF_13	CALL_8
0x4002b41	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4002b44	      0xe800000000	                          call 0x4002b49	       736	deflate.c	FUNCTION_12
0x4002b49	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4002b4d	        0x448b6d20	           mov r13d, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4002b51	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4002b54	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x4002b58	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4002b5b	     0xf858f070000	                           jne 0x40032f0	       739	deflate.c	FUNCTION_12
0x4002b61	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       843	deflate.c	FUNCTION_13	IF_8
0x4002b66	     0xf8555feffff	                           jne 0x40029c1	       843	deflate.c	FUNCTION_13	IF_8
0x4002b6c	          0x8b5308	                mov edx, dword [rbx + 8]	       843	deflate.c	FUNCTION_13	IF_8
0x4002b6f	      0xe900fbffff	                           jmp 0x4002674	       843	deflate.c	FUNCTION_13	IF_8
0x4002b74	         0xf1f4000	                         nop dword [rax]	       843	deflate.c	FUNCTION_13	IF_8
0x4002b78	      0x837c241401	               cmp dword [rsp + 0x14], 1	      1022	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b7d	     0xf84a70b0000	                            je 0x400372a	      1022	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b83	      0x448b7c2414	           mov r15d, dword [rsp + 0x14] 	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b88	        0x4183ff05	                             cmp r15d, 5	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b8c	            0x7418	                            je 0x4002ba6	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b8e	            0x31c9	                            xor ecx, ecx	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b90	            0x31d2	                            xor edx, edx	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b92	            0x31f6	                            xor esi, esi	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b94	          0x4889df	                            mov rdi, rbx	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b97	      0xe800000000	                          call 0x4002b9c	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b9c	        0x4183ff03	                             cmp r15d, 3	      1029	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	CALL_50
0x4002ba0	     0xf84a4100000	                            je 0x4003c4a	      1029	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	CALL_50
0x4002ba6	        0x4c8b7538	            mov r14, qword [rbp + 0x38] 	       734	deflate.c	
0x4002baa	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4002bad	      0xe800000000	                          call 0x4002bb2	       736	deflate.c	FUNCTION_12
0x4002bb2	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4002bb6	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4002bb9	          0x4189d5	                           mov r13d, edx	       738	deflate.c	FUNCTION_12
0x4002bbc	            0x39c2	                            cmp edx, eax	       738	deflate.c	FUNCTION_12
0x4002bbe	        0x440f47e8	                         cmova r13d, eax	       738	deflate.c	FUNCTION_12
0x4002bc2	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4002bc5	     0xf85f60d0000	                           jne 0x40039c1	       739	deflate.c	FUNCTION_12
0x4002bcb	            0x85c0	                           test eax, eax	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bcd	     0xf8557fbffff	                           jne 0x400272a	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bd3	       0xf1f440000	                   nop dword [rax + rax]	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bd8	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	      1040	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4002bdf	      0xe980f9ffff	                           jmp 0x4002564	      1041	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002be4	         0xf1f4000	                         nop dword [rax]	      1041	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002be8	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1000	deflate.c	FUNCTION_13	IF_36
0x4002bec	          0x4889df	                            mov rdi, rbx	      1000	deflate.c	FUNCTION_13	IF_36
0x4002bef	      0xe8ecdfffff	                 call sym.deflate_stored	      1000	deflate.c	FUNCTION_13	IF_36
0x4002bf4	      0xe90ffbffff	                           jmp 0x4002708	      1000	deflate.c	FUNCTION_13	IF_36
0x4002bf9	     0xf1f80000000	                         nop dword [rax]	      1000	deflate.c	FUNCTION_13	IF_36
0x4002c00	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1000	deflate.c	FUNCTION_13	IF_36
0x4002c04	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002c08	          0x4885d2	                           test rdx, rdx	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002c0b	     0xf8497010000	                            je 0x4002da8	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002c11	      0x440fb76820	          movzx r13d, word [rax + 0x20] 	       903	deflate.c	FUNCTION_13	IF_15
0x4002c16	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	       903	deflate.c	FUNCTION_13	IF_15
0x4002c1a	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       902	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002c1e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       904	deflate.c	FUNCTION_13	IF_20
0x4002c22	          0x4129f5	                           sub r13d, esi	       903	deflate.c	FUNCTION_13	IF_15
0x4002c25	          0x4589ee	                          mov r14d, r13d	       904	deflate.c	FUNCTION_13	IF_20
0x4002c28	        0x4a8d3c31	                    lea rdi, [rcx + r14]	       904	deflate.c	FUNCTION_13	IF_20
0x4002c2c	          0x4839f8	                            cmp rax, rdi	       904	deflate.c	FUNCTION_13	IF_20
0x4002c2f	            0x723b	                            jb 0x4002c6c	       904	deflate.c	FUNCTION_13	IF_20
0x4002c31	      0xe918010000	                           jmp 0x4002d4e	       904	deflate.c	FUNCTION_13	IF_20
0x4002c36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       904	deflate.c	FUNCTION_13	IF_20
0x4002c40	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002c45	     0xf8576fdffff	                           jne 0x40029c1	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002c4b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       904	deflate.c	FUNCTION_13	IF_20
0x4002c4f	          0x4529fd	                          sub r13d, r15d	       917	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4002c52	          0x4589ee	                          mov r14d, r13d	       904	deflate.c	FUNCTION_13	IF_20
0x4002c55	          0x4939c6	                            cmp r14, rax	       904	deflate.c	FUNCTION_13	IF_20
0x4002c58	     0xf86e2000000	                           jbe 0x4002d40	       904	deflate.c	FUNCTION_13	IF_20
0x4002c5e	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       904	deflate.c	FUNCTION_13	IF_20
0x4002c62	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	       904	deflate.c	FUNCTION_13	IF_20
0x4002c66	            0x31c9	                            xor ecx, ecx	       916	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4002c68	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       916	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4002c6c	          0x4189c7	                           mov r15d, eax	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002c6f	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4002c72	        0x48037b10	             add rdi, qword [rbx + 0x10]	        53	string3.h	FUNCTION_25	CALL_3
0x4002c76	          0x4129cf	                           sub r15d, ecx	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002c79	          0x4801d6	                            add rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4002c7c	          0x4189ce	                           mov r14d, ecx	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002c7f	          0x4589fc	                          mov r12d, r15d	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002c82	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4002c87	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_25	CALL_3
0x4002c8a	      0xe800000000	                          call 0x4002c8f	        53	string3.h	FUNCTION_25	CALL_3
0x4002c8f	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002c93	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002c97	          0x8b7844	            mov edi, dword [rax + 0x44] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002c9a	        0x48895328	             mov qword [rbx + 0x28], rdx	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002c9e	            0x85ff	                           test edi, edi	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002ca0	            0x740a	                            je 0x4002cac	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002ca2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002ca7	          0x4839ca	                            cmp rdx, rcx	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002caa	            0x7774	                            ja 0x4002d20	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002cac	        0x4c016340	            add qword [rbx + 0x40], r12 	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4002cb0	        0x4c8b6538	            mov r12, qword [rbp + 0x38] 	       734	deflate.c	
0x4002cb4	          0x4c89e7	                            mov rdi, r12	       736	deflate.c	FUNCTION_12
0x4002cb7	      0xe800000000	                          call 0x4002cbc	       736	deflate.c	FUNCTION_12
0x4002cbc	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4002cc1	        0x448b7520	           mov r14d, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4002cc5	          0x4439f0	                           cmp eax, r14d	       738	deflate.c	FUNCTION_12
0x4002cc8	        0x440f46f0	                        cmovbe r14d, eax	       738	deflate.c	FUNCTION_12
0x4002ccc	          0x4585f6	                         test r14d, r14d	       739	deflate.c	FUNCTION_12
0x4002ccf	     0xf846bffffff	                            je 0x4002c40	       739	deflate.c	FUNCTION_12
0x4002cd5	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4002cd9	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4002cde	          0x4589f0	                           mov r8d, r14d	       741	deflate.c	FUNCTION_12
0x4002ce1	          0x4c89c2	                             mov rdx, r8	        53	string3.h	FUNCTION_25	CALL_3
0x4002ce4	      0x4c89442408	                 mov qword [rsp + 8], r8	        53	string3.h	FUNCTION_25	CALL_3
0x4002ce9	      0xe800000000	                          call 0x4002cee	        53	string3.h	FUNCTION_25	CALL_3
0x4002cee	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       742	deflate.c	FUNCTION_12	IF_1
0x4002cf3	        0x4c014518	              add qword [rbp + 0x18], r8	       742	deflate.c	FUNCTION_12	IF_1
0x4002cf7	      0x4d01442420	              add qword [r12 + 0x20], r8	       743	deflate.c	FUNCTION_12	IF_2
0x4002cfc	        0x4c014528	              add qword [rbp + 0x28], r8	       744	deflate.c	FUNCTION_12
0x4002d00	        0x44297520	            sub dword [rbp + 0x20], r14d	       745	deflate.c	FUNCTION_12	CALL_2
0x4002d04	      0x4d29442428	              sub qword [r12 + 0x28], r8	       747	deflate.c	FUNCTION_12
0x4002d09	     0xf8531ffffff	                           jne 0x4002c40	       747	deflate.c	FUNCTION_12
0x4002d0f	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4002d14	      0x4989442420	             mov qword [r12 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4002d19	      0xe922ffffff	                           jmp 0x4002c40	       748	deflate.c	FUNCTION_12
0x4002d1e	            0x6690	                                     nop	       748	deflate.c	FUNCTION_12
0x4002d20	          0x4889ce	                            mov rsi, rcx	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d23	        0x48037310	             add rsi, qword [rbx + 0x10]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d27	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d2b	          0x4429f2	                           sub edx, r14d	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d2e	      0xe800000000	                          call 0x4002d33	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d33	        0x48894560	            mov qword [rbp + 0x60], rax 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d37	      0xe970ffffff	                           jmp 0x4002cac	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d3c	         0xf1f4000	                         nop dword [rax]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d40	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d44	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d48	            0x31c9	                            xor ecx, ecx	       916	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4002d4a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       916	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4002d4e	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4002d51	        0x48037b10	             add rdi, qword [rbx + 0x10]	        53	string3.h	FUNCTION_25	CALL_3
0x4002d55	          0x4801d6	                            add rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4002d58	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x4002d5b	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4002d60	      0xe800000000	                          call 0x4002d65	        53	string3.h	FUNCTION_25	CALL_3
0x4002d65	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d69	        0x4c037328	             add r14, qword [rbx + 0x28]	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d6d	          0x8b7044	            mov esi, dword [rax + 0x44] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d70	        0x4c897328	             mov qword [rbx + 0x28], r14	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d74	            0x85f6	                           test esi, esi	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d76	            0x7428	                            je 0x4002da0	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d78	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d7d	          0x4939ce	                            cmp r14, rcx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d80	            0x761e	                           jbe 0x4002da0	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d82	          0x4889ce	                            mov rsi, rcx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d85	        0x48037310	             add rsi, qword [rbx + 0x10]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d89	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d8d	          0x4489f2	                           mov edx, r14d	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d90	            0x29ca	                            sub edx, ecx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d92	      0xe800000000	                          call 0x4002d97	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d97	        0x48894560	            mov qword [rbp + 0x60], rax 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d9b	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002d9f	              0x90	                                     nop	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002da0	    0x48c743400000	               mov qword [rbx + 0x40], 0	       923	deflate.c	FUNCTION_13	IF_20	IF_21	CALL_36
0x4002da8	    0xc74308490000	               mov dword [rbx + 8], 0x49	       925	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002daf	      0x4883782800	               cmp qword [rax + 0x28], 0	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002db4	     0xf8406010000	                            je 0x4002ec0	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002dba	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       929	deflate.c	FUNCTION_13	IF_20
0x4002dbe	          0x4889f2	                            mov rdx, rsi	       929	deflate.c	FUNCTION_13	IF_20
0x4002dc1	            0xeb38	                           jmp 0x4002dfb	       929	deflate.c	FUNCTION_13	IF_20
0x4002dc3	       0xf1f440000	                   nop dword [rax + rax]	       929	deflate.c	FUNCTION_13	IF_20
0x4002dc8	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002dcc	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002dd0	        0x488d7801	                      lea rdi, [rax + 1]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002dd4	        0x48897b40	             mov qword [rbx + 0x40], rdi	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002dd8	         0xfb60401	             movzx eax, byte [rcx + rax]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002ddc	        0x488d7a01	                      lea rdi, [rdx + 1]	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002de0	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002de4	        0x48897b28	             mov qword [rbx + 0x28], rdi	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002de8	            0x84c0	                             test al, al	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002dea	          0x880411	                mov byte [rcx + rdx], al	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002ded	     0xf8495000000	                            je 0x4002e88	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002df3	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002df7	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002dfb	        0x48395318	            cmp qword [rbx + 0x18], rdx 	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002dff	            0x75c7	                           jne 0x4002dc8	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002e01	          0x8b4844	            mov ecx, dword [rax + 0x44] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002e04	            0x85c9	                           test ecx, ecx	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002e06	            0x7409	                            je 0x4002e11	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002e08	          0x4839d6	                            cmp rsi, rdx	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002e0b	     0xf827f020000	                            jb 0x4003090	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002e11	        0x4c8b7538	            mov r14, qword [rbp + 0x38] 	       734	deflate.c	
0x4002e15	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4002e18	      0xe800000000	                          call 0x4002e1d	       736	deflate.c	FUNCTION_12
0x4002e1d	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4002e21	        0x448b6d20	           mov r13d, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4002e25	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4002e28	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x4002e2c	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4002e2f	            0x751f	                           jne 0x4002e50	       739	deflate.c	FUNCTION_12
0x4002e31	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002e35	          0x4885d2	                           test rdx, rdx	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002e38	     0xf8583fbffff	                           jne 0x40029c1	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002e3e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002e42	            0x31f6	                            xor esi, esi	       939	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002e44	            0xeb82	                           jmp 0x4002dc8	       939	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002e46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       939	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002e50	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4002e54	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4002e58	          0x4589ef	                          mov r15d, r13d	       741	deflate.c	FUNCTION_12
0x4002e5b	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x4002e5e	      0xe800000000	                          call 0x4002e63	        53	string3.h	FUNCTION_25	CALL_3
0x4002e63	        0x4c017d18	            add qword [rbp + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x4002e67	        0x4d017e20	            add qword [r14 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x4002e6b	        0x4c017d28	            add qword [rbp + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x4002e6f	        0x44296d20	            sub dword [rbp + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x4002e73	        0x4d297e28	             sub qword [r14 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x4002e77	            0x75b8	                           jne 0x4002e31	       747	deflate.c	FUNCTION_12
0x4002e79	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4002e7d	        0x49894620	             mov qword [r14 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4002e81	            0xebae	                           jmp 0x4002e31	       748	deflate.c	FUNCTION_12
0x4002e83	       0xf1f440000	                   nop dword [rax + rax]	       748	deflate.c	FUNCTION_12
0x4002e88	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002e8c	          0x8b5044	            mov edx, dword [rax + 0x44] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002e8f	            0x85d2	                           test edx, edx	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002e91	            0x7425	                            je 0x4002eb8	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002e93	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002e97	          0x4839d6	                            cmp rsi, rdx	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002e9a	            0x731c	                           jae 0x4002eb8	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002e9c	            0x29f2	                            sub edx, esi	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002e9e	        0x48037310	             add rsi, qword [rbx + 0x10]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002ea2	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002ea6	      0xe800000000	                          call 0x4002eab	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002eab	        0x48894560	            mov qword [rbp + 0x60], rax 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002eaf	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002eb3	       0xf1f440000	                   nop dword [rax + rax]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002eb8	    0x48c743400000	               mov qword [rbx + 0x40], 0	       945	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002ec0	    0xc743085b0000	               mov dword [rbx + 8], 0x5b	       947	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002ec7	      0x4883783800	               cmp qword [rax + 0x38], 0	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002ecc	     0xf84f6000000	                            je 0x4002fc8	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002ed2	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       951	deflate.c	FUNCTION_13	IF_23
0x4002ed6	          0x4889f2	                            mov rdx, rsi	       951	deflate.c	FUNCTION_13	IF_23
0x4002ed9	            0xeb38	                           jmp 0x4002f13	       951	deflate.c	FUNCTION_13	IF_23
0x4002edb	       0xf1f440000	                   nop dword [rax + rax]	       951	deflate.c	FUNCTION_13	IF_23
0x4002ee0	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002ee4	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002ee8	        0x488d7801	                      lea rdi, [rax + 1]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002eec	        0x48897b40	             mov qword [rbx + 0x40], rdi	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002ef0	         0xfb60401	             movzx eax, byte [rcx + rax]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002ef4	        0x488d7a01	                      lea rdi, [rdx + 1]	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002ef8	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002efc	        0x48897b28	             mov qword [rbx + 0x28], rdi	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002f00	            0x84c0	                             test al, al	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002f02	          0x880411	                mov byte [rcx + rdx], al	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002f05	     0xf848d000000	                            je 0x4002f98	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002f0b	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002f0f	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002f13	        0x48395318	            cmp qword [rbx + 0x18], rdx 	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002f17	            0x75c7	                           jne 0x4002ee0	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002f19	        0x448b7844	           mov r15d, dword [rax + 0x44] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002f1d	          0x4585ff	                         test r15d, r15d	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002f20	            0x7409	                            je 0x4002f2b	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002f22	          0x4839d6	                            cmp rsi, rdx	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002f25	     0xf82c5010000	                            jb 0x40030f0	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002f2b	        0x4c8b7538	            mov r14, qword [rbp + 0x38] 	       734	deflate.c	
0x4002f2f	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4002f32	      0xe800000000	                          call 0x4002f37	       736	deflate.c	FUNCTION_12
0x4002f37	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4002f3b	        0x448b6d20	           mov r13d, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4002f3f	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4002f42	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x4002f46	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4002f49	            0x7515	                           jne 0x4002f60	       739	deflate.c	FUNCTION_12
0x4002f4b	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4002f4f	          0x4885d2	                           test rdx, rdx	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4002f52	     0xf8569faffff	                           jne 0x40029c1	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4002f58	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4002f5c	            0x31f6	                            xor esi, esi	       961	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002f5e	            0xeb80	                           jmp 0x4002ee0	       961	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002f60	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4002f64	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4002f68	          0x4589ef	                          mov r15d, r13d	       741	deflate.c	FUNCTION_12
0x4002f6b	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x4002f6e	      0xe800000000	                          call 0x4002f73	        53	string3.h	FUNCTION_25	CALL_3
0x4002f73	        0x4c017d18	            add qword [rbp + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x4002f77	        0x4d017e20	            add qword [r14 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x4002f7b	        0x4c017d28	            add qword [rbp + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x4002f7f	        0x44296d20	            sub dword [rbp + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x4002f83	        0x4d297e28	             sub qword [r14 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x4002f87	            0x75c2	                           jne 0x4002f4b	       747	deflate.c	FUNCTION_12
0x4002f89	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4002f8d	        0x49894620	             mov qword [r14 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4002f91	            0xebb8	                           jmp 0x4002f4b	       748	deflate.c	FUNCTION_12
0x4002f93	       0xf1f440000	                   nop dword [rax + rax]	       748	deflate.c	FUNCTION_12
0x4002f98	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002f9c	        0x448b7044	           mov r14d, dword [rax + 0x44] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fa0	          0x4585f6	                         test r14d, r14d	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fa3	            0x7423	                            je 0x4002fc8	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fa5	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fa9	          0x4839d6	                            cmp rsi, rdx	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fac	            0x731a	                           jae 0x4002fc8	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fae	            0x29f2	                            sub edx, esi	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fb0	        0x48037310	             add rsi, qword [rbx + 0x10]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fb4	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fb8	      0xe800000000	                          call 0x4002fbd	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fbd	        0x48894560	            mov qword [rbp + 0x60], rax 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fc1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fc5	           0xf1f00	                         nop dword [rax]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002fc8	    0xc74308670000	               mov dword [rbx + 8], 0x67	       968	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	CALL_40
0x4002fcf	        0x448b6844	           mov r13d, dword [rax + 0x44] 	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002fd3	          0x4585ed	                         test r13d, r13d	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002fd6	            0x747c	                            je 0x4003054	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002fd8	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       972	deflate.c	FUNCTION_13	IF_27
0x4002fdc	        0x488d5002	                      lea rdx, [rax + 2]	       972	deflate.c	FUNCTION_13	IF_27
0x4002fe0	        0x483b5318	            cmp rdx, qword [rbx + 0x18] 	       972	deflate.c	FUNCTION_13	IF_27
0x4002fe4	            0x7631	                           jbe 0x4003017	       972	deflate.c	FUNCTION_13	IF_27
0x4002fe6	        0x4c8b7538	            mov r14, qword [rbp + 0x38] 	       734	deflate.c	
0x4002fea	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4002fed	      0xe800000000	                          call 0x4002ff2	       736	deflate.c	FUNCTION_12
0x4002ff2	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4002ff6	        0x448b6d20	           mov r13d, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4002ffa	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4002ffd	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x4003001	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4003004	     0xf85e6060000	                           jne 0x40036f0	       739	deflate.c	FUNCTION_12
0x400300a	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       974	deflate.c	FUNCTION_13	IF_31
0x400300e	          0x4885c0	                           test rax, rax	       974	deflate.c	FUNCTION_13	IF_31
0x4003011	     0xf85aaf9ffff	                           jne 0x40029c1	       974	deflate.c	FUNCTION_13	IF_31
0x4003017	        0x488d4801	                      lea rcx, [rax + 1]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400301b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400301f	            0x31f6	                            xor esi, esi	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003021	            0x31ff	                            xor edi, edi	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003023	        0x48894b28	             mov qword [rbx + 0x28], rcx	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003027	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400302b	          0x880c02	                mov byte [rdx + rax], cl	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400302e	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003032	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003036	        0x488d4201	                      lea rax, [rdx + 1]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400303a	        0x48894328	             mov qword [rbx + 0x28], rax	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400303e	        0x488b4560	            mov rax, qword [rbp + 0x60] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003042	        0x48c1e808	                              shr rax, 8	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003046	          0x880411	                mov byte [rcx + rdx], al	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003049	            0x31d2	                            xor edx, edx	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400304b	      0xe800000000	                          call 0x4003050	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003050	        0x48894560	            mov qword [rbp + 0x60], rax 	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4003054	        0x4c8b7538	            mov r14, qword [rbp + 0x38] 	       734	deflate.c	
0x4003058	    0xc74308710000	               mov dword [rbx + 8], 0x71	       983	deflate.c	FUNCTION_13	IF_31	IF_32	CALL_42
0x400305f	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4003062	      0xe800000000	                          call 0x4003067	       736	deflate.c	FUNCTION_12
0x4003067	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x400306b	        0x448b6d20	           mov r13d, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x400306f	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4003072	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x4003076	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4003079	     0xf85c1060000	                           jne 0x4003740	       739	deflate.c	FUNCTION_12
0x400307f	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       987	deflate.c	FUNCTION_13	IF_31
0x4003084	     0xf8417f6ffff	                            je 0x40026a1	       987	deflate.c	FUNCTION_13	IF_31
0x400308a	      0xe932f9ffff	                           jmp 0x40029c1	       987	deflate.c	FUNCTION_13	IF_31
0x400308f	              0x90	                                     nop	       987	deflate.c	FUNCTION_13	IF_31
0x4003090	            0x29f2	                            sub edx, esi	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4003092	        0x48037310	             add rsi, qword [rbx + 0x10]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4003096	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400309a	      0xe800000000	                          call 0x400309f	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400309f	        0x48894560	            mov qword [rbp + 0x60], rax 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x40030a3	      0xe969fdffff	                           jmp 0x4002e11	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x40030a8	     0xf1f84000000	                   nop dword [rax + rax]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x40030b0	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40030b4	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x40030b8	          0x4589ee	                          mov r14d, r13d	       741	deflate.c	FUNCTION_12
0x40030bb	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x40030be	      0xe800000000	                          call 0x40030c3	        53	string3.h	FUNCTION_25	CALL_3
0x40030c3	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       745	deflate.c	FUNCTION_12	CALL_2
0x40030c6	        0x4c017518	            add qword [rbp + 0x18], r14 	       742	deflate.c	FUNCTION_12	IF_1
0x40030ca	        0x4c017320	            add qword [rbx + 0x20], r14 	       743	deflate.c	FUNCTION_12	IF_2
0x40030ce	        0x4c017528	            add qword [rbp + 0x28], r14 	       744	deflate.c	FUNCTION_12
0x40030d2	          0x4429e8	                           sub eax, r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x40030d5	          0x894520	            mov dword [rbp + 0x20], eax 	       745	deflate.c	FUNCTION_12	CALL_2
0x40030d8	        0x4c297328	             sub qword [rbx + 0x28], r14	       747	deflate.c	FUNCTION_12
0x40030dc	     0xf8537f9ffff	                           jne 0x4002a19	       747	deflate.c	FUNCTION_12
0x40030e2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       748	deflate.c	FUNCTION_12
0x40030e6	        0x48895320	             mov qword [rbx + 0x20], rdx	       748	deflate.c	FUNCTION_12
0x40030ea	      0xe92af9ffff	                           jmp 0x4002a19	       748	deflate.c	FUNCTION_12
0x40030ef	              0x90	                                     nop	       748	deflate.c	FUNCTION_12
0x40030f0	            0x29f2	                            sub edx, esi	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x40030f2	        0x48037310	             add rsi, qword [rbx + 0x10]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x40030f6	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x40030fa	      0xe800000000	                          call 0x40030ff	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x40030ff	        0x48894560	            mov qword [rbp + 0x60], rax 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4003103	      0xe923feffff	                           jmp 0x4002f2b	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4003108	     0xf1f84000000	                   nop dword [rax + rax]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4003110	            0x31d2	                            xor edx, edx	       851	deflate.c	FUNCTION_13	IF_8
0x4003112	            0x31f6	                            xor esi, esi	       851	deflate.c	FUNCTION_13	IF_8
0x4003114	            0x31ff	                            xor edi, edi	       851	deflate.c	FUNCTION_13	IF_8
0x4003116	      0xe800000000	                          call 0x400311b	       851	deflate.c	FUNCTION_13	IF_8
0x400311b	        0x48894560	            mov qword [rbp + 0x60], rax 	       851	deflate.c	FUNCTION_13	IF_8
0x400311f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       852	deflate.c	FUNCTION_13
0x4003123	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       852	deflate.c	FUNCTION_13
0x4003127	        0x488d4801	                      lea rcx, [rax + 1]	       852	deflate.c	FUNCTION_13
0x400312b	        0x48894b28	             mov qword [rbx + 0x28], rcx	       852	deflate.c	FUNCTION_13
0x400312f	        0xc604021f	              mov byte [rdx + rax], 0x1f	       852	deflate.c	FUNCTION_13
0x4003133	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       853	deflate.c	FUNCTION_13	IF_15
0x4003137	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       853	deflate.c	FUNCTION_13	IF_15
0x400313b	        0x488d4801	                      lea rcx, [rax + 1]	       853	deflate.c	FUNCTION_13	IF_15
0x400313f	        0x48894b28	             mov qword [rbx + 0x28], rcx	       853	deflate.c	FUNCTION_13	IF_15
0x4003143	        0xc604028b	              mov byte [rdx + rax], 0x8b	       853	deflate.c	FUNCTION_13	IF_15
0x4003147	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       854	deflate.c	FUNCTION_13	IF_15
0x400314b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       854	deflate.c	FUNCTION_13	IF_15
0x400314f	        0x488d4801	                      lea rcx, [rax + 1]	       854	deflate.c	FUNCTION_13	IF_15
0x4003153	        0x48894b28	             mov qword [rbx + 0x28], rcx	       854	deflate.c	FUNCTION_13	IF_15
0x4003157	        0xc6040208	                 mov byte [rdx + rax], 8	       854	deflate.c	FUNCTION_13	IF_15
0x400315b	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x400315f	          0x4885d2	                           test rdx, rdx	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x4003162	     0xf841f090000	                            je 0x4003a87	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x4003168	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400316c	          0x448b0a	                    mov r9d, dword [rdx]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400316f	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003173	        0x488d4601	                      lea rax, [rsi + 1]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003177	          0x4585c9	                           test r9d, r9d	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400317a	        0x48894328	             mov qword [rbx + 0x28], rax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400317e	           0xf95c0	                                setne al	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003181	        0x837a4401	               cmp dword [rdx + 0x44], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003185	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003187	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003189	          0x83e102	                              and ecx, 2	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400318c	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400318e	      0x48837a1801	               cmp qword [rdx + 0x18], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003193	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003195	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4003197	          0x83e104	                              and ecx, 4	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400319a	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x400319c	      0x48837a2801	               cmp qword [rdx + 0x28], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031a1	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031a3	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031a5	          0x83e108	                              and ecx, 8	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031a8	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031aa	      0x48837a3801	               cmp qword [rdx + 0x38], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031af	            0x19d2	                            sbb edx, edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031b1	            0xf7d2	                                 not edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031b3	          0x83e210	                           and edx, 0x10	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031b6	             0x1d0	                            add eax, edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031b8	          0x880437	                mov byte [rdi + rsi], al	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40031bb	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031bf	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031c3	        0x488d4801	                      lea rcx, [rax + 1]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031c7	        0x48894b28	             mov qword [rbx + 0x28], rcx	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031cb	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031cf	        0x488b4908	                mov rcx, qword [rcx + 8]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031d3	          0x880c02	                mov byte [rdx + rax], cl	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031d6	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031da	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031de	        0x488d4201	                      lea rax, [rdx + 1]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031e2	        0x48894328	             mov qword [rbx + 0x28], rax	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031e6	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031ea	        0x488b4008	                mov rax, qword [rax + 8]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031ee	        0x48c1e808	                              shr rax, 8	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031f2	          0x880411	                mov byte [rcx + rdx], al	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031f5	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031f9	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40031fd	        0x488d4201	                      lea rax, [rdx + 1]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003201	        0x48894328	             mov qword [rbx + 0x28], rax	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003205	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003209	        0x488b4008	                mov rax, qword [rax + 8]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400320d	        0x48c1e810	                           shr rax, 0x10	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003211	          0x880411	                mov byte [rcx + rdx], al	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003214	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003218	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400321c	        0x488d4201	                      lea rax, [rdx + 1]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003220	        0x48894328	             mov qword [rbx + 0x28], rax	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003224	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003228	        0x488b4008	                mov rax, qword [rax + 8]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400322c	        0x48c1e818	                           shr rax, 0x18	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003230	          0x880411	                mov byte [rcx + rdx], al	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4003233	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003237	    0x8b8bc4000000	            mov ecx, dword [rbx + 0xc4] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400323d	        0x488d5001	                      lea rdx, [rax + 1]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003241	        0x48034310	             add rax, qword [rbx + 0x10]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003245	          0x83f909	                              cmp ecx, 9	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003248	        0x48895328	             mov qword [rbx + 0x28], rdx	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400324c	      0xba02000000	                              mov edx, 2	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003251	            0x741d	                            je 0x4003270	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003253	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400325a	            0x7f07	                            jg 0x4003263	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400325c	            0x31d2	                            xor edx, edx	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400325e	          0x83f901	                              cmp ecx, 1	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003261	            0x7f0d	                            jg 0x4003270	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003263	      0xba04000000	                              mov edx, 4	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003268	     0xf1f84000000	                   nop dword [rax + rax]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003270	            0x8810	                      mov byte [rax], dl	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4003272	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4003276	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x400327a	        0x488d4801	                      lea rcx, [rax + 1]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x400327e	        0x48894b28	             mov qword [rbx + 0x28], rcx	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4003282	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4003286	          0x8b4914	            mov ecx, dword [rcx + 0x14] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4003289	          0x880c02	                mov byte [rdx + rax], cl	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x400328c	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4003290	      0x4883781800	               cmp qword [rax + 0x18], 0	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4003295	            0x7437	                            je 0x40032ce	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4003297	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400329b	          0x8b4020	            mov eax, dword [rax + 0x20] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400329e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032a2	        0x488d7201	                      lea rsi, [rdx + 1]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032a6	        0x48897328	             mov qword [rbx + 0x28], rsi	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032aa	          0x880411	                mov byte [rcx + rdx], al	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032ad	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032b1	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032b5	        0x488d4201	                      lea rax, [rdx + 1]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032b9	        0x48894328	             mov qword [rbx + 0x28], rax	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032bd	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032c1	          0x8b4020	            mov eax, dword [rax + 0x20] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032c4	          0xc1e808	                              shr eax, 8	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032c7	          0x880411	                mov byte [rcx + rdx], al	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032ca	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40032ce	        0x448b4044	            mov r8d, dword [rax + 0x44] 	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x40032d2	          0x4585c0	                           test r8d, r8d	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x40032d5	     0xf85e2050000	                           jne 0x40038bd	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x40032db	    0x48c743400000	               mov qword [rbx + 0x40], 0	       896	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x40032e3	    0xc74308450000	               mov dword [rbx + 8], 0x45	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x40032ea	      0xe915f9ffff	                           jmp 0x4002c04	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x40032ef	              0x90	                                     nop	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x40032f0	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40032f4	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x40032f8	          0x4589ef	                          mov r15d, r13d	       741	deflate.c	FUNCTION_12
0x40032fb	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x40032fe	      0xe800000000	                          call 0x4003303	        53	string3.h	FUNCTION_25	CALL_3
0x4003303	        0x4c017d18	            add qword [rbp + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x4003307	        0x4d017e20	            add qword [r14 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x400330b	        0x4c017d28	            add qword [rbp + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x400330f	        0x44296d20	            sub dword [rbp + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x4003313	        0x4d297e28	             sub qword [r14 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x4003317	     0xf8544f8ffff	                           jne 0x4002b61	       747	deflate.c	FUNCTION_12
0x400331d	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4003321	        0x49894620	             mov qword [r14 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4003325	      0xe937f8ffff	                           jmp 0x4002b61	       748	deflate.c	FUNCTION_12
0x400332a	    0x660f1f440000	                    nop word [rax + rax]	       748	deflate.c	FUNCTION_12
0x4003330	     0xfb605000000	           movzx eax, byte [0x04003337] 	       748	deflate.c	FUNCTION_12
0x4003337	        0x4c8d2c83	                  lea r13, [rbx + rax*4]	       748	deflate.c	FUNCTION_12
0x400333b	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       748	deflate.c	FUNCTION_12
0x4003341	      0xe99a000000	                           jmp 0x40033e0	       748	deflate.c	FUNCTION_12
0x4003346	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       748	deflate.c	FUNCTION_12
0x4003350	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      2079	deflate.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400335a	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4003360	        0x488b7360	            mov rsi, qword [rbx + 0x60] 	      2081	deflate.c	FUNCTION_23	FOR_1
0x4003364	            0x85c9	                           test ecx, ecx	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4003366	     0xf85d4000000	                           jne 0x4003440	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400336c	            0x31c9	                            xor ecx, ecx	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400336e	         0xfb6040e	             movzx eax, byte [rsi + rcx]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4003372	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4003378	          0x4531d2	                          xor r10d, r10d	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400337b	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4003382	      0x664489144e	            mov word [rsi + rcx*2], r10w	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4003387	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400338e	          0x4889ca	                            mov rdx, rcx	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4003391	          0x83c201	                              add edx, 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4003394	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400339a	          0x88040e	                mov byte [rsi + rcx], al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400339d	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40033a6	            0x31c9	                            xor ecx, ecx	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40033a8	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40033ae	    0x8bbbac000000	            mov edi, dword [rbx + 0xac] 	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40033b4	          0x83e801	                              sub eax, 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40033b7	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40033bd	          0x8d5701	                      lea edx, [rdi + 1]	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40033c0	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40033c6	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40033cc	           0xf94c1	                                 sete cl	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40033cf	          0x83e801	                              sub eax, 1	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40033d2	            0x85c9	                           test ecx, ecx	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40033d4	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40033da	     0xf85c6010000	                           jne 0x40035a6	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40033e0	      0x3d02010000	                          cmp eax, 0x102	      2070	deflate.c	FUNCTION_23	FOR_1
0x40033e5	     0xf8765ffffff	                            ja 0x4003350	      2070	deflate.c	FUNCTION_23	FOR_1
0x40033eb	          0x4889df	                            mov rdi, rbx	      2071	deflate.c	FUNCTION_23	FOR_1
0x40033ee	      0xe87dceffff	                    call sym.fill_window	      2071	deflate.c	FUNCTION_23	FOR_1
0x40033f3	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2072	deflate.c	FUNCTION_23	FOR_1
0x40033f9	      0x3d02010000	                          cmp eax, 0x102	      2072	deflate.c	FUNCTION_23	FOR_1
0x40033fe	     0xf874cffffff	                            ja 0x4003350	      2072	deflate.c	FUNCTION_23	FOR_1
0x4003404	      0x448b642414	           mov r12d, dword [rsp + 0x14] 	      2072	deflate.c	FUNCTION_23	FOR_1
0x4003409	          0x4585e4	                         test r12d, r12d	      2072	deflate.c	FUNCTION_23	FOR_1
0x400340c	     0xf84a8f5ffff	                            je 0x40029ba	      2072	deflate.c	FUNCTION_23	FOR_1
0x4003412	            0x85c0	                           test eax, eax	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4003414	     0xf84a4030000	                            je 0x40037be	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x400341a	          0x83f802	                              cmp eax, 2	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400341d	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      2079	deflate.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4003427	     0xf872dffffff	                            ja 0x400335a	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400342d	        0x488b7360	            mov rsi, qword [rbx + 0x60] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4003431	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4003437	      0xe932ffffff	                           jmp 0x400336e	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400343c	         0xf1f4000	                         nop dword [rax]	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4003440	      0x488d540eff	                lea rdx, [rsi + rcx - 1]	      2081	deflate.c	FUNCTION_23	FOR_1
0x4003445	        0x440fb61a	                  movzx r11d, byte [rdx]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4003449	           0xfb63a	                   movzx edi, byte [rdx]	      2083	deflate.c	FUNCTION_23	FOR_1
0x400344c	        0x44385a01	                cmp byte [rdx + 1], r11b	      2083	deflate.c	FUNCTION_23	FOR_1
0x4003450	     0xf8518ffffff	                           jne 0x400336e	      2083	deflate.c	FUNCTION_23	FOR_1
0x4003456	      0x440fb64202	               movzx r8d, byte [rdx + 2]	      2083	deflate.c	FUNCTION_23	FOR_1
0x400345b	          0x4439c7	                            cmp edi, r8d	      2083	deflate.c	FUNCTION_23	FOR_1
0x400345e	     0xf850affffff	                           jne 0x400336e	      2083	deflate.c	FUNCTION_23	FOR_1
0x4003464	      0x440fb64203	               movzx r8d, byte [rdx + 3]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4003469	          0x4439c7	                            cmp edi, r8d	      2083	deflate.c	FUNCTION_23	FOR_1
0x400346c	     0xf85fcfeffff	                           jne 0x400336e	      2083	deflate.c	FUNCTION_23	FOR_1
0x4003472	        0x4883c203	                              add rdx, 3	      2083	deflate.c	FUNCTION_23	FOR_1
0x4003476	    0x4c8d8c0e0201	            lea r9, [rsi + rcx + 0x102] 	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400347e	            0xeb66	                           jmp 0x40034e6	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003480	      0x440fb64202	               movzx r8d, byte [rdx + 2]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003485	          0x4439c7	                            cmp edi, r8d	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003488	     0xf8528080000	                           jne 0x4003cb6	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400348e	      0x440fb64203	               movzx r8d, byte [rdx + 3]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003493	          0x4439c7	                            cmp edi, r8d	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003496	     0xf8511080000	                           jne 0x4003cad	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400349c	      0x440fb64204	               movzx r8d, byte [rdx + 4]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034a1	          0x4439c7	                            cmp edi, r8d	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034a4	     0xf85fa070000	                           jne 0x4003ca4	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034aa	      0x440fb64205	               movzx r8d, byte [rdx + 5]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034af	          0x4439c7	                            cmp edi, r8d	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034b2	     0xf8519080000	                           jne 0x4003cd1	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034b8	      0x440fb64206	               movzx r8d, byte [rdx + 6]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034bd	          0x4439c7	                            cmp edi, r8d	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034c0	     0xf8502080000	                           jne 0x4003cc8	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034c6	      0x440fb64207	               movzx r8d, byte [rdx + 7]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034cb	          0x4439c7	                            cmp edi, r8d	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034ce	     0xf85eb070000	                           jne 0x4003cbf	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034d4	        0x4883c208	                              add rdx, 8	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034d8	        0x440fb602	                   movzx r8d, byte [rdx]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034dc	          0x4139f8	                            cmp r8d, edi	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034df	            0x7513	                           jne 0x40034f4	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034e1	          0x4939d1	                             cmp r9, rdx	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034e4	            0x760e	                           jbe 0x40034f4	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034e6	      0x440fb64201	               movzx r8d, byte [rdx + 1]	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034eb	          0x4439c7	                            cmp edi, r8d	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034ee	            0x7490	                            je 0x4003480	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034f0	        0x4883c201	                              add rdx, 1	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40034f4	          0x4429ca	                            sub edx, r9d	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034f7	    0x81c202010000	                          add edx, 0x102	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034fd	            0x39c2	                            cmp edx, eax	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40034ff	    0x8993a0000000	             mov dword [rbx + 0xa0], edx	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003505	     0xf8668060000	                           jbe 0x4003b73	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400350b	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003511	            0x89c2	                            mov edx, eax	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003513	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003519	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003520	    0x41bb01000000	                             mov r11d, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003526	          0x8d42fd	                      lea eax, [rdx - 3]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003529	      0x6644891c4e	            mov word [rsi + rcx*2], r11w	      2102	deflate.c	FUNCTION_23	FOR_1
0x400352e	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003535	          0x4889ca	                            mov rdx, rcx	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003538	          0x83c201	                              add edx, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x400353b	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003541	          0x88040e	                mov byte [rsi + rcx], al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003544	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003547	            0x31c9	                            xor ecx, ecx	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003549	     0xfb680000000	                   movzx eax, byte [rax]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003550	    0x66838483d804	       add word [rbx + rax*4 + 0x4d8], 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003559	    0x66418385c809	               add word [r13 + 0x9c8], 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003562	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003568	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400356e	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      2106	deflate.c	FUNCTION_23	FOR_1	IF_7	CALL_3
0x4003578	          0x83e801	                              sub eax, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x400357b	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4003581	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4003587	           0xf94c1	                                 sete cl	      2102	deflate.c	FUNCTION_23	FOR_1
0x400358a	            0x29d0	                            sub eax, edx	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400358c	     0x393ac000000	             add edx, dword [rbx + 0xac]	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4003592	            0x85c9	                           test ecx, ecx	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4003594	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400359a	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40035a0	     0xf843afeffff	                            je 0x40033e0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035a6	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035ad	            0x31f6	                            xor esi, esi	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035af	          0x4829c2	                            sub rdx, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035b2	          0x4885c0	                           test rax, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035b5	            0x7809	                            js 0x40035c0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035b7	            0x89c0	                            mov eax, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035b9	        0x48034360	             add rax, qword [rbx + 0x60]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035bd	          0x4889c6	                            mov rsi, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035c0	            0x31c9	                            xor ecx, ecx	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035c2	          0x4889df	                            mov rdi, rbx	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035c5	      0xe800000000	                          call 0x40035ca	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035ca	          0x4c8b3b	                    mov r15, qword [rbx]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035cd	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035d3	        0x498b4f38	            mov rcx, qword [r15 + 0x38] 	       734	deflate.c	
0x40035d7	    0x488983980000	             mov qword [rbx + 0x98], rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40035de	          0x4889cf	                            mov rdi, rcx	       736	deflate.c	FUNCTION_12
0x40035e1	      0x48894c2408	                mov qword [rsp + 8], rcx	       736	deflate.c	FUNCTION_12
0x40035e6	      0xe800000000	                          call 0x40035eb	       736	deflate.c	FUNCTION_12
0x40035eb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       737	deflate.c	FUNCTION_12
0x40035f0	        0x458b7720	           mov r14d, dword [r15 + 0x20] 	       738	deflate.c	FUNCTION_12
0x40035f4	        0x488b4128	            mov rax, qword [rcx + 0x28] 	       737	deflate.c	FUNCTION_12
0x40035f8	          0x4439f0	                           cmp eax, r14d	       737	deflate.c	FUNCTION_12
0x40035fb	        0x440f46f0	                        cmovbe r14d, eax	       737	deflate.c	FUNCTION_12
0x40035ff	          0x4585f6	                         test r14d, r14d	       739	deflate.c	FUNCTION_12
0x4003602	            0x7564	                           jne 0x4003668	       739	deflate.c	FUNCTION_12
0x4003604	          0x488b03	                    mov rax, qword [rbx]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4003607	        0x448b4820	            mov r9d, dword [rax + 0x20] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400360b	          0x4585c9	                           test r9d, r9d	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400360e	     0xf8527fdffff	                           jne 0x400333b	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4003614	      0xe9a1f3ffff	                           jmp 0x40029ba	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4003619	     0xf1f80000000	                         nop dword [rax]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4003620	    0x8b93c4000000	            mov edx, dword [rbx + 0xc4] 	       819	deflate.c	FUNCTION_13	IF_8
0x4003626	          0x83fa01	                              cmp edx, 1	       819	deflate.c	FUNCTION_13	IF_8
0x4003629	     0xf8e2cf4ffff	                           jle 0x4002a5b	       819	deflate.c	FUNCTION_13	IF_8
0x400362f	          0x83fa05	                              cmp edx, 5	       821	deflate.c	FUNCTION_13	IF_8
0x4003632	      0xb840000000	                           mov eax, 0x40	       821	deflate.c	FUNCTION_13	IF_8
0x4003637	     0xf8e1ef4ffff	                           jle 0x4002a5b	       821	deflate.c	FUNCTION_13	IF_8
0x400363d	          0x83fa06	                              cmp edx, 6	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4003640	      0xb8c0000000	                           mov eax, 0xc0	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4003645	      0xba80000000	                           mov edx, 0x80	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x400364a	           0xf44c2	                          cmove eax, edx	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x400364d	      0xe909f4ffff	                           jmp 0x4002a5b	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4003652	    0x660f1f440000	                    nop word [rax + rax]	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4003658	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x400365c	      0xe94ef7ffff	                           jmp 0x4002daf	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4003661	     0xf1f80000000	                         nop dword [rax]	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4003668	        0x488b7120	            mov rsi, qword [rcx + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x400366c	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003670	          0x4589f0	                           mov r8d, r14d	       741	deflate.c	FUNCTION_12
0x4003673	          0x4c89c2	                             mov rdx, r8	        53	string3.h	FUNCTION_25	CALL_3
0x4003676	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x400367b	      0x4c89442408	                 mov qword [rsp + 8], r8	        53	string3.h	FUNCTION_25	CALL_3
0x4003680	      0xe800000000	                          call 0x4003685	        53	string3.h	FUNCTION_25	CALL_3
0x4003685	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       743	deflate.c	FUNCTION_12	IF_2
0x400368a	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       742	deflate.c	FUNCTION_12	IF_1
0x400368f	        0x4d014718	              add qword [r15 + 0x18], r8	       742	deflate.c	FUNCTION_12	IF_1
0x4003693	        0x4c014120	              add qword [rcx + 0x20], r8	       743	deflate.c	FUNCTION_12	IF_2
0x4003697	        0x4d014728	              add qword [r15 + 0x28], r8	       744	deflate.c	FUNCTION_12
0x400369b	        0x45297720	            sub dword [r15 + 0x20], r14d	       745	deflate.c	FUNCTION_12	CALL_2
0x400369f	        0x4c294128	              sub qword [rcx + 0x28], r8	       747	deflate.c	FUNCTION_12
0x40036a3	     0xf855bffffff	                           jne 0x4003604	       747	deflate.c	FUNCTION_12
0x40036a9	        0x488b4110	            mov rax, qword [rcx + 0x10] 	       748	deflate.c	FUNCTION_12
0x40036ad	        0x48894120	             mov qword [rcx + 0x20], rax	       748	deflate.c	FUNCTION_12
0x40036b1	      0xe94effffff	                           jmp 0x4003604	       748	deflate.c	FUNCTION_12
0x40036b6	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40036ba	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x40036be	          0x4589e6	                          mov r14d, r12d	       741	deflate.c	FUNCTION_12
0x40036c1	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x40036c4	      0xe800000000	                          call 0x40036c9	        53	string3.h	FUNCTION_25	CALL_3
0x40036c9	        0x4c017518	            add qword [rbp + 0x18], r14 	       742	deflate.c	FUNCTION_12	IF_1
0x40036cd	        0x4d017520	            add qword [r13 + 0x20], r14 	       743	deflate.c	FUNCTION_12	IF_2
0x40036d1	        0x4c017528	            add qword [rbp + 0x28], r14 	       744	deflate.c	FUNCTION_12
0x40036d5	        0x44296520	            sub dword [rbp + 0x20], r12d	       745	deflate.c	FUNCTION_12	CALL_2
0x40036d9	        0x4d297528	             sub qword [r13 + 0x28], r14	       747	deflate.c	FUNCTION_12
0x40036dd	     0xf85eef0ffff	                           jne 0x40027d1	       747	deflate.c	FUNCTION_12
0x40036e3	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       748	deflate.c	FUNCTION_12
0x40036e7	        0x49894520	             mov qword [r13 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x40036eb	      0xe9e1f0ffff	                           jmp 0x40027d1	       748	deflate.c	FUNCTION_12
0x40036f0	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40036f4	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x40036f8	          0x4589ef	                          mov r15d, r13d	       741	deflate.c	FUNCTION_12
0x40036fb	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x40036fe	      0xe800000000	                          call 0x4003703	        53	string3.h	FUNCTION_25	CALL_3
0x4003703	        0x4c017d18	            add qword [rbp + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x4003707	        0x4d017e20	            add qword [r14 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x400370b	        0x4c017d28	            add qword [rbp + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x400370f	        0x44296d20	            sub dword [rbp + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x4003713	        0x4d297e28	             sub qword [r14 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x4003717	     0xf85edf8ffff	                           jne 0x400300a	       747	deflate.c	FUNCTION_12
0x400371d	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4003721	        0x49894620	             mov qword [r14 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4003725	      0xe9e0f8ffff	                           jmp 0x400300a	       748	deflate.c	FUNCTION_12
0x400372a	          0x4889df	                            mov rdi, rbx	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x400372d	      0xe800000000	                          call 0x4003732	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x4003732	      0xe96ff4ffff	                           jmp 0x4002ba6	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x4003737	    0x660f1f840000	                    nop word [rax + rax]	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x4003740	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003744	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003748	          0x4589ef	                          mov r15d, r13d	       741	deflate.c	FUNCTION_12
0x400374b	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x400374e	      0xe800000000	                          call 0x4003753	        53	string3.h	FUNCTION_25	CALL_3
0x4003753	        0x4c017d18	            add qword [rbp + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x4003757	        0x4d017e20	            add qword [r14 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x400375b	        0x4c017d28	            add qword [rbp + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x400375f	        0x44296d20	            sub dword [rbp + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x4003763	        0x4d297e28	             sub qword [r14 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x4003767	     0xf8512f9ffff	                           jne 0x400307f	       747	deflate.c	FUNCTION_12
0x400376d	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4003771	        0x49894620	             mov qword [r14 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4003775	      0xe905f9ffff	                           jmp 0x400307f	       748	deflate.c	FUNCTION_12
0x400377a	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x400377e	        0x498b7720	            mov rsi, qword [r15 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003782	          0x4489e9	                           mov ecx, r13d	       741	deflate.c	FUNCTION_12
0x4003785	          0x4889ca	                            mov rdx, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4003788	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x400378d	      0xe800000000	                          call 0x4003792	        53	string3.h	FUNCTION_25	CALL_3
0x4003792	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       742	deflate.c	FUNCTION_12	IF_1
0x4003797	        0x49014e18	            add qword [r14 + 0x18], rcx 	       742	deflate.c	FUNCTION_12	IF_1
0x400379b	        0x49014f20	            add qword [r15 + 0x20], rcx 	       743	deflate.c	FUNCTION_12	IF_2
0x400379f	        0x49014e28	            add qword [r14 + 0x28], rcx 	       744	deflate.c	FUNCTION_12
0x40037a3	        0x45296e20	            sub dword [r14 + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x40037a7	        0x49294f28	             sub qword [r15 + 0x28], rcx	       747	deflate.c	FUNCTION_12
0x40037ab	     0xf8597f0ffff	                           jne 0x4002848	       747	deflate.c	FUNCTION_12
0x40037b1	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       748	deflate.c	FUNCTION_12
0x40037b5	        0x49894720	             mov qword [r15 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x40037b9	      0xe98af0ffff	                           jmp 0x4002848	       748	deflate.c	FUNCTION_12
0x40037be	      0x837c241404	               cmp dword [rsp + 0x14], 4	      2117	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40037c3	    0xc7832c170000	            mov dword [rbx + 0x172c], 0 	      2116	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40037cd	     0xf8437020000	                            je 0x4003a0a	      2117	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40037d3	    0x448b830c1700	          mov r8d, dword [rbx + 0x170c] 	      2121	deflate.c	FUNCTION_23	IF_9
0x40037da	          0x4585c0	                           test r8d, r8d	      2121	deflate.c	FUNCTION_23	IF_9
0x40037dd	     0xf8495f3ffff	                            je 0x4002b78	      2121	deflate.c	FUNCTION_23	IF_9
0x40037e3	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2122	deflate.c	FUNCTION_23	IF_9
0x40037e9	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2122	deflate.c	FUNCTION_23	IF_9
0x40037f0	            0x31f6	                            xor esi, esi	      2122	deflate.c	FUNCTION_23	IF_9
0x40037f2	          0x4829c2	                            sub rdx, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x40037f5	          0x4885c0	                           test rax, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x40037f8	            0x7809	                            js 0x4003803	      2122	deflate.c	FUNCTION_23	IF_9
0x40037fa	            0x89c0	                            mov eax, eax	      2122	deflate.c	FUNCTION_23	IF_9
0x40037fc	        0x48034360	             add rax, qword [rbx + 0x60]	      2122	deflate.c	FUNCTION_23	IF_9
0x4003800	          0x4889c6	                            mov rsi, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4003803	            0x31c9	                            xor ecx, ecx	      2122	deflate.c	FUNCTION_23	IF_9
0x4003805	          0x4889df	                            mov rdi, rbx	      2122	deflate.c	FUNCTION_23	IF_9
0x4003808	      0xe800000000	                          call 0x400380d	      2122	deflate.c	FUNCTION_23	IF_9
0x400380d	          0x4c8b3b	                    mov r15, qword [rbx]	      2122	deflate.c	FUNCTION_23	IF_9
0x4003810	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2122	deflate.c	FUNCTION_23	IF_9
0x4003816	        0x4d8b7738	            mov r14, qword [r15 + 0x38] 	       734	deflate.c	
0x400381a	    0x488983980000	             mov qword [rbx + 0x98], rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4003821	          0x4c89f7	                            mov rdi, r14	       736	deflate.c	FUNCTION_12
0x4003824	      0xe800000000	                          call 0x4003829	       736	deflate.c	FUNCTION_12
0x4003829	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       737	deflate.c	FUNCTION_12
0x400382d	        0x458b6f20	           mov r13d, dword [r15 + 0x20] 	       738	deflate.c	FUNCTION_12
0x4003831	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4003834	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x4003838	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x400383b	     0xf844df1ffff	                            je 0x400298e	       739	deflate.c	FUNCTION_12
0x4003841	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003845	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003849	          0x4489e9	                           mov ecx, r13d	       741	deflate.c	FUNCTION_12
0x400384c	          0x4889ca	                            mov rdx, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x400384f	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4003854	      0xe800000000	                          call 0x4003859	        53	string3.h	FUNCTION_25	CALL_3
0x4003859	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       742	deflate.c	FUNCTION_12	IF_1
0x400385e	        0x49014f18	            add qword [r15 + 0x18], rcx 	       742	deflate.c	FUNCTION_12	IF_1
0x4003862	        0x49014e20	            add qword [r14 + 0x20], rcx 	       743	deflate.c	FUNCTION_12	IF_2
0x4003866	        0x49014f28	            add qword [r15 + 0x28], rcx 	       744	deflate.c	FUNCTION_12
0x400386a	        0x45296f20	            sub dword [r15 + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x400386e	        0x49294e28	             sub qword [r14 + 0x28], rcx	       747	deflate.c	FUNCTION_12
0x4003872	     0xf8516f1ffff	                           jne 0x400298e	       747	deflate.c	FUNCTION_12
0x4003878	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x400387c	        0x49894620	             mov qword [r14 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4003880	      0xe909f1ffff	                           jmp 0x400298e	       748	deflate.c	FUNCTION_12
0x4003885	      0xb8feffffff	                     mov eax, 0xfffffffe	       771	deflate.c	FUNCTION_13
0x400388a	      0xe9d5ecffff	                           jmp 0x4002564	       771	deflate.c	FUNCTION_13
0x400388f	    0x488b05000000	            mov rax, qword [0x04003896] 	       780	deflate.c	FUNCTION_13	IF_2
0x4003896	        0x48894730	             mov qword [rdi + 0x30], rax	       780	deflate.c	FUNCTION_13	IF_2
0x400389a	      0xb8fbffffff	                     mov eax, 0xfffffffb	       780	deflate.c	FUNCTION_13	IF_2
0x400389f	      0xe9c0ecffff	                           jmp 0x4002564	       780	deflate.c	FUNCTION_13	IF_2
0x40038a4	         0xf1f4000	                         nop dword [rax]	       780	deflate.c	FUNCTION_13	IF_2
0x40038a8	    0x488b05000000	            mov rax, qword [0x040038af] 	       778	deflate.c	FUNCTION_13
0x40038af	        0x48894730	             mov qword [rdi + 0x30], rax	       778	deflate.c	FUNCTION_13
0x40038b3	      0xb8feffffff	                     mov eax, 0xfffffffe	       778	deflate.c	FUNCTION_13
0x40038b8	      0xe9a7ecffff	                           jmp 0x4002564	       778	deflate.c	FUNCTION_13
0x40038bd	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038c1	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038c5	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038c8	      0xe800000000	                          call 0x40038cd	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038cd	        0x48894560	            mov qword [rbp + 0x60], rax 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038d1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038d5	      0xe901faffff	                           jmp 0x40032db	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038da	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038de	      0xe9e4f5ffff	                           jmp 0x4002ec7	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038e3	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038e7	      0xe9e3f6ffff	                           jmp 0x4002fcf	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x40038ec	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1052	deflate.c	FUNCTION_13
0x40038f0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1052	deflate.c	FUNCTION_13
0x40038f4	        0x488d4801	                      lea rcx, [rax + 1]	      1052	deflate.c	FUNCTION_13
0x40038f8	        0x48894b28	             mov qword [rbx + 0x28], rcx	      1052	deflate.c	FUNCTION_13
0x40038fc	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	      1052	deflate.c	FUNCTION_13
0x4003900	          0x880c02	                mov byte [rdx + rax], cl	      1052	deflate.c	FUNCTION_13
0x4003903	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1053	deflate.c	FUNCTION_13
0x4003907	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1053	deflate.c	FUNCTION_13
0x400390b	        0x488d4201	                      lea rax, [rdx + 1]	      1053	deflate.c	FUNCTION_13
0x400390f	        0x48894328	             mov qword [rbx + 0x28], rax	      1053	deflate.c	FUNCTION_13
0x4003913	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1053	deflate.c	FUNCTION_13
0x4003917	        0x48c1e808	                              shr rax, 8	      1053	deflate.c	FUNCTION_13
0x400391b	          0x880411	                mov byte [rcx + rdx], al	      1053	deflate.c	FUNCTION_13
0x400391e	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1054	deflate.c	FUNCTION_13
0x4003922	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1054	deflate.c	FUNCTION_13
0x4003926	        0x488d4201	                      lea rax, [rdx + 1]	      1054	deflate.c	FUNCTION_13
0x400392a	        0x48894328	             mov qword [rbx + 0x28], rax	      1054	deflate.c	FUNCTION_13
0x400392e	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1054	deflate.c	FUNCTION_13
0x4003932	        0x48c1e810	                           shr rax, 0x10	      1054	deflate.c	FUNCTION_13
0x4003936	          0x880411	                mov byte [rcx + rdx], al	      1054	deflate.c	FUNCTION_13
0x4003939	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1055	deflate.c	FUNCTION_13	IF_48
0x400393d	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1055	deflate.c	FUNCTION_13	IF_48
0x4003941	        0x488d4201	                      lea rax, [rdx + 1]	      1055	deflate.c	FUNCTION_13	IF_48
0x4003945	        0x48894328	             mov qword [rbx + 0x28], rax	      1055	deflate.c	FUNCTION_13	IF_48
0x4003949	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1055	deflate.c	FUNCTION_13	IF_48
0x400394d	        0x48c1e818	                           shr rax, 0x18	      1055	deflate.c	FUNCTION_13	IF_48
0x4003951	          0x880411	                mov byte [rcx + rdx], al	      1055	deflate.c	FUNCTION_13	IF_48
0x4003954	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4003958	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x400395c	        0x488d4801	                      lea rcx, [rax + 1]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4003960	        0x48894b28	             mov qword [rbx + 0x28], rcx	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4003964	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4003968	          0x880c02	                mov byte [rdx + rax], cl	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x400396b	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x400396f	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4003973	        0x488d4201	                      lea rax, [rdx + 1]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4003977	        0x48894328	             mov qword [rbx + 0x28], rax	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x400397b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x400397f	        0x48c1e808	                              shr rax, 8	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4003983	          0x880411	                mov byte [rcx + rdx], al	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4003986	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x400398a	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x400398e	        0x488d4201	                      lea rax, [rdx + 1]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4003992	        0x48894328	             mov qword [rbx + 0x28], rax	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4003996	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x400399a	        0x48c1e810	                           shr rax, 0x10	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x400399e	          0x880411	                mov byte [rcx + rdx], al	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x40039a1	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x40039a5	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x40039a9	        0x488d4201	                      lea rax, [rdx + 1]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x40039ad	        0x48894328	             mov qword [rbx + 0x28], rax	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x40039b1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x40039b5	        0x48c1e818	                           shr rax, 0x18	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x40039b9	          0x880411	                mov byte [rcx + rdx], al	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x40039bc	      0xe9ecedffff	                           jmp 0x40027ad	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x40039c1	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40039c5	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x40039c9	          0x4589ef	                          mov r15d, r13d	       741	deflate.c	FUNCTION_12
0x40039cc	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x40039cf	      0xe800000000	                          call 0x40039d4	        53	string3.h	FUNCTION_25	CALL_3
0x40039d4	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       745	deflate.c	FUNCTION_12	CALL_2
0x40039d7	        0x4c017d18	            add qword [rbp + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x40039db	        0x4d017e20	            add qword [r14 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x40039df	        0x4c017d28	            add qword [rbp + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x40039e3	          0x4429e8	                           sub eax, r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x40039e6	          0x894520	            mov dword [rbp + 0x20], eax 	       745	deflate.c	FUNCTION_12	CALL_2
0x40039e9	        0x4d297e28	             sub qword [r14 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x40039ed	     0xf85d8f1ffff	                           jne 0x4002bcb	       747	deflate.c	FUNCTION_12
0x40039f3	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       748	deflate.c	FUNCTION_12
0x40039f7	        0x49895620	             mov qword [r14 + 0x20], rdx	       748	deflate.c	FUNCTION_12
0x40039fb	      0xe9cbf1ffff	                           jmp 0x4002bcb	       748	deflate.c	FUNCTION_12
0x4003a00	      0xb801000000	                              mov eax, 1	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4003a05	      0xe95aebffff	                           jmp 0x4002564	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4003a0a	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a10	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a17	            0x31f6	                            xor esi, esi	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a19	          0x4829c2	                            sub rdx, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a1c	          0x4885c0	                           test rax, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a1f	            0x7809	                            js 0x4003a2a	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a21	            0x89c0	                            mov eax, eax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a23	        0x48034360	             add rax, qword [rbx + 0x60]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a27	          0x4889c6	                            mov rsi, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a2a	      0xb901000000	                              mov ecx, 1	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a2f	          0x4889df	                            mov rdi, rbx	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a32	      0xe800000000	                          call 0x4003a37	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a37	          0x4c8b33	                    mov r14, qword [rbx]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a3a	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a40	        0x4d8b6e38	            mov r13, qword [r14 + 0x38] 	       734	deflate.c	
0x4003a44	    0x488983980000	             mov qword [rbx + 0x98], rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4003a4b	          0x4c89ef	                            mov rdi, r13	       736	deflate.c	FUNCTION_12
0x4003a4e	      0xe800000000	                          call 0x4003a53	       736	deflate.c	FUNCTION_12
0x4003a53	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4003a57	        0x458b7e20	           mov r15d, dword [r14 + 0x20] 	       738	deflate.c	FUNCTION_12
0x4003a5b	          0x4439f8	                           cmp eax, r15d	       738	deflate.c	FUNCTION_12
0x4003a5e	        0x440f46f8	                        cmovbe r15d, eax	       738	deflate.c	FUNCTION_12
0x4003a62	          0x4585ff	                         test r15d, r15d	       739	deflate.c	FUNCTION_12
0x4003a65	     0xf851d010000	                           jne 0x4003b88	       739	deflate.c	FUNCTION_12
0x4003a6b	          0x488b03	                    mov rax, qword [rbx]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4003a6e	        0x448b7020	           mov r14d, dword [rax + 0x20] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4003a72	      0xb801000000	                              mov eax, 1	       771	deflate.c	FUNCTION_13
0x4003a77	          0x4585f6	                         test r14d, r14d	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4003a7a	     0xf852befffff	                           jne 0x40029ab	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4003a80	            0x31c0	                            xor eax, eax	       771	deflate.c	FUNCTION_13
0x4003a82	      0xe924efffff	                           jmp 0x40029ab	       771	deflate.c	FUNCTION_13
0x4003a87	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4003a8b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4003a8f	        0x488d4801	                      lea rcx, [rax + 1]	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4003a93	        0x48894b28	             mov qword [rbx + 0x28], rcx	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4003a97	        0xc6040200	                 mov byte [rdx + rax], 0	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4003a9b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4003a9f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4003aa3	        0x488d4801	                      lea rcx, [rax + 1]	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4003aa7	        0x48894b28	             mov qword [rbx + 0x28], rcx	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4003aab	        0xc6040200	                 mov byte [rdx + rax], 0	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4003aaf	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4003ab3	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4003ab7	        0x488d4801	                      lea rcx, [rax + 1]	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4003abb	        0x48894b28	             mov qword [rbx + 0x28], rcx	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4003abf	        0xc6040200	                 mov byte [rdx + rax], 0	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4003ac3	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003ac7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003acb	        0x488d4801	                      lea rcx, [rax + 1]	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003acf	        0x48894b28	             mov qword [rbx + 0x28], rcx	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003ad3	        0xc6040200	                 mov byte [rdx + rax], 0	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003ad7	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4003adb	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4003adf	        0x488d4801	                      lea rcx, [rax + 1]	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4003ae3	        0x48894b28	             mov qword [rbx + 0x28], rcx	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4003ae7	        0xc6040200	                 mov byte [rdx + rax], 0	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4003aeb	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003aef	    0x8b8bc4000000	            mov ecx, dword [rbx + 0xc4] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003af5	        0x488d5001	                      lea rdx, [rax + 1]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003af9	        0x48034310	             add rax, qword [rbx + 0x10]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003afd	          0x83f909	                              cmp ecx, 9	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b00	        0x48895328	             mov qword [rbx + 0x28], rdx	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b04	      0xba02000000	                              mov edx, 2	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b09	            0x7418	                            je 0x4003b23	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b0b	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b12	     0xf8f82010000	                            jg 0x4003c9a	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b18	            0x31d2	                            xor edx, edx	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b1a	          0x83f901	                              cmp ecx, 1	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b1d	     0xf8e77010000	                           jle 0x4003c9a	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b23	            0x8810	                      mov byte [rax], dl	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003b25	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4003b29	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4003b2d	        0x488d4801	                      lea rcx, [rax + 1]	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4003b31	        0x48894b28	             mov qword [rbx + 0x28], rcx	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4003b35	        0xc6040203	                 mov byte [rdx + rax], 3	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4003b39	        0x4c8b6d38	            mov r13, qword [rbp + 0x38] 	       734	deflate.c	
0x4003b3d	    0xc74308710000	               mov dword [rbx + 8], 0x71	       865	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_21
0x4003b44	          0x4c89ef	                            mov rdi, r13	       736	deflate.c	FUNCTION_12
0x4003b47	      0xe800000000	                          call 0x4003b4c	       736	deflate.c	FUNCTION_12
0x4003b4c	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4003b50	        0x448b7520	           mov r14d, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4003b54	          0x4439f0	                           cmp eax, r14d	       738	deflate.c	FUNCTION_12
0x4003b57	        0x440f46f0	                        cmovbe r14d, eax	       738	deflate.c	FUNCTION_12
0x4003b5b	          0x4585f6	                         test r14d, r14d	       739	deflate.c	FUNCTION_12
0x4003b5e	            0x756c	                           jne 0x4003bcc	       739	deflate.c	FUNCTION_12
0x4003b60	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003b65	     0xf8556eeffff	                           jne 0x40029c1	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003b6b	          0x8b5308	                mov edx, dword [rbx + 8]	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003b6e	      0xe90aebffff	                           jmp 0x400267d	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4003b73	          0x83fa02	                              cmp edx, 2	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4003b76	     0xf8797f9ffff	                            ja 0x4003513	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4003b7c	      0xe9edf7ffff	                           jmp 0x400336e	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4003b81	     0xf1f80000000	                         nop dword [rax]	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4003b88	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003b8c	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003b90	          0x4489f9	                           mov ecx, r15d	       741	deflate.c	FUNCTION_12
0x4003b93	          0x4889ca	                            mov rdx, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4003b96	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4003b9b	      0xe800000000	                          call 0x4003ba0	        53	string3.h	FUNCTION_25	CALL_3
0x4003ba0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       742	deflate.c	FUNCTION_12	IF_1
0x4003ba5	        0x49014e18	            add qword [r14 + 0x18], rcx 	       742	deflate.c	FUNCTION_12	IF_1
0x4003ba9	        0x49014d20	            add qword [r13 + 0x20], rcx 	       743	deflate.c	FUNCTION_12	IF_2
0x4003bad	        0x49014e28	            add qword [r14 + 0x28], rcx 	       744	deflate.c	FUNCTION_12
0x4003bb1	        0x45297e20	            sub dword [r14 + 0x20], r15d	       745	deflate.c	FUNCTION_12	CALL_2
0x4003bb5	        0x49294d28	             sub qword [r13 + 0x28], rcx	       747	deflate.c	FUNCTION_12
0x4003bb9	     0xf85acfeffff	                           jne 0x4003a6b	       747	deflate.c	FUNCTION_12
0x4003bbf	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4003bc3	        0x49894520	             mov qword [r13 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4003bc7	      0xe99ffeffff	                           jmp 0x4003a6b	       748	deflate.c	FUNCTION_12
0x4003bcc	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003bd0	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003bd4	          0x4589f7	                          mov r15d, r14d	       741	deflate.c	FUNCTION_12
0x4003bd7	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x4003bda	      0xe800000000	                          call 0x4003bdf	        53	string3.h	FUNCTION_25	CALL_3
0x4003bdf	        0x4c017d18	            add qword [rbp + 0x18], r15 	       742	deflate.c	FUNCTION_12	IF_1
0x4003be3	        0x4d017d20	            add qword [r13 + 0x20], r15 	       743	deflate.c	FUNCTION_12	IF_2
0x4003be7	        0x4c017d28	            add qword [rbp + 0x28], r15 	       744	deflate.c	FUNCTION_12
0x4003beb	        0x44297520	            sub dword [rbp + 0x20], r14d	       745	deflate.c	FUNCTION_12	CALL_2
0x4003bef	        0x4d297d28	             sub qword [r13 + 0x28], r15	       747	deflate.c	FUNCTION_12
0x4003bf3	     0xf8567ffffff	                           jne 0x4003b60	       747	deflate.c	FUNCTION_12
0x4003bf9	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4003bfd	        0x49894520	             mov qword [r13 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4003c01	      0xe95affffff	                           jmp 0x4003b60	       748	deflate.c	FUNCTION_12
0x4003c06	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003c0a	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003c0e	          0x4489f9	                           mov ecx, r15d	       741	deflate.c	FUNCTION_12
0x4003c11	          0x4889ca	                            mov rdx, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4003c14	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4003c19	      0xe800000000	                          call 0x4003c1e	        53	string3.h	FUNCTION_25	CALL_3
0x4003c1e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       742	deflate.c	FUNCTION_12	IF_1
0x4003c23	        0x49014e18	            add qword [r14 + 0x18], rcx 	       742	deflate.c	FUNCTION_12	IF_1
0x4003c27	        0x49014d20	            add qword [r13 + 0x20], rcx 	       743	deflate.c	FUNCTION_12	IF_2
0x4003c2b	        0x49014e28	            add qword [r14 + 0x28], rcx 	       744	deflate.c	FUNCTION_12
0x4003c2f	        0x45297e20	            sub dword [r14 + 0x20], r15d	       745	deflate.c	FUNCTION_12	CALL_2
0x4003c33	        0x49294d28	             sub qword [r13 + 0x28], rcx	       747	deflate.c	FUNCTION_12
0x4003c37	     0xf8551edffff	                           jne 0x400298e	       747	deflate.c	FUNCTION_12
0x4003c3d	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4003c41	        0x49894520	             mov qword [r13 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4003c45	      0xe944edffff	                           jmp 0x400298e	       748	deflate.c	FUNCTION_12
0x4003c4a	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c50	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c54	            0x31c9	                            xor ecx, ecx	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c56	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_28	CALL_6
0x4003c58	          0x83e801	                              sub eax, 1	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c5b	        0x488d1400	                    lea rdx, [rax + rax]	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c5f	        0x66890c47	              mov word [rdi + rax*2], cx	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c63	      0xe800000000	                          call 0x4003c68	        90	string3.h	FUNCTION_28	CALL_6
0x4003c68	    0x8bb3b4000000	            mov esi, dword [rbx + 0xb4] 	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c6e	            0x85f6	                           test esi, esi	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c70	     0xf8530efffff	                           jne 0x4002ba6	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c76	    0xc783ac000000	               mov dword [rbx + 0xac], 0	      1032	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4003c80	    0x48c783980000	               mov qword [rbx + 0x98], 0	      1033	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4003c8b	    0xc7832c170000	            mov dword [rbx + 0x172c], 0 	      1034	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4003c95	      0xe90cefffff	                           jmp 0x4002ba6	      1034	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4003c9a	      0xba04000000	                              mov edx, 4	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003c9f	      0xe97ffeffff	                           jmp 0x4003b23	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4003ca4	        0x4883c204	                              add rdx, 4	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003ca8	      0xe947f8ffff	                           jmp 0x40034f4	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003cad	        0x4883c203	                              add rdx, 3	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003cb1	      0xe93ef8ffff	                           jmp 0x40034f4	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003cb6	        0x4883c202	                              add rdx, 2	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003cba	      0xe935f8ffff	                           jmp 0x40034f4	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4003cbf	        0x4883c207	                              add rdx, 7	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003cc3	      0xe92cf8ffff	                           jmp 0x40034f4	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003cc8	        0x4883c206	                              add rdx, 6	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003ccc	      0xe923f8ffff	                           jmp 0x40034f4	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003cd1	        0x4883c205	                              add rdx, 5	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4003cd5	      0xe91af8ffff	                           jmp 0x40034f4	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
deflateSetHeader	DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:IF,1:SWITCH,0:FOR,0	39
0x40020c0	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x40020c3	      0xb8feffffff	                     mov eax, 0xfffffffe	       522	deflate.c	
0x40020c8	            0x741c	                            je 0x40020e6	       357	deflate.c	
0x40020ca	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x40020cf	            0x7415	                            je 0x40020e6	       357	deflate.c	
0x40020d1	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x40020d6	            0x740e	                            je 0x40020e6	       358	deflate.c	
0x40020d8	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       360	deflate.c	FUNCTION_2
0x40020dc	          0x4885d2	                           test rdx, rdx	       361	deflate.c	FUNCTION_2	IF_1
0x40020df	            0x7405	                            je 0x40020e6	       361	deflate.c	FUNCTION_2	IF_1
0x40020e1	          0x483b3a	                    cmp rdi, qword [rdx]	       361	deflate.c	FUNCTION_2	IF_1
0x40020e4	            0x740a	                            je 0x40020f0	       361	deflate.c	FUNCTION_2	IF_1
0x40020e6	            0xf3c3	                                     ret	       525	deflate.c	FUNCTION_6	IF_1	CALL_1
0x40020e8	     0xf1f84000000	                   nop dword [rax + rax]	       525	deflate.c	FUNCTION_6	IF_1	CALL_1
0x40020f0	          0x8b4208	                mov eax, dword [rdx + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x40020f3	      0xbf01000000	                              mov edi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40020f8	          0x8d48d6	                   lea ecx, [rax - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x40020fb	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x40020fe	            0x7717	                            ja 0x4002117	       361	deflate.c	FUNCTION_2	IF_1
0x4002100	    0x48bf01800088	          movabs rdi, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x400210a	          0x48d3ef	                             shr rdi, cl	       361	deflate.c	FUNCTION_2	IF_1
0x400210d	          0x83e701	                              and edi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002110	        0x4883f701	                              xor rdi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002114	          0x83e701	                              and edi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002117	      0x3d9a020000	                          cmp eax, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x400211c	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x400211f	          0x83f871	                           cmp eax, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x4002122	           0xf95c0	                                setne al	       369	deflate.c	FUNCTION_2	IF_2
0x4002125	            0x84c1	                             test cl, al	       369	deflate.c	FUNCTION_2	IF_2
0x4002127	            0x740a	                            je 0x4002133	       369	deflate.c	FUNCTION_2	IF_2
0x4002129	          0x4084ff	                           test dil, dil	       369	deflate.c	FUNCTION_2	IF_2
0x400212c	      0xb8feffffff	                     mov eax, 0xfffffffe	       522	deflate.c	
0x4002131	            0x75b3	                           jne 0x40020e6	       369	deflate.c	FUNCTION_2	IF_2
0x4002133	        0x837a3002	               cmp dword [rdx + 0x30], 2	       521	deflate.c	
0x4002137	      0xb8feffffff	                     mov eax, 0xfffffffe	       522	deflate.c	
0x400213c	            0x75a8	                           jne 0x40020e6	       521	deflate.c	
0x400213e	        0x48897238	             mov qword [rdx + 0x38], rsi	       523	deflate.c	
0x4002142	            0x31c0	                            xor eax, eax	       524	deflate.c	FUNCTION_6
0x4002144	              0xc3	                                     ret	       524	deflate.c	FUNCTION_6
longest_match	DO,1:ELSE,0:WHILE,0:CALL,5:functions,0:IF,2:SWITCH,0:FOR,0	138
0x4000040	            0x4157	                                push r15	      1239	deflate.c	
0x4000042	            0x4156	                                push r14	      1239	deflate.c	
0x4000044	          0x4531d2	                          xor r10d, r10d	      1239	deflate.c	
0x4000047	            0x4155	                                push r13	      1239	deflate.c	
0x4000049	            0x4154	                                push r12	      1239	deflate.c	
0x400004b	              0x55	                                push rbp	      1239	deflate.c	
0x400004c	              0x53	                                push rbx	      1239	deflate.c	
0x400004d	          0x8b5f50	            mov ebx, dword [rdi + 0x50] 	      1246	deflate.c	FUNCTION_17
0x4000050	    0x448b9fac0000	           mov r11d, dword [rdi + 0xac] 	      1241	deflate.c	
0x4000057	        0x4c8b4f60	              mov r9, qword [rdi + 0x60]	      1241	deflate.c	
0x400005b	    0x448b87b80000	            mov r8d, dword [rdi + 0xb8] 	      1244	deflate.c	FUNCTION_17
0x4000062	    0x8b8fbc000000	            mov ecx, dword [rdi + 0xbc] 	      1240	deflate.c	
0x4000068	    0x448bbfd00000	           mov r15d, dword [rdi + 0xd0] 	      1245	deflate.c	FUNCTION_17
0x400006f	    0x8dabfafeffff	                  lea ebp, [rbx - 0x106]	      1247	deflate.c	FUNCTION_17
0x4000075	        0x4f8d2419	                     lea r12, [r9 + r11]	      1241	deflate.c	
0x4000079	          0x4489c0	                            mov eax, r8d	      1244	deflate.c	FUNCTION_17
0x400007c	          0x4139eb	                           cmp r11d, ebp	      1247	deflate.c	FUNCTION_17
0x400007f	            0x760a	                           jbe 0x400008b	      1247	deflate.c	FUNCTION_17
0x4000081	    0x458d93060100	                 lea r10d, [r11 + 0x106]	      1247	deflate.c	FUNCTION_17
0x4000088	          0x4129da	                           sub r10d, ebx	      1247	deflate.c	FUNCTION_17
0x400008b	    0x4b8d94190201	            lea rdx, [r9 + r11 + 0x102] 	      1262	deflate.c	FUNCTION_17
0x4000093	    0x448bb7b40000	           mov r14d, dword [rdi + 0xb4] 	      1279	deflate.c	FUNCTION_17	IF_1
0x400009a	        0x488b6f70	            mov rbp, qword [rdi + 0x70] 	      1251	deflate.c	FUNCTION_17	CALL_2
0x400009e	          0x8b5f58	            mov ebx, dword [rdi + 0x58] 	      1252	deflate.c	FUNCTION_17
0x40000a1	      0x48895424f0	             mov qword [rsp - 0x10], rdx	      1262	deflate.c	FUNCTION_17
0x40000a6	          0x4963d0	                         movsxd rdx, r8d	      1263	deflate.c	FUNCTION_17
0x40000a9	    0x450fb66c14ff	        movzx r13d, byte [r12 + rdx - 1]	      1263	deflate.c	FUNCTION_17
0x40000af	      0x450fb61c14	            movzx r11d, byte [r12 + rdx]	      1264	deflate.c	FUNCTION_17
0x40000b4	            0x89ca	                            mov edx, ecx	      1274	deflate.c	FUNCTION_17	CALL_3
0x40000b6	          0xc1ea02	                              shr edx, 2	      1274	deflate.c	FUNCTION_17	CALL_3
0x40000b9	    0x443b87cc0000	            cmp r8d, dword [rdi + 0xcc] 	      1274	deflate.c	FUNCTION_17	CALL_3
0x40000c0	           0xf43ca	                         cmovae ecx, edx	      1274	deflate.c	FUNCTION_17	CALL_3
0x40000c3	          0x4539fe	                          cmp r14d, r15d	      1279	deflate.c	FUNCTION_17	IF_1
0x40000c6	        0x450f42fe	                        cmovb r15d, r14d	      1279	deflate.c	FUNCTION_17	IF_1
0x40000ca	            0xeb1d	                           jmp 0x40000e9	      1279	deflate.c	FUNCTION_17	IF_1
0x40000cc	         0xf1f4000	                         nop dword [rax]	      1279	deflate.c	FUNCTION_17	IF_1
0x40000d0	            0x21de	                            and esi, ebx	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x40000d2	       0xfb7747500	           movzx esi, word [rbp + rsi*2]	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x40000d7	          0x4139f2	                           cmp r10d, esi	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x40000da	     0xf832b010000	                           jae 0x400020b	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x40000e0	          0x83e901	                              sub ecx, 1	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x40000e3	     0xf8422010000	                            je 0x400020b	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x40000e9	            0x89f2	                            mov edx, esi	      1285	deflate.c	FUNCTION_17	CALL_4
0x40000eb	          0x4c63c0	                          movsxd r8, eax	      1330	deflate.c	FUNCTION_17	DO_1
0x40000ee	          0x4c01ca	                             add rdx, r9	      1285	deflate.c	FUNCTION_17	CALL_4
0x40000f1	        0x463a1c02	               cmp r11b, byte [rdx + r8]	      1330	deflate.c	FUNCTION_17	DO_1
0x40000f5	            0x75d9	                           jne 0x40000d0	      1330	deflate.c	FUNCTION_17	DO_1
0x40000f7	      0x463a6c02ff	           cmp r13b, byte [rdx + r8 - 1]	      1330	deflate.c	FUNCTION_17	DO_1
0x40000fc	            0x75d2	                           jne 0x40000d0	      1330	deflate.c	FUNCTION_17	DO_1
0x40000fe	      0x450fb60424	                   movzx r8d, byte [r12]	      1331	deflate.c	FUNCTION_17	DO_1
0x4000103	          0x443802	                     cmp byte [rdx], r8b	      1331	deflate.c	FUNCTION_17	DO_1
0x4000106	            0x75c8	                           jne 0x40000d0	      1331	deflate.c	FUNCTION_17	DO_1
0x4000108	    0x450fb6442401	               movzx r8d, byte [r12 + 1]	      1332	deflate.c	FUNCTION_17	DO_1
0x400010e	        0x44384201	                 cmp byte [rdx + 1], r8b	      1332	deflate.c	FUNCTION_17	DO_1
0x4000112	            0x75bc	                           jne 0x40000d0	      1332	deflate.c	FUNCTION_17	DO_1
0x4000114	        0x4983c402	                              add r12, 2	      1341	deflate.c	FUNCTION_17	DO_1
0x4000118	        0x4883c202	                              add rdx, 2	      1341	deflate.c	FUNCTION_17	DO_1
0x400011c	        0x894424fc	                mov dword [rsp - 4], eax	      1341	deflate.c	FUNCTION_17	DO_1
0x4000120	      0x4c8b4424f0	              mov r8, qword [rsp - 0x10]	      1341	deflate.c	FUNCTION_17	DO_1
0x4000125	      0xe97e000000	                           jmp 0x40001a8	      1341	deflate.c	FUNCTION_17	DO_1
0x400012a	    0x660f1f440000	                    nop word [rax + rax]	      1341	deflate.c	FUNCTION_17	DO_1
0x4000130	         0xfb64202	               movzx eax, byte [rdx + 2]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000134	      0x4138442402	                  cmp byte [r12 + 2], al	      1348	deflate.c	FUNCTION_17	DO_1
0x4000139	     0xf8516010000	                           jne 0x4000255	      1348	deflate.c	FUNCTION_17	DO_1
0x400013f	         0xfb64203	               movzx eax, byte [rdx + 3]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000143	      0x4138442403	                  cmp byte [r12 + 3], al	      1348	deflate.c	FUNCTION_17	DO_1
0x4000148	     0xf85fa000000	                           jne 0x4000248	      1348	deflate.c	FUNCTION_17	DO_1
0x400014e	         0xfb64204	               movzx eax, byte [rdx + 4]	      1349	deflate.c	FUNCTION_17	DO_1
0x4000152	      0x4138442404	                  cmp byte [r12 + 4], al	      1349	deflate.c	FUNCTION_17	DO_1
0x4000157	     0xf85de000000	                           jne 0x400023b	      1349	deflate.c	FUNCTION_17	DO_1
0x400015d	         0xfb64205	               movzx eax, byte [rdx + 5]	      1349	deflate.c	FUNCTION_17	DO_1
0x4000161	      0x4138442405	                  cmp byte [r12 + 5], al	      1349	deflate.c	FUNCTION_17	DO_1
0x4000166	     0xf85c5000000	                           jne 0x4000231	      1349	deflate.c	FUNCTION_17	DO_1
0x400016c	         0xfb64206	               movzx eax, byte [rdx + 6]	      1350	deflate.c	FUNCTION_17	DO_1
0x4000170	      0x4138442406	                  cmp byte [r12 + 6], al	      1350	deflate.c	FUNCTION_17	DO_1
0x4000175	     0xf85ac000000	                           jne 0x4000227	      1350	deflate.c	FUNCTION_17	DO_1
0x400017b	         0xfb64207	               movzx eax, byte [rdx + 7]	      1350	deflate.c	FUNCTION_17	DO_1
0x400017f	      0x4138442407	                  cmp byte [r12 + 7], al	      1350	deflate.c	FUNCTION_17	DO_1
0x4000184	     0xf8593000000	                           jne 0x400021d	      1350	deflate.c	FUNCTION_17	DO_1
0x400018a	        0x4883c208	                              add rdx, 8	      1350	deflate.c	FUNCTION_17	DO_1
0x400018e	        0x4983c408	                              add r12, 8	      1350	deflate.c	FUNCTION_17	DO_1
0x4000192	           0xfb602	                   movzx eax, byte [rdx]	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4000195	        0x41380424	                      cmp byte [r12], al	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4000199	     0xf85c3000000	                           jne 0x4000262	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x400019f	          0x4d39e0	                             cmp r8, r12	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40001a2	     0xf86ba000000	                           jbe 0x4000262	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40001a8	         0xfb64201	               movzx eax, byte [rdx + 1]	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40001ac	      0x4138442401	                  cmp byte [r12 + 1], al	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40001b1	     0xf8479ffffff	                            je 0x4000130	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40001b7	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40001bb	        0x4983c401	                              add r12, 1	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40001bf	      0x4c8b4424f0	              mov r8, qword [rsp - 0x10]	      1356	deflate.c	FUNCTION_17	DO_1
0x40001c4	          0x4c89c2	                             mov rdx, r8	      1356	deflate.c	FUNCTION_17	DO_1
0x40001c7	          0x4c29e2	                            sub rdx, r12	      1356	deflate.c	FUNCTION_17	DO_1
0x40001ca	    0x41bc02010000	                         mov r12d, 0x102	      1356	deflate.c	FUNCTION_17	DO_1
0x40001d0	          0x4129d4	                           sub r12d, edx	      1356	deflate.c	FUNCTION_17	DO_1
0x40001d3	          0x4489e2	                           mov edx, r12d	      1356	deflate.c	FUNCTION_17	DO_1
0x40001d6	    0x4d8da0fefeff	                   lea r12, [r8 - 0x102]	      1357	deflate.c	FUNCTION_17	DO_1
0x40001dd	            0x39d0	                            cmp eax, edx	      1361	deflate.c	FUNCTION_17	DO_1
0x40001df	     0xf8debfeffff	                           jge 0x40000d0	      1361	deflate.c	FUNCTION_17	DO_1
0x40001e5	          0x4139d7	                           cmp r15d, edx	      1364	deflate.c	FUNCTION_17	DO_1
0x40001e8	    0x89b7b0000000	             mov dword [rdi + 0xb0], esi	      1362	deflate.c	FUNCTION_17	DO_1
0x40001ee	            0x7e19	                           jle 0x4000209	      1364	deflate.c	FUNCTION_17	DO_1
0x40001f0	          0x4863c2	                         movsxd rax, edx	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x40001f3	    0x450fb66c04ff	        movzx r13d, byte [r12 + rax - 1]	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x40001f9	    0x450fb69c00fe	     movzx r11d, byte [r8 + rax - 0x102]	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000202	            0x89d0	                            mov eax, edx	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000204	      0xe9c7feffff	                           jmp 0x40000d0	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000209	            0x89d0	                            mov eax, edx	      1356	deflate.c	FUNCTION_17	DO_1
0x400020b	          0x4439f0	                           cmp eax, r14d	      1356	deflate.c	FUNCTION_17	DO_1
0x400020e	              0x5b	                                 pop rbx	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400020f	        0x410f47c6	                         cmova eax, r14d	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000213	              0x5d	                                 pop rbp	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000214	            0x415c	                                 pop r12	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000216	            0x415d	                                 pop r13	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000218	            0x415e	                                 pop r14	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400021a	            0x415f	                                 pop r15	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400021c	              0xc3	                                     ret	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400021d	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000221	        0x4983c407	                              add r12, 7	      1350	deflate.c	FUNCTION_17	DO_1
0x4000225	            0xeb98	                           jmp 0x40001bf	      1350	deflate.c	FUNCTION_17	DO_1
0x4000227	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1350	deflate.c	FUNCTION_17	DO_1
0x400022b	        0x4983c406	                              add r12, 6	      1350	deflate.c	FUNCTION_17	DO_1
0x400022f	            0xeb8e	                           jmp 0x40001bf	      1350	deflate.c	FUNCTION_17	DO_1
0x4000231	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1350	deflate.c	FUNCTION_17	DO_1
0x4000235	        0x4983c405	                              add r12, 5	      1349	deflate.c	FUNCTION_17	DO_1
0x4000239	            0xeb84	                           jmp 0x40001bf	      1349	deflate.c	FUNCTION_17	DO_1
0x400023b	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1349	deflate.c	FUNCTION_17	DO_1
0x400023f	        0x4983c404	                              add r12, 4	      1349	deflate.c	FUNCTION_17	DO_1
0x4000243	      0xe977ffffff	                           jmp 0x40001bf	      1349	deflate.c	FUNCTION_17	DO_1
0x4000248	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1349	deflate.c	FUNCTION_17	DO_1
0x400024c	        0x4983c403	                              add r12, 3	      1348	deflate.c	FUNCTION_17	DO_1
0x4000250	      0xe96affffff	                           jmp 0x40001bf	      1348	deflate.c	FUNCTION_17	DO_1
0x4000255	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000259	        0x4983c402	                              add r12, 2	      1348	deflate.c	FUNCTION_17	DO_1
0x400025d	      0xe95dffffff	                           jmp 0x40001bf	      1348	deflate.c	FUNCTION_17	DO_1
0x4000262	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000266	      0xe954ffffff	                           jmp 0x40001bf	      1348	deflate.c	FUNCTION_17	DO_1
deflateEnd	DO,0:ELSE,0:WHILE,0:CALL,6:functions,0:IF,1:SWITCH,0:FOR,0	81
0x4003f60	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x4003f63	      0xb8feffffff	                     mov eax, 0xfffffffe	      1081	deflate.c	
0x4003f68	            0x741e	                            je 0x4003f88	       357	deflate.c	
0x4003f6a	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x4003f6f	            0x7417	                            je 0x4003f88	       357	deflate.c	
0x4003f71	        0x4c8b4748	              mov r8, qword [rdi + 0x48]	       358	deflate.c	
0x4003f75	          0x4d85c0	                             test r8, r8	       358	deflate.c	
0x4003f78	            0x740e	                            je 0x4003f88	       358	deflate.c	
0x4003f7a	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       360	deflate.c	FUNCTION_2
0x4003f7e	          0x4885d2	                           test rdx, rdx	       361	deflate.c	FUNCTION_2	IF_1
0x4003f81	            0x7405	                            je 0x4003f88	       361	deflate.c	FUNCTION_2	IF_1
0x4003f83	          0x483b3a	                    cmp rdi, qword [rdx]	       361	deflate.c	FUNCTION_2	IF_1
0x4003f86	            0x7408	                            je 0x4003f90	       361	deflate.c	FUNCTION_2	IF_1
0x4003f88	              0xc3	                                     ret	      1095	deflate.c	FUNCTION_14	CALL_6
0x4003f89	     0xf1f80000000	                         nop dword [rax]	      1095	deflate.c	FUNCTION_14	CALL_6
0x4003f90	              0x55	                                push rbp	      1078	deflate.c	
0x4003f91	              0x53	                                push rbx	      1078	deflate.c	
0x4003f92	      0xbe01000000	                              mov esi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4003f97	        0x4883ec08	                              sub rsp, 8	      1078	deflate.c	
0x4003f9b	          0x8b6a08	                mov ebp, dword [rdx + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x4003f9e	          0x8d4dd6	                   lea ecx, [rbp - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x4003fa1	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x4003fa4	            0x7717	                            ja 0x4003fbd	       361	deflate.c	FUNCTION_2	IF_1
0x4003fa6	    0x48be01800088	          movabs rsi, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x4003fb0	          0x48d3ee	                             shr rsi, cl	       361	deflate.c	FUNCTION_2	IF_1
0x4003fb3	          0x83e601	                              and esi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4003fb6	        0x4883f601	                              xor rsi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4003fba	          0x83e601	                              and esi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4003fbd	    0x81fd9a020000	                          cmp ebp, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x4003fc3	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x4003fc6	          0x83fd71	                           cmp ebp, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x4003fc9	           0xf95c0	                                setne al	       369	deflate.c	FUNCTION_2	IF_2
0x4003fcc	            0x84c1	                             test cl, al	       369	deflate.c	FUNCTION_2	IF_2
0x4003fce	            0x7418	                            je 0x4003fe8	       369	deflate.c	FUNCTION_2	IF_2
0x4003fd0	          0x4084f6	                           test sil, sil	       369	deflate.c	FUNCTION_2	IF_2
0x4003fd3	      0xb8feffffff	                     mov eax, 0xfffffffe	      1081	deflate.c	
0x4003fd8	            0x740e	                            je 0x4003fe8	       369	deflate.c	FUNCTION_2	IF_2
0x4003fda	        0x4883c408	                              add rsp, 8	      1095	deflate.c	FUNCTION_14	CALL_6
0x4003fde	              0x5b	                                 pop rbx	      1095	deflate.c	FUNCTION_14	CALL_6
0x4003fdf	              0x5d	                                 pop rbp	      1095	deflate.c	FUNCTION_14	CALL_6
0x4003fe0	              0xc3	                                     ret	      1095	deflate.c	FUNCTION_14	CALL_6
0x4003fe1	     0xf1f80000000	                         nop dword [rax]	      1095	deflate.c	FUNCTION_14	CALL_6
0x4003fe8	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      1086	deflate.c	FUNCTION_14
0x4003fec	          0x4889fb	                            mov rbx, rdi	      1086	deflate.c	FUNCTION_14
0x4003fef	          0x4889d0	                            mov rax, rdx	      1086	deflate.c	FUNCTION_14
0x4003ff2	          0x4885f6	                           test rsi, rsi	      1086	deflate.c	FUNCTION_14
0x4003ff5	            0x740f	                            je 0x4004006	      1086	deflate.c	FUNCTION_14
0x4003ff7	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1086	deflate.c	FUNCTION_14
0x4003ffb	          0x41ffd0	                                 call r8	      1086	deflate.c	FUNCTION_14
0x4003ffe	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1086	deflate.c	FUNCTION_14
0x4004002	        0x4c8b4348	              mov r8, qword [rbx + 0x48]	      1086	deflate.c	FUNCTION_14
0x4004006	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      1087	deflate.c	FUNCTION_14
0x400400a	          0x4885f6	                           test rsi, rsi	      1087	deflate.c	FUNCTION_14
0x400400d	            0x740f	                            je 0x400401e	      1087	deflate.c	FUNCTION_14
0x400400f	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1087	deflate.c	FUNCTION_14
0x4004013	          0x41ffd0	                                 call r8	      1087	deflate.c	FUNCTION_14
0x4004016	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1087	deflate.c	FUNCTION_14
0x400401a	        0x4c8b4348	              mov r8, qword [rbx + 0x48]	      1087	deflate.c	FUNCTION_14
0x400401e	        0x488b7070	            mov rsi, qword [rax + 0x70] 	      1088	deflate.c	FUNCTION_14
0x4004022	          0x4885f6	                           test rsi, rsi	      1088	deflate.c	FUNCTION_14
0x4004025	            0x740f	                            je 0x4004036	      1088	deflate.c	FUNCTION_14
0x4004027	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1088	deflate.c	FUNCTION_14
0x400402b	          0x41ffd0	                                 call r8	      1088	deflate.c	FUNCTION_14
0x400402e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1088	deflate.c	FUNCTION_14
0x4004032	        0x4c8b4348	              mov r8, qword [rbx + 0x48]	      1088	deflate.c	FUNCTION_14
0x4004036	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      1089	deflate.c	FUNCTION_14
0x400403a	          0x4885f6	                           test rsi, rsi	      1089	deflate.c	FUNCTION_14
0x400403d	            0x740f	                            je 0x400404e	      1089	deflate.c	FUNCTION_14
0x400403f	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1089	deflate.c	FUNCTION_14
0x4004043	          0x41ffd0	                                 call r8	      1089	deflate.c	FUNCTION_14
0x4004046	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1089	deflate.c	FUNCTION_14
0x400404a	        0x4c8b4348	              mov r8, qword [rbx + 0x48]	      1089	deflate.c	FUNCTION_14
0x400404e	          0x4889c6	                            mov rsi, rax	      1091	deflate.c	FUNCTION_14	CALL_3
0x4004051	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1091	deflate.c	FUNCTION_14	CALL_3
0x4004055	          0x41ffd0	                                 call r8	      1091	deflate.c	FUNCTION_14	CALL_3
0x4004058	            0x31c0	                            xor eax, eax	      1094	deflate.c	FUNCTION_14
0x400405a	          0x83fd71	                           cmp ebp, 0x71	      1094	deflate.c	FUNCTION_14
0x400405d	    0x48c743380000	               mov qword [rbx + 0x38], 0	      1092	deflate.c	FUNCTION_14	CALL_4
0x4004065	           0xf95c0	                                setne al	      1094	deflate.c	FUNCTION_14
0x4004068	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      1094	deflate.c	FUNCTION_14
0x400406c	      0xe969ffffff	                           jmp 0x4003fda	      1094	deflate.c	FUNCTION_14
deflateParams	DO,0:ELSE,1:WHILE,0:CALL,3:functions,0:IF,10:SWITCH,0:FOR,0	164
0x4003ce0	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x4003ce3	     0xf84c7010000	                            je 0x4003eb0	       357	deflate.c	
0x4003ce9	            0x4155	                                push r13	       572	deflate.c	
0x4003ceb	            0x4154	                                push r12	       572	deflate.c	
0x4003ced	          0x4989fd	                            mov r13, rdi	       572	deflate.c	
0x4003cf0	              0x55	                                push rbp	       572	deflate.c	
0x4003cf1	              0x53	                                push rbx	       572	deflate.c	
0x4003cf2	        0x4883ec08	                              sub rsp, 8	       572	deflate.c	
0x4003cf6	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x4003cfb	            0x7415	                            je 0x4003d12	       357	deflate.c	
0x4003cfd	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x4003d02	            0x740e	                            je 0x4003d12	       358	deflate.c	
0x4003d04	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	       360	deflate.c	FUNCTION_2
0x4003d08	          0x4885db	                           test rbx, rbx	       361	deflate.c	FUNCTION_2	IF_1
0x4003d0b	            0x7405	                            je 0x4003d12	       361	deflate.c	FUNCTION_2	IF_1
0x4003d0d	          0x483b3b	                    cmp rdi, qword [rbx]	       361	deflate.c	FUNCTION_2	IF_1
0x4003d10	            0x7416	                            je 0x4003d28	       361	deflate.c	FUNCTION_2	IF_1
0x4003d12	      0xb8feffffff	                     mov eax, 0xfffffffe	       576	deflate.c	FUNCTION_8
0x4003d17	        0x4883c408	                              add rsp, 8	       614	deflate.c	FUNCTION_8	IF_8
0x4003d1b	              0x5b	                                 pop rbx	       614	deflate.c	FUNCTION_8	IF_8
0x4003d1c	              0x5d	                                 pop rbp	       614	deflate.c	FUNCTION_8	IF_8
0x4003d1d	            0x415c	                                 pop r12	       614	deflate.c	FUNCTION_8	IF_8
0x4003d1f	            0x415d	                                 pop r13	       614	deflate.c	FUNCTION_8	IF_8
0x4003d21	              0xc3	                                     ret	       614	deflate.c	FUNCTION_8	IF_8
0x4003d22	    0x660f1f440000	                    nop word [rax + rax]	       614	deflate.c	FUNCTION_8	IF_8
0x4003d28	          0x4863ee	                         movsxd rbp, esi	       614	deflate.c	FUNCTION_8	IF_8
0x4003d2b	          0x8b7308	                mov esi, dword [rbx + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x4003d2e	          0x4189d4	                           mov r12d, edx	       361	deflate.c	FUNCTION_2	IF_1
0x4003d31	      0xba01000000	                              mov edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4003d36	          0x8d4ed6	                   lea ecx, [rsi - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x4003d39	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x4003d3c	            0x7719	                            ja 0x4003d57	       361	deflate.c	FUNCTION_2	IF_1
0x4003d3e	    0x48b801800088	          movabs rax, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x4003d48	          0x48d3e8	                             shr rax, cl	       361	deflate.c	FUNCTION_2	IF_1
0x4003d4b	          0x83e001	                              and eax, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4003d4e	        0x4883f001	                              xor rax, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4003d52	            0x89c2	                            mov edx, eax	       361	deflate.c	FUNCTION_2	IF_1
0x4003d54	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4003d57	    0x81fe9a020000	                          cmp esi, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x4003d5d	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x4003d60	          0x83fe71	                           cmp esi, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x4003d63	           0xf95c0	                                setne al	       369	deflate.c	FUNCTION_2	IF_2
0x4003d66	            0x21c8	                            and eax, ecx	       369	deflate.c	FUNCTION_2	IF_2
0x4003d68	            0x20d0	                              and al, dl	       369	deflate.c	FUNCTION_2	IF_2
0x4003d6a	            0x75a6	                           jne 0x4003d12	       369	deflate.c	FUNCTION_2	IF_2
0x4003d6c	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       582	deflate.c	FUNCTION_8
0x4003d6f	     0xf84cb000000	                            je 0x4003e40	       582	deflate.c	FUNCTION_8
0x4003d75	          0x83fd09	                              cmp ebp, 9	       582	deflate.c	FUNCTION_8
0x4003d78	           0xf97c0	                                 seta al	       582	deflate.c	FUNCTION_8
0x4003d7b	        0x4183fc04	                             cmp r12d, 4	       584	deflate.c	FUNCTION_8	IF_2
0x4003d7f	            0x7791	                            ja 0x4003d12	       584	deflate.c	FUNCTION_8	IF_2
0x4003d81	            0x84c0	                             test al, al	       584	deflate.c	FUNCTION_8	IF_2
0x4003d83	            0x758d	                           jne 0x4003d12	       584	deflate.c	FUNCTION_8	IF_2
0x4003d85	    0x443ba3c80000	           cmp r12d, dword [rbx + 0xc8] 	       589	deflate.c	FUNCTION_8	IF_4
0x4003d8c	    0x8b83c4000000	            mov eax, dword [rbx + 0xc4] 	       587	deflate.c	FUNCTION_8
0x4003d92	     0xf84b8000000	                            je 0x4003e50	       589	deflate.c	FUNCTION_8	IF_4
0x4003d98	    0x4883bb381700	             cmp qword [rbx + 0x1738], 0	       589	deflate.c	FUNCTION_8	IF_4
0x4003da0	     0xf85da000000	                           jne 0x4003e80	       589	deflate.c	FUNCTION_8	IF_4
0x4003da6	            0x39c5	                            cmp ebp, eax	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4003da8	            0x747d	                            je 0x4003e27	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4003daa	            0x85c0	                           test eax, eax	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4003dac	            0x753b	                           jne 0x4003de9	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4003dae	    0x8b8328170000	          mov eax, dword [rbx + 0x1728] 	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4003db4	            0x85c0	                           test eax, eax	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4003db6	            0x7431	                            je 0x4003de9	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4003db8	          0x83f801	                              cmp eax, 1	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4003dbb	     0xf84ff000000	                            je 0x4003ec0	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4003dc1	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003dc7	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003dcb	            0x31c9	                            xor ecx, ecx	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003dcd	          0x83e801	                              sub eax, 1	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003dd0	        0x488d1400	                    lea rdx, [rax + rax]	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003dd4	        0x66890c47	              mov word [rdi + rax*2], cx	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003dd8	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_28	CALL_6
0x4003dda	      0xe800000000	                          call 0x4003ddf	        90	string3.h	FUNCTION_28	CALL_6
0x4003ddf	    0xc78328170000	            mov dword [rbx + 0x1728], 0 	       604	deflate.c	FUNCTION_8	IF_8	IF_9	IF_10
0x4003de9	    0x89abc4000000	             mov dword [rbx + 0xc4], ebp	       606	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4003def	        0x48c1e504	                              shl rbp, 4	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4003df3	     0xfb795000000	                   movzx edx, word [rbp]	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4003dfa	     0xfb785000000	                   movzx eax, word [rbp]	       610	deflate.c	FUNCTION_8	IF_8
0x4003e01	    0x8993c0000000	             mov dword [rbx + 0xc0], edx	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4003e07	     0xfb795000000	                   movzx edx, word [rbp]	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003e0e	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	       610	deflate.c	FUNCTION_8	IF_8
0x4003e14	    0x8993cc000000	             mov dword [rbx + 0xcc], edx	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003e1a	     0xfb795000000	                   movzx edx, word [rbp]	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003e21	    0x8993d0000000	             mov dword [rbx + 0xd0], edx	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4003e27	    0x4489a3c80000	            mov dword [rbx + 0xc8], r12d	       612	deflate.c	FUNCTION_8	IF_8
0x4003e2e	        0x4883c408	                              add rsp, 8	       614	deflate.c	FUNCTION_8	IF_8
0x4003e32	            0x31c0	                            xor eax, eax	       613	deflate.c	FUNCTION_8	IF_8
0x4003e34	              0x5b	                                 pop rbx	       614	deflate.c	FUNCTION_8	IF_8
0x4003e35	              0x5d	                                 pop rbp	       614	deflate.c	FUNCTION_8	IF_8
0x4003e36	            0x415c	                                 pop r12	       614	deflate.c	FUNCTION_8	IF_8
0x4003e38	            0x415d	                                 pop r13	       614	deflate.c	FUNCTION_8	IF_8
0x4003e3a	              0xc3	                                     ret	       614	deflate.c	FUNCTION_8	IF_8
0x4003e3b	       0xf1f440000	                   nop dword [rax + rax]	       614	deflate.c	FUNCTION_8	IF_8
0x4003e40	      0xbd06000000	                              mov ebp, 6	       582	deflate.c	FUNCTION_8
0x4003e45	      0xe931ffffff	                           jmp 0x4003d7b	       582	deflate.c	FUNCTION_8
0x4003e4a	    0x660f1f440000	                    nop word [rax + rax]	       582	deflate.c	FUNCTION_8
0x4003e50	          0x4863c8	                         movsxd rcx, eax	       587	deflate.c	FUNCTION_8
0x4003e53	          0x4863d5	                         movsxd rdx, ebp	       589	deflate.c	FUNCTION_8	IF_4
0x4003e56	        0x48c1e204	                              shl rdx, 4	       589	deflate.c	FUNCTION_8	IF_4
0x4003e5a	        0x48c1e104	                              shl rcx, 4	       587	deflate.c	FUNCTION_8
0x4003e5e	    0x488bba000000	                    mov rdi, qword [rdx]	       589	deflate.c	FUNCTION_8	IF_4
0x4003e65	    0x4839b9000000	                    cmp qword [rcx], rdi	       589	deflate.c	FUNCTION_8	IF_4
0x4003e6c	     0xf8434ffffff	                            je 0x4003da6	       589	deflate.c	FUNCTION_8	IF_4
0x4003e72	    0x4883bb381700	             cmp qword [rbx + 0x1738], 0	       589	deflate.c	FUNCTION_8	IF_4
0x4003e7a	     0xf8426ffffff	                            je 0x4003da6	       589	deflate.c	FUNCTION_8	IF_4
0x4003e80	      0xbe05000000	                              mov esi, 5	       592	deflate.c	FUNCTION_8
0x4003e85	          0x4c89ef	                            mov rdi, r13	       592	deflate.c	FUNCTION_8
0x4003e88	      0xe800000000	                          call 0x4003e8d	       592	deflate.c	FUNCTION_8
0x4003e8d	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       593	deflate.c	FUNCTION_8	IF_5
0x4003e90	     0xf847cfeffff	                            je 0x4003d12	       593	deflate.c	FUNCTION_8	IF_5
0x4003e96	        0x418b7520	            mov esi, dword [r13 + 0x20] 	       595	deflate.c	FUNCTION_8	IF_5
0x4003e9a	            0x85f6	                           test esi, esi	       595	deflate.c	FUNCTION_8	IF_5
0x4003e9c	     0xf84af000000	                            je 0x4003f51	       595	deflate.c	FUNCTION_8	IF_5
0x4003ea2	    0x8b83c4000000	            mov eax, dword [rbx + 0xc4] 	       595	deflate.c	FUNCTION_8	IF_5
0x4003ea8	      0xe9f9feffff	                           jmp 0x4003da6	       595	deflate.c	FUNCTION_8	IF_5
0x4003ead	           0xf1f00	                         nop dword [rax]	       595	deflate.c	FUNCTION_8	IF_5
0x4003eb0	      0xb8feffffff	                     mov eax, 0xfffffffe	       576	deflate.c	FUNCTION_8
0x4003eb5	              0xc3	                                     ret	       614	deflate.c	FUNCTION_8	IF_8
0x4003eb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       614	deflate.c	FUNCTION_8	IF_8
0x4003ec0	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	       208	deflate.c	FUNCTION_1
0x4003ec6	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	       209	deflate.c	FUNCTION_1
0x4003eca	          0x4531c9	                            xor r9d, r9d	       212	deflate.c	FUNCTION_1
0x4003ecd	          0x8b4b50	            mov ecx, dword [rbx + 0x50] 	       206	deflate.c	
0x4003ed0	          0x4889c2	                            mov rdx, rax	       208	deflate.c	FUNCTION_1
0x4003ed3	        0x488d0447	                  lea rax, [rdi + rax*2]	       209	deflate.c	FUNCTION_1
0x4003ed7	          0x83ea01	                              sub edx, 1	       209	deflate.c	FUNCTION_1
0x4003eda	          0x4801d2	                            add rdx, rdx	       209	deflate.c	FUNCTION_1
0x4003edd	          0x4889c6	                            mov rsi, rax	       209	deflate.c	FUNCTION_1
0x4003ee0	          0x4829d6	                            sub rsi, rdx	       209	deflate.c	FUNCTION_1
0x4003ee3	        0x4c8d56fe	                      lea r10, [rsi - 2]	       209	deflate.c	FUNCTION_1
0x4003ee7	    0x660f1f840000	                    nop word [rax + rax]	       209	deflate.c	FUNCTION_1
0x4003ef0	        0x4883e802	                              sub rax, 2	       211	deflate.c	FUNCTION_1
0x4003ef4	        0x440fb700	                   movzx r8d, word [rax]	       211	deflate.c	FUNCTION_1
0x4003ef8	          0x4489c6	                            mov esi, r8d	       212	deflate.c	FUNCTION_1
0x4003efb	            0x29ce	                            sub esi, ecx	       212	deflate.c	FUNCTION_1
0x4003efd	          0x4439c1	                            cmp ecx, r8d	       212	deflate.c	FUNCTION_1
0x4003f00	        0x410f47f1	                          cmova esi, r9d	       212	deflate.c	FUNCTION_1
0x4003f04	          0x4c39d0	                            cmp rax, r10	       213	deflate.c	FUNCTION_1
0x4003f07	          0x668930	                      mov word [rax], si	       212	deflate.c	FUNCTION_1
0x4003f0a	            0x75e4	                           jne 0x4003ef0	       213	deflate.c	FUNCTION_1
0x4003f0c	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	       216	deflate.c	FUNCTION_1	DO_1
0x4003f10	            0x89c8	                            mov eax, ecx	       216	deflate.c	FUNCTION_1	DO_1
0x4003f12	          0x4531c9	                            xor r9d, r9d	       219	deflate.c	FUNCTION_1
0x4003f15	        0x488d0446	                  lea rax, [rsi + rax*2]	       216	deflate.c	FUNCTION_1	DO_1
0x4003f19	          0x8d71ff	                      lea esi, [rcx - 1]	       216	deflate.c	FUNCTION_1	DO_1
0x4003f1c	          0x4989c3	                            mov r11, rax	       216	deflate.c	FUNCTION_1	DO_1
0x4003f1f	          0x4801f6	                            add rsi, rsi	       216	deflate.c	FUNCTION_1	DO_1
0x4003f22	          0x4929f3	                            sub r11, rsi	       216	deflate.c	FUNCTION_1	DO_1
0x4003f25	        0x4d8d53fe	                      lea r10, [r11 - 2]	       216	deflate.c	FUNCTION_1	DO_1
0x4003f29	     0xf1f80000000	                         nop dword [rax]	       216	deflate.c	FUNCTION_1	DO_1
0x4003f30	        0x4883e802	                              sub rax, 2	       218	deflate.c	FUNCTION_1
0x4003f34	        0x440fb700	                   movzx r8d, word [rax]	       218	deflate.c	FUNCTION_1
0x4003f38	          0x4489c6	                            mov esi, r8d	       219	deflate.c	FUNCTION_1
0x4003f3b	            0x29ce	                            sub esi, ecx	       219	deflate.c	FUNCTION_1
0x4003f3d	          0x4439c1	                            cmp ecx, r8d	       219	deflate.c	FUNCTION_1
0x4003f40	        0x410f47f1	                          cmova esi, r9d	       219	deflate.c	FUNCTION_1
0x4003f44	          0x4c39d0	                            cmp rax, r10	       223	deflate.c	FUNCTION_1	DO_2
0x4003f47	          0x668930	                      mov word [rax], si	       219	deflate.c	FUNCTION_1
0x4003f4a	            0x75e4	                           jne 0x4003f30	       223	deflate.c	FUNCTION_1	DO_2
0x4003f4c	      0xe987feffff	                           jmp 0x4003dd8	       223	deflate.c	FUNCTION_1	DO_2
0x4003f51	      0xb8fbffffff	                     mov eax, 0xfffffffb	       596	deflate.c	FUNCTION_8	IF_5	CALL_2
0x4003f56	      0xe9bcfdffff	                           jmp 0x4003d17	       596	deflate.c	FUNCTION_8	IF_5	CALL_2
deflate_fast	DO,1:ELSE,2:WHILE,0:CALL,6:functions,0:IF,10:SWITCH,0:FOR,1	344
0x4000650	            0x4157	                                push r15	      1827	deflate.c	
0x4000652	            0x4156	                                push r14	      1827	deflate.c	
0x4000654	            0x4155	                                push r13	      1827	deflate.c	
0x4000656	            0x4154	                                push r12	      1827	deflate.c	
0x4000658	              0x55	                                push rbp	      1827	deflate.c	
0x4000659	              0x53	                                push rbx	      1827	deflate.c	
0x400065a	          0x4889fb	                            mov rbx, rdi	      1827	deflate.c	
0x400065d	        0x4883ec18	                           sub rsp, 0x18	      1827	deflate.c	
0x4000661	        0x8974240c	              mov dword [rsp + 0xc], esi	      1827	deflate.c	
0x4000665	    0x448b83b40000	            mov r8d, dword [rbx + 0xb4] 	      1827	deflate.c	
0x400066c	         0xf1f4000	                         nop dword [rax]	      1827	deflate.c	
0x4000670	    0x4181f8050100	                          cmp r8d, 0x105	      1837	deflate.c	FUNCTION_21	FOR_1
0x4000677	     0xf8603030000	                           jbe 0x4000980	      1837	deflate.c	FUNCTION_21	FOR_1
0x400067d	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000683	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000687	          0x8d4202	                      lea eax, [rdx + 2]	      1850	deflate.c	FUNCTION_21	FOR_1
0x400068a	            0x89d7	                            mov edi, edx	      1850	deflate.c	FUNCTION_21	FOR_1
0x400068c	          0x237b58	             and edi, dword [rbx + 0x58]	      1850	deflate.c	FUNCTION_21	FOR_1
0x400068f	         0xfb63401	             movzx esi, byte [rcx + rax]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000693	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000699	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x400069f	            0xd3e0	                             shl eax, cl	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006a1	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006a5	            0x31f0	                            xor eax, esi	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006a7	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006ad	    0x898380000000	             mov dword [rbx + 0x80], eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006b3	        0x488d0441	                  lea rax, [rcx + rax*2]	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006b7	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006bb	           0xfb730	                   movzx esi, word [rax]	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006be	            0x85f6	                           test esi, esi	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006c0	        0x66893479	              mov word [rcx + rdi*2], si	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006c4	          0x668910	                      mov word [rax], dx	      1850	deflate.c	FUNCTION_21	FOR_1
0x40006c7	            0x7414	                            je 0x40006dd	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006c9	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006cc	            0x89d1	                            mov ecx, edx	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006ce	            0x29f1	                            sub ecx, esi	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006d0	      0x2d06010000	                          sub eax, 0x106	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006d5	            0x39c1	                            cmp ecx, eax	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006d7	     0xf8613030000	                           jbe 0x40009f0	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006dd	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1856	deflate.c	FUNCTION_21	FOR_1
0x40006e3	          0x83f802	                              cmp eax, 2	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40006e6	     0xf86cc010000	                           jbe 0x40008b8	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40006ec	    0x662b93b00000	               sub dx, word [rbx + 0xb0]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40006f3	    0x8bb30c170000	          mov esi, dword [rbx + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40006f9	          0x83e803	                              sub eax, 3	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40006fc	    0x488bbb101700	          mov rdi, qword [rbx + 0x1710] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000703	        0x66891477	              mov word [rdi + rsi*2], dx	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000707	    0x488bbb001700	          mov rdi, qword [rbx + 0x1700] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400070e	          0x4889f1	                            mov rcx, rsi	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000711	          0x83c101	                              add ecx, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000714	          0x83ea01	                              sub edx, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000717	    0x898b0c170000	          mov dword [rbx + 0x170c], ecx 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400071d	          0x880437	                mov byte [rdi + rsi], al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000720	           0xfb6c0	                           movzx eax, al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000723	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400072a	    0x66838483d804	       add word [rbx + rax*4 + 0x4d8], 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000733	      0x6681faff00	                            cmp dx, 0xff	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000738	     0xf8792020000	                            ja 0x40009d0	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400073e	           0xfb7d2	                           movzx edx, dx	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000741	     0xfb682000000	                   movzx eax, byte [rdx]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000748	    0x66838483c809	       add word [rbx + rax*4 + 0x9c8], 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000751	          0x4531d2	                          xor r10d, r10d	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000754	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400075a	    0x8bbba0000000	            mov edi, dword [rbx + 0xa0] 	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000760	    0x448b83b40000	            mov r8d, dword [rbx + 0xb4] 	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000767	          0x83e801	                              sub eax, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400076a	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000770	        0x410f94c2	                               sete r10b	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000774	          0x4129f8	                            sub r8d, edi	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000777	    0x3bbbc0000000	            cmp edi, dword [rbx + 0xc0] 	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x400077d	    0x448983b40000	             mov dword [rbx + 0xb4], r8d	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000784	     0xf87a6010000	                            ja 0x4000930	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x400078a	        0x4183f802	                              cmp r8d, 2	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x400078e	     0xf869c010000	                           jbe 0x4000930	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000794	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x400079a	        0x448d4fff	                      lea r9d, [rdi - 1]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x400079e	        0x4c8b7370	            mov r14, qword [rbx + 0x70] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007a2	        0x448b6b58	           mov r13d, dword [rbx + 0x58] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007a6	        0x4c8b6378	            mov r12, qword [rbx + 0x78] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007aa	        0x488b6b60	            mov rbp, qword [rbx + 0x60] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007ae	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007b4	            0x89c6	                            mov esi, eax	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007b6	        0x89442404	                mov dword [rsp + 4], eax	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007ba	    0x448b9b8c0000	           mov r11d, dword [rbx + 0x8c] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007c1	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007c7	          0x8d5601	                      lea edx, [rsi + 1]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007ca	    0x44898ba00000	             mov dword [rbx + 0xa0], r9d	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007d1	        0x897c2408	                mov dword [rsp + 8], edi	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007d5	           0xf1f00	                         nop dword [rax]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x40007d8	          0x8d7202	                      lea esi, [rdx + 2]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007db	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007e1	            0xd3e0	                             shl eax, cl	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007e3	          0x4189d7	                           mov r15d, edx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007e6	        0x4183e901	                              sub r9d, 1	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x40007ea	       0xfb6743500	             movzx esi, byte [rbp + rsi]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007ef	          0x4521ef	                          and r15d, r13d	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007f2	            0x31f0	                            xor eax, esi	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007f4	          0x4421d8	                           and eax, r11d	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007f7	            0x89c6	                            mov esi, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007f9	    0x898380000000	             mov dword [rbx + 0x80], eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x40007ff	        0x498d3474	                  lea rsi, [r12 + rsi*2]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000803	           0xfb73e	                   movzx edi, word [rsi]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000806	      0x6643893c7e	              mov word [r14 + r15*2], di	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400080b	          0x668916	                      mov word [rsi], dx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400080e	          0x83c201	                              add edx, 1	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000811	          0x4585c9	                           test r9d, r9d	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000814	    0x44898ba00000	             mov dword [rbx + 0xa0], r9d	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x400081b	            0x75bb	                           jne 0x40007d8	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x400081d	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000821	         0x37c2404	                add edi, dword [rsp + 4]	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000825	    0x89bbac000000	             mov dword [rbx + 0xac], edi	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x400082b	       0xf1f440000	                   nop dword [rax + rax]	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000830	          0x4585d2	                         test r10d, r10d	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000833	     0xf8437feffff	                            je 0x4000670	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000839	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000840	            0x89fa	                            mov edx, edi	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000842	            0x31f6	                            xor esi, esi	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000844	          0x4829c2	                            sub rdx, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000847	          0x4885c0	                           test rax, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400084a	            0x7809	                            js 0x4000855	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400084c	            0x89c0	                            mov eax, eax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400084e	        0x48034360	             add rax, qword [rbx + 0x60]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000852	          0x4889c6	                            mov rsi, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000855	            0x31c9	                            xor ecx, ecx	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000857	          0x4889df	                            mov rdi, rbx	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400085a	      0xe800000000	                          call 0x400085f	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400085f	          0x4c8b23	                    mov r12, qword [rbx]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000862	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000868	      0x4d8b6c2438	            mov r13, qword [r12 + 0x38] 	       734	deflate.c	
0x400086d	    0x488983980000	             mov qword [rbx + 0x98], rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000874	          0x4c89ef	                            mov rdi, r13	       736	deflate.c	FUNCTION_12
0x4000877	      0xe800000000	                          call 0x400087c	       736	deflate.c	FUNCTION_12
0x400087c	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4000880	      0x418b6c2420	            mov ebp, dword [r12 + 0x20] 	       738	deflate.c	FUNCTION_12
0x4000885	            0x39e8	                            cmp eax, ebp	       738	deflate.c	FUNCTION_12
0x4000887	           0xf46e8	                         cmovbe ebp, eax	       738	deflate.c	FUNCTION_12
0x400088a	            0x85ed	                           test ebp, ebp	       739	deflate.c	FUNCTION_12
0x400088c	     0xf8577010000	                           jne 0x4000a09	       739	deflate.c	FUNCTION_12
0x4000892	          0x488b03	                    mov rax, qword [rbx]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000895	          0x8b7020	            mov esi, dword [rax + 0x20] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000898	            0x85f6	                           test esi, esi	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x400089a	     0xf85c5fdffff	                           jne 0x4000665	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x40008a0	        0x4883c418	                           add rsp, 0x18	      1918	deflate.c	FUNCTION_21	IF_9
0x40008a4	            0x31c0	                            xor eax, eax	      1840	deflate.c	FUNCTION_21	FOR_1
0x40008a6	              0x5b	                                 pop rbx	      1918	deflate.c	FUNCTION_21	IF_9
0x40008a7	              0x5d	                                 pop rbp	      1918	deflate.c	FUNCTION_21	IF_9
0x40008a8	            0x415c	                                 pop r12	      1918	deflate.c	FUNCTION_21	IF_9
0x40008aa	            0x415d	                                 pop r13	      1918	deflate.c	FUNCTION_21	IF_9
0x40008ac	            0x415e	                                 pop r14	      1918	deflate.c	FUNCTION_21	IF_9
0x40008ae	            0x415f	                                 pop r15	      1918	deflate.c	FUNCTION_21	IF_9
0x40008b0	              0xc3	                                     ret	      1918	deflate.c	FUNCTION_21	IF_9
0x40008b1	     0xf1f80000000	                         nop dword [rax]	      1918	deflate.c	FUNCTION_21	IF_9
0x40008b8	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008be	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008c2	            0x31ff	                            xor edi, edi	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008c4	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008cb	          0x4531d2	                          xor r10d, r10d	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008ce	         0xfb60410	             movzx eax, byte [rax + rdx]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008d2	        0x66893c4e	              mov word [rsi + rcx*2], di	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008d6	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008dd	          0x4889ca	                            mov rdx, rcx	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008e0	          0x83c201	                              add edx, 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008e3	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008e9	          0x88040e	                mov byte [rsi + rcx], al	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008ec	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008f5	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008fb	          0x83e801	                              sub eax, 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x40008fe	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000904	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400090a	        0x448d40ff	                      lea r8d, [rax - 1]	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400090e	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000914	        0x410f94c2	                               sete r10b	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000918	    0x448983b40000	             mov dword [rbx + 0xb4], r8d	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400091f	          0x8d7801	                      lea edi, [rax + 1]	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000922	    0x89bbac000000	             mov dword [rbx + 0xac], edi	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000928	      0xe903ffffff	                           jmp 0x4000830	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400092d	           0xf1f00	                         nop dword [rax]	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000930	     0x3bbac000000	             add edi, dword [rbx + 0xac]	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000936	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400093a	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      1891	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000944	            0x89f8	                            mov eax, edi	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000946	    0x89bbac000000	             mov dword [rbx + 0xac], edi	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400094c	          0x8d4f01	                      lea ecx, [rdi + 1]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400094f	         0xfb60402	             movzx eax, byte [rdx + rax]	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000953	    0x898380000000	             mov dword [rbx + 0x80], eax	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000959	         0xfb6140a	             movzx edx, byte [rdx + rcx]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400095d	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000963	            0xd3e0	                             shl eax, cl	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000965	            0x31d0	                            xor eax, edx	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000967	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x400096d	    0x898380000000	             mov dword [rbx + 0x80], eax	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000973	      0xe9b8feffff	                           jmp 0x4000830	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000978	     0xf1f84000000	                   nop dword [rax + rax]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000980	          0x4889df	                            mov rdi, rbx	      1838	deflate.c	FUNCTION_21	FOR_1
0x4000983	      0xe8e8f8ffff	                    call sym.fill_window	      1838	deflate.c	FUNCTION_21	FOR_1
0x4000988	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1839	deflate.c	FUNCTION_21	FOR_1
0x400098e	      0x3d05010000	                          cmp eax, 0x105	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000993	     0xf87e4fcffff	                            ja 0x400067d	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000999	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1839	deflate.c	FUNCTION_21	FOR_1
0x400099e	          0x4585c0	                           test r8d, r8d	      1839	deflate.c	FUNCTION_21	FOR_1
0x40009a1	     0xf84f9feffff	                            je 0x40008a0	      1839	deflate.c	FUNCTION_21	FOR_1
0x40009a7	            0x85c0	                           test eax, eax	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x40009a9	     0xf8498000000	                            je 0x4000a47	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x40009af	          0x83f802	                              cmp eax, 2	      1849	deflate.c	FUNCTION_21	FOR_1
0x40009b2	     0xf87c5fcffff	                            ja 0x400067d	      1849	deflate.c	FUNCTION_21	FOR_1
0x40009b8	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1849	deflate.c	FUNCTION_21	FOR_1
0x40009be	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1849	deflate.c	FUNCTION_21	FOR_1
0x40009c4	      0xe91afdffff	                           jmp 0x40006e3	      1849	deflate.c	FUNCTION_21	FOR_1
0x40009c9	     0xf1f80000000	                         nop dword [rax]	      1849	deflate.c	FUNCTION_21	FOR_1
0x40009d0	        0x66c1ea07	                               shr dx, 7	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009d4	    0x488d82000100	                  lea rax, [rdx + 0x100]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009db	      0x25ff030000	                          and eax, 0x3ff	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009e0	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009e7	      0xe95cfdffff	                           jmp 0x4000748	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009ec	         0xf1f4000	                         nop dword [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009f0	          0x4889df	                            mov rdi, rbx	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009f3	      0xe848f6ffff	                  call sym.longest_match	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009f8	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x40009fe	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000a04	      0xe9dafcffff	                           jmp 0x40006e3	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000a09	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000a0e	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000a12	          0x4189ee	                           mov r14d, ebp	       741	deflate.c	FUNCTION_12
0x4000a15	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x4000a18	      0xe800000000	                          call 0x4000a1d	        53	string3.h	FUNCTION_25	CALL_3
0x4000a1d	      0x4d01742418	            add qword [r12 + 0x18], r14 	       742	deflate.c	FUNCTION_12	IF_1
0x4000a22	        0x4d017520	            add qword [r13 + 0x20], r14 	       743	deflate.c	FUNCTION_12	IF_2
0x4000a26	      0x4d01742428	            add qword [r12 + 0x28], r14 	       744	deflate.c	FUNCTION_12
0x4000a2b	      0x41296c2420	             sub dword [r12 + 0x20], ebp	       745	deflate.c	FUNCTION_12	CALL_2
0x4000a30	        0x4d297528	             sub qword [r13 + 0x28], r14	       747	deflate.c	FUNCTION_12
0x4000a34	     0xf8558feffff	                           jne 0x4000892	       747	deflate.c	FUNCTION_12
0x4000a3a	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4000a3e	        0x49894520	             mov qword [r13 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4000a42	      0xe94bfeffff	                           jmp 0x4000892	       748	deflate.c	FUNCTION_12
0x4000a47	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000a4d	      0xb802000000	                              mov eax, 2	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000a52	          0x83fa02	                              cmp edx, 2	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000a55	           0xf46c2	                         cmovbe eax, edx	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000a58	      0x837c240c04	                cmp dword [rsp + 0xc], 4	      1911	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000a5d	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000a63	     0xf8486000000	                            je 0x4000aef	      1911	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000a69	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      1915	deflate.c	FUNCTION_21	IF_9
0x4000a6f	      0xb801000000	                              mov eax, 1	      1917	deflate.c	FUNCTION_21	IF_9
0x4000a74	            0x85c9	                           test ecx, ecx	      1915	deflate.c	FUNCTION_21	IF_9
0x4000a76	            0x7468	                            je 0x4000ae0	      1915	deflate.c	FUNCTION_21	IF_9
0x4000a78	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a7f	            0x31f6	                            xor esi, esi	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a81	          0x4829c2	                            sub rdx, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a84	          0x4885c0	                           test rax, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a87	            0x7809	                            js 0x4000a92	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a89	            0x89c0	                            mov eax, eax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a8b	        0x48034360	             add rax, qword [rbx + 0x60]	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a8f	          0x4889c6	                            mov rsi, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a92	            0x31c9	                            xor ecx, ecx	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a94	          0x4889df	                            mov rdi, rbx	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a97	      0xe800000000	                          call 0x4000a9c	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a9c	          0x4c8b23	                    mov r12, qword [rbx]	      1916	deflate.c	FUNCTION_21	IF_9
0x4000a9f	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4000aa5	      0x498b6c2438	            mov rbp, qword [r12 + 0x38] 	       734	deflate.c	
0x4000aaa	    0x488983980000	             mov qword [rbx + 0x98], rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000ab1	          0x4889ef	                            mov rdi, rbp	       736	deflate.c	FUNCTION_12
0x4000ab4	      0xe800000000	                          call 0x4000ab9	       736	deflate.c	FUNCTION_12
0x4000ab9	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       737	deflate.c	FUNCTION_12
0x4000abd	      0x458b6c2420	           mov r13d, dword [r12 + 0x20] 	       738	deflate.c	FUNCTION_12
0x4000ac2	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4000ac5	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x4000ac9	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4000acc	     0xf8591000000	                           jne 0x4000b63	       739	deflate.c	FUNCTION_12
0x4000ad2	          0x488b03	                    mov rax, qword [rbx]	      1916	deflate.c	FUNCTION_21	IF_9
0x4000ad5	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000ad8	            0x85c0	                           test eax, eax	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000ada	           0xf95c0	                                setne al	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000add	           0xfb6c0	                           movzx eax, al	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000ae0	        0x4883c418	                           add rsp, 0x18	      1918	deflate.c	FUNCTION_21	IF_9
0x4000ae4	              0x5b	                                 pop rbx	      1918	deflate.c	FUNCTION_21	IF_9
0x4000ae5	              0x5d	                                 pop rbp	      1918	deflate.c	FUNCTION_21	IF_9
0x4000ae6	            0x415c	                                 pop r12	      1918	deflate.c	FUNCTION_21	IF_9
0x4000ae8	            0x415d	                                 pop r13	      1918	deflate.c	FUNCTION_21	IF_9
0x4000aea	            0x415e	                                 pop r14	      1918	deflate.c	FUNCTION_21	IF_9
0x4000aec	            0x415f	                                 pop r15	      1918	deflate.c	FUNCTION_21	IF_9
0x4000aee	              0xc3	                                     ret	      1918	deflate.c	FUNCTION_21	IF_9
0x4000aef	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000af6	            0x31f6	                            xor esi, esi	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000af8	          0x4829c2	                            sub rdx, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000afb	          0x4885c0	                           test rax, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000afe	            0x7809	                            js 0x4000b09	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b00	            0x89c0	                            mov eax, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b02	        0x48034360	             add rax, qword [rbx + 0x60]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b06	          0x4889c6	                            mov rsi, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b09	      0xb901000000	                              mov ecx, 1	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b0e	          0x4889df	                            mov rdi, rbx	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b11	      0xe800000000	                          call 0x4000b16	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b16	          0x4c8b23	                    mov r12, qword [rbx]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b19	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b1f	      0x498b6c2438	            mov rbp, qword [r12 + 0x38] 	       734	deflate.c	
0x4000b24	    0x488983980000	             mov qword [rbx + 0x98], rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b2b	          0x4889ef	                            mov rdi, rbp	       736	deflate.c	FUNCTION_12
0x4000b2e	      0xe800000000	                          call 0x4000b33	       736	deflate.c	FUNCTION_12
0x4000b33	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       737	deflate.c	FUNCTION_12
0x4000b37	      0x458b6c2420	           mov r13d, dword [r12 + 0x20] 	       738	deflate.c	FUNCTION_12
0x4000b3c	          0x4439e8	                           cmp eax, r13d	       738	deflate.c	FUNCTION_12
0x4000b3f	        0x440f46e8	                        cmovbe r13d, eax	       738	deflate.c	FUNCTION_12
0x4000b43	          0x4585ed	                         test r13d, r13d	       739	deflate.c	FUNCTION_12
0x4000b46	            0x7559	                           jne 0x4000ba1	       739	deflate.c	FUNCTION_12
0x4000b48	          0x488b03	                    mov rax, qword [rbx]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b4b	        0x83782001	               cmp dword [rax + 0x20], 1	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b4f	            0x19c0	                            sbb eax, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b51	        0x4883c418	                           add rsp, 0x18	      1918	deflate.c	FUNCTION_21	IF_9
0x4000b55	              0x5b	                                 pop rbx	      1918	deflate.c	FUNCTION_21	IF_9
0x4000b56	          0x83c003	                              add eax, 3	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000b59	              0x5d	                                 pop rbp	      1918	deflate.c	FUNCTION_21	IF_9
0x4000b5a	            0x415c	                                 pop r12	      1918	deflate.c	FUNCTION_21	IF_9
0x4000b5c	            0x415d	                                 pop r13	      1918	deflate.c	FUNCTION_21	IF_9
0x4000b5e	            0x415e	                                 pop r14	      1918	deflate.c	FUNCTION_21	IF_9
0x4000b60	            0x415f	                                 pop r15	      1918	deflate.c	FUNCTION_21	IF_9
0x4000b62	              0xc3	                                     ret	      1918	deflate.c	FUNCTION_21	IF_9
0x4000b63	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000b68	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000b6c	          0x4589ee	                          mov r14d, r13d	       741	deflate.c	FUNCTION_12
0x4000b6f	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x4000b72	      0xe800000000	                          call 0x4000b77	        53	string3.h	FUNCTION_25	CALL_3
0x4000b77	      0x4d01742418	            add qword [r12 + 0x18], r14 	       742	deflate.c	FUNCTION_12	IF_1
0x4000b7c	        0x4c017520	            add qword [rbp + 0x20], r14 	       743	deflate.c	FUNCTION_12	IF_2
0x4000b80	      0x4d01742428	            add qword [r12 + 0x28], r14 	       744	deflate.c	FUNCTION_12
0x4000b85	      0x45296c2420	            sub dword [r12 + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x4000b8a	        0x4c297528	             sub qword [rbp + 0x28], r14	       747	deflate.c	FUNCTION_12
0x4000b8e	     0xf853effffff	                           jne 0x4000ad2	       747	deflate.c	FUNCTION_12
0x4000b94	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       748	deflate.c	FUNCTION_12
0x4000b98	        0x48894520	            mov qword [rbp + 0x20], rax 	       748	deflate.c	FUNCTION_12
0x4000b9c	      0xe931ffffff	                           jmp 0x4000ad2	       748	deflate.c	FUNCTION_12
0x4000ba1	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000ba6	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000baa	          0x4589ee	                          mov r14d, r13d	       741	deflate.c	FUNCTION_12
0x4000bad	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x4000bb0	      0xe800000000	                          call 0x4000bb5	        53	string3.h	FUNCTION_25	CALL_3
0x4000bb5	      0x4d01742418	            add qword [r12 + 0x18], r14 	       742	deflate.c	FUNCTION_12	IF_1
0x4000bba	        0x4c017520	            add qword [rbp + 0x20], r14 	       743	deflate.c	FUNCTION_12	IF_2
0x4000bbe	      0x4d01742428	            add qword [r12 + 0x28], r14 	       744	deflate.c	FUNCTION_12
0x4000bc3	      0x45296c2420	            sub dword [r12 + 0x20], r13d	       745	deflate.c	FUNCTION_12	CALL_2
0x4000bc8	        0x4c297528	             sub qword [rbp + 0x28], r14	       747	deflate.c	FUNCTION_12
0x4000bcc	     0xf8576ffffff	                           jne 0x4000b48	       747	deflate.c	FUNCTION_12
0x4000bd2	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       748	deflate.c	FUNCTION_12
0x4000bd6	        0x48894520	            mov qword [rbp + 0x20], rax 	       748	deflate.c	FUNCTION_12
0x4000bda	      0xe969ffffff	                           jmp 0x4000b48	       748	deflate.c	FUNCTION_12
deflateGetDictionary	DO,0:ELSE,0:WHILE,0:CALL,2:functions,0:IF,4:SWITCH,0:FOR,0	69
0x4001ce0	              0x55	                                push rbp	       449	deflate.c	
0x4001ce1	              0x53	                                push rbx	       449	deflate.c	
0x4001ce2	      0xb8feffffff	                     mov eax, 0xfffffffe	       454	deflate.c	FUNCTION_3
0x4001ce7	        0x4883ec08	                              sub rsp, 8	       449	deflate.c	
0x4001ceb	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x4001cee	            0x741c	                            je 0x4001d0c	       357	deflate.c	
0x4001cf0	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x4001cf5	            0x7415	                            je 0x4001d0c	       357	deflate.c	
0x4001cf7	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x4001cfc	            0x740e	                            je 0x4001d0c	       358	deflate.c	
0x4001cfe	        0x4c8b4f38	              mov r9, qword [rdi + 0x38]	       360	deflate.c	FUNCTION_2
0x4001d02	          0x4d85c9	                             test r9, r9	       361	deflate.c	FUNCTION_2	IF_1
0x4001d05	            0x7405	                            je 0x4001d0c	       361	deflate.c	FUNCTION_2	IF_1
0x4001d07	          0x493b39	                     cmp rdi, qword [r9]	       361	deflate.c	FUNCTION_2	IF_1
0x4001d0a	            0x740c	                            je 0x4001d18	       361	deflate.c	FUNCTION_2	IF_1
0x4001d0c	        0x4883c408	                              add rsp, 8	       464	deflate.c	FUNCTION_3	CALL_2
0x4001d10	              0x5b	                                 pop rbx	       464	deflate.c	FUNCTION_3	CALL_2
0x4001d11	              0x5d	                                 pop rbp	       464	deflate.c	FUNCTION_3	CALL_2
0x4001d12	              0xc3	                                     ret	       464	deflate.c	FUNCTION_3	CALL_2
0x4001d13	       0xf1f440000	                   nop dword [rax + rax]	       464	deflate.c	FUNCTION_3	CALL_2
0x4001d18	        0x418b4108	                 mov eax, dword [r9 + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x4001d1c	      0xbf01000000	                              mov edi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4001d21	          0x8d48d6	                   lea ecx, [rax - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x4001d24	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x4001d27	            0x7717	                            ja 0x4001d40	       361	deflate.c	FUNCTION_2	IF_1
0x4001d29	    0x48bf01800088	          movabs rdi, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x4001d33	          0x48d3ef	                             shr rdi, cl	       361	deflate.c	FUNCTION_2	IF_1
0x4001d36	          0x83e701	                              and edi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4001d39	        0x4883f701	                              xor rdi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4001d3d	          0x83e701	                              and edi, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4001d40	          0x83f871	                           cmp eax, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x4001d43	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x4001d46	      0x3d9a020000	                          cmp eax, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x4001d4b	           0xf95c0	                                setne al	       369	deflate.c	FUNCTION_2	IF_2
0x4001d4e	            0x84c1	                             test cl, al	       369	deflate.c	FUNCTION_2	IF_2
0x4001d50	            0x740a	                            je 0x4001d5c	       369	deflate.c	FUNCTION_2	IF_2
0x4001d52	          0x4084ff	                           test dil, dil	       369	deflate.c	FUNCTION_2	IF_2
0x4001d55	      0xb8feffffff	                     mov eax, 0xfffffffe	       454	deflate.c	FUNCTION_3
0x4001d5a	            0x75b0	                           jne 0x4001d0c	       369	deflate.c	FUNCTION_2	IF_2
0x4001d5c	          0x4889f7	                            mov rdi, rsi	       369	deflate.c	FUNCTION_2	IF_2
0x4001d5f	    0x418b81b40000	              mov eax, dword [r9 + 0xb4]	       456	deflate.c	FUNCTION_3
0x4001d66	    0x418bb1ac0000	              mov esi, dword [r9 + 0xac]	       456	deflate.c	FUNCTION_3
0x4001d6d	        0x418b4950	              mov ecx, dword [r9 + 0x50]	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x4001d71	          0x4889d5	                            mov rbp, rdx	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x4001d74	        0x448d0406	                    lea r8d, [rsi + rax]	       456	deflate.c	FUNCTION_3
0x4001d78	            0x89cb	                            mov ebx, ecx	       456	deflate.c	FUNCTION_3
0x4001d7a	          0x4139c8	                            cmp r8d, ecx	       456	deflate.c	FUNCTION_3
0x4001d7d	        0x410f46d8	                         cmovbe ebx, r8d	       456	deflate.c	FUNCTION_3
0x4001d81	          0x4885ff	                           test rdi, rdi	       459	deflate.c	FUNCTION_3
0x4001d84	            0x7418	                            je 0x4001d9e	       459	deflate.c	FUNCTION_3
0x4001d86	            0x85db	                           test ebx, ebx	       459	deflate.c	FUNCTION_3
0x4001d88	            0x7414	                            je 0x4001d9e	       459	deflate.c	FUNCTION_3
0x4001d8a	          0x4801f0	                            add rax, rsi	        53	string3.h	FUNCTION_25	CALL_3
0x4001d8d	            0x89da	                            mov edx, ebx	       460	deflate.c	FUNCTION_3
0x4001d8f	          0x4829d0	                            sub rax, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4001d92	        0x49034160	              add rax, qword [r9 + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x4001d96	          0x4889c6	                            mov rsi, rax	        53	string3.h	FUNCTION_25	CALL_3
0x4001d99	      0xe800000000	                          call 0x4001d9e	        53	string3.h	FUNCTION_25	CALL_3
0x4001d9e	          0x4885ed	                           test rbp, rbp	       461	deflate.c	FUNCTION_3	IF_2
0x4001da1	            0x740d	                            je 0x4001db0	       461	deflate.c	FUNCTION_3	IF_2
0x4001da3	          0x895d00	                    mov dword [rbp], ebx	       462	deflate.c	FUNCTION_3	IF_2
0x4001da6	        0x4883c408	                              add rsp, 8	       464	deflate.c	FUNCTION_3	CALL_2
0x4001daa	            0x31c0	                            xor eax, eax	       463	deflate.c	FUNCTION_3	IF_3
0x4001dac	              0x5b	                                 pop rbx	       464	deflate.c	FUNCTION_3	CALL_2
0x4001dad	              0x5d	                                 pop rbp	       464	deflate.c	FUNCTION_3	CALL_2
0x4001dae	              0xc3	                                     ret	       464	deflate.c	FUNCTION_3	CALL_2
0x4001daf	              0x90	                                     nop	       464	deflate.c	FUNCTION_3	CALL_2
0x4001db0	            0x31c0	                            xor eax, eax	       463	deflate.c	FUNCTION_3	IF_3
0x4001db2	      0xe955ffffff	                           jmp 0x4001d0c	       463	deflate.c	FUNCTION_3	IF_3
deflateTune	DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:IF,1:SWITCH,0:FOR,0	42
0x4002300	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x4002303	          0x4189ca	                           mov r10d, ecx	       623	deflate.c	
0x4002306	      0xb8feffffff	                     mov eax, 0xfffffffe	       626	deflate.c	
0x400230b	            0x741c	                            je 0x4002329	       357	deflate.c	
0x400230d	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x4002312	            0x7415	                            je 0x4002329	       357	deflate.c	
0x4002314	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x4002319	            0x740e	                            je 0x4002329	       358	deflate.c	
0x400231b	        0x4c8b4f38	              mov r9, qword [rdi + 0x38]	       360	deflate.c	FUNCTION_2
0x400231f	          0x4d85c9	                             test r9, r9	       361	deflate.c	FUNCTION_2	IF_1
0x4002322	            0x7405	                            je 0x4002329	       361	deflate.c	FUNCTION_2	IF_1
0x4002324	          0x493b39	                     cmp rdi, qword [r9]	       361	deflate.c	FUNCTION_2	IF_1
0x4002327	            0x7407	                            je 0x4002330	       361	deflate.c	FUNCTION_2	IF_1
0x4002329	            0xf3c3	                                     ret	       633	deflate.c	FUNCTION_9
0x400232b	       0xf1f440000	                   nop dword [rax + rax]	       633	deflate.c	FUNCTION_9
0x4002330	        0x418b7908	                 mov edi, dword [r9 + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x4002334	      0xb801000000	                              mov eax, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002339	          0x8d4fd6	                   lea ecx, [rdi - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x400233c	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x400233f	            0x7717	                            ja 0x4002358	       361	deflate.c	FUNCTION_2	IF_1
0x4002341	    0x48b801800088	          movabs rax, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x400234b	          0x48d3e8	                             shr rax, cl	       361	deflate.c	FUNCTION_2	IF_1
0x400234e	          0x83e001	                              and eax, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002351	        0x4883f001	                              xor rax, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002355	          0x83e001	                              and eax, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002358	    0x81ff9a020000	                          cmp edi, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x400235e	        0x410f95c3	                              setne r11b	       369	deflate.c	FUNCTION_2	IF_2
0x4002362	          0x83ff71	                           cmp edi, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x4002365	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x4002368	          0x4184cb	                           test r11b, cl	       369	deflate.c	FUNCTION_2	IF_2
0x400236b	            0x7413	                            je 0x4002380	       369	deflate.c	FUNCTION_2	IF_2
0x400236d	            0x84c0	                             test al, al	       369	deflate.c	FUNCTION_2	IF_2
0x400236f	            0x740f	                            je 0x4002380	       369	deflate.c	FUNCTION_2	IF_2
0x4002371	      0xb8feffffff	                     mov eax, 0xfffffffe	       626	deflate.c	
0x4002376	              0xc3	                                     ret	       626	deflate.c	
0x4002377	    0x660f1f840000	                    nop word [rax + rax]	       626	deflate.c	
0x4002380	    0x4189b1cc0000	              mov dword [r9 + 0xcc], esi	       628	deflate.c	FUNCTION_9
0x4002387	    0x418991c00000	              mov dword [r9 + 0xc0], edx	       629	deflate.c	FUNCTION_9
0x400238e	            0x31c0	                            xor eax, eax	       632	deflate.c	FUNCTION_9
0x4002390	    0x458991d00000	             mov dword [r9 + 0xd0], r10d	       630	deflate.c	FUNCTION_9	CALL_1
0x4002397	    0x458981bc0000	              mov dword [r9 + 0xbc], r8d	       631	deflate.c	FUNCTION_9
0x400239e	              0xc3	                                     ret	       633	deflate.c	FUNCTION_9
deflatePrime	DO,1:ELSE,0:WHILE,0:CALL,2:functions,0:IF,3:SWITCH,0:FOR,0	77
0x40021f0	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x40021f3	      0xb8feffffff	                     mov eax, 0xfffffffe	       550	deflate.c	FUNCTION_7
0x40021f8	            0x742d	                            je 0x4002227	       357	deflate.c	
0x40021fa	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x40021ff	            0x7426	                            je 0x4002227	       357	deflate.c	
0x4002201	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x4002206	            0x741f	                            je 0x4002227	       358	deflate.c	
0x4002208	            0x4156	                                push r14	       546	deflate.c	
0x400220a	            0x4155	                                push r13	       546	deflate.c	
0x400220c	            0x4154	                                push r12	       546	deflate.c	
0x400220e	              0x55	                                push rbp	       546	deflate.c	
0x400220f	              0x53	                                push rbx	       546	deflate.c	
0x4002210	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	       360	deflate.c	FUNCTION_2
0x4002214	          0x4d85e4	                           test r12, r12	       361	deflate.c	FUNCTION_2	IF_1
0x4002217	            0x7406	                            je 0x400221f	       361	deflate.c	FUNCTION_2	IF_1
0x4002219	        0x493b3c24	                    cmp rdi, qword [r12]	       361	deflate.c	FUNCTION_2	IF_1
0x400221d	            0x7411	                            je 0x4002230	       361	deflate.c	FUNCTION_2	IF_1
0x400221f	              0x5b	                                 pop rbx	       565	deflate.c	FUNCTION_7	DO_1
0x4002220	              0x5d	                                 pop rbp	       565	deflate.c	FUNCTION_7	DO_1
0x4002221	            0x415c	                                 pop r12	       565	deflate.c	FUNCTION_7	DO_1
0x4002223	            0x415d	                                 pop r13	       565	deflate.c	FUNCTION_7	DO_1
0x4002225	            0x415e	                                 pop r14	       565	deflate.c	FUNCTION_7	DO_1
0x4002227	            0xf3c3	                                     ret	       565	deflate.c	FUNCTION_7	DO_1
0x4002229	     0xf1f80000000	                         nop dword [rax]	       565	deflate.c	FUNCTION_7	DO_1
0x4002230	          0x4189f5	                           mov r13d, esi	       565	deflate.c	FUNCTION_7	DO_1
0x4002233	      0x418b742408	                mov esi, dword [r12 + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x4002238	          0x4189d6	                           mov r14d, edx	       361	deflate.c	FUNCTION_2	IF_1
0x400223b	      0xba01000000	                              mov edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002240	          0x8d4ed6	                   lea ecx, [rsi - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x4002243	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x4002246	            0x771a	                            ja 0x4002262	       361	deflate.c	FUNCTION_2	IF_1
0x4002248	    0x48b801800088	          movabs rax, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x4002252	          0x48d3e8	                             shr rax, cl	       361	deflate.c	FUNCTION_2	IF_1
0x4002255	          0x4889c2	                            mov rdx, rax	       361	deflate.c	FUNCTION_2	IF_1
0x4002258	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x400225b	        0x4883f201	                              xor rdx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x400225f	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002262	          0x83fe71	                           cmp esi, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x4002265	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x4002268	    0x81fe9a020000	                          cmp esi, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x400226e	           0xf95c0	                                setne al	       369	deflate.c	FUNCTION_2	IF_2
0x4002271	            0x84c1	                             test cl, al	       369	deflate.c	FUNCTION_2	IF_2
0x4002273	            0x7409	                            je 0x400227e	       369	deflate.c	FUNCTION_2	IF_2
0x4002275	            0x84d2	                             test dl, dl	       369	deflate.c	FUNCTION_2	IF_2
0x4002277	      0xb8feffffff	                     mov eax, 0xfffffffe	       550	deflate.c	FUNCTION_7
0x400227c	            0x75a1	                           jne 0x400221f	       369	deflate.c	FUNCTION_2	IF_2
0x400227e	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       552	deflate.c	FUNCTION_7
0x4002283	      0xbb10000000	                           mov ebx, 0x10	       555	deflate.c	FUNCTION_7
0x4002288	        0x4883c002	                              add rax, 2	       552	deflate.c	FUNCTION_7
0x400228c	    0x493984241017	          cmp qword [r12 + 0x1710], rax 	       552	deflate.c	FUNCTION_7
0x4002294	            0x725c	                            jb 0x40022f2	       552	deflate.c	FUNCTION_7
0x4002296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       552	deflate.c	FUNCTION_7
0x40022a0	    0x418bbc243417	          mov edi, dword [r12 + 0x1734] 	       555	deflate.c	FUNCTION_7
0x40022a8	            0x89dd	                            mov ebp, ebx	       555	deflate.c	FUNCTION_7
0x40022aa	      0xb801000000	                              mov eax, 1	       558	deflate.c	FUNCTION_7	DO_1
0x40022af	            0x29fd	                            sub ebp, edi	       555	deflate.c	FUNCTION_7
0x40022b1	          0x4139ed	                           cmp r13d, ebp	       555	deflate.c	FUNCTION_7
0x40022b4	        0x410f4eed	                        cmovle ebp, r13d	       555	deflate.c	FUNCTION_7
0x40022b8	            0x89e9	                            mov ecx, ebp	       558	deflate.c	FUNCTION_7	DO_1
0x40022ba	            0xd3e0	                             shl eax, cl	       558	deflate.c	FUNCTION_7	DO_1
0x40022bc	            0x89f9	                            mov ecx, edi	       558	deflate.c	FUNCTION_7	DO_1
0x40022be	             0x1ef	                            add edi, ebp	       559	deflate.c	FUNCTION_7	DO_1
0x40022c0	          0x83e801	                              sub eax, 1	       558	deflate.c	FUNCTION_7	DO_1
0x40022c3	    0x4189bc243417	          mov dword [r12 + 0x1734], edi 	       559	deflate.c	FUNCTION_7	DO_1
0x40022cb	          0x4c89e7	                            mov rdi, r12	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x40022ce	          0x4421f0	                           and eax, r14d	       558	deflate.c	FUNCTION_7	DO_1
0x40022d1	            0xd3e0	                             shl eax, cl	       558	deflate.c	FUNCTION_7	DO_1
0x40022d3	    0x664109842430	              or word [r12 + 0x1730], ax	       558	deflate.c	FUNCTION_7	DO_1
0x40022dc	      0xe800000000	                          call 0x40022e1	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x40022e1	            0x89e9	                            mov ecx, ebp	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x40022e3	          0x41d3fe	                            sar r14d, cl	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x40022e6	          0x4129ed	                           sub r13d, ebp	       563	deflate.c	FUNCTION_7	DO_1
0x40022e9	            0x75b5	                           jne 0x40022a0	       563	deflate.c	FUNCTION_7	DO_1
0x40022eb	            0x31c0	                            xor eax, eax	       564	deflate.c	FUNCTION_7	DO_1	CALL_2
0x40022ed	      0xe92dffffff	                           jmp 0x400221f	       564	deflate.c	FUNCTION_7	DO_1	CALL_2
0x40022f2	      0xb8fbffffff	                     mov eax, 0xfffffffb	       553	deflate.c	FUNCTION_7
0x40022f7	      0xe923ffffff	                           jmp 0x400221f	       553	deflate.c	FUNCTION_7
deflate_stored	DO,1:ELSE,1:WHILE,0:CALL,11:functions,0:IF,20:SWITCH,0:FOR,0	479
0x4000be0	            0x4157	                                push r15	      1646	deflate.c	
0x4000be2	            0x4156	                                push r14	      1646	deflate.c	
0x4000be4	            0x4155	                                push r13	      1646	deflate.c	
0x4000be6	            0x4154	                                push r12	      1646	deflate.c	
0x4000be8	              0x55	                                push rbp	      1646	deflate.c	
0x4000be9	              0x53	                                push rbx	      1646	deflate.c	
0x4000bea	          0x4889fb	                            mov rbx, rdi	      1646	deflate.c	
0x4000bed	        0x4883ec38	                           sub rsp, 0x38	      1646	deflate.c	
0x4000bf1	        0x448b7750	           mov r14d, dword [rdi + 0x50] 	      1651	deflate.c	FUNCTION_20
0x4000bf5	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1651	deflate.c	FUNCTION_20
0x4000bf9	          0x488b0f	                    mov rcx, qword [rdi]	      1658	deflate.c	FUNCTION_20
0x4000bfc	        0x89742414	             mov dword [rsp + 0x14], esi	      1646	deflate.c	
0x4000c00	        0x4883e805	                              sub rax, 5	      1651	deflate.c	FUNCTION_20
0x4000c04	          0x4c39f0	                            cmp rax, r14	      1651	deflate.c	FUNCTION_20
0x4000c07	        0x4c0f46f0	                         cmovbe r14, rax	      1651	deflate.c	FUNCTION_20
0x4000c0b	          0x8b4108	                mov eax, dword [rcx + 8]	      1658	deflate.c	FUNCTION_20
0x4000c0e	        0x4c893424	                    mov qword [rsp], r14	      1651	deflate.c	FUNCTION_20
0x4000c12	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1658	deflate.c	FUNCTION_20
0x4000c16	            0x89c2	                            mov edx, eax	      1658	deflate.c	FUNCTION_20
0x4000c18	            0xeb1d	                           jmp 0x4000c37	      1658	deflate.c	FUNCTION_20
0x4000c1a	    0x660f1f440000	                    nop word [rax + rax]	      1658	deflate.c	FUNCTION_20
0x4000c20	            0x85ed	                           test ebp, ebp	      1722	deflate.c	FUNCTION_20	DO_1
0x4000c22	          0x488b0b	                    mov rcx, qword [rbx]	      1722	deflate.c	FUNCTION_20	DO_1
0x4000c25	     0xf8555010000	                           jne 0x4000d80	      1722	deflate.c	FUNCTION_20	DO_1
0x4000c2b	          0x4585e4	                         test r12d, r12d	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4000c2e	          0x8b5108	                mov edx, dword [rcx + 8]	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4000c31	     0xf85da010000	                           jne 0x4000e11	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4000c37	    0x8b8334170000	          mov eax, dword [rbx + 0x1734] 	      1665	deflate.c	FUNCTION_20	DO_1
0x4000c3d	          0x8b6920	            mov ebp, dword [rcx + 0x20] 	      1666	deflate.c	FUNCTION_20	DO_1
0x4000c40	          0x83c02a	                           add eax, 0x2a	      1665	deflate.c	FUNCTION_20	DO_1
0x4000c43	          0xc1f803	                              sar eax, 3	      1665	deflate.c	FUNCTION_20	DO_1
0x4000c46	            0x39e8	                            cmp eax, ebp	      1666	deflate.c	FUNCTION_20	DO_1
0x4000c48	     0xf87c2020000	                            ja 0x4000f10	      1666	deflate.c	FUNCTION_20	DO_1
0x4000c4e	    0x448b83ac0000	            mov r8d, dword [rbx + 0xac] 	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x4000c55	    0x442b83980000	             sub r8d, dword [rbx + 0x98]	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x4000c5c	            0x29c5	                            sub ebp, eax	      1669	deflate.c	FUNCTION_20	DO_1
0x4000c5e	            0x89d0	                            mov eax, edx	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x4000c60	          0x4489c6	                            mov esi, r8d	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x4000c63	          0x4801f0	                            add rax, rsi	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x4000c66	          0x4989f6	                            mov r14, rsi	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x4000c69	          0x8d3416	                    lea esi, [rsi + rdx]	      1672	deflate.c	FUNCTION_20	DO_1
0x4000c6c	    0x483dfeff0000	                         cmp rax, 0xfffe	      1672	deflate.c	FUNCTION_20	DO_1
0x4000c72	      0xb8ffff0000	                         mov eax, 0xffff	      1672	deflate.c	FUNCTION_20	DO_1
0x4000c77	           0xf46c6	                         cmovbe eax, esi	      1672	deflate.c	FUNCTION_20	DO_1
0x4000c7a	            0x39e8	                            cmp eax, ebp	      1672	deflate.c	FUNCTION_20	DO_1
0x4000c7c	           0xf46e8	                         cmovbe ebp, eax	      1672	deflate.c	FUNCTION_20	DO_1
0x4000c7f	          0x392c24	                    cmp dword [rsp], ebp	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c82	            0x762c	                           jbe 0x4000cb0	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c84	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c89	            0x85ed	                           test ebp, ebp	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c8b	        0x400f94c7	                                sete dil	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c8f	        0x4183fa04	                             cmp r10d, 4	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c93	           0xf95c0	                                setne al	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c96	          0x4084c7	                            test dil, al	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c99	     0xf8571020000	                           jne 0x4000f10	      1681	deflate.c	FUNCTION_20	DO_1
0x4000c9f	          0x4585d2	                         test r10d, r10d	      1681	deflate.c	FUNCTION_20	DO_1
0x4000ca2	     0xf8468020000	                            je 0x4000f10	      1681	deflate.c	FUNCTION_20	DO_1
0x4000ca8	            0x39ee	                            cmp esi, ebp	      1682	deflate.c	FUNCTION_20	DO_1
0x4000caa	     0xf8560020000	                           jne 0x4000f10	      1682	deflate.c	FUNCTION_20	DO_1
0x4000cb0	          0x4531e4	                          xor r12d, r12d	      1689	deflate.c	FUNCTION_20	DO_1
0x4000cb3	      0x837c241404	               cmp dword [rsp + 0x14], 4	      1689	deflate.c	FUNCTION_20	DO_1
0x4000cb8	     0xf842a020000	                            je 0x4000ee8	      1689	deflate.c	FUNCTION_20	DO_1
0x4000cbe	            0x31d2	                            xor edx, edx	      1690	deflate.c	FUNCTION_20	DO_1
0x4000cc0	            0x31f6	                            xor esi, esi	      1690	deflate.c	FUNCTION_20	DO_1
0x4000cc2	          0x4489e1	                           mov ecx, r12d	      1690	deflate.c	FUNCTION_20	DO_1
0x4000cc5	          0x4889df	                            mov rdi, rbx	      1690	deflate.c	FUNCTION_20	DO_1
0x4000cc8	      0xe800000000	                          call 0x4000ccd	      1690	deflate.c	FUNCTION_20	DO_1
0x4000ccd	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1693	deflate.c	FUNCTION_20	DO_1
0x4000cd1	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1693	deflate.c	FUNCTION_20	DO_1
0x4000cd5	            0x89e9	                            mov ecx, ebp	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4000cd7	          0xc1e908	                              shr ecx, 8	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4000cda	      0x40886c02fc	           mov byte [rdx + rax - 4], bpl	      1693	deflate.c	FUNCTION_20	DO_1
0x4000cdf	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4000ce3	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4000ce7	        0x884c02fd	            mov byte [rdx + rax - 3], cl	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4000ceb	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1695	deflate.c	FUNCTION_20	DO_1
0x4000cef	            0x89e9	                            mov ecx, ebp	      1695	deflate.c	FUNCTION_20	DO_1
0x4000cf1	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1695	deflate.c	FUNCTION_20	DO_1
0x4000cf5	            0xf7d1	                                 not ecx	      1695	deflate.c	FUNCTION_20	DO_1
0x4000cf7	        0x884c02fe	            mov byte [rdx + rax - 2], cl	      1695	deflate.c	FUNCTION_20	DO_1
0x4000cfb	            0x89e8	                            mov eax, ebp	      1696	deflate.c	FUNCTION_20	DO_1
0x4000cfd	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1696	deflate.c	FUNCTION_20	DO_1
0x4000d01	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1696	deflate.c	FUNCTION_20	DO_1
0x4000d05	            0xf7d0	                                 not eax	      1696	deflate.c	FUNCTION_20	DO_1
0x4000d07	          0xc1e808	                              shr eax, 8	      1696	deflate.c	FUNCTION_20	DO_1
0x4000d0a	        0x884411ff	            mov byte [rcx + rdx - 1], al	      1696	deflate.c	FUNCTION_20	DO_1
0x4000d0e	          0x4c8b2b	                    mov r13, qword [rbx]	      1699	deflate.c	FUNCTION_20	DO_1
0x4000d11	        0x4d8b7d38	            mov r15, qword [r13 + 0x38] 	       734	deflate.c	
0x4000d15	          0x4c89ff	                            mov rdi, r15	       736	deflate.c	FUNCTION_12
0x4000d18	      0xe800000000	                          call 0x4000d1d	       736	deflate.c	FUNCTION_12
0x4000d1d	        0x498b4f28	            mov rcx, qword [r15 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4000d21	        0x418b4520	            mov eax, dword [r13 + 0x20] 	       738	deflate.c	FUNCTION_12
0x4000d25	            0x39c1	                            cmp ecx, eax	       738	deflate.c	FUNCTION_12
0x4000d27	           0xf47c8	                          cmova ecx, eax	       738	deflate.c	FUNCTION_12
0x4000d2a	            0x85c9	                           test ecx, ecx	       739	deflate.c	FUNCTION_12
0x4000d2c	     0xf8566010000	                           jne 0x4000e98	       739	deflate.c	FUNCTION_12
0x4000d32	          0x4585f6	                         test r14d, r14d	      1708	deflate.c	FUNCTION_20	DO_1
0x4000d35	     0xf84e5feffff	                            je 0x4000c20	      1708	deflate.c	FUNCTION_20	DO_1
0x4000d3b	          0x488b03	                    mov rax, qword [rbx]	      1711	deflate.c	FUNCTION_20	DO_1
0x4000d3e	          0x4139ee	                           cmp r14d, ebp	      1711	deflate.c	FUNCTION_20	DO_1
0x4000d41	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000d48	        0x440f47f5	                         cmova r14d, ebp	        53	string3.h	FUNCTION_25	CALL_3
0x4000d4c	        0x48037360	             add rsi, qword [rbx + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x4000d50	          0x4589f7	                          mov r15d, r14d	      1711	deflate.c	FUNCTION_20	DO_1
0x4000d53	          0x4429f5	                           sub ebp, r14d	      1716	deflate.c	FUNCTION_20	DO_1	IF_5
0x4000d56	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000d5a	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x4000d5d	      0xe800000000	                          call 0x4000d62	        53	string3.h	FUNCTION_25	CALL_3
0x4000d62	          0x488b0b	                    mov rcx, qword [rbx]	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x4000d65	        0x4c017918	            add qword [rcx + 0x18], r15 	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x4000d69	        0x44297120	            sub dword [rcx + 0x20], r14d	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4000d6d	        0x4c017928	            add qword [rcx + 0x28], r15 	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4000d71	    0x4c01bb980000	            add qword [rbx + 0x98], r15 	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x4000d78	            0x85ed	                           test ebp, ebp	      1722	deflate.c	FUNCTION_20	DO_1
0x4000d7a	     0xf84abfeffff	                            je 0x4000c2b	      1722	deflate.c	FUNCTION_20	DO_1
0x4000d80	        0x448b4908	                mov r9d, dword [rcx + 8]	      1169	deflate.c	
0x4000d84	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	      1723	deflate.c	FUNCTION_20	DO_1
0x4000d88	          0x4439cd	                            cmp ebp, r9d	      1171	deflate.c	
0x4000d8b	     0xf836f010000	                           jae 0x4000f00	      1171	deflate.c	
0x4000d91	          0x4489c8	                            mov eax, r9d	      1171	deflate.c	
0x4000d94	          0x4189e9	                            mov r9d, ebp	      1171	deflate.c	
0x4000d97	            0x29e8	                            sub eax, ebp	      1171	deflate.c	
0x4000d99	          0x488b31	                    mov rsi, qword [rcx]	        53	string3.h	FUNCTION_25	CALL_3
0x4000d9c	          0x4589ca	                           mov r10d, r9d	      1176	deflate.c	IF_22
0x4000d9f	          0x894108	                mov dword [rcx + 8], eax	      1174	deflate.c	
0x4000da2	          0x4c89d2	                            mov rdx, r10	        53	string3.h	FUNCTION_25	CALL_3
0x4000da5	          0x4c89c7	                             mov rdi, r8	        53	string3.h	FUNCTION_25	CALL_3
0x4000da8	      0x44894c2428	             mov dword [rsp + 0x28], r9d	      1176	deflate.c	IF_22
0x4000dad	      0x48894c2420	             mov qword [rsp + 0x20], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4000db2	      0x4c89542418	             mov qword [rsp + 0x18], r10	        53	string3.h	FUNCTION_25	CALL_3
0x4000db7	      0xe800000000	                          call 0x4000dbc	        53	string3.h	FUNCTION_25	CALL_3
0x4000dbc	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1177	deflate.c	
0x4000dc1	          0x4989c0	                             mov r8, rax	        53	string3.h	FUNCTION_25	CALL_3
0x4000dc4	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      1177	deflate.c	
0x4000dc9	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	      1177	deflate.c	
0x4000dce	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      1177	deflate.c	
0x4000dd2	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1177	deflate.c	
0x4000dd5	          0x83f801	                              cmp eax, 1	      1177	deflate.c	
0x4000dd8	     0xf8442030000	                            je 0x4001120	      1177	deflate.c	
0x4000dde	          0x83f802	                              cmp eax, 2	      1181	deflate.c	IF_23
0x4000de1	     0xf84c9030000	                            je 0x40011b0	      1181	deflate.c	IF_23
0x4000de7	          0x4c0111	                    add qword [rcx], r10	      1185	deflate.c	ELSE_2	IF_24
0x4000dea	        0x4c015110	            add qword [rcx + 0x10], r10 	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x4000dee	          0x488b0b	                    mov rcx, qword [rbx]	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x4000df1	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x4000df5	            0x89e8	                            mov eax, ebp	      1724	deflate.c	FUNCTION_20	DO_1
0x4000df7	          0x296920	             sub dword [rcx + 0x20], ebp	      1725	deflate.c	FUNCTION_20	DO_1
0x4000dfa	        0x48014128	            add qword [rcx + 0x28], rax 	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x4000dfe	          0x4901c0	                             add r8, rax	      1724	deflate.c	FUNCTION_20	DO_1
0x4000e01	          0x4585e4	                         test r12d, r12d	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4000e04	          0x8b5108	                mov edx, dword [rcx + 8]	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4000e07	        0x4c894118	              mov qword [rcx + 0x18], r8	      1724	deflate.c	FUNCTION_20	DO_1
0x4000e0b	     0xf8426feffff	                            je 0x4000c37	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4000e11	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	      1737	deflate.c	FUNCTION_20
0x4000e16	      0xbd01000000	                              mov ebp, 1	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4000e1b	          0x4129d4	                           sub r12d, edx	      1737	deflate.c	FUNCTION_20
0x4000e1e	     0xf84fc000000	                            je 0x4000f20	      1737	deflate.c	FUNCTION_20
0x4000e24	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1741	deflate.c	FUNCTION_20	IF_8
0x4000e27	          0x4139c4	                           cmp r12d, eax	      1741	deflate.c	FUNCTION_20	IF_8
0x4000e2a	     0xf831c030000	                           jae 0x400114c	      1741	deflate.c	FUNCTION_20	IF_8
0x4000e30	    0x8bbbac000000	            mov edi, dword [rbx + 0xac] 	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4000e36	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4000e3a	          0x4589e6	                          mov r14d, r12d	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4000e3d	          0x4829fa	                            sub rdx, rdi	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4000e40	          0x4889fe	                            mov rsi, rdi	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4000e43	          0x4c39f2	                            cmp rdx, r14	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4000e46	     0xf8690030000	                           jbe 0x40011dc	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4000e4c	          0x488b31	                    mov rsi, qword [rcx]	        53	string3.h	FUNCTION_25	CALL_3
0x4000e4f	        0x48037b60	             add rdi, qword [rbx + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x4000e53	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x4000e56	          0x4c29f6	                            sub rsi, r14	        53	string3.h	FUNCTION_25	CALL_3
0x4000e59	      0xe800000000	                          call 0x4000e5e	        53	string3.h	FUNCTION_25	CALL_3
0x4000e5e	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x4000e64	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x4000e67	          0x4401e2	                           add edx, r12d	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x4000e6a	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x4000e70	    0x8b8b2c170000	          mov ecx, dword [rbx + 0x172c] 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4000e76	            0x89d7	                            mov edi, edx	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4000e78	    0x4889bb980000	             mov qword [rbx + 0x98], rdi	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4000e7f	            0x29c8	                            sub eax, ecx	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4000e81	          0x4439e0	                           cmp eax, r12d	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4000e84	        0x410f47c4	                         cmova eax, r12d	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4000e88	             0x1c8	                            add eax, ecx	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4000e8a	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4000e90	      0xe991000000	                           jmp 0x4000f26	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4000e95	           0xf1f00	                         nop dword [rax]	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4000e98	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000e9c	        0x498b7720	            mov rsi, qword [r15 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000ea0	          0x4189cb	                           mov r11d, ecx	       741	deflate.c	FUNCTION_12
0x4000ea3	          0x4c89da	                            mov rdx, r11	        53	string3.h	FUNCTION_25	CALL_3
0x4000ea6	        0x894c2420	             mov dword [rsp + 0x20], ecx	       741	deflate.c	FUNCTION_12
0x4000eaa	      0x4c895c2418	             mov qword [rsp + 0x18], r11	        53	string3.h	FUNCTION_25	CALL_3
0x4000eaf	      0xe800000000	                          call 0x4000eb4	        53	string3.h	FUNCTION_25	CALL_3
0x4000eb4	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       742	deflate.c	FUNCTION_12	IF_1
0x4000eb9	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       745	deflate.c	FUNCTION_12	CALL_2
0x4000ebd	        0x4d015d18	            add qword [r13 + 0x18], r11 	       742	deflate.c	FUNCTION_12	IF_1
0x4000ec1	        0x4d015f20	            add qword [r15 + 0x20], r11 	       743	deflate.c	FUNCTION_12	IF_2
0x4000ec5	        0x4d015d28	            add qword [r13 + 0x28], r11 	       744	deflate.c	FUNCTION_12
0x4000ec9	        0x41294d20	             sub dword [r13 + 0x20], ecx	       745	deflate.c	FUNCTION_12	CALL_2
0x4000ecd	        0x4d295f28	             sub qword [r15 + 0x28], r11	       747	deflate.c	FUNCTION_12
0x4000ed1	     0xf855bfeffff	                           jne 0x4000d32	       747	deflate.c	FUNCTION_12
0x4000ed7	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4000edb	        0x49894720	             mov qword [r15 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4000edf	      0xe94efeffff	                           jmp 0x4000d32	       748	deflate.c	FUNCTION_12
0x4000ee4	         0xf1f4000	                         nop dword [rax]	       748	deflate.c	FUNCTION_12
0x4000ee8	          0x4401f2	                           add edx, r14d	      1689	deflate.c	FUNCTION_20	DO_1
0x4000eeb	          0x4531e4	                          xor r12d, r12d	      1689	deflate.c	FUNCTION_20	DO_1
0x4000eee	            0x39ea	                            cmp edx, ebp	      1689	deflate.c	FUNCTION_20	DO_1
0x4000ef0	        0x410f94c4	                               sete r12b	      1689	deflate.c	FUNCTION_20	DO_1
0x4000ef4	      0xe9c5fdffff	                           jmp 0x4000cbe	      1689	deflate.c	FUNCTION_20	DO_1
0x4000ef9	     0xf1f80000000	                         nop dword [rax]	      1689	deflate.c	FUNCTION_20	DO_1
0x4000f00	          0x4585c9	                           test r9d, r9d	      1172	deflate.c	
0x4000f03	     0xf84ecfeffff	                            je 0x4000df5	      1172	deflate.c	
0x4000f09	            0x31c0	                            xor eax, eax	      1172	deflate.c	
0x4000f0b	      0xe989feffff	                           jmp 0x4000d99	      1172	deflate.c	
0x4000f10	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	      1737	deflate.c	FUNCTION_20
0x4000f15	            0x31ed	                            xor ebp, ebp	      1737	deflate.c	FUNCTION_20
0x4000f17	          0x4129d4	                           sub r12d, edx	      1737	deflate.c	FUNCTION_20
0x4000f1a	     0xf8504ffffff	                           jne 0x4000e24	      1737	deflate.c	FUNCTION_20
0x4000f20	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1737	deflate.c	FUNCTION_20
0x4000f26	            0x89d1	                            mov ecx, edx	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4000f28	    0x48398b381700	          cmp qword [rbx + 0x1738], rcx 	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4000f2f	          0x4889ce	                            mov rsi, rcx	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4000f32	            0x7307	                           jae 0x4000f3b	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4000f34	    0x48898b381700	          mov qword [rbx + 0x1738], rcx 	      1761	deflate.c	FUNCTION_20	IF_8
0x4000f3b	            0x85ed	                           test ebp, ebp	      1764	deflate.c	FUNCTION_20	IF_12
0x4000f3d	      0xb803000000	                              mov eax, 3	      1765	deflate.c	FUNCTION_20	IF_12
0x4000f42	            0x7414	                            je 0x4000f58	      1764	deflate.c	FUNCTION_20	IF_12
0x4000f44	        0x4883c438	                           add rsp, 0x38	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f48	              0x5b	                                 pop rbx	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f49	              0x5d	                                 pop rbp	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f4a	            0x415c	                                 pop r12	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f4c	            0x415d	                                 pop r13	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f4e	            0x415e	                                 pop r14	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f50	            0x415f	                                 pop r15	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f52	              0xc3	                                     ret	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f53	       0xf1f440000	                   nop dword [rax + rax]	      1815	deflate.c	FUNCTION_20	IF_20
0x4000f58	    0xf7442414fbff	    test dword [rsp + 0x14], 0xfffffffb 	      1768	deflate.c	FUNCTION_20	IF_13
0x4000f60	          0x4c8b23	                    mov r12, qword [rbx]	      1769	deflate.c	FUNCTION_20	IF_13
0x4000f63	      0x418b442408	                mov eax, dword [r12 + 8]	      1769	deflate.c	FUNCTION_20	IF_13
0x4000f68	     0xf8412010000	                            je 0x4001080	      1768	deflate.c	FUNCTION_20	IF_13
0x4000f6e	            0x85c0	                           test eax, eax	      1768	deflate.c	FUNCTION_20	IF_13
0x4000f70	     0xf850a010000	                           jne 0x4001080	      1768	deflate.c	FUNCTION_20	IF_13
0x4000f76	    0x483b8b980000	            cmp rcx, qword [rbx + 0x98] 	      1769	deflate.c	FUNCTION_20	IF_13
0x4000f7d	     0xf8432030000	                            je 0x40012b5	      1769	deflate.c	FUNCTION_20	IF_13
0x4000f83	    0x4839b3381700	          cmp qword [rbx + 0x1738], rsi 	      1789	deflate.c	FUNCTION_20	IF_18
0x4000f8a	            0x7307	                           jae 0x4000f93	      1789	deflate.c	FUNCTION_20	IF_18
0x4000f8c	    0x4889b3381700	          mov qword [rbx + 0x1738], rsi 	      1790	deflate.c	FUNCTION_20	IF_18	CALL_9
0x4000f93	    0x8b8334170000	          mov eax, dword [rbx + 0x1734] 	      1799	deflate.c	FUNCTION_20
0x4000f99	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1799	deflate.c	FUNCTION_20
0x4000f9d	      0xb9ffff0000	                         mov ecx, 0xffff	      1799	deflate.c	FUNCTION_20
0x4000fa2	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	      1801	deflate.c	FUNCTION_20
0x4000fa9	          0x83c02a	                           add eax, 0x2a	      1799	deflate.c	FUNCTION_20
0x4000fac	          0xc1f803	                              sar eax, 3	      1799	deflate.c	FUNCTION_20
0x4000faf	          0x4829c7	                            sub rdi, rax	      1799	deflate.c	FUNCTION_20
0x4000fb2	    0x4881ffffff00	                         cmp rdi, 0xffff	      1799	deflate.c	FUNCTION_20
0x4000fb9	          0x4889f8	                            mov rax, rdi	      1799	deflate.c	FUNCTION_20
0x4000fbc	        0x480f47c1	                          cmova rax, rcx	      1799	deflate.c	FUNCTION_20
0x4000fc0	            0x29f2	                            sub edx, esi	      1801	deflate.c	FUNCTION_20
0x4000fc2	          0x394350	            cmp dword [rbx + 0x50], eax 	      1802	deflate.c	FUNCTION_20
0x4000fc5	            0x89c1	                            mov ecx, eax	      1799	deflate.c	FUNCTION_20
0x4000fc7	         0xf464350	          cmovbe eax, dword [rbx + 0x50]	      1802	deflate.c	FUNCTION_20
0x4000fcb	            0x39d0	                            cmp eax, edx	      1802	deflate.c	FUNCTION_20
0x4000fcd	            0x7641	                           jbe 0x4001010	      1802	deflate.c	FUNCTION_20
0x4000fcf	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      1803	deflate.c	FUNCTION_20
0x4000fd4	            0x85d2	                           test edx, edx	      1803	deflate.c	FUNCTION_20
0x4000fd6	        0x400f95c7	                               setne dil	      1803	deflate.c	FUNCTION_20
0x4000fda	        0x4183f904	                              cmp r9d, 4	      1803	deflate.c	FUNCTION_20
0x4000fde	           0xf94c0	                                 sete al	      1803	deflate.c	FUNCTION_20
0x4000fe1	          0x4008c7	                              or dil, al	      1803	deflate.c	FUNCTION_20
0x4000fe4	     0xf84b2010000	                            je 0x400119c	      1803	deflate.c	FUNCTION_20
0x4000fea	          0x4585c9	                           test r9d, r9d	      1803	deflate.c	FUNCTION_20
0x4000fed	     0xf84a9010000	                            je 0x400119c	      1803	deflate.c	FUNCTION_20
0x4000ff3	          0x488b03	                    mov rax, qword [rbx]	      1804	deflate.c	FUNCTION_20
0x4000ff6	          0x8b7808	                mov edi, dword [rax + 8]	      1804	deflate.c	FUNCTION_20
0x4000ff9	            0x85ff	                           test edi, edi	      1804	deflate.c	FUNCTION_20
0x4000ffb	     0xf859b010000	                           jne 0x400119c	      1804	deflate.c	FUNCTION_20
0x4001001	            0x39d1	                            cmp ecx, edx	      1804	deflate.c	FUNCTION_20
0x4001003	     0xf8293010000	                            jb 0x400119c	      1804	deflate.c	FUNCTION_20
0x4001009	     0xf1f80000000	                         nop dword [rax]	      1804	deflate.c	FUNCTION_20
0x4001010	            0x39d1	                            cmp ecx, edx	      1805	deflate.c	FUNCTION_20
0x4001012	           0xf47ca	                          cmova ecx, edx	      1805	deflate.c	FUNCTION_20
0x4001015	          0x4531e4	                          xor r12d, r12d	      1807	deflate.c	FUNCTION_20	IF_20
0x4001018	      0x837c241404	               cmp dword [rsp + 0x14], 4	      1807	deflate.c	FUNCTION_20	IF_20
0x400101d	     0xf8468020000	                            je 0x400128b	      1807	deflate.c	FUNCTION_20	IF_20
0x4001023	        0x48037360	             add rsi, qword [rbx + 0x60]	      1808	deflate.c	FUNCTION_20	IF_20
0x4001027	            0x89cd	                            mov ebp, ecx	      1808	deflate.c	FUNCTION_20	IF_20
0x4001029	          0x4889df	                            mov rdi, rbx	      1808	deflate.c	FUNCTION_20	IF_20
0x400102c	          0x4889ea	                            mov rdx, rbp	      1808	deflate.c	FUNCTION_20	IF_20
0x400102f	          0x4489e1	                           mov ecx, r12d	      1808	deflate.c	FUNCTION_20	IF_20
0x4001032	      0xe800000000	                          call 0x4001037	      1808	deflate.c	FUNCTION_20	IF_20
0x4001037	    0x4801ab980000	            add qword [rbx + 0x98], rbp 	      1809	deflate.c	FUNCTION_20	IF_20
0x400103e	          0x488b2b	                    mov rbp, qword [rbx]	      1810	deflate.c	FUNCTION_20	IF_20
0x4001041	        0x4c8b6d38	            mov r13, qword [rbp + 0x38] 	       734	deflate.c	
0x4001045	          0x4c89ef	                            mov rdi, r13	       736	deflate.c	FUNCTION_12
0x4001048	      0xe800000000	                          call 0x400104d	       736	deflate.c	FUNCTION_12
0x400104d	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       737	deflate.c	FUNCTION_12
0x4001051	          0x8b5d20	            mov ebx, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x4001054	            0x39d8	                            cmp eax, ebx	       738	deflate.c	FUNCTION_12
0x4001056	           0xf46d8	                         cmovbe ebx, eax	       738	deflate.c	FUNCTION_12
0x4001059	            0x85db	                           test ebx, ebx	       739	deflate.c	FUNCTION_12
0x400105b	     0xf85af010000	                           jne 0x4001210	       739	deflate.c	FUNCTION_12
0x4001061	          0x4585e4	                         test r12d, r12d	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4001064	     0xf8432010000	                            je 0x400119c	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x400106a	        0x4883c438	                           add rsp, 0x38	      1815	deflate.c	FUNCTION_20	IF_20
0x400106e	      0xb802000000	                              mov eax, 2	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4001073	              0x5b	                                 pop rbx	      1815	deflate.c	FUNCTION_20	IF_20
0x4001074	              0x5d	                                 pop rbp	      1815	deflate.c	FUNCTION_20	IF_20
0x4001075	            0x415c	                                 pop r12	      1815	deflate.c	FUNCTION_20	IF_20
0x4001077	            0x415d	                                 pop r13	      1815	deflate.c	FUNCTION_20	IF_20
0x4001079	            0x415e	                                 pop r14	      1815	deflate.c	FUNCTION_20	IF_20
0x400107b	            0x415f	                                 pop r15	      1815	deflate.c	FUNCTION_20	IF_20
0x400107d	              0xc3	                                     ret	      1815	deflate.c	FUNCTION_20	IF_20
0x400107e	            0x6690	                                     nop	      1815	deflate.c	FUNCTION_20	IF_20
0x4001080	            0x89d5	                            mov ebp, edx	      1773	deflate.c	FUNCTION_20	IF_14
0x4001082	          0x4189c7	                           mov r15d, eax	      1773	deflate.c	FUNCTION_20	IF_14
0x4001085	            0xf7d5	                                 not ebp	      1773	deflate.c	FUNCTION_20	IF_14
0x4001087	           0x36b68	             add ebp, dword [rbx + 0x68]	      1773	deflate.c	FUNCTION_20	IF_14
0x400108a	            0x39c5	                            cmp ebp, eax	      1774	deflate.c	FUNCTION_20	IF_14
0x400108c	            0x7316	                           jae 0x40010a4	      1774	deflate.c	FUNCTION_20	IF_14
0x400108e	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      1774	deflate.c	FUNCTION_20	IF_14
0x4001091	    0x488bbb980000	            mov rdi, qword [rbx + 0x98] 	      1774	deflate.c	FUNCTION_20	IF_14
0x4001098	          0x4189c7	                           mov r15d, eax	      1774	deflate.c	FUNCTION_20	IF_14
0x400109b	          0x4839f7	                            cmp rdi, rsi	      1774	deflate.c	FUNCTION_20	IF_14
0x400109e	     0xf8da5010000	                           jge 0x4001249	      1774	deflate.c	FUNCTION_20	IF_14
0x40010a4	          0x4439fd	                           cmp ebp, r15d	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x40010a7	     0xf86ca000000	                           jbe 0x4001177	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x40010ad	          0x4585ff	                         test r15d, r15d	      1785	deflate.c	FUNCTION_20	IF_15
0x40010b0	          0x4889ce	                            mov rsi, rcx	      1785	deflate.c	FUNCTION_20	IF_15
0x40010b3	     0xf84cafeffff	                            je 0x4000f83	      1785	deflate.c	FUNCTION_20	IF_15
0x40010b9	        0x48034b60	             add rcx, qword [rbx + 0x60]	      1786	deflate.c	FUNCTION_20	IF_15
0x40010bd	          0x4489fd	                           mov ebp, r15d	      1786	deflate.c	FUNCTION_20	IF_15
0x40010c0	            0x31c0	                            xor eax, eax	      1786	deflate.c	FUNCTION_20	IF_15
0x40010c2	        0x498b3424	                    mov rsi, qword [r12]	        53	string3.h	FUNCTION_25	CALL_3
0x40010c6	          0x4589fe	                          mov r14d, r15d	      1176	deflate.c	IF_22
0x40010c9	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x40010cc	      0x4189442408	                mov dword [r12 + 8], eax	      1174	deflate.c	
0x40010d1	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x40010d4	      0xe800000000	                          call 0x40010d9	        53	string3.h	FUNCTION_25	CALL_3
0x40010d9	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_25	CALL_3
0x40010dc	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      1177	deflate.c	
0x40010e1	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1177	deflate.c	
0x40010e4	          0x83f801	                              cmp eax, 1	      1177	deflate.c	
0x40010e7	     0xf84f7010000	                            je 0x40012e4	      1177	deflate.c	
0x40010ed	          0x83f802	                              cmp eax, 2	      1181	deflate.c	IF_23
0x40010f0	     0xf84d4010000	                            je 0x40012ca	      1181	deflate.c	IF_23
0x40010f6	        0x4d013424	                    add qword [r12], r14	      1185	deflate.c	ELSE_2	IF_24
0x40010fa	      0x4d01742410	            add qword [r12 + 0x10], r14 	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x40010ff	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1186	deflate.c	ELSE_2	IF_24	CALL_40
0x4001105	          0x8d342a	                    lea esi, [rdx + rbp]	      1787	deflate.c	FUNCTION_20	IF_17
0x4001108	          0x4889f2	                            mov rdx, rsi	      1787	deflate.c	FUNCTION_20	IF_17
0x400110b	    0x89b3ac000000	             mov dword [rbx + 0xac], esi	      1787	deflate.c	FUNCTION_20	IF_17
0x4001111	      0xe96dfeffff	                           jmp 0x4000f83	      1787	deflate.c	FUNCTION_20	IF_17
0x4001116	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1787	deflate.c	FUNCTION_20	IF_17
0x4001120	        0x488b7960	            mov rdi, qword [rcx + 0x60] 	      1178	deflate.c	
0x4001124	          0x4489ca	                            mov edx, r9d	      1178	deflate.c	
0x4001127	          0x4c89c6	                             mov rsi, r8	      1178	deflate.c	
0x400112a	      0x4c89542420	             mov qword [rsp + 0x20], r10	      1178	deflate.c	
0x400112f	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1178	deflate.c	
0x4001134	      0xe800000000	                          call 0x4001139	      1178	deflate.c	
0x4001139	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1178	deflate.c	
0x400113e	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      1178	deflate.c	
0x4001143	        0x48894160	             mov qword [rcx + 0x60], rax	      1178	deflate.c	
0x4001147	      0xe99bfcffff	                           jmp 0x4000de7	      1178	deflate.c	
0x400114c	          0x488b31	                    mov rsi, qword [rcx]	        53	string3.h	FUNCTION_25	CALL_3
0x400114f	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001153	            0x89c2	                            mov edx, eax	      1743	deflate.c	FUNCTION_20	IF_8
0x4001155	    0xc78328170000	            mov dword [rbx + 0x1728], 2 	      1742	deflate.c	FUNCTION_20	IF_8
0x400115f	          0x4829d6	                            sub rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4001162	      0xe800000000	                          call 0x4001167	        53	string3.h	FUNCTION_25	CALL_3
0x4001167	          0x8b5350	            mov edx, dword [rbx + 0x50] 	      1744	deflate.c	FUNCTION_20	IF_8
0x400116a	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1744	deflate.c	FUNCTION_20	IF_8
0x4001170	            0x89d0	                            mov eax, edx	      1744	deflate.c	FUNCTION_20	IF_8
0x4001172	      0xe9f9fcffff	                           jmp 0x4000e70	      1744	deflate.c	FUNCTION_20	IF_8
0x4001177	            0x85ed	                           test ebp, ebp	      1785	deflate.c	FUNCTION_20	IF_15
0x4001179	          0x4889ce	                            mov rsi, rcx	      1785	deflate.c	FUNCTION_20	IF_15
0x400117c	     0xf8401feffff	                            je 0x4000f83	      1785	deflate.c	FUNCTION_20	IF_15
0x4001182	        0x48034b60	             add rcx, qword [rbx + 0x60]	      1786	deflate.c	FUNCTION_20	IF_15
0x4001186	          0x4439fd	                           cmp ebp, r15d	      1171	deflate.c	
0x4001189	     0xf836f010000	                           jae 0x40012fe	      1171	deflate.c	
0x400118f	          0x4489f8	                           mov eax, r15d	      1171	deflate.c	
0x4001192	          0x4189ef	                           mov r15d, ebp	      1171	deflate.c	
0x4001195	            0x29e8	                            sub eax, ebp	      1171	deflate.c	
0x4001197	      0xe926ffffff	                           jmp 0x40010c2	      1171	deflate.c	
0x400119c	        0x4883c438	                           add rsp, 0x38	      1815	deflate.c	FUNCTION_20	IF_20
0x40011a0	            0x31c0	                            xor eax, eax	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x40011a2	              0x5b	                                 pop rbx	      1815	deflate.c	FUNCTION_20	IF_20
0x40011a3	              0x5d	                                 pop rbp	      1815	deflate.c	FUNCTION_20	IF_20
0x40011a4	            0x415c	                                 pop r12	      1815	deflate.c	FUNCTION_20	IF_20
0x40011a6	            0x415d	                                 pop r13	      1815	deflate.c	FUNCTION_20	IF_20
0x40011a8	            0x415e	                                 pop r14	      1815	deflate.c	FUNCTION_20	IF_20
0x40011aa	            0x415f	                                 pop r15	      1815	deflate.c	FUNCTION_20	IF_20
0x40011ac	              0xc3	                                     ret	      1815	deflate.c	FUNCTION_20	IF_20
0x40011ad	           0xf1f00	                         nop dword [rax]	      1815	deflate.c	FUNCTION_20	IF_20
0x40011b0	        0x488b7960	            mov rdi, qword [rcx + 0x60] 	      1182	deflate.c	IF_23	CALL_39
0x40011b4	          0x4489ca	                            mov edx, r9d	      1182	deflate.c	IF_23	CALL_39
0x40011b7	          0x4c89c6	                             mov rsi, r8	      1182	deflate.c	IF_23	CALL_39
0x40011ba	      0x4c89542420	             mov qword [rsp + 0x20], r10	      1182	deflate.c	IF_23	CALL_39
0x40011bf	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1182	deflate.c	IF_23	CALL_39
0x40011c4	      0xe800000000	                          call 0x40011c9	      1182	deflate.c	IF_23	CALL_39
0x40011c9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1182	deflate.c	IF_23	CALL_39
0x40011ce	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      1182	deflate.c	IF_23	CALL_39
0x40011d3	        0x48894160	             mov qword [rcx + 0x60], rax	      1182	deflate.c	IF_23	CALL_39
0x40011d7	      0xe90bfcffff	                           jmp 0x4000de7	      1182	deflate.c	IF_23	CALL_39
0x40011dc	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x40011e0	            0x29c6	                            sub esi, eax	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x40011e2	    0x89b3ac000000	             mov dword [rbx + 0xac], esi	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x40011e8	            0x89f2	                            mov edx, esi	        53	string3.h	FUNCTION_25	CALL_3
0x40011ea	        0x488d3407	                    lea rsi, [rdi + rax]	        53	string3.h	FUNCTION_25	CALL_3
0x40011ee	      0xe800000000	                          call 0x40011f3	        53	string3.h	FUNCTION_25	CALL_3
0x40011f3	    0x8b8328170000	          mov eax, dword [rbx + 0x1728] 	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40011f9	          0x83f801	                              cmp eax, 1	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40011fc	     0xf86a5000000	                           jbe 0x40012a7	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001202	          0x488b0b	                    mov rcx, qword [rbx]	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001205	    0x8bbbac000000	            mov edi, dword [rbx + 0xac] 	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400120b	      0xe93cfcffff	                           jmp 0x4000e4c	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001210	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001214	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001218	          0x4189de	                           mov r14d, ebx	       741	deflate.c	FUNCTION_12
0x400121b	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x400121e	      0xe800000000	                          call 0x4001223	        53	string3.h	FUNCTION_25	CALL_3
0x4001223	        0x4c017518	            add qword [rbp + 0x18], r14 	       742	deflate.c	FUNCTION_12	IF_1
0x4001227	        0x4d017520	            add qword [r13 + 0x20], r14 	       743	deflate.c	FUNCTION_12	IF_2
0x400122b	        0x4c017528	            add qword [rbp + 0x28], r14 	       744	deflate.c	FUNCTION_12
0x400122f	          0x295d20	             sub dword [rbp + 0x20], ebx	       745	deflate.c	FUNCTION_12	CALL_2
0x4001232	        0x4d297528	             sub qword [r13 + 0x28], r14	       747	deflate.c	FUNCTION_12
0x4001236	     0xf8525feffff	                           jne 0x4001061	       747	deflate.c	FUNCTION_12
0x400123c	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4001240	        0x49894520	             mov qword [r13 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4001244	      0xe918feffff	                           jmp 0x4001061	       748	deflate.c	FUNCTION_12
0x4001249	          0x4829f7	                            sub rdi, rsi	      1776	deflate.c	FUNCTION_20
0x400124c	            0x29f2	                            sub edx, esi	      1777	deflate.c	FUNCTION_20
0x400124e	    0x4889bb980000	             mov qword [rbx + 0x98], rdi	      1776	deflate.c	FUNCTION_20
0x4001255	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1778	deflate.c	FUNCTION_20	IF_15
0x4001259	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1777	deflate.c	FUNCTION_20
0x400125f	          0x4801fe	                            add rsi, rdi	        53	string3.h	FUNCTION_25	CALL_3
0x4001262	      0xe800000000	                          call 0x4001267	        53	string3.h	FUNCTION_25	CALL_3
0x4001267	    0x8b8328170000	          mov eax, dword [rbx + 0x1728] 	      1779	deflate.c	FUNCTION_20	IF_15
0x400126d	          0x83f801	                              cmp eax, 1	      1779	deflate.c	FUNCTION_20	IF_15
0x4001270	            0x764d	                           jbe 0x40012bf	      1779	deflate.c	FUNCTION_20	IF_15
0x4001272	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      1779	deflate.c	FUNCTION_20	IF_15
0x4001278	          0x4c8b23	                    mov r12, qword [rbx]	      1779	deflate.c	FUNCTION_20	IF_15
0x400127b	           0x36b50	             add ebp, dword [rbx + 0x50]	      1781	deflate.c	FUNCTION_20	IF_15
0x400127e	      0x458b7c2408	               mov r15d, dword [r12 + 8]	      1781	deflate.c	FUNCTION_20	IF_15
0x4001283	          0x4889ca	                            mov rdx, rcx	      1781	deflate.c	FUNCTION_20	IF_15
0x4001286	      0xe919feffff	                           jmp 0x40010a4	      1781	deflate.c	FUNCTION_20	IF_15
0x400128b	          0x488b03	                    mov rax, qword [rbx]	      1806	deflate.c	FUNCTION_20	IF_20
0x400128e	          0x8b4008	                mov eax, dword [rax + 8]	      1807	deflate.c	FUNCTION_20	IF_20
0x4001291	            0x85c0	                           test eax, eax	      1807	deflate.c	FUNCTION_20	IF_20
0x4001293	           0xf94c0	                                 sete al	      1807	deflate.c	FUNCTION_20	IF_20
0x4001296	          0x4531e4	                          xor r12d, r12d	      1807	deflate.c	FUNCTION_20	IF_20
0x4001299	            0x39ca	                            cmp edx, ecx	      1807	deflate.c	FUNCTION_20	IF_20
0x400129b	        0x410f94c4	                               sete r12b	      1807	deflate.c	FUNCTION_20	IF_20
0x400129f	          0x4121c4	                           and r12d, eax	      1807	deflate.c	FUNCTION_20	IF_20
0x40012a2	      0xe97cfdffff	                           jmp 0x4001023	      1807	deflate.c	FUNCTION_20	IF_20
0x40012a7	          0x83c001	                              add eax, 1	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40012aa	    0x898328170000	          mov dword [rbx + 0x1728], eax 	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40012b0	      0xe94dffffff	                           jmp 0x4001202	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40012b5	      0xb801000000	                              mov eax, 1	      1770	deflate.c	FUNCTION_20
0x40012ba	      0xe985fcffff	                           jmp 0x4000f44	      1770	deflate.c	FUNCTION_20
0x40012bf	          0x83c001	                              add eax, 1	      1780	deflate.c	FUNCTION_20	IF_15
0x40012c2	    0x898328170000	          mov dword [rbx + 0x1728], eax 	      1780	deflate.c	FUNCTION_20	IF_15
0x40012c8	            0xeba8	                           jmp 0x4001272	      1780	deflate.c	FUNCTION_20	IF_15
0x40012ca	      0x498b7c2460	            mov rdi, qword [r12 + 0x60] 	      1182	deflate.c	IF_23	CALL_39
0x40012cf	          0x4489fa	                           mov edx, r15d	      1182	deflate.c	IF_23	CALL_39
0x40012d2	          0x4889ce	                            mov rsi, rcx	      1182	deflate.c	IF_23	CALL_39
0x40012d5	      0xe800000000	                          call 0x40012da	      1182	deflate.c	IF_23	CALL_39
0x40012da	      0x4989442460	             mov qword [r12 + 0x60], rax	      1182	deflate.c	IF_23	CALL_39
0x40012df	      0xe912feffff	                           jmp 0x40010f6	      1182	deflate.c	IF_23	CALL_39
0x40012e4	      0x498b7c2460	            mov rdi, qword [r12 + 0x60] 	      1178	deflate.c	
0x40012e9	          0x4489fa	                           mov edx, r15d	      1178	deflate.c	
0x40012ec	          0x4889ce	                            mov rsi, rcx	      1178	deflate.c	
0x40012ef	      0xe800000000	                          call 0x40012f4	      1178	deflate.c	
0x40012f4	      0x4989442460	             mov qword [r12 + 0x60], rax	      1178	deflate.c	
0x40012f9	      0xe9f8fdffff	                           jmp 0x40010f6	      1178	deflate.c	
0x40012fe	          0x4585ff	                         test r15d, r15d	      1172	deflate.c	
0x4001301	     0xf84fefdffff	                            je 0x4001105	      1172	deflate.c	
0x4001307	            0x31c0	                            xor eax, eax	      1172	deflate.c	
0x4001309	      0xe9b4fdffff	                           jmp 0x40010c2	      1172	deflate.c	
deflateBound	DO,2:ELSE,0:WHILE,0:CALL,1:functions,0:IF,7:SWITCH,1:FOR,0	107
0x40023a0	        0x4c8d4e07	                       lea r9, [rsi + 7]	       661	deflate.c	FUNCTION_10
0x40023a4	        0x488d463f	                   lea rax, [rsi + 0x3f]	       661	deflate.c	FUNCTION_10
0x40023a8	          0x4c89c9	                             mov rcx, r9	       661	deflate.c	FUNCTION_10
0x40023ab	        0x48c1e806	                              shr rax, 6	       661	deflate.c	FUNCTION_10
0x40023af	        0x48c1e903	                              shr rcx, 3	       661	deflate.c	FUNCTION_10
0x40023b3	          0x4801c8	                            add rax, rcx	       661	deflate.c	FUNCTION_10
0x40023b6	          0x4801f0	                            add rax, rsi	       661	deflate.c	FUNCTION_10
0x40023b9	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x40023bc	            0x741c	                            je 0x40023da	       357	deflate.c	
0x40023be	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x40023c3	            0x7415	                            je 0x40023da	       357	deflate.c	
0x40023c5	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x40023ca	            0x740e	                            je 0x40023da	       358	deflate.c	
0x40023cc	        0x4c8b4738	              mov r8, qword [rdi + 0x38]	       360	deflate.c	FUNCTION_2
0x40023d0	          0x4d85c0	                             test r8, r8	       361	deflate.c	FUNCTION_2	IF_1
0x40023d3	            0x7405	                            je 0x40023da	       361	deflate.c	FUNCTION_2	IF_1
0x40023d5	          0x493b38	                     cmp rdi, qword [r8]	       361	deflate.c	FUNCTION_2	IF_1
0x40023d8	            0x7406	                            je 0x40023e0	       361	deflate.c	FUNCTION_2	IF_1
0x40023da	        0x4883c00b	                            add rax, 0xb	       665	deflate.c	FUNCTION_10
0x40023de	              0xc3	                                     ret	       665	deflate.c	FUNCTION_10
0x40023df	              0x90	                                     nop	       665	deflate.c	FUNCTION_10
0x40023e0	        0x418b7808	                 mov edi, dword [r8 + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x40023e4	      0xba01000000	                              mov edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40023e9	          0x8d4fd6	                   lea ecx, [rdi - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x40023ec	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x40023ef	            0x7717	                            ja 0x4002408	       361	deflate.c	FUNCTION_2	IF_1
0x40023f1	    0x48ba01800088	          movabs rdx, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x40023fb	          0x48d3ea	                             shr rdx, cl	       361	deflate.c	FUNCTION_2	IF_1
0x40023fe	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002401	        0x4883f201	                              xor rdx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002405	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4002408	    0x81ff9a020000	                          cmp edi, 0x29a	       369	deflate.c	FUNCTION_2	IF_2
0x400240e	        0x410f95c2	                              setne r10b	       369	deflate.c	FUNCTION_2	IF_2
0x4002412	          0x83ff71	                           cmp edi, 0x71	       369	deflate.c	FUNCTION_2	IF_2
0x4002415	           0xf95c1	                                setne cl	       369	deflate.c	FUNCTION_2	IF_2
0x4002418	          0x4184ca	                           test r10b, cl	       369	deflate.c	FUNCTION_2	IF_2
0x400241b	            0x7404	                            je 0x4002421	       369	deflate.c	FUNCTION_2	IF_2
0x400241d	            0x84d2	                             test dl, dl	       369	deflate.c	FUNCTION_2	IF_2
0x400241f	            0x75b9	                           jne 0x40023da	       369	deflate.c	FUNCTION_2	IF_2
0x4002421	        0x418b5030	              mov edx, dword [r8 + 0x30]	       669	deflate.c	FUNCTION_10	IF_1
0x4002425	          0x83fa01	                              cmp edx, 1	       669	deflate.c	FUNCTION_10	IF_1
0x4002428	     0xf84c2000000	                            je 0x40024f0	       669	deflate.c	FUNCTION_10	IF_1
0x400242e	          0x83fa02	                              cmp edx, 2	       669	deflate.c	FUNCTION_10	IF_1
0x4002431	            0x744d	                            je 0x4002480	       669	deflate.c	FUNCTION_10	IF_1
0x4002433	          0x83fa01	                              cmp edx, 1	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4002436	          0x4819d2	                            sbb rdx, rdx	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4002439	          0x48f7d2	                                 not rdx	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400243c	          0x83e206	                              and edx, 6	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x400243f	      0x418378540f	              cmp dword [r8 + 0x54], 0xf	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4002444	            0x740a	                            je 0x4002450	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4002446	      0x488d440205	                lea rax, [rdx + rax + 5]	       704	deflate.c	FUNCTION_10	SWITCH_1
0x400244b	              0xc3	                                     ret	       704	deflate.c	FUNCTION_10	SWITCH_1
0x400244c	         0xf1f4000	                         nop dword [rax]	       704	deflate.c	FUNCTION_10	SWITCH_1
0x4002450	    0x4183b8880000	              cmp dword [r8 + 0x88], 0xf	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4002458	            0x75ec	                           jne 0x4002446	       703	deflate.c	FUNCTION_10	SWITCH_1
0x400245a	          0x4889f0	                            mov rax, rsi	       707	deflate.c	FUNCTION_10	IF_7
0x400245d	          0x4889f1	                            mov rcx, rsi	       707	deflate.c	FUNCTION_10	IF_7
0x4002460	        0x48c1ee19	                           shr rsi, 0x19	       707	deflate.c	FUNCTION_10	IF_7
0x4002464	        0x48c1e80c	                            shr rax, 0xc	       707	deflate.c	FUNCTION_10	IF_7
0x4002468	        0x48c1e90e	                            shr rcx, 0xe	       707	deflate.c	FUNCTION_10	IF_7
0x400246c	          0x4c01c8	                             add rax, r9	       707	deflate.c	FUNCTION_10	IF_7
0x400246f	          0x4801c8	                            add rax, rcx	       707	deflate.c	FUNCTION_10	IF_7
0x4002472	          0x4801f0	                            add rax, rsi	       707	deflate.c	FUNCTION_10	IF_7
0x4002475	          0x4801d0	                            add rax, rdx	       707	deflate.c	FUNCTION_10	IF_7
0x4002478	              0xc3	                                     ret	       707	deflate.c	FUNCTION_10	IF_7
0x4002479	     0xf1f80000000	                         nop dword [rax]	       707	deflate.c	FUNCTION_10	IF_7
0x4002480	        0x498b7838	              mov rdi, qword [r8 + 0x38]	       679	deflate.c	FUNCTION_10	SWITCH_1
0x4002484	          0x4885ff	                           test rdi, rdi	       679	deflate.c	FUNCTION_10	SWITCH_1
0x4002487	     0xf8483000000	                            je 0x4002510	       679	deflate.c	FUNCTION_10	SWITCH_1
0x400248d	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       681	deflate.c	FUNCTION_10	SWITCH_1
0x4002492	     0xf8488000000	                            je 0x4002520	       681	deflate.c	FUNCTION_10	SWITCH_1
0x4002498	          0x8b5720	            mov edx, dword [rdi + 0x20] 	       682	deflate.c	FUNCTION_10	SWITCH_1
0x400249b	          0x83c202	                              add edx, 2	       682	deflate.c	FUNCTION_10	SWITCH_1
0x400249e	        0x4883c212	                           add rdx, 0x12	       682	deflate.c	FUNCTION_10	SWITCH_1
0x40024a2	        0x488b4f28	            mov rcx, qword [rdi + 0x28] 	       683	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024a6	          0x4885c9	                           test rcx, rcx	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024a9	            0x7410	                            je 0x40024bb	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024ab	          0x4829d1	                            sub rcx, rdx	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024ae	            0x6690	                                     nop	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024b0	        0x4883c201	                              add rdx, 1	       686	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_3
0x40024b4	      0x807c11ff00	             cmp byte [rcx + rdx - 1], 0	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024b9	            0x75f5	                           jne 0x40024b0	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024bb	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       688	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4
0x40024bf	          0x4885c9	                           test rcx, rcx	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x40024c2	            0x7417	                            je 0x40024db	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x40024c4	          0x4829d1	                            sub rcx, rdx	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024c7	    0x660f1f840000	                    nop word [rax + rax]	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024d0	        0x4883c201	                              add rdx, 1	       691	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x40024d4	      0x807c11ff00	             cmp byte [rcx + rdx - 1], 0	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024d9	            0x75f5	                           jne 0x40024d0	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x40024db	          0x8b7f44	            mov edi, dword [rdi + 0x44] 	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x40024de	        0x488d4a02	                      lea rcx, [rdx + 2]	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x40024e2	            0x85ff	                           test edi, edi	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x40024e4	        0x480f45d1	                         cmovne rdx, rcx	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x40024e8	      0xe952ffffff	                           jmp 0x400243f	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x40024ed	           0xf1f00	                         nop dword [rax]	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x40024f0	    0x4183b8ac0000	                cmp dword [r8 + 0xac], 1	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40024f8	          0x4819d2	                            sbb rdx, rdx	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40024fb	        0x4883e2fc	             and rdx, 0xfffffffffffffffc	       674	deflate.c	FUNCTION_10	SWITCH_1
0x40024ff	        0x4883c20a	                            add rdx, 0xa	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4002503	      0xe937ffffff	                           jmp 0x400243f	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4002508	     0xf1f84000000	                   nop dword [rax + rax]	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4002510	      0xba12000000	                           mov edx, 0x12	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4002515	      0xe925ffffff	                           jmp 0x400243f	       678	deflate.c	FUNCTION_10	SWITCH_1
0x400251a	    0x660f1f440000	                    nop word [rax + rax]	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4002520	      0xba12000000	                           mov edx, 0x12	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4002525	      0xe978ffffff	                           jmp 0x40024a2	       678	deflate.c	FUNCTION_10	SWITCH_1
