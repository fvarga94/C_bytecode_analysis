_bfd_archive_64_bit_slurp_armap	functions,0:IF,14:SWITCH,0:FOR,1:CALL,27:WHILE,0:ELSE,0:DO,0	188
0x4000040	            0x4157	                                push r15	        39	archive64.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        39	archive64.c	FUNCTION_1
0x4000044	          0x4889fa	                            mov rdx, rdi	        54	archive64.c	FUNCTION_1	CALL_2
0x4000047	            0x4155	                                push r13	        39	archive64.c	FUNCTION_1
0x4000049	            0x4154	                                push r12	        39	archive64.c	FUNCTION_1
0x400004b	          0x4989ff	                            mov r15, rdi	        39	archive64.c	FUNCTION_1
0x400004e	              0x55	                                push rbp	        39	archive64.c	FUNCTION_1
0x400004f	              0x53	                                push rbx	        39	archive64.c	FUNCTION_1
0x4000050	      0xbe10000000	                           mov esi, 0x10	        54	archive64.c	FUNCTION_1	CALL_2
0x4000055	    0x41be01000000	                             mov r14d, 1	        56	archive64.c	FUNCTION_1	IF_1
0x400005b	        0x4883ec58	                           sub rsp, 0x58	        39	archive64.c	FUNCTION_1
0x400005f	    0x488b9ff80000	            mov rbx, qword [rdi + 0xf8] 	        40	archive64.c	FUNCTION_1	CALL_1
0x4000066	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	        54	archive64.c	FUNCTION_1	CALL_2
0x400006b	    0x64488b042528	                mov rax, qword fs:[0x28]	        39	archive64.c	FUNCTION_1
0x4000074	      0x4889442448	             mov qword [rsp + 0x48], rax	        39	archive64.c	FUNCTION_1
0x4000079	            0x31c0	                            xor eax, eax	        39	archive64.c	FUNCTION_1
0x400007b	    0x48c743180000	               mov qword [rbx + 0x18], 0	        51	archive64.c	FUNCTION_1
0x4000083	          0x4889ef	                            mov rdi, rbp	        54	archive64.c	FUNCTION_1	CALL_2
0x4000086	      0xe800000000	                          call 0x400008b	        54	archive64.c	FUNCTION_1	CALL_2
0x400008b	          0x4885c0	                           test rax, rax	        55	archive64.c	FUNCTION_1	IF_1
0x400008e	            0x7409	                            je 0x4000099	        55	archive64.c	FUNCTION_1	IF_1
0x4000090	        0x4883f810	                           cmp rax, 0x10	        57	archive64.c	FUNCTION_1	IF_2
0x4000094	            0x742a	                            je 0x40000c0	        57	archive64.c	FUNCTION_1	IF_2
0x4000096	          0x4531f6	                          xor r14d, r14d	        58	archive64.c	FUNCTION_1	IF_2
0x4000099	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       143	archive64.c	FUNCTION_1
0x400009e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       143	archive64.c	FUNCTION_1
0x40000a7	          0x4489f0	                           mov eax, r14d	       143	archive64.c	FUNCTION_1
0x40000aa	     0xf85b9010000	                           jne 0x4000269	       143	archive64.c	FUNCTION_1
0x40000b0	        0x4883c458	                           add rsp, 0x58	       143	archive64.c	FUNCTION_1
0x40000b4	              0x5b	                                 pop rbx	       143	archive64.c	FUNCTION_1
0x40000b5	              0x5d	                                 pop rbp	       143	archive64.c	FUNCTION_1
0x40000b6	            0x415c	                                 pop r12	       143	archive64.c	FUNCTION_1
0x40000b8	            0x415d	                                 pop r13	       143	archive64.c	FUNCTION_1
0x40000ba	            0x415e	                                 pop r14	       143	archive64.c	FUNCTION_1
0x40000bc	            0x415f	                                 pop r15	       143	archive64.c	FUNCTION_1
0x40000be	              0xc3	                                     ret	       143	archive64.c	FUNCTION_1
0x40000bf	              0x90	                                     nop	       143	archive64.c	FUNCTION_1
0x40000c0	      0xba01000000	                              mov edx, 1	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000c5	    0x48c7c6f0ffff	             mov rsi, 0xfffffffffffffff0	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000cc	          0x4c89ff	                            mov rdi, r15	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000cf	      0xe800000000	                          call 0x40000d4	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000d4	            0x85c0	                           test eax, eax	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000d6	            0x75be	                           jne 0x4000096	        60	archive64.c	FUNCTION_1	IF_3	CALL_3
0x40000d8	      0xbf00000000	                              mov edi, 0	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000dd	      0xb910000000	                           mov ecx, 0x10	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000e2	          0x4889ee	                            mov rsi, rbp	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000e7	     0xf8493000000	                            je 0x4000180	        64	archive64.c	FUNCTION_1	IF_4	CALL_4
0x40000ed	      0xb910000000	                           mov ecx, 0x10	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000f2	      0xbf00000000	                              mov edi, 0	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000f7	          0x4889ee	                            mov rsi, rbp	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000fa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000fc	           0xf97c1	                                 seta cl	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x40000ff	           0xf92c0	                                 setb al	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000102	            0x29c1	                            sub ecx, eax	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000104	        0x440fbef1	                          movsx r14d, cl	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x4000108	          0x4585f6	                         test r14d, r14d	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x400010b	            0x7413	                            je 0x4000120	        67	archive64.c	FUNCTION_1	IF_5	CALL_6
0x400010d	      0x418067477f	             and byte [r15 + 0x47], 0x7f	        69	archive64.c	FUNCTION_1	IF_5	CALL_7
0x4000112	    0x41be01000000	                             mov r14d, 1	        70	archive64.c	FUNCTION_1	IF_5
0x4000118	      0xe97cffffff	                           jmp 0x4000099	        70	archive64.c	FUNCTION_1	IF_5
0x400011d	           0xf1f00	                         nop dword [rax]	        70	archive64.c	FUNCTION_1	IF_5
0x4000120	        0x498b4708	                mov rax, qword [r15 + 8]	        73	archive64.c	FUNCTION_1	CALL_8
0x4000124	          0x4c89ff	                            mov rdi, r15	        73	archive64.c	FUNCTION_1	CALL_8
0x4000127	    0xff90c0010000	                call qword [rax + 0x1c0]	        73	archive64.c	FUNCTION_1	CALL_8
0x400012d	          0x4885c0	                           test rax, rax	        74	archive64.c	FUNCTION_1	IF_6
0x4000130	     0xf8460ffffff	                            je 0x4000096	        74	archive64.c	FUNCTION_1	IF_6
0x4000136	          0x4889c7	                            mov rdi, rax	        77	archive64.c	FUNCTION_1	CALL_9
0x4000139	        0x488b6808	                mov rbp, qword [rax + 8]	        76	archive64.c	FUNCTION_1
0x400013d	      0xe800000000	                          call 0x4000142	        77	archive64.c	FUNCTION_1	CALL_9
0x4000142	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x4000147	          0x4c89fa	                            mov rdx, r15	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x400014a	      0xbe08000000	                              mov esi, 8	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x400014f	      0xe800000000	                          call 0x4000154	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x4000154	        0x4883f808	                              cmp rax, 8	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x4000158	            0x7436	                            je 0x4000190	        79	archive64.c	FUNCTION_1	IF_7	CALL_10
0x400015a	      0xe800000000	                          call 0x400015f	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x400015f	          0x83f801	                              cmp eax, 1	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x4000162	     0xf842effffff	                            je 0x4000096	        81	archive64.c	FUNCTION_1	IF_7	IF_8	CALL_11
0x4000168	      0xbf0a000000	                            mov edi, 0xa	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x400016d	      0xe800000000	                          call 0x4000172	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x4000172	      0xe922ffffff	                           jmp 0x4000099	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x4000177	    0x660f1f840000	                    nop word [rax + rax]	        82	archive64.c	FUNCTION_1	IF_7	CALL_12
0x4000180	          0x4c89ff	                            mov rdi, r15	        65	archive64.c	FUNCTION_1	CALL_5
0x4000183	      0xe800000000	                          call 0x4000188	        65	archive64.c	FUNCTION_1	CALL_5
0x4000188	          0x4189c6	                           mov r14d, eax	        65	archive64.c	FUNCTION_1	CALL_5
0x400018b	      0xe909ffffff	                           jmp 0x4000099	        65	archive64.c	FUNCTION_1	CALL_5
0x4000190	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        86	archive64.c	FUNCTION_1	CALL_13
0x4000195	      0xe800000000	                          call 0x400019a	        86	archive64.c	FUNCTION_1	CALL_13
0x400019a	        0x4c8d45f8	                       lea r8, [rbp - 8]	        87	archive64.c	FUNCTION_1
0x400019e	    0x4c8d14c50000	                        lea r10, [rax*8]	        87	archive64.c	FUNCTION_1
0x40001a6	          0x4889c5	                            mov rbp, rax	        89	archive64.c	FUNCTION_1
0x40001a9	        0x48c1e504	                              shl rbp, 4	        89	archive64.c	FUNCTION_1
0x40001ad	          0x4989c5	                            mov r13, rax	        86	archive64.c	FUNCTION_1	CALL_13
0x40001b0	          0x4d29d0	                             sub r8, r10	        87	archive64.c	FUNCTION_1
0x40001b3	          0x4839e8	                            cmp rax, rbp	        93	archive64.c	FUNCTION_1	IF_9
0x40001b6	        0x4c891424	                    mov qword [rsp], r10	        93	archive64.c	FUNCTION_1	IF_9
0x40001ba	           0xf97c2	                                 seta dl	        93	archive64.c	FUNCTION_1	IF_9
0x40001bd	          0x4c39d0	                            cmp rax, r10	        93	archive64.c	FUNCTION_1	IF_9
0x40001c0	          0x4d89c4	                             mov r12, r8	        87	archive64.c	FUNCTION_1
0x40001c3	           0xf97c0	                                 seta al	        93	archive64.c	FUNCTION_1	IF_9
0x40001c6	      0x498d742801	                 lea rsi, [r8 + rbp + 1]	        92	archive64.c	FUNCTION_1
0x40001cb	             0x8c2	                               or dl, al	        93	archive64.c	FUNCTION_1	IF_9
0x40001cd	            0x7599	                           jne 0x4000168	        93	archive64.c	FUNCTION_1	IF_9
0x40001cf	          0x4939f5	                            cmp r13, rsi	        93	archive64.c	FUNCTION_1	IF_9
0x40001d2	            0x7794	                            ja 0x4000168	        93	archive64.c	FUNCTION_1	IF_9
0x40001d4	          0x4c89ff	                            mov rdi, r15	        98	archive64.c	FUNCTION_1	CALL_15
0x40001d7	      0xe800000000	                          call 0x40001dc	        98	archive64.c	FUNCTION_1	CALL_15
0x40001dc	          0x4885c0	                           test rax, rax	        99	archive64.c	FUNCTION_1	IF_10
0x40001df	      0x4889442408	                mov qword [rsp + 8], rax	        98	archive64.c	FUNCTION_1	CALL_15
0x40001e4	        0x48894318	             mov qword [rbx + 0x18], rax	        98	archive64.c	FUNCTION_1	CALL_15
0x40001e8	     0xf84a8feffff	                            je 0x4000096	        99	archive64.c	FUNCTION_1	IF_10
0x40001ee	        0x4c8b1424	                    mov r10, qword [rsp]	       106	archive64.c	FUNCTION_1	CALL_16
0x40001f2	          0x4801c5	                            add rbp, rax	       102	archive64.c	FUNCTION_1
0x40001f5	          0x4c89ff	                            mov rdi, r15	       106	archive64.c	FUNCTION_1	CALL_16
0x40001f8	      0x4a8d442500	                    lea rax, [rbp + r12]	       103	archive64.c	FUNCTION_1
0x40001fd	          0x4c89d6	                            mov rsi, r10	       106	archive64.c	FUNCTION_1	CALL_16
0x4000200	          0xc60000	                       mov byte [rax], 0	       103	archive64.c	FUNCTION_1
0x4000203	      0x4889442410	             mov qword [rsp + 0x10], rax	       103	archive64.c	FUNCTION_1
0x4000208	      0x4c89542418	             mov qword [rsp + 0x18], r10	       106	archive64.c	FUNCTION_1	CALL_16
0x400020d	      0xe800000000	                          call 0x4000212	       106	archive64.c	FUNCTION_1	CALL_16
0x4000212	          0x4885c0	                           test rax, rax	       107	archive64.c	FUNCTION_1	IF_11
0x4000215	        0x48890424	                    mov qword [rsp], rax	       106	archive64.c	FUNCTION_1	CALL_16
0x4000219	            0x743d	                            je 0x4000258	       107	archive64.c	FUNCTION_1	IF_11
0x400021b	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000220	          0x4c89fa	                            mov rdx, r15	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000223	          0x4889c7	                            mov rdi, rax	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000226	          0x4c89d6	                            mov rsi, r10	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000229	      0xe800000000	                          call 0x400022e	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x400022e	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000233	          0x4939c2	                            cmp r10, rax	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000236	            0x7436	                            je 0x400026e	       110	archive64.c	FUNCTION_1	IF_12	CALL_17
0x4000238	      0xe800000000	                          call 0x400023d	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x400023d	          0x83f801	                              cmp eax, 1	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x4000240	            0x740a	                            je 0x400024c	       113	archive64.c	FUNCTION_1	IF_12	IF_13	CALL_19
0x4000242	      0xbf0a000000	                            mov edi, 0xa	       114	archive64.c	FUNCTION_1	IF_12	CALL_20
0x4000247	      0xe800000000	                          call 0x400024c	       114	archive64.c	FUNCTION_1	IF_12	CALL_20
0x400024c	        0x488b3424	                    mov rsi, qword [rsp]	       139	archive64.c	FUNCTION_1	CALL_26
0x4000250	          0x4c89ff	                            mov rdi, r15	       139	archive64.c	FUNCTION_1	CALL_26
0x4000253	      0xe800000000	                          call 0x4000258	       139	archive64.c	FUNCTION_1	CALL_26
0x4000258	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       141	archive64.c	FUNCTION_1	CALL_27
0x400025c	          0x4c89ff	                            mov rdi, r15	       141	archive64.c	FUNCTION_1	CALL_27
0x400025f	      0xe800000000	                          call 0x4000264	       141	archive64.c	FUNCTION_1	CALL_27
0x4000264	      0xe930feffff	                           jmp 0x4000099	       142	archive64.c	FUNCTION_1
0x4000269	      0xe800000000	                          call 0x400026e	       143	archive64.c	FUNCTION_1
0x400026e	          0x4c89fa	                            mov rdx, r15	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000271	          0x4c89e6	                            mov rsi, r12	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000274	          0x4889ef	                            mov rdi, rbp	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000277	      0xe800000000	                          call 0x400027c	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x400027c	          0x4939c4	                            cmp r12, rax	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x400027f	            0x75b7	                           jne 0x4000238	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000281	          0x4531f6	                          xor r14d, r14d	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000284	            0xeb3e	                           jmp 0x40002c4	       111	archive64.c	FUNCTION_1	IF_12	CALL_18
0x4000286	        0x488b0424	                    mov rax, qword [rsp]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x400028a	        0x4a8d3cf0	                  lea rdi, [rax + r14*8]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x400028e	      0xe800000000	                          call 0x4000293	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x4000293	      0x483b6c2410	            cmp rbp, qword [rsp + 0x10] 	       122	archive64.c	FUNCTION_1	FOR_1	IF_14
0x4000298	      0x488b542408	                mov rdx, qword [rsp + 8]	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x400029d	        0x48894208	                mov qword [rdx + 8], rax	       120	archive64.c	FUNCTION_1	FOR_1	CALL_21
0x40002a1	          0x48892a	                    mov qword [rdx], rbp	       121	archive64.c	FUNCTION_1	FOR_1
0x40002a4	            0x7314	                           jae 0x40002ba	       122	archive64.c	FUNCTION_1	FOR_1	IF_14
0x40002a6	            0x31c0	                            xor eax, eax	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40002a8	          0x4889ef	                            mov rdi, rbp	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40002ab	        0x4883c9ff	              or rcx, 0xffffffffffffffff	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40002af	            0xf2ae	              repne scasb al, byte [rdi]	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40002b1	          0x4889c8	                            mov rax, rcx	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40002b4	          0x48f7d0	                                 not rax	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40002b7	          0x4801c5	                            add rbp, rax	       123	archive64.c	FUNCTION_1	FOR_1	CALL_22
0x40002ba	    0x488344240810	               add qword [rsp + 8], 0x10	       124	archive64.c	FUNCTION_1	FOR_1
0x40002c0	        0x4983c601	                              add r14, 1	       118	archive64.c	FUNCTION_1	FOR_1
0x40002c4	          0x4d39ee	                            cmp r14, r13	       118	archive64.c	FUNCTION_1	FOR_1
0x40002c7	            0x75bd	                           jne 0x4000286	       118	archive64.c	FUNCTION_1	FOR_1
0x40002c9	        0xc6450000	                       mov byte [rbp], 0	       126	archive64.c	FUNCTION_1
0x40002cd	          0x4c89ff	                            mov rdi, r15	       129	archive64.c	FUNCTION_1	CALL_23
0x40002d0	        0x4c897320	             mov qword [rbx + 0x20], r14	       128	archive64.c	FUNCTION_1
0x40002d4	      0xe800000000	                          call 0x40002d9	       129	archive64.c	FUNCTION_1	CALL_23
0x40002d9	      0xbe02000000	                              mov esi, 2	       131	archive64.c	FUNCTION_1
0x40002de	            0x4899	                                     cqo	       131	archive64.c	FUNCTION_1
0x40002e0	          0x4889c1	                            mov rcx, rax	       129	archive64.c	FUNCTION_1	CALL_23
0x40002e3	          0x48f7fe	                                idiv rsi	       131	archive64.c	FUNCTION_1
0x40002e6	        0x488b3424	                    mov rsi, qword [rsp]	       134	archive64.c	FUNCTION_1	CALL_25
0x40002ea	          0x4c89ff	                            mov rdi, r15	       134	archive64.c	FUNCTION_1	CALL_25
0x40002ed	    0x41be01000000	                             mov r14d, 1	       136	archive64.c	FUNCTION_1
0x40002f3	          0x4801d1	                            add rcx, rdx	       131	archive64.c	FUNCTION_1
0x40002f6	          0x48890b	                    mov qword [rbx], rcx	       131	archive64.c	FUNCTION_1
0x40002f9	      0x41804f4780	              or byte [r15 + 0x47], 0x80	       133	archive64.c	FUNCTION_1	CALL_24
0x40002fe	      0xe800000000	                          call 0x4000303	       134	archive64.c	FUNCTION_1	CALL_25
0x4000303	      0xe991fdffff	                           jmp 0x4000099	       136	archive64.c	FUNCTION_1
_bfd_archive_64_bit_write_armap	functions,0:IF,7:SWITCH,0:FOR,3:CALL,21:WHILE,1:ELSE,0:DO,0	189
0x4000310	            0x4157	                                push r15	       155	archive64.c	FUNCTION_2
0x4000312	            0x4156	                                push r14	       155	archive64.c	FUNCTION_2
0x4000314	      0x458d74c808	              lea r14d, [r8 + rcx*8 + 8]	       158	archive64.c	FUNCTION_2
0x4000319	            0x4155	                                push r13	       155	archive64.c	FUNCTION_2
0x400031b	            0x4154	                                push r12	       155	archive64.c	FUNCTION_2
0x400031d	          0x4989fc	                            mov r12, rdi	       155	archive64.c	FUNCTION_2
0x4000320	              0x55	                                push rbp	       155	archive64.c	FUNCTION_2
0x4000321	              0x53	                                push rbx	       155	archive64.c	FUNCTION_2
0x4000322	        0x418d5e07	                      lea ebx, [r14 + 7]	       166	archive64.c	FUNCTION_2	CALL_1
0x4000326	          0x4189f7	                           mov r15d, esi	       155	archive64.c	FUNCTION_2
0x4000329	          0x4989d5	                            mov r13, rdx	       155	archive64.c	FUNCTION_2
0x400032c	            0x89cd	                            mov ebp, ecx	       155	archive64.c	FUNCTION_2
0x400032e	        0x4883ec68	                           sub rsp, 0x68	       155	archive64.c	FUNCTION_2
0x4000332	          0x83e3f8	                     and ebx, 0xfffffff8	       166	archive64.c	FUNCTION_2	CALL_1
0x4000335	      0xb936340000	                         mov ecx, 0x3436	        53	string3.h	FUNCTION_3	CALL_3
0x400033a	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x400033f	            0x89da	                            mov edx, ebx	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x4000341	      0xbe0a000000	                            mov esi, 0xa	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x4000346	    0x64488b042528	                mov rax, qword fs:[0x28]	       155	archive64.c	FUNCTION_2
0x400034f	      0x4889442458	             mov qword [rsp + 0x58], rax	       155	archive64.c	FUNCTION_2
0x4000354	            0x31c0	                            xor eax, eax	       155	archive64.c	FUNCTION_2
0x4000356	    0x48b820202020	          movabs rax, 0x2020202020202020	        90	string3.h	FUNCTION_6	CALL_6
0x4000360	    0xc74424482020	     mov dword [rsp + 0x48], 0x20202020 	        90	string3.h	FUNCTION_6	CALL_6
0x4000368	      0x4889442410	             mov qword [rsp + 0x10], rax	        90	string3.h	FUNCTION_6	CALL_6
0x400036d	      0x4889442418	             mov qword [rsp + 0x18], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000372	      0x4889442420	             mov qword [rsp + 0x20], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000377	      0x4889442428	             mov qword [rsp + 0x28], rax	        90	string3.h	FUNCTION_6	CALL_6
0x400037c	      0x4889442430	             mov qword [rsp + 0x30], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000381	      0x4889442438	             mov qword [rsp + 0x38], rax	        90	string3.h	FUNCTION_6	CALL_6
0x4000386	      0x4889442440	             mov qword [rsp + 0x40], rax	        90	string3.h	FUNCTION_6	CALL_6
0x400038b	    0xc74424102f53	     mov dword [rsp + 0x10], 0x4d59532f 	        53	string3.h	FUNCTION_3	CALL_3
0x4000393	      0x66894c2414	               mov word [rsp + 0x14], cx	        53	string3.h	FUNCTION_3	CALL_3
0x4000398	      0xc64424162f	            mov byte [rsp + 0x16], 0x2f 	        53	string3.h	FUNCTION_3	CALL_3
0x400039d	      0xe800000000	                          call 0x40003a2	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40003a2	            0x85c0	                           test eax, eax	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40003a4	            0x752a	                           jne 0x40003d0	       177	archive64.c	FUNCTION_2	IF_1	CALL_5
0x40003a6	            0x31c0	                            xor eax, eax	       178	archive64.c	FUNCTION_2	IF_1
0x40003a8	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	       246	archive64.c	FUNCTION_2
0x40003ad	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       246	archive64.c	FUNCTION_2
0x40003b6	     0xf8540020000	                           jne 0x40005fc	       246	archive64.c	FUNCTION_2
0x40003bc	        0x4883c468	                           add rsp, 0x68	       246	archive64.c	FUNCTION_2
0x40003c0	              0x5b	                                 pop rbx	       246	archive64.c	FUNCTION_2
0x40003c1	              0x5d	                                 pop rbp	       246	archive64.c	FUNCTION_2
0x40003c2	            0x415c	                                 pop r12	       246	archive64.c	FUNCTION_2
0x40003c4	            0x415d	                                 pop r13	       246	archive64.c	FUNCTION_2
0x40003c6	            0x415e	                                 pop r14	       246	archive64.c	FUNCTION_2
0x40003c8	            0x415f	                                 pop r15	       246	archive64.c	FUNCTION_2
0x40003ca	              0xc3	                                     ret	       246	archive64.c	FUNCTION_2
0x40003cb	       0xf1f440000	                   nop dword [rax + rax]	       246	archive64.c	FUNCTION_2
0x40003d0	            0x31ff	                            xor edi, edi	       179	archive64.c	FUNCTION_2	CALL_6
0x40003d2	      0xe800000000	                          call 0x40003d7	       179	archive64.c	FUNCTION_2	CALL_6
0x40003d7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       179	archive64.c	FUNCTION_2	CALL_6
0x40003dc	          0x4889c1	                            mov rcx, rax	       179	archive64.c	FUNCTION_2	CALL_6
0x40003df	      0xba00000000	                              mov edx, 0	       179	archive64.c	FUNCTION_2	CALL_6
0x40003e4	      0xbe0c000000	                            mov esi, 0xc	       179	archive64.c	FUNCTION_2	CALL_6
0x40003e9	      0xe800000000	                          call 0x40003ee	       179	archive64.c	FUNCTION_2	CALL_6
0x40003ee	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	       182	archive64.c	FUNCTION_2	CALL_8
0x40003f3	            0x31c9	                            xor ecx, ecx	       182	archive64.c	FUNCTION_2	CALL_8
0x40003f5	      0xba00000000	                              mov edx, 0	       182	archive64.c	FUNCTION_2	CALL_8
0x40003fa	      0xbe06000000	                              mov esi, 6	       182	archive64.c	FUNCTION_2	CALL_8
0x40003ff	      0xe800000000	                          call 0x4000404	       182	archive64.c	FUNCTION_2	CALL_8
0x4000404	      0x488d7c2432	                   lea rdi, [rsp + 0x32]	       183	archive64.c	FUNCTION_2	CALL_9
0x4000409	            0x31c9	                            xor ecx, ecx	       183	archive64.c	FUNCTION_2	CALL_9
0x400040b	      0xba00000000	                              mov edx, 0	       183	archive64.c	FUNCTION_2	CALL_9
0x4000410	      0xbe06000000	                              mov esi, 6	       183	archive64.c	FUNCTION_2	CALL_9
0x4000415	      0xe800000000	                          call 0x400041a	       183	archive64.c	FUNCTION_2	CALL_9
0x400041a	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       184	archive64.c	FUNCTION_2	CALL_10
0x400041f	            0x31c9	                            xor ecx, ecx	       184	archive64.c	FUNCTION_2	CALL_10
0x4000421	      0xba00000000	                              mov edx, 0	       184	archive64.c	FUNCTION_2	CALL_10
0x4000426	      0xbe08000000	                              mov esi, 8	       184	archive64.c	FUNCTION_2	CALL_10
0x400042b	      0xe800000000	                          call 0x4000430	       184	archive64.c	FUNCTION_2	CALL_10
0x4000430	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000435	      0xb8600a0000	                          mov eax, 0xa60	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400043a	          0x4c89e2	                            mov rdx, r12	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400043d	      0xbe3c000000	                           mov esi, 0x3c	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000442	      0x668944244a	               mov word [rsp + 0x4a], ax	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000447	      0xe800000000	                          call 0x400044c	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x400044c	        0x4883f83c	                           cmp rax, 0x3c	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000450	     0xf8550ffffff	                           jne 0x40003a6	       189	archive64.c	FUNCTION_2	IF_2	CALL_12
0x4000456	      0x488d742450	                   lea rsi, [rsp + 0x50]	       193	archive64.c	FUNCTION_2	CALL_13
0x400045b	            0x89ef	                            mov edi, ebp	       193	archive64.c	FUNCTION_2	CALL_13
0x400045d	      0xe800000000	                          call 0x4000462	       193	archive64.c	FUNCTION_2	CALL_13
0x4000462	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x4000467	          0x4c89e2	                            mov rdx, r12	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x400046a	      0xbe08000000	                              mov esi, 8	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x400046f	      0xe800000000	                          call 0x4000474	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x4000474	        0x4883f808	                              cmp rax, 8	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x4000478	     0xf8528ffffff	                           jne 0x40003a6	       194	archive64.c	FUNCTION_2	IF_3	CALL_14
0x400047e	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	       203	archive64.c	FUNCTION_2	FOR_1
0x4000486	          0x4885c0	                           test rax, rax	       203	archive64.c	FUNCTION_2	FOR_1
0x4000489	        0x48890424	                    mov qword [rsp], rax	       203	archive64.c	FUNCTION_2	FOR_1
0x400048d	     0xf8432010000	                            je 0x40005c5	       203	archive64.c	FUNCTION_2	FOR_1
0x4000493	        0x428d143b	                    lea edx, [rbx + r15]	       170	archive64.c	FUNCTION_2
0x4000497	            0x85ed	                           test ebp, ebp	       203	archive64.c	FUNCTION_2	FOR_1
0x4000499	           0xf95c0	                                setne al	       203	archive64.c	FUNCTION_2	FOR_1
0x400049c	          0x4531ff	                          xor r15d, r15d	       170	archive64.c	FUNCTION_2
0x400049f	        0x488d4a44	                   lea rcx, [rdx + 0x44]	       170	archive64.c	FUNCTION_2
0x40004a3	            0x84c0	                             test al, al	       203	archive64.c	FUNCTION_2	FOR_1
0x40004a5	      0x48894c2408	                mov qword [rsp + 8], rcx	       170	archive64.c	FUNCTION_2
0x40004aa	     0xf8415010000	                            je 0x40005c5	       203	archive64.c	FUNCTION_2	FOR_1
0x40004b0	          0x4439fd	                           cmp ebp, r15d	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004b3	            0x766b	                           jbe 0x4000520	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004b5	          0x4489f8	                           mov eax, r15d	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004b8	        0x488b0c24	                    mov rcx, qword [rsp]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004bc	        0x488d0440	                  lea rax, [rax + rax*2]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004c0	      0x49394cc508	       cmp qword [r13 + rax*8 + 8], rcx 	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004c5	            0x7559	                           jne 0x4000520	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004c7	        0x4183c701	                             add r15d, 1	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004cb	            0xeb21	                           jmp 0x40004ee	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004cd	           0xf1f00	                         nop dword [rax]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004d0	          0x4439fd	                           cmp ebp, r15d	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004d3	            0x744b	                            je 0x4000520	       210	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004d5	          0x4489f8	                           mov eax, r15d	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004d8	        0x488b0c24	                    mov rcx, qword [rsp]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004dc	        0x418d5701	                      lea edx, [r15 + 1]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004e0	        0x488d0440	                  lea rax, [rax + rax*2]	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004e4	      0x49394cc508	       cmp qword [r13 + rax*8 + 8], rcx 	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004e9	            0x7535	                           jne 0x4000520	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004eb	          0x4189d7	                           mov r15d, edx	       211	archive64.c	FUNCTION_2	FOR_1	FOR_2
0x40004ee	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40004f3	      0x488d742450	                   lea rsi, [rsp + 0x50]	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40004f8	      0xe800000000	                          call 0x40004fd	       214	archive64.c	FUNCTION_2	FOR_1	FOR_2	CALL_15
0x40004fd	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000502	          0x4c89e2	                            mov rdx, r12	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000505	      0xbe08000000	                              mov esi, 8	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x400050a	      0xe800000000	                          call 0x400050f	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x400050f	        0x4883f808	                              cmp rax, 8	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000513	            0x74bb	                            je 0x40004d0	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000515	      0xe98cfeffff	                           jmp 0x40003a6	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x400051a	    0x660f1f440000	                    nop word [rax + rax]	       215	archive64.c	FUNCTION_2	FOR_1	FOR_2	IF_4	CALL_16
0x4000520	      0x488b542408	                mov rdx, qword [rsp + 8]	       220	archive64.c	FUNCTION_2	FOR_1
0x4000525	        0x4883c23c	                           add rdx, 0x3c	       220	archive64.c	FUNCTION_2	FOR_1
0x4000529	    0x41f644244801	               test byte [r12 + 0x48], 1	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x400052f	            0x750f	                           jne 0x4000540	       221	archive64.c	FUNCTION_2	FOR_1	IF_5	CALL_17
0x4000531	        0x488b0424	                    mov rax, qword [rsp]	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x4000535	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x400053c	        0x48035008	                add rdx, qword [rax + 8]	       222	archive64.c	FUNCTION_2	FOR_1	CALL_18
0x4000540	          0x4889d6	                            mov rsi, rdx	       224	archive64.c	FUNCTION_2	FOR_1
0x4000543	        0x48c1ee3f	                           shr rsi, 0x3f	       224	archive64.c	FUNCTION_2	FOR_1
0x4000547	        0x488d0432	                    lea rax, [rdx + rsi]	       224	archive64.c	FUNCTION_2	FOR_1
0x400054b	          0x83e001	                              and eax, 1	       224	archive64.c	FUNCTION_2	FOR_1
0x400054e	          0x4829f0	                            sub rax, rsi	       224	archive64.c	FUNCTION_2	FOR_1
0x4000551	          0x4801d0	                            add rax, rdx	       224	archive64.c	FUNCTION_2	FOR_1
0x4000554	      0x4889442408	                mov qword [rsp + 8], rax	       224	archive64.c	FUNCTION_2	FOR_1
0x4000559	        0x488b0424	                    mov rax, qword [rsp]	       205	archive64.c	FUNCTION_2	FOR_1
0x400055d	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       205	archive64.c	FUNCTION_2	FOR_1
0x4000564	          0x4885c0	                           test rax, rax	       203	archive64.c	FUNCTION_2	FOR_1
0x4000567	        0x48890424	                    mov qword [rsp], rax	       205	archive64.c	FUNCTION_2	FOR_1
0x400056b	            0x7409	                            je 0x4000576	       203	archive64.c	FUNCTION_2	FOR_1
0x400056d	          0x4439fd	                           cmp ebp, r15d	       203	archive64.c	FUNCTION_2	FOR_1
0x4000570	     0xf873affffff	                            ja 0x40004b0	       203	archive64.c	FUNCTION_2	FOR_1
0x4000576	          0x8d45ff	                      lea eax, [rbp - 1]	       203	archive64.c	FUNCTION_2	FOR_1
0x4000579	      0x488d444003	              lea rax, [rax + rax*2 + 3]	       203	archive64.c	FUNCTION_2	FOR_1
0x400057e	      0x498d44c500	                  lea rax, [r13 + rax*8]	       203	archive64.c	FUNCTION_2	FOR_1
0x4000583	        0x48890424	                    mov qword [rsp], rax	       203	archive64.c	FUNCTION_2	FOR_1
0x4000587	            0xeb11	                           jmp 0x400059a	       203	archive64.c	FUNCTION_2	FOR_1
0x4000589	     0xf1f80000000	                         nop dword [rax]	       203	archive64.c	FUNCTION_2	FOR_1
0x4000590	        0x4983c518	                           add r13, 0x18	       203	archive64.c	FUNCTION_2	FOR_1
0x4000594	        0x4c392c24	                    cmp qword [rsp], r13	       228	archive64.c	FUNCTION_2	FOR_3
0x4000598	            0x742f	                            je 0x40005c9	       228	archive64.c	FUNCTION_2	FOR_3
0x400059a	        0x498b4500	                    mov rax, qword [r13]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x400059e	          0x4c8b38	                    mov r15, qword [rax]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40005a1	          0x4c89ff	                            mov rdi, r15	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40005a4	      0xe800000000	                          call 0x40005a9	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40005a9	        0x488d6801	                      lea rbp, [rax + 1]	       230	archive64.c	FUNCTION_2	FOR_3	CALL_19
0x40005ad	          0x4c89e2	                            mov rdx, r12	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005b0	          0x4c89ff	                            mov rdi, r15	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005b3	          0x4889ee	                            mov rsi, rbp	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005b6	      0xe800000000	                          call 0x40005bb	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005bb	          0x4839c5	                            cmp rbp, rax	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005be	            0x74d0	                            je 0x4000590	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005c0	      0xe9e1fdffff	                           jmp 0x40003a6	       232	archive64.c	FUNCTION_2	FOR_3	IF_6	CALL_20
0x40005c5	            0x85ed	                           test ebp, ebp	       228	archive64.c	FUNCTION_2	FOR_3
0x40005c7	            0x75ad	                           jne 0x4000576	       228	archive64.c	FUNCTION_2	FOR_3
0x40005c9	          0x4429f3	                           sub ebx, r14d	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005cc	            0x7507	                           jne 0x40005d5	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005ce	            0xeb22	                           jmp 0x40005f2	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005d0	          0x83eb01	                              sub ebx, 1	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005d3	            0x741d	                            je 0x40005f2	       238	archive64.c	FUNCTION_2	WHILE_1
0x40005d5	          0x4c89e2	                            mov rdx, r12	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005d8	      0xbe01000000	                              mov esi, 1	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005dd	      0xbf00000000	                              mov edi, 0	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005e2	      0xe800000000	                          call 0x40005e7	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005e7	        0x4883f801	                              cmp rax, 1	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005eb	            0x74e3	                            je 0x40005d0	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005ed	      0xe9b4fdffff	                           jmp 0x40003a6	       240	archive64.c	FUNCTION_2	WHILE_1	IF_7	CALL_21
0x40005f2	      0xb801000000	                              mov eax, 1	       245	archive64.c	FUNCTION_2
0x40005f7	      0xe9acfdffff	                           jmp 0x40003a8	       245	archive64.c	FUNCTION_2
0x40005fc	      0xe800000000	                               call str.	       246	archive64.c	FUNCTION_2
