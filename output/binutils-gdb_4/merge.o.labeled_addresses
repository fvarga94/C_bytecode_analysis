sec_merge_hash_lookup	FOR,5:ELSE,2:CALL,2:functions,0:WHILE,1:DO,0:IF,9:SWITCH,0	180
0x40001c0	            0x4157	                                push r15	       138	merge.c	FUNCTION_2
0x40001c2	            0x4156	                                push r14	       138	merge.c	FUNCTION_2
0x40001c4	            0x4155	                                push r13	       138	merge.c	FUNCTION_2
0x40001c6	            0x4154	                                push r12	       138	merge.c	FUNCTION_2
0x40001c8	          0x4989f5	                            mov r13, rsi	       138	merge.c	FUNCTION_2
0x40001cb	              0x55	                                push rbp	       138	merge.c	FUNCTION_2
0x40001cc	              0x53	                                push rbx	       138	merge.c	FUNCTION_2
0x40001cd	          0x4989fc	                            mov r12, rdi	       138	merge.c	FUNCTION_2
0x40001d0	        0x4883ec18	                           sub rsp, 0x18	       138	merge.c	FUNCTION_2
0x40001d4	        0x894c2408	                mov dword [rsp + 8], ecx	       138	merge.c	FUNCTION_2
0x40001d8	          0x8b4f44	            mov ecx, dword [rdi + 0x44] 	       149	merge.c	FUNCTION_2	IF_1
0x40001db	        0x8954240c	              mov dword [rsp + 0xc], edx	       138	merge.c	FUNCTION_2
0x40001df	            0x85c9	                           test ecx, ecx	       149	merge.c	FUNCTION_2	IF_1
0x40001e1	     0xf85e9000000	                           jne 0x40002d0	       149	merge.c	FUNCTION_2	IF_1
0x40001e7	          0x8b6f40	            mov ebp, dword [rdi + 0x40] 	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ea	          0x4531f6	                          xor r14d, r14d	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ed	            0x85ed	                           test ebp, ebp	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ef	            0x7430	                            je 0x4000221	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001f1	          0x8d45ff	                      lea eax, [rbp - 1]	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001f4	          0x4c89ea	                            mov rdx, r13	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001f7	          0x4531f6	                          xor r14d, r14d	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001fa	      0x488d740601	                lea rsi, [rsi + rax + 1]	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ff	              0x90	                                     nop	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000200	        0x4883c201	                              add rdx, 1	       188	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000204	         0xfb642ff	               movzx eax, byte [rdx - 1]	       188	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000208	            0x89c1	                            mov ecx, eax	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400020a	          0xc1e111	                           shl ecx, 0x11	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400020d	             0x1c8	                            add eax, ecx	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400020f	          0x4901c6	                            add r14, rax	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000212	          0x4c89f0	                            mov rax, r14	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000215	        0x48c1e802	                              shr rax, 2	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000219	          0x4931c6	                            xor r14, rax	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400021c	          0x4839f2	                            cmp rdx, rsi	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400021f	            0x75df	                           jne 0x4000200	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000221	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	       196	merge.c	FUNCTION_2	FOR_5
0x4000226	            0x31d2	                            xor edx, edx	       196	merge.c	FUNCTION_2	FOR_5
0x4000228	          0x4c89f0	                            mov rax, r14	       196	merge.c	FUNCTION_2	FOR_5
0x400022b	          0x48f7f1	                                 div rcx	       196	merge.c	FUNCTION_2	FOR_5
0x400022e	        0x498b0424	                    mov rax, qword [r12]	       196	merge.c	FUNCTION_2	FOR_5
0x4000232	        0x488b1cd0	            mov rbx, qword [rax + rdx*8]	       196	merge.c	FUNCTION_2	FOR_5
0x4000236	          0x4885db	                           test rbx, rbx	       196	merge.c	FUNCTION_2	FOR_5
0x4000239	            0x7455	                            je 0x4000290	       196	merge.c	FUNCTION_2	FOR_5
0x400023b	          0x4189ef	                           mov r15d, ebp	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400023e	            0xeb08	                           jmp 0x4000248	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000240	          0x488b1b	                    mov rbx, qword [rbx]	       198	merge.c	FUNCTION_2	FOR_5
0x4000243	          0x4885db	                           test rbx, rbx	       196	merge.c	FUNCTION_2	FOR_5
0x4000246	            0x7448	                            je 0x4000290	       196	merge.c	FUNCTION_2	FOR_5
0x4000248	        0x4c3b7310	            cmp r14, qword [rbx + 0x10] 	       200	merge.c	FUNCTION_2	FOR_5	IF_5
0x400024c	            0x75f2	                           jne 0x4000240	       200	merge.c	FUNCTION_2	FOR_5	IF_5
0x400024e	          0x3b6b18	            cmp ebp, dword [rbx + 0x18] 	       201	merge.c	FUNCTION_2	FOR_5	IF_5
0x4000251	            0x75ed	                           jne 0x4000240	       201	merge.c	FUNCTION_2	FOR_5	IF_5
0x4000253	        0x488b7b08	                mov rdi, qword [rbx + 8]	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000257	          0x4c89fa	                            mov rdx, r15	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400025a	          0x4c89ee	                            mov rsi, r13	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400025d	      0xe800000000	                          call 0x4000262	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000262	            0x85c0	                           test eax, eax	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000264	            0x75da	                           jne 0x4000240	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000266	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x400026a	          0x397b1c	            cmp dword [rbx + 0x1c], edi 	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x400026d	          0x4889d8	                            mov rax, rbx	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x4000270	            0x734b	                           jae 0x40002bd	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x4000272	        0x8b542408	                mov edx, dword [rsp + 8]	       208	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000276	            0x31c0	                            xor eax, eax	       221	merge.c	FUNCTION_2	IF_8
0x4000278	            0x85d2	                           test edx, edx	       208	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400027a	            0x7441	                            je 0x40002bd	       208	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400027c	    0xc74318000000	               mov dword [rbx + 0x18], 0	       211	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000283	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	       212	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400028a	            0xeb10	                           jmp 0x400029c	       212	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400028c	         0xf1f4000	                         nop dword [rax]	       212	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000290	        0x8b442408	                mov eax, dword [rsp + 8]	       220	merge.c	FUNCTION_2	IF_8
0x4000294	            0x85c0	                           test eax, eax	       220	merge.c	FUNCTION_2	IF_8
0x4000296	     0xf84e4000000	                            je 0x4000380	       220	merge.c	FUNCTION_2	IF_8
0x400029c	          0x4c89f2	                            mov rdx, r14	       223	merge.c	FUNCTION_2
0x400029f	          0x4c89ee	                            mov rsi, r13	       223	merge.c	FUNCTION_2
0x40002a2	          0x4c89e7	                            mov rdi, r12	       223	merge.c	FUNCTION_2
0x40002a5	      0xe800000000	                          call 0x40002aa	       223	merge.c	FUNCTION_2
0x40002aa	          0x4885c0	                           test rax, rax	       225	merge.c	FUNCTION_2	IF_9
0x40002ad	     0xf84cd000000	                            je 0x4000380	       225	merge.c	FUNCTION_2	IF_9
0x40002b3	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       228	merge.c	FUNCTION_2
0x40002b7	          0x896818	             mov dword [rax + 0x18], ebp	       227	merge.c	FUNCTION_2
0x40002ba	          0x89781c	             mov dword [rax + 0x1c], edi	       228	merge.c	FUNCTION_2
0x40002bd	        0x4883c418	                           add rsp, 0x18	       230	merge.c	FUNCTION_2
0x40002c1	              0x5b	                                 pop rbx	       230	merge.c	FUNCTION_2
0x40002c2	              0x5d	                                 pop rbp	       230	merge.c	FUNCTION_2
0x40002c3	            0x415c	                                 pop r12	       230	merge.c	FUNCTION_2
0x40002c5	            0x415d	                                 pop r13	       230	merge.c	FUNCTION_2
0x40002c7	            0x415e	                                 pop r14	       230	merge.c	FUNCTION_2
0x40002c9	            0x415f	                                 pop r15	       230	merge.c	FUNCTION_2
0x40002cb	              0xc3	                                     ret	       230	merge.c	FUNCTION_2
0x40002cc	         0xf1f4000	                         nop dword [rax]	       230	merge.c	FUNCTION_2
0x40002d0	          0x8b7f40	            mov edi, dword [rdi + 0x40] 	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002d3	          0x83ff01	                              cmp edi, 1	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002d6	     0xf84b5000000	                            je 0x4000391	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002dc	        0x448d4fff	                      lea r9d, [rdi - 1]	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002e0	          0x4531c0	                            xor r8d, r8d	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002e3	            0x31c0	                            xor eax, eax	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002e5	        0x4983c101	                               add r9, 1	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002e9	     0xf1f80000000	                         nop dword [rax]	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002f0	            0x85ff	                           test edi, edi	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x40002f2	            0x7426	                            je 0x400031a	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x40002f4	            0x31d2	                            xor edx, edx	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x40002f6	          0x803e00	                       cmp byte [rsi], 0	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x40002f9	        0x488d4e01	                      lea rcx, [rsi + 1]	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x40002fd	          0x4989ca	                            mov r10, rcx	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000300	            0x7411	                            je 0x4000313	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000302	            0xeb3c	                           jmp 0x4000340	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000304	         0xf1f4000	                         nop dword [rax]	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000308	        0x4983c201	                              add r10, 1	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x400030c	      0x41807aff00	                   cmp byte [r10 - 1], 0	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000311	            0x752d	                           jne 0x4000340	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000313	          0x83c201	                              add edx, 1	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x4000316	            0x39d7	                            cmp edi, edx	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x4000318	            0x75ee	                           jne 0x4000308	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x400031a	          0x4489c2	                            mov edx, r8d	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x400031d	          0xc1e211	                           shl edx, 0x11	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000320	        0x468d3402	                    lea r14d, [rdx + r8]	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000324	        0x440fafc7	                           imul r8d, edi	       179	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000328	          0x4c01f0	                            add rax, r14	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x400032b	          0x4989c6	                            mov r14, rax	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x400032e	        0x49c1ee02	                              shr r14, 2	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000332	          0x4931c6	                            xor r14, rax	       179	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000335	        0x418d2c38	                     lea ebp, [r8 + rdi]	       182	merge.c	FUNCTION_2	IF_1
0x4000339	      0xe9e3feffff	                           jmp 0x4000221	       182	merge.c	FUNCTION_2	IF_1
0x400033e	            0x6690	                                     nop	       182	merge.c	FUNCTION_2	IF_1
0x4000340	        0x4e8d140e	                     lea r10, [rsi + r9]	       182	merge.c	FUNCTION_2	IF_1
0x4000344	            0xeb0e	                           jmp 0x4000354	       182	merge.c	FUNCTION_2	IF_1
0x4000346	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       182	merge.c	FUNCTION_2	IF_1
0x4000350	        0x4883c101	                              add rcx, 1	       182	merge.c	FUNCTION_2	IF_1
0x4000354	         0xfb651ff	               movzx edx, byte [rcx - 1]	       172	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000358	          0x4889ce	                            mov rsi, rcx	       172	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400035b	          0x4189d3	                           mov r11d, edx	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400035e	        0x41c1e311	                          shl r11d, 0x11	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000362	          0x4401da	                           add edx, r11d	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000365	          0x4801d0	                            add rax, rdx	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000368	          0x4889c2	                            mov rdx, rax	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400036b	        0x48c1ea02	                              shr rdx, 2	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400036f	          0x4831d0	                            xor rax, rdx	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000372	          0x4c39d1	                            cmp rcx, r10	       170	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000375	            0x75d9	                           jne 0x4000350	       170	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000377	        0x4183c001	                              add r8d, 1	       176	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1
0x400037b	      0xe970ffffff	                           jmp 0x40002f0	       177	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1
0x4000380	        0x4883c418	                           add rsp, 0x18	       230	merge.c	FUNCTION_2
0x4000384	            0x31c0	                            xor eax, eax	       226	merge.c	FUNCTION_2	IF_9
0x4000386	              0x5b	                                 pop rbx	       230	merge.c	FUNCTION_2
0x4000387	              0x5d	                                 pop rbp	       230	merge.c	FUNCTION_2
0x4000388	            0x415c	                                 pop r12	       230	merge.c	FUNCTION_2
0x400038a	            0x415d	                                 pop r13	       230	merge.c	FUNCTION_2
0x400038c	            0x415e	                                 pop r14	       230	merge.c	FUNCTION_2
0x400038e	            0x415f	                                 pop r15	       230	merge.c	FUNCTION_2
0x4000390	              0xc3	                                     ret	       230	merge.c	FUNCTION_2
0x4000391	      0x410fb64500	                   movzx eax, byte [r13]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000396	        0x488d7601	                      lea rsi, [rsi + 1]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x400039a	            0x85c0	                           test eax, eax	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x400039c	            0x7449	                            je 0x40003e7	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x400039e	          0x4531c0	                            xor r8d, r8d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003a1	            0x31c9	                            xor ecx, ecx	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003a3	       0xf1f440000	                   nop dword [rax + rax]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003a8	            0x89c2	                            mov edx, eax	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003aa	        0x4183c001	                              add r8d, 1	       157	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ae	        0x4883c601	                              add rsi, 1	       157	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003b2	          0xc1e211	                           shl edx, 0x11	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003b5	             0x1d0	                            add eax, edx	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003b7	          0x4801c8	                            add rax, rcx	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ba	          0x4889c1	                            mov rcx, rax	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003bd	        0x48c1e902	                              shr rcx, 2	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003c1	          0x4831c1	                            xor rcx, rax	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003c4	         0xfb646ff	               movzx eax, byte [rsi - 1]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003c8	            0x85c0	                           test eax, eax	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ca	            0x75dc	                           jne 0x40003a8	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003cc	          0x4489c0	                            mov eax, r8d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003cf	          0xc1e011	                           shl eax, 0x11	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003d2	          0x4401c0	                            add eax, r8d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003d5	          0x4801c8	                            add rax, rcx	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003d8	          0x4989c6	                            mov r14, rax	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003db	        0x49c1ee02	                              shr r14, 2	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003df	          0x4931c6	                            xor r14, rax	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003e2	      0xe94effffff	                           jmp 0x4000335	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003e7	          0x4531f6	                          xor r14d, r14d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ea	          0x4531c0	                            xor r8d, r8d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ed	      0xe943ffffff	                           jmp 0x4000335	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
strrevcmp_align	FOR,0:ELSE,0:CALL,0:functions,0:WHILE,1:DO,0:IF,2:SWITCH,0	46
0x40000c0	          0x488b0f	                    mov rcx, qword [rdi]	       576	merge.c	FUNCTION_9
0x40000c3	          0x488b36	                    mov rsi, qword [rsi]	       577	merge.c	FUNCTION_9
0x40000c6	          0x8b411c	            mov eax, dword [rcx + 0x1c] 	       583	merge.c	FUNCTION_9
0x40000c9	        0x448b5118	           mov r10d, dword [rcx + 0x18] 	       578	merge.c	FUNCTION_9
0x40000cd	        0x448b4e18	            mov r9d, dword [rsi + 0x18] 	       579	merge.c	FUNCTION_9
0x40000d1	          0x8d50ff	                      lea edx, [rax - 1]	       583	merge.c	FUNCTION_9
0x40000d4	          0x4489d0	                           mov eax, r10d	       583	merge.c	FUNCTION_9
0x40000d7	            0x21d0	                            and eax, edx	       583	merge.c	FUNCTION_9
0x40000d9	          0x4421ca	                            and edx, r9d	       583	merge.c	FUNCTION_9
0x40000dc	            0x29d0	                            sub eax, edx	       583	merge.c	FUNCTION_9
0x40000de	            0x85c0	                           test eax, eax	       585	merge.c	FUNCTION_9	IF_1
0x40000e0	            0x755b	                           jne 0x400013d	       585	merge.c	FUNCTION_9	IF_1
0x40000e2	          0x4539ca	                           cmp r10d, r9d	       582	merge.c	FUNCTION_9
0x40000e5	          0x4589cb	                           mov r11d, r9d	       582	merge.c	FUNCTION_9
0x40000e8	        0x450f46da	                       cmovbe r11d, r10d	       582	merge.c	FUNCTION_9
0x40000ec	          0x4585db	                         test r11d, r11d	       588	merge.c	FUNCTION_9	WHILE_1
0x40000ef	            0x7446	                            je 0x4000137	       588	merge.c	FUNCTION_9	WHILE_1
0x40000f1	        0x488b5108	                mov rdx, qword [rcx + 8]	       580	merge.c	FUNCTION_9
0x40000f5	          0x4489d0	                           mov eax, r10d	       580	merge.c	FUNCTION_9
0x40000f8	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	       580	merge.c	FUNCTION_9
0x40000fd	        0x488b5608	                mov rdx, qword [rsi + 8]	       581	merge.c	FUNCTION_9
0x4000101	          0x4489c8	                            mov eax, r9d	       581	merge.c	FUNCTION_9
0x4000104	      0x4c8d4402ff	                 lea r8, [rdx + rax - 1]	       581	merge.c	FUNCTION_9
0x4000109	           0xfb617	                   movzx edx, byte [rdi]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400010c	        0x410fb608	                    movzx ecx, byte [r8]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000110	            0x38d1	                              cmp cl, dl	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000112	            0x752c	                           jne 0x4000140	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000114	        0x418d73ff	                      lea esi, [r11 - 1]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000118	            0x31c0	                            xor eax, eax	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011a	          0x48f7de	                                 neg rsi	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011d	            0xeb13	                           jmp 0x4000132	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011f	              0x90	                                     nop	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000120	       0xfb65407ff	         movzx edx, byte [rdi + rax - 1]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000125	        0x4883e801	                              sub rax, 1	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000129	      0x410fb60c00	              movzx ecx, byte [r8 + rax]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400012e	            0x38ca	                              cmp dl, cl	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000130	            0x750e	                           jne 0x4000140	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000132	          0x4839c6	                            cmp rsi, rax	       588	merge.c	FUNCTION_9	WHILE_1
0x4000135	            0x75e9	                           jne 0x4000120	       588	merge.c	FUNCTION_9	WHILE_1
0x4000137	          0x4489d0	                           mov eax, r10d	       596	merge.c	FUNCTION_9
0x400013a	          0x4429c8	                            sub eax, r9d	       596	merge.c	FUNCTION_9
0x400013d	            0xf3c3	                                     ret	       597	merge.c	FUNCTION_9
0x400013f	              0x90	                                     nop	       597	merge.c	FUNCTION_9
0x4000140	           0xfb6c2	                           movzx eax, dl	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000143	            0x29c8	                            sub eax, ecx	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000145	              0xc3	                                     ret	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
_bfd_write_merged_section	FOR,0:ELSE,1:CALL,4:functions,0:WHILE,0:DO,0:IF,6:SWITCH,0	161
0x4000d80	          0x4885d2	                           test rdx, rdx	       813	merge.c	FUNCTION_13	IF_1
0x4000d83	     0xf8410020000	                            je 0x4000f99	       813	merge.c	FUNCTION_13	IF_1
0x4000d89	        0x4c8b4220	              mov r8, qword [rdx + 0x20]	       816	merge.c	FUNCTION_13	IF_2
0x4000d8d	          0x4d85c0	                             test r8, r8	       816	merge.c	FUNCTION_13	IF_2
0x4000d90	     0xf8406020000	                            je 0x4000f9c	       816	merge.c	FUNCTION_13	IF_2
0x4000d96	            0x4157	                                push r15	       805	merge.c	FUNCTION_13
0x4000d98	            0x4156	                                push r14	       805	merge.c	FUNCTION_13
0x4000d9a	            0x4155	                                push r13	       805	merge.c	FUNCTION_13
0x4000d9c	            0x4154	                                push r12	       805	merge.c	FUNCTION_13
0x4000d9e	              0x55	                                push rbp	       805	merge.c	FUNCTION_13
0x4000d9f	              0x53	                                push rbx	       805	merge.c	FUNCTION_13
0x4000da0	          0x4889d3	                            mov rbx, rdx	       805	merge.c	FUNCTION_13
0x4000da3	          0x4889f5	                            mov rbp, rsi	       805	merge.c	FUNCTION_13
0x4000da6	        0x4883ec28	                           sub rsp, 0x28	       805	merge.c	FUNCTION_13
0x4000daa	        0x488b4668	            mov rax, qword [rsi + 0x68] 	       820	merge.c	FUNCTION_13	CALL_1
0x4000dae	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       820	merge.c	FUNCTION_13	CALL_1
0x4000db3	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	       820	merge.c	FUNCTION_13	CALL_1
0x4000dba	      0x48837a18ff	cmp qword [rdx + 0x18], 0xffffffffffffffff	       821	merge.c	FUNCTION_13	IF_3
0x4000dbf	     0xf841b010000	                            je 0x4000ee0	       821	merge.c	FUNCTION_13	IF_3
0x4000dc5	        0x488b7660	            mov rsi, qword [rsi + 0x60] 	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000dc9	    0x4803b0900000	             add rsi, qword [rax + 0x90]	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000dd0	            0x31d2	                            xor edx, edx	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000dd2	      0xe800000000	                          call 0x4000dd7	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000dd7	            0x85c0	                           test eax, eax	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000dd9	     0xf85f0000000	                           jne 0x4000ecf	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000ddf	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000de3	          0x4531e4	                          xor r12d, r12d	       832	merge.c	FUNCTION_13	ELSE_1
0x4000de6	        0x4d8b6f28	            mov r13, qword [r15 + 0x28] 	       290	merge.c	ELSE_1	FUNCTION_5
0x4000dea	        0x488b6d60	            mov rbp, qword [rbp + 0x60] 	       838	merge.c	FUNCTION_13	IF_6	CALL_4
0x4000dee	    0x48c704241000	                   mov qword [rsp], 0x10	       299	merge.c	ELSE_1	FUNCTION_5
0x4000df6	        0x498b4508	                mov rax, qword [r13 + 8]	       291	merge.c	ELSE_1	FUNCTION_5
0x4000dfa	      0x4889442418	             mov qword [rsp + 0x18], rax	       291	merge.c	ELSE_1	FUNCTION_5
0x4000dff	        0x488b4068	            mov rax, qword [rax + 0x68] 	       294	merge.c	ELSE_1	FUNCTION_5
0x4000e03	          0x8b4870	            mov ecx, dword [rax + 0x70] 	       294	merge.c	ELSE_1	FUNCTION_5
0x4000e06	            0x85c9	                           test ecx, ecx	       299	merge.c	ELSE_1	FUNCTION_5
0x4000e08	            0x740d	                            je 0x4000e17	       299	merge.c	ELSE_1	FUNCTION_5
0x4000e0a	    0x41be01000000	                             mov r14d, 1	       299	merge.c	ELSE_1	FUNCTION_5
0x4000e10	          0x49d3e6	                             shl r14, cl	       299	merge.c	ELSE_1	FUNCTION_5
0x4000e13	        0x4c893424	                    mov qword [rsp], r14	       299	merge.c	ELSE_1	FUNCTION_5
0x4000e17	        0x488b3c24	                    mov rdi, qword [rsp]	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000e1b	      0xe800000000	                          call 0x4000e20	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000e20	          0x4885c0	                           test rax, rax	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000e23	      0x4889442408	                mov qword [rsp + 8], rax	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000e28	     0xf84a1000000	                            je 0x4000ecf	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000e2e	            0x31db	                            xor ebx, ebx	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000e30	            0xeb28	                           jmp 0x4000e5a	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000e32	    0x660f1f440000	                    nop word [rax + rax]	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000e38	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        53	string3.h	FUNCTION_16	CALL_3
0x4000e3c	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_16	CALL_3
0x4000e3f	          0x4889c6	                            mov rsi, rax	        53	string3.h	FUNCTION_16	CALL_3
0x4000e42	          0x4c01f5	                            add rbp, r14	       330	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000e45	      0xe800000000	                          call 0x4000e4a	        53	string3.h	FUNCTION_16	CALL_3
0x4000e4a	        0x4d8b7f30	            mov r15, qword [r15 + 0x30] 	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e4e	          0x4c01f3	                            add rbx, r14	       335	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000e51	          0x4d85ff	                           test r15, r15	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e54	     0xf84de000000	                            je 0x4000f38	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e5a	        0x4d3b6f28	            cmp r13, qword [r15 + 0x28] 	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e5e	     0xf85d4000000	                           jne 0x4000f38	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e64	        0x418b471c	            mov eax, dword [r15 + 0x1c] 	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e68	          0x8d48ff	                      lea ecx, [rax - 1]	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e6b	          0x4889d8	                            mov rax, rbx	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e6e	          0x48f7d8	                                 neg rax	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e71	          0x4821c1	                            and rcx, rax	       311	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2
0x4000e74	          0x4989ce	                            mov r14, rcx	       311	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2
0x4000e77	            0x742a	                            je 0x4000ea3	       311	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2
0x4000e79	        0x48390c24	                    cmp qword [rsp], rcx	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000e7d	     0xf827d000000	                            jb 0x4000f00	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000e83	          0x4d85e4	                           test r12, r12	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000e86	     0xf848c000000	                            je 0x4000f18	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000e8c	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_16	CALL_3
0x4000e91	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        53	string3.h	FUNCTION_16	CALL_3
0x4000e95	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_16	CALL_3
0x4000e98	          0x4c01f5	                            add rbp, r14	       317	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000e9b	      0xe800000000	                          call 0x4000ea0	        53	string3.h	FUNCTION_16	CALL_3
0x4000ea0	          0x4c01f3	                            add rbx, r14	       321	merge.c	FUNCTION_5	FOR_1	IF_2	ELSE_1
0x4000ea3	          0x4d85e4	                           test r12, r12	       327	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000ea6	        0x498b4708	                mov rax, qword [r15 + 8]	       324	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000eaa	        0x458b7718	           mov r14d, dword [r15 + 0x18] 	       325	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000eae	            0x7588	                           jne 0x4000e38	       327	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000eb0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000eb5	          0x4c89f6	                            mov rsi, r14	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000eb8	          0x4889c7	                            mov rdi, rax	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000ebb	      0xe800000000	                          call 0x4000ec0	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000ec0	          0x4939c6	                            cmp r14, rax	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000ec3	            0x7485	                            je 0x4000e4a	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000ec5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       353	merge.c	FUNCTION_5	ELSE_1	CALL_11
0x4000eca	      0xe800000000	                          call 0x4000ecf	       353	merge.c	FUNCTION_5	ELSE_1	CALL_11
0x4000ecf	        0x4883c428	                           add rsp, 0x28	       843	merge.c	FUNCTION_13
0x4000ed3	            0x31c0	                            xor eax, eax	       840	merge.c	FUNCTION_13	IF_6
0x4000ed5	              0x5b	                                 pop rbx	       843	merge.c	FUNCTION_13
0x4000ed6	              0x5d	                                 pop rbp	       843	merge.c	FUNCTION_13
0x4000ed7	            0x415c	                                 pop r12	       843	merge.c	FUNCTION_13
0x4000ed9	            0x415d	                                 pop r13	       843	merge.c	FUNCTION_13
0x4000edb	            0x415e	                                 pop r14	       843	merge.c	FUNCTION_13
0x4000edd	            0x415f	                                 pop r15	       843	merge.c	FUNCTION_13
0x4000edf	              0xc3	                                     ret	       843	merge.c	FUNCTION_13
0x4000ee0	        0xf6402308	               test byte [rax + 0x23], 8	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000ee4	        0x4c8b6248	            mov r12, qword [rdx + 0x48] 	       825	merge.c	FUNCTION_13	IF_3
0x4000ee8	     0xf84d1000000	                            je 0x4000fbf	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000eee	          0x4d85e4	                           test r12, r12	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000ef1	     0xf84c8000000	                            je 0x4000fbf	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000ef7	          0x4d89c7	                             mov r15, r8	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000efa	      0xe9e7feffff	                           jmp 0x4000de6	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000eff	              0x90	                                     nop	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000f00	      0xbe39010000	                          mov esi, 0x139	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000f05	      0xbf00000000	                              mov edi, 0	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000f0a	      0xe800000000	                          call 0x4000f0f	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000f0f	          0x4d85e4	                           test r12, r12	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000f12	     0xf8574ffffff	                           jne 0x4000e8c	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000f18	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000f1d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000f22	          0x4c89f6	                            mov rsi, r14	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000f25	      0xe800000000	                          call 0x4000f2a	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000f2a	          0x4939c6	                            cmp r14, rax	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000f2d	     0xf846dffffff	                            je 0x4000ea0	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000f33	            0xeb90	                           jmp 0x4000ec5	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000f35	           0xf1f00	                         nop dword [rax]	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000f38	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       339	merge.c	FUNCTION_5	ELSE_1
0x4000f3d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       339	merge.c	FUNCTION_5	ELSE_1
0x4000f41	          0x4829da	                            sub rdx, rbx	       340	merge.c	FUNCTION_5	ELSE_1	IF_7
0x4000f44	          0x4889d3	                            mov rbx, rdx	       340	merge.c	FUNCTION_5	ELSE_1	IF_7
0x4000f47	            0x741c	                            je 0x4000f65	       340	merge.c	FUNCTION_5	ELSE_1	IF_7
0x4000f49	        0x48391424	                    cmp qword [rsp], rdx	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f4d	            0x7239	                            jb 0x4000f88	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f4f	          0x4d85e4	                           test r12, r12	       343	merge.c	FUNCTION_5	ELSE_1	IF_7	IF_8
0x4000f52	            0x744e	                            je 0x4000fa2	       343	merge.c	FUNCTION_5	ELSE_1	IF_7	IF_8
0x4000f54	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_16	CALL_3
0x4000f59	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        53	string3.h	FUNCTION_16	CALL_3
0x4000f5d	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_16	CALL_3
0x4000f60	      0xe800000000	                          call 0x4000f65	        53	string3.h	FUNCTION_16	CALL_3
0x4000f65	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       349	merge.c	FUNCTION_5	ELSE_1	CALL_10
0x4000f6a	      0xe800000000	                          call 0x4000f6f	       349	merge.c	FUNCTION_5	ELSE_1	CALL_10
0x4000f6f	        0x4883c428	                           add rsp, 0x28	       843	merge.c	FUNCTION_13
0x4000f73	      0xb801000000	                              mov eax, 1	       842	merge.c	FUNCTION_13
0x4000f78	              0x5b	                                 pop rbx	       843	merge.c	FUNCTION_13
0x4000f79	              0x5d	                                 pop rbp	       843	merge.c	FUNCTION_13
0x4000f7a	            0x415c	                                 pop r12	       843	merge.c	FUNCTION_13
0x4000f7c	            0x415d	                                 pop r13	       843	merge.c	FUNCTION_13
0x4000f7e	            0x415e	                                 pop r14	       843	merge.c	FUNCTION_13
0x4000f80	            0x415f	                                 pop r15	       843	merge.c	FUNCTION_13
0x4000f82	              0xc3	                                     ret	       843	merge.c	FUNCTION_13
0x4000f83	       0xf1f440000	                   nop dword [rax + rax]	       843	merge.c	FUNCTION_13
0x4000f88	      0xbe56010000	                          mov esi, 0x156	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f8d	      0xbf00000000	                              mov edi, 0	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f92	      0xe800000000	                          call 0x4000f97	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f97	            0xebb6	                           jmp 0x4000f4f	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f99	            0x31c0	                            xor eax, eax	       840	merge.c	FUNCTION_13	IF_6
0x4000f9b	              0xc3	                                     ret	       843	merge.c	FUNCTION_13
0x4000f9c	      0xb801000000	                              mov eax, 1	       817	merge.c	FUNCTION_13	IF_2
0x4000fa1	              0xc3	                                     ret	       817	merge.c	FUNCTION_13	IF_2
0x4000fa2	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000fa7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000fac	          0x4889de	                            mov rsi, rbx	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000faf	      0xe800000000	                          call 0x4000fb4	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000fb4	          0x4839c3	                            cmp rbx, rax	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000fb7	     0xf8508ffffff	                           jne 0x4000ec5	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000fbd	            0xeba6	                           jmp 0x4000f65	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000fbf	      0xba00000000	                              mov edx, 0	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000fc4	      0xbe3c030000	                          mov esi, 0x33c	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000fc9	      0xbf00000000	                              mov edi, 0	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000fce	      0xe800000000	                          call 0x4000fd3	       828	merge.c	FUNCTION_13	IF_3	CALL_2
_bfd_add_merge_section	FOR,1:ELSE,1:CALL,6:functions,0:WHILE,0:DO,0:IF,13:SWITCH,0	177
0x4000400	            0x4157	                                push r15	       363	merge.c	FUNCTION_6
0x4000402	            0x4156	                                push r14	       363	merge.c	FUNCTION_6
0x4000404	            0x4155	                                push r13	       363	merge.c	FUNCTION_6
0x4000406	            0x4154	                                push r12	       363	merge.c	FUNCTION_6
0x4000408	              0x55	                                push rbp	       363	merge.c	FUNCTION_6
0x4000409	              0x53	                                push rbx	       363	merge.c	FUNCTION_6
0x400040a	        0x4883ec28	                           sub rsp, 0x28	       363	merge.c	FUNCTION_6
0x400040e	    0x64488b042528	                mov rax, qword fs:[0x28]	       363	merge.c	FUNCTION_6
0x4000417	      0x4889442418	             mov qword [rsp + 0x18], rax	       363	merge.c	FUNCTION_6
0x400041c	            0x31c0	                            xor eax, eax	       363	merge.c	FUNCTION_6
0x400041e	        0xf6474508	               test byte [rdi + 0x45], 8	       370	merge.c	FUNCTION_6	IF_1
0x4000422	     0xf8590020000	                           jne 0x40006b8	       370	merge.c	FUNCTION_6	IF_1
0x4000428	          0x4889d5	                            mov rbp, rdx	       370	merge.c	FUNCTION_6	IF_1
0x400042b	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       371	merge.c	FUNCTION_6	IF_1
0x400042e	    0xf7c200008000	                      test edx, 0x800000	       371	merge.c	FUNCTION_6	IF_1
0x4000434	     0xf847e020000	                            je 0x40006b8	       371	merge.c	FUNCTION_6	IF_1
0x400043a	          0x4989f6	                            mov r14, rsi	       371	merge.c	FUNCTION_6	IF_1
0x400043d	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       374	merge.c	FUNCTION_6	IF_2
0x4000441	          0x4885f6	                           test rsi, rsi	       374	merge.c	FUNCTION_6	IF_2
0x4000444	     0xf8456010000	                            je 0x40005a0	       374	merge.c	FUNCTION_6	IF_2
0x400044a	          0xf6c680	                           test dh, 0x80	       375	merge.c	FUNCTION_6	IF_2
0x400044d	     0xf854d010000	                           jne 0x40005a0	       375	merge.c	FUNCTION_6	IF_2
0x4000453	    0x448b85c40000	            mov r8d, dword [rbp + 0xc4] 	       376	merge.c	FUNCTION_6	IF_2
0x400045a	          0x4585c0	                           test r8d, r8d	       376	merge.c	FUNCTION_6	IF_2
0x400045d	     0xf843d010000	                            je 0x40005a0	       376	merge.c	FUNCTION_6	IF_2
0x4000463	          0xf6c204	                              test dl, 4	       379	merge.c	FUNCTION_6	IF_3
0x4000466	     0xf8534010000	                           jne 0x40005a0	       379	merge.c	FUNCTION_6	IF_3
0x400046c	          0x4989cd	                            mov r13, rcx	       379	merge.c	FUNCTION_6	IF_3
0x400046f	          0x8b4d70	            mov ecx, dword [rbp + 0x70] 	       385	merge.c	FUNCTION_6
0x4000472	          0x4489c0	                            mov eax, r8d	       386	merge.c	FUNCTION_6	IF_4
0x4000475	          0x4989fc	                            mov r12, rdi	       386	merge.c	FUNCTION_6	IF_4
0x4000478	            0xd3e8	                             shr eax, cl	       386	merge.c	FUNCTION_6	IF_4
0x400047a	            0x85c0	                           test eax, eax	       386	merge.c	FUNCTION_6	IF_4
0x400047c	            0x7519	                           jne 0x4000497	       386	merge.c	FUNCTION_6	IF_4
0x400047e	        0x418d40ff	                       lea eax, [r8 - 1]	       387	merge.c	FUNCTION_6	IF_4
0x4000482	          0x4485c0	                           test eax, r8d	       387	merge.c	FUNCTION_6	IF_4
0x4000485	     0xf8515010000	                           jne 0x40005a0	       387	merge.c	FUNCTION_6	IF_4
0x400048b	    0xf7c200000001	                     test edx, 0x1000000	       388	merge.c	FUNCTION_6	IF_4
0x4000491	     0xf8409010000	                            je 0x40005a0	       388	merge.c	FUNCTION_6	IF_4
0x4000497	      0xb801000000	                              mov eax, 1	       389	merge.c	FUNCTION_6	IF_4
0x400049c	            0xd3e0	                             shl eax, cl	       389	merge.c	FUNCTION_6	IF_4
0x400049e	          0x4139c0	                            cmp r8d, eax	       389	merge.c	FUNCTION_6	IF_4
0x40004a1	     0xf87e9000000	                            ja 0x4000590	       389	merge.c	FUNCTION_6	IF_4
0x40004a7	          0x498b1e	                    mov rbx, qword [r14]	       401	merge.c	FUNCTION_6	FOR_1
0x40004aa	          0x4885db	                           test rbx, rbx	       401	merge.c	FUNCTION_6	FOR_1
0x40004ad	            0x7515	                           jne 0x40004c4	       401	merge.c	FUNCTION_6	FOR_1
0x40004af	      0xe91c010000	                           jmp 0x40005d0	       401	merge.c	FUNCTION_6	FOR_1
0x40004b4	         0xf1f4000	                         nop dword [rax]	       401	merge.c	FUNCTION_6	FOR_1
0x40004b8	          0x488b1b	                    mov rbx, qword [rbx]	       401	merge.c	FUNCTION_6	FOR_1
0x40004bb	          0x4885db	                           test rbx, rbx	       401	merge.c	FUNCTION_6	FOR_1
0x40004be	     0xf840c010000	                            je 0x40005d0	       401	merge.c	FUNCTION_6	FOR_1
0x40004c4	        0x488b4308	                mov rax, qword [rbx + 8]	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004c8	          0x4885c0	                           test rax, rax	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004cb	            0x74eb	                            je 0x40004b8	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004cd	        0x488b4008	                mov rax, qword [rax + 8]	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004d1	          0x8b7820	            mov edi, dword [rax + 0x20] 	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004d4	            0x31d7	                            xor edi, edx	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004d6	    0x81e700008001	                      and edi, 0x1800000	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004dc	            0x75da	                           jne 0x40004b8	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004de	    0x443b80c40000	            cmp r8d, dword [rax + 0xc4] 	       404	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004e5	            0x75d1	                           jne 0x40004b8	       404	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004e7	          0x3b4870	            cmp ecx, dword [rax + 0x70] 	       405	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004ea	            0x75cc	                           jne 0x40004b8	       405	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004ec	        0x488b7d68	            mov rdi, qword [rbp + 0x68] 	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004f0	        0x48397868	            cmp qword [rax + 0x68], rdi 	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004f4	            0x75c2	                           jne 0x40004b8	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004f6	        0x4883c62f	                           add rsi, 0x2f	       426	merge.c	FUNCTION_6
0x40004fa	    0x81e200000001	                      and edx, 0x1000000	       427	merge.c	FUNCTION_6	IF_9
0x4000500	     0xf856a010000	                           jne 0x4000670	       427	merge.c	FUNCTION_6	IF_9
0x4000506	          0x4c89e7	                            mov rdi, r12	       432	merge.c	FUNCTION_6	CALL_4
0x4000509	      0xe800000000	                          call 0x400050e	       432	merge.c	FUNCTION_6	CALL_4
0x400050e	          0x4885c0	                           test rax, rax	       433	merge.c	FUNCTION_6	IF_10
0x4000511	        0x49894500	                    mov qword [r13], rax	       432	merge.c	FUNCTION_6	CALL_4
0x4000515	            0x7465	                            je 0x400057c	       433	merge.c	FUNCTION_6	IF_10
0x4000517	        0x488b5308	                mov rdx, qword [rbx + 8]	       437	merge.c	FUNCTION_6	IF_11
0x400051b	          0x4885d2	                           test rdx, rdx	       437	merge.c	FUNCTION_6	IF_11
0x400051e	     0xf848c010000	                            je 0x40006b0	       437	merge.c	FUNCTION_6	IF_11
0x4000524	          0x488b0a	                    mov rcx, qword [rdx]	       439	merge.c	FUNCTION_6	IF_11
0x4000527	          0x488908	                    mov qword [rax], rcx	       439	merge.c	FUNCTION_6	IF_11
0x400052a	          0x488902	                    mov qword [rdx], rax	       440	merge.c	FUNCTION_6	IF_11
0x400052d	        0xf6452301	               test byte [rbp + 0x23], 1	       451	merge.c	FUNCTION_6	IF_12
0x4000531	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       447	merge.c	FUNCTION_6
0x4000535	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	       450	merge.c	FUNCTION_6
0x4000539	        0x48894308	                mov qword [rbx + 8], rax	       444	merge.c	FUNCTION_6
0x400053d	        0x488d5828	                   lea rbx, [rax + 0x28]	       452	merge.c	FUNCTION_6	CALL_5
0x4000541	        0x48896808	                mov qword [rax + 8], rbp	       445	merge.c	FUNCTION_6
0x4000545	        0x4c896810	             mov qword [rax + 0x10], r13	       446	merge.c	FUNCTION_6
0x4000549	        0x48895018	             mov qword [rax + 0x18], rdx	       447	merge.c	FUNCTION_6
0x400054d	    0x48c740200000	               mov qword [rax + 0x20], 0	       448	merge.c	FUNCTION_6
0x4000555	        0x48894d40	            mov qword [rbp + 0x40], rcx 	       450	merge.c	FUNCTION_6
0x4000559	     0xf8521010000	                           jne 0x4000680	       451	merge.c	FUNCTION_6	IF_12
0x400055f	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x4000566	      0x488d542410	                   lea rdx, [rsp + 0x10]	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400056b	          0x4889ee	                            mov rsi, rbp	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400056e	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       453	merge.c	FUNCTION_6
0x4000573	      0xe800000000	                          call 0x4000578	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x4000578	            0x85c0	                           test eax, eax	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400057a	            0x7524	                           jne 0x40005a0	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400057c	    0x49c745000000	                      mov qword [r13], 0	       460	merge.c	FUNCTION_6
0x4000584	            0x31c0	                            xor eax, eax	       461	merge.c	FUNCTION_6
0x4000586	            0xeb1d	                           jmp 0x40005a5	       461	merge.c	FUNCTION_6
0x4000588	     0xf1f84000000	                   nop dword [rax + rax]	       461	merge.c	FUNCTION_6
0x4000590	          0x83e801	                              sub eax, 1	       390	merge.c	FUNCTION_6	IF_4
0x4000593	          0x4485c0	                           test eax, r8d	       390	merge.c	FUNCTION_6	IF_4
0x4000596	     0xf840bffffff	                            je 0x40004a7	       390	merge.c	FUNCTION_6	IF_4
0x400059c	         0xf1f4000	                         nop dword [rax]	       390	merge.c	FUNCTION_6	IF_4
0x40005a0	      0xb801000000	                              mov eax, 1	       377	merge.c	FUNCTION_6	IF_2
0x40005a5	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       462	merge.c	FUNCTION_6
0x40005aa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       462	merge.c	FUNCTION_6
0x40005b3	     0xf8513010000	                           jne 0x40006cc	       462	merge.c	FUNCTION_6
0x40005b9	        0x4883c428	                           add rsp, 0x28	       462	merge.c	FUNCTION_6
0x40005bd	              0x5b	                                 pop rbx	       462	merge.c	FUNCTION_6
0x40005be	              0x5d	                                 pop rbp	       462	merge.c	FUNCTION_6
0x40005bf	            0x415c	                                 pop r12	       462	merge.c	FUNCTION_6
0x40005c1	            0x415d	                                 pop r13	       462	merge.c	FUNCTION_6
0x40005c3	            0x415e	                                 pop r14	       462	merge.c	FUNCTION_6
0x40005c5	            0x415f	                                 pop r15	       462	merge.c	FUNCTION_6
0x40005c7	              0xc3	                                     ret	       462	merge.c	FUNCTION_6
0x40005c8	     0xf1f84000000	                   nop dword [rax + rax]	       462	merge.c	FUNCTION_6
0x40005d0	      0xbe18000000	                           mov esi, 0x18	       412	merge.c	FUNCTION_6	IF_6
0x40005d5	          0x4c89e7	                            mov rdi, r12	       412	merge.c	FUNCTION_6	IF_6
0x40005d8	      0xe800000000	                          call 0x40005dd	       412	merge.c	FUNCTION_6	IF_6
0x40005dd	          0x4885c0	                           test rax, rax	       414	merge.c	FUNCTION_6	IF_6	IF_7
0x40005e0	          0x4889c3	                            mov rbx, rax	       412	merge.c	FUNCTION_6	IF_6
0x40005e3	            0x7497	                            je 0x400057c	       414	merge.c	FUNCTION_6	IF_6	IF_7
0x40005e5	          0x498b06	                    mov rax, qword [r14]	       416	merge.c	FUNCTION_6	IF_6
0x40005e8	      0xbf48000000	                           mov edi, 0x48	       239	merge.c	FUNCTION_3	CALL_1
0x40005ed	    0x48c743080000	                  mov qword [rbx + 8], 0	       417	merge.c	FUNCTION_6	IF_6
0x40005f5	    0x448bbdc40000	           mov r15d, dword [rbp + 0xc4] 	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x40005fc	          0x488903	                    mov qword [rbx], rax	       416	merge.c	FUNCTION_6	IF_6
0x40005ff	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000602	          0x49891e	                    mov qword [r14], rbx	       418	merge.c	FUNCTION_6	IF_6
0x4000605	      0x2500000001	                      and eax, 0x1000000	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400060a	        0x8944240c	              mov dword [rsp + 0xc], eax	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400060e	      0xe800000000	                          call 0x4000613	       239	merge.c	FUNCTION_3	CALL_1
0x4000613	          0x4885c0	                           test rax, rax	       240	merge.c	FUNCTION_3	IF_1
0x4000616	          0x4989c6	                            mov r14, rax	       239	merge.c	FUNCTION_3	CALL_1
0x4000619	     0xf847f000000	                            je 0x400069e	       240	merge.c	FUNCTION_3	IF_1
0x400061f	      0xb93b410000	                         mov ecx, 0x413b	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000624	      0xba38000000	                           mov edx, 0x38	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000629	      0xbe00000000	                              mov esi, 0	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x400062e	          0x4889c7	                            mov rdi, rax	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000631	      0xe800000000	                          call 0x4000636	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000636	            0x85c0	                           test eax, eax	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000638	            0x745c	                            je 0x4000696	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x400063a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       254	merge.c	FUNCTION_3
0x400063e	    0x49c746280000	               mov qword [r14 + 0x28], 0	       250	merge.c	FUNCTION_3
0x4000646	    0x49c746300000	               mov qword [r14 + 0x30], 0	       251	merge.c	FUNCTION_3
0x400064e	    0x49c746380000	               mov qword [r14 + 0x38], 0	       252	merge.c	FUNCTION_3
0x4000656	        0x45897e40	            mov dword [r14 + 0x40], r15d	       253	merge.c	FUNCTION_3
0x400065a	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       253	merge.c	FUNCTION_3
0x400065e	        0x41894644	             mov dword [r14 + 0x44], eax	       254	merge.c	FUNCTION_3
0x4000662	          0x8b5520	            mov edx, dword [rbp + 0x20] 	       254	merge.c	FUNCTION_3
0x4000665	        0x4c897310	             mov qword [rbx + 0x10], r14	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000669	      0xe988feffff	                           jmp 0x40004f6	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400066e	            0x6690	                                     nop	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000670	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	       431	merge.c	FUNCTION_6	IF_9
0x4000676	          0x4801c6	                            add rsi, rax	       431	merge.c	FUNCTION_6	IF_9
0x4000679	      0xe988feffff	                           jmp 0x4000506	       431	merge.c	FUNCTION_6	IF_9
0x400067e	            0x6690	                                     nop	       431	merge.c	FUNCTION_6	IF_9
0x4000680	    0x8b95c4000000	            mov edx, dword [rbp + 0xc4] 	        90	string3.h	FUNCTION_19	CALL_6
0x4000686	        0x488d3c0b	                    lea rdi, [rbx + rcx]	        90	string3.h	FUNCTION_19	CALL_6
0x400068a	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_19	CALL_6
0x400068c	      0xe800000000	                          call 0x4000691	        90	string3.h	FUNCTION_19	CALL_6
0x4000691	      0xe9c9feffff	                           jmp 0x400055f	        90	string3.h	FUNCTION_19	CALL_6
0x4000696	          0x4c89f7	                            mov rdi, r14	       246	merge.c	FUNCTION_3	IF_2	CALL_3
0x4000699	      0xe800000000	                          call 0x400069e	       246	merge.c	FUNCTION_3	IF_2	CALL_3
0x400069e	    0x48c743100000	               mov qword [rbx + 0x10], 0	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x40006a6	      0xe9d1feffff	                           jmp 0x400057c	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x40006ab	       0xf1f440000	                   nop dword [rax + rax]	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x40006b0	          0x488900	                    mov qword [rax], rax	       443	merge.c	FUNCTION_6	ELSE_1
0x40006b3	      0xe975feffff	                           jmp 0x400052d	       443	merge.c	FUNCTION_6	ELSE_1
0x40006b8	      0xba00000000	                              mov edx, 0	       372	merge.c	FUNCTION_6	CALL_1
0x40006bd	      0xbe74010000	                          mov esi, 0x174	       372	merge.c	FUNCTION_6	CALL_1
0x40006c2	      0xbf00000000	                              mov edi, 0	       372	merge.c	FUNCTION_6	CALL_1
0x40006c7	      0xe800000000	                          call 0x40006cc	       372	merge.c	FUNCTION_6	CALL_1
0x40006cc	      0xe800000000	                          call 0x40006d1	       462	merge.c	FUNCTION_6
_bfd_merge_sections_free	FOR,1:ELSE,0:CALL,2:functions,0:WHILE,0:DO,0:IF,0:SWITCH,0	14
0x4001210	          0x4885ff	                           test rdi, rdi	       931	merge.c	FUNCTION_15	FOR_1
0x4001213	            0x7426	                            je 0x400123b	       931	merge.c	FUNCTION_15	FOR_1
0x4001215	              0x53	                                push rbx	       928	merge.c	FUNCTION_15
0x4001216	          0x4889fb	                            mov rbx, rdi	       928	merge.c	FUNCTION_15
0x4001219	     0xf1f80000000	                         nop dword [rax]	       928	merge.c	FUNCTION_15
0x4001220	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       933	merge.c	FUNCTION_15	FOR_1	CALL_1
0x4001224	      0xe800000000	                          call 0x4001229	       933	merge.c	FUNCTION_15	FOR_1	CALL_1
0x4001229	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       934	merge.c	FUNCTION_15	FOR_1	CALL_2
0x400122d	      0xe800000000	                          call 0x4001232	       934	merge.c	FUNCTION_15	FOR_1	CALL_2
0x4001232	          0x488b1b	                    mov rbx, qword [rbx]	       931	merge.c	FUNCTION_15	FOR_1
0x4001235	          0x4885db	                           test rbx, rbx	       931	merge.c	FUNCTION_15	FOR_1
0x4001238	            0x75e6	                           jne 0x4001220	       931	merge.c	FUNCTION_15	FOR_1
0x400123a	              0x5b	                                 pop rbx	       936	merge.c	FUNCTION_15
0x400123b	            0xf3c3	                                     ret	       936	merge.c	FUNCTION_15
_bfd_merged_section_offset	FOR,1:ELSE,2:CALL,6:functions,0:WHILE,2:DO,0:IF,11:SWITCH,0	161
0x4000fe0	            0x4157	                                push r15	       852	merge.c	FUNCTION_14
0x4000fe2	            0x4156	                                push r14	       852	merge.c	FUNCTION_14
0x4000fe4	            0x4155	                                push r13	       852	merge.c	FUNCTION_14
0x4000fe6	            0x4154	                                push r12	       852	merge.c	FUNCTION_14
0x4000fe8	              0x55	                                push rbp	       852	merge.c	FUNCTION_14
0x4000fe9	              0x53	                                push rbx	       852	merge.c	FUNCTION_14
0x4000fea	        0x4883ec08	                              sub rsp, 8	       852	merge.c	FUNCTION_14
0x4000fee	          0x4885d2	                           test rdx, rdx	       860	merge.c	FUNCTION_14	IF_1
0x4000ff1	          0x4c8b36	                    mov r14, qword [rsi]	       856	merge.c	FUNCTION_14
0x4000ff4	     0xf847f010000	                            je 0x4001179	       860	merge.c	FUNCTION_14	IF_1
0x4000ffa	        0x493b4e40	            cmp rcx, qword [r14 + 0x40] 	       863	merge.c	FUNCTION_14	IF_2
0x4000ffe	          0x4889cb	                            mov rbx, rcx	       863	merge.c	FUNCTION_14	IF_2
0x4001001	          0x4889d5	                            mov rbp, rdx	       863	merge.c	FUNCTION_14	IF_2
0x4001004	          0x4989f4	                            mov r12, rsi	       863	merge.c	FUNCTION_14	IF_2
0x4001007	            0x7227	                            jb 0x4001030	       863	merge.c	FUNCTION_14	IF_2
0x4001009	     0xf873a010000	                            ja 0x4001149	       865	merge.c	FUNCTION_14	IF_2	IF_3
0x400100f	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       870	merge.c	FUNCTION_14	IF_2
0x4001014	     0xf8471010000	                            je 0x400118b	       870	merge.c	FUNCTION_14	IF_2
0x400101a	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       870	merge.c	FUNCTION_14	IF_2
0x400101e	        0x4883c408	                              add rsp, 8	       922	merge.c	FUNCTION_14
0x4001022	              0x5b	                                 pop rbx	       922	merge.c	FUNCTION_14
0x4001023	              0x5d	                                 pop rbp	       922	merge.c	FUNCTION_14
0x4001024	            0x415c	                                 pop r12	       922	merge.c	FUNCTION_14
0x4001026	            0x415d	                                 pop r13	       922	merge.c	FUNCTION_14
0x4001028	            0x415e	                                 pop r14	       922	merge.c	FUNCTION_14
0x400102a	            0x415f	                                 pop r15	       922	merge.c	FUNCTION_14
0x400102c	              0xc3	                                     ret	       922	merge.c	FUNCTION_14
0x400102d	           0xf1f00	                         nop dword [rax]	       922	merge.c	FUNCTION_14
0x4001030	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	       873	merge.c	FUNCTION_14	IF_4
0x4001034	          0x8b4f44	            mov ecx, dword [rdi + 0x44] 	       873	merge.c	FUNCTION_14	IF_4
0x4001037	            0x85c9	                           test ecx, ecx	       873	merge.c	FUNCTION_14	IF_4
0x4001039	            0x7475	                            je 0x40010b0	       873	merge.c	FUNCTION_14	IF_4
0x400103b	    0x458b8ec40000	            mov r9d, dword [r14 + 0xc4] 	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x4001042	        0x4c8d6a28	                   lea r13, [rdx + 0x28]	       877	merge.c	FUNCTION_14	IF_4	IF_5
0x4001046	        0x4183f901	                              cmp r9d, 1	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x400104a	     0xf84bb000000	                            je 0x400110b	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x4001050	          0x4489c9	                            mov ecx, r9d	       884	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4001053	            0x31d2	                            xor edx, edx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4001055	          0x4889d8	                            mov rax, rbx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4001058	          0x48f7f1	                                 div rcx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x400105b	        0x480fafc1	                           imul rax, rcx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x400105f	          0x4989c2	                            mov r10, rax	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4001062	          0x4929ca	                            sub r10, rcx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4001065	          0x4d01ea	                            add r10, r13	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4001068	            0x723d	                            jb 0x40010a7	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x400106a	    0x660f1f440000	                    nop word [rax + rax]	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4001070	          0x4585c9	                           test r9d, r9d	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4001073	            0x7432	                            je 0x40010a7	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4001075	            0x31c0	                            xor eax, eax	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001077	        0x41803a00	                       cmp byte [r10], 0	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x400107b	        0x4d8d4201	                       lea r8, [r10 + 1]	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x400107f	            0x741e	                            je 0x400109f	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001081	      0xe9b2000000	                           jmp 0x4001138	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001086	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001090	        0x4983c001	                               add r8, 1	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001094	      0x418078ff00	                    cmp byte [r8 - 1], 0	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001099	     0xf8599000000	                           jne 0x4001138	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x400109f	          0x83c001	                              add eax, 1	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x40010a2	          0x4139c1	                            cmp r9d, eax	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x40010a5	            0x75e9	                           jne 0x4001090	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x40010a7	        0x4d8d3c0a	                    lea r15, [r10 + rcx]	       897	merge.c	FUNCTION_14	IF_4	ELSE_1
0x40010ab	            0xeb1f	                           jmp 0x40010cc	       897	merge.c	FUNCTION_14	IF_4	ELSE_1
0x40010ad	           0xf1f00	                         nop dword [rax]	       897	merge.c	FUNCTION_14	IF_4	ELSE_1
0x40010b0	    0x418b8ec40000	            mov ecx, dword [r14 + 0xc4] 	       902	merge.c	FUNCTION_14	ELSE_2
0x40010b7	        0x4c8d6a28	                   lea r13, [rdx + 0x28]	       902	merge.c	FUNCTION_14	ELSE_2
0x40010bb	          0x4889d8	                            mov rax, rbx	       902	merge.c	FUNCTION_14	ELSE_2
0x40010be	            0x31d2	                            xor edx, edx	       902	merge.c	FUNCTION_14	ELSE_2
0x40010c0	          0x48f7f1	                                 div rcx	       902	merge.c	FUNCTION_14	ELSE_2
0x40010c3	        0x480fafc8	                           imul rcx, rax	       902	merge.c	FUNCTION_14	ELSE_2
0x40010c7	      0x4d8d7c0d00	                    lea r15, [r13 + rcx]	       902	merge.c	FUNCTION_14	ELSE_2
0x40010cc	            0x31c9	                            xor ecx, ecx	       904	merge.c	FUNCTION_14	CALL_3
0x40010ce	            0x31d2	                            xor edx, edx	       904	merge.c	FUNCTION_14	CALL_3
0x40010d0	          0x4c89fe	                            mov rsi, r15	       904	merge.c	FUNCTION_14	CALL_3
0x40010d3	      0xe8e8f0ffff	          call sym.sec_merge_hash_lookup	       904	merge.c	FUNCTION_14	CALL_3
0x40010d8	          0x4885c0	                           test rax, rax	       905	merge.c	FUNCTION_14	IF_8
0x40010db	          0x4889c6	                            mov rsi, rax	       904	merge.c	FUNCTION_14	CALL_3
0x40010de	     0xf84ae000000	                            je 0x4001192	       905	merge.c	FUNCTION_14	IF_8
0x40010e4	        0x488b4628	            mov rax, qword [rsi + 0x28] 	       920	merge.c	FUNCTION_14
0x40010e8	        0x488b4008	                mov rax, qword [rax + 8]	       920	merge.c	FUNCTION_14
0x40010ec	        0x49890424	                    mov qword [r12], rax	       920	merge.c	FUNCTION_14
0x40010f0	      0x498d441d00	                    lea rax, [r13 + rbx]	       921	merge.c	FUNCTION_14
0x40010f5	          0x4c29f8	                            sub rax, r15	       921	merge.c	FUNCTION_14
0x40010f8	        0x48034620	             add rax, qword [rsi + 0x20]	       921	merge.c	FUNCTION_14
0x40010fc	        0x4883c408	                              add rsp, 8	       922	merge.c	FUNCTION_14
0x4001100	              0x5b	                                 pop rbx	       922	merge.c	FUNCTION_14
0x4001101	              0x5d	                                 pop rbp	       922	merge.c	FUNCTION_14
0x4001102	            0x415c	                                 pop r12	       922	merge.c	FUNCTION_14
0x4001104	            0x415d	                                 pop r13	       922	merge.c	FUNCTION_14
0x4001106	            0x415e	                                 pop r14	       922	merge.c	FUNCTION_14
0x4001108	            0x415f	                                 pop r15	       922	merge.c	FUNCTION_14
0x400110a	              0xc3	                                     ret	       922	merge.c	FUNCTION_14
0x400110b	      0x498d441dff	                lea rax, [r13 + rbx - 1]	       877	merge.c	FUNCTION_14	IF_4	IF_5
0x4001110	          0x4939c5	                            cmp r13, rax	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4001113	            0x7614	                           jbe 0x4001129	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4001115	            0xeb17	                           jmp 0x400112e	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4001117	    0x660f1f840000	                    nop word [rax + rax]	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4001120	        0x4883e801	                              sub rax, 1	       879	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4001124	          0x4939c5	                            cmp r13, rax	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4001127	            0x7705	                            ja 0x400112e	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4001129	          0x803800	                       cmp byte [rax], 0	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x400112c	            0x75f2	                           jne 0x4001120	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x400112e	        0x4c8d7801	                      lea r15, [rax + 1]	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x4001132	            0xeb98	                           jmp 0x40010cc	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x4001134	         0xf1f4000	                         nop dword [rax]	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x4001138	          0x4929ca	                            sub r10, rcx	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x400113b	          0x4d39d5	                            cmp r13, r10	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x400113e	     0xf862cffffff	                           jbe 0x4001070	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4001144	      0xe95effffff	                           jmp 0x40010a7	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4001149	    0x4d8ba6f00000	            mov r12, qword [r14 + 0xf0] 	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4001150	      0xba05000000	                              mov edx, 5	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x4001155	      0xbe00000000	                              mov esi, 0	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x400115a	      0xbf00000000	                              mov edi, 0	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x400115f	      0xe800000000	                          call 0x4001164	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x4001164	          0x4889da	                            mov rdx, rbx	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4001167	          0x4889c7	                            mov rdi, rax	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x400116a	          0x4c89e6	                            mov rsi, r12	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x400116d	            0x31c0	                            xor eax, eax	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x400116f	      0xe800000000	                          call 0x4001174	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4001174	      0xe996feffff	                           jmp 0x400100f	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4001179	        0x4883c408	                              add rsp, 8	       922	merge.c	FUNCTION_14
0x400117d	          0x4889c8	                            mov rax, rcx	       922	merge.c	FUNCTION_14
0x4001180	              0x5b	                                 pop rbx	       922	merge.c	FUNCTION_14
0x4001181	              0x5d	                                 pop rbp	       922	merge.c	FUNCTION_14
0x4001182	            0x415c	                                 pop r12	       922	merge.c	FUNCTION_14
0x4001184	            0x415d	                                 pop r13	       922	merge.c	FUNCTION_14
0x4001186	            0x415e	                                 pop r14	       922	merge.c	FUNCTION_14
0x4001188	            0x415f	                                 pop r15	       922	merge.c	FUNCTION_14
0x400118a	              0xc3	                                     ret	       922	merge.c	FUNCTION_14
0x400118b	            0x31c0	                            xor eax, eax	       870	merge.c	FUNCTION_14	IF_2
0x400118d	      0xe98cfeffff	                           jmp 0x400101e	       870	merge.c	FUNCTION_14	IF_2
0x4001192	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x4001196	          0x8b5044	            mov edx, dword [rax + 0x44] 	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x4001199	            0x85d2	                           test edx, edx	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x400119b	            0x7436	                            je 0x40011d3	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x400119d	        0x41803f00	                       cmp byte [r15], 0	       911	merge.c	FUNCTION_14	IF_8	IF_10
0x40011a1	            0x7558	                           jne 0x40011fb	       911	merge.c	FUNCTION_14	IF_8	IF_10
0x40011a3	        0x488b7030	            mov rsi, qword [rax + 0x30] 	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x40011a7	          0x4885f6	                           test rsi, rsi	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x40011aa	            0x743b	                            je 0x40011e7	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x40011ac	    0x418b8ec40000	            mov ecx, dword [r14 + 0xc4] 	       916	merge.c	FUNCTION_14	IF_8
0x40011b3	          0x4889d8	                            mov rax, rbx	       916	merge.c	FUNCTION_14	IF_8
0x40011b6	            0x31d2	                            xor edx, edx	       916	merge.c	FUNCTION_14	IF_8
0x40011b8	          0x48f7f1	                                 div rcx	       916	merge.c	FUNCTION_14	IF_8
0x40011bb	        0x4883c001	                              add rax, 1	       916	merge.c	FUNCTION_14	IF_8
0x40011bf	        0x480fafc8	                           imul rcx, rax	       916	merge.c	FUNCTION_14	IF_8
0x40011c3	          0x8b4618	            mov eax, dword [rsi + 0x18] 	       916	merge.c	FUNCTION_14	IF_8
0x40011c6	          0x4829c1	                            sub rcx, rax	       916	merge.c	FUNCTION_14	IF_8
0x40011c9	      0x4d8d7c0d00	                    lea r15, [r13 + rcx]	       916	merge.c	FUNCTION_14	IF_8
0x40011ce	      0xe911ffffff	                           jmp 0x40010e4	       916	merge.c	FUNCTION_14	IF_8
0x40011d3	      0xba00000000	                              mov edx, 0	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x40011d8	      0xbe8c030000	                          mov esi, 0x38c	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x40011dd	      0xbf00000000	                              mov edi, 0	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x40011e2	      0xe800000000	                          call 0x40011e7	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x40011e7	      0xba00000000	                              mov edx, 0	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x40011ec	      0xbe92030000	                          mov esi, 0x392	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x40011f1	      0xbf00000000	                              mov edi, 0	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x40011f6	      0xe800000000	                          call 0x40011fb	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x40011fb	      0xba00000000	                              mov edx, 0	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x4001200	      0xbe90030000	                          mov esi, 0x390	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x4001205	      0xbf00000000	                              mov edi, 0	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x400120a	      0xe800000000	                          call 0x400120f	       912	merge.c	FUNCTION_14	IF_8	CALL_5
_bfd_merge_sections	FOR,4:ELSE,2:CALL,2:functions,0:WHILE,0:DO,0:IF,11:SWITCH,0	461
0x40006e0	            0x4157	                                push r15	       728	merge.c	FUNCTION_12
0x40006e2	            0x4156	                                push r14	       728	merge.c	FUNCTION_12
0x40006e4	          0x4989d7	                            mov r15, rdx	       728	merge.c	FUNCTION_12
0x40006e7	            0x4155	                                push r13	       728	merge.c	FUNCTION_12
0x40006e9	            0x4154	                                push r12	       728	merge.c	FUNCTION_12
0x40006eb	              0x55	                                push rbp	       728	merge.c	FUNCTION_12
0x40006ec	              0x53	                                push rbx	       728	merge.c	FUNCTION_12
0x40006ed	        0x4883ec48	                           sub rsp, 0x48	       728	merge.c	FUNCTION_12
0x40006f1	          0x4885d2	                           test rdx, rdx	       731	merge.c	FUNCTION_12	FOR_1
0x40006f4	      0x48897c2438	             mov qword [rsp + 0x38], rdi	       728	merge.c	FUNCTION_12
0x40006f9	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       728	merge.c	FUNCTION_12
0x40006fe	     0xf8405040000	                            je 0x4000b09	       731	merge.c	FUNCTION_12	FOR_1
0x4000704	        0x498b4708	                mov rax, qword [r15 + 8]	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x4000708	          0x4885c0	                           test rax, rax	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x400070b	     0xf84ec030000	                            je 0x4000afd	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x4000711	          0x4c8b30	                    mov r14, qword [rax]	       740	merge.c	FUNCTION_12	FOR_1
0x4000714	          0x4d85f6	                           test r14, r14	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000717	        0x4d897708	                mov qword [r15 + 8], r14	       740	merge.c	FUNCTION_12	FOR_1
0x400071b	    0x48c700000000	                      mov qword [rax], 0	       741	merge.c	FUNCTION_12	FOR_1
0x4000722	     0xf84d9010000	                            je 0x4000901	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000728	      0x4c897c2408	                mov qword [rsp + 8], r15	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x400072d	            0xeb2c	                           jmp 0x400075b	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x400072f	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       747	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x4000733	    0x48c700000000	                      mov qword [rax], 0	       747	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x400073a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x400073f	          0x4885c0	                           test rax, rax	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x4000742	            0x740b	                            je 0x400074f	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x4000744	        0x498b7608	                mov rsi, qword [r14 + 8]	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x4000748	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x400074d	            0xffd0	                                call rax	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x400074f	          0x4d8b36	                    mov r14, qword [r14]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000752	          0x4d85f6	                           test r14, r14	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000755	     0xf84a1010000	                            je 0x40008fc	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x400075b	        0x4d8b6608	                mov r12, qword [r14 + 8]	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x400075f	      0x418b442420	            mov eax, dword [r12 + 0x20] 	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x4000764	          0xf6c480	                           test ah, 0x80	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x4000767	            0x75c6	                           jne 0x400072f	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x4000769	        0x498d5e28	                   lea rbx, [r14 + 0x28]	       477	merge.c	FUNCTION_7
0x400076d	          0x4889dd	                            mov rbp, rbx	       477	merge.c	FUNCTION_7
0x4000770	      0x49036c2438	             add rbp, qword [r12 + 0x38]	       477	merge.c	FUNCTION_7
0x4000775	      0xa900000001	                     test eax, 0x1000000	       480	merge.c	FUNCTION_7	IF_1
0x400077a	            0x756f	                           jne 0x40007eb	       480	merge.c	FUNCTION_7	IF_1
0x400077c	          0x4839eb	                            cmp rbx, rbp	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x400077f	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000784	            0x721a	                            jb 0x40007a0	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000786	            0xebc7	                           jmp 0x400074f	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000788	     0xf1f84000000	                   nop dword [rax + rax]	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000790	    0x418b8424c400	            mov eax, dword [r12 + 0xc4] 	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000798	          0x4801c3	                            add rbx, rax	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x400079b	          0x4839dd	                            cmp rbp, rbx	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x400079e	            0x76af	                           jbe 0x400074f	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x40007a0	        0x4d8b7d10	            mov r15, qword [r13 + 0x10] 	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x40007a4	      0xb901000000	                              mov ecx, 1	       268	merge.c	FUNCTION_4	CALL_1
0x40007a9	      0xba01000000	                              mov edx, 1	       268	merge.c	FUNCTION_4	CALL_1
0x40007ae	          0x4889de	                            mov rsi, rbx	       268	merge.c	FUNCTION_4	CALL_1
0x40007b1	          0x4c89ff	                            mov rdi, r15	       268	merge.c	FUNCTION_4	CALL_1
0x40007b4	      0xe807faffff	          call sym.sec_merge_hash_lookup	       268	merge.c	FUNCTION_4	CALL_1
0x40007b9	          0x4885c0	                           test rax, rax	       269	merge.c	FUNCTION_4	IF_1
0x40007bc	     0xf8470030000	                            je 0x4000b32	       269	merge.c	FUNCTION_4	IF_1
0x40007c2	      0x4883782800	               cmp qword [rax + 0x28], 0	       272	merge.c	FUNCTION_4	IF_2
0x40007c7	            0x75c7	                           jne 0x4000790	       272	merge.c	FUNCTION_4	IF_2
0x40007c9	      0x4983472801	               add qword [r15 + 0x28], 1	       274	merge.c	FUNCTION_4	IF_2
0x40007ce	      0x49837f3000	               cmp qword [r15 + 0x30], 0	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x40007d3	        0x4c897028	             mov qword [rax + 0x28], r14	       275	merge.c	FUNCTION_4	IF_2
0x40007d7	     0xf8443030000	                            je 0x4000b20	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x40007dd	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40007e1	        0x48894230	             mov qword [rdx + 0x30], rax	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40007e5	        0x49894738	             mov qword [r15 + 0x38], rax	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40007e9	            0xeba5	                           jmp 0x4000790	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40007eb	          0x4839eb	                            cmp rbx, rbp	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40007ee	     0xf835bffffff	                           jae 0x400074f	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40007f4	      0x418b4c2470	            mov ecx, dword [r12 + 0x70] 	       479	merge.c	FUNCTION_7
0x40007f9	      0xb801000000	                              mov eax, 1	       479	merge.c	FUNCTION_7
0x40007fe	          0x4531c0	                            xor r8d, r8d	       479	merge.c	FUNCTION_7
0x4000801	      0x4c89742420	             mov qword [rsp + 0x20], r14	       268	merge.c	FUNCTION_4	CALL_1
0x4000806	          0x4589c7	                           mov r15d, r8d	       268	merge.c	FUNCTION_4	CALL_1
0x4000809	          0x48d3e0	                             shl rax, cl	       479	merge.c	FUNCTION_7
0x400080c	        0x4c8d68ff	                      lea r13, [rax - 1]	       479	merge.c	FUNCTION_7
0x4000810	      0x4889442428	             mov qword [rsp + 0x28], rax	       479	merge.c	FUNCTION_7
0x4000815	        0x418d4501	                      lea eax, [r13 + 1]	       268	merge.c	FUNCTION_4	CALL_1
0x4000819	          0x4d89ee	                            mov r14, r13	       268	merge.c	FUNCTION_4	CALL_1
0x400081c	          0x4989ed	                            mov r13, rbp	       268	merge.c	FUNCTION_4	CALL_1
0x400081f	          0x4889dd	                            mov rbp, rbx	       268	merge.c	FUNCTION_4	CALL_1
0x4000822	        0x89442414	             mov dword [rsp + 0x14], eax	       268	merge.c	FUNCTION_4	CALL_1
0x4000826	          0x4889d8	                            mov rax, rbx	       484	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000829	          0x4829e8	                            sub rax, rbp	       484	merge.c	FUNCTION_7	IF_1	FOR_1
0x400082c	        0x488d50ff	                      lea rdx, [rax - 1]	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000830	          0x4831d0	                            xor rax, rdx	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000833	        0x488d5001	                      lea rdx, [rax + 1]	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000837	          0x48d1ea	                              shr rdx, 1	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x400083a	     0xf8470010000	                            je 0x40009b0	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x4000840	          0x4939d6	                            cmp r14, rdx	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x4000843	     0xf8267010000	                            jb 0x40009b0	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x4000849	      0x488b442408	                mov rax, qword [rsp + 8]	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x400084e	      0xb901000000	                              mov ecx, 1	       268	merge.c	FUNCTION_4	CALL_1
0x4000853	          0x4889de	                            mov rsi, rbx	       268	merge.c	FUNCTION_4	CALL_1
0x4000856	        0x4c8b5810	            mov r11, qword [rax + 0x10] 	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x400085a	          0x4c89df	                            mov rdi, r11	       268	merge.c	FUNCTION_4	CALL_1
0x400085d	      0x4c895c2418	             mov qword [rsp + 0x18], r11	       268	merge.c	FUNCTION_4	CALL_1
0x4000862	      0xe859f9ffff	          call sym.sec_merge_hash_lookup	       268	merge.c	FUNCTION_4	CALL_1
0x4000867	          0x4885c0	                           test rax, rax	       269	merge.c	FUNCTION_4	IF_1
0x400086a	     0xf844a020000	                            je 0x4000aba	       269	merge.c	FUNCTION_4	IF_1
0x4000870	      0x4883782800	               cmp qword [rax + 0x28], 0	       272	merge.c	FUNCTION_4	IF_2
0x4000875	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       272	merge.c	FUNCTION_4	IF_2
0x400087a	     0xf84e9010000	                            je 0x4000a69	       272	merge.c	FUNCTION_4	IF_2
0x4000880	          0x8b4018	            mov eax, dword [rax + 0x18] 	       492	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000883	    0x418b8c24c400	            mov ecx, dword [r12 + 0xc4] 	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x400088b	          0x4801c3	                            add rbx, rax	       492	merge.c	FUNCTION_7	IF_1	FOR_1
0x400088e	          0x83f901	                              cmp ecx, 1	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x4000891	     0xf8469010000	                            je 0x4000a00	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x4000897	          0x4939dd	                            cmp r13, rbx	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x400089a	            0x764f	                           jbe 0x40008eb	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x400089c	         0xf1f4000	                         nop dword [rax]	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40008a0	            0x85c9	                           test ecx, ecx	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x40008a2	            0x7429	                            je 0x40008cd	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x40008a4	          0x803b00	                       cmp byte [rbx], 0	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008a7	     0xf853b010000	                           jne 0x40009e8	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008ad	        0x488d5301	                      lea rdx, [rbx + 1]	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008b1	            0x31c0	                            xor eax, eax	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008b3	            0xeb11	                           jmp 0x40008c6	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008b5	           0xf1f00	                         nop dword [rax]	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008b8	        0x4883c201	                              add rdx, 1	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008bc	        0x807aff00	                   cmp byte [rdx - 1], 0	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008c0	     0xf8522010000	                           jne 0x40009e8	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008c6	          0x83c001	                              add eax, 1	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x40008c9	            0x39c8	                            cmp eax, ecx	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x40008cb	            0x75eb	                           jne 0x40008b8	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x40008cd	          0x4585ff	                         test r15d, r15d	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x40008d0	            0x750f	                           jne 0x40008e1	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x40008d2	          0x4889d8	                            mov rax, rbx	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x40008d5	          0x4829e8	                            sub rax, rbp	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x40008d8	          0x4c85f0	                           test rax, r14	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x40008db	     0xf848f000000	                            je 0x4000970	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x40008e1	            0x89c8	                            mov eax, ecx	       525	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40008e3	          0x4801c3	                            add rbx, rax	       525	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40008e6	          0x4939dd	                            cmp r13, rbx	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40008e9	            0x77b5	                            ja 0x40008a0	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40008eb	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40008f0	          0x4d8b36	                    mov r14, qword [r14]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40008f3	          0x4d85f6	                           test r14, r14	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40008f6	     0xf855ffeffff	                           jne 0x400075b	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40008fc	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000901	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000905	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000909	          0x4885c9	                           test rcx, rcx	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x400090c	     0xf84eb010000	                            je 0x4000afd	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000912	          0x8b7244	            mov esi, dword [rdx + 0x44] 	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000915	            0x31c0	                            xor eax, eax	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000917	            0x31ff	                            xor edi, edi	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000919	            0x85f6	                           test esi, esi	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x400091b	            0x7433	                            je 0x4000950	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x400091d	      0xe952020000	                           jmp 0x4000b74	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000922	    0x660f1f440000	                    nop word [rax + rax]	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000928	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x400092b	          0x4889f7	                            mov rdi, rsi	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x400092e	      0x488d4410ff	                lea rax, [rax + rdx - 1]	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000933	          0x48f7da	                                 neg rdx	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000936	          0x4821d0	                            and rax, rdx	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000939	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       785	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x400093c	        0x48894120	             mov qword [rcx + 0x20], rax	       784	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000940	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000944	          0x4801d0	                            add rax, rdx	       785	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000947	          0x4885c9	                           test rcx, rcx	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x400094a	     0xf84f0010000	                            je 0x4000b40	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000950	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000954	      0x48837e2000	               cmp qword [rsi + 0x20], 0	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000959	            0x75cd	                           jne 0x4000928	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x400095b	          0x4885ff	                           test rdi, rdi	       777	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x400095e	            0x7408	                            je 0x4000968	       777	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x4000960	        0x488b5708	                mov rdx, qword [rdi + 8]	       778	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x4000964	        0x48894238	             mov qword [rdx + 0x38], rax	       778	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x4000968	        0x48894e20	             mov qword [rsi + 0x20], rcx	       779	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x400096c	            0x31c0	                            xor eax, eax	       780	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x400096e	            0xebb8	                           jmp 0x4000928	       780	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000970	      0x488b442408	                mov rax, qword [rsp + 8]	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x4000975	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       268	merge.c	FUNCTION_4	CALL_1
0x4000979	      0xb901000000	                              mov ecx, 1	       268	merge.c	FUNCTION_4	CALL_1
0x400097e	          0x4889de	                            mov rsi, rbx	       268	merge.c	FUNCTION_4	CALL_1
0x4000981	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x4000985	          0x4c89ff	                            mov rdi, r15	       268	merge.c	FUNCTION_4	CALL_1
0x4000988	      0xe833f8ffff	          call sym.sec_merge_hash_lookup	       268	merge.c	FUNCTION_4	CALL_1
0x400098d	          0x4885c0	                           test rax, rax	       269	merge.c	FUNCTION_4	IF_1
0x4000990	     0xf8424010000	                            je 0x4000aba	       269	merge.c	FUNCTION_4	IF_1
0x4000996	      0x4883782800	               cmp qword [rax + 0x28], 0	       272	merge.c	FUNCTION_4	IF_2
0x400099b	            0x741d	                            je 0x40009ba	       272	merge.c	FUNCTION_4	IF_2
0x400099d	    0x418b8c24c400	            mov ecx, dword [r12 + 0xc4] 	       272	merge.c	FUNCTION_4	IF_2
0x40009a5	    0x41bf01000000	                             mov r15d, 1	       519	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x40009ab	      0xe931ffffff	                           jmp 0x40008e1	       519	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x40009b0	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       487	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40009b5	      0xe98ffeffff	                           jmp 0x4000849	       487	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40009ba	      0x4983472801	               add qword [r15 + 0x28], 1	       274	merge.c	FUNCTION_4	IF_2
0x40009bf	      0x49837f3000	               cmp qword [r15 + 0x30], 0	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x40009c4	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       275	merge.c	FUNCTION_4	IF_2
0x40009c9	        0x48897028	             mov qword [rax + 0x28], rsi	       275	merge.c	FUNCTION_4	IF_2
0x40009cd	     0xf8421010000	                            je 0x4000af4	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x40009d3	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40009d7	        0x48894230	             mov qword [rdx + 0x30], rax	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40009db	        0x49894738	             mov qword [r15 + 0x38], rax	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40009df	            0xebbc	                           jmp 0x400099d	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40009e1	     0xf1f80000000	                         nop dword [rax]	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40009e8	          0x4939dd	                            cmp r13, rbx	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40009eb	     0xf8735feffff	                            ja 0x4000826	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40009f1	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40009f6	      0xe9f5feffff	                           jmp 0x40008f0	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40009fb	       0xf1f440000	                   nop dword [rax + rax]	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000a00	          0x4939dd	                            cmp r13, rbx	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a03	            0x7718	                            ja 0x4000a1d	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a05	      0xe9e1feffff	                           jmp 0x40008eb	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a0a	    0x660f1f440000	                    nop word [rax + rax]	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a10	        0x4883c301	                              add rbx, 1	       505	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a14	          0x4939dd	                            cmp r13, rbx	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a17	     0xf84cefeffff	                            je 0x40008eb	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a1d	          0x803b00	                       cmp byte [rbx], 0	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a20	     0xf8500feffff	                           jne 0x4000826	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a26	          0x4585ff	                         test r15d, r15d	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a29	            0x75e5	                           jne 0x4000a10	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a2b	          0x4889d8	                            mov rax, rbx	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a2e	          0x4829e8	                            sub rax, rbp	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a31	          0x4c85f0	                           test rax, r14	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a34	            0x75da	                           jne 0x4000a10	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a36	      0x488b442408	                mov rax, qword [rsp + 8]	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000a3b	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       268	merge.c	FUNCTION_4	CALL_1
0x4000a3f	      0xb901000000	                              mov ecx, 1	       268	merge.c	FUNCTION_4	CALL_1
0x4000a44	      0xbe00000000	                              mov esi, 0	       268	merge.c	FUNCTION_4	CALL_1
0x4000a49	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000a4d	          0x4c89ff	                            mov rdi, r15	       268	merge.c	FUNCTION_4	CALL_1
0x4000a50	      0xe86bf7ffff	          call sym.sec_merge_hash_lookup	       268	merge.c	FUNCTION_4	CALL_1
0x4000a55	          0x4885c0	                           test rax, rax	       269	merge.c	FUNCTION_4	IF_1
0x4000a58	            0x7460	                            je 0x4000aba	       269	merge.c	FUNCTION_4	IF_1
0x4000a5a	      0x4883782800	               cmp qword [rax + 0x28], 0	       272	merge.c	FUNCTION_4	IF_2
0x4000a5f	            0x7432	                            je 0x4000a93	       272	merge.c	FUNCTION_4	IF_2
0x4000a61	    0x41bf01000000	                             mov r15d, 1	       499	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a67	            0xeba7	                           jmp 0x4000a10	       499	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a69	      0x4983432801	               add qword [r11 + 0x28], 1	       274	merge.c	FUNCTION_4	IF_2
0x4000a6e	      0x49837b3000	               cmp qword [r11 + 0x30], 0	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x4000a73	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       275	merge.c	FUNCTION_4	IF_2
0x4000a78	        0x48897028	             mov qword [rax + 0x28], rsi	       275	merge.c	FUNCTION_4	IF_2
0x4000a7c	     0xf84a7000000	                            je 0x4000b29	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x4000a82	        0x498b5338	            mov rdx, qword [r11 + 0x38] 	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000a86	        0x48894230	             mov qword [rdx + 0x30], rax	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000a8a	        0x49894338	             mov qword [r11 + 0x38], rax	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000a8e	      0xe9edfdffff	                           jmp 0x4000880	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000a93	      0x4983472801	               add qword [r15 + 0x28], 1	       274	merge.c	FUNCTION_4	IF_2
0x4000a98	      0x49837f3000	               cmp qword [r15 + 0x30], 0	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x4000a9d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       275	merge.c	FUNCTION_4	IF_2
0x4000aa2	        0x48897028	             mov qword [rax + 0x28], rsi	       275	merge.c	FUNCTION_4	IF_2
0x4000aa6	     0xf848b000000	                            je 0x4000b37	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x4000aac	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000ab0	        0x48894230	             mov qword [rdx + 0x30], rax	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000ab4	        0x49894738	             mov qword [r15 + 0x38], rax	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000ab8	            0xeba7	                           jmp 0x4000a61	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000aba	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000abf	        0x498b4708	                mov rax, qword [r15 + 8]	       543	merge.c	FUNCTION_7	FOR_4
0x4000ac3	          0x4885c0	                           test rax, rax	       543	merge.c	FUNCTION_7	FOR_4
0x4000ac6	            0x741b	                            je 0x4000ae3	       543	merge.c	FUNCTION_7	FOR_4
0x4000ac8	     0xf1f84000000	                   nop dword [rax + rax]	       543	merge.c	FUNCTION_7	FOR_4
0x4000ad0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       544	merge.c	FUNCTION_7	FOR_4
0x4000ad4	    0x48c702000000	                      mov qword [rdx], 0	       544	merge.c	FUNCTION_7	FOR_4
0x4000adb	          0x488b00	                    mov rax, qword [rax]	       543	merge.c	FUNCTION_7	FOR_4
0x4000ade	          0x4885c0	                           test rax, rax	       543	merge.c	FUNCTION_7	FOR_4
0x4000ae1	            0x75ed	                           jne 0x4000ad0	       543	merge.c	FUNCTION_7	FOR_4
0x4000ae3	        0x4883c448	                           add rsp, 0x48	       799	merge.c	FUNCTION_12
0x4000ae7	            0x31c0	                            xor eax, eax	       752	merge.c	FUNCTION_12	FOR_1	ELSE_1	IF_4
0x4000ae9	              0x5b	                                 pop rbx	       799	merge.c	FUNCTION_12
0x4000aea	              0x5d	                                 pop rbp	       799	merge.c	FUNCTION_12
0x4000aeb	            0x415c	                                 pop r12	       799	merge.c	FUNCTION_12
0x4000aed	            0x415d	                                 pop r13	       799	merge.c	FUNCTION_12
0x4000aef	            0x415e	                                 pop r14	       799	merge.c	FUNCTION_12
0x4000af1	            0x415f	                                 pop r15	       799	merge.c	FUNCTION_12
0x4000af3	              0xc3	                                     ret	       799	merge.c	FUNCTION_12
0x4000af4	        0x49894730	             mov qword [r15 + 0x30], rax	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000af8	      0xe9defeffff	                           jmp 0x40009db	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000afd	          0x4d8b3f	                    mov r15, qword [r15]	       731	merge.c	FUNCTION_12	FOR_1
0x4000b00	          0x4d85ff	                           test r15, r15	       731	merge.c	FUNCTION_12	FOR_1
0x4000b03	     0xf85fbfbffff	                           jne 0x4000704	       731	merge.c	FUNCTION_12	FOR_1
0x4000b09	        0x4883c448	                           add rsp, 0x48	       799	merge.c	FUNCTION_12
0x4000b0d	      0xb801000000	                              mov eax, 1	       798	merge.c	FUNCTION_12
0x4000b12	              0x5b	                                 pop rbx	       799	merge.c	FUNCTION_12
0x4000b13	              0x5d	                                 pop rbp	       799	merge.c	FUNCTION_12
0x4000b14	            0x415c	                                 pop r12	       799	merge.c	FUNCTION_12
0x4000b16	            0x415d	                                 pop r13	       799	merge.c	FUNCTION_12
0x4000b18	            0x415e	                                 pop r14	       799	merge.c	FUNCTION_12
0x4000b1a	            0x415f	                                 pop r15	       799	merge.c	FUNCTION_12
0x4000b1c	              0xc3	                                     ret	       799	merge.c	FUNCTION_12
0x4000b1d	           0xf1f00	                         nop dword [rax]	       799	merge.c	FUNCTION_12
0x4000b20	        0x49894730	             mov qword [r15 + 0x30], rax	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000b24	      0xe9bcfcffff	                           jmp 0x40007e5	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000b29	        0x49894330	             mov qword [r11 + 0x30], rax	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000b2d	      0xe958ffffff	                           jmp 0x4000a8a	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000b32	          0x4d89ef	                            mov r15, r13	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000b35	            0xeb88	                           jmp 0x4000abf	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000b37	        0x49894730	             mov qword [r15 + 0x30], rax	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000b3b	      0xe974ffffff	                           jmp 0x4000ab4	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000b40	        0x488b5608	                mov rdx, qword [rsi + 8]	       788	merge.c	FUNCTION_12	FOR_1	ELSE_2
0x4000b44	        0x48894238	             mov qword [rdx + 0x38], rax	       788	merge.c	FUNCTION_12	FOR_1	ELSE_2
0x4000b48	        0x498b4708	                mov rax, qword [r15 + 8]	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000b4c	          0x4885c0	                           test rax, rax	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000b4f	            0x750f	                           jne 0x4000b60	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000b51	            0xebaa	                           jmp 0x4000afd	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000b53	       0xf1f440000	                   nop dword [rax + rax]	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000b58	          0x488b00	                    mov rax, qword [rax]	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000b5b	          0x4885c0	                           test rax, rax	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000b5e	            0x749d	                            je 0x4000afd	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000b60	      0x4883782000	               cmp qword [rax + 0x20], 0	       794	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000b65	            0x75f1	                           jne 0x4000b58	       794	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000b67	        0x488b5008	                mov rdx, qword [rax + 8]	       795	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000b6b	    0x814a20008020	         or dword [rdx + 0x20], 0x208000	       795	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000b72	            0xebe4	                           jmp 0x4000b58	       795	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000b74	        0x488b7a28	            mov rdi, qword [rdx + 0x28] 	       624	merge.c	FUNCTION_11	CALL_1
0x4000b78	        0x48c1e703	                              shl rdi, 3	       624	merge.c	FUNCTION_11	CALL_1
0x4000b7c	      0xe800000000	                          call 0x4000b81	       624	merge.c	FUNCTION_11	CALL_1
0x4000b81	          0x4885c0	                           test rax, rax	       625	merge.c	FUNCTION_11	IF_1
0x4000b84	          0x4989c4	                            mov r12, rax	       624	merge.c	FUNCTION_11	CALL_1
0x4000b87	     0xf8456ffffff	                            je 0x4000ae3	       625	merge.c	FUNCTION_11	IF_1
0x4000b8d	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       628	merge.c	FUNCTION_11	FOR_1
0x4000b91	        0x488b4230	            mov rax, qword [rdx + 0x30] 	       628	merge.c	FUNCTION_11	FOR_1
0x4000b95	          0x4885c0	                           test rax, rax	       628	merge.c	FUNCTION_11	FOR_1
0x4000b98	     0xf84f0000000	                            je 0x4000c8e	       628	merge.c	FUNCTION_11	FOR_1
0x4000b9e	          0x4c89e1	                            mov rcx, r12	       628	merge.c	FUNCTION_11	FOR_1
0x4000ba1	            0x31ff	                            xor edi, edi	       628	merge.c	FUNCTION_11	FOR_1
0x4000ba3	            0xeb06	                           jmp 0x4000bab	       628	merge.c	FUNCTION_11	FOR_1
0x4000ba5	           0xf1f00	                         nop dword [rax]	       628	merge.c	FUNCTION_11	FOR_1
0x4000ba8	          0x4889d9	                            mov rcx, rbx	       628	merge.c	FUNCTION_11	FOR_1
0x4000bab	          0x8b701c	            mov esi, dword [rax + 0x1c] 	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bae	          0x4889cb	                            mov rbx, rcx	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bb1	            0x85f6	                           test esi, esi	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bb3	            0x741f	                            je 0x4000bd4	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bb5	          0x488901	                    mov qword [rcx], rax	       631	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bb8	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bbc	        0x4883c308	                              add rbx, 8	       631	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bc0	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bc3	          0x294818	             sub dword [rax + 0x18], ecx	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000bc6	            0x39fe	                            cmp esi, edi	       634	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000bc8	            0x740a	                            je 0x4000bd4	       634	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000bca	            0x85ff	                           test edi, edi	       639	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	ELSE_1
0x4000bcc	      0xbfffffffff	                     mov edi, 0xffffffff	       639	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	ELSE_1
0x4000bd1	           0xf44fe	                          cmove edi, esi	       639	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	ELSE_1
0x4000bd4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       628	merge.c	FUNCTION_11	FOR_1
0x4000bd8	          0x4885c0	                           test rax, rax	       628	merge.c	FUNCTION_11	FOR_1
0x4000bdb	            0x75cb	                           jne 0x4000ba8	       628	merge.c	FUNCTION_11	FOR_1
0x4000bdd	          0x4889de	                            mov rsi, rbx	       643	merge.c	FUNCTION_11
0x4000be0	          0x4c29e6	                            sub rsi, r12	       643	merge.c	FUNCTION_11
0x4000be3	        0x48c1fe03	                              sar rsi, 3	       643	merge.c	FUNCTION_11
0x4000be7	          0x4885f6	                           test rsi, rsi	       644	merge.c	FUNCTION_11	IF_5
0x4000bea	        0x48897228	             mov qword [rdx + 0x28], rsi	       643	merge.c	FUNCTION_11
0x4000bee	     0xf84a2000000	                            je 0x4000c96	       644	merge.c	FUNCTION_11	IF_5
0x4000bf4	          0x83ffff	             cmp edi, 0xffffffffffffffff	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000bf7	      0xb900000000	                              mov ecx, 0	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000bfc	            0x740c	                            je 0x4000c0a	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000bfe	          0x397a40	            cmp dword [rdx + 0x40], edi 	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000c01	      0xb800000000	                              mov eax, 0	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000c06	        0x480f42c8	                          cmovb rcx, rax	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000c0a	      0xba08000000	                              mov edx, 8	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000c0f	          0x4c89e7	                            mov rdi, r12	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000c12	        0x4c8d6bf8	                      lea r13, [rbx - 8]	       652	merge.c	FUNCTION_11	IF_5
0x4000c16	      0xe800000000	                          call 0x4000c1b	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000c1b	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       653	merge.c	FUNCTION_11	IF_5
0x4000c1f	        0x488b5bf8	                mov rbx, qword [rbx - 8]	       652	merge.c	FUNCTION_11	IF_5
0x4000c23	        0x4983ed08	                              sub r13, 8	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c27	        0x448b7040	           mov r14d, dword [rax + 0x40] 	       653	merge.c	FUNCTION_11	IF_5
0x4000c2b	        0x44017318	            add dword [rbx + 0x18], r14d	       653	merge.c	FUNCTION_11	IF_5
0x4000c2f	          0x4d39ec	                            cmp r12, r13	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c32	            0x7762	                            ja 0x4000c96	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c34	        0x498b6d00	                    mov rbp, qword [r13]	       656	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c38	          0x4489f2	                           mov edx, r14d	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c3b	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c3e	           0x35518	             add edx, dword [rbp + 0x18]	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c41	          0x394b1c	            cmp dword [rbx + 0x1c], ecx 	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c44	          0x895518	            mov dword [rbp + 0x18], edx 	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c47	            0x7237	                            jb 0x4000c80	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c49	        0x448b4318	            mov r8d, dword [rbx + 0x18] 	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c4d	          0x83e901	                              sub ecx, 1	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c50	          0x4489c0	                            mov eax, r8d	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c53	            0x29d0	                            sub eax, edx	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c55	            0x85c1	                           test ecx, eax	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c57	            0x7527	                           jne 0x4000c80	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c59	          0x4439c2	                            cmp edx, r8d	       603	merge.c	FUNCTION_10	IF_1
0x4000c5c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       603	merge.c	FUNCTION_10	IF_1
0x4000c60	        0x488b7508	                mov rsi, qword [rbp + 8]	       603	merge.c	FUNCTION_10	IF_1
0x4000c64	            0x731a	                           jae 0x4000c80	       603	merge.c	FUNCTION_10	IF_1
0x4000c66	          0x4801c7	                            add rdi, rax	       608	merge.c	FUNCTION_10	CALL_1
0x4000c69	      0xe800000000	                          call 0x4000c6e	       608	merge.c	FUNCTION_10	CALL_1
0x4000c6e	            0x85c0	                           test eax, eax	       661	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6	CALL_3
0x4000c70	            0x750e	                           jne 0x4000c80	       661	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6	CALL_3
0x4000c72	        0x48895d20	            mov qword [rbp + 0x20], rbx 	       663	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c76	    0xc7451c000000	               mov dword [rbp + 0x1c], 0	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c7d	          0x4889dd	                            mov rbp, rbx	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c80	        0x4983ed08	                              sub r13, 8	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c84	          0x4889eb	                            mov rbx, rbp	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c87	          0x4d39ec	                            cmp r12, r13	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c8a	            0x76a8	                           jbe 0x4000c34	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c8c	            0xeb08	                           jmp 0x4000c96	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c8e	    0x48c742280000	               mov qword [rdx + 0x28], 0	       643	merge.c	FUNCTION_11
0x4000c96	          0x4c89e7	                            mov rdi, r12	       671	merge.c	FUNCTION_11	CALL_4
0x4000c99	      0xe800000000	                          call 0x4000c9e	       671	merge.c	FUNCTION_11	CALL_4
0x4000c9e	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       675	merge.c	FUNCTION_11
0x4000ca2	            0x31c0	                            xor eax, eax	       674	merge.c	FUNCTION_11
0x4000ca4	        0x488b4e30	            mov rcx, qword [rsi + 0x30] 	       675	merge.c	FUNCTION_11
0x4000ca8	        0x488b7928	            mov rdi, qword [rcx + 0x28] 	       675	merge.c	FUNCTION_11
0x4000cac	            0xeb16	                           jmp 0x4000cc4	       675	merge.c	FUNCTION_11
0x4000cae	            0x6690	                                     nop	       675	merge.c	FUNCTION_11
0x4000cb0	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000cb4	          0x4839fa	                            cmp rdx, rdi	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000cb7	            0x7408	                            je 0x4000cc1	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000cb9	        0x488b7f08	                mov rdi, qword [rdi + 8]	       680	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000cbd	        0x48894738	             mov qword [rdi + 0x38], rax	       680	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000cc1	          0x4889d7	                            mov rdi, rdx	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000cc4	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       683	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000cc7	            0x85d2	                           test edx, edx	       683	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000cc9	            0x7422	                            je 0x4000ced	       683	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ccb	      0x48837f2000	               cmp qword [rdi + 0x20], 0	       685	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000cd0	            0x7506	                           jne 0x4000cd8	       685	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000cd2	        0x48894f20	             mov qword [rdi + 0x20], rcx	       687	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000cd6	            0x31c0	                            xor eax, eax	       688	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000cd8	      0x488d4402ff	                lea rax, [rdx + rax - 1]	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000cdd	          0x48f7da	                                 neg rdx	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ce0	          0x4821d0	                            and rax, rdx	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ce3	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       692	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ce6	        0x48894120	             mov qword [rcx + 0x20], rax	       691	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000cea	          0x4801d0	                            add rax, rdx	       692	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ced	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	       676	merge.c	FUNCTION_11	FOR_2
0x4000cf1	          0x4885c9	                           test rcx, rcx	       676	merge.c	FUNCTION_11	FOR_2
0x4000cf4	            0x75ba	                           jne 0x4000cb0	       676	merge.c	FUNCTION_11	FOR_2
0x4000cf6	        0x488b7f08	                mov rdi, qword [rdi + 8]	       695	merge.c	FUNCTION_11
0x4000cfa	          0x8b4f70	            mov ecx, dword [rdi + 0x70] 	       696	merge.c	FUNCTION_11	IF_10
0x4000cfd	        0x48894738	             mov qword [rdi + 0x38], rax	       695	merge.c	FUNCTION_11
0x4000d01	            0x85c9	                           test ecx, ecx	       696	merge.c	FUNCTION_11	IF_10
0x4000d03	            0x7417	                            je 0x4000d1c	       696	merge.c	FUNCTION_11	IF_10
0x4000d05	      0xba01000000	                              mov edx, 1	       698	merge.c	FUNCTION_11	IF_10
0x4000d0a	          0x48d3e2	                             shl rdx, cl	       698	merge.c	FUNCTION_11	IF_10
0x4000d0d	      0x488d4402ff	                lea rax, [rdx + rax - 1]	       699	merge.c	FUNCTION_11	IF_10
0x4000d12	          0x48f7da	                                 neg rdx	       699	merge.c	FUNCTION_11	IF_10
0x4000d15	          0x4821d0	                            and rax, rdx	       699	merge.c	FUNCTION_11	IF_10
0x4000d18	        0x48894738	             mov qword [rdi + 0x38], rax	       699	merge.c	FUNCTION_11	IF_10
0x4000d1c	        0x488b4630	            mov rax, qword [rsi + 0x30] 	       704	merge.c	FUNCTION_11	FOR_3
0x4000d20	        0x488d7e30	                   lea rdi, [rsi + 0x30]	       704	merge.c	FUNCTION_11	FOR_3
0x4000d24	          0x4885c0	                           test rax, rax	       704	merge.c	FUNCTION_11	FOR_3
0x4000d27	            0x7516	                           jne 0x4000d3f	       704	merge.c	FUNCTION_11	FOR_3
0x4000d29	      0xe91afeffff	                           jmp 0x4000b48	       704	merge.c	FUNCTION_11	FOR_3
0x4000d2e	        0x488d7830	                   lea rdi, [rax + 0x30]	       706	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000d32	        0x488b4030	            mov rax, qword [rax + 0x30] 	       704	merge.c	FUNCTION_11	FOR_3
0x4000d36	          0x4885c0	                           test rax, rax	       704	merge.c	FUNCTION_11	FOR_3
0x4000d39	     0xf8409feffff	                            je 0x4000b48	       704	merge.c	FUNCTION_11	FOR_3
0x4000d3f	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       705	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000d42	            0x85d2	                           test edx, edx	       705	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000d44	            0x75e8	                           jne 0x4000d2e	       705	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000d46	          0x8b7018	            mov esi, dword [rax + 0x18] 	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d49	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       709	merge.c	FUNCTION_11	ELSE_3
0x4000d4d	            0x85f6	                           test esi, esi	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d4f	          0x488917	                    mov qword [rdi], rdx	       709	merge.c	FUNCTION_11	ELSE_3
0x4000d52	            0x74de	                            je 0x4000d32	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d54	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d58	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d5c	        0x48895028	             mov qword [rax + 0x28], rdx	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d60	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       713	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d63	          0x89501c	             mov dword [rax + 0x1c], edx	       713	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d66	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d69	            0x29f2	                            sub edx, esi	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d6b	        0x48035120	             add rdx, qword [rcx + 0x20]	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d6f	        0x48895020	             mov qword [rax + 0x20], rdx	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d73	            0xebbd	                           jmp 0x4000d32	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
strrevcmp	FOR,0:ELSE,0:CALL,0:functions,0:WHILE,1:DO,0:IF,1:SWITCH,0	37
0x4000040	          0x488b0f	                    mov rcx, qword [rdi]	       551	merge.c	FUNCTION_8
0x4000043	          0x488b16	                    mov rdx, qword [rsi]	       552	merge.c	FUNCTION_8
0x4000046	          0x8b7118	            mov esi, dword [rcx + 0x18] 	       553	merge.c	FUNCTION_8
0x4000049	        0x448b5218	           mov r10d, dword [rdx + 0x18] 	       554	merge.c	FUNCTION_8
0x400004d	        0x488b4908	                mov rcx, qword [rcx + 8]	       555	merge.c	FUNCTION_8
0x4000051	        0x488b5208	                mov rdx, qword [rdx + 8]	       556	merge.c	FUNCTION_8
0x4000055	      0x4c8d4431ff	                 lea r8, [rcx + rsi - 1]	       555	merge.c	FUNCTION_8
0x400005a	          0x4489d1	                           mov ecx, r10d	       556	merge.c	FUNCTION_8
0x400005d	          0x4439d6	                           cmp esi, r10d	       557	merge.c	FUNCTION_8
0x4000060	      0x4c8d4c0aff	                 lea r9, [rdx + rcx - 1]	       556	merge.c	FUNCTION_8
0x4000065	          0x4489d2	                           mov edx, r10d	       557	merge.c	FUNCTION_8
0x4000068	          0x4889f0	                            mov rax, rsi	       553	merge.c	FUNCTION_8
0x400006b	           0xf46d6	                         cmovbe edx, esi	       557	merge.c	FUNCTION_8
0x400006e	            0x85d2	                           test edx, edx	       559	merge.c	FUNCTION_8	WHILE_1
0x4000070	            0x7437	                            je 0x40000a9	       559	merge.c	FUNCTION_8	WHILE_1
0x4000072	        0x410fb630	                    movzx esi, byte [r8]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000076	        0x410fb609	                    movzx ecx, byte [r9]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400007a	          0x4038f1	                             cmp cl, sil	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400007d	            0x7531	                           jne 0x40000b0	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400007f	          0x8d7aff	                      lea edi, [rdx - 1]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000082	            0x31d2	                            xor edx, edx	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000084	          0x48f7df	                                 neg rdi	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000087	            0xeb1b	                           jmp 0x40000a4	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000089	     0xf1f80000000	                         nop dword [rax]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000090	    0x410fb67410ff	          movzx esi, byte [r8 + rdx - 1]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000096	        0x4883ea01	                              sub rdx, 1	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400009a	      0x410fb60c11	              movzx ecx, byte [r9 + rdx]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400009f	          0x4038ce	                             cmp sil, cl	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000a2	            0x750c	                           jne 0x40000b0	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000a4	          0x4839d7	                            cmp rdi, rdx	       559	merge.c	FUNCTION_8	WHILE_1
0x40000a7	            0x75e7	                           jne 0x4000090	       559	merge.c	FUNCTION_8	WHILE_1
0x40000a9	          0x4429d0	                           sub eax, r10d	       567	merge.c	FUNCTION_8
0x40000ac	              0xc3	                                     ret	       568	merge.c	FUNCTION_8
0x40000ad	           0xf1f00	                         nop dword [rax]	       568	merge.c	FUNCTION_8
0x40000b0	        0x400fb6c6	                          movzx eax, sil	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000b4	            0x29c8	                            sub eax, ecx	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000b6	              0xc3	                                     ret	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
sec_merge_hash_newfunc	FOR,0:ELSE,0:CALL,2:functions,0:WHILE,0:DO,0:IF,3:SWITCH,0	30
0x4000150	              0x53	                                push rbx	       107	merge.c	FUNCTION_1
0x4000151	          0x4889f3	                            mov rbx, rsi	       107	merge.c	FUNCTION_1
0x4000154	        0x4883ec10	                           sub rsp, 0x10	       107	merge.c	FUNCTION_1
0x4000158	          0x4885ff	                           test rdi, rdi	       110	merge.c	FUNCTION_1	IF_1
0x400015b	            0x743b	                            je 0x4000198	       110	merge.c	FUNCTION_1	IF_1
0x400015d	          0x4889de	                            mov rsi, rbx	       117	merge.c	FUNCTION_1	CALL_2
0x4000160	      0xe800000000	                          call 0x4000165	       117	merge.c	FUNCTION_1	CALL_2
0x4000165	          0x4885c0	                           test rax, rax	       119	merge.c	FUNCTION_1	IF_3
0x4000168	            0x7426	                            je 0x4000190	       119	merge.c	FUNCTION_1	IF_3
0x400016a	    0x48c740200000	               mov qword [rax + 0x20], 0	       124	merge.c	FUNCTION_1	IF_3
0x4000172	    0xc7401c000000	               mov dword [rax + 0x1c], 0	       125	merge.c	FUNCTION_1	IF_3
0x4000179	    0x48c740280000	               mov qword [rax + 0x28], 0	       126	merge.c	FUNCTION_1	IF_3
0x4000181	    0x48c740300000	               mov qword [rax + 0x30], 0	       127	merge.c	FUNCTION_1	IF_3
0x4000189	        0x4883c410	                           add rsp, 0x10	       131	merge.c	FUNCTION_1
0x400018d	              0x5b	                                 pop rbx	       131	merge.c	FUNCTION_1
0x400018e	              0xc3	                                     ret	       131	merge.c	FUNCTION_1
0x400018f	              0x90	                                     nop	       131	merge.c	FUNCTION_1
0x4000190	            0x31c0	                            xor eax, eax	       131	merge.c	FUNCTION_1
0x4000192	            0xebf5	                           jmp 0x4000189	       131	merge.c	FUNCTION_1
0x4000194	         0xf1f4000	                         nop dword [rax]	       131	merge.c	FUNCTION_1
0x4000198	          0x4889df	                            mov rdi, rbx	       111	merge.c	FUNCTION_1	IF_1
0x400019b	      0xbe38000000	                           mov esi, 0x38	       111	merge.c	FUNCTION_1	IF_1
0x40001a0	      0x4889542408	                mov qword [rsp + 8], rdx	       111	merge.c	FUNCTION_1	IF_1
0x40001a5	      0xe800000000	                          call 0x40001aa	       111	merge.c	FUNCTION_1	IF_1
0x40001aa	          0x4889c7	                            mov rdi, rax	       111	merge.c	FUNCTION_1	IF_1
0x40001ad	            0x31c0	                            xor eax, eax	       114	merge.c	FUNCTION_1	IF_2
0x40001af	      0x488b542408	                mov rdx, qword [rsp + 8]	       113	merge.c	FUNCTION_1	IF_2
0x40001b4	          0x4885ff	                           test rdi, rdi	       113	merge.c	FUNCTION_1	IF_2
0x40001b7	            0x74d0	                            je 0x4000189	       113	merge.c	FUNCTION_1	IF_2
0x40001b9	            0xeba2	                           jmp 0x400015d	       113	merge.c	FUNCTION_1	IF_2
