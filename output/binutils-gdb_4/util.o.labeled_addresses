_rl_errmsg	FOR,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,6:SWITCH,0:IF,0	49
0x4000460	              0x53	                                push rbx	       270	util.c	FUNCTION_6
0x4000461	          0x4889fb	                            mov rbx, rdi	       270	util.c	FUNCTION_6
0x4000464	    0x4881ecd00000	                           sub rsp, 0xd0	       270	util.c	FUNCTION_6
0x400046b	            0x84c0	                             test al, al	       270	util.c	FUNCTION_6
0x400046d	      0x4889742428	             mov qword [rsp + 0x28], rsi	       270	util.c	FUNCTION_6
0x4000472	      0x4889542430	             mov qword [rsp + 0x30], rdx	       270	util.c	FUNCTION_6
0x4000477	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       270	util.c	FUNCTION_6
0x400047c	      0x4c89442440	              mov qword [rsp + 0x40], r8	       270	util.c	FUNCTION_6
0x4000481	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       270	util.c	FUNCTION_6
0x4000486	            0x7437	                            je 0x40004bf	       270	util.c	FUNCTION_6
0x4000488	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       270	util.c	FUNCTION_6
0x400048d	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       270	util.c	FUNCTION_6
0x4000492	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       270	util.c	FUNCTION_6
0x4000497	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       270	util.c	FUNCTION_6
0x400049f	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       270	util.c	FUNCTION_6
0x40004a7	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       270	util.c	FUNCTION_6
0x40004af	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       270	util.c	FUNCTION_6
0x40004b7	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       270	util.c	FUNCTION_6
0x40004bf	    0x64488b042528	                mov rax, qword fs:[0x28]	       270	util.c	FUNCTION_6
0x40004c8	      0x4889442418	             mov qword [rsp + 0x18], rax	       270	util.c	FUNCTION_6
0x40004cd	            0x31c0	                            xor eax, eax	       270	util.c	FUNCTION_6
0x40004cf	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       277	util.c	FUNCTION_6	CALL_1
0x40004d7	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_61
0x40004dc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x40004e1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_61
0x40004e6	    0x488b0d000000	            mov rcx, qword [0x040004ed] 	        97	stdio2.h	CALL_61
0x40004ed	      0x4889442408	                mov qword [rsp + 8], rax	       277	util.c	FUNCTION_6	CALL_1
0x40004f2	      0x488d442420	                   lea rax, [rsp + 0x20]	       277	util.c	FUNCTION_6	CALL_1
0x40004f7	    0xc70424080000	                      mov dword [rsp], 8	       277	util.c	FUNCTION_6	CALL_1
0x40004fe	    0xc74424043000	               mov dword [rsp + 4], 0x30	       277	util.c	FUNCTION_6	CALL_1
0x4000506	      0x4889442410	             mov qword [rsp + 0x10], rax	       277	util.c	FUNCTION_6	CALL_1
0x400050b	      0xe800000000	                          call 0x4000510	        97	stdio2.h	CALL_61
0x4000510	    0x488b3d000000	            mov rdi, qword [0x04000517] 	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000517	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_15	CALL_1
0x400051a	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_15	CALL_1
0x400051d	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000522	      0xe800000000	                          call 0x4000527	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000527	    0x488b35000000	            mov rsi, qword [0x0400052e] 	        97	stdio2.h	CALL_61
0x400052e	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_61
0x4000533	      0xe800000000	                          call 0x4000538	        97	stdio2.h	CALL_61
0x4000538	    0x488b3d000000	            mov rdi, qword [0x0400053f] 	       286	util.c	FUNCTION_6	CALL_5
0x400053f	      0xe800000000	                          call 0x4000544	       286	util.c	FUNCTION_6	CALL_5
0x4000544	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       289	util.c	FUNCTION_6
0x4000549	    0x644833042528	                xor rax, qword fs:[0x28]	       289	util.c	FUNCTION_6
0x4000552	            0x7509	                           jne 0x400055d	       289	util.c	FUNCTION_6
0x4000554	    0x4881c4d00000	                           add rsp, 0xd0	       289	util.c	FUNCTION_6
0x400055b	              0x5b	                                 pop rbx	       289	util.c	FUNCTION_6
0x400055c	              0xc3	                                     ret	       289	util.c	FUNCTION_6
0x400055d	      0xe800000000	                          call 0x4000562	       289	util.c	FUNCTION_6
_rl_walphabetic	FOR,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,2:SWITCH,0:IF,1	19
0x40000a0	              0x53	                                push rbx	        86	util.c	FUNCTION_2
0x40000a1	            0x89fb	                            mov ebx, edi	        86	util.c	FUNCTION_2
0x40000a3	      0xe800000000	                          call 0x40000a8	        89	util.c	FUNCTION_2	IF_1	CALL_1
0x40000a8	            0x85c0	                           test eax, eax	        89	util.c	FUNCTION_2	IF_1	CALL_1
0x40000aa	      0xba01000000	                              mov edx, 1	        90	util.c	FUNCTION_2	IF_1
0x40000af	            0x7521	                           jne 0x40000d2	        89	util.c	FUNCTION_2	IF_1	CALL_1
0x40000b1	    0x8b1500000000	            mov edx, dword [0x040000b7] 	        93	util.c	FUNCTION_2
0x40000b7	            0x85d2	                           test edx, edx	        93	util.c	FUNCTION_2
0x40000b9	            0x7417	                            je 0x40000d2	        93	util.c	FUNCTION_2
0x40000bb	            0x89de	                            mov esi, ebx	        94	util.c	FUNCTION_2	CALL_2
0x40000bd	      0xbf00000000	                              mov edi, 0	        94	util.c	FUNCTION_2	CALL_2
0x40000c2	          0x83e67f	                           and esi, 0x7f	        94	util.c	FUNCTION_2	CALL_2
0x40000c5	      0xe800000000	                          call 0x40000ca	        94	util.c	FUNCTION_2	CALL_2
0x40000ca	            0x31d2	                            xor edx, edx	        90	util.c	FUNCTION_2	IF_1
0x40000cc	          0x4885c0	                           test rax, rax	        90	util.c	FUNCTION_2	IF_1
0x40000cf	           0xf95c2	                                setne dl	        90	util.c	FUNCTION_2	IF_1
0x40000d2	            0x89d0	                            mov eax, edx	        95	util.c	FUNCTION_2
0x40000d4	              0x5b	                                 pop rbx	        95	util.c	FUNCTION_2
0x40000d5	              0xc3	                                     ret	        95	util.c	FUNCTION_2
rl_alphabetic	FOR,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,2:SWITCH,0:IF,1	25
0x4000040	        0x400fb6c7	                          movzx eax, dil	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000044	        0x4883ec18	                           sub rsp, 0x18	        75	util.c	FUNCTION_1
0x4000048	            0x39c7	                            cmp edi, eax	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x400004a	            0x7424	                            je 0x4000070	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x400004c	    0x8b0500000000	            mov eax, dword [0x04000052] 	        79	util.c	FUNCTION_1
0x4000052	            0x85c0	                           test eax, eax	        79	util.c	FUNCTION_1
0x4000054	            0x7415	                            je 0x400006b	        79	util.c	FUNCTION_1
0x4000056	            0x89fe	                            mov esi, edi	        80	util.c	FUNCTION_1	CALL_2
0x4000058	      0xbf00000000	                              mov edi, 0	        80	util.c	FUNCTION_1	CALL_2
0x400005d	      0xe800000000	                          call 0x4000062	        80	util.c	FUNCTION_1	CALL_2
0x4000062	          0x4885c0	                           test rax, rax	        77	util.c	FUNCTION_1	IF_1
0x4000065	           0xf95c0	                                setne al	        77	util.c	FUNCTION_1	IF_1
0x4000068	           0xfb6c0	                           movzx eax, al	        77	util.c	FUNCTION_1	IF_1
0x400006b	        0x4883c418	                           add rsp, 0x18	        81	util.c	FUNCTION_1
0x400006f	              0xc3	                                     ret	        81	util.c	FUNCTION_1
0x4000070	        0x897c240c	              mov dword [rsp + 0xc], edi	        81	util.c	FUNCTION_1
0x4000074	      0xe800000000	                          call 0x4000079	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000079	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x400007e	          0x488b08	                    mov rcx, qword [rax]	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000081	        0xf6045108	              test byte [rcx + rdx*2], 8	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000085	          0x4889d7	                            mov rdi, rdx	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000088	            0x74c2	                            je 0x400004c	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x400008a	      0xb801000000	                              mov eax, 1	        77	util.c	FUNCTION_1	IF_1
0x400008f	        0x4883c418	                           add rsp, 0x18	        81	util.c	FUNCTION_1
0x4000093	              0xc3	                                     ret	        81	util.c	FUNCTION_1
_rl_abort_internal	FOR,0:DO,0:ELSE,0:WHILE,1:functions,0:CALL,7:SWITCH,0:IF,0	16
0x40000e0	        0x4883ec08	                              sub rsp, 8	       101	util.c	FUNCTION_3
0x40000e4	      0xe800000000	                          call 0x40000e9	       102	util.c	FUNCTION_3	CALL_1
0x40000e9	      0xe800000000	                          call 0x40000ee	       103	util.c	FUNCTION_3	CALL_2
0x40000ee	      0xe800000000	                          call 0x40000f3	       104	util.c	FUNCTION_3	CALL_3
0x40000f3	      0xe800000000	                          call 0x40000f8	       105	util.c	FUNCTION_3	CALL_4
0x40000f8	    0x812500000000	      and dword [0x04000102], 0xffffefff	       107	util.c	FUNCTION_3	CALL_5
0x4000102	    0x48833d000000	               cmp qword [0x0400010a], 0	       108	util.c	FUNCTION_3	WHILE_1
0x400010a	            0x7413	                            je 0x400011f	       108	util.c	FUNCTION_3	WHILE_1
0x400010c	         0xf1f4000	                         nop dword [rax]	       108	util.c	FUNCTION_3	WHILE_1
0x4000110	      0xe800000000	                          call 0x4000115	       109	util.c	FUNCTION_3	CALL_6
0x4000115	    0x48833d000000	               cmp qword [0x0400011d], 0	       108	util.c	FUNCTION_3	WHILE_1
0x400011d	            0x75f1	                           jne 0x4000110	       108	util.c	FUNCTION_3	WHILE_1
0x400011f	      0xbe01000000	                              mov esi, 1	       112	util.c	FUNCTION_3	CALL_7
0x4000124	      0xbf00000000	                              mov edi, 0	       112	util.c	FUNCTION_3	CALL_7
0x4000129	    0x48c705000000	               mov qword [0x04000134], 0	       111	util.c	FUNCTION_3
0x4000134	      0xe800000000	                          call 0x4000139	       112	util.c	FUNCTION_3	CALL_7
_rl_trace	FOR,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,7:SWITCH,0:IF,1	63
0x40007b0	              0x53	                                push rbx	       482	util.c	FUNCTION_7
0x40007b1	          0x4889fb	                            mov rbx, rdi	       482	util.c	FUNCTION_7
0x40007b4	    0x4881ec600100	                          sub rsp, 0x160	       482	util.c	FUNCTION_7
0x40007bb	            0x84c0	                             test al, al	       482	util.c	FUNCTION_7
0x40007bd	    0x4889b424b800	             mov qword [rsp + 0xb8], rsi	       482	util.c	FUNCTION_7
0x40007c5	    0x48899424c000	             mov qword [rsp + 0xc0], rdx	       482	util.c	FUNCTION_7
0x40007cd	    0x48898c24c800	             mov qword [rsp + 0xc8], rcx	       482	util.c	FUNCTION_7
0x40007d5	    0x4c898424d000	              mov qword [rsp + 0xd0], r8	       482	util.c	FUNCTION_7
0x40007dd	    0x4c898c24d800	              mov qword [rsp + 0xd8], r9	       482	util.c	FUNCTION_7
0x40007e5	            0x7440	                            je 0x4000827	       482	util.c	FUNCTION_7
0x40007e7	     0xf298424e000	       movaps xmmword [rsp + 0xe0], xmm0	       482	util.c	FUNCTION_7
0x40007ef	     0xf298c24f000	       movaps xmmword [rsp + 0xf0], xmm1	       482	util.c	FUNCTION_7
0x40007f7	     0xf2994240001	      movaps xmmword [rsp + 0x100], xmm2	       482	util.c	FUNCTION_7
0x40007ff	     0xf299c241001	      movaps xmmword [rsp + 0x110], xmm3	       482	util.c	FUNCTION_7
0x4000807	     0xf29a4242001	      movaps xmmword [rsp + 0x120], xmm4	       482	util.c	FUNCTION_7
0x400080f	     0xf29ac243001	      movaps xmmword [rsp + 0x130], xmm5	       482	util.c	FUNCTION_7
0x4000817	     0xf29b4244001	      movaps xmmword [rsp + 0x140], xmm6	       482	util.c	FUNCTION_7
0x400081f	     0xf29bc245001	      movaps xmmword [rsp + 0x150], xmm7	       482	util.c	FUNCTION_7
0x4000827	    0x64488b042528	                mov rax, qword fs:[0x28]	       482	util.c	FUNCTION_7
0x4000830	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       482	util.c	FUNCTION_7
0x4000838	            0x31c0	                            xor eax, eax	       482	util.c	FUNCTION_7
0x400083a	    0x488d84247001	                  lea rax, [rsp + 0x170]	       489	util.c	FUNCTION_7	CALL_1
0x4000842	    0x488b3d000000	            mov rdi, qword [0x04000849] 	       495	util.c	FUNCTION_7	IF_1
0x4000849	      0x4889442410	             mov qword [rsp + 0x10], rax	       489	util.c	FUNCTION_7	CALL_1
0x400084e	    0x488d8424b000	                   lea rax, [rsp + 0xb0]	       489	util.c	FUNCTION_7	CALL_1
0x4000856	    0xc74424080800	                  mov dword [rsp + 8], 8	       489	util.c	FUNCTION_7	CALL_1
0x400085e	    0xc744240c3000	            mov dword [rsp + 0xc], 0x30 	       489	util.c	FUNCTION_7	CALL_1
0x4000866	      0x4889442418	             mov qword [rsp + 0x18], rax	       489	util.c	FUNCTION_7	CALL_1
0x400086b	          0x4885ff	                           test rdi, rdi	       495	util.c	FUNCTION_7	IF_1
0x400086e	            0x7450	                            je 0x40008c0	       495	util.c	FUNCTION_7	IF_1
0x4000870	      0x488d4c2408	                      lea rcx, [rsp + 8]	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000875	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000878	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_15	CALL_1
0x400087d	      0xe800000000	                          call 0x4000882	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000882	    0x488b35000000	            mov rsi, qword [0x04000889] 	        97	stdio2.h	CALL_61
0x4000889	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_61
0x400088e	      0xe800000000	                          call 0x4000893	        97	stdio2.h	CALL_61
0x4000893	    0x488b3d000000	            mov rdi, qword [0x0400089a] 	       499	util.c	FUNCTION_7	CALL_6
0x400089a	      0xe800000000	                          call 0x400089f	       499	util.c	FUNCTION_7	CALL_6
0x400089f	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       502	util.c	FUNCTION_7
0x40008a7	    0x644833042528	                xor rax, qword fs:[0x28]	       502	util.c	FUNCTION_7
0x40008b0	            0x7559	                           jne 0x400090b	       502	util.c	FUNCTION_7
0x40008b2	    0x4881c4600100	                          add rsp, 0x160	       502	util.c	FUNCTION_7
0x40008b9	              0x5b	                                 pop rbx	       502	util.c	FUNCTION_7
0x40008ba	              0xc3	                                     ret	       502	util.c	FUNCTION_7
0x40008bb	       0xf1f440000	                   nop dword [rax + rax]	       502	util.c	FUNCTION_7
0x40008c0	      0xe800000000	                          call 0x40008c5	       520	util.c	FUNCTION_8	CALL_5
0x40008c5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008ca	          0x4189c0	                            mov r8d, eax	       520	util.c	FUNCTION_8	CALL_5
0x40008cd	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008d2	      0xba80000000	                           mov edx, 0x80	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008d7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008dc	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008de	      0xe800000000	                          call 0x40008e3	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008e3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       522	util.c	FUNCTION_8	CALL_6
0x40008e8	      0xe800000000	                          call 0x40008ed	       522	util.c	FUNCTION_8	CALL_6
0x40008ed	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       523	util.c	FUNCTION_8	CALL_7
0x40008f2	      0xbe00000000	                              mov esi, 0	       523	util.c	FUNCTION_8	CALL_7
0x40008f7	      0xe800000000	                          call 0x40008fc	       523	util.c	FUNCTION_8	CALL_7
0x40008fc	          0x4889c7	                            mov rdi, rax	       523	util.c	FUNCTION_8	CALL_7
0x40008ff	    0x488905000000	            mov qword [0x04000906], rax 	       523	util.c	FUNCTION_8	CALL_7
0x4000906	      0xe965ffffff	                           jmp 0x4000870	       523	util.c	FUNCTION_8	CALL_7
0x400090b	      0xe800000000	                     call sym._rl_tropen	       502	util.c	FUNCTION_7
_rl_trclose	FOR,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1:SWITCH,0:IF,0	6
0x40009b0	        0x4883ec08	                              sub rsp, 8	       529	util.c	FUNCTION_9
0x40009b4	    0x488b3d000000	            mov rdi, qword [0x040009bb] 	       532	util.c	FUNCTION_9	CALL_1
0x40009bb	      0xe800000000	                          call 0x40009c0	       532	util.c	FUNCTION_9	CALL_1
0x40009c0	    0x48c705000000	               mov qword [0x040009cb], 0	       533	util.c	FUNCTION_9
0x40009cb	        0x4883c408	                              add rsp, 8	       535	util.c	FUNCTION_9
0x40009cf	              0xc3	                                     ret	       535	util.c	FUNCTION_9
rl_extend_line_buffer	FOR,0:DO,0:ELSE,0:WHILE,1:functions,0:CALL,2:SWITCH,0:IF,0	19
0x40001c0	    0x8b3500000000	            mov esi, dword [0x040001c6] 	       169	util.c	FUNCTION_4	WHILE_1
0x40001c6	              0x53	                                push rbx	       168	util.c	FUNCTION_4
0x40001c7	            0x89fb	                            mov ebx, edi	       168	util.c	FUNCTION_4
0x40001c9	    0x488b3d000000	            mov rdi, qword [0x040001d0] 	       168	util.c	FUNCTION_4
0x40001d0	            0x39f3	                            cmp ebx, esi	       169	util.c	FUNCTION_4	WHILE_1
0x40001d2	            0x7d0f	                           jge 0x40001e3	       169	util.c	FUNCTION_4	WHILE_1
0x40001d4	            0xeb32	                           jmp 0x4000208	       169	util.c	FUNCTION_4	WHILE_1
0x40001d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       169	util.c	FUNCTION_4	WHILE_1
0x40001e0	          0x4889c7	                            mov rdi, rax	       169	util.c	FUNCTION_4	WHILE_1
0x40001e3	    0x81c600010000	                          add esi, 0x100	       171	util.c	FUNCTION_4	WHILE_1
0x40001e9	    0x893500000000	            mov dword [0x040001ef], esi 	       171	util.c	FUNCTION_4	WHILE_1
0x40001ef	          0x4863f6	                         movsxd rsi, esi	       172	util.c	FUNCTION_4	WHILE_1	CALL_1
0x40001f2	      0xe800000000	                          call 0x40001f7	       172	util.c	FUNCTION_4	WHILE_1	CALL_1
0x40001f7	    0x8b3500000000	            mov esi, dword [0x040001fd] 	       169	util.c	FUNCTION_4	WHILE_1
0x40001fd	    0x488905000000	            mov qword [0x04000204], rax 	       172	util.c	FUNCTION_4	WHILE_1	CALL_1
0x4000204	            0x39de	                            cmp esi, ebx	       169	util.c	FUNCTION_4	WHILE_1
0x4000206	            0x7ed8	                           jle 0x40001e0	       169	util.c	FUNCTION_4	WHILE_1
0x4000208	              0x5b	                                 pop rbx	       176	util.c	FUNCTION_4
0x4000209	      0xe900000000	                           jmp 0x400020e	       175	util.c	FUNCTION_4	CALL_2
_rl_ttymsg	FOR,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,7:SWITCH,0:IF,0	50
0x4000350	              0x53	                                push rbx	       240	util.c	FUNCTION_5
0x4000351	          0x4889fb	                            mov rbx, rdi	       240	util.c	FUNCTION_5
0x4000354	    0x4881ecd00000	                           sub rsp, 0xd0	       240	util.c	FUNCTION_5
0x400035b	            0x84c0	                             test al, al	       240	util.c	FUNCTION_5
0x400035d	      0x4889742428	             mov qword [rsp + 0x28], rsi	       240	util.c	FUNCTION_5
0x4000362	      0x4889542430	             mov qword [rsp + 0x30], rdx	       240	util.c	FUNCTION_5
0x4000367	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       240	util.c	FUNCTION_5
0x400036c	      0x4c89442440	              mov qword [rsp + 0x40], r8	       240	util.c	FUNCTION_5
0x4000371	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       240	util.c	FUNCTION_5
0x4000376	            0x7437	                            je 0x40003af	       240	util.c	FUNCTION_5
0x4000378	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       240	util.c	FUNCTION_5
0x400037d	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       240	util.c	FUNCTION_5
0x4000382	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       240	util.c	FUNCTION_5
0x4000387	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       240	util.c	FUNCTION_5
0x400038f	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       240	util.c	FUNCTION_5
0x4000397	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       240	util.c	FUNCTION_5
0x400039f	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       240	util.c	FUNCTION_5
0x40003a7	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       240	util.c	FUNCTION_5
0x40003af	    0x64488b042528	                mov rax, qword fs:[0x28]	       240	util.c	FUNCTION_5
0x40003b8	      0x4889442418	             mov qword [rsp + 0x18], rax	       240	util.c	FUNCTION_5
0x40003bd	            0x31c0	                            xor eax, eax	       240	util.c	FUNCTION_5
0x40003bf	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       247	util.c	FUNCTION_5	CALL_1
0x40003c7	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_61
0x40003cc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x40003d1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_61
0x40003d6	    0x488b0d000000	            mov rcx, qword [0x040003dd] 	        97	stdio2.h	CALL_61
0x40003dd	      0x4889442408	                mov qword [rsp + 8], rax	       247	util.c	FUNCTION_5	CALL_1
0x40003e2	      0x488d442420	                   lea rax, [rsp + 0x20]	       247	util.c	FUNCTION_5	CALL_1
0x40003e7	    0xc70424080000	                      mov dword [rsp], 8	       247	util.c	FUNCTION_5	CALL_1
0x40003ee	    0xc74424043000	               mov dword [rsp + 4], 0x30	       247	util.c	FUNCTION_5	CALL_1
0x40003f6	      0x4889442410	             mov qword [rsp + 0x10], rax	       247	util.c	FUNCTION_5	CALL_1
0x40003fb	      0xe800000000	                          call 0x4000400	        97	stdio2.h	CALL_61
0x4000400	    0x488b3d000000	            mov rdi, qword [0x04000407] 	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000407	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_15	CALL_1
0x400040a	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_15	CALL_1
0x400040d	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000412	      0xe800000000	                          call 0x4000417	       127	stdio2.h	FUNCTION_15	CALL_1
0x4000417	    0x488b35000000	            mov rsi, qword [0x0400041e] 	        97	stdio2.h	CALL_61
0x400041e	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_61
0x4000423	      0xe800000000	                          call 0x4000428	        97	stdio2.h	CALL_61
0x4000428	    0x488b3d000000	            mov rdi, qword [0x0400042f] 	       256	util.c	FUNCTION_5	CALL_5
0x400042f	      0xe800000000	                          call 0x4000434	       256	util.c	FUNCTION_5	CALL_5
0x4000434	      0xe800000000	                          call 0x4000439	       260	util.c	FUNCTION_5	CALL_7
0x4000439	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       261	util.c	FUNCTION_5
0x400043e	    0x644833042528	                xor rax, qword fs:[0x28]	       261	util.c	FUNCTION_5
0x4000447	            0x7509	                           jne 0x4000452	       261	util.c	FUNCTION_5
0x4000449	    0x4881c4d00000	                           add rsp, 0xd0	       261	util.c	FUNCTION_5
0x4000450	              0x5b	                                 pop rbx	       261	util.c	FUNCTION_5
0x4000451	              0xc3	                                     ret	       261	util.c	FUNCTION_5
0x4000452	      0xe800000000	                          call 0x4000457	       261	util.c	FUNCTION_5
