obj_elf_vtable_entry	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	91
0x4002280	              0x55	                                push rbp	      1568	obj-elf.c	FUNCTION_38
0x4002281	              0x53	                                push rbx	      1568	obj-elf.c	FUNCTION_38
0x4002282	        0x4883ec18	                           sub rsp, 0x18	      1568	obj-elf.c	FUNCTION_38
0x4002286	    0x64488b042528	                mov rax, qword fs:[0x28]	      1568	obj-elf.c	FUNCTION_38
0x400228f	      0x4889442408	                mov qword [rsp + 8], rax	      1568	obj-elf.c	FUNCTION_38
0x4002294	            0x31c0	                            xor eax, eax	      1568	obj-elf.c	FUNCTION_38
0x4002296	    0x488b05000000	            mov rax, qword [0x0400229d] 	      1540	obj-elf.c	FUNCTION_37	IF_1
0x400229d	          0x803823	                    cmp byte [rax], 0x23	      1540	obj-elf.c	FUNCTION_37	IF_1
0x40022a0	     0xf84ba000000	                            je 0x4002360	      1540	obj-elf.c	FUNCTION_37	IF_1
0x40022a6	          0x4889e7	                            mov rdi, rsp	       413	obj-elf.c	FUNCTION_15	CALL_1
0x40022a9	      0xe800000000	                          call 0x40022ae	       413	obj-elf.c	FUNCTION_15	CALL_1
0x40022ae	        0x488b3c24	                    mov rdi, qword [rsp]	       414	obj-elf.c	FUNCTION_15	CALL_2
0x40022b2	            0x89c3	                            mov ebx, eax	       413	obj-elf.c	FUNCTION_15	CALL_1
0x40022b4	      0xe800000000	                          call 0x40022b9	       414	obj-elf.c	FUNCTION_15	CALL_2
0x40022b9	          0x4889c5	                            mov rbp, rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x40022bc	    0x488b05000000	            mov rax, qword [0x040022c3] 	       415	obj-elf.c	FUNCTION_15
0x40022c3	            0x8818	                      mov byte [rax], bl	       415	obj-elf.c	FUNCTION_15
0x40022c5	    0x488b05000000	            mov rax, qword [0x040022cc] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40022cc	           0xfb610	                   movzx edx, byte [rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40022cf	          0x80fa22	                            cmp dl, 0x22	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40022d2	     0xf8400010000	                            je 0x40023d8	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40022d8	          0x80fa20	                            cmp dl, 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40022db	     0xf848f000000	                            je 0x4002370	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40022e1	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x40022e5	     0xf849a000000	                            je 0x4002385	       419	obj-elf.c	FUNCTION_15	IF_1
0x40022eb	          0x80382c	                    cmp byte [rax], 0x2c	      1544	obj-elf.c	FUNCTION_37	IF_2
0x40022ee	     0xf85bc000000	                           jne 0x40023b0	      1544	obj-elf.c	FUNCTION_37	IF_2
0x40022f4	        0x488d5001	                      lea rdx, [rax + 1]	      1551	obj-elf.c	FUNCTION_37
0x40022f8	    0x488915000000	            mov qword [0x040022ff], rdx 	      1551	obj-elf.c	FUNCTION_37
0x40022ff	        0x80780123	                cmp byte [rax + 1], 0x23	      1552	obj-elf.c	FUNCTION_37	IF_3
0x4002303	     0xf84e7000000	                            je 0x40023f0	      1552	obj-elf.c	FUNCTION_37	IF_3
0x4002309	      0xe800000000	                          call 0x400230e	      1555	obj-elf.c	FUNCTION_37	CALL_5
0x400230e	          0x4889c3	                            mov rbx, rax	      1555	obj-elf.c	FUNCTION_37	CALL_5
0x4002311	      0xe800000000	                          call 0x4002316	      1557	obj-elf.c	FUNCTION_37	CALL_6
0x4002316	      0xe800000000	                          call 0x400231b	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400231b	        0x4883ec08	                              sub rsp, 8	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400231f	    0x488b3d000000	            mov rdi, qword [0x04002326] 	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002326	            0x31d2	                            xor edx, edx	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002328	      0x68a4050000	                              push 0x5a4	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400232d	          0x4531c9	                            xor r9d, r9d	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002330	          0x4989d8	                             mov r8, rbx	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002333	          0x4889e9	                            mov rcx, rbp	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002336	            0x89c6	                            mov esi, eax	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4002338	      0xe800000000	                          call 0x400233d	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400233d	              0x58	                                 pop rax	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400233e	              0x5a	                                 pop rdx	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400233f	      0x488b442408	                mov rax, qword [rsp + 8]	      1570	obj-elf.c	FUNCTION_38
0x4002344	    0x644833042528	                xor rax, qword fs:[0x28]	      1570	obj-elf.c	FUNCTION_38
0x400234d	     0xf85ad000000	                           jne 0x4002400	      1570	obj-elf.c	FUNCTION_38
0x4002353	        0x4883c418	                           add rsp, 0x18	      1570	obj-elf.c	FUNCTION_38
0x4002357	              0x5b	                                 pop rbx	      1570	obj-elf.c	FUNCTION_38
0x4002358	              0x5d	                                 pop rbp	      1570	obj-elf.c	FUNCTION_38
0x4002359	              0xc3	                                     ret	      1570	obj-elf.c	FUNCTION_38
0x400235a	    0x660f1f440000	                    nop word [rax + rax]	      1570	obj-elf.c	FUNCTION_38
0x4002360	        0x4883c001	                              add rax, 1	      1541	obj-elf.c	FUNCTION_37	IF_1
0x4002364	    0x488905000000	            mov qword [0x0400236b], rax 	      1541	obj-elf.c	FUNCTION_37	IF_1
0x400236b	      0xe936ffffff	                           jmp 0x40022a6	      1541	obj-elf.c	FUNCTION_37	IF_1
0x4002370	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002374	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002378	    0x488905000000	            mov qword [0x0400237f], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400237f	     0xf8566ffffff	                           jne 0x40022eb	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002385	            0x31ff	                            xor edi, edi	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002387	      0xba05000000	                              mov edx, 5	       420	obj-elf.c	FUNCTION_15	CALL_5
0x400238c	      0xbe00000000	                              mov esi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002391	      0xe800000000	                          call 0x4002396	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002396	          0x4889c7	                            mov rdi, rax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002399	            0x31c0	                            xor eax, eax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x400239b	      0xe800000000	                          call 0x40023a0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40023a0	    0x488b05000000	            mov rax, qword [0x040023a7] 	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40023a7	          0x80382c	                    cmp byte [rax], 0x2c	      1544	obj-elf.c	FUNCTION_37	IF_2
0x40023aa	     0xf8444ffffff	                            je 0x40022f4	      1544	obj-elf.c	FUNCTION_37	IF_2
0x40023b0	      0xba05000000	                              mov edx, 5	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x40023b5	      0xbe00000000	                              mov esi, 0	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x40023ba	            0x31ff	                            xor edi, edi	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x40023bc	      0xe800000000	                          call 0x40023c1	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x40023c1	          0x4889c7	                            mov rdi, rax	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x40023c4	            0x31c0	                            xor eax, eax	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x40023c6	      0xe800000000	                          call 0x40023cb	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x40023cb	      0xe800000000	                          call 0x40023d0	      1547	obj-elf.c	FUNCTION_37	IF_2	CALL_4
0x40023d0	      0xe96affffff	                           jmp 0x400233f	      1547	obj-elf.c	FUNCTION_37	IF_2	CALL_4
0x40023d5	           0xf1f00	                         nop dword [rax]	      1547	obj-elf.c	FUNCTION_37	IF_2	CALL_4
0x40023d8	        0x488d4801	                      lea rcx, [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40023dc	    0x48890d000000	            mov qword [0x040023e3], rcx 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40023e3	         0xfb65001	               movzx edx, byte [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40023e7	          0x4889c8	                            mov rax, rcx	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40023ea	      0xe9e9feffff	                           jmp 0x40022d8	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40023ef	              0x90	                                     nop	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40023f0	        0x4883c002	                              add rax, 2	      1553	obj-elf.c	FUNCTION_37	IF_3
0x40023f4	    0x488905000000	            mov qword [0x040023fb], rax 	      1553	obj-elf.c	FUNCTION_37	IF_3
0x40023fb	      0xe909ffffff	                           jmp 0x4002309	      1553	obj-elf.c	FUNCTION_37	IF_3
0x4002400	      0xe800000000	                          call 0x4002405	      1570	obj-elf.c	FUNCTION_38
obj_elf_line	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,3	7
0x40002e0	        0x4883ec08	                              sub rsp, 8	      1372	obj-elf.c	FUNCTION_33
0x40002e4	      0xe800000000	                          call 0x40002e9	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x40002e9	            0x31ff	                            xor edi, edi	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x40002eb	            0x89c6	                            mov esi, eax	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x40002ed	      0xe800000000	                          call 0x40002f2	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x40002f2	        0x4883c408	                              add rsp, 8	      1377	obj-elf.c	FUNCTION_33
0x40002f6	      0xe900000000	                           jmp 0x40002fb	      1376	obj-elf.c	FUNCTION_33	CALL_3
elf_sec_sym_ok_for_reloc	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	4
0x4000040	            0x31c0	                            xor eax, eax	       258	obj-elf.c	FUNCTION_9	CALL_1
0x4000042	    0x4883bff00000	               cmp qword [rdi + 0xf0], 0	       258	obj-elf.c	FUNCTION_9	CALL_1
0x400004a	           0xf95c0	                                setne al	       258	obj-elf.c	FUNCTION_9	CALL_1
0x400004d	              0xc3	                                     ret	       259	obj-elf.c	FUNCTION_9
elf_obj_symbol_new_hook	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,2	6
0x4000260	        0x4883ec08	                              sub rsp, 8	      1772	obj-elf.c	FUNCTION_45
0x4000264	      0xe800000000	                          call 0x4000269	      1775	obj-elf.c	FUNCTION_45	CALL_1
0x4000269	    0x48c740080000	                  mov qword [rax + 8], 0	      1776	obj-elf.c	FUNCTION_45
0x4000271	    0x48c740100000	               mov qword [rax + 0x10], 0	      1777	obj-elf.c	FUNCTION_45
0x4000279	        0x4883c408	                              add rsp, 8	      1783	obj-elf.c	FUNCTION_45
0x400027d	              0xc3	                                     ret	      1783	obj-elf.c	FUNCTION_45
obj_elf_vtable_inherit	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x4003b40	      0xe97bfdffff	      jmp sym.obj_elf_get_vtable_inherit	      1527	obj-elf.c	FUNCTION_36	CALL_1
free_section_idx	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	2
0x4000300	          0x4889f7	                            mov rdi, rsi	      2414	obj-elf.c	FUNCTION_59	CALL_1
0x4000303	      0xe900000000	                           jmp 0x4000308	      2414	obj-elf.c	FUNCTION_59	CALL_1
elf_s_get_size	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	5
0x40001e0	        0x4883ec08	                              sub rsp, 8	       221	obj-elf.c	FUNCTION_3
0x40001e4	      0xe800000000	                          call 0x40001e9	       222	obj-elf.c	FUNCTION_3	CALL_1
0x40001e9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       222	obj-elf.c	FUNCTION_3	CALL_1
0x40001ed	        0x4883c408	                              add rsp, 8	       223	obj-elf.c	FUNCTION_3
0x40001f1	              0xc3	                                     ret	       223	obj-elf.c	FUNCTION_3
obj_elf_struct	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,3	5
0x4000200	    0x488b05000000	            mov rax, qword [0x04000207] 	      1277	obj-elf.c	FUNCTION_28
0x4000207	    0x488905000000	            mov qword [0x0400020e], rax 	      1277	obj-elf.c	FUNCTION_28
0x400020e	    0x8b0500000000	            mov eax, dword [0x04000214] 	      1278	obj-elf.c	FUNCTION_28
0x4000214	    0x890500000000	            mov dword [0x0400021a], eax 	      1278	obj-elf.c	FUNCTION_28
0x400021a	      0xe900000000	                           jmp 0x400021f	      1279	obj-elf.c	FUNCTION_28	CALL_2
obj_elf_gnu_attribute	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	2
0x4004080	      0xbf01000000	                              mov edi, 1	      1758	obj-elf.c	FUNCTION_43	CALL_1
0x4004085	      0xe9b6fcffff	        jmp sym.obj_elf_vendor_attribute	      1758	obj-elf.c	FUNCTION_43	CALL_1
obj_elf_section	functions,0:SWITCH,0:IF,29:DO,1:ELSE,8:FOR,0:WHILE,0:CALL,58	624
0x4002e00	            0x4157	                                push r15	      1008	obj-elf.c	FUNCTION_25
0x4002e02	            0x4156	                                push r14	      1008	obj-elf.c	FUNCTION_25
0x4002e04	            0x4155	                                push r13	      1008	obj-elf.c	FUNCTION_25
0x4002e06	            0x4154	                                push r12	      1008	obj-elf.c	FUNCTION_25
0x4002e08	              0x55	                                push rbp	      1008	obj-elf.c	FUNCTION_25
0x4002e09	              0x53	                                push rbx	      1008	obj-elf.c	FUNCTION_25
0x4002e0a	        0x4883ec58	                           sub rsp, 0x58	      1008	obj-elf.c	FUNCTION_25
0x4002e0e	    0x448b15000000	           mov r10d, dword [0x04002e15] 	      1018	obj-elf.c	FUNCTION_25	IF_1
0x4002e15	    0x64488b042528	                mov rax, qword fs:[0x28]	      1008	obj-elf.c	FUNCTION_25
0x4002e1e	      0x4889442448	             mov qword [rsp + 0x48], rax	      1008	obj-elf.c	FUNCTION_25
0x4002e23	            0x31c0	                            xor eax, eax	      1008	obj-elf.c	FUNCTION_25
0x4002e25	          0x4585d2	                         test r10d, r10d	      1018	obj-elf.c	FUNCTION_25	IF_1
0x4002e28	            0x744e	                            je 0x4002e78	      1018	obj-elf.c	FUNCTION_25	IF_1
0x4002e2a	    0x488b05000000	            mov rax, qword [0x04002e31] 	      1026	obj-elf.c	FUNCTION_25	IF_1
0x4002e31	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x4002e36	    0x488905000000	            mov qword [0x04002e3d], rax 	      1026	obj-elf.c	FUNCTION_25	IF_1
0x4002e3d	    0x8b0500000000	            mov eax, dword [0x04002e43] 	      1027	obj-elf.c	FUNCTION_25	IF_1
0x4002e43	    0x890500000000	            mov dword [0x04002e49], eax 	      1027	obj-elf.c	FUNCTION_25	IF_1
0x4002e49	      0xe800000000	                          call 0x4002e4e	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x4002e4e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1230	obj-elf.c	FUNCTION_25
0x4002e53	    0x644833042528	                xor rax, qword fs:[0x28]	      1230	obj-elf.c	FUNCTION_25
0x4002e5c	     0xf85a6090000	                           jne 0x4003808	      1230	obj-elf.c	FUNCTION_25
0x4002e62	        0x4883c458	                           add rsp, 0x58	      1230	obj-elf.c	FUNCTION_25
0x4002e66	              0x5b	                                 pop rbx	      1230	obj-elf.c	FUNCTION_25
0x4002e67	              0x5d	                                 pop rbp	      1230	obj-elf.c	FUNCTION_25
0x4002e68	            0x415c	                                 pop r12	      1230	obj-elf.c	FUNCTION_25
0x4002e6a	            0x415d	                                 pop r13	      1230	obj-elf.c	FUNCTION_25
0x4002e6c	            0x415e	                                 pop r14	      1230	obj-elf.c	FUNCTION_25
0x4002e6e	            0x415f	                                 pop r15	      1230	obj-elf.c	FUNCTION_25
0x4002e70	              0xc3	                                     ret	      1230	obj-elf.c	FUNCTION_25
0x4002e71	     0xf1f80000000	                         nop dword [rax]	      1230	obj-elf.c	FUNCTION_25
0x4002e78	            0x89fd	                            mov ebp, edi	      1230	obj-elf.c	FUNCTION_25
0x4002e7a	      0xe800000000	                          call 0x4002e7f	      1038	obj-elf.c	FUNCTION_25	CALL_4
0x4002e7f	          0x4885c0	                           test rax, rax	      1039	obj-elf.c	FUNCTION_25	IF_2
0x4002e82	          0x4989c4	                            mov r12, rax	      1038	obj-elf.c	FUNCTION_25	CALL_4
0x4002e85	            0x74c7	                            je 0x4002e4e	      1039	obj-elf.c	FUNCTION_25	IF_2
0x4002e87	    0x488b0d000000	            mov rcx, qword [0x04002e8e] 	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4002e8e	          0x80392c	                    cmp byte [rcx], 0x2c	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4002e91	     0xf8519010000	                           jne 0x4002fb0	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4002e97	        0x488d4101	                      lea rax, [rcx + 1]	      1050	obj-elf.c	FUNCTION_25	IF_3
0x4002e9b	    0x488905000000	            mov qword [0x04002ea2], rax 	      1050	obj-elf.c	FUNCTION_25	IF_3
0x4002ea2	         0xfb65101	               movzx edx, byte [rcx + 1]	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4002ea6	          0x80fa20	                            cmp dl, 0x20	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4002ea9	     0xf8481010000	                            je 0x4003030	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4002eaf	            0x85ed	                           test ebp, ebp	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002eb1	     0xf8521010000	                           jne 0x4002fd8	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002eb7	    0x41beffffffff	                    mov r14d, 0xffffffff	      1015	obj-elf.c	FUNCTION_25
0x4002ebd	          0x80fa22	                            cmp dl, 0x22	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4002ec0	     0xf843a030000	                            je 0x4003200	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4002ec6	    0xc74424080000	                  mov dword [rsp + 8], 0	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4002ece	            0x31db	                            xor ebx, ebx	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4002ed0	      0xe9b1000000	                           jmp 0x4002f86	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4002ed5	           0xf1f00	                         nop dword [rax]	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x4002ed8	          0x80fa23	                            cmp dl, 0x23	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x4002edb	     0xf857f020000	                           jne 0x4003160	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x4002ee1	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1210	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_52
0x4002ee6	        0x4883c001	                              add rax, 1	      1209	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1
0x4002eea	    0x488905000000	            mov qword [0x04002ef1], rax 	      1209	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1
0x4002ef1	      0xe800000000	                          call 0x4002ef6	      1210	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_52
0x4002ef6	           0xfbef8	                           movsx edi, al	      1211	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_53
0x4002ef9	      0xe800000000	                          call 0x4002efe	      1211	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_53
0x4002efe	    0x488b15000000	            mov rdx, qword [0x04002f05] 	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002f05	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002f0a	          0x4989d7	                            mov r15, rdx	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002f0d	          0x4d29ef	                            sub r15, r13	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002f10	        0x4983ff05	                              cmp r15, 5	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002f14	     0xf842e010000	                            je 0x4003048	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002f1a	        0x4983ff09	                              cmp r15, 9	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002f1e	     0xf84ac010000	                            je 0x40030d0	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002f24	        0x4983ff07	                              cmp r15, 7	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002f28	     0xf84d2010000	                            je 0x4003100	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002f2e	        0x4983ff03	                              cmp r15, 3	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f32	     0xf8558010000	                           jne 0x4003090	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f38	      0xb903000000	                              mov ecx, 3	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f3d	          0x4c89ee	                            mov rsi, r13	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f40	      0xbf00000000	                              mov edi, 0	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f45	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f47	      0xb800040000	                          mov eax, 0x400	       925	obj-elf.c	FUNCTION_23	IF_5
0x4002f4c	        0x400f97c6	                                seta sil	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f50	           0xf92c1	                                 setb cl	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f53	          0x4038ce	                             cmp sil, cl	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f56	     0xf8534010000	                           jne 0x4003090	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f5c	         0xf1f4000	                         nop dword [rax]	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002f60	          0x4809c3	                             or rbx, rax	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002f63	            0x31c0	                            xor eax, eax	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f65	          0x803a20	                    cmp byte [rdx], 0x20	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f68	           0xf94c0	                                 sete al	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f6b	          0x4801c2	                            add rdx, rax	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f6e	        0x488d4201	                      lea rax, [rdx + 1]	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f72	    0x488905000000	            mov qword [0x04002f79], rax 	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f79	          0x803a2c	                    cmp byte [rdx], 0x2c	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f7c	     0xf8506020000	                           jne 0x4003188	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f82	         0xfb65201	               movzx edx, byte [rdx + 1]	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f86	          0x80fa20	                            cmp dl, 0x20	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002f89	     0xf8549ffffff	                           jne 0x4002ed8	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002f8f	        0x488d4801	                      lea rcx, [rax + 1]	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002f93	    0x48890d000000	            mov qword [0x04002f9a], rcx 	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002f9a	         0xfb65001	               movzx edx, byte [rax + 1]	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002f9e	          0x4889c8	                            mov rax, rcx	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002fa1	      0xe932ffffff	                           jmp 0x4002ed8	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002fa6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002fb0	      0xe800000000	                          call 0x4002fb5	      1223	obj-elf.c	FUNCTION_25	CALL_56
0x4002fb5	              0x55	                                push rbp	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fb6	            0x6a00	                                  push 0	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fb8	            0x31d2	                            xor edx, edx	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fba	          0x4531c9	                            xor r9d, r9d	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fbd	          0x4531c0	                            xor r8d, r8d	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fc0	            0x31c9	                            xor ecx, ecx	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fc2	            0x31f6	                            xor esi, esi	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fc4	          0x4c89e7	                            mov rdi, r12	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fc7	      0xe800000000	                          call 0x4002fcc	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fcc	              0x58	                                 pop rax	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fcd	              0x5a	                                 pop rdx	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fce	      0xe97bfeffff	                           jmp 0x4002e4e	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fd3	       0xf1f440000	                   nop dword [rax + rax]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fd8	           0xfb6ca	                           movzx ecx, dl	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002fdb	    0x41beffffffff	                    mov r14d, 0xffffffff	      1015	obj-elf.c	FUNCTION_25
0x4002fe1	    0xf68409000000	                test byte [rcx + rcx], 4	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002fe9	     0xf84cefeffff	                            je 0x4002ebd	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002fef	      0xe800000000	                          call 0x4002ff4	      1056	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_7
0x4002ff4	    0x488b0d000000	            mov rcx, qword [0x04002ffb] 	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4002ffb	          0x4189c6	                           mov r14d, eax	      1056	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_7
0x4002ffe	           0xfb601	                   movzx eax, byte [rcx]	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4003001	            0x3c20	                            cmp al, 0x20	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4003003	     0xf8473050000	                            je 0x400357c	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4003009	            0x3c2c	                            cmp al, 0x2c	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x400300b	     0xf843f050000	                            je 0x4003550	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x4003011	          0x4531ed	                          xor r13d, r13d	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x4003014	            0x31d2	                            xor edx, edx	      1016	obj-elf.c	FUNCTION_25
0x4003016	          0x4531ff	                          xor r15d, r15d	      1045	obj-elf.c	FUNCTION_25
0x4003019	          0x4531c0	                            xor r8d, r8d	      1044	obj-elf.c	FUNCTION_25
0x400301c	            0x31db	                            xor ebx, ebx	      1042	obj-elf.c	FUNCTION_25
0x400301e	          0x4531c9	                            xor r9d, r9d	      1043	obj-elf.c	FUNCTION_25
0x4003021	      0xe979010000	                           jmp 0x400319f	      1043	obj-elf.c	FUNCTION_25
0x4003026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1043	obj-elf.c	FUNCTION_25
0x4003030	        0x488d4102	                      lea rax, [rcx + 2]	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4003034	    0x488905000000	            mov qword [0x0400303b], rax 	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x400303b	         0xfb65102	               movzx edx, byte [rcx + 2]	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x400303f	      0xe96bfeffff	                           jmp 0x4002eaf	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4003044	         0xf1f4000	                         nop dword [rax]	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4003048	      0xb905000000	                              mov ecx, 5	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x400304d	          0x4c89ee	                            mov rsi, r13	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4003050	      0xbf00000000	                              mov edi, 0	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4003055	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4003057	      0xb801000000	                              mov eax, 1	       917	obj-elf.c	FUNCTION_23	IF_1
0x400305c	        0x400f97c6	                                seta sil	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4003060	           0xf92c1	                                 setb cl	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4003063	          0x4038ce	                             cmp sil, cl	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4003066	     0xf84f4feffff	                            je 0x4002f60	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x400306c	      0xb905000000	                              mov ecx, 5	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4003071	          0x4c89ee	                            mov rsi, r13	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4003074	      0xbf00000000	                              mov edi, 0	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4003079	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x400307b	      0xb802000000	                              mov eax, 2	       919	obj-elf.c	FUNCTION_23	IF_2
0x4003080	        0x400f97c6	                                seta sil	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4003084	           0xf92c1	                                 setb cl	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4003087	          0x4038ce	                             cmp sil, cl	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x400308a	     0xf84d0feffff	                            je 0x4002f60	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4003090	          0x4c89fe	                            mov rsi, r15	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4003093	          0x4c89ef	                            mov rdi, r13	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4003096	      0xe800000000	                          call 0x400309b	       929	obj-elf.c	FUNCTION_23	CALL_6
0x400309b	          0x4885c0	                           test rax, rax	       930	obj-elf.c	FUNCTION_23	IF_6
0x400309e	    0x488b15000000	            mov rdx, qword [0x040030a5] 	       930	obj-elf.c	FUNCTION_23	IF_6
0x40030a5	     0xf85b5feffff	                           jne 0x4002f60	       930	obj-elf.c	FUNCTION_23	IF_6
0x40030ab	            0x31d2	                            xor edx, edx	       935	obj-elf.c	FUNCTION_23	CALL_7
0x40030ad	          0x4c89fe	                            mov rsi, r15	       935	obj-elf.c	FUNCTION_23	CALL_7
0x40030b0	          0x4c89ef	                            mov rdi, r13	       935	obj-elf.c	FUNCTION_23	CALL_7
0x40030b3	      0xe8e8eaffff	           call sym.obj_elf_section_type	       935	obj-elf.c	FUNCTION_23	CALL_7
0x40030b8	            0x85c0	                           test eax, eax	       936	obj-elf.c	FUNCTION_23	IF_7
0x40030ba	            0x7474	                            je 0x4003130	       936	obj-elf.c	FUNCTION_23	IF_7
0x40030bc	        0x89442408	                mov dword [rsp + 8], eax	       936	obj-elf.c	FUNCTION_23	IF_7
0x40030c0	    0x488b15000000	            mov rdx, qword [0x040030c7] 	       936	obj-elf.c	FUNCTION_23	IF_7
0x40030c7	            0x31c0	                            xor eax, eax	       941	obj-elf.c	FUNCTION_23
0x40030c9	      0xe992feffff	                           jmp 0x4002f60	       941	obj-elf.c	FUNCTION_23
0x40030ce	            0x6690	                                     nop	       941	obj-elf.c	FUNCTION_23
0x40030d0	      0xb909000000	                              mov ecx, 9	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030d5	          0x4c89ee	                            mov rsi, r13	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030d8	      0xbf00000000	                              mov edi, 0	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030dd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030df	      0xb804000000	                              mov eax, 4	       921	obj-elf.c	FUNCTION_23	IF_3
0x40030e4	        0x400f97c6	                                seta sil	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030e8	           0xf92c1	                                 setb cl	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030eb	          0x4038ce	                             cmp sil, cl	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030ee	     0xf846cfeffff	                            je 0x4002f60	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030f4	            0xeb9a	                           jmp 0x4003090	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x40030f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4003100	      0xb907000000	                              mov ecx, 7	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4003105	          0x4c89ee	                            mov rsi, r13	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4003108	      0xbf00000000	                              mov edi, 0	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x400310d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x400310f	      0xb800000080	                     mov eax, 0x80000000	       923	obj-elf.c	FUNCTION_23	IF_4
0x4003114	        0x400f97c6	                                seta sil	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4003118	           0xf92c1	                                 setb cl	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x400311b	          0x4038ce	                             cmp sil, cl	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x400311e	     0xf843cfeffff	                            je 0x4002f60	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4003124	      0xe967ffffff	                           jmp 0x4003090	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4003129	     0xf1f80000000	                         nop dword [rax]	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4003130	      0xba05000000	                              mov edx, 5	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4003135	      0xbe00000000	                              mov esi, 0	       939	obj-elf.c	FUNCTION_23	CALL_9
0x400313a	            0x31ff	                            xor edi, edi	       939	obj-elf.c	FUNCTION_23	CALL_9
0x400313c	      0xe800000000	                          call 0x4003141	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4003141	          0x4889c7	                            mov rdi, rax	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4003144	            0x31c0	                            xor eax, eax	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4003146	      0xe800000000	                          call 0x400314b	       939	obj-elf.c	FUNCTION_23	CALL_9
0x400314b	    0x488b15000000	            mov rdx, qword [0x04003152] 	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4003152	            0x31c0	                            xor eax, eax	       941	obj-elf.c	FUNCTION_23
0x4003154	      0xe907feffff	                           jmp 0x4002f60	       941	obj-elf.c	FUNCTION_23
0x4003159	     0xf1f80000000	                         nop dword [rax]	       941	obj-elf.c	FUNCTION_23
0x4003160	            0x31ff	                            xor edi, edi	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4003162	      0xba05000000	                              mov edx, 5	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4003167	      0xbe00000000	                              mov esi, 0	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x400316c	      0xe800000000	                          call 0x4003171	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4003171	          0x4889c7	                            mov rdi, rax	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4003174	            0x31c0	                            xor eax, eax	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4003176	      0xe800000000	                          call 0x400317b	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x400317b	      0xe800000000	                          call 0x4003180	      1206	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_51
0x4003180	      0xe9c9fcffff	                           jmp 0x4002e4e	      1207	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x4003185	           0xf1f00	                         nop dword [rax]	      1207	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x4003188	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      1207	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x400318d	    0x488915000000	            mov qword [0x04003194], rdx 	      1218	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4003194	          0x4531ff	                          xor r15d, r15d	      1045	obj-elf.c	FUNCTION_25
0x4003197	            0x31d2	                            xor edx, edx	      1016	obj-elf.c	FUNCTION_25
0x4003199	          0x4531c0	                            xor r8d, r8d	      1044	obj-elf.c	FUNCTION_25
0x400319c	          0x4531c9	                            xor r9d, r9d	      1043	obj-elf.c	FUNCTION_25
0x400319f	        0x89542418	             mov dword [rsp + 0x18], edx	      1043	obj-elf.c	FUNCTION_25
0x40031a3	      0x4489442410	             mov dword [rsp + 0x10], r8d	      1043	obj-elf.c	FUNCTION_25
0x40031a8	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1043	obj-elf.c	FUNCTION_25
0x40031ad	      0xe800000000	                          call 0x40031b2	      1223	obj-elf.c	FUNCTION_25	CALL_56
0x40031b2	              0x55	                                push rbp	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031b3	            0x4157	                                push r15	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031b5	          0x4889d9	                            mov rcx, rbx	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031b8	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031bd	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031c2	          0x4489ee	                           mov esi, r13d	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031c5	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031c9	          0x4c89e7	                            mov rdi, r12	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031cc	      0xe800000000	                          call 0x40031d1	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x40031d1	            0x85ed	                           test ebp, ebp	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40031d3	              0x59	                                 pop rcx	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40031d4	              0x5e	                                 pop rsi	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40031d5	     0xf8473fcffff	                            je 0x4002e4e	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40031db	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40031df	     0xf8469fcffff	                            je 0x4002e4e	      1228	obj-elf.c	FUNCTION_25	IF_29
0x40031e5	    0x488b3d000000	            mov rdi, qword [0x040031ec] 	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x40031ec	          0x4489f6	                           mov esi, r14d	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x40031ef	      0xe800000000	                          call 0x40031f4	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x40031f4	      0xe955fcffff	                           jmp 0x4002e4e	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x40031f9	     0xf1f80000000	                         nop dword [rax]	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x4003200	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x4003205	      0xe800000000	                          call 0x400320a	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x400320a	          0x4885c0	                           test rax, rax	      1074	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x400320d	          0x4989c5	                            mov r13, rax	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x4003210	      0x4889442430	             mov qword [rsp + 0x30], rax	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x4003215	     0xf8460ffffff	                            je 0x400317b	      1074	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x400321b	          0x4889c7	                            mov rdi, rax	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x400321e	            0x31db	                            xor ebx, ebx	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4003220	      0xe800000000	                          call 0x4003225	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4003225	          0x4885c0	                           test rax, rax	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4003228	          0x4989c7	                            mov r15, rax	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x400322b	    0xc74424080000	                  mov dword [rsp + 8], 0	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4003233	            0x7435	                            je 0x400326a	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4003235	           0xf1f00	                         nop dword [rax]	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4003238	      0x410fb64500	                   movzx eax, byte [r13]	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400323d	          0x83e83f	                           sub eax, 0x3f	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003240	            0x3c39	                            cmp al, 0x39	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003242	     0xf87b3010000	                            ja 0x40033fb	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003248	           0xfb6c0	                           movzx eax, al	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400324b	    0xff24c5000000	                       jmp qword [rax*8]	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003252	    0x660f1f440000	                    nop word [rax + rax]	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003258	    0xc74424080100	                  mov dword [rsp + 8], 1	       824	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003260	        0x4983c501	                              add r13, 1	       865	obj-elf.c	FUNCTION_21	WHILE_1
0x4003264	        0x4983ef01	                              sub r15, 1	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4003268	            0x75ce	                           jne 0x4003238	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x400326a	    0x488b05000000	            mov rax, qword [0x04003271] 	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4003271	           0xfb610	                   movzx edx, byte [rax]	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4003274	          0x80fa20	                            cmp dl, 0x20	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4003277	     0xf8421030000	                            je 0x400359e	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x400327d	          0x80fa2c	                            cmp dl, 0x2c	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4003280	     0xf8432030000	                            je 0x40035b8	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4003286	          0x4531ed	                          xor r13d, r13d	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4003289	          0xf6c310	                           test bl, 0x10	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x400328c	            0x741f	                            je 0x40032ad	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x400328e	      0xba05000000	                              mov edx, 5	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4003293	      0xbe00000000	                              mov esi, 0	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4003298	            0x31ff	                            xor edi, edi	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x400329a	        0x4883e3ef	             and rbx, 0xffffffffffffffef	      1136	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15
0x400329e	      0xe800000000	                          call 0x40032a3	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x40032a3	          0x4889c7	                            mov rdi, rax	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x40032a6	            0x31c0	                            xor eax, eax	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x40032a8	      0xe800000000	                          call 0x40032ad	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x40032ad	          0x4531c0	                            xor r8d, r8d	      1044	obj-elf.c	FUNCTION_25
0x40032b0	          0xf6c702	                              test bh, 2	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x40032b3	     0xf841f020000	                            je 0x40034d8	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x40032b9	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x40032be	          0x4585c9	                           test r9d, r9d	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x40032c1	     0xf859d030000	                           jne 0x4003664	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x40032c7	    0x488b05000000	            mov rax, qword [0x040032ce] 	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x40032ce	          0x80382c	                    cmp byte [rax], 0x2c	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x40032d1	     0xf841f040000	                            je 0x40036f6	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x40032d7	      0xba05000000	                              mov edx, 5	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x40032dc	      0xbe00000000	                              mov esi, 0	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x40032e1	            0x31ff	                            xor edi, edi	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x40032e3	      0x4489442408	                mov dword [rsp + 8], r8d	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x40032e8	          0x80e7fd	                            and bh, 0xfd	      1166	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22
0x40032eb	          0x4531ff	                          xor r15d, r15d	      1045	obj-elf.c	FUNCTION_25
0x40032ee	      0xe800000000	                          call 0x40032f3	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x40032f3	          0x4889c7	                            mov rdi, rax	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x40032f6	            0x31c0	                            xor eax, eax	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x40032f8	      0xe800000000	                          call 0x40032fd	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x40032fd	      0x448b442408	                mov r8d, dword [rsp + 8]	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4003302	          0x4531c9	                            xor r9d, r9d	      1043	obj-elf.c	FUNCTION_25
0x4003305	            0x31d2	                            xor edx, edx	      1016	obj-elf.c	FUNCTION_25
0x4003307	    0xf7c300000001	                     test ebx, 0x1000000	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x400330d	     0xf848cfeffff	                            je 0x400319f	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4003313	    0x488b05000000	            mov rax, qword [0x0400331a] 	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x400331a	          0x80382c	                    cmp byte [rax], 0x2c	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x400331d	     0xf857cfeffff	                           jne 0x400319f	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4003323	        0x488d4801	                      lea rcx, [rax + 1]	      1181	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4003327	    0x48890d000000	            mov qword [0x0400332e], rcx 	      1181	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x400332e	         0xfb65001	               movzx edx, byte [rax + 1]	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4003332	          0x80fa20	                            cmp dl, 0x20	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4003335	     0xf8499040000	                            je 0x40037d4	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x400333b	           0xfb6c2	                           movzx eax, dl	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x400333e	            0x31d2	                            xor edx, edx	      1016	obj-elf.c	FUNCTION_25
0x4003340	    0xf68400000000	                test byte [rax + rax], 4	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4003348	     0xf8451feffff	                            je 0x400319f	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x400334e	          0x4889cf	                            mov rdi, rcx	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4003351	      0xbe00000000	                              mov esi, 0	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4003356	      0x4489442418	             mov dword [rsp + 0x18], r8d	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x400335b	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4003360	      0x48894c2408	                mov qword [rsp + 8], rcx	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4003365	      0xe800000000	                          call 0x400336a	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x400336a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x400336d	            0x89c2	                            mov edx, eax	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x400336f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x4003374	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x4003379	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x400337e	     0xf851bfeffff	                           jne 0x400319f	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x4003384	      0xba05000000	                              mov edx, 5	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4003389	      0xbe00000000	                              mov esi, 0	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x400338e	            0x31ff	                            xor edi, edi	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4003390	      0x4489442410	             mov dword [rsp + 0x10], r8d	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4003395	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x400339a	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x400339f	      0xe800000000	                          call 0x40033a4	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x40033a4	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x40033a9	          0x4889c7	                            mov rdi, rax	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x40033ac	            0x31c0	                            xor eax, eax	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x40033ae	          0x4889ce	                            mov rsi, rcx	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x40033b1	      0xe800000000	                          call 0x40033b6	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x40033b6	            0x31d2	                            xor edx, edx	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x40033b8	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x40033bd	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x40033c2	      0xe9d8fdffff	                           jmp 0x400319f	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x40033c7	    0x660f1f840000	                    nop word [rax + rax]	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x40033d0	        0x4883cb04	                               or rbx, 4	       806	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40033d4	      0xe987feffff	                           jmp 0x4003260	       806	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40033d9	     0xf1f80000000	                         nop dword [rax]	       806	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40033e0	        0x4883cb01	                               or rbx, 1	       803	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40033e4	      0xe977feffff	                           jmp 0x4003260	       803	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40033e9	     0xf1f80000000	                         nop dword [rax]	       803	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40033f0	      0x41807dff61	                cmp byte [r13 - 1], 0x61	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x40033f5	     0xf8431010000	                            je 0x400352c	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x40033fb	            0x31ff	                            xor edi, edi	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x40033fd	      0xba05000000	                              mov edx, 5	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x4003402	      0xbe00000000	                              mov esi, 0	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x4003407	      0xe800000000	                          call 0x400340c	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x400340c	      0x4889442438	             mov qword [rsp + 0x38], rax	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x4003411	      0x410fbe7d00	                   movsx edi, byte [r13]	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x4003416	      0x488d742438	                   lea rsi, [rsp + 0x38]	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x400341b	      0xe800000000	                          call 0x4003420	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x4003420	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       845	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x4003424	            0x7473	                            je 0x4003499	       845	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x4003426	          0x4809c3	                             or rbx, rax	       846	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x4003429	      0xe932feffff	                           jmp 0x4003260	       846	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x400342e	            0x6690	                                     nop	       846	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x4003430	    0x4881cb000000	                       or rbx, 0x1000000	       821	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003437	      0xe924feffff	                           jmp 0x4003260	       821	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400343c	         0xf1f4000	                         nop dword [rax]	       821	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003440	      0xb800000080	                     mov eax, 0x80000000	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003445	          0x4809c3	                             or rbx, rax	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003448	      0xe913feffff	                           jmp 0x4003260	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400344d	           0xf1f00	                         nop dword [rax]	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003450	          0x80cf04	                                or bh, 4	       818	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003453	      0xe908feffff	                           jmp 0x4003260	       818	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003458	     0xf1f84000000	                   nop dword [rax + rax]	       818	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003460	        0x4883cb20	                            or rbx, 0x20	       812	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003464	      0xe9f7fdffff	                           jmp 0x4003260	       812	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003469	     0xf1f80000000	                         nop dword [rax]	       812	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003470	        0x4883cb10	                            or rbx, 0x10	       809	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003474	      0xe9e7fdffff	                           jmp 0x4003260	       809	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003479	     0xf1f80000000	                         nop dword [rax]	       809	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003480	          0x80cf02	                                or bh, 2	       815	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003483	      0xe9d8fdffff	                           jmp 0x4003260	       815	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003488	     0xf1f84000000	                   nop dword [rax + rax]	       815	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003490	        0x4883cb02	                               or rbx, 2	       797	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003494	      0xe9c7fdffff	                           jmp 0x4003260	       797	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4003499	      0x410fb64500	                   movzx eax, byte [r13]	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x400349e	    0xf68400000000	                test byte [rax + rax], 4	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40034a6	     0xf84e0030000	                            je 0x400388c	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x40034ac	      0x488d742440	                   lea rsi, [rsp + 0x40]	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40034b1	            0x31d2	                            xor edx, edx	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40034b3	          0x4c89ef	                            mov rdi, r13	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40034b6	      0xe800000000	                          call 0x40034bb	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40034bb	          0x4809c3	                             or rbx, rax	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x40034be	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       856	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40034c3	        0x4883e801	                              sub rax, 1	       856	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40034c7	          0x4889c2	                            mov rdx, rax	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40034ca	          0x4c29ea	                            sub rdx, r13	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40034cd	          0x4989c5	                            mov r13, rax	       858	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40034d0	          0x4929d7	                            sub r15, rdx	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40034d3	      0xe988fdffff	                           jmp 0x4003260	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x40034d8	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1169	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23
0x40034dc	            0x85ff	                           test edi, edi	      1169	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23
0x40034de	     0xf84af000000	                            je 0x4003593	      1169	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23
0x40034e4	    0x488b05000000	            mov rax, qword [0x040034eb] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x40034eb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x40034f2	    0x488bb8b00000	            mov rdi, qword [rax + 0xb0] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x40034f9	          0x4885ff	                           test rdi, rdi	      1172	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x40034fc	     0xf8491000000	                            je 0x4003593	      1172	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4003502	      0x4489442408	                mov dword [rsp + 8], r8d	      1172	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4003507	      0xe800000000	                          call 0x400350c	      1174	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24	CALL_42
0x400350c	          0x4989c1	                             mov r9, rax	      1174	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24	CALL_42
0x400350f	    0x488b05000000	            mov rax, qword [0x04003516] 	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4003516	      0x448b442408	                mov r8d, dword [rsp + 8]	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x400351b	        0x448b7820	           mov r15d, dword [rax + 0x20] 	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x400351f	        0x41c1ef11	                          shr r15d, 0x11	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4003523	        0x4183e701	                             and r15d, 1	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4003527	      0xe9d9fdffff	                           jmp 0x4003305	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x400352c	          0x4889d8	                            mov rax, rbx	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x400352f	        0x4883c810	                            or rax, 0x10	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4003533	        0x4983ff01	                              cmp r15, 1	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x4003537	     0xf8651010000	                           jbe 0x400368e	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x400353d	      0x41807d0173	                cmp byte [r13 + 1], 0x73	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x4003542	     0xf8489010000	                            je 0x40036d1	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x4003548	          0x4889c3	                            mov rbx, rax	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x400354b	      0xe910fdffff	                           jmp 0x4003260	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4003550	        0x488d4101	                      lea rax, [rcx + 1]	      1065	obj-elf.c	FUNCTION_25	IF_3	IF_4
0x4003554	    0x488905000000	            mov qword [0x0400355b], rax 	      1065	obj-elf.c	FUNCTION_25	IF_3	IF_4
0x400355b	         0xfb65101	               movzx edx, byte [rcx + 1]	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x400355f	          0x80fa20	                            cmp dl, 0x20	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4003562	     0xf8555f9ffff	                           jne 0x4002ebd	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4003568	        0x488d4102	                      lea rax, [rcx + 2]	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x400356c	    0x488905000000	            mov qword [0x04003573], rax 	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4003573	         0xfb65102	               movzx edx, byte [rcx + 2]	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x4003577	      0xe941f9ffff	                           jmp 0x4002ebd	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x400357c	        0x488d5101	                      lea rdx, [rcx + 1]	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4003580	    0x488915000000	            mov qword [0x04003587], rdx 	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4003587	         0xfb64101	               movzx eax, byte [rcx + 1]	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x400358b	          0x4889d1	                            mov rcx, rdx	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x400358e	      0xe976faffff	                           jmp 0x4003009	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4003593	          0x4531ff	                          xor r15d, r15d	      1045	obj-elf.c	FUNCTION_25
0x4003596	          0x4531c9	                            xor r9d, r9d	      1043	obj-elf.c	FUNCTION_25
0x4003599	      0xe967fdffff	                           jmp 0x4003305	      1043	obj-elf.c	FUNCTION_25
0x400359e	        0x488d5001	                      lea rdx, [rax + 1]	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x40035a2	          0x4531ed	                          xor r13d, r13d	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x40035a5	    0x488915000000	            mov qword [0x040035ac], rdx 	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x40035ac	         0xfb64801	               movzx ecx, byte [rax + 1]	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40035b0	          0x80f92c	                            cmp cl, 0x2c	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40035b3	            0x7546	                           jne 0x40035fb	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40035b5	          0x4889d0	                            mov rax, rdx	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40035b8	        0x488d4801	                      lea rcx, [rax + 1]	      1087	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40035bc	    0x48890d000000	            mov qword [0x040035c3], rcx 	      1087	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40035c3	         0xfb65001	               movzx edx, byte [rax + 1]	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40035c7	          0x80fa20	                            cmp dl, 0x20	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40035ca	     0xf8412010000	                            je 0x40036e2	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40035d0	          0x80fa22	                            cmp dl, 0x22	      1090	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9
0x40035d3	     0xf84ac010000	                            je 0x4003785	      1090	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9
0x40035d9	          0x80fa40	                            cmp dl, 0x40	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x40035dc	     0xf84b4000000	                            je 0x4003696	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x40035e2	          0x80fa25	                            cmp dl, 0x25	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x40035e5	     0xf84ab000000	                            je 0x4003696	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x40035eb	    0x488905000000	            mov qword [0x040035f2], rax 	      1116	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_3
0x40035f2	           0xfb608	                   movzx ecx, byte [rax]	      1116	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_3
0x40035f5	          0x4889c2	                            mov rdx, rax	      1116	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_3
0x40035f8	          0x4531ed	                          xor r13d, r13d	      1116	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_3
0x40035fb	          0x80f920	                            cmp cl, 0x20	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x40035fe	            0x750b	                           jne 0x400360b	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4003600	        0x4883c201	                              add rdx, 1	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4003604	    0x488915000000	            mov qword [0x0400360b], rdx 	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x400360b	          0x4531c0	                            xor r8d, r8d	      1044	obj-elf.c	FUNCTION_25
0x400360e	          0xf6c310	                           test bl, 0x10	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4003611	     0xf8499fcffff	                            je 0x40032b0	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4003617	          0x803a2c	                    cmp byte [rdx], 0x2c	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x400361a	     0xf856efcffff	                           jne 0x400328e	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4003620	        0x488d4201	                      lea rax, [rdx + 1]	      1122	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4003624	    0x488905000000	            mov qword [0x0400362b], rax 	      1122	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x400362b	        0x807a0120	                cmp byte [rdx + 1], 0x20	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x400362f	     0xf84c3010000	                            je 0x40037f8	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4003635	      0xe800000000	                          call 0x400363a	      1124	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_27
0x400363a	    0x488b15000000	            mov rdx, qword [0x04003641] 	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4003641	          0x4189c0	                            mov r8d, eax	      1124	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_27
0x4003644	          0x803a20	                    cmp byte [rdx], 0x20	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4003647	     0xf849b010000	                            je 0x40037e8	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x400364d	            0x85c0	                           test eax, eax	      1126	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x400364f	      0xba05000000	                              mov edx, 5	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4003654	      0xbe00000000	                              mov esi, 0	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4003659	     0xf8951fcffff	                           jns 0x40032b0	      1126	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x400365f	      0xe934fcffff	                           jmp 0x4003298	      1126	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4003664	      0xba05000000	                              mov edx, 5	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4003669	      0xbe00000000	                              mov esi, 0	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x400366e	            0x31ff	                            xor edi, edi	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4003670	      0x4489442408	                mov dword [rsp + 8], r8d	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4003675	      0xe800000000	                          call 0x400367a	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x400367a	          0x4889c7	                            mov rdi, rax	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x400367d	            0x31c0	                            xor eax, eax	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x400367f	      0xe800000000	                          call 0x4003684	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4003684	      0x448b442408	                mov r8d, dword [rsp + 8]	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4003689	      0xe939fcffff	                           jmp 0x40032c7	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x400368e	          0x4889c3	                            mov rbx, rax	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4003691	      0xe9d4fbffff	                           jmp 0x400326a	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4003696	        0x488d7901	                      lea rdi, [rcx + 1]	      1102	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x400369a	    0x48893d000000	            mov qword [0x040036a1], rdi 	      1102	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x40036a1	         0xfb64101	               movzx eax, byte [rcx + 1]	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x40036a5	    0xf68400000000	                test byte [rax + rax], 4	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x40036ad	     0xf8495000000	                            je 0x4003748	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x40036b3	            0x31d2	                            xor edx, edx	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x40036b5	      0xbe00000000	                              mov esi, 0	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x40036ba	      0xe800000000	                          call 0x40036bf	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x40036bf	    0x488b15000000	            mov rdx, qword [0x040036c6] 	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x40036c6	          0x4189c5	                           mov r13d, eax	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x40036c9	           0xfb60a	                   movzx ecx, byte [rdx]	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x40036cc	      0xe92affffff	                           jmp 0x40035fb	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x40036d1	        0x4883cb30	                            or rbx, 0x30	       833	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40036d5	        0x4983c501	                              add r13, 1	       834	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40036d9	        0x4983ef01	                              sub r15, 1	       834	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40036dd	      0xe97efbffff	                           jmp 0x4003260	       834	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40036e2	        0x488d4802	                      lea rcx, [rax + 2]	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40036e6	    0x48890d000000	            mov qword [0x040036ed], rcx 	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40036ed	         0xfb65002	               movzx edx, byte [rax + 2]	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40036f1	      0xe9dafeffff	                           jmp 0x40035d0	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40036f6	        0x4883c001	                              add rax, 1	      1146	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x40036fa	      0x4489442408	                mov dword [rsp + 8], r8d	      1146	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x40036ff	    0x488905000000	            mov qword [0x04003706], rax 	      1146	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4003706	      0xe800000000	                          call 0x400370b	      1147	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	CALL_35
0x400370b	          0x4885c0	                           test rax, rax	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x400370e	          0x4989c1	                             mov r9, rax	      1147	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	CALL_35
0x4003711	      0x448b442408	                mov r8d, dword [rsp + 8]	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4003716	     0xf8465010000	                            je 0x4003881	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x400371c	    0x488b05000000	            mov rax, qword [0x04003723] 	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4003723	          0x80382c	                    cmp byte [rax], 0x2c	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4003726	     0xf84e1000000	                            je 0x400380d	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x400372c	      0xbf00000000	                              mov edi, 0	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4003731	      0xb90d000000	                            mov ecx, 0xd	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4003736	          0x4c89e6	                            mov rsi, r12	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4003739	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x400373b	        0x410f94c7	                               sete r15b	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x400373f	        0x450fb6ff	                        movzx r15d, r15b	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4003743	      0xe9bdfbffff	                           jmp 0x4003305	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4003748	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1110	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_22
0x400374d	      0xe800000000	                          call 0x4003752	      1110	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_22
0x4003752	           0xfbef8	                           movsx edi, al	      1111	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_23
0x4003755	      0xe800000000	                          call 0x400375a	      1111	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_23
0x400375a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x400375f	    0x488b35000000	            mov rsi, qword [0x04003766] 	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4003766	      0xba01000000	                              mov edx, 1	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x400376b	          0x4829fe	                            sub rsi, rdi	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x400376e	      0xe82de4ffff	           call sym.obj_elf_section_type	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4003773	    0x488b15000000	            mov rdx, qword [0x0400377a] 	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x400377a	          0x4189c5	                           mov r13d, eax	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x400377d	           0xfb60a	                   movzx ecx, byte [rdx]	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4003780	      0xe976feffff	                           jmp 0x40035fb	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4003785	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x400378a	      0xe800000000	                          call 0x400378f	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x400378f	          0x4885c0	                           test rax, rax	      1093	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4003792	          0x4989c0	                             mov r8, rax	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x4003795	      0x4889442430	             mov qword [rsp + 0x30], rax	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x400379a	     0xf84dbf9ffff	                            je 0x400317b	      1093	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x40037a0	          0x4c89c7	                             mov rdi, r8	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037a3	            0x31c0	                            xor eax, eax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037a5	        0x4883c9ff	              or rcx, 0xffffffffffffffff	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037a9	            0xf2ae	              repne scasb al, byte [rdi]	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037ab	      0xba01000000	                              mov edx, 1	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037b0	          0x4c89c7	                             mov rdi, r8	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037b3	          0x4889c8	                            mov rax, rcx	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037b6	          0x48f7d0	                                 not rax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037b9	        0x488d70ff	                      lea rsi, [rax - 1]	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037bd	      0xe8dee3ffff	           call sym.obj_elf_section_type	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037c2	    0x488b15000000	            mov rdx, qword [0x040037c9] 	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037c9	          0x4189c5	                           mov r13d, eax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037cc	           0xfb60a	                   movzx ecx, byte [rdx]	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037cf	      0xe927feffff	                           jmp 0x40035fb	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x40037d4	        0x488d4802	                      lea rcx, [rax + 2]	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x40037d8	    0x48890d000000	            mov qword [0x040037df], rcx 	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x40037df	         0xfb65002	               movzx edx, byte [rax + 2]	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x40037e3	      0xe953fbffff	                           jmp 0x400333b	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x40037e8	        0x4883c201	                              add rdx, 1	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x40037ec	    0x488915000000	            mov qword [0x040037f3], rdx 	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x40037f3	      0xe955feffff	                           jmp 0x400364d	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x40037f8	        0x4883c202	                              add rdx, 2	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x40037fc	    0x488915000000	            mov qword [0x04003803], rdx 	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4003803	      0xe92dfeffff	                           jmp 0x4003635	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4003808	      0xe800000000	                          call 0x400380d	      1230	obj-elf.c	FUNCTION_25
0x400380d	        0x488d5001	                      lea rdx, [rax + 1]	      1152	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4003811	    0x488915000000	            mov qword [0x04003818], rdx 	      1152	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4003818	        0x80780120	                cmp byte [rax + 1], 0x20	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x400381c	            0x750b	                           jne 0x4003829	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x400381e	        0x4883c002	                              add rax, 2	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4003822	    0x488905000000	            mov qword [0x04003829], rax 	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4003829	    0x488b0d000000	            mov rcx, qword [0x04003830] 	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4003830	      0xba06000000	                              mov edx, 6	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4003835	      0xbe00000000	                              mov esi, 0	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x400383a	      0x4489442418	             mov dword [rsp + 0x18], r8d	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x400383f	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4003844	          0x4531ff	                          xor r15d, r15d	      1045	obj-elf.c	FUNCTION_25
0x4003847	          0x4889cf	                            mov rdi, rcx	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x400384a	      0x48894c2408	                mov qword [rsp + 8], rcx	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x400384f	      0xe800000000	                          call 0x4003854	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4003854	            0x85c0	                           test eax, eax	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4003856	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x400385b	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4003860	     0xf859ffaffff	                           jne 0x4003305	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4003866	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x400386b	    0x41bf01000000	                             mov r15d, 1	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4003871	        0x4883c106	                              add rcx, 6	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4003875	    0x48890d000000	            mov qword [0x0400387c], rcx 	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x400387c	      0xe984faffff	                           jmp 0x4003305	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4003881	          0x80e7fd	                            and bh, 0xfd	      1149	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4003884	          0x4531ff	                          xor r15d, r15d	      1045	obj-elf.c	FUNCTION_25
0x4003887	      0xe979faffff	                           jmp 0x4003305	      1045	obj-elf.c	FUNCTION_25
0x400388c	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4003891	      0xbf00000000	                              mov edi, 0	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4003896	            0x31c0	                            xor eax, eax	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4003898	      0xe800000000	                          call 0x400389d	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
elf_common_parse	functions,0:SWITCH,0:IF,8:DO,0:ELSE,4:FOR,0:WHILE,2:CALL,15	126
0x4000860	            0x4155	                                push r13	       309	obj-elf.c	FUNCTION_11
0x4000862	            0x4154	                                push r12	       309	obj-elf.c	FUNCTION_11
0x4000864	          0x4889f7	                            mov rdi, rsi	       311	obj-elf.c	FUNCTION_11	CALL_1
0x4000867	              0x55	                                push rbp	       309	obj-elf.c	FUNCTION_11
0x4000868	              0x53	                                push rbx	       309	obj-elf.c	FUNCTION_11
0x4000869	          0x4989d5	                            mov r13, rdx	       309	obj-elf.c	FUNCTION_11
0x400086c	          0x4889f3	                            mov rbx, rsi	       309	obj-elf.c	FUNCTION_11
0x400086f	            0x31ed	                            xor ebp, ebp	       309	obj-elf.c	FUNCTION_11
0x4000871	        0x4883ec08	                              sub rsp, 8	       309	obj-elf.c	FUNCTION_11
0x4000875	      0xe800000000	                          call 0x400087a	       311	obj-elf.c	FUNCTION_11	CALL_1
0x400087a	          0x448b20	                   mov r12d, dword [rax]	       311	obj-elf.c	FUNCTION_11	CALL_1
0x400087d	    0x488b05000000	            mov rax, qword [0x04000884] 	       313	obj-elf.c	FUNCTION_11	IF_1
0x4000884	          0x80382c	                    cmp byte [rax], 0x2c	       313	obj-elf.c	FUNCTION_11	IF_1
0x4000887	            0x743f	                            je 0x40008c8	       313	obj-elf.c	FUNCTION_11	IF_1
0x4000889	          0x4585e4	                         test r12d, r12d	       361	obj-elf.c	FUNCTION_11	IF_8
0x400088c	     0xf848e000000	                            je 0x4000920	       361	obj-elf.c	FUNCTION_11	IF_8
0x4000892	          0x4889df	                            mov rdi, rbx	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x4000895	            0x89ea	                            mov edx, ebp	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x4000897	          0x4c89ee	                            mov rsi, r13	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x400089a	      0xe800000000	                          call 0x400089f	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x400089f	          0x4889df	                            mov rdi, rbx	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x40008a2	      0xe800000000	                          call 0x40008a7	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x40008a7	          0x4889df	                            mov rdi, rbx	       374	obj-elf.c	FUNCTION_11	CALL_15
0x40008aa	      0xe800000000	                          call 0x40008af	       374	obj-elf.c	FUNCTION_11	CALL_15
0x40008af	    0x814818000001	          or dword [rax + 0x18], 0x10000	       374	obj-elf.c	FUNCTION_11	CALL_15
0x40008b6	          0x4889d8	                            mov rax, rbx	       376	obj-elf.c	FUNCTION_11
0x40008b9	        0x4883c408	                              add rsp, 8	       377	obj-elf.c	FUNCTION_11
0x40008bd	              0x5b	                                 pop rbx	       377	obj-elf.c	FUNCTION_11
0x40008be	              0x5d	                                 pop rbp	       377	obj-elf.c	FUNCTION_11
0x40008bf	            0x415c	                                 pop r12	       377	obj-elf.c	FUNCTION_11
0x40008c1	            0x415d	                                 pop r13	       377	obj-elf.c	FUNCTION_11
0x40008c3	              0xc3	                                     ret	       377	obj-elf.c	FUNCTION_11
0x40008c4	         0xf1f4000	                         nop dword [rax]	       377	obj-elf.c	FUNCTION_11
0x40008c8	        0x488d5001	                      lea rdx, [rax + 1]	       317	obj-elf.c	FUNCTION_11	IF_1
0x40008cc	    0x488915000000	            mov qword [0x040008d3], rdx 	       317	obj-elf.c	FUNCTION_11	IF_1
0x40008d3	         0xfb64801	               movzx ecx, byte [rax + 1]	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x40008d7	          0x80f920	                            cmp cl, 0x20	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x40008da	     0xf84a0000000	                            je 0x4000980	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x40008e0	          0x80f922	                            cmp cl, 0x22	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x40008e3	            0x7573	                           jne 0x4000958	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x40008e5	        0x488d4201	                      lea rax, [rdx + 1]	       323	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x40008e9	    0x488905000000	            mov qword [0x040008f0], rax 	       323	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x40008f0	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       325	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40008f4	     0xf84c6000000	                            je 0x40009c0	       325	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40008fa	      0xbf00000000	                              mov edi, 0	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40008ff	      0xb904000000	                              mov ecx, 4	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x4000904	          0x4889c6	                            mov rsi, rax	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x4000907	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x4000909	     0xf8589000000	                           jne 0x4000998	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x400090f	        0x4883c004	                              add rax, 4	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x4000913	            0x31ed	                            xor ebp, ebp	       310	obj-elf.c	FUNCTION_11
0x4000915	    0x488905000000	            mov qword [0x0400091c], rax 	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x400091c	         0xf1f4000	                         nop dword [rax]	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x4000920	          0x4c89ee	                            mov rsi, r13	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x4000923	          0x4889df	                            mov rdi, rbx	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x4000926	      0xe800000000	                          call 0x400092b	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x400092b	          0x4889df	                            mov rdi, rbx	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x400092e	      0xe800000000	                          call 0x4000933	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x4000933	          0x4889df	                            mov rdi, rbx	       370	obj-elf.c	FUNCTION_11	ELSE_4	CALL_13
0x4000936	        0x48896830	             mov qword [rax + 0x30], rbp	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x400093a	      0xe800000000	                          call 0x400093f	       370	obj-elf.c	FUNCTION_11	ELSE_4	CALL_13
0x400093f	    0x488b35000000	            mov rsi, qword [0x04000946] 	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x4000946	          0x4889df	                            mov rdi, rbx	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x4000949	      0xe800000000	                          call 0x400094e	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x400094e	      0xe954ffffff	                           jmp 0x40008a7	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x4000953	       0xf1f440000	                   nop dword [rax + rax]	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x4000958	          0x4489e7	                           mov edi, r12d	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x400095b	    0x488905000000	            mov qword [0x04000962], rax 	       354	obj-elf.c	FUNCTION_11	IF_1	ELSE_3
0x4000962	      0xe800000000	                          call 0x4000967	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x4000967	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       356	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x400096b	          0x4889c5	                            mov rbp, rax	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x400096e	     0xf8515ffffff	                           jne 0x4000889	       356	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x4000974	            0x31c0	                            xor eax, eax	       357	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x4000976	      0xe93effffff	                           jmp 0x40008b9	       357	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x400097b	       0xf1f440000	                   nop dword [rax + rax]	       357	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x4000980	        0x488d5002	                      lea rdx, [rax + 2]	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4000984	    0x488915000000	            mov qword [0x0400098b], rdx 	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x400098b	         0xfb64802	               movzx ecx, byte [rax + 2]	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x400098f	      0xe94cffffff	                           jmp 0x40008e0	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4000994	         0xf1f4000	                         nop dword [rax]	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4000998	      0xbf00000000	                              mov edi, 0	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x400099d	      0xb905000000	                              mov ecx, 5	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40009a2	          0x4889c6	                            mov rsi, rax	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40009a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40009a7	            0x7527	                           jne 0x40009d0	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40009a9	        0x4883c005	                              add rax, 5	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40009ad	            0x31ed	                            xor ebp, ebp	       310	obj-elf.c	FUNCTION_11
0x40009af	    0x488905000000	            mov qword [0x040009b6], rax 	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40009b6	      0xe965ffffff	                           jmp 0x4000920	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40009bb	       0xf1f440000	                   nop dword [rax + rax]	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40009c0	        0x488d4202	                      lea rax, [rdx + 2]	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40009c4	    0x488905000000	            mov qword [0x040009cb], rax 	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40009cb	      0xe92affffff	                           jmp 0x40008fa	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40009d0	          0x4889c3	                            mov rbx, rax	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40009d3	       0xf1f440000	                   nop dword [rax + rax]	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x40009d8	        0x4883eb01	                              sub rbx, 1	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40009dc	          0x803b22	                    cmp byte [rbx], 0x22	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40009df	            0x75f7	                           jne 0x40009d8	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40009e1	            0xeb19	                           jmp 0x40009fc	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40009e3	       0xf1f440000	                   nop dword [rax + rax]	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40009e8	        0x488d5001	                      lea rdx, [rax + 1]	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x40009ec	    0x488915000000	            mov qword [0x040009f3], rdx 	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x40009f3	        0x807aff22	                cmp byte [rdx - 1], 0x22	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x40009f7	            0x7449	                            je 0x4000a42	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x40009f9	          0x4889d0	                            mov rax, rdx	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x40009fc	           0xfb610	                   movzx edx, byte [rax]	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x40009ff	    0x80ba00000000	                       cmp byte [rdx], 0	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000a06	          0x4889d5	                            mov rbp, rdx	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000a09	            0x74dd	                            je 0x40009e8	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4000a0b	      0xba05000000	                              mov edx, 5	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000a10	      0xbe00000000	                              mov esi, 0	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000a15	            0x31ff	                            xor edi, edi	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000a17	          0xc60000	                       mov byte [rax], 0	       343	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000a1a	      0xe800000000	                          call 0x4000a1f	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000a1f	          0x4889de	                            mov rsi, rbx	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000a22	          0x4889c7	                            mov rdi, rax	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000a25	            0x31c0	                            xor eax, eax	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000a27	      0xe800000000	                          call 0x4000a2c	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4000a2c	    0x488b05000000	            mov rax, qword [0x04000a33] 	       345	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000a33	          0x408828	                     mov byte [rax], bpl	       345	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000a36	      0xe800000000	                          call 0x4000a3b	       346	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_7
0x4000a3b	            0x31c0	                            xor eax, eax	       347	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000a3d	      0xe977feffff	                           jmp 0x40008b9	       347	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000a42	         0xfb66801	               movzx ebp, byte [rax + 1]	       347	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4000a46	          0x4889d0	                            mov rax, rdx	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x4000a49	            0xebc0	                           jmp 0x4000a0b	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
obj_elf_get_vtable_inherit	functions,0:SWITCH,0:IF,6:DO,0:ELSE,1:FOR,0:WHILE,0:CALL,20	152
0x40038c0	            0x4155	                                push r13	      1458	obj-elf.c	FUNCTION_35
0x40038c2	            0x4154	                                push r12	      1458	obj-elf.c	FUNCTION_35
0x40038c4	              0x55	                                push rbp	      1458	obj-elf.c	FUNCTION_35
0x40038c5	              0x53	                                push rbx	      1458	obj-elf.c	FUNCTION_35
0x40038c6	        0x4883ec28	                           sub rsp, 0x28	      1458	obj-elf.c	FUNCTION_35
0x40038ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	obj-elf.c	FUNCTION_35
0x40038d3	      0x4889442418	             mov qword [rsp + 0x18], rax	      1458	obj-elf.c	FUNCTION_35
0x40038d8	            0x31c0	                            xor eax, eax	      1458	obj-elf.c	FUNCTION_35
0x40038da	    0x488b05000000	            mov rax, qword [0x040038e1] 	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40038e1	          0x803823	                    cmp byte [rax], 0x23	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40038e4	     0xf84c6010000	                            je 0x4003ab0	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40038ea	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40038ef	      0xe800000000	                          call 0x40038f4	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40038f4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x40038f9	          0x4189c4	                           mov r12d, eax	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40038fc	      0xe800000000	                          call 0x4003901	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x4003901	          0x4885c0	                           test rax, rax	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x4003904	          0x4889c3	                            mov rbx, rax	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x4003907	     0xf84b3010000	                            je 0x4003ac0	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x400390d	          0x4889c7	                            mov rdi, rax	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x4003910	      0xe800000000	                          call 0x4003915	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x4003915	          0x4885c0	                           test rax, rax	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x4003918	     0xf84a2010000	                            je 0x4003ac0	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x400391e	            0x31ed	                            xor ebp, ebp	      1461	obj-elf.c	FUNCTION_35
0x4003920	    0x488b05000000	            mov rax, qword [0x04003927] 	      1480	obj-elf.c	FUNCTION_35
0x4003927	          0x448820	                    mov byte [rax], r12b	      1480	obj-elf.c	FUNCTION_35
0x400392a	    0x488b05000000	            mov rax, qword [0x04003931] 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003931	           0xfb610	                   movzx edx, byte [rax]	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003934	          0x80fa22	                            cmp dl, 0x22	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003937	     0xf845b010000	                            je 0x4003a98	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400393d	          0x80fa20	                            cmp dl, 0x20	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003940	     0xf840a010000	                            je 0x4003a50	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003946	          0x80fa2c	                            cmp dl, 0x2c	      1483	obj-elf.c	FUNCTION_35	IF_3
0x4003949	     0xf851c010000	                           jne 0x4003a6b	      1483	obj-elf.c	FUNCTION_35	IF_3
0x400394f	        0x488d4801	                      lea rcx, [rax + 1]	      1490	obj-elf.c	FUNCTION_35
0x4003953	    0x48890d000000	            mov qword [0x0400395a], rcx 	      1490	obj-elf.c	FUNCTION_35
0x400395a	         0xfb65001	               movzx edx, byte [rax + 1]	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x400395e	          0x80fa20	                            cmp dl, 0x20	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x4003961	     0xf84a9010000	                            je 0x4003b10	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x4003967	          0x80fa23	                            cmp dl, 0x23	      1493	obj-elf.c	FUNCTION_35	IF_4
0x400396a	     0xf8480010000	                            je 0x4003af0	      1493	obj-elf.c	FUNCTION_35	IF_4
0x4003970	          0x80fa30	                            cmp dl, 0x30	      1496	obj-elf.c	FUNCTION_35	IF_5
0x4003973	     0xf8497000000	                            je 0x4003a10	      1496	obj-elf.c	FUNCTION_35	IF_5
0x4003979	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x400397e	      0xe800000000	                          call 0x4003983	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x4003983	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x4003988	          0x4189c4	                           mov r12d, eax	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x400398b	      0xe800000000	                          call 0x4003990	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x4003990	        0x410fbefc	                         movsx edi, r12b	      1507	obj-elf.c	FUNCTION_35	ELSE_1	CALL_15
0x4003994	          0x4989c5	                            mov r13, rax	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x4003997	      0xe800000000	                          call 0x400399c	      1507	obj-elf.c	FUNCTION_35	ELSE_1	CALL_15
0x400399c	      0xe800000000	                          call 0x40039a1	      1510	obj-elf.c	FUNCTION_35	CALL_16
0x40039a1	          0x4084ed	                           test bpl, bpl	      1512	obj-elf.c	FUNCTION_35	IF_6
0x40039a4	     0xf859f000000	                           jne 0x4003a49	      1512	obj-elf.c	FUNCTION_35	IF_6
0x40039aa	          0x4889df	                            mov rdi, rbx	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40039ad	      0xe800000000	                          call 0x40039b2	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40039b2	        0x80781802	                cmp byte [rax + 0x18], 2	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40039b6	     0xf856d010000	                           jne 0x4003b29	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x40039bc	          0x4889df	                            mov rdi, rbx	      1517	obj-elf.c	FUNCTION_35	CALL_20
0x40039bf	      0xe800000000	                          call 0x40039c4	      1517	obj-elf.c	FUNCTION_35	CALL_20
0x40039c4	          0x4889df	                            mov rdi, rbx	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039c7	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039cb	      0xe800000000	                          call 0x40039d0	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039d0	        0x4883ec08	                              sub rsp, 8	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039d4	          0x4c89e9	                            mov rcx, r13	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039d7	            0x31d2	                            xor edx, edx	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039d9	      0x68a3050000	                              push 0x5a3	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039de	          0x4531c9	                            xor r9d, r9d	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039e1	          0x4531c0	                            xor r8d, r8d	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039e4	            0x89ee	                            mov esi, ebp	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039e6	          0x4889c7	                            mov rdi, rax	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039e9	      0xe800000000	                          call 0x40039ee	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039ee	              0x5a	                                 pop rdx	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039ef	              0x59	                                 pop rcx	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40039f0	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1519	obj-elf.c	FUNCTION_35
0x40039f5	    0x644833342528	                xor rsi, qword fs:[0x28]	      1519	obj-elf.c	FUNCTION_35
0x40039fe	     0xf8520010000	                           jne 0x4003b24	      1519	obj-elf.c	FUNCTION_35
0x4003a04	        0x4883c428	                           add rsp, 0x28	      1519	obj-elf.c	FUNCTION_35
0x4003a08	              0x5b	                                 pop rbx	      1519	obj-elf.c	FUNCTION_35
0x4003a09	              0x5d	                                 pop rbp	      1519	obj-elf.c	FUNCTION_35
0x4003a0a	            0x415c	                                 pop r12	      1519	obj-elf.c	FUNCTION_35
0x4003a0c	            0x415d	                                 pop r13	      1519	obj-elf.c	FUNCTION_35
0x4003a0e	              0xc3	                                     ret	      1519	obj-elf.c	FUNCTION_35
0x4003a0f	              0x90	                                     nop	      1519	obj-elf.c	FUNCTION_35
0x4003a10	         0xfb64101	               movzx eax, byte [rcx + 1]	      1497	obj-elf.c	FUNCTION_35	IF_5
0x4003a14	            0x84c0	                             test al, al	      1497	obj-elf.c	FUNCTION_35	IF_5
0x4003a16	            0x740e	                            je 0x4003a26	      1497	obj-elf.c	FUNCTION_35	IF_5
0x4003a18	    0xf68400000000	            test byte [rax + rax], 0x40 	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4003a20	     0xf8453ffffff	                            je 0x4003979	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4003a26	      0xbf00000000	                              mov edi, 0	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x4003a2b	      0xe800000000	                          call 0x4003a30	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x4003a30	    0x488305000000	               add qword [0x04003a38], 1	      1501	obj-elf.c	FUNCTION_35	IF_5
0x4003a38	          0x4989c5	                            mov r13, rax	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x4003a3b	      0xe800000000	                          call 0x4003a40	      1510	obj-elf.c	FUNCTION_35	CALL_16
0x4003a40	          0x4084ed	                           test bpl, bpl	      1512	obj-elf.c	FUNCTION_35	IF_6
0x4003a43	     0xf8461ffffff	                            je 0x40039aa	      1512	obj-elf.c	FUNCTION_35	IF_6
0x4003a49	            0x31c0	                            xor eax, eax	      1513	obj-elf.c	FUNCTION_35	IF_6
0x4003a4b	            0xeba3	                           jmp 0x40039f0	      1513	obj-elf.c	FUNCTION_35	IF_6
0x4003a4d	           0xf1f00	                         nop dword [rax]	      1513	obj-elf.c	FUNCTION_35	IF_6
0x4003a50	        0x488d4801	                      lea rcx, [rax + 1]	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003a54	    0x48890d000000	            mov qword [0x04003a5b], rcx 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003a5b	         0xfb65001	               movzx edx, byte [rax + 1]	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003a5f	          0x4889c8	                            mov rax, rcx	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003a62	          0x80fa2c	                            cmp dl, 0x2c	      1483	obj-elf.c	FUNCTION_35	IF_3
0x4003a65	     0xf84e4feffff	                            je 0x400394f	      1483	obj-elf.c	FUNCTION_35	IF_3
0x4003a6b	      0xba05000000	                              mov edx, 5	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003a70	      0xbe00000000	                              mov esi, 0	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003a75	            0x31ff	                            xor edi, edi	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003a77	      0xe800000000	                          call 0x4003a7c	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003a7c	          0x4889c7	                            mov rdi, rax	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003a7f	            0x31c0	                            xor eax, eax	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003a81	      0xe800000000	                          call 0x4003a86	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003a86	      0xe800000000	                          call 0x4003a8b	      1486	obj-elf.c	FUNCTION_35	IF_3	CALL_9
0x4003a8b	            0x31c0	                            xor eax, eax	      1487	obj-elf.c	FUNCTION_35	IF_3
0x4003a8d	      0xe95effffff	                           jmp 0x40039f0	      1487	obj-elf.c	FUNCTION_35	IF_3
0x4003a92	    0x660f1f440000	                    nop word [rax + rax]	      1487	obj-elf.c	FUNCTION_35	IF_3
0x4003a98	        0x488d4801	                      lea rcx, [rax + 1]	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003a9c	    0x48890d000000	            mov qword [0x04003aa3], rcx 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003aa3	         0xfb65001	               movzx edx, byte [rax + 1]	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003aa7	          0x4889c8	                            mov rax, rcx	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003aaa	      0xe98efeffff	                           jmp 0x400393d	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003aaf	              0x90	                                     nop	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003ab0	        0x4883c001	                              add rax, 1	      1464	obj-elf.c	FUNCTION_35	IF_1
0x4003ab4	    0x488905000000	            mov qword [0x04003abb], rax 	      1464	obj-elf.c	FUNCTION_35	IF_1
0x4003abb	      0xe92afeffff	                           jmp 0x40038ea	      1464	obj-elf.c	FUNCTION_35	IF_1
0x4003ac0	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003ac5	      0xba05000000	                              mov edx, 5	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003aca	      0xbe00000000	                              mov esi, 0	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003acf	            0x31ff	                            xor edi, edi	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003ad1	      0xe800000000	                          call 0x4003ad6	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003ad6	          0x4889ee	                            mov rsi, rbp	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003ad9	          0x4889c7	                            mov rdi, rax	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003adc	            0x31c0	                            xor eax, eax	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003ade	      0xe800000000	                          call 0x4003ae3	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003ae3	      0xbd01000000	                              mov ebp, 1	      1477	obj-elf.c	FUNCTION_35	IF_2
0x4003ae8	      0xe933feffff	                           jmp 0x4003920	      1477	obj-elf.c	FUNCTION_35	IF_2
0x4003aed	           0xf1f00	                         nop dword [rax]	      1477	obj-elf.c	FUNCTION_35	IF_2
0x4003af0	        0x488d4101	                      lea rax, [rcx + 1]	      1494	obj-elf.c	FUNCTION_35	IF_4
0x4003af4	    0x488905000000	            mov qword [0x04003afb], rax 	      1494	obj-elf.c	FUNCTION_35	IF_4
0x4003afb	         0xfb65101	               movzx edx, byte [rcx + 1]	      1494	obj-elf.c	FUNCTION_35	IF_4
0x4003aff	          0x4889c1	                            mov rcx, rax	      1494	obj-elf.c	FUNCTION_35	IF_4
0x4003b02	      0xe969feffff	                           jmp 0x4003970	      1494	obj-elf.c	FUNCTION_35	IF_4
0x4003b07	    0x660f1f840000	                    nop word [rax + rax]	      1494	obj-elf.c	FUNCTION_35	IF_4
0x4003b10	        0x488d4802	                      lea rcx, [rax + 2]	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x4003b14	    0x48890d000000	            mov qword [0x04003b1b], rcx 	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x4003b1b	         0xfb65002	               movzx edx, byte [rax + 2]	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x4003b1f	      0xe943feffff	                           jmp 0x4003967	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x4003b24	      0xe800000000	                          call 0x4003b29	      1519	obj-elf.c	FUNCTION_35
0x4003b29	      0xba00000000	                              mov edx, 0	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003b2e	      0xbeeb050000	                          mov esi, 0x5eb	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003b33	      0xbf00000000	                              mov edi, 0	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003b38	      0xe800000000	                          call 0x4003b3d	      1515	obj-elf.c	FUNCTION_35	CALL_17
obj_elf_symver	functions,0:SWITCH,0:IF,5:DO,0:ELSE,1:FOR,0:WHILE,0:CALL,31	157
0x4002410	            0x4154	                                push r12	      1387	obj-elf.c	FUNCTION_34
0x4002412	              0x55	                                push rbp	      1387	obj-elf.c	FUNCTION_34
0x4002413	              0x53	                                push rbx	      1387	obj-elf.c	FUNCTION_34
0x4002414	        0x4883ec10	                           sub rsp, 0x10	      1387	obj-elf.c	FUNCTION_34
0x4002418	          0x4889e7	                            mov rdi, rsp	       413	obj-elf.c	FUNCTION_15	CALL_1
0x400241b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1387	obj-elf.c	FUNCTION_34
0x4002424	      0x4889442408	                mov qword [rsp + 8], rax	      1387	obj-elf.c	FUNCTION_34
0x4002429	            0x31c0	                            xor eax, eax	      1387	obj-elf.c	FUNCTION_34
0x400242b	      0xe800000000	                          call 0x4002430	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4002430	        0x488b3c24	                    mov rdi, qword [rsp]	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4002434	            0x89c5	                            mov ebp, eax	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4002436	      0xe800000000	                          call 0x400243b	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400243b	          0x4889c3	                            mov rbx, rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400243e	    0x488b05000000	            mov rax, qword [0x04002445] 	       415	obj-elf.c	FUNCTION_15
0x4002445	          0x408828	                     mov byte [rax], bpl	       415	obj-elf.c	FUNCTION_15
0x4002448	    0x488b05000000	            mov rax, qword [0x0400244f] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400244f	           0xfb610	                   movzx edx, byte [rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002452	          0x80fa22	                            cmp dl, 0x22	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002455	     0xf841d010000	                            je 0x4002578	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400245b	          0x80fa20	                            cmp dl, 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400245e	     0xf84d4000000	                            je 0x4002538	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002464	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002468	     0xf84df000000	                            je 0x400254d	       419	obj-elf.c	FUNCTION_15	IF_1
0x400246e	          0x80382c	                    cmp byte [rax], 0x2c	      1395	obj-elf.c	FUNCTION_34	IF_1
0x4002471	            0x743d	                            je 0x40024b0	      1395	obj-elf.c	FUNCTION_34	IF_1
0x4002473	      0xba05000000	                              mov edx, 5	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4002478	      0xbe00000000	                              mov esi, 0	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x400247d	            0x31ff	                            xor edi, edi	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x400247f	      0xe800000000	                          call 0x4002484	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4002484	          0x4889c7	                            mov rdi, rax	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4002487	            0x31c0	                            xor eax, eax	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4002489	      0xe800000000	                          call 0x400248e	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x400248e	      0xe800000000	                          call 0x4002493	      1398	obj-elf.c	FUNCTION_34	IF_1	CALL_4
0x4002493	      0x488b442408	                mov rax, qword [rsp + 8]	      1450	obj-elf.c	FUNCTION_34
0x4002498	    0x644833042528	                xor rax, qword fs:[0x28]	      1450	obj-elf.c	FUNCTION_34
0x40024a1	     0xf85ef010000	                           jne 0x4002696	      1450	obj-elf.c	FUNCTION_34
0x40024a7	        0x4883c410	                           add rsp, 0x10	      1450	obj-elf.c	FUNCTION_34
0x40024ab	              0x5b	                                 pop rbx	      1450	obj-elf.c	FUNCTION_34
0x40024ac	              0x5d	                                 pop rbp	      1450	obj-elf.c	FUNCTION_34
0x40024ad	            0x415c	                                 pop r12	      1450	obj-elf.c	FUNCTION_34
0x40024af	              0xc3	                                     ret	      1450	obj-elf.c	FUNCTION_34
0x40024b0	        0x488d5001	                      lea rdx, [rax + 1]	      1402	obj-elf.c	FUNCTION_34
0x40024b4	    0x488915000000	            mov qword [0x040024bb], rdx 	      1402	obj-elf.c	FUNCTION_34
0x40024bb	        0x80780120	                cmp byte [rax + 1], 0x20	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024bf	     0xf845b010000	                            je 0x4002620	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x40024c5	     0xfb62d000000	           movzx ebp, byte [0x040024cc] 	      1406	obj-elf.c	FUNCTION_34
0x40024cc	          0x4889e7	                            mov rdi, rsp	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40024cf	            0x89e8	                            mov eax, ebp	      1407	obj-elf.c	FUNCTION_34
0x40024d1	          0x83c801	                               or eax, 1	      1407	obj-elf.c	FUNCTION_34
0x40024d4	    0x880500000000	               mov byte [0x040024da], al	      1407	obj-elf.c	FUNCTION_34
0x40024da	      0xe800000000	                          call 0x40024df	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40024df	          0x4889df	                            mov rdi, rbx	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40024e2	          0x4189c4	                           mov r12d, eax	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40024e5	    0x40882d000000	              mov byte [0x040024ec], bpl	      1409	obj-elf.c	FUNCTION_34
0x40024ec	      0xe800000000	                          call 0x40024f1	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40024f1	            0x85c0	                           test eax, eax	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40024f3	          0x4889df	                            mov rdi, rbx	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40024f6	     0xf8494000000	                            je 0x4002590	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40024fc	      0xe800000000	                          call 0x4002501	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002501	        0x488b1c24	                    mov rbx, qword [rsp]	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002505	          0x4889c5	                            mov rbp, rax	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002508	      0xba05000000	                              mov edx, 5	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x400250d	      0xbe00000000	                              mov esi, 0	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x4002512	            0x31ff	                            xor edi, edi	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002514	      0xe800000000	                          call 0x4002519	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002519	          0x4889ea	                            mov rdx, rbp	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x400251c	          0x4889c7	                            mov rdi, rax	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x400251f	          0x4889de	                            mov rsi, rbx	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002522	            0x31c0	                            xor eax, eax	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002524	      0xe800000000	                          call 0x4002529	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002529	      0xe800000000	                          call 0x400252e	      1431	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_22
0x400252e	      0xe960ffffff	                           jmp 0x4002493	      1432	obj-elf.c	FUNCTION_34	IF_3	IF_4
0x4002533	       0xf1f440000	                   nop dword [rax + rax]	      1432	obj-elf.c	FUNCTION_34	IF_3	IF_4
0x4002538	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400253c	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002540	    0x488905000000	            mov qword [0x04002547], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002547	     0xf8521ffffff	                           jne 0x400246e	       419	obj-elf.c	FUNCTION_15	IF_1
0x400254d	      0xba05000000	                              mov edx, 5	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002552	      0xbe00000000	                              mov esi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002557	            0x31ff	                            xor edi, edi	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002559	      0xe800000000	                          call 0x400255e	       420	obj-elf.c	FUNCTION_15	CALL_5
0x400255e	          0x4889c7	                            mov rdi, rax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002561	            0x31c0	                            xor eax, eax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002563	      0xe800000000	                          call 0x4002568	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002568	    0x488b05000000	            mov rax, qword [0x0400256f] 	       420	obj-elf.c	FUNCTION_15	CALL_5
0x400256f	      0xe9fafeffff	                           jmp 0x400246e	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002574	         0xf1f4000	                         nop dword [rax]	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002578	        0x488d4801	                      lea rcx, [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400257c	    0x48890d000000	            mov qword [0x04002583], rcx 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002583	         0xfb65001	               movzx edx, byte [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002587	          0x4889c8	                            mov rax, rcx	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400258a	      0xe9ccfeffff	                           jmp 0x400245b	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400258f	              0x90	                                     nop	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002590	      0xe800000000	                          call 0x4002595	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x4002595	      0x4883781000	               cmp qword [rax + 0x10], 0	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x400259a	     0xf8490000000	                            je 0x4002630	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x40025a0	        0x488b2c24	                    mov rbp, qword [rsp]	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025a4	          0x4889df	                            mov rdi, rbx	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025a7	      0xe800000000	                          call 0x40025ac	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025ac	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025b0	          0x4889ee	                            mov rsi, rbp	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025b3	      0xe800000000	                          call 0x40025b8	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025b8	            0x85c0	                           test eax, eax	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025ba	            0x7514	                           jne 0x40025d0	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40025bc	        0x410fbefc	                         movsx edi, r12b	      1446	obj-elf.c	FUNCTION_34	ELSE_1	CALL_30
0x40025c0	      0xe800000000	                          call 0x40025c5	      1446	obj-elf.c	FUNCTION_34	ELSE_1	CALL_30
0x40025c5	      0xe800000000	                          call 0x40025ca	      1449	obj-elf.c	FUNCTION_34	CALL_31
0x40025ca	      0xe9c4feffff	                           jmp 0x4002493	      1449	obj-elf.c	FUNCTION_34	CALL_31
0x40025cf	              0x90	                                     nop	      1449	obj-elf.c	FUNCTION_34	CALL_31
0x40025d0	          0x4889df	                            mov rdi, rbx	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025d3	      0xe800000000	                          call 0x40025d8	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025d8	          0x4889df	                            mov rdi, rbx	      1440	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_27
0x40025db	          0x4989c4	                            mov r12, rax	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025de	      0xe800000000	                          call 0x40025e3	      1440	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_27
0x40025e3	        0x488b1c24	                    mov rbx, qword [rsp]	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025e7	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025eb	            0x31ff	                            xor edi, edi	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025ed	      0xba05000000	                              mov edx, 5	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025f2	      0xbe00000000	                              mov esi, 0	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025f7	      0xe800000000	                          call 0x40025fc	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025fc	          0x4c89e1	                            mov rcx, r12	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40025ff	          0x4889c7	                            mov rdi, rax	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002602	          0x4889ea	                            mov rdx, rbp	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002605	          0x4889de	                            mov rsi, rbx	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x4002608	            0x31c0	                            xor eax, eax	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x400260a	      0xe800000000	                          call 0x400260f	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x400260f	      0xe800000000	                          call 0x4002614	      1442	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_29
0x4002614	      0xe97afeffff	                           jmp 0x4002493	      1443	obj-elf.c	FUNCTION_34	ELSE_1	IF_5
0x4002619	     0xf1f80000000	                         nop dword [rax]	      1443	obj-elf.c	FUNCTION_34	ELSE_1	IF_5
0x4002620	        0x4883c002	                              add rax, 2	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x4002624	    0x488905000000	            mov qword [0x0400262b], rax 	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x400262b	      0xe995feffff	                           jmp 0x40024c5	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x4002630	          0x4889df	                            mov rdi, rbx	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4002633	      0xe800000000	                          call 0x4002638	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4002638	        0x488b3c24	                    mov rdi, qword [rsp]	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x400263c	          0x4889c5	                            mov rbp, rax	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x400263f	      0xe800000000	                          call 0x4002644	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4002644	        0x410fbefc	                         movsx edi, r12b	      1423	obj-elf.c	FUNCTION_34	IF_3	CALL_15
0x4002648	        0x48894510	            mov qword [rbp + 0x10], rax 	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x400264c	      0xe800000000	                          call 0x4002651	      1423	obj-elf.c	FUNCTION_34	IF_3	CALL_15
0x4002651	          0x4889df	                            mov rdi, rbx	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002654	      0xe800000000	                          call 0x4002659	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002659	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400265d	      0xbe40000000	                           mov esi, 0x40	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002662	      0xe800000000	                          call 0x4002667	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002667	          0x4885c0	                           test rax, rax	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400266a	     0xf8555ffffff	                           jne 0x40025c5	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4002670	          0x4889df	                            mov rdi, rbx	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002673	      0xe800000000	                          call 0x4002678	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002678	          0x4889df	                            mov rdi, rbx	      1429	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_20
0x400267b	          0x4889c5	                            mov rbp, rax	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x400267e	      0xe800000000	                          call 0x4002683	      1429	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_20
0x4002683	      0xba05000000	                              mov edx, 5	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002688	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x400268c	      0xbe00000000	                              mov esi, 0	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002691	      0xe97cfeffff	                           jmp 0x4002512	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4002696	      0xe800000000	                          call 0x400269b	      1450	obj-elf.c	FUNCTION_34
elf_frob_file_before_adjust	functions,0:SWITCH,0:IF,6:DO,0:ELSE,1:FOR,1:WHILE,0:CALL,14	68
0x4001370	            0x4154	                                push r12	      2508	obj-elf.c	FUNCTION_62
0x4001372	              0x55	                                push rbp	      2508	obj-elf.c	FUNCTION_62
0x4001373	              0x53	                                push rbx	      2508	obj-elf.c	FUNCTION_62
0x4001374	    0x488b1d000000	            mov rbx, qword [0x0400137b] 	      2509	obj-elf.c	FUNCTION_62	IF_1
0x400137b	          0x4885db	                           test rbx, rbx	      2509	obj-elf.c	FUNCTION_62	IF_1
0x400137e	            0x7518	                           jne 0x4001398	      2509	obj-elf.c	FUNCTION_62	IF_1
0x4001380	      0xe990000000	                           jmp 0x4001415	      2509	obj-elf.c	FUNCTION_62	IF_1
0x4001385	           0xf1f00	                         nop dword [rax]	      2509	obj-elf.c	FUNCTION_62	IF_1
0x4001388	          0x4889df	                            mov rdi, rbx	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x400138b	      0xe800000000	                          call 0x4001390	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001390	          0x4885c0	                           test rax, rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001393	          0x4889c3	                            mov rbx, rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001396	            0x747d	                            je 0x4001415	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001398	          0x4889df	                            mov rdi, rbx	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x400139b	      0xe800000000	                          call 0x40013a0	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x40013a0	            0x85c0	                           test eax, eax	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x40013a2	            0x75e4	                           jne 0x4001388	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x40013a4	          0x4889df	                            mov rdi, rbx	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40013a7	      0xe800000000	                          call 0x40013ac	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40013ac	      0x4883781000	               cmp qword [rax + 0x10], 0	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40013b1	          0x4889df	                            mov rdi, rbx	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40013b4	     0xf848e000000	                            je 0x4001448	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x40013ba	      0xe800000000	                          call 0x40013bf	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40013bf	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40013c3	      0xbe40000000	                           mov esi, 0x40	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40013c8	      0xe800000000	                          call 0x40013cd	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40013cd	          0x4885c0	                           test rax, rax	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40013d0	          0x4889c5	                            mov rbp, rax	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x40013d3	            0x7406	                            je 0x40013db	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40013d5	        0x80780140	                cmp byte [rax + 1], 0x40	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40013d9	            0x7445	                            je 0x4001420	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40013db	          0x4889df	                            mov rdi, rbx	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x40013de	      0xe800000000	                          call 0x40013e3	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x40013e3	            0x85c0	                           test eax, eax	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x40013e5	            0x75a1	                           jne 0x4001388	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x40013e7	          0x4889df	                            mov rdi, rbx	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40013ea	      0xe800000000	                          call 0x40013ef	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40013ef	            0x85c0	                           test eax, eax	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40013f1	            0x7595	                           jne 0x4001388	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x40013f3	          0x4889df	                            mov rdi, rbx	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x40013f6	      0xba00000000	                              mov edx, 0	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x40013fb	      0xbe00000000	                              mov esi, 0	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x4001400	      0xe800000000	                          call 0x4001405	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x4001405	          0x4889df	                            mov rdi, rbx	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001408	      0xe800000000	                          call 0x400140d	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x400140d	          0x4885c0	                           test rax, rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001410	          0x4889c3	                            mov rbx, rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001413	            0x7583	                           jne 0x4001398	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001415	              0x5b	                                 pop rbx	      2545	obj-elf.c	FUNCTION_62
0x4001416	              0x5d	                                 pop rbp	      2545	obj-elf.c	FUNCTION_62
0x4001417	            0x415c	                                 pop r12	      2545	obj-elf.c	FUNCTION_62
0x4001419	              0xc3	                                     ret	      2545	obj-elf.c	FUNCTION_62
0x400141a	    0x660f1f440000	                    nop word [rax + rax]	      2545	obj-elf.c	FUNCTION_62
0x4001420	        0x80780240	                cmp byte [rax + 2], 0x40	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4001424	            0x75b5	                           jne 0x40013db	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4001426	        0x4c8d6003	                      lea r12, [rax + 3]	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x400142a	          0x4c89e7	                            mov rdi, r12	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x400142d	      0xe800000000	                          call 0x4001432	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001432	        0x488d7d01	                      lea rdi, [rbp + 1]	        59	string3.h	FUNCTION_69	CALL_3
0x4001436	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_69	CALL_3
0x400143a	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_69	CALL_3
0x400143d	      0xe800000000	                          call 0x4001442	        59	string3.h	FUNCTION_69	CALL_3
0x4001442	            0xeb97	                           jmp 0x40013db	        59	string3.h	FUNCTION_69	CALL_3
0x4001444	         0xf1f4000	                         nop dword [rax]	        59	string3.h	FUNCTION_69	CALL_3
0x4001448	      0xe800000000	                          call 0x400144d	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x400144d	            0x85c0	                           test eax, eax	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x400144f	     0xf8433ffffff	                            je 0x4001388	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x4001455	            0xeb84	                           jmp 0x40013db	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
elf_pop_insert	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,2	2
0x4000100	      0xbf00000000	                              mov edi, 0	       214	obj-elf.c	FUNCTION_2	CALL_1
0x4000105	      0xe900000000	                           jmp 0x400010a	       214	obj-elf.c	FUNCTION_2	CALL_1
obj_elf_type	functions,0:SWITCH,0:IF,16:DO,0:ELSE,10:FOR,0:WHILE,0:CALL,49	351
0x4001560	            0x4157	                                push r15	      1962	obj-elf.c	FUNCTION_50
0x4001562	            0x4156	                                push r14	      1962	obj-elf.c	FUNCTION_50
0x4001564	            0x4155	                                push r13	      1962	obj-elf.c	FUNCTION_50
0x4001566	            0x4154	                                push r12	      1962	obj-elf.c	FUNCTION_50
0x4001568	              0x55	                                push rbp	      1962	obj-elf.c	FUNCTION_50
0x4001569	              0x53	                                push rbx	      1962	obj-elf.c	FUNCTION_50
0x400156a	        0x4883ec18	                           sub rsp, 0x18	      1962	obj-elf.c	FUNCTION_50
0x400156e	          0x4889e7	                            mov rdi, rsp	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4001571	    0x64488b042528	                mov rax, qword fs:[0x28]	      1962	obj-elf.c	FUNCTION_50
0x400157a	      0x4889442408	                mov qword [rsp + 8], rax	      1962	obj-elf.c	FUNCTION_50
0x400157f	            0x31c0	                            xor eax, eax	      1962	obj-elf.c	FUNCTION_50
0x4001581	      0xe800000000	                          call 0x4001586	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4001586	        0x488b3c24	                    mov rdi, qword [rsp]	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400158a	            0x89c3	                            mov ebx, eax	       413	obj-elf.c	FUNCTION_15	CALL_1
0x400158c	      0xe800000000	                          call 0x4001591	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4001591	          0x4889c5	                            mov rbp, rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4001594	    0x488b05000000	            mov rax, qword [0x0400159b] 	       415	obj-elf.c	FUNCTION_15
0x400159b	            0x8818	                      mov byte [rax], bl	       415	obj-elf.c	FUNCTION_15
0x400159d	    0x488b05000000	            mov rax, qword [0x040015a4] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40015a4	           0xfb610	                   movzx edx, byte [rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40015a7	          0x80fa22	                            cmp dl, 0x22	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40015aa	     0xf8468030000	                            je 0x4001918	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40015b0	          0x80fa20	                            cmp dl, 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40015b3	     0xf8427030000	                            je 0x40018e0	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40015b9	        0x483b0424	                    cmp rax, qword [rsp]	       419	obj-elf.c	FUNCTION_15	IF_1
0x40015bd	     0xf8432030000	                            je 0x40018f5	       419	obj-elf.c	FUNCTION_15	IF_1
0x40015c3	          0x4889ef	                            mov rdi, rbp	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x40015c6	      0xe800000000	                          call 0x40015cb	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x40015cb	    0x488b15000000	            mov rdx, qword [0x040015d2] 	      1973	obj-elf.c	FUNCTION_50	IF_1
0x40015d2	          0x4989c4	                            mov r12, rax	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x40015d5	           0xfb602	                   movzx eax, byte [rdx]	      1973	obj-elf.c	FUNCTION_50	IF_1
0x40015d8	            0x3c2c	                            cmp al, 0x2c	      1973	obj-elf.c	FUNCTION_50	IF_1
0x40015da	     0xf84e0020000	                            je 0x40018c0	      1973	obj-elf.c	FUNCTION_50	IF_1
0x40015e0	            0x3c20	                            cmp al, 0x20	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40015e2	     0xf84b8020000	                            je 0x40018a0	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40015e8	          0x83e822	                           sub eax, 0x22	      1979	obj-elf.c	FUNCTION_50	IF_2
0x40015eb	            0x3c1e	                            cmp al, 0x1e	      1979	obj-elf.c	FUNCTION_50	IF_2
0x40015ed	     0xf86c5000000	                           jbe 0x40016b8	      1979	obj-elf.c	FUNCTION_50	IF_2
0x40015f3	        0x48891424	                    mov qword [rsp], rdx	      1944	obj-elf.c	FUNCTION_49
0x40015f7	           0xfb602	                   movzx eax, byte [rdx]	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40015fa	          0x8d48d0	                   lea ecx, [rax - 0x30]	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40015fd	          0x4889d0	                            mov rax, rdx	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4001600	          0x80f909	                               cmp cl, 9	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4001603	     0xf87dd000000	                            ja 0x40016e6	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4001609	        0x4883c001	                              add rax, 1	      1945	obj-elf.c	FUNCTION_49	IF_1
0x400160d	           0xf1f00	                         nop dword [rax]	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4001610	    0x488905000000	            mov qword [0x04001617], rax 	      1950	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4001617	           0xfb618	                   movzx ebx, byte [rax]	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x400161a	          0x4889c1	                            mov rcx, rax	      1950	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x400161d	        0x4883c001	                              add rax, 1	      1950	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4001621	          0x8d53d0	                   lea edx, [rbx - 0x30]	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4001624	          0x80fa09	                               cmp dl, 9	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4001627	            0x76e7	                           jbe 0x4001610	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x4001629	          0xc60100	                       mov byte [rcx], 0	      1952	obj-elf.c	FUNCTION_49	IF_1
0x400162c	        0x4c8b2c24	                    mov r13, qword [rsp]	      1957	obj-elf.c	FUNCTION_49
0x4001630	      0xb909000000	                              mov ecx, 9	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4001635	      0xbf00000000	                              mov edi, 0	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400163a	      0xba08000000	                              mov edx, 8	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400163f	          0x4c89ee	                            mov rsi, r13	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4001642	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4001644	           0xf97c1	                                 seta cl	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4001647	           0xf92c0	                                 setb al	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400164a	            0x38c1	                              cmp cl, al	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400164c	            0x741a	                            je 0x4001668	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400164e	      0x450fb67500	                  movzx r14d, byte [r13]	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4001653	        0x4183fe32	                          cmp r14d, 0x32	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4001657	     0xf859b000000	                           jne 0x40016f8	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x400165d	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4001662	     0xf8590000000	                           jne 0x40016f8	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4001668	    0x488b05000000	            mov rax, qword [0x0400166f] 	      2066	obj-elf.c	FUNCTION_50
0x400166f	            0x8818	                      mov byte [rax], bl	      2066	obj-elf.c	FUNCTION_50
0x4001671	    0x488b05000000	            mov rax, qword [0x04001678] 	      2068	obj-elf.c	FUNCTION_50	IF_16
0x4001678	          0x803822	                    cmp byte [rax], 0x22	      2068	obj-elf.c	FUNCTION_50	IF_16
0x400167b	            0x750b	                           jne 0x4001688	      2068	obj-elf.c	FUNCTION_50	IF_16
0x400167d	        0x4883c001	                              add rax, 1	      2069	obj-elf.c	FUNCTION_50	IF_16
0x4001681	    0x488905000000	            mov qword [0x04001688], rax 	      2069	obj-elf.c	FUNCTION_50	IF_16
0x4001688	      0x4109542418	              or dword [r12 + 0x18], edx	      2071	obj-elf.c	FUNCTION_50
0x400168d	      0xe800000000	                          call 0x4001692	      2073	obj-elf.c	FUNCTION_50	CALL_49
0x4001692	      0x488b442408	                mov rax, qword [rsp + 8]	      2074	obj-elf.c	FUNCTION_50
0x4001697	    0x644833042528	                xor rax, qword fs:[0x28]	      2074	obj-elf.c	FUNCTION_50
0x40016a0	     0xf85da020000	                           jne 0x4001980	      2074	obj-elf.c	FUNCTION_50
0x40016a6	        0x4883c418	                           add rsp, 0x18	      2074	obj-elf.c	FUNCTION_50
0x40016aa	              0x5b	                                 pop rbx	      2074	obj-elf.c	FUNCTION_50
0x40016ab	              0x5d	                                 pop rbp	      2074	obj-elf.c	FUNCTION_50
0x40016ac	            0x415c	                                 pop r12	      2074	obj-elf.c	FUNCTION_50
0x40016ae	            0x415d	                                 pop r13	      2074	obj-elf.c	FUNCTION_50
0x40016b0	            0x415e	                                 pop r14	      2074	obj-elf.c	FUNCTION_50
0x40016b2	            0x415f	                                 pop r15	      2074	obj-elf.c	FUNCTION_50
0x40016b4	              0xc3	                                     ret	      2074	obj-elf.c	FUNCTION_50
0x40016b5	           0xf1f00	                         nop dword [rax]	      2074	obj-elf.c	FUNCTION_50
0x40016b8	      0xb90b000040	                     mov ecx, 0x4000000b	      1980	obj-elf.c	FUNCTION_50	IF_2
0x40016bd	        0x480fa3c1	                             bt rcx, rax	      1980	obj-elf.c	FUNCTION_50	IF_2
0x40016c1	     0xf832cffffff	                           jae 0x40015f3	      1980	obj-elf.c	FUNCTION_50	IF_2
0x40016c7	        0x488d4201	                      lea rax, [rdx + 1]	      1981	obj-elf.c	FUNCTION_50	IF_2
0x40016cb	    0x488905000000	            mov qword [0x040016d2], rax 	      1981	obj-elf.c	FUNCTION_50	IF_2
0x40016d2	        0x48890424	                    mov qword [rsp], rax	      1944	obj-elf.c	FUNCTION_49
0x40016d6	         0xfb65201	               movzx edx, byte [rdx + 1]	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40016da	          0x83ea30	                           sub edx, 0x30	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40016dd	          0x80fa09	                               cmp dl, 9	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40016e0	     0xf8623ffffff	                           jbe 0x4001609	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40016e6	          0x4889e7	                            mov rdi, rsp	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x40016e9	      0xe800000000	                          call 0x40016ee	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x40016ee	            0x89c3	                            mov ebx, eax	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x40016f0	      0xe937ffffff	                           jmp 0x400162c	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x40016f5	           0xf1f00	                         nop dword [rax]	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x40016f8	      0xb909000000	                              mov ecx, 9	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x40016fd	      0xbf00000000	                              mov edi, 0	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4001702	          0x4c89ee	                            mov rsi, r13	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4001705	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4001707	      0xba08000000	                              mov edx, 8	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400170c	           0xf97c1	                                 seta cl	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400170f	           0xf92c0	                                 setb al	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4001712	            0x38c1	                              cmp cl, al	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4001714	     0xf844effffff	                            je 0x4001668	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400171a	      0xbf00000000	                              mov edi, 0	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x400171f	      0xb907000000	                              mov ecx, 7	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x4001724	          0x4c89ee	                            mov rsi, r13	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x4001727	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x4001729	     0xf8431020000	                            je 0x4001960	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x400172f	      0xb831000000	                           mov eax, 0x31	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4001734	          0x4429f0	                           sub eax, r14d	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4001737	          0x4189c7	                           mov r15d, eax	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x400173a	     0xf842a020000	                            je 0x400196a	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4001740	      0xbf00000000	                              mov edi, 0	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x4001745	      0xb90b000000	                            mov ecx, 0xb	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x400174a	          0x4c89ee	                            mov rsi, r13	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x400174d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x400174f	     0xf840b020000	                            je 0x4001960	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x4001755	      0xb90b000000	                            mov ecx, 0xb	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x400175a	      0xbf00000000	                              mov edi, 0	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x400175f	          0x4c89ee	                            mov rsi, r13	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x4001762	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x4001764	      0xba00000500	                        mov edx, 0x50000	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x4001769	           0xf97c1	                                 seta cl	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x400176c	           0xf92c0	                                 setb al	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x400176f	            0x38c1	                              cmp cl, al	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x4001771	     0xf84f1feffff	                            je 0x4001668	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x4001777	        0x4183fe36	                          cmp r14d, 0x36	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x400177b	            0x750b	                           jne 0x4001788	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x400177d	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x4001782	     0xf84e0feffff	                            je 0x4001668	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x4001788	      0xb908000000	                              mov ecx, 8	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x400178d	      0xbf00000000	                              mov edi, 0	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4001792	          0x4c89ee	                            mov rsi, r13	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4001795	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4001797	      0xba00000500	                        mov edx, 0x50000	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x400179c	           0xf97c1	                                 seta cl	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x400179f	           0xf92c0	                                 setb al	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40017a2	            0x38c1	                              cmp cl, al	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40017a4	     0xf84befeffff	                            je 0x4001668	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40017aa	      0xb907000000	                              mov ecx, 7	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017af	      0xbf00000000	                              mov edi, 0	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017b4	          0x4c89ee	                            mov rsi, r13	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017b7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017b9	           0xf97c1	                                 seta cl	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017bc	           0xf92c0	                                 setb al	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017bf	            0x31d2	                            xor edx, edx	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017c1	            0x38c1	                              cmp cl, al	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017c3	     0xf849ffeffff	                            je 0x4001668	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x40017c9	        0x4183fe30	                          cmp r14d, 0x30	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x40017cd	            0x750b	                           jne 0x40017da	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x40017cf	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x40017d4	     0xf848efeffff	                            je 0x4001668	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x40017da	      0xb90b000000	                            mov ecx, 0xb	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017df	      0xbf00000000	                              mov edi, 0	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017e4	          0x4c89ee	                            mov rsi, r13	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017e7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017e9	           0xf97c1	                                 seta cl	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017ec	           0xf92c0	                                 setb al	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017ef	            0x31d2	                            xor edx, edx	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017f1	            0x38c1	                              cmp cl, al	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017f3	     0xf846ffeffff	                            je 0x4001668	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x40017f9	      0xbe00000000	                              mov esi, 0	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x40017fe	          0x4c89ef	                            mov rdi, r13	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x4001801	      0xe800000000	                          call 0x4001806	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x4001806	            0x85c0	                           test eax, eax	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x4001808	            0x7422	                            je 0x400182c	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x400180a	        0x4183fe35	                          cmp r14d, 0x35	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x400180e	            0x7507	                           jne 0x4001817	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x4001810	      0x41807d0100	                   cmp byte [r13 + 1], 0	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x4001815	            0x7415	                            je 0x400182c	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x4001817	      0xbe00000000	                              mov esi, 0	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x400181c	          0x4c89ef	                            mov rdi, r13	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x400181f	      0xe800000000	                          call 0x4001824	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x4001824	            0x85c0	                           test eax, eax	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x4001826	     0xf8559010000	                           jne 0x4001985	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x400182c	          0x4889ef	                            mov rdi, rbp	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x400182f	      0xe800000000	                          call 0x4001834	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x4001834	            0x85c0	                           test eax, eax	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x4001836	     0xf8524010000	                           jne 0x4001960	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x400183c	          0x4889ef	                            mov rdi, rbp	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x400183f	      0xe800000000	                          call 0x4001844	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x4001844	            0x85c0	                           test eax, eax	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x4001846	     0xf84c8010000	                            je 0x4001a14	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x400184c	          0x4889ef	                            mov rdi, rbp	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x400184f	      0xbe01000000	                              mov esi, 1	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x4001854	      0xe800000000	                          call 0x4001859	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x4001859	      0xbe00000000	                              mov esi, 0	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x400185e	          0x4889c5	                            mov rbp, rax	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x4001861	          0x4889c7	                            mov rdi, rax	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x4001864	      0xe800000000	                          call 0x4001869	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x4001869	            0x31f6	                            xor esi, esi	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x400186b	          0x4889ef	                            mov rdi, rbp	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x400186e	      0xe800000000	                          call 0x4001873	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x4001873	          0x4889ef	                            mov rdi, rbp	      2015	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_25
0x4001876	      0xe800000000	                          call 0x400187b	      2015	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_25
0x400187b	      0xbe00000000	                              mov esi, 0	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x4001880	          0x4889ef	                            mov rdi, rbp	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x4001883	      0xe800000000	                          call 0x4001888	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x4001888	          0x4889ef	                            mov rdi, rbp	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x400188b	      0xe800000000	                          call 0x4001890	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x4001890	      0xba00000100	                        mov edx, 0x10000	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x4001895	      0xe9cefdffff	                           jmp 0x4001668	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x400189a	    0x660f1f440000	                    nop word [rax + rax]	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x40018a0	        0x488d4a01	                      lea rcx, [rdx + 1]	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40018a4	    0x48890d000000	            mov qword [0x040018ab], rcx 	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40018ab	         0xfb64201	               movzx eax, byte [rdx + 1]	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40018af	          0x4889ca	                            mov rdx, rcx	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40018b2	      0xe931fdffff	                           jmp 0x40015e8	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40018b7	    0x660f1f840000	                    nop word [rax + rax]	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x40018c0	        0x488d4a01	                      lea rcx, [rdx + 1]	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40018c4	    0x48890d000000	            mov qword [0x040018cb], rcx 	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40018cb	         0xfb64201	               movzx eax, byte [rdx + 1]	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40018cf	          0x4889ca	                            mov rdx, rcx	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40018d2	      0xe909fdffff	                           jmp 0x40015e0	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40018d7	    0x660f1f840000	                    nop word [rax + rax]	      1974	obj-elf.c	FUNCTION_50	IF_1
0x40018e0	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40018e4	        0x483b0424	                    cmp rax, qword [rsp]	       419	obj-elf.c	FUNCTION_15	IF_1
0x40018e8	    0x488905000000	            mov qword [0x040018ef], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40018ef	     0xf85cefcffff	                           jne 0x40015c3	       419	obj-elf.c	FUNCTION_15	IF_1
0x40018f5	            0x31ff	                            xor edi, edi	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40018f7	      0xba05000000	                              mov edx, 5	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40018fc	      0xbe00000000	                              mov esi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001901	      0xe800000000	                          call 0x4001906	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001906	          0x4889c7	                            mov rdi, rax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001909	            0x31c0	                            xor eax, eax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x400190b	      0xe800000000	                          call 0x4001910	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001910	      0xe9aefcffff	                           jmp 0x40015c3	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001915	           0xf1f00	                         nop dword [rax]	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001918	        0x488d4801	                      lea rcx, [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400191c	    0x48890d000000	            mov qword [0x04001923], rcx 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001923	         0xfb65001	               movzx edx, byte [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001927	          0x4889c8	                            mov rax, rcx	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400192a	      0xe981fcffff	                           jmp 0x40015b0	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400192f	          0x4889ef	                            mov rdi, rbp	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4001932	      0xe800000000	                          call 0x4001937	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4001937	            0x85c0	                           test eax, eax	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4001939	     0xf85e5000000	                           jne 0x4001a24	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400193f	      0xbe00000000	                              mov esi, 0	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x4001944	          0x4889ef	                            mov rdi, rbp	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x4001947	      0xe800000000	                          call 0x400194c	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x400194c	          0x4889ef	                            mov rdi, rbp	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x400194f	            0x31f6	                            xor esi, esi	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x4001951	      0xe800000000	                          call 0x4001956	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x4001956	          0x4889ef	                            mov rdi, rbp	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x4001959	      0xe800000000	                          call 0x400195e	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x400195e	            0x6690	                                     nop	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x4001960	      0xba00000100	                        mov edx, 0x10000	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x4001965	      0xe9fefcffff	                           jmp 0x4001668	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x400196a	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x400196f	            0x74ef	                            je 0x4001960	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4001971	      0xe9cafdffff	                           jmp 0x4001740	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4001976	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4001980	      0xe800000000	                          call 0x4001985	      2074	obj-elf.c	FUNCTION_50
0x4001985	      0xbe00000000	                              mov esi, 0	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x400198a	          0x4c89ef	                            mov rdi, r13	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x400198d	      0xe800000000	                          call 0x4001992	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x4001992	            0x85c0	                           test eax, eax	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x4001994	            0x7428	                            je 0x40019be	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x4001996	          0x4585ff	                         test r15d, r15d	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x4001999	            0x750e	                           jne 0x40019a9	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x400199b	      0x41807d0130	                cmp byte [r13 + 1], 0x30	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x40019a0	            0x7507	                           jne 0x40019a9	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x40019a2	      0x41807d0200	                   cmp byte [r13 + 2], 0	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x40019a7	            0x7415	                            je 0x40019be	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x40019a9	      0xbe00000000	                              mov esi, 0	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40019ae	          0x4c89ef	                            mov rdi, r13	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40019b1	      0xe800000000	                          call 0x40019b6	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40019b6	            0x85c0	                           test eax, eax	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40019b8	     0xf8599000000	                           jne 0x4001a57	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40019be	    0x488b05000000	            mov rax, qword [0x040019c5] 	      2036	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_39
0x40019c5	        0x488b4008	                mov rax, qword [rax + 8]	      2036	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_39
0x40019c9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40019d0	          0x8b400c	              mov eax, dword [rax + 0xc]	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40019d3	          0x83f809	                              cmp eax, 9	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40019d6	            0x7714	                            ja 0x40019ec	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40019d8	      0xb909020000	                          mov ecx, 0x209	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40019dd	      0xba08004000	                       mov edx, 0x400008	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40019e2	        0x480fa3c1	                             bt rcx, rax	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40019e6	     0xf827cfcffff	                            jb 0x4001668	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40019ec	      0xba05000000	                              mov edx, 5	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40019f1	      0xbe00000000	                              mov esi, 0	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40019f6	            0x31ff	                            xor edi, edi	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40019f8	      0xe800000000	                          call 0x40019fd	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40019fd	          0x4c89ee	                            mov rsi, r13	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4001a00	          0x4889c7	                            mov rdi, rax	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4001a03	            0x31c0	                            xor eax, eax	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4001a05	      0xe800000000	                          call 0x4001a0a	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4001a0a	      0xba08004000	                       mov edx, 0x400008	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4001a0f	      0xe954fcffff	                           jmp 0x4001668	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4001a14	          0x4889ef	                            mov rdi, rbp	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4001a17	      0xe800000000	                          call 0x4001a1c	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4001a1c	            0x85c0	                           test eax, eax	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4001a1e	     0xf840bffffff	                            je 0x400192f	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4001a24	          0x4889ef	                            mov rdi, rbp	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a27	      0xe800000000	                          call 0x4001a2c	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a2c	      0xba05000000	                              mov edx, 5	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a31	          0x4889c5	                            mov rbp, rax	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a34	      0xbe00000000	                              mov esi, 0	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a39	            0x31ff	                            xor edi, edi	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a3b	      0xe800000000	                          call 0x4001a40	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a40	          0x4889ee	                            mov rsi, rbp	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a43	          0x4889c7	                            mov rdi, rax	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a46	            0x31c0	                            xor eax, eax	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a48	      0xe800000000	                          call 0x4001a4d	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a4d	      0xba00000100	                        mov edx, 0x10000	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a52	      0xe911fcffff	                           jmp 0x4001668	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4001a57	      0xbe00000000	                              mov esi, 0	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4001a5c	          0x4c89ef	                            mov rdi, r13	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4001a5f	      0xe800000000	                          call 0x4001a64	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4001a64	            0x85c0	                           test eax, eax	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4001a66	            0x754d	                           jne 0x4001ab5	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4001a68	    0x488b05000000	            mov rax, qword [0x04001a6f] 	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x4001a6f	        0x488b4008	                mov rax, qword [rax + 8]	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x4001a73	    0x488ba8680300	           mov rbp, qword [rax + 0x368] 	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x4001a7a	          0x8b450c	              mov eax, dword [rbp + 0xc]	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4001a7d	          0x83f803	                              cmp eax, 3	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4001a80	            0x7422	                            je 0x4001aa4	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4001a82	            0x85c0	                           test eax, eax	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4001a84	            0x741e	                            je 0x4001aa4	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4001a86	      0xbe00000000	                              mov esi, 0	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4001a8b	            0x31ff	                            xor edi, edi	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4001a8d	      0xba05000000	                              mov edx, 5	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4001a92	      0xe800000000	                          call 0x4001a97	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4001a97	          0x4c89ee	                            mov rsi, r13	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4001a9a	          0x4889c7	                            mov rdi, rax	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4001a9d	            0x31c0	                            xor eax, eax	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4001a9f	      0xe800000000	                          call 0x4001aa4	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4001aa4	    0xc7450c030000	                mov dword [rbp + 0xc], 3	      2057	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x4001aab	      0xba00008100	                       mov edx, 0x810000	      2057	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x4001ab0	      0xe9b3fbffff	                           jmp 0x4001668	      2057	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x4001ab5	      0xba05000000	                              mov edx, 5	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001aba	      0xbe00000000	                              mov esi, 0	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001abf	            0x31ff	                            xor edi, edi	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001ac1	      0xe800000000	                          call 0x4001ac6	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001ac6	          0x4c89ee	                            mov rsi, r13	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001ac9	          0x4889c7	                            mov rdi, rax	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001acc	            0x31c0	                            xor eax, eax	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001ace	      0xe800000000	                          call 0x4001ad3	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001ad3	            0x31d2	                            xor edx, edx	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4001ad5	      0xe98efbffff	                           jmp 0x4001668	      2064	obj-elf.c	FUNCTION_50	CALL_48
adjust_stab_sections	functions,0:SWITCH,0:IF,3:DO,0:ELSE,1:FOR,0:WHILE,0:CALL,7	75
0x4000c50	            0x4155	                                push r13	      2141	obj-elf.c	FUNCTION_53
0x4000c52	            0x4154	                                push r12	      2141	obj-elf.c	FUNCTION_53
0x4000c54	          0x4889f0	                            mov rax, rsi	      2141	obj-elf.c	FUNCTION_53
0x4000c57	              0x55	                                push rbp	      2141	obj-elf.c	FUNCTION_53
0x4000c58	              0x53	                                push rbx	      2141	obj-elf.c	FUNCTION_53
0x4000c59	          0x4989fc	                            mov r12, rdi	      2141	obj-elf.c	FUNCTION_53
0x4000c5c	      0xb905000000	                              mov ecx, 5	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4000c61	        0x4883ec08	                              sub rsp, 8	      2141	obj-elf.c	FUNCTION_53
0x4000c65	          0x488b1e	                    mov rbx, qword [rsi]	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4000c68	      0xbe00000000	                              mov esi, 0	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4000c6d	          0x4889df	                            mov rdi, rbx	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4000c70	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4000c72	     0xf85c6000000	                           jne 0x4000d3e	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x4000c78	          0x4889df	                            mov rdi, rbx	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000c7b	          0x4889c5	                            mov rbp, rax	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000c7e	      0xe800000000	                          call 0x4000c83	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000c83	      0x488d4403fd	                lea rax, [rbx + rax - 3]	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000c88	          0x803873	                    cmp byte [rax], 0x73	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000c8b	     0xf848f000000	                            je 0x4000d20	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000c91	            0x31d2	                            xor edx, edx	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4000c93	      0xbe00000000	                              mov esi, 0	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4000c98	          0x4889df	                            mov rdi, rbx	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4000c9b	            0x31c0	                            xor eax, eax	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4000c9d	      0xe800000000	                          call 0x4000ca2	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4000ca2	          0x4c89e7	                            mov rdi, r12	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4000ca5	          0x4889c6	                            mov rsi, rax	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4000ca8	          0x4989c5	                            mov r13, rax	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4000cab	      0xe800000000	                          call 0x4000cb0	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4000cb0	          0x4885c0	                           test rax, rax	      2154	obj-elf.c	FUNCTION_53	IF_3
0x4000cb3	     0xf8497000000	                            je 0x4000d50	      2154	obj-elf.c	FUNCTION_53	IF_3
0x4000cb9	          0x8b5838	            mov ebx, dword [rax + 0x38] 	      2155	obj-elf.c	FUNCTION_53	IF_3
0x4000cbc	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	      2158	obj-elf.c	FUNCTION_53
0x4000cc6	          0x4889d0	                            mov rax, rdx	      2158	obj-elf.c	FUNCTION_53
0x4000cc9	        0x48f76538	                  mul qword [rbp + 0x38]	      2158	obj-elf.c	FUNCTION_53
0x4000ccd	    0x488b85a80000	            mov rax, qword [rbp + 0xa8] 	      2160	obj-elf.c	FUNCTION_53	CALL_6
0x4000cd4	        0x488b6850	            mov rbp, qword [rax + 0x50] 	      2160	obj-elf.c	FUNCTION_53	CALL_6
0x4000cd8	        0x48c1ea03	                              shr rdx, 3	      2158	obj-elf.c	FUNCTION_53
0x4000cdc	          0x4885ed	                           test rbp, rbp	      2161	obj-elf.c	FUNCTION_53
0x4000cdf	          0x8d7aff	                      lea edi, [rdx - 1]	      2158	obj-elf.c	FUNCTION_53
0x4000ce2	            0x7473	                            je 0x4000d57	      2161	obj-elf.c	FUNCTION_53
0x4000ce4	      0x498b442408	                mov rax, qword [r12 + 8]	      2163	obj-elf.c	FUNCTION_53
0x4000ce9	        0x488d7506	                      lea rsi, [rbp + 6]	      2163	obj-elf.c	FUNCTION_53
0x4000ced	          0x4863ff	                         movsxd rdi, edi	      2163	obj-elf.c	FUNCTION_53
0x4000cf0	    0xff90a8000000	                 call qword [rax + 0xa8]	      2163	obj-elf.c	FUNCTION_53
0x4000cf6	      0x498b442408	                mov rax, qword [r12 + 8]	      2164	obj-elf.c	FUNCTION_53
0x4000cfb	          0x4863fb	                         movsxd rdi, ebx	      2164	obj-elf.c	FUNCTION_53
0x4000cfe	        0x488d7508	                      lea rsi, [rbp + 8]	      2164	obj-elf.c	FUNCTION_53
0x4000d02	    0xff9090000000	                 call qword [rax + 0x90]	      2164	obj-elf.c	FUNCTION_53
0x4000d08	        0x4883c408	                              add rsp, 8	      2166	obj-elf.c	FUNCTION_53
0x4000d0c	          0x4c89ef	                            mov rdi, r13	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x4000d0f	              0x5b	                                 pop rbx	      2166	obj-elf.c	FUNCTION_53
0x4000d10	              0x5d	                                 pop rbp	      2166	obj-elf.c	FUNCTION_53
0x4000d11	            0x415c	                                 pop r12	      2166	obj-elf.c	FUNCTION_53
0x4000d13	            0x415d	                                 pop r13	      2166	obj-elf.c	FUNCTION_53
0x4000d15	      0xe900000000	                           jmp 0x4000d1a	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x4000d1a	    0x660f1f440000	                    nop word [rax + rax]	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x4000d20	        0x80780174	                cmp byte [rax + 1], 0x74	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000d24	     0xf8567ffffff	                           jne 0x4000c91	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000d2a	        0x80780272	                cmp byte [rax + 2], 0x72	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000d2e	     0xf855dffffff	                           jne 0x4000c91	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000d34	        0x80780300	                   cmp byte [rax + 3], 0	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000d38	     0xf8553ffffff	                           jne 0x4000c91	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4000d3e	        0x4883c408	                              add rsp, 8	      2166	obj-elf.c	FUNCTION_53
0x4000d42	              0x5b	                                 pop rbx	      2166	obj-elf.c	FUNCTION_53
0x4000d43	              0x5d	                                 pop rbp	      2166	obj-elf.c	FUNCTION_53
0x4000d44	            0x415c	                                 pop r12	      2166	obj-elf.c	FUNCTION_53
0x4000d46	            0x415d	                                 pop r13	      2166	obj-elf.c	FUNCTION_53
0x4000d48	              0xc3	                                     ret	      2166	obj-elf.c	FUNCTION_53
0x4000d49	     0xf1f80000000	                         nop dword [rax]	      2166	obj-elf.c	FUNCTION_53
0x4000d50	            0x31db	                            xor ebx, ebx	      2157	obj-elf.c	FUNCTION_53	ELSE_1
0x4000d52	      0xe965ffffff	                           jmp 0x4000cbc	      2157	obj-elf.c	FUNCTION_53	ELSE_1
0x4000d57	      0xba00000000	                              mov edx, 0	      2161	obj-elf.c	FUNCTION_53
0x4000d5c	      0xbe71080000	                          mov esi, 0x871	      2161	obj-elf.c	FUNCTION_53
0x4000d61	      0xbf00000000	                              mov edi, 0	      2161	obj-elf.c	FUNCTION_53
0x4000d66	      0xe800000000	                          call 0x4000d6b	      2161	obj-elf.c	FUNCTION_53
elf_frob_file	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,2	4
0x4001070	    0x488b3d000000	            mov rdi, qword [0x04001077] 	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4001077	            0x31d2	                            xor edx, edx	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4001079	      0xbe00000000	                              mov esi, 0	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x400107e	      0xe900000000	                           jmp 0x4001083	      2497	obj-elf.c	FUNCTION_61	CALL_1
elf_s_get_align	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	5
0x40001b0	        0x4883ec08	                              sub rsp, 8	       233	obj-elf.c	FUNCTION_5
0x40001b4	      0xe800000000	                          call 0x40001b9	       234	obj-elf.c	FUNCTION_5	CALL_1
0x40001b9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       234	obj-elf.c	FUNCTION_5	CALL_1
0x40001bd	        0x4883c408	                              add rsp, 8	       235	obj-elf.c	FUNCTION_5
0x40001c1	              0xc3	                                     ret	       235	obj-elf.c	FUNCTION_5
elf_frob_file_after_relocs	functions,0:SWITCH,0:IF,4:DO,0:ELSE,0:FOR,2:WHILE,0:CALL,29	56
0x4001460	    0x8b0500000000	            mov eax, dword [0x04001466] 	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001466	            0x4154	                                push r12	      2554	obj-elf.c	FUNCTION_63
0x4001468	              0x55	                                push rbp	      2554	obj-elf.c	FUNCTION_63
0x4001469	            0x31ed	                            xor ebp, ebp	      2554	obj-elf.c	FUNCTION_63
0x400146b	              0x53	                                push rbx	      2554	obj-elf.c	FUNCTION_63
0x400146c	            0x85c0	                           test eax, eax	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x400146e	     0xf84b9000000	                            je 0x400152d	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001474	         0xf1f4000	                         nop dword [rax]	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001478	    0x488b15000000	            mov rdx, qword [0x0400147f] 	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x400147f	            0x89e8	                            mov eax, ebp	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4001481	        0x488b0cc2	            mov rcx, qword [rdx + rax*8]	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4001485	          0x4885c9	                           test rcx, rcx	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001488	     0xf84c0000000	                            je 0x400154e	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x400148e	          0x4889c8	                            mov rax, rcx	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001491	      0xbb04000000	                              mov ebx, 4	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x40014a0	          0x8b5020	            mov edx, dword [rax + 0x20] 	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x40014a3	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x40014aa	          0x83e204	                              and edx, 4	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x40014ad	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x40014b4	          0x83fa01	                              cmp edx, 1	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x40014b7	          0x4819d2	                            sbb rdx, rdx	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x40014ba	        0x4883e2fc	             and rdx, 0xfffffffffffffffc	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x40014be	          0x4885c0	                           test rax, rax	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x40014c1	      0x488d5c1308	                lea rbx, [rbx + rdx + 8]	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x40014c6	            0x75d8	                           jne 0x40014a0	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x40014c8	    0x488b81e00000	            mov rax, qword [rcx + 0xe0] 	      2568	obj-elf.c	FUNCTION_63	FOR_1	CALL_2
0x40014cf	            0x31f6	                            xor esi, esi	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x40014d1	          0x83c501	                              add ebp, 1	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x40014d4	    0x4c8ba0b80000	            mov r12, qword [rax + 0xb8] 	      2568	obj-elf.c	FUNCTION_63	FOR_1	CALL_2
0x40014db	          0x4c89e7	                            mov rdi, r12	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x40014de	      0xe800000000	                          call 0x40014e3	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x40014e3	    0x488b3d000000	            mov rdi, qword [0x040014ea] 	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x40014ea	          0x4889da	                            mov rdx, rbx	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x40014ed	          0x4c89e6	                            mov rsi, r12	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x40014f0	      0xe800000000	                          call 0x40014f5	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x40014f5	          0x4889df	                            mov rdi, rbx	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x40014f8	      0xe800000000	                          call 0x40014fd	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x40014fd	    0x488b1d000000	            mov rbx, qword [0x04001504] 	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x4001504	    0x49898424b000	             mov qword [r12 + 0xb0], rax	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x400150c	      0xe800000000	                          call 0x4001511	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x4001511	    0x488b3d000000	            mov rdi, qword [0x04001518] 	      2573	obj-elf.c	FUNCTION_63	FOR_1	CALL_7
0x4001518	        0x48894310	             mov qword [rbx + 0x10], rax	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x400151c	      0xe800000000	                          call 0x4001521	      2573	obj-elf.c	FUNCTION_63	FOR_1	CALL_7
0x4001521	    0x392d00000000	            cmp dword [0x04001527], ebp 	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001527	     0xf874bffffff	                            ja 0x4001478	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x400152d	    0x488b3d000000	            mov rdi, qword [0x04001534] 	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x4001534	      0xbe00000000	                              mov esi, 0	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x4001539	      0xe800000000	                          call 0x400153e	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x400153e	              0x5b	                                 pop rbx	      2648	obj-elf.c	FUNCTION_63
0x400153f	              0x5d	                                 pop rbp	      2648	obj-elf.c	FUNCTION_63
0x4001540	            0x415c	                                 pop r12	      2648	obj-elf.c	FUNCTION_63
0x4001542	    0x488b3d000000	            mov rdi, qword [0x04001549] 	      2578	obj-elf.c	FUNCTION_63	CALL_9
0x4001549	      0xe900000000	                           jmp 0x400154e	      2578	obj-elf.c	FUNCTION_63	CALL_9
0x400154e	      0xbb04000000	                              mov ebx, 4	      2564	obj-elf.c	FUNCTION_63	FOR_1
0x4001553	      0xe970ffffff	                           jmp 0x40014c8	      2564	obj-elf.c	FUNCTION_63	FOR_1
obj_elf_section_change_hook	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,0	5
0x40038a0	    0x488b05000000	            mov rax, qword [0x040038a7] 	      1313	obj-elf.c	FUNCTION_30
0x40038a7	    0x488905000000	            mov qword [0x040038ae], rax 	      1313	obj-elf.c	FUNCTION_30
0x40038ae	    0x8b0500000000	            mov eax, dword [0x040038b4] 	      1314	obj-elf.c	FUNCTION_30
0x40038b4	    0x890500000000	            mov dword [0x040038ba], eax 	      1314	obj-elf.c	FUNCTION_30
0x40038ba	              0xc3	                                     ret	      1314	obj-elf.c	FUNCTION_30
obj_elf_text	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,3	5
0x4000aa0	    0x488b05000000	            mov rax, qword [0x04000aa7] 	      1259	obj-elf.c	FUNCTION_27
0x4000aa7	    0x488905000000	            mov qword [0x04000aae], rax 	      1259	obj-elf.c	FUNCTION_27
0x4000aae	    0x8b0500000000	            mov eax, dword [0x04000ab4] 	      1260	obj-elf.c	FUNCTION_27
0x4000ab4	    0x890500000000	            mov dword [0x04000aba], eax 	      1260	obj-elf.c	FUNCTION_27
0x4000aba	      0xe900000000	                           jmp 0x4000abf	      1261	obj-elf.c	FUNCTION_27	CALL_2
obj_elf_data	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,3	5
0x4000a80	    0x488b05000000	            mov rax, qword [0x04000a87] 	      1241	obj-elf.c	FUNCTION_26
0x4000a87	    0x488905000000	            mov qword [0x04000a8e], rax 	      1241	obj-elf.c	FUNCTION_26
0x4000a8e	    0x8b0500000000	            mov eax, dword [0x04000a94] 	      1242	obj-elf.c	FUNCTION_26
0x4000a94	    0x890500000000	            mov dword [0x04000a9a], eax 	      1242	obj-elf.c	FUNCTION_26
0x4000a9a	      0xe900000000	                           jmp 0x4000a9f	      1243	obj-elf.c	FUNCTION_26	CALL_2
elf_begin	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,9	25
0x4000080	        0x4883ec08	                              sub rsp, 8	       198	obj-elf.c	FUNCTION_1
0x4000084	    0x488b3d000000	            mov rdi, qword [0x0400008b] 	       202	obj-elf.c	FUNCTION_1	CALL_1
0x400008b	      0xbe00000000	                              mov esi, 0	       202	obj-elf.c	FUNCTION_1	CALL_1
0x4000090	      0xe800000000	                          call 0x4000095	       202	obj-elf.c	FUNCTION_1	CALL_1
0x4000095	          0x4889c7	                            mov rdi, rax	       203	obj-elf.c	FUNCTION_1	CALL_3
0x4000098	      0xe800000000	                          call 0x400009d	       203	obj-elf.c	FUNCTION_1	CALL_3
0x400009d	          0x4889c7	                            mov rdi, rax	       203	obj-elf.c	FUNCTION_1	CALL_3
0x40000a0	      0xe800000000	                          call 0x40000a5	       203	obj-elf.c	FUNCTION_1	CALL_3
0x40000a5	    0x488b3d000000	            mov rdi, qword [0x040000ac] 	       204	obj-elf.c	FUNCTION_1	CALL_4
0x40000ac	      0xbe00000000	                              mov esi, 0	       204	obj-elf.c	FUNCTION_1	CALL_4
0x40000b1	      0xe800000000	                          call 0x40000b6	       204	obj-elf.c	FUNCTION_1	CALL_4
0x40000b6	          0x4889c7	                            mov rdi, rax	       205	obj-elf.c	FUNCTION_1	CALL_6
0x40000b9	      0xe800000000	                          call 0x40000be	       205	obj-elf.c	FUNCTION_1	CALL_6
0x40000be	          0x4889c7	                            mov rdi, rax	       205	obj-elf.c	FUNCTION_1	CALL_6
0x40000c1	      0xe800000000	                          call 0x40000c6	       205	obj-elf.c	FUNCTION_1	CALL_6
0x40000c6	    0x488b3d000000	            mov rdi, qword [0x040000cd] 	       206	obj-elf.c	FUNCTION_1	CALL_7
0x40000cd	      0xbe00000000	                              mov esi, 0	       206	obj-elf.c	FUNCTION_1	CALL_7
0x40000d2	      0xe800000000	                          call 0x40000d7	       206	obj-elf.c	FUNCTION_1	CALL_7
0x40000d7	          0x4889c7	                            mov rdi, rax	       207	obj-elf.c	FUNCTION_1	CALL_9
0x40000da	      0xe800000000	                          call 0x40000df	       207	obj-elf.c	FUNCTION_1	CALL_9
0x40000df	          0x4889c7	                            mov rdi, rax	       207	obj-elf.c	FUNCTION_1	CALL_9
0x40000e2	      0xe800000000	                          call 0x40000e7	       207	obj-elf.c	FUNCTION_1	CALL_9
0x40000e7	    0x48c705000000	               mov qword [0x040000f2], 0	       208	obj-elf.c	FUNCTION_1
0x40000f2	        0x4883c408	                              add rsp, 8	       209	obj-elf.c	FUNCTION_1
0x40000f6	              0xc3	                                     ret	       209	obj-elf.c	FUNCTION_1
elf_file_symbol	functions,0:SWITCH,0:IF,3:DO,0:ELSE,1:FOR,0:WHILE,0:CALL,15	108
0x40006a0	            0x85f6	                           test esi, esi	       264	obj-elf.c	FUNCTION_10	IF_1
0x40006a2	            0x4154	                                push r12	       263	obj-elf.c	FUNCTION_10
0x40006a4	              0x55	                                push rbp	       263	obj-elf.c	FUNCTION_10
0x40006a5	              0x53	                                push rbx	       263	obj-elf.c	FUNCTION_10
0x40006a6	            0x741f	                            je 0x40006c7	       264	obj-elf.c	FUNCTION_10	IF_1
0x40006a8	    0x488b05000000	            mov rax, qword [0x040006af] 	       265	obj-elf.c	FUNCTION_10	IF_1
0x40006af	          0x4885c0	                           test rax, rax	       265	obj-elf.c	FUNCTION_10	IF_1
0x40006b2	            0x7413	                            je 0x40006c7	       265	obj-elf.c	FUNCTION_10	IF_1
0x40006b4	        0x488b4008	                mov rax, qword [rax + 8]	       266	obj-elf.c	FUNCTION_10	IF_1
0x40006b8	          0x4885c0	                           test rax, rax	       266	obj-elf.c	FUNCTION_10	IF_1
0x40006bb	            0x740a	                            je 0x40006c7	       266	obj-elf.c	FUNCTION_10	IF_1
0x40006bd	        0xf6401940	           test byte [rax + 0x19], 0x40 	       267	obj-elf.c	FUNCTION_10	IF_1
0x40006c1	     0xf8529010000	                           jne 0x40007f0	       267	obj-elf.c	FUNCTION_10	IF_1
0x40006c7	            0x31c9	                            xor ecx, ecx	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40006c9	            0x31d2	                            xor edx, edx	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40006cb	      0xbe00000000	                              mov esi, 0	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40006d0	          0x4989fc	                            mov r12, rdi	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40006d3	      0xe800000000	                          call 0x40006d8	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40006d8	      0xbe00000000	                              mov esi, 0	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x40006dd	          0x4889c7	                            mov rdi, rax	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x40006e0	          0x4889c5	                            mov rbp, rax	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x40006e3	      0xe800000000	                          call 0x40006e8	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x40006e8	          0x4c89e7	                            mov rdi, r12	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x40006eb	      0xe800000000	                          call 0x40006f0	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x40006f0	          0x4889ef	                            mov rdi, rbp	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40006f3	          0x4889c3	                            mov rbx, rax	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x40006f6	      0xe800000000	                          call 0x40006fb	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40006fb	          0x4889c7	                            mov rdi, rax	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x40006fe	      0xe800000000	                          call 0x4000703	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4000703	          0x4839c3	                            cmp rbx, rax	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4000706	     0xf8604010000	                           jbe 0x4000810	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x400070c	    0x488b3d000000	            mov rdi, qword [0x04000713] 	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000713	    0x488b05000000	            mov rax, qword [0x0400071a] 	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400071a	        0x4883c301	                              add rbx, 1	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400071e	          0x4829f8	                            sub rax, rdi	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000721	          0x4839c3	                            cmp rbx, rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000724	     0xf8706010000	                            ja 0x4000830	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400072a	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_68	CALL_3
0x400072d	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_68	CALL_3
0x4000730	      0xe800000000	                          call 0x4000735	        53	string3.h	FUNCTION_68	CALL_3
0x4000735	    0x48031d000000	             add rbx, qword [0x0400073c]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400073c	    0x488b35000000	            mov rsi, qword [0x04000743] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000743	          0x4839f3	                            cmp rbx, rsi	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000746	     0xf8404010000	                            je 0x4000850	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400074c	    0x488b05000000	            mov rax, qword [0x04000753] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000753	    0x488b15000000	            mov rdx, qword [0x0400075a] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400075a	          0x4801c3	                            add rbx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400075d	          0x48f7d0	                                 not rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000760	          0x4821c3	                            and rbx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000763	    0x488b05000000	            mov rax, qword [0x0400076a] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400076a	          0x4889d9	                            mov rcx, rbx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400076d	    0x48891d000000	            mov qword [0x04000774], rbx 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000774	          0x4829d1	                            sub rcx, rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000777	          0x4889c7	                            mov rdi, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400077a	          0x4829d7	                            sub rdi, rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400077d	          0x4839f9	                            cmp rcx, rdi	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000780	            0x7776	                            ja 0x40007f8	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000782	          0x4889ef	                            mov rdi, rbp	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000785	    0x48891d000000	            mov qword [0x0400078c], rbx 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400078c	      0xe800000000	                          call 0x4000791	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000791	          0x4889ef	                            mov rdi, rbp	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x4000794	      0xe800000000	                          call 0x4000799	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x4000799	    0x814818004000	           or dword [rax + 0x18], 0x4000	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x40007a0	    0x488b05000000	            mov rax, qword [0x040007a7] 	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40007a7	          0x4839c5	                            cmp rbp, rax	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40007aa	            0x7444	                            je 0x40007f0	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40007ac	        0x488b4008	                mov rax, qword [rax + 8]	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40007b0	          0x4885c0	                           test rax, rax	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40007b3	            0x7406	                            je 0x40007bb	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40007b5	        0xf6401940	           test byte [rax + 0x19], 0x40 	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40007b9	            0x7535	                           jne 0x40007f0	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40007bb	          0x4889ef	                            mov rdi, rbp	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40007be	      0xba00000000	                              mov edx, 0	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40007c3	      0xbe00000000	                              mov esi, 0	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40007c8	      0xe800000000	                          call 0x40007cd	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40007cd	              0x5b	                                 pop rbx	       302	obj-elf.c	FUNCTION_10
0x40007ce	          0x4889ef	                            mov rdi, rbp	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40007d1	    0x488b35000000	            mov rsi, qword [0x040007d8] 	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40007d8	      0xb900000000	                              mov ecx, 0	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40007dd	              0x5d	                                 pop rbp	       302	obj-elf.c	FUNCTION_10
0x40007de	            0x415c	                                 pop r12	       302	obj-elf.c	FUNCTION_10
0x40007e0	      0xba00000000	                              mov edx, 0	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40007e5	      0xe900000000	                           jmp 0x40007ea	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40007ea	    0x660f1f440000	                    nop word [rax + rax]	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x40007f0	              0x5b	                                 pop rbx	       302	obj-elf.c	FUNCTION_10
0x40007f1	              0x5d	                                 pop rbp	       302	obj-elf.c	FUNCTION_10
0x40007f2	            0x415c	                                 pop r12	       302	obj-elf.c	FUNCTION_10
0x40007f4	              0xc3	                                     ret	       302	obj-elf.c	FUNCTION_10
0x40007f5	           0xf1f00	                         nop dword [rax]	       302	obj-elf.c	FUNCTION_10
0x40007f8	    0x488905000000	            mov qword [0x040007ff], rax 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40007ff	          0x4889c3	                            mov rbx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000802	      0xe97bffffff	                           jmp 0x4000782	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000807	    0x660f1f840000	                    nop word [rax + rax]	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000810	          0x4889ef	                            mov rdi, rbp	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x4000813	      0xe800000000	                          call 0x4000818	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x4000818	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_74	CALL_3
0x400081b	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_74	CALL_3
0x400081e	      0xe800000000	                          call 0x4000823	       110	string3.h	FUNCTION_74	CALL_3
0x4000823	      0xe969ffffff	                           jmp 0x4000791	       110	string3.h	FUNCTION_74	CALL_3
0x4000828	     0xf1f84000000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_74	CALL_3
0x4000830	      0xbf00000000	                              mov edi, 0	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000835	          0x4889de	                            mov rsi, rbx	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000838	      0xe800000000	                          call 0x400083d	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400083d	    0x488b3d000000	            mov rdi, qword [0x04000844] 	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000844	      0xe9e1feffff	                           jmp 0x400072a	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000849	     0xf1f80000000	                         nop dword [rax]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4000850	    0x800d00000000	                 or byte [0x04000857], 2	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4000857	      0xe9f0feffff	                           jmp 0x400074c	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
obj_elf_version	functions,0:SWITCH,0:IF,1:DO,0:ELSE,1:FOR,0:WHILE,1:CALL,20	97
0x4000ac0	            0x4155	                                push r13	      1814	obj-elf.c	FUNCTION_47
0x4000ac2	            0x4154	                                push r12	      1814	obj-elf.c	FUNCTION_47
0x4000ac4	              0x55	                                push rbp	      1814	obj-elf.c	FUNCTION_47
0x4000ac5	              0x53	                                push rbx	      1814	obj-elf.c	FUNCTION_47
0x4000ac6	        0x4883ec08	                              sub rsp, 8	      1814	obj-elf.c	FUNCTION_47
0x4000aca	    0x488b35000000	            mov rsi, qword [0x04000ad1] 	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4000ad1	    0x488b2d000000	            mov rbp, qword [0x04000ad8] 	      1818	obj-elf.c	FUNCTION_47
0x4000ad8	    0x448b25000000	           mov r12d, dword [0x04000adf] 	      1819	obj-elf.c	FUNCTION_47
0x4000adf	           0xfb606	                   movzx eax, byte [rsi]	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4000ae2	            0x3c20	                            cmp al, 0x20	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4000ae4	     0xf8446010000	                            je 0x4000c30	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4000aea	            0x3c22	                            cmp al, 0x22	      1825	obj-elf.c	FUNCTION_47	IF_1
0x4000aec	            0x7432	                            je 0x4000b20	      1825	obj-elf.c	FUNCTION_47	IF_1
0x4000aee	      0xba05000000	                              mov edx, 5	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4000af3	      0xbe00000000	                              mov esi, 0	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4000af8	            0x31ff	                            xor edi, edi	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4000afa	      0xe800000000	                          call 0x4000aff	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4000aff	          0x4889c7	                            mov rdi, rax	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4000b02	            0x31c0	                            xor eax, eax	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4000b04	      0xe800000000	                          call 0x4000b09	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x4000b09	        0x4883c408	                              add rsp, 8	      1871	obj-elf.c	FUNCTION_47
0x4000b0d	              0x5b	                                 pop rbx	      1871	obj-elf.c	FUNCTION_47
0x4000b0e	              0x5d	                                 pop rbp	      1871	obj-elf.c	FUNCTION_47
0x4000b0f	            0x415c	                                 pop r12	      1871	obj-elf.c	FUNCTION_47
0x4000b11	            0x415d	                                 pop r13	      1871	obj-elf.c	FUNCTION_47
0x4000b13	      0xe900000000	                           jmp 0x4000b18	      1870	obj-elf.c	FUNCTION_47	CALL_20
0x4000b18	     0xf1f84000000	                   nop dword [rax + rax]	      1870	obj-elf.c	FUNCTION_47	CALL_20
0x4000b20	        0x488d5e01	                      lea rbx, [rsi + 1]	      1829	obj-elf.c	FUNCTION_47	IF_1
0x4000b24	    0x48891d000000	            mov qword [0x04000b2b], rbx 	      1829	obj-elf.c	FUNCTION_47	IF_1
0x4000b2b	       0xf1f440000	                   nop dword [rax + rax]	      1829	obj-elf.c	FUNCTION_47	IF_1
0x4000b30	      0xe800000000	                          call 0x4000b35	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x4000b35	      0x3dff000000	                           cmp eax, 0xff	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x4000b3a	            0x76f4	                           jbe 0x4000b30	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x4000b3c	    0x488b05000000	            mov rax, qword [0x04000b43] 	      1834	obj-elf.c	FUNCTION_47	IF_1
0x4000b43	            0x31f6	                            xor esi, esi	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x4000b45	      0xbf00000000	                              mov edi, 0	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x4000b4a	           0xfb610	                   movzx edx, byte [rax]	      1834	obj-elf.c	FUNCTION_47	IF_1
0x4000b4d	          0xc60000	                       mov byte [rax], 0	      1835	obj-elf.c	FUNCTION_47	IF_1
0x4000b50	    0x488b05000000	            mov rax, qword [0x04000b57] 	      1836	obj-elf.c	FUNCTION_47	IF_1
0x4000b57	        0xc640ff00	                   mov byte [rax - 1], 0	      1836	obj-elf.c	FUNCTION_47	IF_1
0x4000b5b	    0x488b05000000	            mov rax, qword [0x04000b62] 	      1837	obj-elf.c	FUNCTION_47	IF_1
0x4000b62	            0x8810	                      mov byte [rax], dl	      1837	obj-elf.c	FUNCTION_47	IF_1
0x4000b64	      0xe800000000	                          call 0x4000b69	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x4000b69	    0x488b3d000000	            mov rdi, qword [0x04000b70] 	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x4000b70	      0xba08010000	                          mov edx, 0x108	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x4000b75	          0x4989c5	                            mov r13, rax	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x4000b78	          0x4889c6	                            mov rsi, rax	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x4000b7b	      0xe800000000	                          call 0x4000b80	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x4000b80	      0xbe02000000	                              mov esi, 2	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x4000b85	          0x4c89ef	                            mov rdi, r13	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x4000b88	      0xe800000000	                          call 0x4000b8d	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x4000b8d	          0x4889df	                            mov rdi, rbx	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x4000b90	      0xe800000000	                          call 0x4000b95	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x4000b95	        0x448d6801	                     lea r13d, [rax + 1]	      1851	obj-elf.c	FUNCTION_47	IF_1
0x4000b99	      0xbf04000000	                              mov edi, 4	      1854	obj-elf.c	FUNCTION_47	IF_1	CALL_8
0x4000b9e	      0xe800000000	                          call 0x4000ba3	      1854	obj-elf.c	FUNCTION_47	IF_1	CALL_8
0x4000ba3	          0x4c89ee	                            mov rsi, r13	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x4000ba6	      0xba04000000	                              mov edx, 4	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x4000bab	          0x4889c7	                            mov rdi, rax	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x4000bae	      0xe800000000	                          call 0x4000bb3	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x4000bb3	      0xbf04000000	                              mov edi, 4	      1856	obj-elf.c	FUNCTION_47	IF_1	CALL_10
0x4000bb8	      0xe800000000	                          call 0x4000bbd	      1856	obj-elf.c	FUNCTION_47	IF_1	CALL_10
0x4000bbd	      0xba04000000	                              mov edx, 4	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4000bc2	            0x31f6	                            xor esi, esi	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4000bc4	          0x4889c7	                            mov rdi, rax	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4000bc7	      0xe800000000	                          call 0x4000bcc	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4000bcc	      0xbf04000000	                              mov edi, 4	      1858	obj-elf.c	FUNCTION_47	IF_1	CALL_12
0x4000bd1	      0xe800000000	                          call 0x4000bd6	      1858	obj-elf.c	FUNCTION_47	IF_1	CALL_12
0x4000bd6	      0xba04000000	                              mov edx, 4	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4000bdb	      0xbe01000000	                              mov esi, 1	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4000be0	          0x4889c7	                            mov rdi, rax	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4000be3	      0xe800000000	                          call 0x4000be8	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4000be8	          0x4c89ef	                            mov rdi, r13	      1860	obj-elf.c	FUNCTION_47	IF_1	CALL_14
0x4000beb	      0xe800000000	                          call 0x4000bf0	      1860	obj-elf.c	FUNCTION_47	IF_1	CALL_14
0x4000bf0	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_68	CALL_3
0x4000bf3	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_68	CALL_3
0x4000bf6	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_68	CALL_3
0x4000bf9	      0xe800000000	                          call 0x4000bfe	        53	string3.h	FUNCTION_68	CALL_3
0x4000bfe	            0x31d2	                            xor edx, edx	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4000c00	            0x31f6	                            xor esi, esi	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4000c02	      0xbf02000000	                              mov edi, 2	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4000c07	      0xe800000000	                          call 0x4000c0c	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4000c0c	          0x4489e6	                           mov esi, r12d	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4000c0f	          0x4889ef	                            mov rdi, rbp	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4000c12	      0xe800000000	                          call 0x4000c17	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4000c17	        0x4883c408	                              add rsp, 8	      1871	obj-elf.c	FUNCTION_47
0x4000c1b	              0x5b	                                 pop rbx	      1871	obj-elf.c	FUNCTION_47
0x4000c1c	              0x5d	                                 pop rbp	      1871	obj-elf.c	FUNCTION_47
0x4000c1d	            0x415c	                                 pop r12	      1871	obj-elf.c	FUNCTION_47
0x4000c1f	            0x415d	                                 pop r13	      1871	obj-elf.c	FUNCTION_47
0x4000c21	      0xe900000000	                           jmp 0x4000c26	      1870	obj-elf.c	FUNCTION_47	CALL_20
0x4000c26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1870	obj-elf.c	FUNCTION_47	CALL_20
0x4000c30	        0x488d5601	                      lea rdx, [rsi + 1]	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4000c34	    0x488915000000	            mov qword [0x04000c3b], rdx 	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4000c3b	         0xfb64601	               movzx eax, byte [rsi + 1]	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4000c3f	          0x4889d6	                            mov rsi, rdx	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4000c42	      0xe9a3feffff	                           jmp 0x4000aea	      1824	obj-elf.c	FUNCTION_47	CALL_1
elf_frob_symbol	functions,0:SWITCH,0:IF,16:DO,0:ELSE,5:FOR,0:WHILE,0:CALL,49	199
0x4000d70	            0x4155	                                push r13	      2211	obj-elf.c	FUNCTION_57
0x4000d72	            0x4154	                                push r12	      2211	obj-elf.c	FUNCTION_57
0x4000d74	          0x4989f5	                            mov r13, rsi	      2211	obj-elf.c	FUNCTION_57
0x4000d77	              0x55	                                push rbp	      2211	obj-elf.c	FUNCTION_57
0x4000d78	              0x53	                                push rbx	      2211	obj-elf.c	FUNCTION_57
0x4000d79	          0x4889fb	                            mov rbx, rdi	      2211	obj-elf.c	FUNCTION_57
0x4000d7c	        0x4883ec08	                              sub rsp, 8	      2211	obj-elf.c	FUNCTION_57
0x4000d80	      0xe800000000	                          call 0x4000d85	      2220	obj-elf.c	FUNCTION_57	CALL_2
0x4000d85	        0x4c8b6008	                mov r12, qword [rax + 8]	      2222	obj-elf.c	FUNCTION_57
0x4000d89	          0x4889c5	                            mov rbp, rax	      2220	obj-elf.c	FUNCTION_57	CALL_2
0x4000d8c	          0x4d85e4	                           test r12, r12	      2223	obj-elf.c	FUNCTION_57	IF_2
0x4000d8f	            0x7460	                            je 0x4000df1	      2223	obj-elf.c	FUNCTION_57	IF_2
0x4000d91	          0x4c89e7	                            mov rdi, r12	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4000d94	      0xe800000000	                          call 0x4000d99	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4000d99	            0x85c0	                           test eax, eax	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4000d9b	          0x4889df	                            mov rdi, rbx	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4000d9e	            0x740c	                            je 0x4000dac	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4000da0	    0x41807c241802	                cmp byte [r12 + 0x18], 2	      2226	obj-elf.c	FUNCTION_57	IF_2	IF_3
0x4000da6	     0xf8474020000	                            je 0x4001020	      2226	obj-elf.c	FUNCTION_57	IF_2	IF_3
0x4000dac	    0x8b0500000000	            mov eax, dword [0x04000db2] 	      2230	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4000db2	            0x85c0	                           test eax, eax	      2230	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4000db4	     0xf845e010000	                            je 0x4000f18	      2230	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4000dba	      0xe800000000	                          call 0x4000dbf	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000dbf	      0xbe00000000	                              mov esi, 0	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000dc4	          0x4989c4	                            mov r12, rax	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000dc7	            0x31ff	                            xor edi, edi	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000dc9	      0xba05000000	                              mov edx, 5	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000dce	      0xe800000000	                          call 0x4000dd3	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000dd3	          0x4c89e6	                            mov rsi, r12	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000dd6	          0x4889c7	                            mov rdi, rax	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000dd9	            0x31c0	                            xor eax, eax	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000ddb	      0xe800000000	                          call 0x4000de0	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4000de0	        0x488b7d08	                mov rdi, qword [rbp + 8]	      2237	obj-elf.c	FUNCTION_57	IF_2	CALL_11
0x4000de4	      0xe800000000	                          call 0x4000de9	      2237	obj-elf.c	FUNCTION_57	IF_2	CALL_11
0x4000de9	    0x48c745080000	                  mov qword [rbp + 8], 0	      2238	obj-elf.c	FUNCTION_57	IF_2
0x4000df1	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      2241	obj-elf.c	FUNCTION_57	IF_5
0x4000df5	          0x4885ff	                           test rdi, rdi	      2241	obj-elf.c	FUNCTION_57	IF_5
0x4000df8	            0x743a	                            je 0x4000e34	      2241	obj-elf.c	FUNCTION_57	IF_5
0x4000dfa	      0xbe40000000	                           mov esi, 0x40	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4000dff	      0xe800000000	                          call 0x4000e04	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4000e04	          0x4885c0	                           test rax, rax	      2246	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4000e07	          0x4989c4	                            mov r12, rax	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x4000e0a	     0xf8480010000	                            je 0x4000f90	      2246	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4000e10	          0x4889df	                            mov rdi, rbx	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4000e13	      0xe800000000	                          call 0x4000e18	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4000e18	            0x85c0	                           test eax, eax	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4000e1a	            0x7534	                           jne 0x4000e50	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x4000e1c	    0x41807c240140	                cmp byte [r12 + 1], 0x40	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4000e22	     0xf8410020000	                            je 0x4001038	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4000e28	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4000e2c	          0x4889df	                            mov rdi, rbx	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4000e2f	      0xe800000000	                          call 0x4000e34	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4000e34	          0x4889df	                            mov rdi, rbx	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x4000e37	      0xe800000000	                          call 0x4000e3c	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x4000e3c	            0x85c0	                           test eax, eax	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x4000e3e	     0xf8504010000	                           jne 0x4000f48	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x4000e44	        0x4883c408	                              add rsp, 8	      2357	obj-elf.c	FUNCTION_57
0x4000e48	              0x5b	                                 pop rbx	      2357	obj-elf.c	FUNCTION_57
0x4000e49	              0x5d	                                 pop rbp	      2357	obj-elf.c	FUNCTION_57
0x4000e4a	            0x415c	                                 pop r12	      2357	obj-elf.c	FUNCTION_57
0x4000e4c	            0x415d	                                 pop r13	      2357	obj-elf.c	FUNCTION_57
0x4000e4e	              0xc3	                                     ret	      2357	obj-elf.c	FUNCTION_57
0x4000e4f	              0x90	                                     nop	      2357	obj-elf.c	FUNCTION_57
0x4000e50	    0x41807c240140	                cmp byte [r12 + 1], 0x40	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4000e56	     0xf8444010000	                            je 0x4000fa0	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4000e5c	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4000e60	      0xe800000000	                          call 0x4000e65	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4000e65	          0x4889df	                            mov rdi, rbx	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4000e68	          0x4989c4	                            mov r12, rax	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4000e6b	      0xe800000000	                          call 0x4000e70	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4000e70	            0x85c0	                           test eax, eax	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4000e72	          0x4889df	                            mov rdi, rbx	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000e75	     0xf8555010000	                           jne 0x4000fd0	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4000e7b	      0xe800000000	                          call 0x4000e80	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4000e80	          0x4c89e7	                            mov rdi, r12	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4000e83	          0x4889c6	                            mov rsi, rax	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4000e86	      0xe800000000	                          call 0x4000e8b	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x4000e8b	          0x4889df	                            mov rdi, rbx	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x4000e8e	      0xe800000000	                          call 0x4000e93	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x4000e93	          0x4889df	                            mov rdi, rbx	      2315	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_29
0x4000e96	          0x4889c5	                            mov rbp, rax	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x4000e99	      0xe800000000	                          call 0x4000e9e	      2315	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_29
0x4000e9e	          0x4889ee	                            mov rsi, rbp	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x4000ea1	          0x482b30	                    sub rsi, qword [rax]	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x4000ea4	          0x4c89e7	                            mov rdi, r12	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x4000ea7	      0xe800000000	                          call 0x4000eac	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x4000eac	          0x4889df	                            mov rdi, rbx	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4000eaf	      0xe800000000	                          call 0x4000eb4	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4000eb4	          0x4c89e7	                            mov rdi, r12	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4000eb7	          0x4889c6	                            mov rsi, rax	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4000eba	      0xe800000000	                          call 0x4000ebf	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4000ebf	          0x4889de	                            mov rsi, rbx	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4000ec2	          0x4c89e7	                            mov rdi, r12	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4000ec5	      0xe800000000	                          call 0x4000eca	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4000eca	          0x4c89e7	                            mov rdi, r12	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4000ecd	      0xe800000000	                          call 0x4000ed2	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4000ed2	          0x4889df	                            mov rdi, rbx	       246	obj-elf.c	FUNCTION_7	CALL_2
0x4000ed5	          0x4889c5	                            mov rbp, rax	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4000ed8	      0xe800000000	                          call 0x4000edd	       246	obj-elf.c	FUNCTION_7	CALL_2
0x4000edd	         0xfb64049	           movzx eax, byte [rax + 0x49] 	       246	obj-elf.c	FUNCTION_7	CALL_2
0x4000ee1	          0x4889df	                            mov rdi, rbx	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x4000ee4	          0x884549	               mov byte [rbp + 0x49], al	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4000ee7	      0xe800000000	                          call 0x4000eec	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x4000eec	            0x85c0	                           test eax, eax	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x4000eee	     0xf851c010000	                           jne 0x4001010	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x4000ef4	          0x4889df	                            mov rdi, rbx	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x4000ef7	      0xe800000000	                          call 0x4000efc	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x4000efc	            0x85c0	                           test eax, eax	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x4000efe	     0xf8430ffffff	                            je 0x4000e34	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x4000f04	          0x4c89e7	                            mov rdi, r12	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x4000f07	      0xe800000000	                          call 0x4000f0c	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x4000f0c	      0xe923ffffff	                           jmp 0x4000e34	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x4000f11	     0xf1f80000000	                         nop dword [rax]	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x4000f18	      0xe800000000	                          call 0x4000f1d	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f1d	            0x31ff	                            xor edi, edi	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f1f	          0x4989c4	                            mov r12, rax	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f22	      0xba05000000	                              mov edx, 5	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f27	      0xbe00000000	                              mov esi, 0	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f2c	      0xe800000000	                          call 0x4000f31	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f31	          0x4c89e6	                            mov rsi, r12	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f34	          0x4889c7	                            mov rdi, rax	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f37	            0x31c0	                            xor eax, eax	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f39	      0xe800000000	                          call 0x4000f3e	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f3e	      0xe99dfeffff	                           jmp 0x4000de0	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f43	       0xf1f440000	                   nop dword [rax + rax]	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4000f48	          0x4889df	                            mov rdi, rbx	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x4000f4b	      0xe800000000	                          call 0x4000f50	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x4000f50	            0x85c0	                           test eax, eax	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x4000f52	     0xf84ecfeffff	                            je 0x4000e44	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x4000f58	          0x4889df	                            mov rdi, rbx	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f5b	      0xe800000000	                          call 0x4000f60	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f60	      0xbe00000000	                              mov esi, 0	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f65	            0x31ff	                            xor edi, edi	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f67	      0xba05000000	                              mov edx, 5	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f6c	          0x4889c3	                            mov rbx, rax	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f6f	      0xe800000000	                          call 0x4000f74	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f74	        0x4883c408	                              add rsp, 8	      2357	obj-elf.c	FUNCTION_57
0x4000f78	          0x4889de	                            mov rsi, rbx	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f7b	          0x4889c7	                            mov rdi, rax	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f7e	              0x5b	                                 pop rbx	      2357	obj-elf.c	FUNCTION_57
0x4000f7f	              0x5d	                                 pop rbp	      2357	obj-elf.c	FUNCTION_57
0x4000f80	            0x415c	                                 pop r12	      2357	obj-elf.c	FUNCTION_57
0x4000f82	            0x415d	                                 pop r13	      2357	obj-elf.c	FUNCTION_57
0x4000f84	            0x31c0	                            xor eax, eax	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f86	      0xe900000000	                           jmp 0x4000f8b	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f8b	       0xf1f440000	                   nop dword [rax + rax]	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4000f90	    0x41c745000100	                      mov dword [r13], 1	      2248	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4000f98	      0xe997feffff	                           jmp 0x4000e34	      2248	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4000f9d	           0xf1f00	                         nop dword [rax]	      2248	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x4000fa0	    0x41807c240240	                cmp byte [r12 + 2], 0x40	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4000fa6	     0xf85b0feffff	                           jne 0x4000e5c	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4000fac	      0x4d8d6c2403	                      lea r13, [r12 + 3]	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4000fb1	          0x4c89ef	                            mov rdi, r13	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4000fb4	      0xe800000000	                          call 0x4000fb9	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4000fb9	      0x498d7c2402	                      lea rdi, [r12 + 2]	        59	string3.h	FUNCTION_69	CALL_3
0x4000fbe	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_69	CALL_3
0x4000fc2	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_69	CALL_3
0x4000fc5	      0xe800000000	                          call 0x4000fca	        59	string3.h	FUNCTION_69	CALL_3
0x4000fca	      0xe959feffff	                           jmp 0x4000e28	        59	string3.h	FUNCTION_69	CALL_3
0x4000fcf	              0x90	                                     nop	        59	string3.h	FUNCTION_69	CALL_3
0x4000fd0	      0xe800000000	                          call 0x4000fd5	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000fd5	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000fd9	          0x4989c4	                            mov r12, rax	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000fdc	      0xba05000000	                              mov edx, 5	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000fe1	      0xbe00000000	                              mov esi, 0	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000fe6	            0x31ff	                            xor edi, edi	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000fe8	      0xe800000000	                          call 0x4000fed	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000fed	          0x4c89e2	                            mov rdx, r12	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000ff0	          0x4889de	                            mov rsi, rbx	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000ff3	          0x4889c7	                            mov rdi, rax	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000ff6	            0x31c0	                            xor eax, eax	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000ff8	      0xe800000000	                          call 0x4000ffd	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4000ffd	    0x41c745000100	                      mov dword [r13], 1	      2305	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10
0x4001005	        0x4883c408	                              add rsp, 8	      2357	obj-elf.c	FUNCTION_57
0x4001009	              0x5b	                                 pop rbx	      2357	obj-elf.c	FUNCTION_57
0x400100a	              0x5d	                                 pop rbp	      2357	obj-elf.c	FUNCTION_57
0x400100b	            0x415c	                                 pop r12	      2357	obj-elf.c	FUNCTION_57
0x400100d	            0x415d	                                 pop r13	      2357	obj-elf.c	FUNCTION_57
0x400100f	              0xc3	                                     ret	      2357	obj-elf.c	FUNCTION_57
0x4001010	          0x4c89e7	                            mov rdi, r12	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x4001013	      0xe800000000	                          call 0x4001018	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x4001018	      0xe9d7feffff	                           jmp 0x4000ef4	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x400101d	           0xf1f00	                         nop dword [rax]	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x4001020	      0xe800000000	                          call 0x4001025	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4001025	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x400102a	        0x48895038	             mov qword [rax + 0x38], rdx	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x400102e	      0xe9adfdffff	                           jmp 0x4000de0	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4001033	       0xf1f440000	                   nop dword [rax + rax]	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4001038	        0x4c8b6510	            mov r12, qword [rbp + 0x10] 	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x400103c	      0xba05000000	                              mov edx, 5	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4001041	      0xbe00000000	                              mov esi, 0	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4001046	            0x31ff	                            xor edi, edi	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4001048	      0xe800000000	                          call 0x400104d	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x400104d	          0x4c89e6	                            mov rsi, r12	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4001050	          0x4889c7	                            mov rdi, rax	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4001053	            0x31c0	                            xor eax, eax	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4001055	      0xe800000000	                          call 0x400105a	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x400105a	    0x41c745000100	                      mov dword [r13], 1	      2271	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x4001062	      0xe9c1fdffff	                           jmp 0x4000e28	      2271	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
obj_elf_local	functions,0:SWITCH,0:IF,2:DO,1:ELSE,0:FOR,0:WHILE,0:CALL,5	80
0x4002120	              0x55	                                push rbp	       426	obj-elf.c	FUNCTION_16
0x4002121	              0x53	                                push rbx	       426	obj-elf.c	FUNCTION_16
0x4002122	        0x4883ec18	                           sub rsp, 0x18	       426	obj-elf.c	FUNCTION_16
0x4002126	    0x64488b042528	                mov rax, qword fs:[0x28]	       426	obj-elf.c	FUNCTION_16
0x400212f	      0x4889442408	                mov qword [rsp + 8], rax	       426	obj-elf.c	FUNCTION_16
0x4002134	            0x31c0	                            xor eax, eax	       426	obj-elf.c	FUNCTION_16
0x4002136	          0x4889e7	                            mov rdi, rsp	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4002139	      0xe800000000	                          call 0x400213e	       413	obj-elf.c	FUNCTION_15	CALL_1
0x400213e	        0x488b3c24	                    mov rdi, qword [rsp]	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4002142	            0x89c5	                            mov ebp, eax	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4002144	      0xe800000000	                          call 0x4002149	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4002149	          0x4889c3	                            mov rbx, rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400214c	    0x488b05000000	            mov rax, qword [0x04002153] 	       415	obj-elf.c	FUNCTION_15
0x4002153	          0x408828	                     mov byte [rax], bpl	       415	obj-elf.c	FUNCTION_15
0x4002156	    0x488b05000000	            mov rax, qword [0x0400215d] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400215d	           0xfb610	                   movzx edx, byte [rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002160	          0x80fa22	                            cmp dl, 0x22	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002163	     0xf84d7000000	                            je 0x4002240	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002169	          0x80fa20	                            cmp dl, 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400216c	            0x7472	                            je 0x40021e0	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400216e	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002172	            0x747d	                            je 0x40021f1	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002174	           0xfb628	                   movzx ebp, byte [rax]	       433	obj-elf.c	FUNCTION_16	DO_1
0x4002177	          0x4889df	                            mov rdi, rbx	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x400217a	      0xe800000000	                          call 0x400217f	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x400217f	          0x4889df	                            mov rdi, rbx	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4002182	      0xe800000000	                          call 0x4002187	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4002187	        0x4080fd2c	                           cmp bpl, 0x2c	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x400218b	    0xc70001000000	                      mov dword [rax], 1	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4002191	            0x7528	                           jne 0x40021bb	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4002193	    0x488b05000000	            mov rax, qword [0x0400219a] 	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x400219a	        0x488d5001	                      lea rdx, [rax + 1]	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x400219e	    0x488915000000	            mov qword [0x040021a5], rdx 	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x40021a5	         0xfb65001	               movzx edx, byte [rax + 1]	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x40021a9	          0x80fa20	                            cmp dl, 0x20	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x40021ac	     0xf84ae000000	                            je 0x4002260	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x40021b2	          0x80fa0a	                             cmp dl, 0xa	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x40021b5	     0xf857bffffff	                           jne 0x4002136	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x40021bb	      0xe800000000	                          call 0x40021c0	       445	obj-elf.c	FUNCTION_16	CALL_5
0x40021c0	      0x488b442408	                mov rax, qword [rsp + 8]	       446	obj-elf.c	FUNCTION_16
0x40021c5	    0x644833042528	                xor rax, qword fs:[0x28]	       446	obj-elf.c	FUNCTION_16
0x40021ce	     0xf85a0000000	                           jne 0x4002274	       446	obj-elf.c	FUNCTION_16
0x40021d4	        0x4883c418	                           add rsp, 0x18	       446	obj-elf.c	FUNCTION_16
0x40021d8	              0x5b	                                 pop rbx	       446	obj-elf.c	FUNCTION_16
0x40021d9	              0x5d	                                 pop rbp	       446	obj-elf.c	FUNCTION_16
0x40021da	              0xc3	                                     ret	       446	obj-elf.c	FUNCTION_16
0x40021db	       0xf1f440000	                   nop dword [rax + rax]	       446	obj-elf.c	FUNCTION_16
0x40021e0	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40021e4	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x40021e8	    0x488905000000	            mov qword [0x040021ef], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40021ef	            0x7583	                           jne 0x4002174	       419	obj-elf.c	FUNCTION_15	IF_1
0x40021f1	      0xba05000000	                              mov edx, 5	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40021f6	      0xbe00000000	                              mov esi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40021fb	            0x31ff	                            xor edi, edi	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40021fd	      0xe800000000	                          call 0x4002202	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002202	          0x4889c7	                            mov rdi, rax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002205	            0x31c0	                            xor eax, eax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4002207	      0xe800000000	                          call 0x400220c	       420	obj-elf.c	FUNCTION_15	CALL_5
0x400220c	    0x488b05000000	            mov rax, qword [0x04002213] 	       433	obj-elf.c	FUNCTION_16	DO_1
0x4002213	          0x4889df	                            mov rdi, rbx	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x4002216	           0xfb628	                   movzx ebp, byte [rax]	       433	obj-elf.c	FUNCTION_16	DO_1
0x4002219	      0xe800000000	                          call 0x400221e	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x400221e	          0x4889df	                            mov rdi, rbx	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4002221	      0xe800000000	                          call 0x4002226	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4002226	        0x4080fd2c	                           cmp bpl, 0x2c	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x400222a	    0xc70001000000	                      mov dword [rax], 1	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4002230	            0x7589	                           jne 0x40021bb	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4002232	      0xe95cffffff	                           jmp 0x4002193	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4002237	    0x660f1f840000	                    nop word [rax + rax]	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4002240	        0x488d4801	                      lea rcx, [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002244	    0x48890d000000	            mov qword [0x0400224b], rcx 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400224b	         0xfb65001	               movzx edx, byte [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400224f	          0x4889c8	                            mov rax, rcx	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002252	      0xe912ffffff	                           jmp 0x4002169	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002257	    0x660f1f840000	                    nop word [rax + rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002260	        0x488d5002	                      lea rdx, [rax + 2]	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4002264	    0x488915000000	            mov qword [0x0400226b], rdx 	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x400226b	         0xfb65002	               movzx edx, byte [rax + 2]	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x400226f	      0xe93effffff	                           jmp 0x40021b2	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4002274	      0xe800000000	                          call 0x4002279	       446	obj-elf.c	FUNCTION_16
obj_elf_size	functions,0:SWITCH,0:IF,4:DO,0:ELSE,1:FOR,0:WHILE,0:CALL,17	115
0x4000310	            0x4154	                                push r12	      1875	obj-elf.c	FUNCTION_48
0x4000312	              0x55	                                push rbp	      1875	obj-elf.c	FUNCTION_48
0x4000313	              0x53	                                push rbx	      1875	obj-elf.c	FUNCTION_48
0x4000314	        0x4883ec40	                           sub rsp, 0x40	      1875	obj-elf.c	FUNCTION_48
0x4000318	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x400031d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1875	obj-elf.c	FUNCTION_48
0x4000326	      0x4889442438	             mov qword [rsp + 0x38], rax	      1875	obj-elf.c	FUNCTION_48
0x400032b	            0x31c0	                            xor eax, eax	      1875	obj-elf.c	FUNCTION_48
0x400032d	      0xe800000000	                          call 0x4000332	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x4000332	    0x488b1d000000	            mov rbx, qword [0x04000339] 	      1882	obj-elf.c	FUNCTION_48
0x4000339	            0x89c5	                            mov ebp, eax	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x400033b	            0x8803	                      mov byte [rbx], al	      1883	obj-elf.c	FUNCTION_48
0x400033d	    0x488b05000000	            mov rax, qword [0x04000344] 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000344	           0xfb610	                   movzx edx, byte [rax]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000347	          0x80fa22	                            cmp dl, 0x22	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400034a	     0xf8420010000	                            je 0x4000470	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000350	          0x80fa20	                            cmp dl, 0x20	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000353	     0xf84f7000000	                            je 0x4000450	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000359	          0x80fa2c	                            cmp dl, 0x2c	      1885	obj-elf.c	FUNCTION_48	IF_1
0x400035c	            0x7452	                            je 0x40003b0	      1885	obj-elf.c	FUNCTION_48	IF_1
0x400035e	          0xc60300	                       mov byte [rbx], 0	      1887	obj-elf.c	FUNCTION_48	IF_1
0x4000361	      0x4c8b642408	                mov r12, qword [rsp + 8]	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000366	      0xba05000000	                              mov edx, 5	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x400036b	      0xbe00000000	                              mov esi, 0	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000370	            0x31ff	                            xor edi, edi	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000372	      0xe800000000	                          call 0x4000377	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000377	          0x4c89e6	                            mov rsi, r12	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x400037a	          0x4889c7	                            mov rdi, rax	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x400037d	            0x31c0	                            xor eax, eax	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x400037f	      0xe800000000	                          call 0x4000384	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000384	          0x40882b	                     mov byte [rbx], bpl	      1889	obj-elf.c	FUNCTION_48	IF_1
0x4000387	      0xe800000000	                          call 0x400038c	      1890	obj-elf.c	FUNCTION_48	IF_1	CALL_5
0x400038c	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1919	obj-elf.c	FUNCTION_48
0x4000391	    0x644833042528	                xor rax, qword fs:[0x28]	      1919	obj-elf.c	FUNCTION_48
0x400039a	     0xf8566010000	                           jne 0x4000506	      1919	obj-elf.c	FUNCTION_48
0x40003a0	        0x4883c440	                           add rsp, 0x40	      1919	obj-elf.c	FUNCTION_48
0x40003a4	              0x5b	                                 pop rbx	      1919	obj-elf.c	FUNCTION_48
0x40003a5	              0x5d	                                 pop rbp	      1919	obj-elf.c	FUNCTION_48
0x40003a6	            0x415c	                                 pop r12	      1919	obj-elf.c	FUNCTION_48
0x40003a8	              0xc3	                                     ret	      1919	obj-elf.c	FUNCTION_48
0x40003a9	     0xf1f80000000	                         nop dword [rax]	      1919	obj-elf.c	FUNCTION_48
0x40003b0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x40003b5	        0x4883c001	                              add rax, 1	      1893	obj-elf.c	FUNCTION_48
0x40003b9	            0x31ff	                            xor edi, edi	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x40003bb	      0xba01000000	                              mov edx, 1	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x40003c0	    0x488905000000	            mov qword [0x040003c7], rax 	      1893	obj-elf.c	FUNCTION_48
0x40003c7	      0xe800000000	                          call 0x40003cc	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x40003cc	      0x807c242801	                cmp byte [rsp + 0x28], 1	      1895	obj-elf.c	FUNCTION_48	IF_2
0x40003d1	     0xf8401010000	                            je 0x40004d8	      1895	obj-elf.c	FUNCTION_48	IF_2
0x40003d7	          0xc60300	                       mov byte [rbx], 0	      1901	obj-elf.c	FUNCTION_48
0x40003da	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x40003df	      0xe800000000	                          call 0x40003e4	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x40003e4	          0x40882b	                     mov byte [rbx], bpl	      1903	obj-elf.c	FUNCTION_48
0x40003e7	      0x807c242802	                cmp byte [rsp + 0x28], 2	      1904	obj-elf.c	FUNCTION_48	IF_3
0x40003ec	          0x4989c4	                            mov r12, rax	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x40003ef	          0x4889c7	                            mov rdi, rax	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x40003f2	     0xf8498000000	                            je 0x4000490	      1904	obj-elf.c	FUNCTION_48	IF_3
0x40003f8	      0xe800000000	                          call 0x40003fd	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x40003fd	      0xbf20000000	                           mov edi, 0x20	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000402	          0x4889c3	                            mov rbx, rax	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000405	      0xe800000000	                          call 0x400040a	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x400040a	          0x4c89e7	                            mov rdi, r12	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400040d	        0x48894308	                mov qword [rbx + 8], rax	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000411	      0xe800000000	                          call 0x4000416	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000416	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400041b	        0x488b4008	                mov rax, qword [rax + 8]	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400041f	          0x488910	                    mov qword [rax], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000422	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000427	        0x48895008	                mov qword [rax + 8], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400042b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000430	        0x48895010	             mov qword [rax + 0x10], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000434	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000439	        0x48895018	             mov qword [rax + 0x18], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x400043d	      0xe800000000	                          call 0x4000442	      1918	obj-elf.c	FUNCTION_48	CALL_17
0x4000442	      0xe945ffffff	                           jmp 0x400038c	      1918	obj-elf.c	FUNCTION_48	CALL_17
0x4000447	    0x660f1f840000	                    nop word [rax + rax]	      1918	obj-elf.c	FUNCTION_48	CALL_17
0x4000450	        0x488d4801	                      lea rcx, [rax + 1]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000454	    0x48890d000000	            mov qword [0x0400045b], rcx 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400045b	         0xfb65001	               movzx edx, byte [rax + 1]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400045f	          0x4889c8	                            mov rax, rcx	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000462	      0xe9f2feffff	                           jmp 0x4000359	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000467	    0x660f1f840000	                    nop word [rax + rax]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000470	        0x488d4801	                      lea rcx, [rax + 1]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000474	    0x48890d000000	            mov qword [0x0400047b], rcx 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400047b	         0xfb65001	               movzx edx, byte [rax + 1]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x400047f	          0x4889c8	                            mov rax, rcx	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000482	      0xe9c9feffff	                           jmp 0x4000350	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000487	    0x660f1f840000	                    nop word [rax + rax]	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000490	      0xe800000000	                          call 0x4000495	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4000495	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x400049a	          0x4c89e7	                            mov rdi, r12	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x400049d	        0x48895038	             mov qword [rax + 0x38], rdx	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x40004a1	      0xe800000000	                          call 0x40004a6	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x40004a6	      0x4883780800	                  cmp qword [rax + 8], 0	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x40004ab	            0x7490	                            je 0x400043d	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x40004ad	          0x4c89e7	                            mov rdi, r12	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x40004b0	      0xe800000000	                          call 0x40004b5	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x40004b5	        0x488b7808	                mov rdi, qword [rax + 8]	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x40004b9	      0xe800000000	                          call 0x40004be	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x40004be	          0x4c89e7	                            mov rdi, r12	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x40004c1	      0xe800000000	                          call 0x40004c6	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x40004c6	    0x48c740080000	                  mov qword [rax + 8], 0	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x40004ce	      0xe96affffff	                           jmp 0x400043d	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x40004d3	       0xf1f440000	                   nop dword [rax + rax]	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x40004d8	      0xba05000000	                              mov edx, 5	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40004dd	      0xbe00000000	                              mov esi, 0	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40004e2	            0x31ff	                            xor edi, edi	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40004e4	      0xe800000000	                          call 0x40004e9	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40004e9	          0x4889c7	                            mov rdi, rax	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40004ec	            0x31c0	                            xor eax, eax	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40004ee	      0xe800000000	                          call 0x40004f3	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x40004f3	      0xc644242802	                mov byte [rsp + 0x28], 2	      1898	obj-elf.c	FUNCTION_48	IF_2
0x40004f8	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1899	obj-elf.c	FUNCTION_48	IF_2
0x4000501	      0xe9d1feffff	                           jmp 0x40003d7	      1899	obj-elf.c	FUNCTION_48	IF_2
0x4000506	      0xe800000000	                          call 0x400050b	      1919	obj-elf.c	FUNCTION_48
elf_separate_stab_sections	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,0	2
0x4000070	      0xb801000000	                              mov eax, 1	      2681	obj-elf.c	FUNCTION_66
0x4000075	              0xc3	                                     ret	      2681	obj-elf.c	FUNCTION_66
obj_elf_tls_common	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,2	11
0x4000110	        0x4883ec08	                              sub rsp, 8	       390	obj-elf.c	FUNCTION_13
0x4000114	            0x31ff	                            xor edi, edi	       391	obj-elf.c	FUNCTION_13	CALL_1
0x4000116	      0xbe00000000	                              mov esi, 0	       391	obj-elf.c	FUNCTION_13	CALL_1
0x400011b	      0xe800000000	                          call 0x4000120	       391	obj-elf.c	FUNCTION_13	CALL_1
0x4000120	          0x4885c0	                           test rax, rax	       393	obj-elf.c	FUNCTION_13	IF_1
0x4000123	            0x740f	                            je 0x4000134	       393	obj-elf.c	FUNCTION_13	IF_1
0x4000125	          0x4889c7	                            mov rdi, rax	       394	obj-elf.c	FUNCTION_13	CALL_2
0x4000128	      0xe800000000	                          call 0x400012d	       394	obj-elf.c	FUNCTION_13	CALL_2
0x400012d	    0x814818000004	          or dword [rax + 0x18], 0x40000	       394	obj-elf.c	FUNCTION_13	CALL_2
0x4000134	        0x4883c408	                              add rsp, 8	       395	obj-elf.c	FUNCTION_13
0x4000138	              0xc3	                                     ret	       395	obj-elf.c	FUNCTION_13
elf_s_set_size	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	6
0x40001d0	              0x53	                                push rbx	       227	obj-elf.c	FUNCTION_4
0x40001d1	          0x4889f3	                            mov rbx, rsi	       227	obj-elf.c	FUNCTION_4
0x40001d4	      0xe800000000	                          call 0x40001d9	       228	obj-elf.c	FUNCTION_4	CALL_1
0x40001d9	        0x48895838	             mov qword [rax + 0x38], rbx	       228	obj-elf.c	FUNCTION_4	CALL_1
0x40001dd	              0x5b	                                 pop rbx	       229	obj-elf.c	FUNCTION_4
0x40001de	              0xc3	                                     ret	       229	obj-elf.c	FUNCTION_4
obj_elf_seen_attribute	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:FOR,1:WHILE,0:CALL,0	25
0x4003cf0	    0x488b05000000	            mov rax, qword [0x04003cf7] 	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4003cf7	            0x89f2	                            mov edx, esi	      1635	obj-elf.c	FUNCTION_41
0x4003cf9	          0xc1ea06	                              shr edx, 6	      1635	obj-elf.c	FUNCTION_41
0x4003cfc	          0x4885c0	                           test rax, rax	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4003cff	            0x750f	                           jne 0x4003d10	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4003d01	            0xeb2f	                           jmp 0x4003d32	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4003d03	       0xf1f440000	                   nop dword [rax + rax]	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4003d08	          0x488b00	                    mov rax, qword [rax]	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4003d0b	          0x4885c0	                           test rax, rax	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4003d0e	            0x7420	                            je 0x4003d30	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x4003d10	          0x397808	                cmp dword [rax + 8], edi	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d13	            0x75f3	                           jne 0x4003d08	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d15	          0x3b500c	              cmp edx, dword [rax + 0xc]	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d18	            0x75ee	                           jne 0x4003d08	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d1a	            0x89f1	                            mov ecx, esi	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d1c	      0xba01000000	                              mov edx, 1	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d21	          0x48d3e2	                             shl rdx, cl	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d24	        0x48855010	           test qword [rax + 0x10], rdx 	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d28	           0xf95c0	                                setne al	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d2b	           0xfb6c0	                           movzx eax, al	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d2e	              0xc3	                                     ret	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d2f	              0x90	                                     nop	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d30	            0xf3c3	                                     ret	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x4003d32	            0x31c0	                            xor eax, eax	      1640	obj-elf.c	FUNCTION_41
0x4003d34	              0xc3	                                     ret	      1641	obj-elf.c	FUNCTION_41
obj_elf_change_section	functions,0:SWITCH,0:IF,27:DO,0:ELSE,12:FOR,0:WHILE,0:CALL,39	349
0x40026a0	            0x4157	                                push r15	       568	obj-elf.c	FUNCTION_20
0x40026a2	            0x4156	                                push r14	       568	obj-elf.c	FUNCTION_20
0x40026a4	          0x4989cf	                            mov r15, rcx	       568	obj-elf.c	FUNCTION_20
0x40026a7	            0x4155	                                push r13	       568	obj-elf.c	FUNCTION_20
0x40026a9	            0x4154	                                push r12	       568	obj-elf.c	FUNCTION_20
0x40026ab	          0x4d89cd	                             mov r13, r9	       568	obj-elf.c	FUNCTION_20
0x40026ae	              0x55	                                push rbp	       568	obj-elf.c	FUNCTION_20
0x40026af	              0x53	                                push rbx	       568	obj-elf.c	FUNCTION_20
0x40026b0	          0x4889fd	                            mov rbp, rdi	       568	obj-elf.c	FUNCTION_20
0x40026b3	            0x89f3	                            mov ebx, esi	       568	obj-elf.c	FUNCTION_20
0x40026b5	        0x4883ec38	                           sub rsp, 0x38	       568	obj-elf.c	FUNCTION_20
0x40026b9	        0x8b4c2478	            mov ecx, dword [rsp + 0x78] 	       581	obj-elf.c	FUNCTION_20	IF_1
0x40026bd	        0x89542408	                mov dword [rsp + 8], edx	       568	obj-elf.c	FUNCTION_20
0x40026c1	    0x64488b042528	                mov rax, qword fs:[0x28]	       568	obj-elf.c	FUNCTION_20
0x40026ca	      0x4889442428	             mov qword [rsp + 0x28], rax	       568	obj-elf.c	FUNCTION_20
0x40026cf	            0x31c0	                            xor eax, eax	       568	obj-elf.c	FUNCTION_20
0x40026d1	      0x448944240c	              mov dword [rsp + 0xc], r8d	       568	obj-elf.c	FUNCTION_20
0x40026d6	            0x85c9	                           test ecx, ecx	       581	obj-elf.c	FUNCTION_20	IF_1
0x40026d8	     0xf8562020000	                           jne 0x4002940	       581	obj-elf.c	FUNCTION_20	IF_1
0x40026de	    0x488b0d000000	            mov rcx, qword [0x040026e5] 	       581	obj-elf.c	FUNCTION_20	IF_1
0x40026e5	    0x8b1500000000	            mov edx, dword [0x040026eb] 	       581	obj-elf.c	FUNCTION_20	IF_1
0x40026eb	        0x8b442408	                mov eax, dword [rsp + 8]	       596	obj-elf.c	FUNCTION_20
0x40026ef	    0x488b3d000000	            mov rdi, qword [0x040026f6] 	       597	obj-elf.c	FUNCTION_20	CALL_3
0x40026f6	          0x4889ee	                            mov rsi, rbp	       597	obj-elf.c	FUNCTION_20	CALL_3
0x40026f9	    0x48890d000000	            mov qword [0x04002700], rcx 	       592	obj-elf.c	FUNCTION_20
0x4002700	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4002705	    0x891500000000	            mov dword [0x0400270b], edx 	       593	obj-elf.c	FUNCTION_20
0x400270b	      0xba00000000	                              mov edx, 0	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4002710	      0x4c896c2410	             mov qword [rsp + 0x10], r13	       595	obj-elf.c	FUNCTION_20
0x4002715	        0x89442418	             mov dword [rsp + 0x18], eax	       596	obj-elf.c	FUNCTION_20
0x4002719	      0xe800000000	                          call 0x400271e	       597	obj-elf.c	FUNCTION_20	CALL_3
0x400271e	            0x31f6	                            xor esi, esi	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4002720	          0x4885c0	                           test rax, rax	       599	obj-elf.c	FUNCTION_20	IF_2
0x4002723	          0x4989c6	                            mov r14, rax	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4002726	     0xf8434030000	                            je 0x4002a60	       599	obj-elf.c	FUNCTION_20	IF_2
0x400272c	          0x4889c7	                            mov rdi, rax	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x400272f	          0x4d89f4	                            mov r12, r14	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4002732	      0xe800000000	                          call 0x4002737	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4002737	    0x488b3d000000	            mov rdi, qword [0x0400273e] 	       607	obj-elf.c	FUNCTION_20	CALL_6
0x400273e	          0x4c89e6	                            mov rsi, r12	       608	obj-elf.c	FUNCTION_20
0x4002741	        0x488b4708	                mov rax, qword [rdi + 8]	       607	obj-elf.c	FUNCTION_20	CALL_6
0x4002745	    0x488b90680300	           mov rdx, qword [rax + 0x368] 	       607	obj-elf.c	FUNCTION_20	CALL_6
0x400274c	        0x48891424	                    mov qword [rsp], rdx	       608	obj-elf.c	FUNCTION_20
0x4002750	    0xff92a0000000	                 call qword [rdx + 0xa0]	       608	obj-elf.c	FUNCTION_20
0x4002756	          0x4885c0	                           test rax, rax	       610	obj-elf.c	FUNCTION_20	IF_3
0x4002759	          0x4889c1	                            mov rcx, rax	       608	obj-elf.c	FUNCTION_20
0x400275c	            0x7418	                            je 0x4002776	       610	obj-elf.c	FUNCTION_20	IF_3
0x400275e	            0x85db	                           test ebx, ebx	       614	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4002760	        0x488b1424	                    mov rdx, qword [rsp]	       614	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4002764	     0xf858e010000	                           jne 0x40028f8	       614	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x400276a	          0x8b5910	            mov ebx, dword [rcx + 0x10] 	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x400276d	          0x4d85f6	                           test r14, r14	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002770	     0xf844a030000	                            je 0x4002ac0	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002776	          0x4c89f8	                            mov rax, r15	       708	obj-elf.c	FUNCTION_20	IF_17
0x4002779	      0x2502000001	                      and eax, 0x1000002	       708	obj-elf.c	FUNCTION_20	IF_17
0x400277e	    0x483d00000001	                      cmp rax, 0x1000000	       708	obj-elf.c	FUNCTION_20	IF_17
0x4002784	     0xf8482040000	                            je 0x4002c0c	       708	obj-elf.c	FUNCTION_20	IF_17
0x400278a	          0x4c89f8	                            mov rax, r15	       713	obj-elf.c	FUNCTION_20
0x400278d	          0x83e001	                              and eax, 1	       713	obj-elf.c	FUNCTION_20
0x4002790	        0x4883f801	                              cmp rax, 1	       713	obj-elf.c	FUNCTION_20
0x4002794	          0x4519d2	                          sbb r10d, r10d	       713	obj-elf.c	FUNCTION_20
0x4002797	        0x4183e208	                             and r10d, 8	       713	obj-elf.c	FUNCTION_20
0x400279b	        0x4183c204	                             add r10d, 4	       713	obj-elf.c	FUNCTION_20
0x400279f	          0x4c89f8	                            mov rax, r15	       714	obj-elf.c	FUNCTION_20
0x40027a2	          0x48d1e8	                              shr rax, 1	       714	obj-elf.c	FUNCTION_20
0x40027a5	          0x83e001	                              and eax, 1	       714	obj-elf.c	FUNCTION_20
0x40027a8	          0x83fb08	                              cmp ebx, 8	       715	obj-elf.c	FUNCTION_20
0x40027ab	        0x440fb6c8	                           movzx r9d, al	       714	obj-elf.c	FUNCTION_20
0x40027af	     0xf84db010000	                            je 0x4002990	       715	obj-elf.c	FUNCTION_20
0x40027b5	            0x84c0	                             test al, al	       715	obj-elf.c	FUNCTION_20
0x40027b7	    0x41bb02000000	                             mov r11d, 2	       715	obj-elf.c	FUNCTION_20
0x40027bd	     0xf84cd010000	                            je 0x4002990	       715	obj-elf.c	FUNCTION_20
0x40027c3	          0x4c89f8	                            mov rax, r15	       716	obj-elf.c	FUNCTION_20
0x40027c6	          0x4489ff	                           mov edi, r15d	       712	obj-elf.c	FUNCTION_20
0x40027c9	          0x4489fa	                           mov edx, r15d	       719	obj-elf.c	FUNCTION_20
0x40027cc	          0x83e004	                              and eax, 4	       716	obj-elf.c	FUNCTION_20
0x40027cf	        0x4883f801	                              cmp rax, 1	       716	obj-elf.c	FUNCTION_20
0x40027d3	          0x4c89f8	                            mov rax, r15	       717	obj-elf.c	FUNCTION_20
0x40027d6	            0x19f6	                            sbb esi, esi	       716	obj-elf.c	FUNCTION_20
0x40027d8	          0x83e010	                           and eax, 0x10	       717	obj-elf.c	FUNCTION_20
0x40027db	            0xf7d6	                                 not esi	       716	obj-elf.c	FUNCTION_20
0x40027dd	          0x83e610	                           and esi, 0x10	       716	obj-elf.c	FUNCTION_20
0x40027e0	        0x4883f801	                              cmp rax, 1	       717	obj-elf.c	FUNCTION_20
0x40027e4	          0x4c89f8	                            mov rax, r15	       718	obj-elf.c	FUNCTION_20
0x40027e7	            0x19c9	                            sbb ecx, ecx	       717	obj-elf.c	FUNCTION_20
0x40027e9	          0x83e020	                           and eax, 0x20	       718	obj-elf.c	FUNCTION_20
0x40027ec	            0xf7d1	                                 not ecx	       717	obj-elf.c	FUNCTION_20
0x40027ee	    0x81e100008000	                       and ecx, 0x800000	       717	obj-elf.c	FUNCTION_20
0x40027f4	        0x4883f801	                              cmp rax, 1	       718	obj-elf.c	FUNCTION_20
0x40027f8	            0x19c0	                            sbb eax, eax	       718	obj-elf.c	FUNCTION_20
0x40027fa	    0x81e700040000	                          and edi, 0x400	       712	obj-elf.c	FUNCTION_20
0x4002800	          0xc1fa1f	                           sar edx, 0x1f	       719	obj-elf.c	FUNCTION_20
0x4002803	          0x4109f9	                             or r9d, edi	       712	obj-elf.c	FUNCTION_20
0x4002806	            0xf7d0	                                 not eax	       718	obj-elf.c	FUNCTION_20
0x4002808	    0x81e200800000	                         and edx, 0x8000	       719	obj-elf.c	FUNCTION_20
0x400280e	          0x4509ca	                            or r10d, r9d	       712	obj-elf.c	FUNCTION_20
0x4002811	      0x2500000001	                      and eax, 0x1000000	       718	obj-elf.c	FUNCTION_20
0x4002816	          0x4509da	                           or r10d, r11d	       712	obj-elf.c	FUNCTION_20
0x4002819	          0x4409d6	                            or esi, r10d	       712	obj-elf.c	FUNCTION_20
0x400281c	             0x9f1	                             or ecx, esi	       712	obj-elf.c	FUNCTION_20
0x400281e	             0x9c1	                             or ecx, eax	       712	obj-elf.c	FUNCTION_20
0x4002820	             0x9d1	                             or ecx, edx	       712	obj-elf.c	FUNCTION_20
0x4002822	        0x8b542470	            mov edx, dword [rsp + 0x70] 	       726	obj-elf.c	FUNCTION_20	IF_18
0x4002826	            0x89c8	                            mov eax, ecx	       726	obj-elf.c	FUNCTION_20	IF_18
0x4002828	       0xd00000200	                         or eax, 0x20000	       726	obj-elf.c	FUNCTION_20	IF_18
0x400282d	            0x85d2	                           test edx, edx	       726	obj-elf.c	FUNCTION_20	IF_18
0x400282f	           0xf45c8	                         cmovne ecx, eax	       726	obj-elf.c	FUNCTION_20	IF_18
0x4002832	          0x4d85f6	                           test r14, r14	       728	obj-elf.c	FUNCTION_20	IF_19
0x4002835	     0xf8495010000	                            je 0x40029d0	       728	obj-elf.c	FUNCTION_20	IF_19
0x400283b	            0x85db	                           test ebx, ebx	       756	obj-elf.c	FUNCTION_20	ELSE_11	IF_24
0x400283d	            0x7432	                            je 0x4002871	       756	obj-elf.c	FUNCTION_20	ELSE_11	IF_24
0x400283f	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x4002846	          0x395804	                cmp dword [rax + 4], ebx	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x4002849	            0x7426	                            je 0x4002871	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x400284b	      0xba05000000	                              mov edx, 5	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002850	      0xbe00000000	                              mov esi, 0	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002855	            0x31ff	                            xor edi, edi	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002857	        0x894c2408	                mov dword [rsp + 8], ecx	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x400285b	      0xe800000000	                          call 0x4002860	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002860	          0x4889ee	                            mov rsi, rbp	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002863	          0x4889c7	                            mov rdi, rax	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002866	            0x31c0	                            xor eax, eax	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002868	      0xe800000000	                          call 0x400286d	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x400286d	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002871	          0x4d85ff	                           test r15, r15	       760	obj-elf.c	FUNCTION_20	ELSE_11	IF_25
0x4002874	            0x745a	                            je 0x40028d0	       760	obj-elf.c	FUNCTION_20	ELSE_11	IF_25
0x4002876	        0x418b4620	            mov eax, dword [r14 + 0x20] 	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x400287a	            0x31c8	                            xor eax, ecx	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x400287c	      0xa91b848301	                     test eax, 0x183841b	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x4002881	     0xf8519010000	                           jne 0x40029a0	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x4002887	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	       774	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_36
0x400288f	        0x4c897808	                mov qword [rax + 8], r15	       774	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_36
0x4002893	    0x81e100008000	                       and ecx, 0x800000	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4002899	            0x7435	                            je 0x40028d0	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x400289b	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x400289f	    0x413986c40000	            cmp dword [r14 + 0xc4], eax 	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x40028a6	            0x7428	                            je 0x40028d0	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x40028a8	      0xbe00000000	                              mov esi, 0	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028ad	            0x31ff	                            xor edi, edi	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028af	      0xba05000000	                              mov edx, 5	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028b4	      0xe800000000	                          call 0x40028b9	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028b9	          0x4889ee	                            mov rsi, rbp	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028bc	          0x4889c7	                            mov rdi, rax	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028bf	            0x31c0	                            xor eax, eax	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028c1	      0xe800000000	                          call 0x40028c6	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40028d0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       784	obj-elf.c	FUNCTION_20
0x40028d5	    0x644833042528	                xor rax, qword fs:[0x28]	       784	obj-elf.c	FUNCTION_20
0x40028de	     0xf8523030000	                           jne 0x4002c07	       784	obj-elf.c	FUNCTION_20
0x40028e4	        0x4883c438	                           add rsp, 0x38	       784	obj-elf.c	FUNCTION_20
0x40028e8	              0x5b	                                 pop rbx	       784	obj-elf.c	FUNCTION_20
0x40028e9	              0x5d	                                 pop rbp	       784	obj-elf.c	FUNCTION_20
0x40028ea	            0x415c	                                 pop r12	       784	obj-elf.c	FUNCTION_20
0x40028ec	            0x415d	                                 pop r13	       784	obj-elf.c	FUNCTION_20
0x40028ee	            0x415e	                                 pop r14	       784	obj-elf.c	FUNCTION_20
0x40028f0	            0x415f	                                 pop r15	       784	obj-elf.c	FUNCTION_20
0x40028f2	              0xc3	                                     ret	       784	obj-elf.c	FUNCTION_20
0x40028f3	       0xf1f440000	                   nop dword [rax + rax]	       784	obj-elf.c	FUNCTION_20
0x40028f8	          0x8b4010	            mov eax, dword [rax + 0x10] 	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x40028fb	            0x39c3	                            cmp ebx, eax	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x40028fd	     0xf846afeffff	                            je 0x400276d	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x4002903	          0x4d85f6	                           test r14, r14	       618	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002906	     0xf8464010000	                            je 0x4002a70	       618	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x400290c	      0xba05000000	                              mov edx, 5	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002911	      0xbe00000000	                              mov esi, 0	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002916	            0x31ff	                            xor edi, edi	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002918	        0x48890c24	                    mov qword [rsp], rcx	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x400291c	      0xe800000000	                          call 0x4002921	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002921	          0x4889ee	                            mov rsi, rbp	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002924	          0x4889c7	                            mov rdi, rax	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002927	            0x31c0	                            xor eax, eax	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002929	      0xe800000000	                          call 0x400292e	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x400292e	        0x488b0c24	                    mov rcx, qword [rsp]	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x4002932	      0xe933feffff	                           jmp 0x400276a	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x4002937	    0x660f1f840000	                    nop word [rax + rax]	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x4002940	      0xbf20000000	                           mov edi, 0x20	       584	obj-elf.c	FUNCTION_20	IF_1	CALL_2
0x4002945	      0xe800000000	                          call 0x400294a	       584	obj-elf.c	FUNCTION_20	IF_1	CALL_2
0x400294a	    0x488b15000000	            mov rdx, qword [0x04002951] 	       585	obj-elf.c	FUNCTION_20	IF_1
0x4002951	    0x488b0d000000	            mov rcx, qword [0x04002958] 	       586	obj-elf.c	FUNCTION_20	IF_1
0x4002958	    0x8b3500000000	            mov esi, dword [0x0400295e] 	       589	obj-elf.c	FUNCTION_20	IF_1
0x400295e	    0x488905000000	            mov qword [0x04002965], rax 	       590	obj-elf.c	FUNCTION_20	IF_1
0x4002965	          0x488910	                    mov qword [rax], rdx	       585	obj-elf.c	FUNCTION_20	IF_1
0x4002968	    0x488b15000000	            mov rdx, qword [0x0400296f] 	       587	obj-elf.c	FUNCTION_20	IF_1
0x400296f	        0x48894808	                mov qword [rax + 8], rcx	       586	obj-elf.c	FUNCTION_20	IF_1
0x4002973	          0x89701c	             mov dword [rax + 0x1c], esi	       589	obj-elf.c	FUNCTION_20	IF_1
0x4002976	        0x48895010	             mov qword [rax + 0x10], rdx	       587	obj-elf.c	FUNCTION_20	IF_1
0x400297a	    0x8b1500000000	            mov edx, dword [0x04002980] 	       588	obj-elf.c	FUNCTION_20	IF_1
0x4002980	          0x895018	             mov dword [rax + 0x18], edx	       588	obj-elf.c	FUNCTION_20	IF_1
0x4002983	      0xe963fdffff	                           jmp 0x40026eb	       588	obj-elf.c	FUNCTION_20	IF_1
0x4002988	     0xf1f84000000	                   nop dword [rax + rax]	       588	obj-elf.c	FUNCTION_20	IF_1
0x4002990	          0x4531db	                          xor r11d, r11d	       715	obj-elf.c	FUNCTION_20
0x4002993	      0xe92bfeffff	                           jmp 0x40027c3	       715	obj-elf.c	FUNCTION_20
0x4002998	     0xf1f84000000	                   nop dword [rax + rax]	       715	obj-elf.c	FUNCTION_20
0x40029a0	      0xba05000000	                              mov edx, 5	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029a5	      0xbe00000000	                              mov esi, 0	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029aa	            0x31ff	                            xor edi, edi	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029ac	        0x894c2408	                mov dword [rsp + 8], ecx	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029b0	      0xe800000000	                          call 0x40029b5	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029b5	          0x4889ee	                            mov rsi, rbp	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029b8	          0x4889c7	                            mov rdi, rax	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029bb	            0x31c0	                            xor eax, eax	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029bd	      0xe800000000	                          call 0x40029c2	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029c2	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029c6	      0xe9c8feffff	                           jmp 0x4002893	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029cb	       0xf1f440000	                   nop dword [rax + rax]	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x40029d0	            0x85db	                           test ebx, ebx	       732	obj-elf.c	FUNCTION_20	IF_19	IF_20
0x40029d2	     0xf84c0010000	                            je 0x4002b98	       732	obj-elf.c	FUNCTION_20	IF_19	IF_20
0x40029d8	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	       734	obj-elf.c	FUNCTION_20	IF_19	CALL_21
0x40029e0	        0x8b742408	                mov esi, dword [rsp + 8]	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x40029e4	          0x83fb08	                              cmp ebx, 8	       739	obj-elf.c	FUNCTION_20	IF_19	IF_21
0x40029e7	          0x895804	                mov dword [rax + 4], ebx	       734	obj-elf.c	FUNCTION_20	IF_19	CALL_21
0x40029ea	        0x4c897808	                mov qword [rax + 8], r15	       735	obj-elf.c	FUNCTION_20	IF_19	CALL_22
0x40029ee	          0x89702c	             mov dword [rax + 0x2c], esi	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x40029f1	     0xf84b9010000	                            je 0x4002bb0	       739	obj-elf.c	FUNCTION_20	IF_19	IF_21
0x40029f7	    0x488b3d000000	            mov rdi, qword [0x040029fe] 	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x40029fe	            0x89ca	                            mov edx, ecx	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x4002a00	          0x4c89e6	                            mov rsi, r12	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x4002a03	        0x894c2408	                mov dword [rsp + 8], ecx	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x4002a07	      0xe800000000	                          call 0x4002a0c	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x4002a0c	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4002a10	    0x81e100008000	                       and ecx, 0x800000	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4002a16	            0x740c	                            je 0x4002a24	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4002a18	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       744	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4002a1c	    0x41898424c400	             mov dword [r12 + 0xc4], eax	       744	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4002a24	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x4002a2c	          0x4889ef	                            mov rdi, rbp	       748	obj-elf.c	FUNCTION_20	IF_19	CALL_27
0x4002a2f	    0x4c89a8b00000	             mov qword [rax + 0xb0], r13	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x4002a36	      0xe800000000	                          call 0x4002a3b	       748	obj-elf.c	FUNCTION_20	IF_19	CALL_27
0x4002a3b	          0x4885c0	                           test rax, rax	       749	obj-elf.c	FUNCTION_20	IF_19	IF_23
0x4002a3e	     0xf849c010000	                            je 0x4002be0	       749	obj-elf.c	FUNCTION_20	IF_19	IF_23
0x4002a44	    0x498bb424f800	            mov rsi, qword [r12 + 0xf8] 	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4002a4c	          0x4889c7	                            mov rdi, rax	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4002a4f	      0xe800000000	                          call 0x4002a54	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4002a54	      0xe977feffff	                           jmp 0x40028d0	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4002a59	     0xf1f80000000	                         nop dword [rax]	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x4002a60	          0x4889ef	                            mov rdi, rbp	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4002a63	      0xe800000000	                          call 0x4002a68	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4002a68	          0x4989c4	                            mov r12, rax	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4002a6b	      0xe9c7fcffff	                           jmp 0x4002737	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4002a70	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002a77	        0x807a0a40	              cmp byte [rdx + 0xa], 0x40	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002a7b	     0xf8447010000	                            je 0x4002bc8	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002a81	          0x8d50f2	                    lea edx, [rax - 0xe]	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002a84	          0x83fa02	                              cmp edx, 2	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002a87	     0xf867ffeffff	                           jbe 0x400290c	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002a8d	    0x81fbffffff6f	                     cmp ebx, 0x6fffffff	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4002a93	            0x772b	                            ja 0x4002ac0	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4002a95	          0x83f807	                              cmp eax, 7	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4002a98	            0x7426	                            je 0x4002ac0	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x4002a9a	      0xba05000000	                              mov edx, 5	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002a9f	      0xbe00000000	                              mov esi, 0	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002aa4	            0x31ff	                            xor edi, edi	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002aa6	        0x48890c24	                    mov qword [rsp], rcx	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002aaa	      0xe800000000	                          call 0x4002aaf	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002aaf	          0x4889ee	                            mov rsi, rbp	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002ab2	          0x4889c7	                            mov rdi, rax	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002ab5	            0x31c0	                            xor eax, eax	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002ab7	      0xe800000000	                          call 0x4002abc	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002abc	        0x488b0c24	                    mov rcx, qword [rsp]	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002ac0	        0x488b4118	            mov rax, qword [rcx + 0x18] 	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002ac4	          0x4889c2	                            mov rdx, rax	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002ac7	          0x48f7d2	                                 not rdx	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002aca	          0x4c21fa	                            and rdx, r15	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002acd	    0xf7c2ffff0f00	                       test edx, 0xfffff	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002ad3	            0x7463	                            je 0x4002b38	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002ad5	        0x83791007	               cmp dword [rcx + 0x10], 7	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002ad9	            0x7465	                            je 0x4002b40	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002adb	        0x83790cfe	cmp dword [rcx + 0xc], 0xfffffffffffffffe	       665	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002adf	            0x743f	                            je 0x4002b20	       665	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002ae1	        0x4983ff02	                              cmp r15, 2	       673	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11
0x4002ae5	            0x7469	                            je 0x4002b50	       673	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11
0x4002ae7	        0x4983ff04	                              cmp r15, 4	       679	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12
0x4002aeb	     0xf8407010000	                            je 0x4002bf8	       679	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12
0x4002af1	          0x4d85ed	                           test r13, r13	       697	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15
0x4002af4	     0xf857cfcffff	                           jne 0x4002776	       697	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15
0x4002afa	            0x31ff	                            xor edi, edi	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002afc	      0xba05000000	                              mov edx, 5	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b01	      0xbe00000000	                              mov esi, 0	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b06	      0xe800000000	                          call 0x4002b0b	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b0b	          0x4889ee	                            mov rsi, rbp	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b0e	          0x4889c7	                            mov rdi, rax	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b11	            0x31c0	                            xor eax, eax	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b13	      0xe800000000	                          call 0x4002b18	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b18	      0xe959fcffff	                           jmp 0x4002776	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b1d	           0xf1f00	                         nop dword [rax]	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002b20	          0x8b4908	                mov ecx, dword [rcx + 8]	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002b23	      0x807c0d002e	              cmp byte [rbp + rcx], 0x2e	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002b28	            0x75b7	                           jne 0x4002ae1	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002b2a	    0x48f7c2cfffff	            test rdx, 0xffffffffffffffcf	       667	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002b31	            0x75ae	                           jne 0x4002ae1	       667	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002b33	       0xf1f440000	                   nop dword [rax + rax]	       667	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002b38	          0x4909c7	                             or r15, rax	       705	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4002b3b	      0xe936fcffff	                           jmp 0x4002776	       705	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x4002b40	        0x498d77fe	                      lea rsi, [r15 - 2]	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002b44	    0x48f7c6fdffff	            test rsi, 0xfffffffffffffffd	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002b4b	            0x74eb	                            je 0x4002b38	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002b4d	            0xeb8c	                           jmp 0x4002adb	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002b4f	              0x90	                                     nop	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002b50	      0xbf00000000	                              mov edi, 0	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4002b55	      0xb908000000	                              mov ecx, 8	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4002b5a	          0x4889ee	                            mov rsi, rbp	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4002b5d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4002b5f	            0x7426	                            je 0x4002b87	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4002b61	      0xbf00000000	                              mov edi, 0	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4002b66	      0xb908000000	                              mov ecx, 8	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4002b6b	          0x4889ee	                            mov rsi, rbp	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4002b6e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4002b70	            0x7415	                            je 0x4002b87	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x4002b72	      0xbf00000000	                              mov edi, 0	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x4002b77	      0xb908000000	                              mov ecx, 8	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x4002b7c	          0x4889ee	                            mov rsi, rbp	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002b7f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002b81	     0xf856affffff	                           jne 0x4002af1	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002b87	    0x41ba0c000000	                           mov r10d, 0xc	       713	obj-elf.c	FUNCTION_20
0x4002b8d	      0xe90dfcffff	                           jmp 0x400279f	       713	obj-elf.c	FUNCTION_20
0x4002b92	    0x660f1f440000	                    nop word [rax + rax]	       713	obj-elf.c	FUNCTION_20
0x4002b98	            0x89cf	                            mov edi, ecx	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002b9a	          0x890c24	                    mov dword [rsp], ecx	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002b9d	      0xe800000000	                          call 0x4002ba2	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002ba2	          0x8b0c24	                    mov ecx, dword [rsp]	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002ba5	            0x89c3	                            mov ebx, eax	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002ba7	      0xe92cfeffff	                           jmp 0x40029d8	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002bac	         0xf1f4000	                         nop dword [rax]	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002bb0	    0x498b8424a800	            mov rax, qword [r12 + 0xa8] 	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x4002bb8	        0x80480802	                    or byte [rax + 8], 2	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x4002bbc	      0xe936feffff	                           jmp 0x40029f7	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x4002bc1	     0xf1f80000000	                         nop dword [rax]	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x4002bc8	        0xf6411b10	           test byte [rcx + 0x1b], 0x10 	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002bcc	     0xf853afdffff	                           jne 0x400290c	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002bd2	      0xe9aafeffff	                           jmp 0x4002a81	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002bd7	    0x660f1f840000	                    nop word [rax + rax]	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x4002be0	          0x4c89e7	                            mov rdi, r12	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4002be3	      0xe800000000	                          call 0x4002be8	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4002be8	          0x4889c7	                            mov rdi, rax	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4002beb	      0xe800000000	                          call 0x4002bf0	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4002bf0	      0xe9dbfcffff	                           jmp 0x40028d0	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4002bf5	           0xf1f00	                         nop dword [rax]	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x4002bf8	      0xbf00000000	                              mov edi, 0	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002bfd	      0xb910000000	                           mov ecx, 0x10	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002c02	      0xe975ffffff	                           jmp 0x4002b7c	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002c07	      0xe800000000	                          call 0x4002c0c	       784	obj-elf.c	FUNCTION_20
0x4002c0c	      0xbe00000000	                              mov esi, 0	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002c11	            0x31ff	                            xor edi, edi	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002c13	      0xba05000000	                              mov edx, 5	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002c18	      0xe800000000	                          call 0x4002c1d	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002c1d	          0x4889ee	                            mov rsi, rbp	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002c20	          0x4889c7	                            mov rdi, rax	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002c23	            0x31c0	                            xor eax, eax	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002c25	      0xe800000000	                          call 0x4002c2a	       709	obj-elf.c	FUNCTION_20	CALL_18
elf_copy_symbol_attributes	functions,0:SWITCH,0:IF,3:DO,0:ELSE,1:FOR,0:WHILE,0:CALL,11	66
0x4000510	            0x4155	                                push r13	      1791	obj-elf.c	FUNCTION_46
0x4000512	            0x4154	                                push r12	      1791	obj-elf.c	FUNCTION_46
0x4000514	              0x55	                                push rbp	      1791	obj-elf.c	FUNCTION_46
0x4000515	              0x53	                                push rbx	      1791	obj-elf.c	FUNCTION_46
0x4000516	          0x4889fb	                            mov rbx, rdi	      1791	obj-elf.c	FUNCTION_46
0x4000519	          0x4889f7	                            mov rdi, rsi	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x400051c	          0x4889f5	                            mov rbp, rsi	      1791	obj-elf.c	FUNCTION_46
0x400051f	        0x4883ec08	                              sub rsp, 8	      1791	obj-elf.c	FUNCTION_46
0x4000523	      0xe800000000	                          call 0x4000528	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x4000528	          0x4889df	                            mov rdi, rbx	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x400052b	          0x4989c4	                            mov r12, rax	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x400052e	      0xe800000000	                          call 0x4000533	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x4000533	      0x498b542408	                mov rdx, qword [r12 + 8]	      1794	obj-elf.c	FUNCTION_46	IF_1
0x4000538	          0x4989c5	                            mov r13, rax	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x400053b	          0x4885d2	                           test rdx, rdx	      1794	obj-elf.c	FUNCTION_46	IF_1
0x400053e	     0xf848c000000	                            je 0x40005d0	      1794	obj-elf.c	FUNCTION_46	IF_1
0x4000544	        0x488b4008	                mov rax, qword [rax + 8]	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x4000548	          0x4885c0	                           test rax, rax	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x400054b	     0xf849f000000	                            je 0x40005f0	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x4000551	          0x488b0a	                    mov rcx, qword [rdx]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000554	          0x488908	                    mov qword [rax], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000557	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x400055b	        0x48894808	                mov qword [rax + 8], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x400055f	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000563	        0x48894810	             mov qword [rax + 0x10], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000567	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1798	obj-elf.c	FUNCTION_46	IF_1
0x400056b	        0x48895018	             mov qword [rax + 0x18], rdx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x400056f	          0x4889df	                            mov rdi, rbx	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000572	      0xe800000000	                          call 0x4000577	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000577	          0x4889ef	                            mov rdi, rbp	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x400057a	          0x4989c4	                            mov r12, rax	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x400057d	      0xe800000000	                          call 0x4000582	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000582	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000586	          0x4889df	                            mov rdi, rbx	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000589	      0x4989442438	             mov qword [r12 + 0x38], rax	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x400058e	      0xe800000000	                          call 0x4000593	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000593	          0x4889df	                            mov rdi, rbx	       246	obj-elf.c	FUNCTION_7	CALL_2
0x4000596	          0x4989c4	                            mov r12, rax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000599	      0xe800000000	                          call 0x400059e	       246	obj-elf.c	FUNCTION_7	CALL_2
0x400059e	          0x4889ef	                            mov rdi, rbp	       246	obj-elf.c	FUNCTION_7	CALL_2
0x40005a1	         0xfb65849	           movzx ebx, byte [rax + 0x49] 	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x40005a5	      0xe800000000	                          call 0x40005aa	       246	obj-elf.c	FUNCTION_7	CALL_2
0x40005aa	         0xfb64049	           movzx eax, byte [rax + 0x49] 	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x40005ae	          0x83e303	                              and ebx, 3	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x40005b1	          0x83e0fc	                     and eax, 0xfffffffc	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x40005b4	             0x9c3	                             or ebx, eax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x40005b6	      0x41885c2449	               mov byte [r12 + 0x49], bl	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x40005bb	        0x4883c408	                              add rsp, 8	      1810	obj-elf.c	FUNCTION_46
0x40005bf	              0x5b	                                 pop rbx	      1810	obj-elf.c	FUNCTION_46
0x40005c0	              0x5d	                                 pop rbp	      1810	obj-elf.c	FUNCTION_46
0x40005c1	            0x415c	                                 pop r12	      1810	obj-elf.c	FUNCTION_46
0x40005c3	            0x415d	                                 pop r13	      1810	obj-elf.c	FUNCTION_46
0x40005c5	              0xc3	                                     ret	      1810	obj-elf.c	FUNCTION_46
0x40005c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1810	obj-elf.c	FUNCTION_46
0x40005d0	        0x488b7808	                mov rdi, qword [rax + 8]	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x40005d4	          0x4885ff	                           test rdi, rdi	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x40005d7	            0x7405	                            je 0x40005de	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x40005d9	      0xe800000000	                          call 0x40005de	      1803	obj-elf.c	FUNCTION_46	ELSE_1	CALL_4
0x40005de	    0x49c745080000	                  mov qword [r13 + 8], 0	      1804	obj-elf.c	FUNCTION_46	ELSE_1
0x40005e6	            0xeb87	                           jmp 0x400056f	      1804	obj-elf.c	FUNCTION_46	ELSE_1
0x40005e8	     0xf1f84000000	                   nop dword [rax + rax]	      1804	obj-elf.c	FUNCTION_46	ELSE_1
0x40005f0	      0xbf20000000	                           mov edi, 0x20	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x40005f5	      0xe800000000	                          call 0x40005fa	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x40005fa	        0x49894508	                mov qword [r13 + 8], rax	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x40005fe	      0x498b542408	                mov rdx, qword [r12 + 8]	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4000603	      0xe949ffffff	                           jmp 0x4000551	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
obj_elf_subsection	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,5	11
0x4000220	        0x4883ec08	                              sub rsp, 8	      1288	obj-elf.c	FUNCTION_29
0x4000224	    0x488b05000000	            mov rax, qword [0x0400022b] 	      1295	obj-elf.c	FUNCTION_29
0x400022b	    0x488905000000	            mov qword [0x04000232], rax 	      1295	obj-elf.c	FUNCTION_29
0x4000232	    0x8b0500000000	            mov eax, dword [0x04000238] 	      1296	obj-elf.c	FUNCTION_29
0x4000238	    0x890500000000	            mov dword [0x0400023e], eax 	      1296	obj-elf.c	FUNCTION_29
0x400023e	      0xe800000000	                          call 0x4000243	      1298	obj-elf.c	FUNCTION_29	CALL_2
0x4000243	    0x488b3d000000	            mov rdi, qword [0x0400024a] 	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x400024a	            0x89c6	                            mov esi, eax	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x400024c	      0xe800000000	                          call 0x4000251	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x4000251	        0x4883c408	                              add rsp, 8	      1305	obj-elf.c	FUNCTION_29
0x4000255	      0xe900000000	                           jmp 0x400025a	      1300	obj-elf.c	FUNCTION_29	CALL_4
obj_elf_visibility	functions,0:SWITCH,0:IF,2:DO,1:ELSE,0:FOR,0:WHILE,0:CALL,5	94
0x4001da0	            0x4154	                                push r12	       473	obj-elf.c	FUNCTION_18
0x4001da2	              0x55	                                push rbp	       473	obj-elf.c	FUNCTION_18
0x4001da3	              0x53	                                push rbx	       473	obj-elf.c	FUNCTION_18
0x4001da4	            0x89fb	                            mov ebx, edi	       473	obj-elf.c	FUNCTION_18
0x4001da6	        0x4883ec10	                           sub rsp, 0x10	       473	obj-elf.c	FUNCTION_18
0x4001daa	    0x64488b042528	                mov rax, qword fs:[0x28]	       473	obj-elf.c	FUNCTION_18
0x4001db3	      0x4889442408	                mov qword [rsp + 8], rax	       473	obj-elf.c	FUNCTION_18
0x4001db8	            0x31c0	                            xor eax, eax	       473	obj-elf.c	FUNCTION_18
0x4001dba	    0x660f1f440000	                    nop word [rax + rax]	       473	obj-elf.c	FUNCTION_18
0x4001dc0	          0x4889e7	                            mov rdi, rsp	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4001dc3	      0xe800000000	                          call 0x4001dc8	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4001dc8	        0x488b3c24	                    mov rdi, qword [rsp]	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4001dcc	          0x4189c4	                           mov r12d, eax	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4001dcf	      0xe800000000	                          call 0x4001dd4	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4001dd4	          0x4889c5	                            mov rbp, rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4001dd7	    0x488b05000000	            mov rax, qword [0x04001dde] 	       415	obj-elf.c	FUNCTION_15
0x4001dde	          0x448820	                    mov byte [rax], r12b	       415	obj-elf.c	FUNCTION_15
0x4001de1	    0x488b05000000	            mov rax, qword [0x04001de8] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001de8	           0xfb610	                   movzx edx, byte [rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001deb	          0x80fa22	                            cmp dl, 0x22	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001dee	     0xf8484000000	                            je 0x4001e78	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001df4	          0x80fa20	                            cmp dl, 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001df7	     0xf8496000000	                            je 0x4001e93	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001dfd	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x4001e01	     0xf84a1000000	                            je 0x4001ea8	       419	obj-elf.c	FUNCTION_15	IF_1
0x4001e07	          0x4889ef	                            mov rdi, rbp	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4001e0a	      0xe800000000	                          call 0x4001e0f	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4001e0f	          0x488b10	                    mov rdx, qword [rax]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001e12	          0x4885d2	                           test rdx, rdx	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001e15	     0xf84c5000000	                            je 0x4001ee0	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001e1b	        0x488b4a08	                mov rcx, qword [rdx + 8]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001e1f	        0x83790805	                  cmp dword [rcx + 8], 5	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001e23	     0xf85b7000000	                           jne 0x4001ee0	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001e29	    0x4883baf80000	               cmp qword [rdx + 0xf8], 0	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001e31	     0xf84a9000000	                            je 0x4001ee0	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001e37	         0xfb65049	           movzx edx, byte [rax + 0x49] 	       489	obj-elf.c	FUNCTION_18	DO_1
0x4001e3b	          0x83e2fc	                     and edx, 0xfffffffc	       489	obj-elf.c	FUNCTION_18	DO_1
0x4001e3e	             0x9da	                             or edx, ebx	       489	obj-elf.c	FUNCTION_18	DO_1
0x4001e40	          0x885049	               mov byte [rax + 0x49], dl	       489	obj-elf.c	FUNCTION_18	DO_1
0x4001e43	    0x488b05000000	            mov rax, qword [0x04001e4a] 	       491	obj-elf.c	FUNCTION_18	DO_1
0x4001e4a	          0x80382c	                    cmp byte [rax], 0x2c	       492	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4001e4d	     0xf84a5000000	                            je 0x4001ef8	       492	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4001e53	      0xe800000000	                          call 0x4001e58	       504	obj-elf.c	FUNCTION_18	CALL_5
0x4001e58	      0x488b442408	                mov rax, qword [rsp + 8]	       505	obj-elf.c	FUNCTION_18
0x4001e5d	    0x644833042528	                xor rax, qword fs:[0x28]	       505	obj-elf.c	FUNCTION_18
0x4001e66	     0xf85c5000000	                           jne 0x4001f31	       505	obj-elf.c	FUNCTION_18
0x4001e6c	        0x4883c410	                           add rsp, 0x10	       505	obj-elf.c	FUNCTION_18
0x4001e70	              0x5b	                                 pop rbx	       505	obj-elf.c	FUNCTION_18
0x4001e71	              0x5d	                                 pop rbp	       505	obj-elf.c	FUNCTION_18
0x4001e72	            0x415c	                                 pop r12	       505	obj-elf.c	FUNCTION_18
0x4001e74	              0xc3	                                     ret	       505	obj-elf.c	FUNCTION_18
0x4001e75	           0xf1f00	                         nop dword [rax]	       505	obj-elf.c	FUNCTION_18
0x4001e78	        0x488d4801	                      lea rcx, [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001e7c	    0x48890d000000	            mov qword [0x04001e83], rcx 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001e83	         0xfb65001	               movzx edx, byte [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001e87	          0x4889c8	                            mov rax, rcx	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001e8a	          0x80fa20	                            cmp dl, 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001e8d	     0xf856affffff	                           jne 0x4001dfd	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001e93	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001e97	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x4001e9b	    0x488905000000	            mov qword [0x04001ea2], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4001ea2	     0xf855fffffff	                           jne 0x4001e07	       419	obj-elf.c	FUNCTION_15	IF_1
0x4001ea8	      0xba05000000	                              mov edx, 5	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001ead	      0xbe00000000	                              mov esi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001eb2	            0x31ff	                            xor edi, edi	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001eb4	      0xe800000000	                          call 0x4001eb9	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001eb9	          0x4889c7	                            mov rdi, rax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001ebc	            0x31c0	                            xor eax, eax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001ebe	      0xe800000000	                          call 0x4001ec3	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4001ec3	          0x4889ef	                            mov rdi, rbp	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4001ec6	      0xe800000000	                          call 0x4001ecb	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4001ecb	          0x488b10	                    mov rdx, qword [rax]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001ece	          0x4885d2	                           test rdx, rdx	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001ed1	     0xf8544ffffff	                           jne 0x4001e1b	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001ed7	    0x660f1f840000	                    nop word [rax + rax]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4001ee0	      0xba00000000	                              mov edx, 0	       486	obj-elf.c	FUNCTION_18	DO_1
0x4001ee5	      0xbee6010000	                          mov esi, 0x1e6	       486	obj-elf.c	FUNCTION_18	DO_1
0x4001eea	      0xbf00000000	                              mov edi, 0	       486	obj-elf.c	FUNCTION_18	DO_1
0x4001eef	      0xe800000000	                          call 0x4001ef4	       486	obj-elf.c	FUNCTION_18	DO_1
0x4001ef4	         0xf1f4000	                         nop dword [rax]	       486	obj-elf.c	FUNCTION_18	DO_1
0x4001ef8	        0x488d5001	                      lea rdx, [rax + 1]	       494	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4001efc	    0x488915000000	            mov qword [0x04001f03], rdx 	       494	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x4001f03	         0xfb65001	               movzx edx, byte [rax + 1]	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4001f07	          0x80fa20	                            cmp dl, 0x20	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4001f0a	            0x7414	                            je 0x4001f20	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4001f0c	          0x80fa0a	                             cmp dl, 0xa	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4001f0f	     0xf85abfeffff	                           jne 0x4001dc0	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4001f15	      0xe939ffffff	                           jmp 0x4001e53	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4001f1a	    0x660f1f440000	                    nop word [rax + rax]	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x4001f20	        0x488d5002	                      lea rdx, [rax + 2]	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4001f24	    0x488915000000	            mov qword [0x04001f2b], rdx 	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4001f2b	         0xfb65002	               movzx edx, byte [rax + 2]	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4001f2f	            0xebdb	                           jmp 0x4001f0c	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x4001f31	      0xe800000000	                          call 0x4001f36	       505	obj-elf.c	FUNCTION_18
get_section	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,3	28
0x4000280	    0x488b8ee00000	            mov rcx, qword [rsi + 0xe0] 	       531	obj-elf.c	FUNCTION_19	CALL_1
0x4000287	            0x31c0	                            xor eax, eax	       535	obj-elf.c	FUNCTION_19
0x4000289	          0x8b7a08	                mov edi, dword [rdx + 8]	       535	obj-elf.c	FUNCTION_19
0x400028c	          0x39792c	            cmp dword [rcx + 0x2c], edi 	       535	obj-elf.c	FUNCTION_19
0x400028f	            0x7407	                            je 0x4000298	       535	obj-elf.c	FUNCTION_19
0x4000291	              0xc3	                                     ret	       539	obj-elf.c	FUNCTION_19
0x4000292	    0x660f1f440000	                    nop word [rax + rax]	       539	obj-elf.c	FUNCTION_19
0x4000298	          0x488b32	                    mov rsi, qword [rdx]	       530	obj-elf.c	FUNCTION_19
0x400029b	    0x488bb9b00000	            mov rdi, qword [rcx + 0xb0] 	       531	obj-elf.c	FUNCTION_19	CALL_1
0x40002a2	          0x4839fe	                            cmp rsi, rdi	       535	obj-elf.c	FUNCTION_19
0x40002a5	            0x7431	                            je 0x40002d8	       535	obj-elf.c	FUNCTION_19
0x40002a7	          0x4885ff	                           test rdi, rdi	       536	obj-elf.c	FUNCTION_19
0x40002aa	            0x7424	                            je 0x40002d0	       536	obj-elf.c	FUNCTION_19
0x40002ac	          0x4885f6	                           test rsi, rsi	       536	obj-elf.c	FUNCTION_19
0x40002af	            0x741f	                            je 0x40002d0	       536	obj-elf.c	FUNCTION_19
0x40002b1	        0x4883ec08	                              sub rsp, 8	       528	obj-elf.c	FUNCTION_19
0x40002b5	      0xe800000000	                          call 0x40002ba	       538	obj-elf.c	FUNCTION_19	CALL_3
0x40002ba	            0x85c0	                           test eax, eax	       535	obj-elf.c	FUNCTION_19
0x40002bc	           0xf94c0	                                 sete al	       535	obj-elf.c	FUNCTION_19
0x40002bf	        0x4883c408	                              add rsp, 8	       539	obj-elf.c	FUNCTION_19
0x40002c3	           0xfb6c0	                           movzx eax, al	       535	obj-elf.c	FUNCTION_19
0x40002c6	              0xc3	                                     ret	       539	obj-elf.c	FUNCTION_19
0x40002c7	    0x660f1f840000	                    nop word [rax + rax]	       539	obj-elf.c	FUNCTION_19
0x40002d0	            0x31c0	                            xor eax, eax	       535	obj-elf.c	FUNCTION_19
0x40002d2	              0xc3	                                     ret	       535	obj-elf.c	FUNCTION_19
0x40002d3	       0xf1f440000	                   nop dword [rax + rax]	       535	obj-elf.c	FUNCTION_19
0x40002d8	      0xb801000000	                              mov eax, 1	       535	obj-elf.c	FUNCTION_19
0x40002dd	              0xc3	                                     ret	       535	obj-elf.c	FUNCTION_19
elf_adjust_symtab	functions,0:SWITCH,0:IF,4:DO,0:ELSE,0:FOR,2:WHILE,0:CALL,24	121
0x4001090	            0x4156	                                push r14	      2421	obj-elf.c	FUNCTION_60
0x4001092	            0x4155	                                push r13	      2421	obj-elf.c	FUNCTION_60
0x4001094	            0x4154	                                push r12	      2421	obj-elf.c	FUNCTION_60
0x4001096	              0x55	                                push rbp	      2421	obj-elf.c	FUNCTION_60
0x4001097	              0x53	                                push rbx	      2421	obj-elf.c	FUNCTION_60
0x4001098	    0xc70500000000	               mov dword [0x040010a2], 0	      2425	obj-elf.c	FUNCTION_60
0x40010a2	    0x48c705000000	               mov qword [0x040010ad], 0	      2426	obj-elf.c	FUNCTION_60
0x40010ad	      0xe800000000	                          call 0x40010b2	      2427	obj-elf.c	FUNCTION_60	CALL_1
0x40010b2	    0x488b3d000000	            mov rdi, qword [0x040010b9] 	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40010b9	      0xba00000000	                              mov edx, 0	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40010be	      0xbe00000000	                              mov esi, 0	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40010c3	    0x488905000000	            mov qword [0x040010ca], rax 	      2427	obj-elf.c	FUNCTION_60	CALL_1
0x40010ca	      0xe800000000	                          call 0x40010cf	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x40010cf	    0x8b0500000000	            mov eax, dword [0x040010d5] 	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x40010d5	            0x85c0	                           test eax, eax	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x40010d7	     0xf8454010000	                            je 0x4001231	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x40010dd	            0x31ed	                            xor ebp, ebp	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x40010df	              0x90	                                     nop	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x40010e0	    0x488b15000000	            mov rdx, qword [0x040010e7] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40010e7	            0x89e8	                            mov eax, ebp	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40010e9	    0x41bd08410002	                     mov r13d, 0x2004108	      2442	obj-elf.c	FUNCTION_60	FOR_1
0x40010ef	    0x488d1cc50000	                        lea rbx, [rax*8]	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40010f7	        0x488b14c2	            mov rdx, qword [rdx + rax*8]	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x40010fb	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001102	    0x4c8ba0b00000	            mov r12, qword [rax + 0xb0] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001109	          0x4889d0	                            mov rax, rdx	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x400110c	         0xf1f4000	                         nop dword [rax]	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001110	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001113	          0x4431e9	                           xor ecx, r13d	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001116	    0x81e100000200	                        and ecx, 0x20000	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x400111c	            0x740f	                            je 0x400112d	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x400111e	          0x4839c2	                            cmp rdx, rax	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4001121	     0xf8519010000	                           jne 0x4001240	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4001127	    0x41bd08410202	                     mov r13d, 0x2024108	      2446	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x400112d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001134	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x400113b	          0x4885c0	                           test rax, rax	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x400113e	            0x75d0	                           jne 0x4001110	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001140	            0x31f6	                            xor esi, esi	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x4001142	      0xbf00000000	                              mov edi, 0	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x4001147	      0xe800000000	                          call 0x400114c	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x400114c	          0x4885c0	                           test rax, rax	      2457	obj-elf.c	FUNCTION_60	FOR_1	IF_3
0x400114f	          0x4989c6	                            mov r14, rax	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x4001152	     0xf8411010000	                            je 0x4001269	      2457	obj-elf.c	FUNCTION_60	FOR_1	IF_3
0x4001158	    0x488b3d000000	            mov rdi, qword [0x0400115f] 	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x400115f	          0x4489ea	                           mov edx, r13d	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001162	          0x4889c6	                            mov rsi, rax	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001165	      0xe800000000	                          call 0x400116a	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x400116a	            0x85c0	                           test eax, eax	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x400116c	     0xf84f7000000	                            je 0x4001269	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001172	    0x48031d000000	             add rbx, qword [0x04001179]	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4001179	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	      2464	obj-elf.c	FUNCTION_60	FOR_1	CALL_14
0x4001180	          0x4c89e7	                            mov rdi, r12	      2471	obj-elf.c	FUNCTION_60	FOR_1	CALL_17
0x4001183	    0x41c746700200	               mov dword [r14 + 0x70], 2	      1696	bfd.h	FUNCTION_82
0x400118b	    0xc74004110000	               mov dword [rax + 4], 0x11	      2464	obj-elf.c	FUNCTION_60	FOR_1	CALL_14
0x4001192	          0x488b13	                    mov rdx, qword [rbx]	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4001195	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x400119c	          0x488b03	                    mov rax, qword [rbx]	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x400119f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x40011a6	    0x4c89b0b80000	             mov qword [rax + 0xb8], r14	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x40011ad	      0xe800000000	                          call 0x40011b2	      2471	obj-elf.c	FUNCTION_60	FOR_1	CALL_17
0x40011b2	          0x4885c0	                           test rax, rax	      2472	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011b5	            0x7423	                            je 0x40011da	      2472	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011b7	    0x488b1d000000	            mov rbx, qword [0x040011be] 	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011be	          0x4839d8	                            cmp rax, rbx	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011c1	            0x7448	                            je 0x400120b	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011c3	          0xf60001	                      test byte [rax], 1	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011c6	            0x7512	                           jne 0x40011da	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011c8	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011cc	          0x4885d2	                           test rdx, rdx	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011cf	            0x7409	                            je 0x40011da	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011d1	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011d5	          0x4839d8	                            cmp rax, rbx	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011d8	            0x7431	                            je 0x400120b	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x40011da	    0x488b0d000000	            mov rcx, qword [0x040011e1] 	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40011e1	    0x488b35000000	            mov rsi, qword [0x040011e8] 	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40011e8	            0x31d2	                            xor edx, edx	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40011ea	          0x4c89e7	                            mov rdi, r12	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40011ed	      0xe800000000	                          call 0x40011f2	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40011f2	          0x4889c3	                            mov rbx, rax	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x40011f5	          0x4889c7	                            mov rdi, rax	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x40011f8	      0xe800000000	                          call 0x40011fd	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x40011fd	          0x4889df	                            mov rdi, rbx	      2488	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_22
0x4001200	    0xc70001000000	                      mov dword [rax], 1	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x4001206	      0xe800000000	                          call 0x400120b	      2488	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_22
0x400120b	          0x4889df	                            mov rdi, rbx	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x400120e	    0x4d8ba6e00000	            mov r12, qword [r14 + 0xe0] 	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4001215	          0x83c501	                              add ebp, 1	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001218	      0xe800000000	                          call 0x400121d	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x400121d	    0x392d00000000	            cmp dword [0x04001223], ebp 	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001223	    0x49898424b000	             mov qword [r12 + 0xb0], rax	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x400122b	     0xf87affeffff	                            ja 0x40010e0	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001231	              0x5b	                                 pop rbx	      2492	obj-elf.c	FUNCTION_60
0x4001232	              0x5d	                                 pop rbp	      2492	obj-elf.c	FUNCTION_60
0x4001233	            0x415c	                                 pop r12	      2492	obj-elf.c	FUNCTION_60
0x4001235	            0x415d	                                 pop r13	      2492	obj-elf.c	FUNCTION_60
0x4001237	            0x415e	                                 pop r14	      2492	obj-elf.c	FUNCTION_60
0x4001239	              0xc3	                                     ret	      2492	obj-elf.c	FUNCTION_60
0x400123a	    0x660f1f440000	                    nop word [rax + rax]	      2492	obj-elf.c	FUNCTION_60
0x4001240	      0xba05000000	                              mov edx, 5	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001245	      0xbe00000000	                              mov esi, 0	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x400124a	            0x31ff	                            xor edi, edi	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x400124c	      0xe800000000	                          call 0x4001251	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001251	          0x4c89e6	                            mov rsi, r12	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001254	          0x4889c7	                            mov rdi, rax	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001257	            0x31c0	                            xor eax, eax	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001259	      0xe800000000	                          call 0x400125e	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x400125e	    0x41bd08410202	                     mov r13d, 0x2024108	      2446	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001264	      0xe9d7feffff	                           jmp 0x4001140	      2451	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4001269	      0xe800000000	                          call 0x400126e	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400126e	            0x89c7	                            mov edi, eax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001270	      0xe800000000	                          call 0x4001275	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001275	      0xbe00000000	                              mov esi, 0	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400127a	          0x4889c3	                            mov rbx, rax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400127d	            0x31ff	                            xor edi, edi	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400127f	      0xba05000000	                              mov edx, 5	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001284	      0xe800000000	                          call 0x4001289	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001289	          0x4889de	                            mov rsi, rbx	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400128c	          0x4889c7	                            mov rdi, rax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x400128f	            0x31c0	                            xor eax, eax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001291	      0xe800000000	                          call 0x4001296	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
obj_elf_lcomm	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,2	11
0x4000140	        0x4883ec08	                              sub rsp, 8	       399	obj-elf.c	FUNCTION_14
0x4000144	            0x31ff	                            xor edi, edi	       400	obj-elf.c	FUNCTION_14	CALL_1
0x4000146	      0xbe00000000	                              mov esi, 0	       400	obj-elf.c	FUNCTION_14	CALL_1
0x400014b	      0xe800000000	                          call 0x4000150	       400	obj-elf.c	FUNCTION_14	CALL_1
0x4000150	          0x4885c0	                           test rax, rax	       402	obj-elf.c	FUNCTION_14	IF_1
0x4000153	            0x740f	                            je 0x4000164	       402	obj-elf.c	FUNCTION_14	IF_1
0x4000155	          0x4889c7	                            mov rdi, rax	       403	obj-elf.c	FUNCTION_14	CALL_2
0x4000158	      0xe800000000	                          call 0x400015d	       403	obj-elf.c	FUNCTION_14	CALL_2
0x400015d	    0x814818000001	          or dword [rax + 0x18], 0x10000	       403	obj-elf.c	FUNCTION_14	CALL_2
0x4000164	        0x4883c408	                              add rsp, 8	       404	obj-elf.c	FUNCTION_14
0x4000168	              0xc3	                                     ret	       404	obj-elf.c	FUNCTION_14
elf_process_stab	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x4000060	            0xf3c3	                                     ret	      2666	obj-elf.c	FUNCTION_65
obj_elf_section_name	functions,0:SWITCH,0:IF,4:DO,0:ELSE,2:FOR,0:WHILE,2:CALL,17	119
0x4002c30	            0x4156	                                push r14	       947	obj-elf.c	FUNCTION_24
0x4002c32	            0x4155	                                push r13	       947	obj-elf.c	FUNCTION_24
0x4002c34	            0x4154	                                push r12	       947	obj-elf.c	FUNCTION_24
0x4002c36	              0x55	                                push rbp	       947	obj-elf.c	FUNCTION_24
0x4002c37	              0x53	                                push rbx	       947	obj-elf.c	FUNCTION_24
0x4002c38	        0x4883ec10	                           sub rsp, 0x10	       947	obj-elf.c	FUNCTION_24
0x4002c3c	    0x488b1d000000	            mov rbx, qword [0x04002c43] 	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002c43	    0x64488b042528	                mov rax, qword fs:[0x28]	       947	obj-elf.c	FUNCTION_24
0x4002c4c	      0x4889442408	                mov qword [rsp + 8], rax	       947	obj-elf.c	FUNCTION_24
0x4002c51	            0x31c0	                            xor eax, eax	       947	obj-elf.c	FUNCTION_24
0x4002c53	           0xfb603	                   movzx eax, byte [rbx]	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002c56	            0x3c20	                            cmp al, 0x20	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002c58	     0xf8442010000	                            je 0x4002da0	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002c5e	            0x3c22	                            cmp al, 0x22	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002c60	     0xf8454010000	                            je 0x4002dba	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002c66	          0x4989de	                            mov r14, rbx	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002c69	            0xeb09	                           jmp 0x4002c74	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002c6b	       0xf1f440000	                   nop dword [rax + rax]	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002c70	        0x4983c601	                              add r14, 1	       967	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1
0x4002c74	        0x410fbe36	                   movsx esi, byte [r14]	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002c78	      0xbf00000000	                              mov edi, 0	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002c7d	      0xe800000000	                          call 0x4002c82	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002c82	          0x4885c0	                           test rax, rax	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002c85	            0x74e9	                            je 0x4002c70	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002c87	          0x4939de	                            cmp r14, rbx	       968	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4002c8a	     0xf8445010000	                            je 0x4002dd5	       968	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4002c90	          0x4c89f5	                            mov rbp, r14	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x4002c93	          0x4829dd	                            sub rbp, rbx	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x4002c96	        0x488d7d01	                      lea rdi, [rbp + 1]	       525	as.h	FUNCTION_84	CALL_1
0x4002c9a	      0xe800000000	                          call 0x4002c9f	       525	as.h	FUNCTION_84	CALL_1
0x4002c9f	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_68	CALL_3
0x4002ca2	        0xc6042800	                 mov byte [rax + rbp], 0	       526	as.h	FUNCTION_84
0x4002ca6	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_68	CALL_3
0x4002ca9	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_68	CALL_3
0x4002cac	      0xe800000000	                          call 0x4002cb1	        53	string3.h	FUNCTION_68	CALL_3
0x4002cb1	    0x8b1500000000	            mov edx, dword [0x04002cb7] 	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002cb7	          0x4989c4	                            mov r12, rax	        53	string3.h	FUNCTION_68	CALL_3
0x4002cba	            0x85d2	                           test edx, edx	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002cbc	     0xf858d000000	                           jne 0x4002d4f	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002cc2	      0xe9a1000000	                           jmp 0x4002d68	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002cc7	    0x660f1f840000	                    nop word [rax + rax]	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002cd0	        0x80780153	                cmp byte [rax + 1], 0x53	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4002cd4	     0xf858e000000	                           jne 0x4002d68	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4002cda	          0x4c89e7	                            mov rdi, r12	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x4002cdd	      0xe800000000	                          call 0x4002ce2	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x4002ce2	          0x4889c5	                            mov rbp, rax	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x4002ce5	    0x488b05000000	            mov rax, qword [0x04002cec] 	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x4002cec	          0x488b38	                    mov rdi, qword [rax]	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x4002cef	      0xe800000000	                          call 0x4002cf4	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x4002cf4	        0x8d7c05ff	                lea edi, [rbp + rax - 1]	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4002cf8	          0x4889dd	                            mov rbp, rbx	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4002cfb	          0x4c29e5	                            sub rbp, r12	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4002cfe	          0x4863ff	                         movsxd rdi, edi	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4002d01	          0x4863ed	                         movsxd rbp, ebp	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4002d04	      0xe800000000	                          call 0x4002d09	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4002d09	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_68	CALL_3
0x4002d0c	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_68	CALL_3
0x4002d0f	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_68	CALL_3
0x4002d12	          0x4989c5	                            mov r13, rax	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4002d15	      0xe800000000	                          call 0x4002d1a	        53	string3.h	FUNCTION_68	CALL_3
0x4002d1a	    0x488b05000000	            mov rax, qword [0x04002d21] 	       110	string3.h	FUNCTION_74	CALL_3
0x4002d21	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	       110	string3.h	FUNCTION_74	CALL_3
0x4002d26	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_74	CALL_3
0x4002d29	      0xe800000000	                          call 0x4002d2e	       110	string3.h	FUNCTION_74	CALL_3
0x4002d2e	        0x488d7302	                      lea rsi, [rbx + 2]	       148	string3.h	FUNCTION_78	CALL_3
0x4002d32	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_78	CALL_3
0x4002d35	      0xe800000000	                          call 0x4002d3a	       148	string3.h	FUNCTION_78	CALL_3
0x4002d3a	          0x4c89e7	                            mov rdi, r12	       990	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4002d3d	          0x4d89ec	                            mov r12, r13	       990	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4002d40	      0xe800000000	                          call 0x4002d45	       990	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4002d45	    0x8b0500000000	            mov eax, dword [0x04002d4b] 	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002d4b	            0x85c0	                           test eax, eax	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002d4d	            0x7419	                            je 0x4002d68	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002d4f	      0xbe25000000	                           mov esi, 0x25	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x4002d54	          0x4c89e7	                            mov rdi, r12	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x4002d57	      0xe800000000	                          call 0x4002d5c	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x4002d5c	          0x4885c0	                           test rax, rax	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4002d5f	          0x4889c3	                            mov rbx, rax	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x4002d62	     0xf8568ffffff	                           jne 0x4002cd0	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4002d68	    0x4c8935000000	            mov qword [0x04002d6f], r14 	      1000	obj-elf.c	FUNCTION_24	ELSE_1
0x4002d6f	        0x41803e20	                    cmp byte [r14], 0x20	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x4002d73	          0x4c89e0	                            mov rax, r12	      1003	obj-elf.c	FUNCTION_24
0x4002d76	            0x750b	                           jne 0x4002d83	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x4002d78	        0x4983c601	                              add r14, 1	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x4002d7c	    0x4c8935000000	            mov qword [0x04002d83], r14 	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x4002d83	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1004	obj-elf.c	FUNCTION_24
0x4002d88	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1004	obj-elf.c	FUNCTION_24
0x4002d91	            0x7566	                           jne 0x4002df9	      1004	obj-elf.c	FUNCTION_24
0x4002d93	        0x4883c410	                           add rsp, 0x10	      1004	obj-elf.c	FUNCTION_24
0x4002d97	              0x5b	                                 pop rbx	      1004	obj-elf.c	FUNCTION_24
0x4002d98	              0x5d	                                 pop rbp	      1004	obj-elf.c	FUNCTION_24
0x4002d99	            0x415c	                                 pop r12	      1004	obj-elf.c	FUNCTION_24
0x4002d9b	            0x415d	                                 pop r13	      1004	obj-elf.c	FUNCTION_24
0x4002d9d	            0x415e	                                 pop r14	      1004	obj-elf.c	FUNCTION_24
0x4002d9f	              0xc3	                                     ret	      1004	obj-elf.c	FUNCTION_24
0x4002da0	        0x488d5301	                      lea rdx, [rbx + 1]	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002da4	    0x488915000000	            mov qword [0x04002dab], rdx 	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002dab	         0xfb64301	               movzx eax, byte [rbx + 1]	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002daf	          0x4889d3	                            mov rbx, rdx	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002db2	            0x3c22	                            cmp al, 0x22	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002db4	     0xf85acfeffff	                           jne 0x4002c66	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002dba	      0x488d7c2404	                      lea rdi, [rsp + 4]	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x4002dbf	      0xe800000000	                          call 0x4002dc4	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x4002dc4	          0x4885c0	                           test rax, rax	       956	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x4002dc7	          0x4989c4	                            mov r12, rax	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x4002dca	            0x7424	                            je 0x4002df0	       956	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x4002dcc	    0x4c8b35000000	            mov r14, qword [0x04002dd3] 	       956	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x4002dd3	            0xeb9a	                           jmp 0x4002d6f	       956	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x4002dd5	            0x31ff	                            xor edi, edi	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002dd7	      0xba05000000	                              mov edx, 5	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002ddc	      0xbe00000000	                              mov esi, 0	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002de1	      0xe800000000	                          call 0x4002de6	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002de6	          0x4889c7	                            mov rdi, rax	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002de9	            0x31c0	                            xor eax, eax	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002deb	      0xe800000000	                          call 0x4002df0	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002df0	      0xe800000000	                          call 0x4002df5	       971	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_7
0x4002df5	            0x31c0	                            xor eax, eax	       972	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4002df7	            0xeb8a	                           jmp 0x4002d83	       972	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4002df9	      0xe800000000	                          call 0x4002dfe	      1004	obj-elf.c	FUNCTION_24
elf_s_set_other	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	6
0x4000190	              0x53	                                push rbx	       251	obj-elf.c	FUNCTION_8
0x4000191	            0x89f3	                            mov ebx, esi	       251	obj-elf.c	FUNCTION_8
0x4000193	      0xe800000000	                          call 0x4000198	       252	obj-elf.c	FUNCTION_8	CALL_1
0x4000198	          0x885849	               mov byte [rax + 0x49], bl	       252	obj-elf.c	FUNCTION_8	CALL_1
0x400019b	              0x5b	                                 pop rbx	       253	obj-elf.c	FUNCTION_8
0x400019c	              0xc3	                                     ret	       253	obj-elf.c	FUNCTION_8
obj_elf_vendor_attribute	functions,0:SWITCH,1:IF,10:DO,0:ELSE,1:FOR,1:WHILE,0:CALL,29	201
0x4003d40	            0x4157	                                push r15	      1648	obj-elf.c	FUNCTION_42
0x4003d42	            0x4156	                                push r14	      1648	obj-elf.c	FUNCTION_42
0x4003d44	            0x4155	                                push r13	      1648	obj-elf.c	FUNCTION_42
0x4003d46	            0x4154	                                push r12	      1648	obj-elf.c	FUNCTION_42
0x4003d48	          0x4189fc	                           mov r12d, edi	      1648	obj-elf.c	FUNCTION_42
0x4003d4b	              0x55	                                push rbp	      1648	obj-elf.c	FUNCTION_42
0x4003d4c	              0x53	                                push rbx	      1648	obj-elf.c	FUNCTION_42
0x4003d4d	        0x4883ec58	                           sub rsp, 0x58	      1648	obj-elf.c	FUNCTION_42
0x4003d51	    0x4c8b05000000	              mov r8, qword [0x04003d58]	      1656	obj-elf.c	FUNCTION_42
0x4003d58	    0x64488b042528	                mov rax, qword fs:[0x28]	      1648	obj-elf.c	FUNCTION_42
0x4003d61	      0x4889442448	             mov qword [rsp + 0x48], rax	      1648	obj-elf.c	FUNCTION_42
0x4003d66	            0x31c0	                            xor eax, eax	      1648	obj-elf.c	FUNCTION_42
0x4003d68	        0x410fb600	                    movzx eax, byte [r8]	      1656	obj-elf.c	FUNCTION_42
0x4003d6c	          0x4c89c3	                             mov rbx, r8	      1656	obj-elf.c	FUNCTION_42
0x4003d6f	            0x3c20	                            cmp al, 0x20	      1656	obj-elf.c	FUNCTION_42
0x4003d71	     0xf84b9010000	                            je 0x4003f30	      1656	obj-elf.c	FUNCTION_42
0x4003d77	           0xfb6d0	                           movzx edx, al	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4003d7a	     0xfb794120000	             movzx edx, word [rdx + rdx]	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4003d82	          0xf6c204	                              test dl, 4	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4003d85	     0xf8585000000	                           jne 0x4003e10	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4003d8b	    0x81e28c000000	                           and edx, 0x8c	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003d91	            0x7504	                           jne 0x4003d97	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003d93	            0x3c5f	                            cmp al, 0x5f	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003d95	            0x7532	                           jne 0x4003dc9	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003d97	        0x488d4301	                      lea rax, [rbx + 1]	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003d9b	            0x31c9	                            xor ecx, ecx	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003d9d	           0xf1f00	                         nop dword [rax]	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003da0	    0x488905000000	            mov qword [0x04003da7], rax 	      1671	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x4003da7	           0xfb630	                   movzx esi, byte [rax]	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003daa	          0x83c101	                              add ecx, 1	      1672	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x4003dad	        0x4883c001	                              add rax, 1	      1672	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x4003db1	    0xf68436000000	            test byte [rsi + rsi], 0x8c 	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003db9	            0x75e5	                           jne 0x4003da0	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003dbb	        0x4080fe5f	                           cmp sil, 0x5f	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003dbf	            0x74df	                            je 0x4003da0	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003dc1	            0x85c9	                           test ecx, ecx	      1673	obj-elf.c	FUNCTION_42	ELSE_1	IF_3
0x4003dc3	     0xf857f010000	                           jne 0x4003f48	      1673	obj-elf.c	FUNCTION_42	ELSE_1	IF_3
0x4003dc9	      0xba05000000	                              mov edx, 5	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4003dce	      0xbe00000000	                              mov esi, 0	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4003dd3	            0x31ff	                            xor edi, edi	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4003dd5	      0xe800000000	                          call 0x4003dda	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4003dda	          0x4889c7	                            mov rdi, rax	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4003ddd	            0x31c0	                            xor eax, eax	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4003ddf	      0xe800000000	                          call 0x4003de4	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4003de4	      0xe800000000	                          call 0x4003de9	      1749	obj-elf.c	FUNCTION_42	CALL_29
0x4003de9	            0x31c0	                            xor eax, eax	      1750	obj-elf.c	FUNCTION_42
0x4003deb	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      1751	obj-elf.c	FUNCTION_42
0x4003df0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1751	obj-elf.c	FUNCTION_42
0x4003df9	     0xf857b020000	                           jne 0x400407a	      1751	obj-elf.c	FUNCTION_42
0x4003dff	        0x4883c458	                           add rsp, 0x58	      1751	obj-elf.c	FUNCTION_42
0x4003e03	              0x5b	                                 pop rbx	      1751	obj-elf.c	FUNCTION_42
0x4003e04	              0x5d	                                 pop rbp	      1751	obj-elf.c	FUNCTION_42
0x4003e05	            0x415c	                                 pop r12	      1751	obj-elf.c	FUNCTION_42
0x4003e07	            0x415d	                                 pop r13	      1751	obj-elf.c	FUNCTION_42
0x4003e09	            0x415e	                                 pop r14	      1751	obj-elf.c	FUNCTION_42
0x4003e0b	            0x415f	                                 pop r15	      1751	obj-elf.c	FUNCTION_42
0x4003e0d	              0xc3	                                     ret	      1751	obj-elf.c	FUNCTION_42
0x4003e0e	            0x6690	                                     nop	      1751	obj-elf.c	FUNCTION_42
0x4003e10	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4003e15	            0x31ff	                            xor edi, edi	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4003e17	      0xba01000000	                              mov edx, 1	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4003e1c	      0xe800000000	                          call 0x4003e21	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4003e21	      0x807c243802	                cmp byte [rsp + 0x38], 2	      1661	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4003e26	            0x75a1	                           jne 0x4003dc9	      1661	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4003e28	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      1663	obj-elf.c	FUNCTION_42	IF_1
0x4003e2d	    0x488b3d000000	            mov rdi, qword [0x04003e34] 	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4003e34	          0x4489e6	                           mov esi, r12d	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4003e37	            0x89ea	                            mov edx, ebp	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4003e39	      0xe800000000	                          call 0x4003e3e	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4003e3e	          0x4189c7	                           mov r15d, eax	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4003e41	    0x488b05000000	            mov rax, qword [0x04003e48] 	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003e48	          0x80382c	                    cmp byte [rax], 0x2c	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003e4b	     0xf8578ffffff	                           jne 0x4003dc9	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003e51	        0x4883c001	                              add rax, 1	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4003e55	          0x4531f6	                          xor r14d, r14d	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4003e58	        0x41f6c701	                            test r15b, 1	      1697	obj-elf.c	FUNCTION_42	IF_6
0x4003e5c	    0x488905000000	            mov qword [0x04003e63], rax 	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4003e63	     0xf8554010000	                           jne 0x4003fbd	      1697	obj-elf.c	FUNCTION_42	IF_6
0x4003e69	          0x4589fd	                          mov r13d, r15d	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4003e6c	        0x4183e503	                             and r13d, 3	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4003e70	        0x4183fd03	                             cmp r13d, 3	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4003e74	     0xf8473010000	                            je 0x4003fed	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4003e7a	        0x4183e702	                             and r15d, 2	      1715	obj-elf.c	FUNCTION_42	IF_9
0x4003e7e	            0x7431	                            je 0x4003eb1	      1715	obj-elf.c	FUNCTION_42	IF_9
0x4003e80	    0x488b15000000	            mov rdx, qword [0x04003e87] 	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4003e87	           0xfb602	                   movzx eax, byte [rdx]	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4003e8a	            0x3c20	                            cmp al, 0x20	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4003e8c	     0xf8485010000	                            je 0x4004017	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4003e92	            0x3c22	                            cmp al, 0x22	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x4003e94	      0xba05000000	                              mov edx, 5	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x4003e99	      0xbe00000000	                              mov esi, 0	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x4003e9e	     0xf852fffffff	                           jne 0x4003dd3	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x4003ea4	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x4003ea9	      0xe800000000	                          call 0x4003eae	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x4003eae	          0x4889c3	                            mov rbx, rax	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x4003eb1	    0x488b05000000	            mov rax, qword [0x04003eb8] 	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003eb8	          0x4189ef	                           mov r15d, ebp	      1608	obj-elf.c	ELSE_1	FUNCTION_40
0x4003ebb	      0xba01000000	                              mov edx, 1	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4003ec0	            0x89e9	                            mov ecx, ebp	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4003ec2	        0x41c1ef06	                             shr r15d, 6	      1608	obj-elf.c	ELSE_1	FUNCTION_40
0x4003ec6	          0x48d3e2	                             shl rdx, cl	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4003ec9	          0x4885c0	                           test rax, rax	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003ecc	            0x7516	                           jne 0x4003ee4	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003ece	      0xe9b4000000	                           jmp 0x4003f87	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003ed3	       0xf1f440000	                   nop dword [rax + rax]	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003ed8	          0x488b00	                    mov rax, qword [rax]	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003edb	          0x4885c0	                           test rax, rax	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003ede	     0xf84a3000000	                            je 0x4003f87	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003ee4	        0x443b6008	               cmp r12d, dword [rax + 8]	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4003ee8	            0x75ee	                           jne 0x4003ed8	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4003eea	        0x443b780c	            cmp r15d, dword [rax + 0xc] 	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4003eee	            0x75e8	                           jne 0x4003ed8	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4003ef0	        0x48095010	              or qword [rax + 0x10], rdx	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4003ef4	        0x4183fd02	                             cmp r13d, 2	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003ef8	     0xf8466010000	                            je 0x4004064	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003efe	        0x4183fd03	                             cmp r13d, 3	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f02	     0xf8443010000	                            je 0x400404b	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f08	        0x4183fd01	                             cmp r13d, 1	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f0c	     0xf8419010000	                            je 0x400402b	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f12	      0xba00000000	                              mov edx, 0	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f17	      0xbeca060000	                          mov esi, 0x6ca	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f1c	      0xbf00000000	                              mov edi, 0	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f21	      0xe800000000	                          call 0x4003f26	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003f30	        0x498d5001	                       lea rdx, [r8 + 1]	      1656	obj-elf.c	FUNCTION_42
0x4003f34	    0x488915000000	            mov qword [0x04003f3b], rdx 	      1656	obj-elf.c	FUNCTION_42
0x4003f3b	          0x4889d3	                            mov rbx, rdx	      1656	obj-elf.c	FUNCTION_42
0x4003f3e	      0x410fb64001	                movzx eax, byte [r8 + 1]	      1656	obj-elf.c	FUNCTION_42
0x4003f43	      0xe92ffeffff	                           jmp 0x4003d77	      1656	obj-elf.c	FUNCTION_42
0x4003f48	            0x89ce	                            mov esi, ecx	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4003f4a	          0x4889df	                            mov rdi, rbx	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4003f4d	      0xe800000000	                          call 0x4003f52	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4003f52	      0xba05000000	                              mov edx, 5	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4003f57	          0x4889c3	                            mov rbx, rax	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x4003f5a	      0xbe00000000	                              mov esi, 0	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4003f5f	            0x31ff	                            xor edi, edi	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4003f61	      0xe800000000	                          call 0x4003f66	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4003f66	          0x4889de	                            mov rsi, rbx	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4003f69	          0x4889c7	                            mov rdi, rax	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4003f6c	            0x31c0	                            xor eax, eax	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4003f6e	      0xe800000000	                          call 0x4003f73	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x4003f73	      0xe800000000	                          call 0x4003f78	      1686	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_7
0x4003f78	          0x4889df	                            mov rdi, rbx	      1687	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_8
0x4003f7b	      0xe800000000	                          call 0x4003f80	      1687	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_8
0x4003f80	            0x31c0	                            xor eax, eax	      1688	obj-elf.c	FUNCTION_42	ELSE_1	IF_4
0x4003f82	      0xe964feffff	                           jmp 0x4003deb	      1688	obj-elf.c	FUNCTION_42	ELSE_1	IF_4
0x4003f87	      0xbf18000000	                           mov edi, 0x18	      1617	obj-elf.c	ELSE_1	FUNCTION_40	CALL_1
0x4003f8c	      0x4889542408	                mov qword [rsp + 8], rdx	      1617	obj-elf.c	ELSE_1	FUNCTION_40	CALL_1
0x4003f91	      0xe800000000	                          call 0x4003f96	      1617	obj-elf.c	ELSE_1	FUNCTION_40	CALL_1
0x4003f96	    0x488b0d000000	            mov rcx, qword [0x04003f9d] 	      1618	obj-elf.c	ELSE_1	FUNCTION_40
0x4003f9d	      0x488b542408	                mov rdx, qword [rsp + 8]	      1621	obj-elf.c	ELSE_1	FUNCTION_40
0x4003fa2	        0x44896008	               mov dword [rax + 8], r12d	      1619	obj-elf.c	ELSE_1	FUNCTION_40
0x4003fa6	        0x4489780c	             mov dword [rax + 0xc], r15d	      1620	obj-elf.c	ELSE_1	FUNCTION_40
0x4003faa	    0x488905000000	            mov qword [0x04003fb1], rax 	      1622	obj-elf.c	ELSE_1	FUNCTION_40
0x4003fb1	          0x488908	                    mov qword [rax], rcx	      1618	obj-elf.c	ELSE_1	FUNCTION_40
0x4003fb4	        0x48895010	             mov qword [rax + 0x10], rdx	      1621	obj-elf.c	ELSE_1	FUNCTION_40
0x4003fb8	      0xe937ffffff	                           jmp 0x4003ef4	      1621	obj-elf.c	ELSE_1	FUNCTION_40
0x4003fbd	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4003fc2	      0xba01000000	                              mov edx, 1	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4003fc7	            0x31ff	                            xor edi, edi	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4003fc9	      0xe800000000	                          call 0x4003fce	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4003fce	      0x807c243802	                cmp byte [rsp + 0x38], 2	      1700	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4003fd3	      0xba05000000	                              mov edx, 5	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4003fd8	      0xbe00000000	                              mov esi, 0	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4003fdd	     0xf85f0fdffff	                           jne 0x4003dd3	      1700	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4003fe3	      0x448b742430	           mov r14d, dword [rsp + 0x30] 	      1706	obj-elf.c	FUNCTION_42	IF_6
0x4003fe8	      0xe97cfeffff	                           jmp 0x4003e69	      1706	obj-elf.c	FUNCTION_42	IF_6
0x4003fed	    0x488b05000000	            mov rax, qword [0x04003ff4] 	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003ff4	      0xba05000000	                              mov edx, 5	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4003ff9	      0xbe00000000	                              mov esi, 0	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4003ffe	          0x80382c	                    cmp byte [rax], 0x2c	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4004001	     0xf85ccfdffff	                           jne 0x4003dd3	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4004007	        0x4883c001	                              add rax, 1	      1579	obj-elf.c	FUNCTION_39	IF_1
0x400400b	    0x488905000000	            mov qword [0x04004012], rax 	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4004012	      0xe963feffff	                           jmp 0x4003e7a	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4004017	        0x488d4201	                      lea rax, [rdx + 1]	      1719	obj-elf.c	FUNCTION_42	IF_9
0x400401b	    0x488905000000	            mov qword [0x04004022], rax 	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4004022	         0xfb64201	               movzx eax, byte [rdx + 1]	      1719	obj-elf.c	FUNCTION_42	IF_9
0x4004026	      0xe967feffff	                           jmp 0x4003e92	      1719	obj-elf.c	FUNCTION_42	IF_9
0x400402b	    0x488b3d000000	            mov rdi, qword [0x04004032] 	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4004032	          0x4489f1	                           mov ecx, r14d	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4004035	            0x89ea	                            mov edx, ebp	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x4004037	          0x4489e6	                           mov esi, r12d	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x400403a	      0xe800000000	                          call 0x400403f	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x400403f	      0xe800000000	                          call 0x4004044	      1741	obj-elf.c	FUNCTION_42	CALL_23
0x4004044	            0x89e8	                            mov eax, ebp	      1742	obj-elf.c	FUNCTION_42
0x4004046	      0xe9a0fdffff	                           jmp 0x4003deb	      1742	obj-elf.c	FUNCTION_42
0x400404b	    0x488b3d000000	            mov rdi, qword [0x04004052] 	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4004052	          0x4989d8	                             mov r8, rbx	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4004055	          0x4489f1	                           mov ecx, r14d	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4004058	            0x89ea	                            mov edx, ebp	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x400405a	          0x4489e6	                           mov esi, r12d	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x400405d	      0xe800000000	                          call 0x4004062	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4004062	            0xebdb	                           jmp 0x400403f	      1730	obj-elf.c	FUNCTION_42	SWITCH_1
0x4004064	    0x488b3d000000	            mov rdi, qword [0x0400406b] 	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x400406b	          0x4889d9	                            mov rcx, rbx	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x400406e	            0x89ea	                            mov edx, ebp	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4004070	          0x4489e6	                           mov esi, r12d	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4004073	      0xe800000000	                          call 0x4004078	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x4004078	            0xebc5	                           jmp 0x400403f	      1733	obj-elf.c	FUNCTION_42	SWITCH_1
0x400407a	      0xe800000000	                          call 0x400407f	      1751	obj-elf.c	FUNCTION_42
obj_elf_weak	functions,0:SWITCH,0:IF,2:DO,1:ELSE,0:FOR,0:WHILE,0:CALL,4	74
0x4001fe0	              0x55	                                push rbp	       450	obj-elf.c	FUNCTION_17
0x4001fe1	              0x53	                                push rbx	       450	obj-elf.c	FUNCTION_17
0x4001fe2	        0x4883ec18	                           sub rsp, 0x18	       450	obj-elf.c	FUNCTION_17
0x4001fe6	    0x64488b042528	                mov rax, qword fs:[0x28]	       450	obj-elf.c	FUNCTION_17
0x4001fef	      0x4889442408	                mov qword [rsp + 8], rax	       450	obj-elf.c	FUNCTION_17
0x4001ff4	            0x31c0	                            xor eax, eax	       450	obj-elf.c	FUNCTION_17
0x4001ff6	          0x4889e7	                            mov rdi, rsp	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4001ff9	      0xe800000000	                          call 0x4001ffe	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4001ffe	        0x488b3c24	                    mov rdi, qword [rsp]	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4002002	            0x89c3	                            mov ebx, eax	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4002004	      0xe800000000	                          call 0x4002009	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4002009	          0x4889c5	                            mov rbp, rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400200c	    0x488b05000000	            mov rax, qword [0x04002013] 	       415	obj-elf.c	FUNCTION_15
0x4002013	            0x8818	                      mov byte [rax], bl	       415	obj-elf.c	FUNCTION_15
0x4002015	    0x488b05000000	            mov rax, qword [0x0400201c] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400201c	           0xfb610	                   movzx edx, byte [rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400201f	          0x80fa22	                            cmp dl, 0x22	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002022	     0xf84b8000000	                            je 0x40020e0	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002028	          0x80fa20	                            cmp dl, 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400202b	            0x7463	                            je 0x4002090	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400202d	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002031	            0x746e	                            je 0x40020a1	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002033	           0xfb618	                   movzx ebx, byte [rax]	       457	obj-elf.c	FUNCTION_17	DO_1
0x4002036	          0x4889ef	                            mov rdi, rbp	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x4002039	      0xe800000000	                          call 0x400203e	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x400203e	          0x80fb2c	                            cmp bl, 0x2c	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x4002041	            0x7524	                           jne 0x4002067	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x4002043	    0x488b05000000	            mov rax, qword [0x0400204a] 	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x400204a	        0x488d5001	                      lea rdx, [rax + 1]	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x400204e	    0x488915000000	            mov qword [0x04002055], rdx 	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x4002055	         0xfb65001	               movzx edx, byte [rax + 1]	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x4002059	          0x80fa20	                            cmp dl, 0x20	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x400205c	     0xf849e000000	                            je 0x4002100	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x4002062	          0x80fa0a	                             cmp dl, 0xa	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x4002065	            0x758f	                           jne 0x4001ff6	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x4002067	      0xe800000000	                          call 0x400206c	       468	obj-elf.c	FUNCTION_17	CALL_4
0x400206c	      0x488b442408	                mov rax, qword [rsp + 8]	       469	obj-elf.c	FUNCTION_17
0x4002071	    0x644833042528	                xor rax, qword fs:[0x28]	       469	obj-elf.c	FUNCTION_17
0x400207a	     0xf8594000000	                           jne 0x4002114	       469	obj-elf.c	FUNCTION_17
0x4002080	        0x4883c418	                           add rsp, 0x18	       469	obj-elf.c	FUNCTION_17
0x4002084	              0x5b	                                 pop rbx	       469	obj-elf.c	FUNCTION_17
0x4002085	              0x5d	                                 pop rbp	       469	obj-elf.c	FUNCTION_17
0x4002086	              0xc3	                                     ret	       469	obj-elf.c	FUNCTION_17
0x4002087	    0x660f1f840000	                    nop word [rax + rax]	       469	obj-elf.c	FUNCTION_17
0x4002090	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002094	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x4002098	    0x488905000000	            mov qword [0x0400209f], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x400209f	            0x7592	                           jne 0x4002033	       419	obj-elf.c	FUNCTION_15	IF_1
0x40020a1	      0xba05000000	                              mov edx, 5	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40020a6	      0xbe00000000	                              mov esi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40020ab	            0x31ff	                            xor edi, edi	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40020ad	      0xe800000000	                          call 0x40020b2	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40020b2	          0x4889c7	                            mov rdi, rax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40020b5	            0x31c0	                            xor eax, eax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40020b7	      0xe800000000	                          call 0x40020bc	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40020bc	    0x488b05000000	            mov rax, qword [0x040020c3] 	       457	obj-elf.c	FUNCTION_17	DO_1
0x40020c3	          0x4889ef	                            mov rdi, rbp	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x40020c6	           0xfb618	                   movzx ebx, byte [rax]	       457	obj-elf.c	FUNCTION_17	DO_1
0x40020c9	      0xe800000000	                          call 0x40020ce	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x40020ce	          0x80fb2c	                            cmp bl, 0x2c	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40020d1	            0x7594	                           jne 0x4002067	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40020d3	      0xe96bffffff	                           jmp 0x4002043	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40020d8	     0xf1f84000000	                   nop dword [rax + rax]	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40020e0	        0x488d4801	                      lea rcx, [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40020e4	    0x48890d000000	            mov qword [0x040020eb], rcx 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40020eb	         0xfb65001	               movzx edx, byte [rax + 1]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40020ef	          0x4889c8	                            mov rax, rcx	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40020f2	      0xe931ffffff	                           jmp 0x4002028	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40020f7	    0x660f1f840000	                    nop word [rax + rax]	       416	obj-elf.c	FUNCTION_15	CALL_3
0x4002100	        0x488d5002	                      lea rdx, [rax + 2]	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x4002104	    0x488915000000	            mov qword [0x0400210b], rdx 	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x400210b	         0xfb65002	               movzx edx, byte [rax + 2]	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x400210f	      0xe94effffff	                           jmp 0x4002062	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x4002114	      0xe800000000	                          call 0x4002119	       469	obj-elf.c	FUNCTION_17
obj_elf_ident	functions,0:SWITCH,0:IF,1:DO,0:ELSE,1:FOR,0:WHILE,0:CALL,8	31
0x4000610	              0x55	                                push rbp	      2078	obj-elf.c	FUNCTION_51
0x4000611	              0x53	                                push rbx	      2078	obj-elf.c	FUNCTION_51
0x4000612	            0x31f6	                            xor esi, esi	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4000614	        0x4883ec08	                              sub rsp, 8	      2078	obj-elf.c	FUNCTION_51
0x4000618	    0x488b3d000000	            mov rdi, qword [0x0400061f] 	      2087	obj-elf.c	FUNCTION_51	IF_1
0x400061f	    0x488b1d000000	            mov rbx, qword [0x04000626] 	      2080	obj-elf.c	FUNCTION_51
0x4000626	    0x8b2d00000000	            mov ebp, dword [0x0400062c] 	      2081	obj-elf.c	FUNCTION_51
0x400062c	          0x4885ff	                           test rdi, rdi	      2087	obj-elf.c	FUNCTION_51	IF_1
0x400062f	            0x741f	                            je 0x4000650	      2087	obj-elf.c	FUNCTION_51	IF_1
0x4000631	      0xe800000000	                          call 0x4000636	      2102	obj-elf.c	FUNCTION_51	CALL_6
0x4000636	      0xbf09000000	                              mov edi, 9	      2103	obj-elf.c	FUNCTION_51	CALL_7
0x400063b	      0xe800000000	                          call 0x4000640	      2103	obj-elf.c	FUNCTION_51	CALL_7
0x4000640	        0x4883c408	                              add rsp, 8	      2105	obj-elf.c	FUNCTION_51
0x4000644	            0x89ee	                            mov esi, ebp	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4000646	          0x4889df	                            mov rdi, rbx	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4000649	              0x5b	                                 pop rbx	      2105	obj-elf.c	FUNCTION_51
0x400064a	              0x5d	                                 pop rbp	      2105	obj-elf.c	FUNCTION_51
0x400064b	      0xe900000000	                           jmp 0x4000650	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4000650	      0xbf00000000	                              mov edi, 0	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4000655	      0xe800000000	                          call 0x400065a	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x400065a	    0x488b3d000000	            mov rdi, qword [0x04000661] 	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4000661	      0xba08018001	                      mov edx, 0x1800108	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4000666	          0x4889c6	                            mov rsi, rax	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4000669	    0x488905000000	            mov qword [0x04000670], rax 	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4000670	      0xe800000000	                          call 0x4000675	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4000675	    0x488b05000000	            mov rax, qword [0x0400067c] 	      2094	obj-elf.c	FUNCTION_51	IF_1
0x400067c	      0xbf01000000	                              mov edi, 1	      2098	obj-elf.c	FUNCTION_51	IF_1	CALL_5
0x4000681	    0xc780c4000000	               mov dword [rax + 0xc4], 1	      2094	obj-elf.c	FUNCTION_51	IF_1
0x400068b	      0xe800000000	                          call 0x4000690	      2098	obj-elf.c	FUNCTION_51	IF_1	CALL_5
0x4000690	          0xc60000	                       mov byte [rax], 0	      2099	obj-elf.c	FUNCTION_51	IF_1
0x4000693	            0xeba1	                           jmp 0x4000636	      2099	obj-elf.c	FUNCTION_51	IF_1
elf_s_set_align	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	6
0x40001a0	              0x53	                                push rbx	       239	obj-elf.c	FUNCTION_6
0x40001a1	          0x4889f3	                            mov rbx, rsi	       239	obj-elf.c	FUNCTION_6
0x40001a4	      0xe800000000	                          call 0x40001a9	       240	obj-elf.c	FUNCTION_6	CALL_1
0x40001a9	        0x48895830	             mov qword [rax + 0x30], rbx	       240	obj-elf.c	FUNCTION_6	CALL_1
0x40001ad	              0x5b	                                 pop rbx	       241	obj-elf.c	FUNCTION_6
0x40001ae	              0xc3	                                     ret	       241	obj-elf.c	FUNCTION_6
build_group_lists	functions,0:SWITCH,0:IF,3:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,6	59
0x40012a0	            0x4155	                                push r13	      2375	obj-elf.c	FUNCTION_58
0x40012a2	            0x4154	                                push r12	      2375	obj-elf.c	FUNCTION_58
0x40012a4	              0x55	                                push rbp	      2375	obj-elf.c	FUNCTION_58
0x40012a5	              0x53	                                push rbx	      2375	obj-elf.c	FUNCTION_58
0x40012a6	        0x4883ec08	                              sub rsp, 8	      2375	obj-elf.c	FUNCTION_58
0x40012aa	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	      2377	obj-elf.c	FUNCTION_58	CALL_1
0x40012b1	    0x4c8ba0b00000	            mov r12, qword [rax + 0xb0] 	      2377	obj-elf.c	FUNCTION_58	CALL_1
0x40012b8	          0x4d85e4	                           test r12, r12	      2382	obj-elf.c	FUNCTION_58	IF_1
0x40012bb	            0x7434	                            je 0x40012f1	      2382	obj-elf.c	FUNCTION_58	IF_1
0x40012bd	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x40012c1	          0x4889f5	                            mov rbp, rsi	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x40012c4	          0x4c89e6	                            mov rsi, r12	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x40012c7	          0x4889d3	                            mov rbx, rdx	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x40012ca	      0xe800000000	                          call 0x40012cf	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x40012cf	          0x4885c0	                           test rax, rax	      2388	obj-elf.c	FUNCTION_58	IF_2
0x40012d2	            0x742c	                            je 0x4001300	      2388	obj-elf.c	FUNCTION_58	IF_2
0x40012d4	            0x8b10	                    mov edx, dword [rax]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40012d6	          0x488b03	                    mov rax, qword [rbx]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40012d9	        0x488d04d0	                  lea rax, [rax + rdx*8]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40012dd	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40012e4	          0x488b08	                    mov rcx, qword [rax]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40012e7	    0x48898ac00000	             mov qword [rdx + 0xc0], rcx	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x40012ee	          0x488928	                    mov qword [rax], rbp	      2391	obj-elf.c	FUNCTION_58	IF_2
0x40012f1	        0x4883c408	                              add rsp, 8	      2410	obj-elf.c	FUNCTION_58
0x40012f5	              0x5b	                                 pop rbx	      2410	obj-elf.c	FUNCTION_58
0x40012f6	              0x5d	                                 pop rbp	      2410	obj-elf.c	FUNCTION_58
0x40012f7	            0x415c	                                 pop r12	      2410	obj-elf.c	FUNCTION_58
0x40012f9	            0x415d	                                 pop r13	      2410	obj-elf.c	FUNCTION_58
0x40012fb	              0xc3	                                     ret	      2410	obj-elf.c	FUNCTION_58
0x40012fc	         0xf1f4000	                         nop dword [rax]	      2410	obj-elf.c	FUNCTION_58
0x4001300	        0x448b6b08	               mov r13d, dword [rbx + 8]	      2397	obj-elf.c	FUNCTION_58
0x4001304	        0x41f6c57f	                         test r13b, 0x7f	      2398	obj-elf.c	FUNCTION_58	IF_3
0x4001308	            0x743e	                            je 0x4001348	      2398	obj-elf.c	FUNCTION_58	IF_3
0x400130a	          0x488b03	                    mov rax, qword [rbx]	      2398	obj-elf.c	FUNCTION_58	IF_3
0x400130d	          0x4489ea	                           mov edx, r13d	      2398	obj-elf.c	FUNCTION_58	IF_3
0x4001310	          0x4489e9	                           mov ecx, r13d	      2403	obj-elf.c	FUNCTION_58
0x4001313	      0xbf04000000	                              mov edi, 4	      2407	obj-elf.c	FUNCTION_58	CALL_5
0x4001318	        0x48892cc8	            mov qword [rax + rcx*8], rbp	      2403	obj-elf.c	FUNCTION_58
0x400131c	          0x8d4201	                      lea eax, [rdx + 1]	      2404	obj-elf.c	FUNCTION_58
0x400131f	          0x894308	                mov dword [rbx + 8], eax	      2404	obj-elf.c	FUNCTION_58
0x4001322	      0xe800000000	                          call 0x4001327	      2407	obj-elf.c	FUNCTION_58	CALL_5
0x4001327	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x400132b	          0x448928	                   mov dword [rax], r13d	      2408	obj-elf.c	FUNCTION_58
0x400132e	        0x4883c408	                              add rsp, 8	      2410	obj-elf.c	FUNCTION_58
0x4001332	              0x5b	                                 pop rbx	      2410	obj-elf.c	FUNCTION_58
0x4001333	          0x4c89e6	                            mov rsi, r12	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4001336	          0x4889c2	                            mov rdx, rax	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4001339	              0x5d	                                 pop rbp	      2410	obj-elf.c	FUNCTION_58
0x400133a	            0x415c	                                 pop r12	      2410	obj-elf.c	FUNCTION_58
0x400133c	            0x415d	                                 pop r13	      2410	obj-elf.c	FUNCTION_58
0x400133e	      0xe900000000	                           jmp 0x4001343	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4001343	       0xf1f440000	                   nop dword [rax + rax]	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4001348	    0x418db5800000	                   lea esi, [r13 + 0x80]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x400134f	          0x488b3b	                    mov rdi, qword [rbx]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4001352	        0x48c1e603	                              shl rsi, 3	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4001356	      0xe800000000	                          call 0x400135b	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x400135b	          0x8b5308	                mov edx, dword [rbx + 8]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x400135e	          0x488903	                    mov qword [rbx], rax	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4001361	            0xebad	                           jmp 0x4001310	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
elf_init_stab_section	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:FOR,0:WHILE,0:CALL,1	41
0x4001f40	            0x4154	                                push r12	      2685	obj-elf.c	FUNCTION_67
0x4001f42	              0x55	                                push rbp	      2685	obj-elf.c	FUNCTION_67
0x4001f43	          0x4889fd	                            mov rbp, rdi	      2685	obj-elf.c	FUNCTION_67
0x4001f46	              0x53	                                push rbx	      2685	obj-elf.c	FUNCTION_67
0x4001f47	    0xc74770020000	               mov dword [rdi + 0x70], 2	      1696	bfd.h	FUNCTION_82
0x4001f4e	      0xbf0c000000	                            mov edi, 0xc	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x4001f53	      0xe800000000	                          call 0x4001f58	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x4001f58	            0x31ff	                            xor edi, edi	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x4001f5a	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4001f61	    0xc74008000000	                  mov dword [rax + 8], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4001f68	          0x4889c3	                            mov rbx, rax	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x4001f6b	      0xe800000000	                          call 0x4001f70	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x4001f70	        0x488b7d00	                    mov rdi, qword [rbp]	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4001f74	            0x31d2	                            xor edx, edx	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4001f76	          0x4989c4	                            mov r12, rax	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x4001f79	      0xbe00000000	                              mov esi, 0	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4001f7e	            0x31c0	                            xor eax, eax	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4001f80	      0xe800000000	                          call 0x4001f85	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x4001f85	          0x4c89e7	                            mov rdi, r12	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4001f88	          0x4889c6	                            mov rsi, rax	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4001f8b	      0xe800000000	                          call 0x4001f90	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x4001f90	          0x83f801	                              cmp eax, 1	      2130	obj-elf.c	FUNCTION_52
0x4001f93	            0x740b	                            je 0x4001fa0	      2130	obj-elf.c	FUNCTION_52
0x4001f95	            0x85c0	                           test eax, eax	      2130	obj-elf.c	FUNCTION_52
0x4001f97	            0x7526	                           jne 0x4001fbf	      2130	obj-elf.c	FUNCTION_52
0x4001f99	      0x41803c2400	                       cmp byte [r12], 0	      2130	obj-elf.c	FUNCTION_52
0x4001f9e	            0x751f	                           jne 0x4001fbf	      2130	obj-elf.c	FUNCTION_52
0x4001fa0	            0x89c6	                            mov esi, eax	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4001fa2	          0x4889df	                            mov rdi, rbx	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4001fa5	      0xba04000000	                              mov edx, 4	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4001faa	      0xe800000000	                          call 0x4001faf	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x4001faf	    0x488b85a80000	            mov rax, qword [rbp + 0xa8] 	      2132	obj-elf.c	FUNCTION_52	CALL_8
0x4001fb6	        0x48895850	             mov qword [rax + 0x50], rbx	      2132	obj-elf.c	FUNCTION_52	CALL_8
0x4001fba	              0x5b	                                 pop rbx	      2690	obj-elf.c	FUNCTION_67
0x4001fbb	              0x5d	                                 pop rbp	      2690	obj-elf.c	FUNCTION_67
0x4001fbc	            0x415c	                                 pop r12	      2690	obj-elf.c	FUNCTION_67
0x4001fbe	              0xc3	                                     ret	      2690	obj-elf.c	FUNCTION_67
0x4001fbf	      0xba00000000	                              mov edx, 0	      2130	obj-elf.c	FUNCTION_52
0x4001fc4	      0xbe52080000	                          mov esi, 0x852	      2130	obj-elf.c	FUNCTION_52
0x4001fc9	      0xbf00000000	                              mov edi, 0	      2130	obj-elf.c	FUNCTION_52
0x4001fce	      0xe800000000	                          call 0x4001fd3	      2130	obj-elf.c	FUNCTION_52
obj_elf_common	functions,0:SWITCH,0:IF,1:DO,0:ELSE,1:FOR,0:WHILE,0:CALL,2	11
0x4000a50	    0x8b0500000000	            mov eax, dword [0x04000a56] 	       382	obj-elf.c	FUNCTION_12	IF_1
0x4000a56	            0x85c0	                           test eax, eax	       382	obj-elf.c	FUNCTION_12	IF_1
0x4000a58	            0x7404	                            je 0x4000a5e	       382	obj-elf.c	FUNCTION_12	IF_1
0x4000a5a	            0x85ff	                           test edi, edi	       382	obj-elf.c	FUNCTION_12	IF_1
0x4000a5c	            0x7512	                           jne 0x4000a70	       382	obj-elf.c	FUNCTION_12	IF_1
0x4000a5e	      0xbe00000000	                              mov esi, 0	       385	obj-elf.c	FUNCTION_12	CALL_2
0x4000a63	            0x31ff	                            xor edi, edi	       385	obj-elf.c	FUNCTION_12	CALL_2
0x4000a65	      0xe900000000	                           jmp 0x4000a6a	       385	obj-elf.c	FUNCTION_12	CALL_2
0x4000a6a	    0x660f1f440000	                    nop word [rax + rax]	       385	obj-elf.c	FUNCTION_12	CALL_2
0x4000a70	            0x31ff	                            xor edi, edi	       383	obj-elf.c	FUNCTION_12	CALL_1
0x4000a72	      0xe900000000	                           jmp 0x4000a77	       383	obj-elf.c	FUNCTION_12	CALL_1
