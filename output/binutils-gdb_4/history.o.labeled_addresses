history_set_history_state	FOR,0:CALL,0:IF,1:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	12
0x4000090	          0x488b07	                    mov rax, qword [rdi]	       110	history.c	FUNCTION_2
0x4000093	        0xf6471401	               test byte [rdi + 0x14], 1	       114	history.c	FUNCTION_2	IF_1
0x4000097	    0x488905000000	            mov qword [0x0400009e], rax 	       110	history.c	FUNCTION_2
0x400009e	          0x8b4708	                mov eax, dword [rdi + 8]	       111	history.c	FUNCTION_2
0x40000a1	    0x890500000000	            mov dword [0x040000a7], eax 	       111	history.c	FUNCTION_2
0x40000a7	          0x8b470c	              mov eax, dword [rdi + 0xc]	       112	history.c	FUNCTION_2
0x40000aa	    0x890500000000	            mov dword [0x040000b0], eax 	       112	history.c	FUNCTION_2
0x40000b0	          0x8b4710	            mov eax, dword [rdi + 0x10] 	       113	history.c	FUNCTION_2
0x40000b3	    0x890500000000	            mov dword [0x040000b9], eax 	       113	history.c	FUNCTION_2
0x40000b9	            0x740a	                            je 0x40000c5	       114	history.c	FUNCTION_2	IF_1
0x40000bb	    0xc70500000000	               mov dword [0x040000c5], 1	       115	history.c	FUNCTION_2	IF_1
0x40000c5	            0xf3c3	                                     ret	       115	history.c	FUNCTION_2	IF_1
history_list	FOR,0:CALL,0:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	2
0x40001a0	    0x488b05000000	            mov rax, qword [0x040001a7] 	       167	history.c	FUNCTION_7
0x40001a7	              0xc3	                                     ret	       167	history.c	FUNCTION_7
clear_history	FOR,1:CALL,1:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	38
0x4000a90	    0x8b0d00000000	            mov ecx, dword [0x04000a96] 	       512	history.c	FUNCTION_20	FOR_1
0x4000a96	            0x4154	                                push r12	       508	history.c	FUNCTION_20
0x4000a98	          0x4531e4	                          xor r12d, r12d	       508	history.c	FUNCTION_20
0x4000a9b	              0x55	                                push rbp	       508	history.c	FUNCTION_20
0x4000a9c	            0x31ed	                            xor ebp, ebp	       508	history.c	FUNCTION_20
0x4000a9e	              0x53	                                push rbx	       508	history.c	FUNCTION_20
0x4000a9f	    0x488b15000000	            mov rdx, qword [0x04000aa6] 	       508	history.c	FUNCTION_20
0x4000aa6	            0x85c9	                           test ecx, ecx	       512	history.c	FUNCTION_20	FOR_1
0x4000aa8	            0x7e5a	                           jle 0x4000b04	       512	history.c	FUNCTION_20	FOR_1
0x4000aaa	    0x660f1f440000	                    nop word [rax + rax]	       512	history.c	FUNCTION_20	FOR_1
0x4000ab0	        0x488d042a	                    lea rax, [rdx + rbp]	       514	history.c	FUNCTION_20	FOR_1	CALL_1
0x4000ab4	          0x488b18	                    mov rbx, qword [rax]	       514	history.c	FUNCTION_20	FOR_1	CALL_1
0x4000ab7	          0x4885db	                           test rbx, rbx	       336	history.c	FUNCTION_14	IF_1
0x4000aba	            0x7434	                            je 0x4000af0	       336	history.c	FUNCTION_14	IF_1
0x4000abc	          0x488b3b	                    mov rdi, qword [rbx]	       338	history.c	FUNCTION_14	CALL_1
0x4000abf	          0x4885ff	                           test rdi, rdi	       338	history.c	FUNCTION_14	CALL_1
0x4000ac2	            0x7405	                            je 0x4000ac9	       338	history.c	FUNCTION_14	CALL_1
0x4000ac4	      0xe800000000	                          call 0x4000ac9	       338	history.c	FUNCTION_14	CALL_1
0x4000ac9	        0x488b7b08	                mov rdi, qword [rbx + 8]	       339	history.c	FUNCTION_14	CALL_2
0x4000acd	          0x4885ff	                           test rdi, rdi	       339	history.c	FUNCTION_14	CALL_2
0x4000ad0	            0x7405	                            je 0x4000ad7	       339	history.c	FUNCTION_14	CALL_2
0x4000ad2	      0xe800000000	                          call 0x4000ad7	       339	history.c	FUNCTION_14	CALL_2
0x4000ad7	          0x4889df	                            mov rdi, rbx	       341	history.c	FUNCTION_14	CALL_3
0x4000ada	      0xe800000000	                          call 0x4000adf	       341	history.c	FUNCTION_14	CALL_3
0x4000adf	    0x488b15000000	            mov rdx, qword [0x04000ae6] 	       341	history.c	FUNCTION_14	CALL_3
0x4000ae6	    0x8b0d00000000	            mov ecx, dword [0x04000aec] 	       341	history.c	FUNCTION_14	CALL_3
0x4000aec	        0x488d042a	                    lea rax, [rdx + rbp]	       341	history.c	FUNCTION_14	CALL_3
0x4000af0	        0x4183c401	                             add r12d, 1	       512	history.c	FUNCTION_20	FOR_1
0x4000af4	        0x4883c508	                              add rbp, 8	       512	history.c	FUNCTION_20	FOR_1
0x4000af8	    0x48c700000000	                      mov qword [rax], 0	       515	history.c	FUNCTION_20	FOR_1
0x4000aff	          0x4139cc	                           cmp r12d, ecx	       512	history.c	FUNCTION_20	FOR_1
0x4000b02	            0x7cac	                            jl 0x4000ab0	       512	history.c	FUNCTION_20	FOR_1
0x4000b04	              0x5b	                                 pop rbx	       519	history.c	FUNCTION_20
0x4000b05	    0xc70500000000	               mov dword [0x04000b0f], 0	       518	history.c	FUNCTION_20
0x4000b0f	    0xc70500000000	               mov dword [0x04000b19], 0	       518	history.c	FUNCTION_20
0x4000b19	              0x5d	                                 pop rbp	       519	history.c	FUNCTION_20
0x4000b1a	            0x415c	                                 pop r12	       519	history.c	FUNCTION_20
0x4000b1c	              0xc3	                                     ret	       519	history.c	FUNCTION_20
stifle_history	FOR,2:CALL,1:IF,2:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	119
0x4000890	            0x4156	                                push r14	       462	history.c	FUNCTION_17
0x4000892	    0x448b35000000	           mov r14d, dword [0x04000899] 	       468	history.c	FUNCTION_17	IF_2
0x4000899	            0x85ff	                           test edi, edi	       468	history.c	FUNCTION_17	IF_2
0x400089b	            0x4155	                                push r13	       462	history.c	FUNCTION_17
0x400089d	            0x4154	                                push r12	       462	history.c	FUNCTION_17
0x400089f	    0x41bc00000000	                             mov r12d, 0	       462	history.c	FUNCTION_17
0x40008a5	        0x440f49e7	                        cmovns r12d, edi	       462	history.c	FUNCTION_17
0x40008a9	              0x55	                                push rbp	       462	history.c	FUNCTION_17
0x40008aa	              0x53	                                push rbx	       462	history.c	FUNCTION_17
0x40008ab	          0x4539e6	                          cmp r14d, r12d	       468	history.c	FUNCTION_17	IF_2
0x40008ae	     0xf8e40010000	                           jle 0x40009f4	       468	history.c	FUNCTION_17	IF_2
0x40008b4	          0x4529e6	                          sub r14d, r12d	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40008b7	    0x488b05000000	            mov rax, qword [0x040008be] 	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40008be	            0x31ed	                            xor ebp, ebp	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40008c0	        0x418d56ff	                      lea edx, [r14 - 1]	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40008c4	    0x4c8d2cd50800	                    lea r13, [rdx*8 + 8]	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40008cc	         0xf1f4000	                         nop dword [rax]	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40008d0	        0x488b1c28	              mov rbx, qword [rax + rbp]	       472	history.c	FUNCTION_17	IF_2	CALL_1
0x40008d4	          0x4885db	                           test rbx, rbx	       336	history.c	FUNCTION_14	IF_1
0x40008d7	            0x742a	                            je 0x4000903	       336	history.c	FUNCTION_14	IF_1
0x40008d9	          0x488b3b	                    mov rdi, qword [rbx]	       338	history.c	FUNCTION_14	CALL_1
0x40008dc	          0x4885ff	                           test rdi, rdi	       338	history.c	FUNCTION_14	CALL_1
0x40008df	            0x7405	                            je 0x40008e6	       338	history.c	FUNCTION_14	CALL_1
0x40008e1	      0xe800000000	                          call 0x40008e6	       338	history.c	FUNCTION_14	CALL_1
0x40008e6	        0x488b7b08	                mov rdi, qword [rbx + 8]	       339	history.c	FUNCTION_14	CALL_2
0x40008ea	          0x4885ff	                           test rdi, rdi	       339	history.c	FUNCTION_14	CALL_2
0x40008ed	            0x7405	                            je 0x40008f4	       339	history.c	FUNCTION_14	CALL_2
0x40008ef	      0xe800000000	                          call 0x40008f4	       339	history.c	FUNCTION_14	CALL_2
0x40008f4	          0x4889df	                            mov rdi, rbx	       341	history.c	FUNCTION_14	CALL_3
0x40008f7	      0xe800000000	                          call 0x40008fc	       341	history.c	FUNCTION_14	CALL_3
0x40008fc	    0x488b05000000	            mov rax, qword [0x04000903] 	       341	history.c	FUNCTION_14	CALL_3
0x4000903	        0x4883c508	                              add rbp, 8	       341	history.c	FUNCTION_14	CALL_3
0x4000907	          0x4939ed	                            cmp r13, rbp	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x400090a	            0x75c4	                           jne 0x40008d0	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x400090c	    0x8b0d00000000	            mov ecx, dword [0x04000912] 	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000912	    0x448935000000	           mov dword [0x04000919], r14d 	       474	history.c	FUNCTION_17	IF_2
0x4000919	          0x4429e1	                           sub ecx, r12d	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400091c	          0x4585e4	                         test r12d, r12d	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400091f	     0xf8416010000	                            je 0x4000a3b	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000925	          0x4863f1	                         movsxd rsi, ecx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000928	    0x488d14f51000	                 lea rdx, [rsi*8 + 0x10]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000930	    0x4c8d04f50000	                         lea r8, [rsi*8]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000938	          0x4885d2	                           test rdx, rdx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400093b	        0x4a8d3c00	                     lea rdi, [rax + r8]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400093f	        0x488d5010	                   lea rdx, [rax + 0x10]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000943	        0x410f9ec1	                               setle r9b	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000947	          0x4839d7	                            cmp rdi, rdx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400094a	           0xf93c2	                                setae dl	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400094d	          0x4108d1	                              or r9b, dl	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000950	     0xf84c2000000	                            je 0x4000a18	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000956	        0x4183fc18	                          cmp r12d, 0x18	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400095a	     0xf86b8000000	                           jbe 0x4000a18	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000960	          0x4889fa	                            mov rdx, rdi	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000963	        0x48c1e23c	                           shl rdx, 0x3c	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000967	        0x48c1ea3f	                           shr rdx, 0x3f	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400096b	          0x4439e2	                           cmp edx, r12d	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400096e	        0x410f47d4	                         cmova edx, r12d	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000972	          0x4531c9	                            xor r9d, r9d	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000975	            0x85d2	                           test edx, edx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000977	            0x740f	                            je 0x4000988	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000979	          0x488b37	                    mov rsi, qword [rdi]	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x400097c	          0x83c101	                              add ecx, 1	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400097f	    0x41b901000000	                              mov r9d, 1	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000985	          0x488930	                    mov qword [rax], rsi	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x4000988	          0x4589e3	                          mov r11d, r12d	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x400098b	            0x31f6	                            xor esi, esi	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400098d	            0x31ff	                            xor edi, edi	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400098f	          0x4129d3	                           sub r11d, edx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000992	            0x89d2	                            mov edx, edx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000994	        0x418d5bfe	                      lea ebx, [r11 - 2]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000998	        0x48c1e203	                              shl rdx, 3	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400099c	          0x4901d0	                             add r8, rdx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400099f	          0x4801c2	                            add rdx, rax	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x40009a2	            0xd1eb	                              shr ebx, 1	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x40009a4	          0x4901c0	                             add r8, rax	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x40009a7	          0x83c301	                              add ebx, 1	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x40009aa	        0x448d141b	                   lea r10d, [rbx + rbx]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x40009ae	    0x66410f6f0430	         movdqa xmm0, xmmword [r8 + rsi]	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009b4	          0x83c701	                              add edi, 1	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009b7	         0xf110432	        movups xmmword [rdx + rsi], xmm0	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009bb	        0x4883c610	                           add rsi, 0x10	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009bf	            0x39df	                            cmp edi, ebx	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009c1	            0x72eb	                            jb 0x40009ae	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009c3	          0x4401d1	                           add ecx, r10d	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009c6	          0x4501d1	                           add r9d, r10d	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009c9	          0x4539d3	                          cmp r11d, r10d	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009cc	            0x740e	                            je 0x40009dc	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009ce	          0x4863c9	                         movsxd rcx, ecx	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009d1	          0x4d63c9	                          movsxd r9, r9d	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009d4	        0x488b14c8	            mov rdx, qword [rax + rcx*8]	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009d8	        0x4a8914c8	             mov qword [rax + r9*8], rdx	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009dc	          0x4963d4	                        movsxd rdx, r12d	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x40009df	          0x4489e1	                           mov ecx, r12d	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x40009e2	        0x48c1e203	                              shl rdx, 3	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x40009e6	    0x48c704100000	                mov qword [rax + rdx], 0	       477	history.c	FUNCTION_17	IF_2
0x40009ee	    0x890d00000000	            mov dword [0x040009f4], ecx 	       478	history.c	FUNCTION_17	IF_2
0x40009f4	              0x5b	                                 pop rbx	       483	history.c	FUNCTION_17
0x40009f5	    0x448925000000	           mov dword [0x040009fc], r12d 	       482	history.c	FUNCTION_17
0x40009fc	    0x448925000000	           mov dword [0x04000a03], r12d 	       482	history.c	FUNCTION_17
0x4000a03	              0x5d	                                 pop rbp	       483	history.c	FUNCTION_17
0x4000a04	    0xc70500000000	               mov dword [0x04000a0e], 1	       481	history.c	FUNCTION_17
0x4000a0e	            0x415c	                                 pop r12	       483	history.c	FUNCTION_17
0x4000a10	            0x415d	                                 pop r13	       483	history.c	FUNCTION_17
0x4000a12	            0x415e	                                 pop r14	       483	history.c	FUNCTION_17
0x4000a14	              0xc3	                                     ret	       483	history.c	FUNCTION_17
0x4000a15	           0xf1f00	                         nop dword [rax]	       483	history.c	FUNCTION_17
0x4000a18	      0x418d4c24ff	                      lea ecx, [r12 - 1]	       483	history.c	FUNCTION_17
0x4000a1d	          0x4889c2	                            mov rdx, rax	       483	history.c	FUNCTION_17
0x4000a20	      0x488d7cc808	              lea rdi, [rax + rcx*8 + 8]	       483	history.c	FUNCTION_17
0x4000a25	           0xf1f00	                         nop dword [rax]	       483	history.c	FUNCTION_17
0x4000a28	        0x488b0cf2	            mov rcx, qword [rdx + rsi*8]	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x4000a2c	        0x4883c208	                              add rdx, 8	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x4000a30	        0x48894af8	                mov qword [rdx - 8], rcx	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x4000a34	          0x4839fa	                            cmp rdx, rdi	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000a37	            0x75ef	                           jne 0x4000a28	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000a39	            0xeba1	                           jmp 0x40009dc	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000a3b	            0x31c9	                            xor ecx, ecx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000a3d	            0x31d2	                            xor edx, edx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000a3f	            0xeba5	                           jmp 0x40009e6	       475	history.c	FUNCTION_17	IF_2	FOR_2
copy_history_entry	FOR,0:CALL,2:IF,1:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	45
0x4000600	          0x4885ff	                           test rdi, rdi	       352	history.c	FUNCTION_15	IF_1
0x4000603	     0xf848f000000	                            je 0x4000698	       352	history.c	FUNCTION_15	IF_1
0x4000609	            0x4154	                                push r12	       348	history.c	FUNCTION_15
0x400060b	              0x55	                                push rbp	       348	history.c	FUNCTION_15
0x400060c	          0x4889fd	                            mov rbp, rdi	       348	history.c	FUNCTION_15
0x400060f	              0x53	                                push rbx	       348	history.c	FUNCTION_15
0x4000610	          0x4c8b27	                    mov r12, qword [rdi]	       355	history.c	FUNCTION_15	CALL_1
0x4000613	      0xbf18000000	                           mov edi, 0x18	       218	history.c	CALL_3
0x4000618	      0xe800000000	                          call 0x400061d	       218	history.c	CALL_3
0x400061d	          0x4d85e4	                           test r12, r12	       220	history.c	CALL_4
0x4000620	          0x4889c3	                            mov rbx, rax	       218	history.c	CALL_3
0x4000623	            0x741f	                            je 0x4000644	       220	history.c	CALL_4
0x4000625	          0x4c89e7	                            mov rdi, r12	       220	history.c	CALL_4
0x4000628	      0xe800000000	                          call 0x400062d	       220	history.c	CALL_4
0x400062d	        0x488d7801	                      lea rdi, [rax + 1]	       220	history.c	CALL_4
0x4000631	      0xe800000000	                          call 0x4000636	       220	history.c	CALL_4
0x4000636	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_27	CALL_3
0x4000639	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_27	CALL_3
0x400063c	      0xe800000000	                          call 0x4000641	       110	string3.h	FUNCTION_27	CALL_3
0x4000641	          0x4989c4	                            mov r12, rax	       110	string3.h	FUNCTION_27	CALL_3
0x4000644	          0x4c8923	                    mov qword [rbx], r12	       220	history.c	CALL_4
0x4000647	    0x48c743080000	                  mov qword [rbx + 8], 0	       222	history.c	
0x400064f	        0x4c8b6508	                mov r12, qword [rbp + 8]	       357	history.c	FUNCTION_15	CALL_2
0x4000653	    0x48c743100000	               mov qword [rbx + 0x10], 0	       221	history.c	
0x400065b	          0x4d85e4	                           test r12, r12	       357	history.c	FUNCTION_15	CALL_2
0x400065e	            0x741f	                            je 0x400067f	       357	history.c	FUNCTION_15	CALL_2
0x4000660	          0x4c89e7	                            mov rdi, r12	       357	history.c	FUNCTION_15	CALL_2
0x4000663	      0xe800000000	                          call 0x4000668	       357	history.c	FUNCTION_15	CALL_2
0x4000668	        0x488d7801	                      lea rdi, [rax + 1]	       357	history.c	FUNCTION_15	CALL_2
0x400066c	      0xe800000000	                          call 0x4000671	       357	history.c	FUNCTION_15	CALL_2
0x4000671	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_27	CALL_3
0x4000674	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_27	CALL_3
0x4000677	      0xe800000000	                          call 0x400067c	       110	string3.h	FUNCTION_27	CALL_3
0x400067c	          0x4989c4	                            mov r12, rax	       110	string3.h	FUNCTION_27	CALL_3
0x400067f	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       360	history.c	FUNCTION_15
0x4000683	        0x4c896308	                mov qword [rbx + 8], r12	       358	history.c	FUNCTION_15
0x4000687	        0x48894310	             mov qword [rbx + 0x10], rax	       360	history.c	FUNCTION_15
0x400068b	          0x4889d8	                            mov rax, rbx	       362	history.c	FUNCTION_15
0x400068e	              0x5b	                                 pop rbx	       363	history.c	FUNCTION_15
0x400068f	              0x5d	                                 pop rbp	       363	history.c	FUNCTION_15
0x4000690	            0x415c	                                 pop r12	       363	history.c	FUNCTION_15
0x4000692	              0xc3	                                     ret	       363	history.c	FUNCTION_15
0x4000693	       0xf1f440000	                   nop dword [rax + rax]	       363	history.c	FUNCTION_15
0x4000698	            0x31c0	                            xor eax, eax	       363	history.c	FUNCTION_15
0x400069a	              0xc3	                                     ret	       363	history.c	FUNCTION_15
unstifle_history	FOR,0:CALL,0:IF,1:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,1	11
0x4000a50	    0x8b1500000000	            mov edx, dword [0x04000a56] 	       497	history.c	FUNCTION_18	ELSE_1
0x4000a56	    0x8b0d00000000	            mov ecx, dword [0x04000a5c] 	       491	history.c	FUNCTION_18	IF_1
0x4000a5c	            0x89d0	                            mov eax, edx	       497	history.c	FUNCTION_18	ELSE_1
0x4000a5e	            0xf7d8	                                 neg eax	       497	history.c	FUNCTION_18	ELSE_1
0x4000a60	            0x85c9	                           test ecx, ecx	       491	history.c	FUNCTION_18	IF_1
0x4000a62	            0x750c	                           jne 0x4000a70	       491	history.c	FUNCTION_18	IF_1
0x4000a64	            0xf3c3	                                     ret	       498	history.c	FUNCTION_18
0x4000a66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       498	history.c	FUNCTION_18
0x4000a70	    0xc70500000000	               mov dword [0x04000a7a], 0	       493	history.c	FUNCTION_18	IF_1
0x4000a7a	            0x89d0	                            mov eax, edx	       494	history.c	FUNCTION_18	IF_1
0x4000a7c	              0xc3	                                     ret	       498	history.c	FUNCTION_18
next_history	FOR,0:CALL,0:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	12
0x4000210	    0x8b0500000000	            mov eax, dword [0x04000216] 	       194	history.c	FUNCTION_10
0x4000216	    0x3b0500000000	            cmp eax, dword [0x0400021c] 	       194	history.c	FUNCTION_10
0x400021c	            0x741a	                            je 0x4000238	       194	history.c	FUNCTION_10
0x400021e	    0x488b15000000	            mov rdx, qword [0x04000225] 	       194	history.c	FUNCTION_10
0x4000225	          0x83c001	                              add eax, 1	       194	history.c	FUNCTION_10
0x4000228	    0x890500000000	            mov dword [0x0400022e], eax 	       194	history.c	FUNCTION_10
0x400022e	            0x4898	                                    cdqe	       194	history.c	FUNCTION_10
0x4000230	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       194	history.c	FUNCTION_10
0x4000234	              0xc3	                                     ret	       194	history.c	FUNCTION_10
0x4000235	           0xf1f00	                         nop dword [rax]	       194	history.c	FUNCTION_10
0x4000238	            0x31c0	                            xor eax, eax	       194	history.c	FUNCTION_10
0x400023a	              0xc3	                                     ret	       195	history.c	FUNCTION_10
history_is_stifled	FOR,0:CALL,0:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	2
0x4000a80	    0x8b0500000000	            mov eax, dword [0x04000a86] 	       504	history.c	FUNCTION_19
0x4000a86	              0xc3	                                     ret	       504	history.c	FUNCTION_19
current_history	FOR,0:CALL,0:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	10
0x40001b0	    0x486305000000	         movsxd rax, dword [0x040001b7] 	       174	history.c	FUNCTION_8
0x40001b7	    0x3b0500000000	            cmp eax, dword [0x040001bd] 	       176	history.c	FUNCTION_8
0x40001bd	            0x7411	                            je 0x40001d0	       176	history.c	FUNCTION_8
0x40001bf	    0x488b15000000	            mov rdx, qword [0x040001c6] 	       174	history.c	FUNCTION_8
0x40001c6	          0x4885d2	                           test rdx, rdx	       174	history.c	FUNCTION_8
0x40001c9	            0x7405	                            je 0x40001d0	       174	history.c	FUNCTION_8
0x40001cb	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       176	history.c	FUNCTION_8
0x40001cf	              0xc3	                                     ret	       176	history.c	FUNCTION_8
0x40001d0	            0x31c0	                            xor eax, eax	       176	history.c	FUNCTION_8
0x40001d2	              0xc3	                                     ret	       177	history.c	FUNCTION_8
remove_history	FOR,1:CALL,0:IF,1:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	36
0x4000810	            0x85ff	                           test edi, edi	       445	history.c	FUNCTION_16	IF_1
0x4000812	            0x786c	                            js 0x4000880	       445	history.c	FUNCTION_16	IF_1
0x4000814	    0x8b3500000000	            mov esi, dword [0x0400081a] 	       445	history.c	FUNCTION_16	IF_1
0x400081a	            0x85f6	                           test esi, esi	       445	history.c	FUNCTION_16	IF_1
0x400081c	            0x7462	                            je 0x4000880	       445	history.c	FUNCTION_16	IF_1
0x400081e	            0x39f7	                            cmp edi, esi	       445	history.c	FUNCTION_16	IF_1
0x4000820	            0x7d5e	                           jge 0x4000880	       445	history.c	FUNCTION_16	IF_1
0x4000822	    0x488b05000000	            mov rax, qword [0x04000829] 	       445	history.c	FUNCTION_16	IF_1
0x4000829	          0x4885c0	                           test rax, rax	       445	history.c	FUNCTION_16	IF_1
0x400082c	            0x7452	                            je 0x4000880	       445	history.c	FUNCTION_16	IF_1
0x400082e	              0x55	                                push rbp	       441	history.c	FUNCTION_16
0x400082f	          0x8d6eff	                      lea ebp, [rsi - 1]	       441	history.c	FUNCTION_16
0x4000832	          0x4c63c7	                          movsxd r8, edi	       441	history.c	FUNCTION_16
0x4000835	          0x4c89c1	                             mov rcx, r8	       441	history.c	FUNCTION_16
0x4000838	        0x49c1e003	                               shl r8, 3	       448	history.c	FUNCTION_16
0x400083c	              0x53	                                push rbx	       441	history.c	FUNCTION_16
0x400083d	            0x89ea	                            mov edx, ebp	       441	history.c	FUNCTION_16
0x400083f	        0x4a8d3c00	                     lea rdi, [rax + r8]	       448	history.c	FUNCTION_16
0x4000843	            0x29ca	                            sub edx, ecx	       448	history.c	FUNCTION_16
0x4000845	        0x4883ec08	                              sub rsp, 8	       441	history.c	FUNCTION_16
0x4000849	            0x39f1	                            cmp ecx, esi	       441	history.c	FUNCTION_16
0x400084b	    0x488d14d50800	                    lea rdx, [rdx*8 + 8]	       441	history.c	FUNCTION_16
0x4000853	          0x488b1f	                    mov rbx, qword [rdi]	       448	history.c	FUNCTION_16
0x4000856	      0xb908000000	                              mov ecx, 8	       448	history.c	FUNCTION_16
0x400085b	      0x4a8d740008	                 lea rsi, [rax + r8 + 8]	       448	history.c	FUNCTION_16
0x4000860	        0x480f4dd1	                         cmovge rdx, rcx	       448	history.c	FUNCTION_16
0x4000864	      0xe800000000	                          call 0x4000869	       448	history.c	FUNCTION_16
0x4000869	    0x892d00000000	            mov dword [0x0400086f], ebp 	       453	history.c	FUNCTION_16
0x400086f	        0x4883c408	                              add rsp, 8	       456	history.c	FUNCTION_16
0x4000873	          0x4889d8	                            mov rax, rbx	       455	history.c	FUNCTION_16
0x4000876	              0x5b	                                 pop rbx	       456	history.c	FUNCTION_16
0x4000877	              0x5d	                                 pop rbp	       456	history.c	FUNCTION_16
0x4000878	              0xc3	                                     ret	       456	history.c	FUNCTION_16
0x4000879	     0xf1f80000000	                         nop dword [rax]	       456	history.c	FUNCTION_16
0x4000880	            0x31c0	                            xor eax, eax	       446	history.c	FUNCTION_16	IF_1
0x4000882	              0xc3	                                     ret	       446	history.c	FUNCTION_16	IF_1
using_history	FOR,0:CALL,0:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	3
0x40000d0	    0x8b0500000000	            mov eax, dword [0x040000d6] 	       123	history.c	FUNCTION_3
0x40000d6	    0x890500000000	            mov dword [0x040000dc], eax 	       123	history.c	FUNCTION_3
0x40000dc	              0xc3	                                     ret	       123	history.c	FUNCTION_3
history_total_bytes	FOR,1:CALL,1:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	34
0x40000e0	            0x4155	                                push r13	       131	history.c	FUNCTION_4
0x40000e2	            0x4154	                                push r12	       131	history.c	FUNCTION_4
0x40000e4	              0x55	                                push rbp	       131	history.c	FUNCTION_4
0x40000e5	              0x53	                                push rbx	       131	history.c	FUNCTION_4
0x40000e6	        0x4883ec08	                              sub rsp, 8	       131	history.c	FUNCTION_4
0x40000ea	    0x488b2d000000	            mov rbp, qword [0x040000f1] 	       134	history.c	FUNCTION_4	FOR_1
0x40000f1	          0x4885ed	                           test rbp, rbp	       134	history.c	FUNCTION_4	FOR_1
0x40000f4	            0x744f	                            je 0x4000145	       134	history.c	FUNCTION_4	FOR_1
0x40000f6	        0x488b5d00	                    mov rbx, qword [rbp]	       134	history.c	FUNCTION_4	FOR_1
0x40000fa	          0x4885db	                           test rbx, rbx	       134	history.c	FUNCTION_4	FOR_1
0x40000fd	            0x7446	                            je 0x4000145	       134	history.c	FUNCTION_4	FOR_1
0x40000ff	        0x4883c508	                              add rbp, 8	       134	history.c	FUNCTION_4	FOR_1
0x4000103	          0x4531e4	                          xor r12d, r12d	       134	history.c	FUNCTION_4	FOR_1
0x4000106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       134	history.c	FUNCTION_4	FOR_1
0x4000110	          0x488b3b	                    mov rdi, qword [rbx]	       135	history.c	FUNCTION_4	CALL_1
0x4000113	        0x4883c508	                              add rbp, 8	       135	history.c	FUNCTION_4	CALL_1
0x4000117	      0xe800000000	                          call 0x400011c	       135	history.c	FUNCTION_4	CALL_1
0x400011c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       135	history.c	FUNCTION_4	CALL_1
0x4000120	          0x4989c5	                            mov r13, rax	       135	history.c	FUNCTION_4	CALL_1
0x4000123	      0xe800000000	                          call 0x4000128	       135	history.c	FUNCTION_4	CALL_1
0x4000128	        0x488b5df8	                mov rbx, qword [rbp - 8]	       134	history.c	FUNCTION_4	FOR_1
0x400012c	          0x4401e8	                           add eax, r13d	       135	history.c	FUNCTION_4	CALL_1
0x400012f	          0x4101c4	                           add r12d, eax	       135	history.c	FUNCTION_4	CALL_1
0x4000132	          0x4885db	                           test rbx, rbx	       134	history.c	FUNCTION_4	FOR_1
0x4000135	            0x75d9	                           jne 0x4000110	       134	history.c	FUNCTION_4	FOR_1
0x4000137	        0x4883c408	                              add rsp, 8	       138	history.c	FUNCTION_4
0x400013b	          0x4489e0	                           mov eax, r12d	       138	history.c	FUNCTION_4
0x400013e	              0x5b	                                 pop rbx	       138	history.c	FUNCTION_4
0x400013f	              0x5d	                                 pop rbp	       138	history.c	FUNCTION_4
0x4000140	            0x415c	                                 pop r12	       138	history.c	FUNCTION_4
0x4000142	            0x415d	                                 pop r13	       138	history.c	FUNCTION_4
0x4000144	              0xc3	                                     ret	       138	history.c	FUNCTION_4
0x4000145	          0x4531e4	                          xor r12d, r12d	       134	history.c	FUNCTION_4	FOR_1
0x4000148	            0xebed	                           jmp 0x4000137	       134	history.c	FUNCTION_4	FOR_1
history_set_pos	FOR,0:CALL,0:IF,1:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	14
0x4000160	    0x393d00000000	            cmp dword [0x04000166], edi 	       154	history.c	FUNCTION_6	IF_1
0x4000166	            0x7c28	                            jl 0x4000190	       154	history.c	FUNCTION_6	IF_1
0x4000168	            0x89f8	                            mov eax, edi	       154	history.c	FUNCTION_6	IF_1
0x400016a	          0xc1e81f	                           shr eax, 0x1f	       154	history.c	FUNCTION_6	IF_1
0x400016d	            0x84c0	                             test al, al	       154	history.c	FUNCTION_6	IF_1
0x400016f	            0x751f	                           jne 0x4000190	       154	history.c	FUNCTION_6	IF_1
0x4000171	    0x48833d000000	               cmp qword [0x04000179], 0	       154	history.c	FUNCTION_6	IF_1
0x4000179	            0x7415	                            je 0x4000190	       154	history.c	FUNCTION_6	IF_1
0x400017b	    0x893d00000000	            mov dword [0x04000181], edi 	       156	history.c	FUNCTION_6
0x4000181	      0xb801000000	                              mov eax, 1	       157	history.c	FUNCTION_6
0x4000186	              0xc3	                                     ret	       157	history.c	FUNCTION_6
0x4000187	    0x660f1f840000	                    nop word [rax + rax]	       157	history.c	FUNCTION_6
0x4000190	            0x31c0	                            xor eax, eax	       155	history.c	FUNCTION_6	IF_1
0x4000192	              0xc3	                                     ret	       158	history.c	FUNCTION_6
history_get_history_state	FOR,0:CALL,1:IF,1:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	18
0x4000040	        0x4883ec08	                              sub rsp, 8	        90	history.c	FUNCTION_1
0x4000044	      0xbf18000000	                           mov edi, 0x18	        93	history.c	FUNCTION_1	CALL_1
0x4000049	      0xe800000000	                          call 0x400004e	        93	history.c	FUNCTION_1	CALL_1
0x400004e	    0x488b15000000	            mov rdx, qword [0x04000055] 	        94	history.c	FUNCTION_1
0x4000055	    0xc74014000000	               mov dword [rax + 0x14], 0	        98	history.c	FUNCTION_1
0x400005c	          0x488910	                    mov qword [rax], rdx	        94	history.c	FUNCTION_1
0x400005f	    0x8b1500000000	            mov edx, dword [0x04000065] 	        95	history.c	FUNCTION_1
0x4000065	          0x895008	                mov dword [rax + 8], edx	        95	history.c	FUNCTION_1
0x4000068	    0x8b1500000000	            mov edx, dword [0x0400006e] 	        96	history.c	FUNCTION_1
0x400006e	          0x89500c	              mov dword [rax + 0xc], edx	        96	history.c	FUNCTION_1
0x4000071	    0x8b1500000000	            mov edx, dword [0x04000077] 	        97	history.c	FUNCTION_1
0x4000077	          0x895010	             mov dword [rax + 0x10], edx	        97	history.c	FUNCTION_1
0x400007a	    0x8b1500000000	            mov edx, dword [0x04000080] 	        99	history.c	FUNCTION_1	IF_1
0x4000080	            0x85d2	                           test edx, edx	        99	history.c	FUNCTION_1	IF_1
0x4000082	            0x7407	                            je 0x400008b	        99	history.c	FUNCTION_1	IF_1
0x4000084	    0xc74014010000	               mov dword [rax + 0x14], 1	       100	history.c	FUNCTION_1	IF_1
0x400008b	        0x4883c408	                              add rsp, 8	       103	history.c	FUNCTION_1
0x400008f	              0xc3	                                     ret	       103	history.c	FUNCTION_1
previous_history	FOR,0:CALL,0:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	12
0x40001e0	    0x8b0500000000	            mov eax, dword [0x040001e6] 	       185	history.c	FUNCTION_9
0x40001e6	            0x85c0	                           test eax, eax	       185	history.c	FUNCTION_9
0x40001e8	            0x741e	                            je 0x4000208	       185	history.c	FUNCTION_9
0x40001ea	    0x488b15000000	            mov rdx, qword [0x040001f1] 	       185	history.c	FUNCTION_9
0x40001f1	          0x83e801	                              sub eax, 1	       185	history.c	FUNCTION_9
0x40001f4	    0x890500000000	            mov dword [0x040001fa], eax 	       185	history.c	FUNCTION_9
0x40001fa	            0x4898	                                    cdqe	       185	history.c	FUNCTION_9
0x40001fc	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       185	history.c	FUNCTION_9
0x4000200	              0xc3	                                     ret	       185	history.c	FUNCTION_9
0x4000201	     0xf1f80000000	                         nop dword [rax]	       185	history.c	FUNCTION_9
0x4000208	            0x31c0	                            xor eax, eax	       185	history.c	FUNCTION_9
0x400020a	              0xc3	                                     ret	       186	history.c	FUNCTION_9
history_get	FOR,0:CALL,0:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	14
0x4000240	    0x2b3d00000000	             sub edi, dword [0x04000246]	       205	history.c	FUNCTION_11
0x4000246	    0x3b3d00000000	            cmp edi, dword [0x0400024c] 	       206	history.c	FUNCTION_11
0x400024c	            0x7d22	                           jge 0x4000270	       206	history.c	FUNCTION_11
0x400024e	            0x85ff	                           test edi, edi	       206	history.c	FUNCTION_11
0x4000250	            0x781e	                            js 0x4000270	       206	history.c	FUNCTION_11
0x4000252	    0x488b05000000	            mov rax, qword [0x04000259] 	       206	history.c	FUNCTION_11
0x4000259	          0x4885c0	                           test rax, rax	       206	history.c	FUNCTION_11
0x400025c	            0x7412	                            je 0x4000270	       206	history.c	FUNCTION_11
0x400025e	          0x4863ff	                         movsxd rdi, edi	       208	history.c	FUNCTION_11
0x4000261	        0x488b04f8	            mov rax, qword [rax + rdi*8]	       208	history.c	FUNCTION_11
0x4000265	              0xc3	                                     ret	       208	history.c	FUNCTION_11
0x4000266	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       208	history.c	FUNCTION_11
0x4000270	            0x31c0	                            xor eax, eax	       208	history.c	FUNCTION_11
0x4000272	              0xc3	                                     ret	       209	history.c	FUNCTION_11
where_history	FOR,0:CALL,0:IF,0:WHILE,0:SWITCH,0:functions,0:DO,0:ELSE,0	2
0x4000150	    0x8b0500000000	            mov eax, dword [0x04000156] 	       146	history.c	FUNCTION_5
0x4000156	              0xc3	                                     ret	       146	history.c	FUNCTION_5
