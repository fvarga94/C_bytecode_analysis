sort_pointers	WHILE,0:SWITCH,0:DO,0:IF,2:CALL,2:FOR,5:functions,0:ELSE,1	74
0x4000040	            0x4156	                                push r14	        48	sort.c	FUNCTION_1
0x4000042	            0x4155	                                push r13	        48	sort.c	FUNCTION_1
0x4000044	    0x41ba08000000	                             mov r10d, 8	        79	sort.c	FUNCTION_1
0x400004a	            0x4154	                                push r12	        48	sort.c	FUNCTION_1
0x400004c	              0x55	                                push rbp	        48	sort.c	FUNCTION_1
0x400004d	    0x488d2cfd0000	                        lea rbp, [rdi*8]	        48	sort.c	FUNCTION_1
0x4000055	              0x53	                                push rbx	        48	sort.c	FUNCTION_1
0x4000056	    0x41bd07000000	                             mov r13d, 7	        79	sort.c	FUNCTION_1
0x400005c	    0x41bc08000000	                             mov r12d, 8	        79	sort.c	FUNCTION_1
0x4000062	        0x488d5df8	                      lea rbx, [rbp - 8]	        79	sort.c	FUNCTION_1
0x4000066	    0x4881ec200400	                          sub rsp, 0x420	        48	sort.c	FUNCTION_1
0x400006d	      0x4c8d5c2410	                   lea r11, [rsp + 0x10]	        48	sort.c	FUNCTION_1
0x4000072	    0x64488b042528	                mov rax, qword fs:[0x28]	        48	sort.c	FUNCTION_1
0x400007b	    0x488984241804	            mov qword [rsp + 0x418], rax	        48	sort.c	FUNCTION_1
0x4000083	            0x31c0	                            xor eax, eax	        48	sort.c	FUNCTION_1
0x4000085	    0x4d8d83000400	                   lea r8, [r11 + 0x400]	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x400008c	         0xf1f4000	                         nop dword [rax]	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x4000090	          0x4d89e1	                             mov r9, r12	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x4000093	      0xb980000000	                           mov ecx, 0x80	        90	string3.h	FUNCTION_7	CALL_6
0x4000098	          0x4c89df	                            mov rdi, r11	        90	string3.h	FUNCTION_7	CALL_6
0x400009b	          0x4d29d1	                             sub r9, r10	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x400009e	          0x4584ed	                         test r13b, r13b	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000a1	        0x4d0f44ca	                           cmove r9, r10	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000a5	        0x4d8d3429	                     lea r14, [r9 + rbp]	       106	sort.c	FUNCTION_1	FOR_2
0x40000a9	      0x4c894c2408	                 mov qword [rsp + 8], r9	       106	sort.c	FUNCTION_1	FOR_2
0x40000ae	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_7	CALL_6
0x40000b1	        0x4a8d0c0e	                     lea rcx, [rsi + r9]	       105	sort.c	FUNCTION_1	FOR_2
0x40000b5	          0x4901f6	                            add r14, rsi	       106	sort.c	FUNCTION_1	FOR_2
0x40000b8	          0x4c39f1	                            cmp rcx, r14	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000bb	            0x7314	                           jae 0x40000d1	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000bd	           0xf1f00	                         nop dword [rax]	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000c0	           0xfb639	                   movzx edi, byte [rcx]	       114	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000c3	        0x4883c108	                              add rcx, 8	       113	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000c7	      0x8344bc1001	       add dword [rsp + rdi*4 + 0x10], 1	       114	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000cc	          0x4939ce	                            cmp r14, rcx	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000cf	            0x77ef	                            ja 0x40000c0	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000d1	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000d5	        0x498d4b04	                      lea rcx, [r11 + 4]	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000d9	     0xf1f80000000	                         nop dword [rax]	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000e0	             0x339	                    add edi, dword [rcx]	       119	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000e2	        0x4883c104	                              add rcx, 4	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000e6	          0x8979fc	                mov dword [rcx - 4], edi	       119	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000e9	          0x4c39c1	                             cmp rcx, r8	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000ec	            0x75f2	                           jne 0x40000e0	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000ee	          0x4889f7	                            mov rdi, rsi	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x40000f1	          0x4801df	                            add rdi, rbx	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x40000f4	            0x722d	                            jb 0x4000123	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x40000f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000100	      0x460fb6340f	             movzx r14d, byte [rdi + r9]	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000105	        0x4883ef08	                              sub rdi, 8	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000109	      0x428b4cb410	    mov ecx, dword [rsp + r14*4 + 0x10] 	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400010e	          0x83e901	                              sub ecx, 1	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000111	      0x42894cb410	     mov dword [rsp + r14*4 + 0x10], ecx	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000116	        0x4c8b7708	                mov r14, qword [rdi + 8]	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400011a	          0x4839f7	                            cmp rdi, rsi	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400011d	        0x4c8934ca	            mov qword [rdx + rcx*8], r14	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000121	            0x73dd	                           jae 0x4000100	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000123	        0x4983ea01	                              sub r10, 1	        83	sort.c	FUNCTION_1	FOR_2
0x4000127	          0x4889d1	                            mov rcx, rdx	        83	sort.c	FUNCTION_1	FOR_2
0x400012a	          0x4889f2	                            mov rdx, rsi	        83	sort.c	FUNCTION_1	FOR_2
0x400012d	            0x7408	                            je 0x4000137	        83	sort.c	FUNCTION_1	FOR_2
0x400012f	          0x4889ce	                            mov rsi, rcx	        83	sort.c	FUNCTION_1	FOR_2
0x4000132	      0xe959ffffff	                           jmp 0x4000090	        83	sort.c	FUNCTION_1	FOR_2
0x4000137	    0x488b84241804	           mov rax, qword [rsp + 0x418] 	       131	sort.c	FUNCTION_1
0x400013f	    0x644833042528	                xor rax, qword fs:[0x28]	       131	sort.c	FUNCTION_1
0x4000148	            0x7510	                           jne 0x400015a	       131	sort.c	FUNCTION_1
0x400014a	    0x4881c4200400	                          add rsp, 0x420	       131	sort.c	FUNCTION_1
0x4000151	              0x5b	                                 pop rbx	       131	sort.c	FUNCTION_1
0x4000152	              0x5d	                                 pop rbp	       131	sort.c	FUNCTION_1
0x4000153	            0x415c	                                 pop r12	       131	sort.c	FUNCTION_1
0x4000155	            0x415d	                                 pop r13	       131	sort.c	FUNCTION_1
0x4000157	            0x415e	                                 pop r14	       131	sort.c	FUNCTION_1
0x4000159	              0xc3	                                     ret	       131	sort.c	FUNCTION_1
0x400015a	      0xe800000000	         call section_end..text.unlikely	       131	sort.c	FUNCTION_1
