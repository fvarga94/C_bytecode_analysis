ihex_set_arch_mach	IF,2:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:DO,0:FOR,0	12
0x4000090	              0x53	                                push rbx	       898	ihex.c	FUNCTION_12
0x4000091	            0x89f3	                            mov ebx, esi	       898	ihex.c	FUNCTION_12
0x4000093	      0xe800000000	                          call 0x4000098	       899	ihex.c	FUNCTION_12	IF_1	CALL_1
0x4000098	            0x85db	                           test ebx, ebx	       899	ihex.c	FUNCTION_12	IF_1	CALL_1
0x400009a	           0xf95c2	                                setne dl	       899	ihex.c	FUNCTION_12	IF_1	CALL_1
0x400009d	            0x85c0	                           test eax, eax	       899	ihex.c	FUNCTION_12	IF_1	CALL_1
0x400009f	           0xf94c0	                                 sete al	       899	ihex.c	FUNCTION_12	IF_1	CALL_1
0x40000a2	            0x21d0	                            and eax, edx	       899	ihex.c	FUNCTION_12	IF_1	CALL_1
0x40000a4	          0x83f001	                              xor eax, 1	       899	ihex.c	FUNCTION_12	IF_1	CALL_1
0x40000a7	           0xfb6c0	                           movzx eax, al	       899	ihex.c	FUNCTION_12	IF_1	CALL_1
0x40000aa	              0x5b	                                 pop rbx	       905	ihex.c	FUNCTION_12
0x40000ab	              0xc3	                                     ret	       905	ihex.c	FUNCTION_12
ihex_object_p	IF,8:ELSE,0:WHILE,0:CALL,11:functions,0:SWITCH,0:DO,0:FOR,1	591
0x40005c0	            0x4157	                                push r15	       492	ihex.c	FUNCTION_6
0x40005c2	            0x4156	                                push r14	       492	ihex.c	FUNCTION_6
0x40005c4	          0x4989fe	                            mov r14, rdi	       492	ihex.c	FUNCTION_6
0x40005c7	            0x4155	                                push r13	       492	ihex.c	FUNCTION_6
0x40005c9	            0x4154	                                push r12	       492	ihex.c	FUNCTION_6
0x40005cb	              0x55	                                push rbp	       492	ihex.c	FUNCTION_6
0x40005cc	              0x53	                                push rbx	       492	ihex.c	FUNCTION_6
0x40005cd	    0x4881ec980000	                           sub rsp, 0x98	       492	ihex.c	FUNCTION_6
0x40005d4	    0x64488b042528	                mov rax, qword fs:[0x28]	       492	ihex.c	FUNCTION_6
0x40005dd	    0x488984248800	             mov qword [rsp + 0x88], rax	       492	ihex.c	FUNCTION_6
0x40005e5	            0x31c0	                            xor eax, eax	       492	ihex.c	FUNCTION_6
0x40005e7	    0x8b0500000000	            mov eax, dword [0x040005ed] 	       165	ihex.c	FUNCTION_1	IF_1
0x40005ed	            0x85c0	                           test eax, eax	       165	ihex.c	FUNCTION_1	IF_1
0x40005ef	     0xf847b020000	                            je 0x4000870	       165	ihex.c	FUNCTION_1	IF_1
0x40005f5	            0x31d2	                            xor edx, edx	       500	ihex.c	FUNCTION_6	IF_1	CALL_2
0x40005f7	            0x31f6	                            xor esi, esi	       500	ihex.c	FUNCTION_6	IF_1	CALL_2
0x40005f9	          0x4c89f7	                            mov rdi, r14	       500	ihex.c	FUNCTION_6	IF_1	CALL_2
0x40005fc	      0xe800000000	                          call 0x4000601	       500	ihex.c	FUNCTION_6	IF_1	CALL_2
0x4000601	            0x85c0	                           test eax, eax	       500	ihex.c	FUNCTION_6	IF_1	CALL_2
0x4000603	            0x7526	                           jne 0x400062b	       500	ihex.c	FUNCTION_6	IF_1	CALL_2
0x4000605	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       502	ihex.c	FUNCTION_6	IF_2	CALL_3
0x400060a	          0x4c89f2	                            mov rdx, r14	       502	ihex.c	FUNCTION_6	IF_2	CALL_3
0x400060d	      0xbe09000000	                              mov esi, 9	       502	ihex.c	FUNCTION_6	IF_2	CALL_3
0x4000612	      0xe800000000	                          call 0x4000617	       502	ihex.c	FUNCTION_6	IF_2	CALL_3
0x4000617	        0x4883f809	                              cmp rax, 9	       502	ihex.c	FUNCTION_6	IF_2	CALL_3
0x400061b	            0x7443	                            je 0x4000660	       502	ihex.c	FUNCTION_6	IF_2	CALL_3
0x400061d	      0xe800000000	                          call 0x4000622	       504	ihex.c	FUNCTION_6	IF_2	IF_3	CALL_4
0x4000622	          0x83f812	                           cmp eax, 0x12	       504	ihex.c	FUNCTION_6	IF_2	IF_3	CALL_4
0x4000625	     0xf84a5010000	                            je 0x40007d0	       504	ihex.c	FUNCTION_6	IF_2	IF_3	CALL_4
0x400062b	            0x31c0	                            xor eax, eax	       538	ihex.c	FUNCTION_6	IF_7
0x400062d	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	       542	ihex.c	FUNCTION_6
0x4000635	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       542	ihex.c	FUNCTION_6
0x400063e	     0xf857b090000	                           jne 0x4000fbf	       542	ihex.c	FUNCTION_6
0x4000644	    0x4881c4980000	                           add rsp, 0x98	       542	ihex.c	FUNCTION_6
0x400064b	              0x5b	                                 pop rbx	       542	ihex.c	FUNCTION_6
0x400064c	              0x5d	                                 pop rbp	       542	ihex.c	FUNCTION_6
0x400064d	            0x415c	                                 pop r12	       542	ihex.c	FUNCTION_6
0x400064f	            0x415d	                                 pop r13	       542	ihex.c	FUNCTION_6
0x4000651	            0x415e	                                 pop r14	       542	ihex.c	FUNCTION_6
0x4000653	            0x415f	                                 pop r15	       542	ihex.c	FUNCTION_6
0x4000655	              0xc3	                                     ret	       542	ihex.c	FUNCTION_6
0x4000656	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       542	ihex.c	FUNCTION_6
0x4000660	      0x807c24603a	            cmp byte [rsp + 0x60], 0x3a 	       509	ihex.c	FUNCTION_6	IF_4
0x4000665	     0xf8565010000	                           jne 0x40007d0	       509	ihex.c	FUNCTION_6	IF_4
0x400066b	       0xfb6442461	           movzx eax, byte [rsp + 0x61] 	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x4000670	    0x80b800000000	                    cmp byte [rax], 0x63	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x4000677	     0xf8453010000	                            je 0x40007d0	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x400067d	       0xfb6442462	           movzx eax, byte [rsp + 0x62] 	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x4000682	    0x80b800000000	                    cmp byte [rax], 0x63	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x4000689	     0xf8441010000	                            je 0x40007d0	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x400068f	       0xfb6442463	           movzx eax, byte [rsp + 0x63] 	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x4000694	    0x80b800000000	                    cmp byte [rax], 0x63	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x400069b	     0xf842f010000	                            je 0x40007d0	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006a1	       0xfb6442464	           movzx eax, byte [rsp + 0x64] 	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006a6	    0x80b800000000	                    cmp byte [rax], 0x63	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006ad	     0xf841d010000	                            je 0x40007d0	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006b3	       0xfb6442465	           movzx eax, byte [rsp + 0x65] 	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006b8	    0x80b800000000	                    cmp byte [rax], 0x63	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006bf	     0xf840b010000	                            je 0x40007d0	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006c5	       0xfb6442466	           movzx eax, byte [rsp + 0x66] 	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006ca	    0x80b800000000	                    cmp byte [rax], 0x63	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006d1	     0xf84f9000000	                            je 0x40007d0	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006d7	       0xfb6442467	           movzx eax, byte [rsp + 0x67] 	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006dc	     0xfb680000000	                   movzx eax, byte [rax]	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006e3	            0x3c63	                            cmp al, 0x63	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006e5	     0xf84e5000000	                            je 0x40007d0	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006eb	       0xfb6542468	           movzx edx, byte [rsp + 0x68] 	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006f0	     0xfb692000000	                   movzx edx, byte [rdx]	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006f7	          0x80fa63	                            cmp dl, 0x63	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x40006fa	     0xf84d0000000	                            je 0x40007d0	       517	ihex.c	FUNCTION_6	FOR_1	IF_5
0x4000700	          0xc1e004	                              shl eax, 4	       525	ihex.c	FUNCTION_6	IF_6
0x4000703	             0x1d0	                            add eax, edx	       525	ihex.c	FUNCTION_6	IF_6
0x4000705	          0x83f805	                              cmp eax, 5	       525	ihex.c	FUNCTION_6	IF_6
0x4000708	     0xf87c2000000	                            ja 0x40007d0	       525	ihex.c	FUNCTION_6	IF_6
0x400070e	      0xbe10000000	                           mov esi, 0x10	       179	ihex.c	FUNCTION_2	CALL_1
0x4000713	          0x4c89f7	                            mov rdi, r14	       179	ihex.c	FUNCTION_2	CALL_1
0x4000716	    0x4d8baef80000	            mov r13, qword [r14 + 0xf8] 	       532	ihex.c	FUNCTION_6
0x400071d	      0xe800000000	                          call 0x4000722	       179	ihex.c	FUNCTION_2	CALL_1
0x4000722	          0x4885c0	                           test rax, rax	       180	ihex.c	FUNCTION_2	IF_1
0x4000725	     0xf8419010000	                            je 0x4000844	       180	ihex.c	FUNCTION_2	IF_1
0x400072b	    0x498986f80000	             mov qword [r14 + 0xf8], rax	       183	ihex.c	FUNCTION_2
0x4000732	            0x31d2	                            xor edx, edx	       251	ihex.c	FUNCTION_5	IF_1	CALL_1
0x4000734	            0x31f6	                            xor esi, esi	       251	ihex.c	FUNCTION_5	IF_1	CALL_1
0x4000736	    0x48c700000000	                      mov qword [rax], 0	       184	ihex.c	FUNCTION_2
0x400073d	    0x48c740080000	                  mov qword [rax + 8], 0	       185	ihex.c	FUNCTION_2
0x4000745	          0x4c89f7	                            mov rdi, r14	       251	ihex.c	FUNCTION_5	IF_1	CALL_1
0x4000748	      0xe800000000	                          call 0x400074d	       251	ihex.c	FUNCTION_5	IF_1	CALL_1
0x400074d	            0x85c0	                           test eax, eax	       251	ihex.c	FUNCTION_5	IF_1	CALL_1
0x400074f	     0xf85ef000000	                           jne 0x4000844	       251	ihex.c	FUNCTION_5	IF_1	CALL_1
0x4000755	    0x49c786a80000	               mov qword [r14 + 0xa8], 0	       254	ihex.c	FUNCTION_5
0x4000760	    0x48c744240800	                  mov qword [rsp + 8], 0	       261	ihex.c	FUNCTION_5
0x4000769	          0x4531e4	                          xor r12d, r12d	       247	ihex.c	FUNCTION_5
0x400076c	    0xc74424100100	               mov dword [rsp + 0x10], 1	       259	ihex.c	FUNCTION_5
0x4000774	    0x48c744242000	               mov qword [rsp + 0x20], 0	       258	ihex.c	FUNCTION_5
0x400077d	    0x48c744243800	               mov qword [rsp + 0x38], 0	       257	ihex.c	FUNCTION_5
0x4000786	    0x48c744243000	               mov qword [rsp + 0x30], 0	       256	ihex.c	FUNCTION_5
0x400078f	      0x488d7c244f	                   lea rdi, [rsp + 0x4f]	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x4000794	          0x4c89f2	                            mov rdx, r14	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x4000797	      0xbe01000000	                              mov esi, 1	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x400079c	      0xe800000000	                          call 0x40007a1	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40007a1	        0x4883f801	                              cmp rax, 1	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40007a5	     0xf84dd000000	                            je 0x4000888	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40007ab	      0xe800000000	                          call 0x40007b0	       199	ihex.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40007b0	          0x83f812	                           cmp eax, 0x12	       474	ihex.c	FUNCTION_5	IF_23
0x40007b3	     0xf857e000000	                           jne 0x4000837	       474	ihex.c	FUNCTION_5	IF_23
0x40007b9	          0x4d85e4	                           test r12, r12	       477	ihex.c	FUNCTION_5	IF_24
0x40007bc	     0xf85e2040000	                           jne 0x4000ca4	       477	ihex.c	FUNCTION_5	IF_24
0x40007c2	        0x498b4608	                mov rax, qword [r14 + 8]	       541	ihex.c	FUNCTION_6
0x40007c6	      0xe962feffff	                           jmp 0x400062d	       541	ihex.c	FUNCTION_6
0x40007cb	       0xf1f440000	                   nop dword [rax + rax]	       541	ihex.c	FUNCTION_6
0x40007d0	      0xbf03000000	                              mov edi, 3	       505	ihex.c	FUNCTION_6	IF_2	CALL_5
0x40007d5	      0xe800000000	                          call 0x40007da	       505	ihex.c	FUNCTION_6	IF_2	CALL_5
0x40007da	            0x31c0	                            xor eax, eax	       506	ihex.c	FUNCTION_6	IF_2
0x40007dc	      0xe94cfeffff	                           jmp 0x400062d	       506	ihex.c	FUNCTION_6	IF_2
0x40007e1	     0xf1f80000000	                         nop dword [rax]	       506	ihex.c	FUNCTION_6	IF_2
0x40007e8	    0xf68412000000	            test byte [rdx + rdx], 0x10 	       221	ihex.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40007f0	     0xf84da060000	                            je 0x4000ed0	       221	ihex.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40007f6	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	       221	ihex.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x40007fb	      0x4488442470	              mov byte [rsp + 0x70], r8b	       225	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000800	      0xc644247100	                mov byte [rsp + 0x71], 0	       226	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000805	      0xba05000000	                              mov edx, 5	       230	ihex.c	FUNCTION_4	ELSE_1	CALL_4
0x400080a	      0xbe00000000	                              mov esi, 0	       230	ihex.c	FUNCTION_4	ELSE_1	CALL_4
0x400080f	      0xbf00000000	                              mov edi, 0	       230	ihex.c	FUNCTION_4	ELSE_1	CALL_4
0x4000814	      0xe800000000	                          call 0x4000819	       230	ihex.c	FUNCTION_4	ELSE_1	CALL_4
0x4000819	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       228	ihex.c	FUNCTION_4	ELSE_1	CALL_3
0x400081d	          0x4889c7	                            mov rdi, rax	       228	ihex.c	FUNCTION_4	ELSE_1	CALL_3
0x4000820	          0x4889d9	                            mov rcx, rbx	       228	ihex.c	FUNCTION_4	ELSE_1	CALL_3
0x4000823	          0x4c89f6	                            mov rsi, r14	       228	ihex.c	FUNCTION_4	ELSE_1	CALL_3
0x4000826	            0x31c0	                            xor eax, eax	       228	ihex.c	FUNCTION_4	ELSE_1	CALL_3
0x4000828	      0xe800000000	                          call 0x400082d	       228	ihex.c	FUNCTION_4	ELSE_1	CALL_3
0x400082d	      0xbf11000000	                           mov edi, 0x11	       232	ihex.c	FUNCTION_4	ELSE_1	CALL_5
0x4000832	      0xe800000000	                          call 0x4000837	       232	ihex.c	FUNCTION_4	ELSE_1	CALL_5
0x4000837	          0x4d85e4	                           test r12, r12	       483	ihex.c	FUNCTION_5	IF_25
0x400083a	            0x7408	                            je 0x4000844	       483	ihex.c	FUNCTION_5	IF_25
0x400083c	          0x4c89e7	                            mov rdi, r12	       484	ihex.c	FUNCTION_5	CALL_35
0x400083f	      0xe800000000	                          call 0x4000844	       484	ihex.c	FUNCTION_5	CALL_35
0x4000844	    0x498bb6f80000	            mov rsi, qword [r14 + 0xf8] 	       535	ihex.c	FUNCTION_6	IF_7	IF_8
0x400084b	          0x4885f6	                           test rsi, rsi	       535	ihex.c	FUNCTION_6	IF_7	IF_8
0x400084e	            0x740d	                            je 0x400085d	       535	ihex.c	FUNCTION_6	IF_7	IF_8
0x4000850	          0x4939f5	                            cmp r13, rsi	       535	ihex.c	FUNCTION_6	IF_7	IF_8
0x4000853	            0x7408	                            je 0x400085d	       535	ihex.c	FUNCTION_6	IF_7	IF_8
0x4000855	          0x4c89f7	                            mov rdi, r14	       536	ihex.c	FUNCTION_6	IF_7	CALL_11
0x4000858	      0xe800000000	                          call 0x400085d	       536	ihex.c	FUNCTION_6	IF_7	CALL_11
0x400085d	    0x4d89aef80000	             mov qword [r14 + 0xf8], r13	       537	ihex.c	FUNCTION_6	IF_7
0x4000864	      0xe9c2fdffff	                           jmp 0x400062b	       537	ihex.c	FUNCTION_6	IF_7
0x4000869	     0xf1f80000000	                         nop dword [rax]	       537	ihex.c	FUNCTION_6	IF_7
0x4000870	    0xc70500000000	               mov dword [0x0400087a], 1	       167	ihex.c	FUNCTION_1	IF_1
0x400087a	      0xe800000000	                          call 0x400087f	       168	ihex.c	FUNCTION_1	IF_1	CALL_1
0x400087f	      0xe971fdffff	                           jmp 0x40005f5	       168	ihex.c	FUNCTION_1	IF_1	CALL_1
0x4000884	         0xf1f4000	                         nop dword [rax]	       168	ihex.c	FUNCTION_1	IF_1	CALL_1
0x4000888	    0x440fb644244f	           movzx r8d, byte [rsp + 0x4f] 	       204	ihex.c	FUNCTION_3
0x400088e	        0x4183f80d	                            cmp r8d, 0xd	       265	ihex.c	FUNCTION_5	WHILE_1	IF_2
0x4000892	          0x4489c0	                            mov eax, r8d	       204	ihex.c	FUNCTION_3
0x4000895	     0xf84f4feffff	                            je 0x400078f	       265	ihex.c	FUNCTION_5	WHILE_1	IF_2
0x400089b	        0x4183f80a	                            cmp r8d, 0xa	       267	ihex.c	FUNCTION_5	WHILE_1	ELSE_1	IF_3
0x400089f	     0xf84fb050000	                            je 0x4000ea0	       267	ihex.c	FUNCTION_5	WHILE_1	ELSE_1	IF_3
0x40008a5	        0x4183f83a	                           cmp r8d, 0x3a	       272	ihex.c	FUNCTION_5	WHILE_1	ELSE_2	IF_4
0x40008a9	     0xf8587060000	                           jne 0x4000f36	       272	ihex.c	FUNCTION_5	WHILE_1	ELSE_2	IF_4
0x40008af	          0x4c89f7	                            mov rdi, r14	       289	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	CALL_4
0x40008b2	      0xe800000000	                          call 0x40008b7	       289	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	CALL_4
0x40008b7	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       292	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_5	CALL_5
0x40008bc	          0x4c89f2	                            mov rdx, r14	       292	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_5	CALL_5
0x40008bf	      0xbe08000000	                              mov esi, 8	       292	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_5	CALL_5
0x40008c4	      0x4889442428	             mov qword [rsp + 0x28], rax	       289	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	CALL_4
0x40008c9	      0xe800000000	                          call 0x40008ce	       292	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_5	CALL_5
0x40008ce	        0x4883f808	                              cmp rax, 8	       292	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_5	CALL_5
0x40008d2	     0xf855fffffff	                           jne 0x4000837	       292	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_5	CALL_5
0x40008d8	       0xfb6442450	           movzx eax, byte [rsp + 0x50] 	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40008dd	     0xfb690000000	                   movzx edx, byte [rax]	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40008e4	          0x4989c0	                             mov r8, rax	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40008e7	          0x80fa63	                            cmp dl, 0x63	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40008ea	     0xf84c0050000	                            je 0x4000eb0	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40008f0	       0xfb6442451	           movzx eax, byte [rsp + 0x51] 	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40008f5	    0x440fb6880000	                   movzx r9d, byte [rax]	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40008fd	          0x4989c0	                             mov r8, rax	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000900	        0x4180f963	                           cmp r9b, 0x63	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000904	     0xf84a6050000	                            je 0x4000eb0	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400090a	       0xfb6442452	           movzx eax, byte [rsp + 0x52] 	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400090f	    0x440fb6b80000	                  movzx r15d, byte [rax]	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000917	          0x4989c0	                             mov r8, rax	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400091a	        0x4180ff63	                          cmp r15b, 0x63	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400091e	     0xf848c050000	                            je 0x4000eb0	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000924	       0xfb6442453	           movzx eax, byte [rsp + 0x53] 	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000929	     0xfb6a8000000	                   movzx ebp, byte [rax]	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000930	          0x4989c0	                             mov r8, rax	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000933	        0x4080fd63	                           cmp bpl, 0x63	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000937	     0xf8473050000	                            je 0x4000eb0	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400093d	       0xfb6442454	           movzx eax, byte [rsp + 0x54] 	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000942	     0xfb698000000	                   movzx ebx, byte [rax]	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000949	          0x4989c0	                             mov r8, rax	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400094c	          0x80fb63	                            cmp bl, 0x63	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400094f	        0x885c241c	               mov byte [rsp + 0x1c], bl	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000953	     0xf8457050000	                            je 0x4000eb0	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000959	       0xfb6442455	           movzx eax, byte [rsp + 0x55] 	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400095e	     0xfb698000000	                   movzx ebx, byte [rax]	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000965	          0x4989c0	                             mov r8, rax	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000968	          0x80fb63	                            cmp bl, 0x63	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400096b	        0x885c241d	               mov byte [rsp + 0x1d], bl	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400096f	     0xf843b050000	                            je 0x4000eb0	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000975	       0xfb6442456	           movzx eax, byte [rsp + 0x56] 	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400097a	     0xfb698000000	                   movzx ebx, byte [rax]	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000981	          0x4989c0	                             mov r8, rax	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000984	          0x80fb63	                            cmp bl, 0x63	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000987	        0x885c241e	               mov byte [rsp + 0x1e], bl	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400098b	     0xf841f050000	                            je 0x4000eb0	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000991	       0xfb6442457	           movzx eax, byte [rsp + 0x57] 	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x4000996	     0xfb688000000	                   movzx ecx, byte [rax]	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x400099d	          0x4989c0	                             mov r8, rax	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40009a0	          0x80f963	                            cmp cl, 0x63	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40009a3	        0x884c241f	               mov byte [rsp + 0x1f], cl	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40009a7	     0xf8403050000	                            je 0x4000eb0	       297	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_1	IF_6
0x40009ad	          0xc1e204	                              shl edx, 4	       304	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x40009b0	          0x4101d1	                            add r9d, edx	       304	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x40009b3	      0x438d5c0902	                  lea ebx, [r9 + r9 + 2]	       309	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x40009b8	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	       310	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7
0x40009bd	          0x4989da	                            mov r10, rbx	       309	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x40009c0	     0xf831a010000	                           jae 0x4000ae0	       310	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7
0x40009c6	          0x4c89f2	                            mov rdx, r14	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009c9	          0x4889de	                            mov rsi, rbx	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009cc	          0x4c89e7	                            mov rdi, r12	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009cf	      0x4489542418	            mov dword [rsp + 0x18], r10d	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009d4	      0x44894c2414	             mov dword [rsp + 0x14], r9d	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009d9	      0xe800000000	                          call 0x40009de	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009de	          0x4839c3	                            cmp rbx, rax	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009e1	     0xf8550feffff	                           jne 0x4000837	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009e7	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009ec	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009f1	            0x31c0	                            xor eax, eax	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009f3	       0xf1f440000	                   nop dword [rax + rax]	       318	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_9	CALL_8
0x40009f8	      0x450fb60404	             movzx r8d, byte [r12 + rax]	       323	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_2	IF_10
0x40009fd	          0x4963d0	                         movsxd rdx, r8d	       323	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_2	IF_10
0x4000a00	    0x80ba00000000	                    cmp byte [rdx], 0x63	       323	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_2	IF_10
0x4000a07	     0xf84dbfdffff	                            je 0x40007e8	       323	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_2	IF_10
0x4000a0d	        0x4883c001	                              add rax, 1	       323	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_2	IF_10
0x4000a11	          0x4139c2	                           cmp r10d, eax	       321	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_2
0x4000a14	            0x77e2	                            ja 0x40009f8	       321	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_2
0x4000a16	        0x41c1e704	                             shl r15d, 4	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a1a	       0xfb65c241d	           movzx ebx, byte [rsp + 0x1d] 	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a1f	       0xfb654241f	           movzx edx, byte [rsp + 0x1f] 	       306	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a24	        0x418d042f	                    lea eax, [r15 + rbp]	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a28	    0x440fb67c241e	          movzx r15d, byte [rsp + 0x1e] 	       306	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a2e	          0xc1e008	                              shl eax, 8	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a31	            0x89c5	                            mov ebp, eax	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a33	       0xfb644241c	           movzx eax, byte [rsp + 0x1c] 	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a38	        0x41c1e704	                             shl r15d, 4	       306	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a3c	          0x4101d7	                           add r15d, edx	       306	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a3f	        0x438d3439	                     lea esi, [r9 + r15]	       331	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a43	          0xc1e004	                              shl eax, 4	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a46	             0x1c3	                            add ebx, eax	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a48	             0x1eb	                            add ebx, ebp	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a4a	          0x4889d8	                            mov rax, rbx	       305	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a4d	             0x1f0	                            add eax, esi	       331	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a4f	          0x4889de	                            mov rsi, rbx	       331	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a52	        0x48c1ee08	                              shr rsi, 8	       331	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a56	             0x1c6	                            add esi, eax	       331	ihex.c	FUNCTION_5	WHILE_1	ELSE_3
0x4000a58	          0x4585c9	                           test r9d, r9d	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a5b	     0xf84c9040000	                            je 0x4000f2a	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a61	        0x418d41ff	                       lea eax, [r9 - 1]	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a65	          0x4c89e1	                            mov rcx, r12	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a68	      0x498d7c4402	              lea rdi, [r12 + rax*2 + 2]	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a6d	           0xf1f00	                         nop dword [rax]	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a70	           0xfb601	                   movzx eax, byte [rcx]	       333	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a73	         0xfb65101	               movzx edx, byte [rcx + 1]	       333	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a77	        0x4883c102	                              add rcx, 2	       333	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a7b	     0xfb680000000	                   movzx eax, byte [rax]	       333	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a82	     0xfb692000000	                   movzx edx, byte [rdx]	       333	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a89	          0xc1e004	                              shl eax, 4	       333	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a8c	             0x1d0	                            add eax, edx	       333	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a8e	             0x1c6	                            add esi, eax	       333	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a90	          0x4839f9	                            cmp rcx, rdi	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a93	            0x75db	                           jne 0x4000a70	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a95	        0x418d42fe	                      lea eax, [r10 - 2]	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a99	        0x488d5001	                      lea rdx, [rax + 1]	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000a9d	      0x410fb60404	             movzx eax, byte [r12 + rax]	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000aa2	            0xf7de	                                 neg esi	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000aa4	        0x400fb6ee	                          movzx ebp, sil	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000aa8	    0x440fb6800000	                   movzx r8d, byte [rax]	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000ab0	      0x410fb60414	             movzx eax, byte [r12 + rdx]	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000ab5	     0xfb680000000	                   movzx eax, byte [rax]	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000abc	        0x41c1e004	                              shl r8d, 4	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000ac0	          0x4101c0	                            add r8d, eax	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000ac3	          0x4439c5	                            cmp ebp, r8d	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000ac6	     0xf85b3040000	                           jne 0x4000f7f	       334	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11
0x4000acc	        0x4183ff05	                             cmp r15d, 5	       345	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000ad0	     0xf871d040000	                            ja 0x4000ef3	       345	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000ad6	    0x42ff24fd0000	                       jmp qword [r15*8]	       345	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000ade	            0x6690	                                     nop	       345	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000ae0	          0x4c89e7	                            mov rdi, r12	       312	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	CALL_7
0x4000ae3	          0x4889de	                            mov rsi, rbx	       312	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	CALL_7
0x4000ae6	        0x895c2418	             mov dword [rsp + 0x18], ebx	       312	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	CALL_7
0x4000aea	      0x44894c2414	             mov dword [rsp + 0x14], r9d	       312	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	CALL_7
0x4000aef	      0xe800000000	                          call 0x4000af4	       312	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	CALL_7
0x4000af4	          0x4885c0	                           test rax, rax	       313	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	IF_8
0x4000af7	          0x4989c4	                            mov r12, rax	       312	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	CALL_7
0x4000afa	     0xf8444fdffff	                            je 0x4000844	       313	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	IF_8
0x4000b00	      0x48895c2408	                mov qword [rsp + 8], rbx	       313	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	IF_8
0x4000b05	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	       313	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	IF_8
0x4000b0a	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	       313	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	IF_8
0x4000b0f	      0xe9b2feffff	                           jmp 0x40009c6	       313	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_7	IF_8
0x4000b14	        0x4183f902	                              cmp r9d, 2	       426	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_20
0x4000b18	     0xf85e6040000	                           jne 0x4001004	       426	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_20
0x4000b1e	      0x410fb60424	                   movzx eax, byte [r12]	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b23	    0x410fb6542403	               movzx edx, byte [r12 + 3]	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b29	    0x48c744242000	               mov qword [rsp + 0x20], 0	       438	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b32	     0xfb680000000	                   movzx eax, byte [rax]	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b39	     0xfb692000000	                   movzx edx, byte [rdx]	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b40	          0xc1e004	                              shl eax, 4	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b43	            0x89c1	                            mov ecx, eax	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b45	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b4b	     0xfb680000000	                   movzx eax, byte [rax]	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b52	             0x1c8	                            add eax, ecx	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b54	          0xc1e008	                              shl eax, 8	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b57	            0x89c1	                            mov ecx, eax	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b59	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b5f	     0xfb680000000	                   movzx eax, byte [rax]	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b66	          0xc1e004	                              shl eax, 4	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b69	             0x1d0	                            add eax, edx	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b6b	             0x1c8	                            add eax, ecx	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b6d	          0xc1e010	                           shl eax, 0x10	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b70	      0x4889442438	             mov qword [rsp + 0x38], rax	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b75	      0xe915fcffff	                           jmp 0x400078f	       436	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b7a	        0x4183f904	                              cmp r9d, 4	       408	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_19
0x4000b7e	     0xf858c040000	                           jne 0x4001010	       408	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_19
0x4000b84	      0x410fb60424	                   movzx eax, byte [r12]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b89	    0x410fb6542403	               movzx edx, byte [r12 + 3]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b8f	    0x48c744242000	               mov qword [rsp + 0x20], 0	       420	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b98	     0xfb680000000	                   movzx eax, byte [rax]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000b9f	     0xfb692000000	                   movzx edx, byte [rdx]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000ba6	          0xc1e004	                              shl eax, 4	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000ba9	            0x89c1	                            mov ecx, eax	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bab	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bb1	     0xfb680000000	                   movzx eax, byte [rax]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bb8	             0x1c8	                            add eax, ecx	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bba	          0xc1e008	                              shl eax, 8	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bbd	            0x89c1	                            mov ecx, eax	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bbf	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bc5	     0xfb680000000	                   movzx eax, byte [rax]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bcc	          0xc1e004	                              shl eax, 4	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bcf	             0x1d0	                            add eax, edx	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bd1	             0x1c8	                            add eax, ecx	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bd3	          0xc1e004	                              shl eax, 4	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bd6	            0x89c1	                            mov ecx, eax	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bd8	    0x410fb6442404	               movzx eax, byte [r12 + 4]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bde	     0xfb680000000	                   movzx eax, byte [rax]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000be5	          0xc1e004	                              shl eax, 4	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000be8	            0x89c2	                            mov edx, eax	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bea	    0x410fb6442405	               movzx eax, byte [r12 + 5]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bf0	     0xfb680000000	                   movzx eax, byte [rax]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bf7	             0x1d0	                            add eax, edx	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bf9	    0x410fb6542406	               movzx edx, byte [r12 + 6]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000bff	          0xc1e008	                              shl eax, 8	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c02	     0xfb692000000	                   movzx edx, byte [rdx]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c09	            0x89d6	                            mov esi, edx	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c0b	    0x410fb6542407	               movzx edx, byte [r12 + 7]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c11	          0xc1e604	                              shl esi, 4	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c14	     0xfb692000000	                   movzx edx, byte [rdx]	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c1b	             0x1f2	                            add edx, esi	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c1d	             0x1d0	                            add eax, edx	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c1f	             0x1c8	                            add eax, ecx	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c21	    0x490186a80000	            add qword [r14 + 0xa8], rax 	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c28	      0xe962fbffff	                           jmp 0x400078f	       418	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c2d	        0x4183f902	                              cmp r9d, 2	       390	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_18
0x4000c31	     0xf85c1030000	                           jne 0x4000ff8	       390	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_18
0x4000c37	      0x410fb60424	                   movzx eax, byte [r12]	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c3c	    0x410fb6542403	               movzx edx, byte [r12 + 3]	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c42	    0x48c744242000	               mov qword [rsp + 0x20], 0	       402	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c4b	     0xfb680000000	                   movzx eax, byte [rax]	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c52	     0xfb692000000	                   movzx edx, byte [rdx]	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c59	          0xc1e004	                              shl eax, 4	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c5c	            0x89c1	                            mov ecx, eax	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c5e	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c64	     0xfb680000000	                   movzx eax, byte [rax]	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c6b	             0x1c8	                            add eax, ecx	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c6d	          0xc1e008	                              shl eax, 8	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c70	            0x89c1	                            mov ecx, eax	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c72	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c78	     0xfb680000000	                   movzx eax, byte [rax]	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c7f	          0xc1e004	                              shl eax, 4	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c82	             0x1d0	                            add eax, edx	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c84	             0x1c8	                            add eax, ecx	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c86	          0xc1e004	                              shl eax, 4	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c89	      0x4889442430	             mov qword [rsp + 0x30], rax	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c8e	      0xe9fcfaffff	                           jmp 0x400078f	       400	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000c93	    0x4983bea80000	               cmp qword [r14 + 0xa8], 0	       382	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_16
0x4000c9b	            0x7507	                           jne 0x4000ca4	       382	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_16
0x4000c9d	    0x49899ea80000	             mov qword [r14 + 0xa8], rbx	       383	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_16
0x4000ca4	          0x4c89e7	                            mov rdi, r12	       478	ihex.c	FUNCTION_5	CALL_34
0x4000ca7	      0xe800000000	                          call 0x4000cac	       478	ihex.c	FUNCTION_5	CALL_34
0x4000cac	      0xe911fbffff	                           jmp 0x40007c2	       478	ihex.c	FUNCTION_5	CALL_34
0x4000cb1	        0x418d41fe	                       lea eax, [r9 - 2]	       444	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21
0x4000cb5	          0x83e0fd	                     and eax, 0xfffffffd	       444	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21
0x4000cb8	     0xf8506030000	                           jne 0x4000fc4	       444	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21
0x4000cbe	      0x410fb60424	                   movzx eax, byte [r12]	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cc3	    0x410fb6542403	               movzx edx, byte [r12 + 3]	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cc9	     0xfb680000000	                   movzx eax, byte [rax]	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cd0	     0xfb692000000	                   movzx edx, byte [rdx]	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cd7	          0xc1e004	                              shl eax, 4	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cda	            0x89c1	                            mov ecx, eax	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cdc	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000ce2	     0xfb680000000	                   movzx eax, byte [rax]	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000ce9	             0x1c8	                            add eax, ecx	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000ceb	          0xc1e008	                              shl eax, 8	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cee	            0x89c1	                            mov ecx, eax	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cf0	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cf6	     0xfb680000000	                   movzx eax, byte [rax]	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000cfd	          0xc1e004	                              shl eax, 4	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000d00	             0x1d0	                            add eax, edx	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000d02	             0x1c8	                            add eax, ecx	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000d04	        0x4183f902	                              cmp r9d, 2	       454	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000d08	     0xf8448020000	                            je 0x4000f56	       454	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000d0e	          0xc1e010	                           shl eax, 0x10	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d11	    0x48c744242000	               mov qword [rsp + 0x20], 0	       459	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000d1a	            0x89c1	                            mov ecx, eax	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d1c	    0x410fb6442404	               movzx eax, byte [r12 + 4]	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d22	     0xfb680000000	                   movzx eax, byte [rax]	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d29	          0xc1e004	                              shl eax, 4	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d2c	            0x89c2	                            mov edx, eax	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d2e	    0x410fb6442405	               movzx eax, byte [r12 + 5]	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d34	     0xfb680000000	                   movzx eax, byte [rax]	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d3b	             0x1d0	                            add eax, edx	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d3d	    0x410fb6542406	               movzx edx, byte [r12 + 6]	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d43	          0xc1e008	                              shl eax, 8	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d46	     0xfb692000000	                   movzx edx, byte [rdx]	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d4d	            0x89d6	                            mov esi, edx	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d4f	    0x410fb6542407	               movzx edx, byte [r12 + 7]	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d55	          0xc1e604	                              shl esi, 4	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d58	     0xfb692000000	                   movzx edx, byte [rdx]	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d5f	             0x1f2	                            add edx, esi	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d61	             0x1d0	                            add eax, edx	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d63	             0x1c8	                            add eax, ecx	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d65	    0x498986a80000	             mov qword [r14 + 0xa8], rax	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d6c	      0xe91efaffff	                           jmp 0x400078f	       457	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_5
0x4000d71	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       349	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d76	          0x4885c0	                           test rax, rax	       349	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d79	            0x7421	                            je 0x4000d9c	       349	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d7b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       350	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d7f	          0x4889d1	                            mov rcx, rdx	       350	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d82	        0x48034828	             add rcx, qword [rax + 0x28]	       350	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d86	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       350	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d8b	      0x4803442438	             add rax, qword [rsp + 0x38]	       350	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d90	          0x4801d8	                            add rax, rbx	       350	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d93	          0x4839c1	                            cmp rcx, rax	       350	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d96	     0xf84d2010000	                            je 0x4000f6e	       350	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000d9c	          0x4585c9	                           test r9d, r9d	       356	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000d9f	     0xf84eaf9ffff	                            je 0x400078f	       356	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000da5	    0x458b86a00000	            mov r8d, dword [r14 + 0xa0] 	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000dac	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000db1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000db6	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000dbb	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000dc0	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000dc2	      0x44894c2414	             mov dword [rsp + 0x14], r9d	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000dc7	        0x4183c001	                              add r8d, 1	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000dcb	      0xe800000000	                          call 0x4000dd0	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000dd0	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000dd5	      0x488d442470	                   lea rax, [rsp + 0x70]	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000dda	            0x8b08	                    mov ecx, dword [rax]	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000ddc	        0x4883c004	                              add rax, 4	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000de0	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000de6	            0xf7d1	                                 not ecx	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000de8	            0x21ca	                            and edx, ecx	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000dea	    0x81e280808080	                     and edx, 0x80808080	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000df0	            0x74e8	                            je 0x4000dda	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000df2	            0x89d1	                            mov ecx, edx	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000df4	          0x4c89f7	                            mov rdi, r14	       365	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_15
0x4000df7	      0x44894c2414	             mov dword [rsp + 0x14], r9d	       365	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_15
0x4000dfc	          0xc1e910	                           shr ecx, 0x10	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000dff	    0xf7c280800000	                        test edx, 0x8080	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e05	           0xf44d1	                          cmove edx, ecx	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e08	        0x488d4802	                      lea rcx, [rax + 2]	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e0c	        0x480f44c1	                          cmove rax, rcx	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e10	            0x89d1	                            mov ecx, edx	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e12	              0xd1	                              add cl, dl	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e14	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e19	        0x4883d803	                              sbb rax, 3	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e1d	          0x4829c8	                            sub rax, rcx	       364	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_14
0x4000e20	        0x488d7001	                      lea rsi, [rax + 1]	       365	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_15
0x4000e24	      0xe800000000	                          call 0x4000e29	       365	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_15
0x4000e29	          0x4885c0	                           test rax, rax	       366	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	IF_14
0x4000e2c	     0xf8405faffff	                            je 0x4000837	       366	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	IF_14
0x4000e32	      0x488d742470	                   lea rsi, [rsp + 0x70]	       110	string3.h	FUNCTION_37	CALL_3
0x4000e37	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_37	CALL_3
0x4000e3a	      0xe800000000	                          call 0x4000e3f	       110	string3.h	FUNCTION_37	CALL_3
0x4000e3f	      0xba03010000	                          mov edx, 0x103	       370	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_17
0x4000e44	          0x4889c6	                            mov rsi, rax	       370	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_17
0x4000e47	          0x4c89f7	                            mov rdi, r14	       370	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_17
0x4000e4a	      0xe800000000	                          call 0x4000e4f	       370	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_17
0x4000e4f	          0x4885c0	                           test rax, rax	       371	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	IF_15
0x4000e52	          0x4889c1	                            mov rcx, rax	       370	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_17
0x4000e55	      0x4889442420	             mov qword [rsp + 0x20], rax	       370	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	CALL_17
0x4000e5a	     0xf84d7f9ffff	                            je 0x4000837	       371	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13	IF_15
0x4000e60	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       373	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e65	      0x4803442438	             add rax, qword [rsp + 0x38]	       373	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e6a	          0x4801c3	                            add rbx, rax	       373	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e6d	          0x4889c8	                            mov rax, rcx	       373	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e70	        0x48895928	             mov qword [rcx + 0x28], rbx	       373	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e74	        0x48895930	             mov qword [rcx + 0x30], rbx	       374	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e78	          0x4889cb	                            mov rbx, rcx	       375	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e7b	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       375	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e7f	        0x48894838	             mov qword [rax + 0x38], rcx	       375	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e83	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       376	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e88	        0x4883e801	                              sub rax, 1	       376	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e8c	    0x488983900000	             mov qword [rbx + 0x90], rax	       376	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e93	      0xe9f7f8ffff	                           jmp 0x400078f	       376	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000e98	     0xf1f84000000	                   nop dword [rax + rax]	       376	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	ELSE_4	IF_13
0x4000ea0	      0x8344241001	               add dword [rsp + 0x10], 1	       269	ihex.c	FUNCTION_5	WHILE_1	ELSE_1	IF_3
0x4000ea5	      0xe9e5f8ffff	                           jmp 0x400078f	       269	ihex.c	FUNCTION_5	WHILE_1	ELSE_1	IF_3
0x4000eaa	    0x660f1f440000	                    nop word [rax + rax]	       269	ihex.c	FUNCTION_5	WHILE_1	ELSE_1	IF_3
0x4000eb0	    0xf68400000000	            test byte [rax + rax], 0x10 	       221	ihex.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4000eb8	            0x7416	                            je 0x4000ed0	       221	ihex.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4000eba	      0x4488442470	              mov byte [rsp + 0x70], r8b	       225	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000ebf	      0xc644247100	                mov byte [rsp + 0x71], 0	       226	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000ec4	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	       226	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000ec9	      0xe937f9ffff	                           jmp 0x4000805	       226	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000ece	            0x6690	                                     nop	       226	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000ed0	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000ed5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000eda	      0xba0a000000	                            mov edx, 0xa	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000edf	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000ee4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000ee6	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000ee9	      0xe800000000	                          call 0x4000eee	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000eee	      0xe912f9ffff	                           jmp 0x4000805	        33	stdio2.h	FUNCTION_14	CALL_1
0x4000ef3	      0xba05000000	                              mov edx, 5	       466	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_32
0x4000ef8	      0xbe00000000	                              mov esi, 0	       466	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_32
0x4000efd	      0xbf00000000	                              mov edi, 0	       466	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_32
0x4000f02	      0xe800000000	                          call 0x4000f07	       466	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_32
0x4000f07	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       464	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_31
0x4000f0b	          0x4889c7	                            mov rdi, rax	       464	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_31
0x4000f0e	          0x4489f9	                           mov ecx, r15d	       464	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_31
0x4000f11	          0x4c89f6	                            mov rsi, r14	       464	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_31
0x4000f14	            0x31c0	                            xor eax, eax	       464	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_31
0x4000f16	      0xe800000000	                          call 0x4000f1b	       464	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_31
0x4000f1b	      0xbf11000000	                           mov edi, 0x11	       468	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_33
0x4000f20	      0xe800000000	                          call 0x4000f25	       468	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_33
0x4000f25	      0xe90df9ffff	                           jmp 0x4000837	       468	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	CALL_33
0x4000f2a	      0xba01000000	                              mov edx, 1	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000f2f	            0x31c0	                            xor eax, eax	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000f31	      0xe967fbffff	                           jmp 0x4000a9d	       332	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	FOR_3
0x4000f36	          0x4963d0	                         movsxd rdx, r8d	       221	ihex.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4000f39	    0xf68412000000	            test byte [rdx + rdx], 0x10 	       221	ihex.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4000f41	            0x748d	                            je 0x4000ed0	       221	ihex.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4000f43	        0x88442470	               mov byte [rsp + 0x70], al	       225	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000f47	      0xc644247100	                mov byte [rsp + 0x71], 0	       226	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000f4c	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	       226	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000f51	      0xe9aff8ffff	                           jmp 0x4000805	       226	ihex.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000f56	          0xc1e010	                           shl eax, 0x10	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000f59	    0x48c744242000	               mov qword [rsp + 0x20], 0	       459	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1
0x4000f62	    0x490186a80000	            add qword [r14 + 0xa8], rax 	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000f69	      0xe921f8ffff	                           jmp 0x400078f	       455	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_22
0x4000f6e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       354	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000f73	          0x4c01ca	                             add rdx, r9	       354	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000f76	        0x48895038	             mov qword [rax + 0x38], rdx	       354	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000f7a	      0xe910f8ffff	                           jmp 0x400078f	       354	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_12
0x4000f7f	      0xba05000000	                              mov edx, 5	       338	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_11
0x4000f84	      0xbe00000000	                              mov esi, 0	       338	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_11
0x4000f89	      0xbf00000000	                              mov edi, 0	       338	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_11
0x4000f8e	      0x4489442408	                mov dword [rsp + 8], r8d	       338	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_11
0x4000f93	      0xe800000000	                          call 0x4000f98	       338	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_11
0x4000f98	      0x448b442408	                mov r8d, dword [rsp + 8]	       336	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_10
0x4000f9d	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       336	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_10
0x4000fa1	          0x4889c7	                            mov rdi, rax	       336	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_10
0x4000fa4	            0x89e9	                            mov ecx, ebp	       336	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_10
0x4000fa6	          0x4c89f6	                            mov rsi, r14	       336	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_10
0x4000fa9	            0x31c0	                            xor eax, eax	       336	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_10
0x4000fab	      0xe800000000	                          call 0x4000fb0	       336	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_10
0x4000fb0	      0xbf11000000	                           mov edi, 0x11	       341	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_12
0x4000fb5	      0xe800000000	                          call 0x4000fba	       341	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_12
0x4000fba	      0xe978f8ffff	                           jmp 0x4000837	       341	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	IF_11	CALL_12
0x4000fbf	      0xe800000000	                          call 0x4000fc4	       542	ihex.c	FUNCTION_6
0x4000fc4	      0xba05000000	                              mov edx, 5	       448	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_29
0x4000fc9	      0xbe00000000	                              mov esi, 0	       448	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_29
0x4000fce	      0xbf00000000	                              mov edi, 0	       448	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_29
0x4000fd3	      0xe800000000	                          call 0x4000fd8	       448	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_29
0x4000fd8	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       446	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_28
0x4000fdc	          0x4889c7	                            mov rdi, rax	       446	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_28
0x4000fdf	          0x4c89f6	                            mov rsi, r14	       446	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_28
0x4000fe2	            0x31c0	                            xor eax, eax	       446	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_28
0x4000fe4	      0xe800000000	                          call 0x4000fe9	       446	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_28
0x4000fe9	      0xbf11000000	                           mov edi, 0x11	       450	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_30
0x4000fee	      0xe800000000	                          call 0x4000ff3	       450	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_30
0x4000ff3	      0xe93ff8ffff	                           jmp 0x4000837	       450	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_21	CALL_30
0x4000ff8	      0xba05000000	                              mov edx, 5	       394	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_18	CALL_20
0x4000ffd	      0xbe00000000	                              mov esi, 0	       394	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_18	CALL_20
0x4001002	            0xebca	                           jmp 0x4000fce	       394	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_18	CALL_20
0x4001004	      0xba05000000	                              mov edx, 5	       430	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_20	CALL_26
0x4001009	      0xbe00000000	                              mov esi, 0	       430	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_20	CALL_26
0x400100e	            0xebbe	                           jmp 0x4000fce	       430	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_20	CALL_26
0x4001010	      0xba05000000	                              mov edx, 5	       412	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_19	CALL_23
0x4001015	      0xbe00000000	                              mov esi, 0	       412	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_19	CALL_23
0x400101a	            0xebb2	                           jmp 0x4000fce	       412	ihex.c	FUNCTION_5	WHILE_1	ELSE_3	SWITCH_1	IF_19	CALL_23
ihex_sizeof_headers	IF,0:ELSE,0:WHILE,0:CALL,0:functions,0:SWITCH,0:DO,0:FOR,0	2
0x4000040	            0x31c0	                            xor eax, eax	       914	ihex.c	FUNCTION_13
0x4000042	              0xc3	                                     ret	       914	ihex.c	FUNCTION_13
ihex_get_section_contents	IF,3:ELSE,0:WHILE,0:CALL,3:functions,0:SWITCH,0:DO,0:FOR,0	173
0x40002e0	            0x4157	                                push r15	       643	ihex.c	FUNCTION_8
0x40002e2	            0x4156	                                push r14	       643	ihex.c	FUNCTION_8
0x40002e4	          0x4d89c7	                             mov r15, r8	       643	ihex.c	FUNCTION_8
0x40002e7	            0x4155	                                push r13	       643	ihex.c	FUNCTION_8
0x40002e9	            0x4154	                                push r12	       643	ihex.c	FUNCTION_8
0x40002eb	          0x4989f4	                            mov r12, rsi	       643	ihex.c	FUNCTION_8
0x40002ee	              0x55	                                push rbp	       643	ihex.c	FUNCTION_8
0x40002ef	              0x53	                                push rbx	       643	ihex.c	FUNCTION_8
0x40002f0	          0x4989ce	                            mov r14, rcx	       643	ihex.c	FUNCTION_8
0x40002f3	        0x4883ec58	                           sub rsp, 0x58	       643	ihex.c	FUNCTION_8
0x40002f7	    0x488bb6e00000	            mov rsi, qword [rsi + 0xe0] 	       644	ihex.c	FUNCTION_8	IF_1
0x40002fe	    0x64488b042528	                mov rax, qword fs:[0x28]	       643	ihex.c	FUNCTION_8
0x4000307	      0x4889442448	             mov qword [rsp + 0x48], rax	       643	ihex.c	FUNCTION_8
0x400030c	            0x31c0	                            xor eax, eax	       643	ihex.c	FUNCTION_8
0x400030e	        0x48891424	                    mov qword [rsp], rdx	       643	ihex.c	FUNCTION_8
0x4000312	          0x4885f6	                           test rsi, rsi	       644	ihex.c	FUNCTION_8	IF_1
0x4000315	            0x7439	                            je 0x4000350	       644	ihex.c	FUNCTION_8	IF_1
0x4000317	        0x488b3c24	                    mov rdi, qword [rsp]	        53	string3.h	FUNCTION_31	CALL_3
0x400031b	          0x4c01f6	                            add rsi, r14	        53	string3.h	FUNCTION_31	CALL_3
0x400031e	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_31	CALL_3
0x4000321	      0xe800000000	                          call 0x4000326	        53	string3.h	FUNCTION_31	CALL_3
0x4000326	      0xb801000000	                              mov eax, 1	       657	ihex.c	FUNCTION_8
0x400032b	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       658	ihex.c	FUNCTION_8
0x4000330	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       658	ihex.c	FUNCTION_8
0x4000339	     0xf856d020000	                           jne 0x40005ac	       658	ihex.c	FUNCTION_8
0x400033f	        0x4883c458	                           add rsp, 0x58	       658	ihex.c	FUNCTION_8
0x4000343	              0x5b	                                 pop rbx	       658	ihex.c	FUNCTION_8
0x4000344	              0x5d	                                 pop rbp	       658	ihex.c	FUNCTION_8
0x4000345	            0x415c	                                 pop r12	       658	ihex.c	FUNCTION_8
0x4000347	            0x415d	                                 pop r13	       658	ihex.c	FUNCTION_8
0x4000349	            0x415e	                                 pop r14	       658	ihex.c	FUNCTION_8
0x400034b	            0x415f	                                 pop r15	       658	ihex.c	FUNCTION_8
0x400034d	              0xc3	                                     ret	       658	ihex.c	FUNCTION_8
0x400034e	            0x6690	                                     nop	       658	ihex.c	FUNCTION_8
0x4000350	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	       646	ihex.c	FUNCTION_8	IF_1	CALL_1
0x4000355	          0x4889fd	                            mov rbp, rdi	       646	ihex.c	FUNCTION_8	IF_1	CALL_1
0x4000358	      0xe800000000	                          call 0x400035d	       646	ihex.c	FUNCTION_8	IF_1	CALL_1
0x400035d	          0x4885c0	                           test rax, rax	       647	ihex.c	FUNCTION_8	IF_1	IF_2
0x4000360	          0x4889c3	                            mov rbx, rax	       646	ihex.c	FUNCTION_8	IF_1	CALL_1
0x4000363	      0x4889442410	             mov qword [rsp + 0x10], rax	       646	ihex.c	FUNCTION_8	IF_1	CALL_1
0x4000368	    0x49898424e000	             mov qword [r12 + 0xe0], rax	       646	ihex.c	FUNCTION_8	IF_1	CALL_1
0x4000370	     0xf84ad010000	                            je 0x4000523	       647	ihex.c	FUNCTION_8	IF_1	IF_2
0x4000376	    0x498bb4249000	            mov rsi, qword [r12 + 0x90] 	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x400037e	            0x31d2	                            xor edx, edx	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x4000380	          0x4889ef	                            mov rdi, rbp	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x4000383	      0xe800000000	                          call 0x4000388	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x4000388	            0x85c0	                           test eax, eax	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x400038a	     0xf8593010000	                           jne 0x4000523	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x4000390	    0x48c744242000	               mov qword [rsp + 0x20], 0	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x4000399	          0x4531ed	                          xor r13d, r13d	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x400039c	         0xf1f4000	                         nop dword [rax]	       555	ihex.c	FUNCTION_7	IF_1	CALL_1
0x40003a0	      0x488d7c243f	                   lea rdi, [rsp + 0x3f]	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40003a5	          0x4889ea	                            mov rdx, rbp	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40003a8	      0xbe01000000	                              mov esi, 1	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40003ad	      0xe800000000	                          call 0x40003b2	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40003b2	        0x4883f801	                              cmp rax, 1	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40003b6	            0x7438	                            je 0x40003f0	       197	ihex.c	FUNCTION_3	IF_1	CALL_1
0x40003b8	      0xe800000000	                          call 0x40003bd	       199	ihex.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40003bd	      0x482b5c2410	             sub rbx, qword [rsp + 0x10]	       616	ihex.c	FUNCTION_7	IF_11
0x40003c2	      0x493b5c2438	            cmp rbx, qword [r12 + 0x38] 	       616	ihex.c	FUNCTION_7	IF_11
0x40003c7	     0xf82d3010000	                            jb 0x40005a0	       616	ihex.c	FUNCTION_7	IF_11
0x40003cd	          0x4d85ed	                           test r13, r13	       624	ihex.c	FUNCTION_7	IF_12
0x40003d0	            0x7408	                            je 0x40003da	       624	ihex.c	FUNCTION_7	IF_12
0x40003d2	          0x4c89ef	                            mov rdi, r13	       625	ihex.c	FUNCTION_7	CALL_15
0x40003d5	      0xe800000000	                          call 0x40003da	       625	ihex.c	FUNCTION_7	CALL_15
0x40003da	    0x498bb424e000	            mov rsi, qword [r12 + 0xe0] 	       625	ihex.c	FUNCTION_7	CALL_15
0x40003e2	      0xe930ffffff	                           jmp 0x4000317	       625	ihex.c	FUNCTION_7	CALL_15
0x40003e7	    0x660f1f840000	                    nop word [rax + rax]	       625	ihex.c	FUNCTION_7	CALL_15
0x40003f0	       0xfb644243f	           movzx eax, byte [rsp + 0x3f] 	       204	ihex.c	FUNCTION_3
0x40003f5	          0x83f80d	                            cmp eax, 0xd	       568	ihex.c	FUNCTION_7	WHILE_1	IF_2
0x40003f8	            0x74a6	                            je 0x40003a0	       568	ihex.c	FUNCTION_7	WHILE_1	IF_2
0x40003fa	          0x83f80a	                            cmp eax, 0xa	       568	ihex.c	FUNCTION_7	WHILE_1	IF_2
0x40003fd	            0x74a1	                            je 0x40003a0	       568	ihex.c	FUNCTION_7	WHILE_1	IF_2
0x40003ff	          0x83f83a	                           cmp eax, 0x3a	       573	ihex.c	FUNCTION_7	WHILE_1	CALL_3
0x4000402	            0x740f	                            je 0x4000413	       573	ihex.c	FUNCTION_7	WHILE_1	CALL_3
0x4000404	      0xbe3d020000	                          mov esi, 0x23d	       573	ihex.c	FUNCTION_7	WHILE_1	CALL_3
0x4000409	      0xbf00000000	                              mov edi, 0	       573	ihex.c	FUNCTION_7	WHILE_1	CALL_3
0x400040e	      0xe800000000	                          call 0x4000413	       573	ihex.c	FUNCTION_7	WHILE_1	CALL_3
0x4000413	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       575	ihex.c	FUNCTION_7	WHILE_1	IF_3	CALL_4
0x4000418	          0x4889ea	                            mov rdx, rbp	       575	ihex.c	FUNCTION_7	WHILE_1	IF_3	CALL_4
0x400041b	      0xbe08000000	                              mov esi, 8	       575	ihex.c	FUNCTION_7	WHILE_1	IF_3	CALL_4
0x4000420	      0xe800000000	                          call 0x4000425	       575	ihex.c	FUNCTION_7	WHILE_1	IF_3	CALL_4
0x4000425	        0x4883f808	                              cmp rax, 8	       575	ihex.c	FUNCTION_7	WHILE_1	IF_3	CALL_4
0x4000429	     0xf85e7000000	                           jne 0x4000516	       575	ihex.c	FUNCTION_7	WHILE_1	IF_3	CALL_4
0x400042f	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	       578	ihex.c	FUNCTION_7	WHILE_1
0x4000434	       0xfb6542447	           movzx edx, byte [rsp + 0x47] 	       579	ihex.c	FUNCTION_7	WHILE_1
0x4000439	    0x440fb6800000	                   movzx r8d, byte [rax]	       578	ihex.c	FUNCTION_7	WHILE_1
0x4000441	       0xfb6442441	           movzx eax, byte [rsp + 0x41] 	       578	ihex.c	FUNCTION_7	WHILE_1
0x4000446	     0xfb692000000	                   movzx edx, byte [rdx]	       582	ihex.c	FUNCTION_7	WHILE_1	IF_4
0x400044d	     0xfb680000000	                   movzx eax, byte [rax]	       578	ihex.c	FUNCTION_7	WHILE_1
0x4000454	        0x41c1e004	                              shl r8d, 4	       578	ihex.c	FUNCTION_7	WHILE_1
0x4000458	          0x4101c0	                            add r8d, eax	       578	ihex.c	FUNCTION_7	WHILE_1
0x400045b	       0xfb6442446	           movzx eax, byte [rsp + 0x46] 	       579	ihex.c	FUNCTION_7	WHILE_1
0x4000460	     0xfb680000000	                   movzx eax, byte [rax]	       582	ihex.c	FUNCTION_7	WHILE_1	IF_4
0x4000467	          0xc1e004	                              shl eax, 4	       582	ihex.c	FUNCTION_7	WHILE_1	IF_4
0x400046a	             0x1d0	                            add eax, edx	       582	ihex.c	FUNCTION_7	WHILE_1	IF_4
0x400046c	     0xf85f7000000	                           jne 0x4000569	       582	ihex.c	FUNCTION_7	WHILE_1	IF_4
0x4000472	        0x438d0400	                      lea eax, [r8 + r8]	       590	ihex.c	FUNCTION_7	WHILE_1	IF_5
0x4000476	      0x483b442420	            cmp rax, qword [rsp + 0x20] 	       590	ihex.c	FUNCTION_7	WHILE_1	IF_5
0x400047b	          0x4589c1	                            mov r9d, r8d	       592	ihex.c	FUNCTION_7	WHILE_1	IF_5	CALL_8
0x400047e	      0x4889442408	                mov qword [rsp + 8], rax	       590	ihex.c	FUNCTION_7	WHILE_1	IF_5
0x4000483	     0xf87a7000000	                            ja 0x4000530	       590	ihex.c	FUNCTION_7	WHILE_1	IF_5
0x4000489	          0x4d01c9	                              add r9, r9	       590	ihex.c	FUNCTION_7	WHILE_1	IF_5
0x400048c	          0x4889ea	                            mov rdx, rbp	       598	ihex.c	FUNCTION_7	WHILE_1	IF_7	CALL_9
0x400048f	          0x4c89ce	                             mov rsi, r9	       598	ihex.c	FUNCTION_7	WHILE_1	IF_7	CALL_9
0x4000492	          0x4c89ef	                            mov rdi, r13	       598	ihex.c	FUNCTION_7	WHILE_1	IF_7	CALL_9
0x4000495	      0x4489442418	             mov dword [rsp + 0x18], r8d	       598	ihex.c	FUNCTION_7	WHILE_1	IF_7	CALL_9
0x400049a	      0xe800000000	                          call 0x400049f	       598	ihex.c	FUNCTION_7	WHILE_1	IF_7	CALL_9
0x400049f	      0x4839442408	                cmp qword [rsp + 8], rax	       598	ihex.c	FUNCTION_7	WHILE_1	IF_7	CALL_9
0x40004a4	            0x7570	                           jne 0x4000516	       598	ihex.c	FUNCTION_7	WHILE_1	IF_7	CALL_9
0x40004a6	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004ab	          0x4585c0	                           test r8d, r8d	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004ae	            0x7439	                            je 0x40004e9	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004b0	            0x31c0	                            xor eax, eax	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004b2	    0x660f1f440000	                    nop word [rax + rax]	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004b8	    0x410fb6544500	           movzx edx, byte [r13 + rax*2]	       602	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004be	    0x410fb6744501	      movzx esi, byte [r13 + rax*2 + 1] 	       602	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004c4	     0xfb692000000	                   movzx edx, byte [rdx]	       602	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004cb	          0xc1e204	                              shl edx, 4	       602	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004ce	     0x29600000000	                      add dl, byte [rsi]	       602	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004d4	          0x881403	                mov byte [rbx + rax], dl	       602	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004d7	        0x4883c001	                              add rax, 1	       602	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004db	          0x4139c0	                            cmp r8d, eax	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004de	            0x77d8	                            ja 0x40004b8	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004e0	        0x418d40ff	                       lea eax, [r8 - 1]	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004e4	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	       601	ihex.c	FUNCTION_7	WHILE_1	FOR_1
0x40004e9	          0x4889d8	                            mov rax, rbx	       603	ihex.c	FUNCTION_7	WHILE_1	IF_8
0x40004ec	      0x482b442410	             sub rax, qword [rsp + 0x10]	       603	ihex.c	FUNCTION_7	WHILE_1	IF_8
0x40004f1	      0x493b442438	            cmp rax, qword [r12 + 0x38] 	       603	ihex.c	FUNCTION_7	WHILE_1	IF_8
0x40004f6	     0xf83d1feffff	                           jae 0x40003cd	       603	ihex.c	FUNCTION_7	WHILE_1	IF_8
0x40004fc	          0x4889ea	                            mov rdx, rbp	       612	ihex.c	FUNCTION_7	WHILE_1	IF_10	CALL_11
0x40004ff	      0xbe02000000	                              mov esi, 2	       612	ihex.c	FUNCTION_7	WHILE_1	IF_10	CALL_11
0x4000504	          0x4c89ef	                            mov rdi, r13	       612	ihex.c	FUNCTION_7	WHILE_1	IF_10	CALL_11
0x4000507	      0xe800000000	                          call 0x400050c	       612	ihex.c	FUNCTION_7	WHILE_1	IF_10	CALL_11
0x400050c	        0x4883f802	                              cmp rax, 2	       612	ihex.c	FUNCTION_7	WHILE_1	IF_10	CALL_11
0x4000510	     0xf848afeffff	                            je 0x40003a0	       612	ihex.c	FUNCTION_7	WHILE_1	IF_10	CALL_11
0x4000516	          0x4d85ed	                           test r13, r13	       630	ihex.c	FUNCTION_7	IF_13
0x4000519	            0x7408	                            je 0x4000523	       630	ihex.c	FUNCTION_7	IF_13
0x400051b	          0x4c89ef	                            mov rdi, r13	       631	ihex.c	FUNCTION_7	CALL_16
0x400051e	      0xe800000000	                          call 0x4000523	       631	ihex.c	FUNCTION_7	CALL_16
0x4000523	            0x31c0	                            xor eax, eax	       651	ihex.c	FUNCTION_8	IF_1	IF_3
0x4000525	      0xe901feffff	                           jmp 0x400032b	       651	ihex.c	FUNCTION_8	IF_1	IF_3
0x400052a	    0x660f1f440000	                    nop word [rax + rax]	       651	ihex.c	FUNCTION_8	IF_1	IF_3
0x4000530	          0x4d01c9	                              add r9, r9	       592	ihex.c	FUNCTION_7	WHILE_1	IF_5	CALL_8
0x4000533	          0x4c89ef	                            mov rdi, r13	       592	ihex.c	FUNCTION_7	WHILE_1	IF_5	CALL_8
0x4000536	      0x448944242c	             mov dword [rsp + 0x2c], r8d	       592	ihex.c	FUNCTION_7	WHILE_1	IF_5	CALL_8
0x400053b	          0x4c89ce	                             mov rsi, r9	       592	ihex.c	FUNCTION_7	WHILE_1	IF_5	CALL_8
0x400053e	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       592	ihex.c	FUNCTION_7	WHILE_1	IF_5	CALL_8
0x4000543	      0xe800000000	                          call 0x4000548	       592	ihex.c	FUNCTION_7	WHILE_1	IF_5	CALL_8
0x4000548	          0x4885c0	                           test rax, rax	       593	ihex.c	FUNCTION_7	WHILE_1	IF_5	IF_6
0x400054b	          0x4989c5	                            mov r13, rax	       592	ihex.c	FUNCTION_7	WHILE_1	IF_5	CALL_8
0x400054e	            0x74d3	                            je 0x4000523	       593	ihex.c	FUNCTION_7	WHILE_1	IF_5	IF_6
0x4000550	      0x488b442408	                mov rax, qword [rsp + 8]	       593	ihex.c	FUNCTION_7	WHILE_1	IF_5	IF_6
0x4000555	      0x448b44242c	            mov r8d, dword [rsp + 0x2c] 	       593	ihex.c	FUNCTION_7	WHILE_1	IF_5	IF_6
0x400055a	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       593	ihex.c	FUNCTION_7	WHILE_1	IF_5	IF_6
0x400055f	      0x4889442420	             mov qword [rsp + 0x20], rax	       593	ihex.c	FUNCTION_7	WHILE_1	IF_5	IF_6
0x4000564	      0xe923ffffff	                           jmp 0x400048c	       593	ihex.c	FUNCTION_7	WHILE_1	IF_5	IF_6
0x4000569	      0xba05000000	                              mov edx, 5	       585	ihex.c	FUNCTION_7	WHILE_1	IF_4	CALL_6
0x400056e	      0xbe00000000	                              mov esi, 0	       585	ihex.c	FUNCTION_7	WHILE_1	IF_4	CALL_6
0x4000573	      0xbf00000000	                              mov edi, 0	       619	ihex.c	FUNCTION_7	IF_11	CALL_13
0x4000578	      0xe800000000	                          call 0x400057d	       619	ihex.c	FUNCTION_7	IF_11	CALL_13
0x400057d	          0x4889ee	                            mov rsi, rbp	       618	ihex.c	FUNCTION_7	IF_11	CALL_12
0x4000580	          0x4889c7	                            mov rdi, rax	       618	ihex.c	FUNCTION_7	IF_11	CALL_12
0x4000583	            0x31c0	                            xor eax, eax	       618	ihex.c	FUNCTION_7	IF_11	CALL_12
0x4000585	      0xe800000000	                          call 0x400058a	       618	ihex.c	FUNCTION_7	IF_11	CALL_12
0x400058a	      0xbf11000000	                           mov edi, 0x11	       620	ihex.c	FUNCTION_7	IF_11	CALL_14
0x400058f	      0xe800000000	                          call 0x4000594	       620	ihex.c	FUNCTION_7	IF_11	CALL_14
0x4000594	            0xeb80	                           jmp 0x4000516	       620	ihex.c	FUNCTION_7	IF_11	CALL_14
0x4000596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       620	ihex.c	FUNCTION_7	IF_11	CALL_14
0x40005a0	      0xba05000000	                              mov edx, 5	       619	ihex.c	FUNCTION_7	IF_11	CALL_13
0x40005a5	      0xbe00000000	                              mov esi, 0	       619	ihex.c	FUNCTION_7	IF_11	CALL_13
0x40005aa	            0xebc7	                           jmp 0x4000573	       619	ihex.c	FUNCTION_7	IF_11	CALL_13
0x40005ac	      0xe800000000	                          call 0x40005b1	       658	ihex.c	FUNCTION_8
ihex_write_object_contents	IF,15:ELSE,2:WHILE,1:CALL,11:functions,0:SWITCH,0:DO,0:FOR,1	363
0x4001020	            0x4157	                                push r15	       766	ihex.c	FUNCTION_11
0x4001022	            0x4156	                                push r14	       766	ihex.c	FUNCTION_11
0x4001024	            0x4155	                                push r13	       766	ihex.c	FUNCTION_11
0x4001026	            0x4154	                                push r12	       766	ihex.c	FUNCTION_11
0x4001028	              0x55	                                push rbp	       766	ihex.c	FUNCTION_11
0x4001029	              0x53	                                push rbx	       766	ihex.c	FUNCTION_11
0x400102a	        0x4883ec78	                           sub rsp, 0x78	       766	ihex.c	FUNCTION_11
0x400102e	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       773	ihex.c	FUNCTION_11	FOR_1
0x4001035	    0x64488b342528	                mov rsi, qword fs:[0x28]	       766	ihex.c	FUNCTION_11
0x400103e	      0x4889742468	             mov qword [rsp + 0x68], rsi	       766	ihex.c	FUNCTION_11
0x4001043	            0x31f6	                            xor esi, esi	       766	ihex.c	FUNCTION_11
0x4001045	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       766	ihex.c	FUNCTION_11
0x400104a	          0x488b00	                    mov rax, qword [rax]	       773	ihex.c	FUNCTION_11	FOR_1
0x400104d	          0x4885c0	                           test rax, rax	       773	ihex.c	FUNCTION_11	FOR_1
0x4001050	      0x4889442418	             mov qword [rsp + 0x18], rax	       773	ihex.c	FUNCTION_11	FOR_1
0x4001055	     0xf843a020000	                            je 0x4001295	       773	ihex.c	FUNCTION_11	FOR_1
0x400105b	            0x31ed	                            xor ebp, ebp	       773	ihex.c	FUNCTION_11	FOR_1
0x400105d	          0x4531ed	                          xor r13d, r13d	       773	ihex.c	FUNCTION_11	FOR_1
0x4001060	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       781	ihex.c	FUNCTION_11	FOR_1
0x4001064	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	       779	ihex.c	FUNCTION_11	FOR_1
0x4001068	        0x4c8b6008	                mov r12, qword [rax + 8]	       780	ihex.c	FUNCTION_11	FOR_1
0x400106c	          0x4885db	                           test rbx, rbx	       783	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x400106f	     0xf840f020000	                            je 0x4001284	       783	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001075	          0x4d89fe	                            mov r14, r15	       783	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001078	     0xf1f84000000	                   nop dword [rax + rax]	       783	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001080	    0x498d842dffff	           lea rax, [r13 + rbp + 0xffff]	       792	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2
0x4001088	        0x4883fb10	                           cmp rbx, 0x10	       792	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2
0x400108c	    0x41bf10000000	                          mov r15d, 0x10	       792	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2
0x4001092	        0x4c0f46fb	                         cmovbe r15, rbx	       792	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2
0x4001096	          0x4c39f0	                            cmp rax, r14	       792	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2
0x4001099	     0xf83a1030000	                           jae 0x4001440	       792	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2
0x400109f	    0x4981feffff0f	                        cmp r14, 0xfffff	       797	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3
0x40010a6	     0xf87a4030000	                            ja 0x4001450	       797	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3
0x40010ac	          0x4885ed	                           test rbp, rbp	       800	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	CALL_1
0x40010af	     0xf850b040000	                           jne 0x40014c0	       800	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	CALL_1
0x40010b5	          0x4d89f5	                            mov r13, r14	       802	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3
0x40010b8	      0x4c8d442430	                    lea r8, [rsp + 0x30]	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010bd	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010c2	    0x4181e500000f	                       and r13d, 0xf0000	       802	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3
0x40010c9	      0xbe02000000	                              mov esi, 2	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010ce	      0xc644243100	                mov byte [rsp + 0x31], 0	       804	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3
0x40010d3	          0x4c89e8	                            mov rax, r13	       803	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3
0x40010d6	          0x4c89c2	                             mov rdx, r8	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010d9	      0x4c89442408	                 mov qword [rsp + 8], r8	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010de	        0x48c1e80c	                            shr rax, 0xc	       803	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3
0x40010e2	        0x88442430	               mov byte [rsp + 0x30], al	       803	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3
0x40010e6	      0xe8d5f0ffff	  call sym.ihex_write_record.constprop.4	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010eb	            0x85c0	                           test eax, eax	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010ed	     0xf844f010000	                            je 0x4001242	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010f3	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010f8	          0x4489e8	                           mov eax, r13d	       805	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	IF_4	CALL_2
0x40010fb	          0x4489f7	                           mov edi, r14d	       843	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x40010fe	            0x29c7	                            sub edi, eax	       843	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001100	            0x29ef	                            sub edi, ebp	       843	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001102	            0x89f8	                            mov eax, edi	       846	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_9
0x4001104	          0x4c01f8	                            add rax, r15	       846	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_9
0x4001107	    0x483dffff0000	                         cmp rax, 0xffff	       846	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_9
0x400110d	            0x7609	                           jbe 0x4001118	       846	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_9
0x400110f	    0x41bf00000100	                       mov r15d, 0x10000	       847	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_9
0x4001115	          0x4129ff	                           sub r15d, edi	       847	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_9
0x4001118	          0x4c89f8	                            mov rax, r15	       738	ihex.c	FUNCTION_10
0x400111b	      0xc64424303a	            mov byte [rsp + 0x30], 0x3a 	       737	ihex.c	FUNCTION_10
0x4001120	      0xc644243730	            mov byte [rsp + 0x37], 0x30 	       741	ihex.c	FUNCTION_10
0x4001125	        0x48c1e804	                              shr rax, 4	       738	ihex.c	FUNCTION_10
0x4001129	      0xc644243830	            mov byte [rsp + 0x38], 0x30 	       741	ihex.c	FUNCTION_10
0x400112e	          0x83e00f	                            and eax, 0xf	       738	ihex.c	FUNCTION_10
0x4001131	     0xfb680000000	                   movzx eax, byte [rax]	       738	ihex.c	FUNCTION_10
0x4001138	        0x88442431	               mov byte [rsp + 0x31], al	       738	ihex.c	FUNCTION_10
0x400113c	          0x4c89f8	                            mov rax, r15	       738	ihex.c	FUNCTION_10
0x400113f	          0x83e00f	                            and eax, 0xf	       738	ihex.c	FUNCTION_10
0x4001142	     0xfb680000000	                   movzx eax, byte [rax]	       738	ihex.c	FUNCTION_10
0x4001149	        0x88442432	               mov byte [rsp + 0x32], al	       738	ihex.c	FUNCTION_10
0x400114d	            0x89f8	                            mov eax, edi	       739	ihex.c	FUNCTION_10
0x400114f	          0xc1e808	                              shr eax, 8	       739	ihex.c	FUNCTION_10
0x4001152	          0x4889c2	                            mov rdx, rax	       739	ihex.c	FUNCTION_10
0x4001155	        0x48c1ea04	                              shr rdx, 4	       739	ihex.c	FUNCTION_10
0x4001159	          0x83e20f	                            and edx, 0xf	       739	ihex.c	FUNCTION_10
0x400115c	     0xfb692000000	                   movzx edx, byte [rdx]	       739	ihex.c	FUNCTION_10
0x4001163	        0x88542433	               mov byte [rsp + 0x33], dl	       739	ihex.c	FUNCTION_10
0x4001167	            0x89c2	                            mov edx, eax	       739	ihex.c	FUNCTION_10
0x4001169	          0x83e20f	                            and edx, 0xf	       739	ihex.c	FUNCTION_10
0x400116c	     0xfb692000000	                   movzx edx, byte [rdx]	       739	ihex.c	FUNCTION_10
0x4001173	        0x88542434	               mov byte [rsp + 0x34], dl	       739	ihex.c	FUNCTION_10
0x4001177	          0x4889fa	                            mov rdx, rdi	       740	ihex.c	FUNCTION_10
0x400117a	        0x48c1ea04	                              shr rdx, 4	       740	ihex.c	FUNCTION_10
0x400117e	          0x83e20f	                            and edx, 0xf	       740	ihex.c	FUNCTION_10
0x4001181	     0xfb692000000	                   movzx edx, byte [rdx]	       740	ihex.c	FUNCTION_10
0x4001188	        0x88542435	               mov byte [rsp + 0x35], dl	       740	ihex.c	FUNCTION_10
0x400118c	            0x89fa	                            mov edx, edi	       740	ihex.c	FUNCTION_10
0x400118e	             0x1c7	                            add edi, eax	       743	ihex.c	FUNCTION_10
0x4001190	          0x83e20f	                            and edx, 0xf	       740	ihex.c	FUNCTION_10
0x4001193	          0x4401ff	                           add edi, r15d	       743	ihex.c	FUNCTION_10
0x4001196	          0x4d85ff	                           test r15, r15	       745	ihex.c	FUNCTION_10	FOR_1
0x4001199	     0xfb692000000	                   movzx edx, byte [rdx]	       740	ihex.c	FUNCTION_10
0x40011a0	        0x88542436	               mov byte [rsp + 0x36], dl	       740	ihex.c	FUNCTION_10
0x40011a4	     0xf840d030000	                            je 0x40014b7	       745	ihex.c	FUNCTION_10	FOR_1
0x40011aa	        0x498d5009	                       lea rdx, [r8 + 9]	       745	ihex.c	FUNCTION_10	FOR_1
0x40011ae	          0x4d89e2	                            mov r10, r12	       745	ihex.c	FUNCTION_10	FOR_1
0x40011b1	          0x4531c9	                            xor r9d, r9d	       745	ihex.c	FUNCTION_10	FOR_1
0x40011b4	         0xf1f4000	                         nop dword [rax]	       745	ihex.c	FUNCTION_10	FOR_1
0x40011b8	        0x410fb602	                   movzx eax, byte [r10]	       747	ihex.c	FUNCTION_10	FOR_1
0x40011bc	        0x4883c202	                              add rdx, 2	       745	ihex.c	FUNCTION_10	FOR_1
0x40011c0	        0x4983c201	                              add r10, 1	       745	ihex.c	FUNCTION_10	FOR_1
0x40011c4	            0x89c1	                            mov ecx, eax	       747	ihex.c	FUNCTION_10	FOR_1
0x40011c6	             0x1c7	                            add edi, eax	       748	ihex.c	FUNCTION_10	FOR_1
0x40011c8	          0xc0e904	                               shr cl, 4	       747	ihex.c	FUNCTION_10	FOR_1
0x40011cb	          0x83e10f	                            and ecx, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x40011ce	     0xfb689000000	                   movzx ecx, byte [rcx]	       747	ihex.c	FUNCTION_10	FOR_1
0x40011d5	          0x884afe	                  mov byte [rdx - 2], cl	       747	ihex.c	FUNCTION_10	FOR_1
0x40011d8	          0x4889c1	                            mov rcx, rax	       747	ihex.c	FUNCTION_10	FOR_1
0x40011db	        0x418d4101	                       lea eax, [r9 + 1]	       745	ihex.c	FUNCTION_10	FOR_1
0x40011df	          0x83e10f	                            and ecx, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x40011e2	     0xfb689000000	                   movzx ecx, byte [rcx]	       747	ihex.c	FUNCTION_10	FOR_1
0x40011e9	          0x4989c1	                             mov r9, rax	       745	ihex.c	FUNCTION_10	FOR_1
0x40011ec	          0x884aff	                  mov byte [rdx - 1], cl	       747	ihex.c	FUNCTION_10	FOR_1
0x40011ef	          0x4939c7	                            cmp r15, rax	       745	ihex.c	FUNCTION_10	FOR_1
0x40011f2	            0x77c4	                            ja 0x40011b8	       745	ihex.c	FUNCTION_10	FOR_1
0x40011f4	            0xf7df	                                 neg edi	       751	ihex.c	FUNCTION_10
0x40011f6	      0x4f8d4c3f0d	               lea r9, [r15 + r15 + 0xd]	       755	ihex.c	FUNCTION_10
0x40011fb	        0xc642020d	                 mov byte [rdx + 2], 0xd	       752	ihex.c	FUNCTION_10
0x40011ff	          0x4889f8	                            mov rax, rdi	       751	ihex.c	FUNCTION_10
0x4001202	          0x83e70f	                            and edi, 0xf	       751	ihex.c	FUNCTION_10
0x4001205	        0xc642030a	                 mov byte [rdx + 3], 0xa	       753	ihex.c	FUNCTION_10
0x4001209	        0x48c1e804	                              shr rax, 4	       751	ihex.c	FUNCTION_10
0x400120d	          0x4c89ce	                             mov rsi, r9	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001210	      0x4c894c2408	                 mov qword [rsp + 8], r9	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001215	          0x83e00f	                            and eax, 0xf	       751	ihex.c	FUNCTION_10
0x4001218	     0xfb680000000	                   movzx eax, byte [rax]	       751	ihex.c	FUNCTION_10
0x400121f	            0x8802	                      mov byte [rdx], al	       751	ihex.c	FUNCTION_10
0x4001221	     0xfb687000000	                   movzx eax, byte [rdi]	       751	ihex.c	FUNCTION_10
0x4001228	          0x4c89c7	                             mov rdi, r8	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x400122b	          0x884201	                  mov byte [rdx + 1], al	       751	ihex.c	FUNCTION_10
0x400122e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001233	      0xe800000000	                          call 0x4001238	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001238	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x400123d	          0x4939c1	                             cmp r9, rax	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001240	            0x742e	                            je 0x4001270	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001242	            0x31c0	                            xor eax, eax	       850	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_10
0x4001244	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       889	ihex.c	FUNCTION_11
0x4001249	    0x644833342528	                xor rsi, qword fs:[0x28]	       889	ihex.c	FUNCTION_11
0x4001252	     0xf85b9030000	                           jne 0x4001611	       889	ihex.c	FUNCTION_11
0x4001258	        0x4883c478	                           add rsp, 0x78	       889	ihex.c	FUNCTION_11
0x400125c	              0x5b	                                 pop rbx	       889	ihex.c	FUNCTION_11
0x400125d	              0x5d	                                 pop rbp	       889	ihex.c	FUNCTION_11
0x400125e	            0x415c	                                 pop r12	       889	ihex.c	FUNCTION_11
0x4001260	            0x415d	                                 pop r13	       889	ihex.c	FUNCTION_11
0x4001262	            0x415e	                                 pop r14	       889	ihex.c	FUNCTION_11
0x4001264	            0x415f	                                 pop r15	       889	ihex.c	FUNCTION_11
0x4001266	              0xc3	                                     ret	       889	ihex.c	FUNCTION_11
0x4001267	    0x660f1f840000	                    nop word [rax + rax]	       889	ihex.c	FUNCTION_11
0x4001270	          0x4d01fe	                            add r14, r15	       852	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001273	          0x4d01fc	                            add r12, r15	       853	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001276	          0x4c29fb	                            sub rbx, r15	       783	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001279	     0xf8501feffff	                           jne 0x4001080	       783	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x400127f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       783	ihex.c	FUNCTION_11	FOR_1	WHILE_1
0x4001284	          0x488b00	                    mov rax, qword [rax]	       773	ihex.c	FUNCTION_11	FOR_1
0x4001287	          0x4885c0	                           test rax, rax	       773	ihex.c	FUNCTION_11	FOR_1
0x400128a	      0x4889442418	             mov qword [rsp + 0x18], rax	       773	ihex.c	FUNCTION_11	FOR_1
0x400128f	     0xf85cbfdffff	                           jne 0x4001060	       773	ihex.c	FUNCTION_11	FOR_1
0x4001295	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       858	ihex.c	FUNCTION_11	IF_11
0x400129a	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	       858	ihex.c	FUNCTION_11	IF_11
0x400129f	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       858	ihex.c	FUNCTION_11	IF_11
0x40012a6	          0x4885c0	                           test rax, rax	       858	ihex.c	FUNCTION_11	IF_11
0x40012a9	     0xf842e010000	                            je 0x40013dd	       858	ihex.c	FUNCTION_11	IF_11
0x40012af	    0x483dffff0f00	                        cmp rax, 0xfffff	       865	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012b5	     0xf8779020000	                            ja 0x4001534	       865	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012bb	          0x4889c1	                            mov rcx, rax	       867	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012be	          0x4889c2	                            mov rdx, rax	       869	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012c1	      0xc644242100	                mov byte [rsp + 0x21], 0	       868	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012c6	    0x81e100000f00	                        and ecx, 0xf0000	       867	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012cc	        0x48c1ea08	                              shr rdx, 8	       869	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012d0	        0x88442423	               mov byte [rsp + 0x23], al	       870	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012d4	        0x48c1e90c	                            shr rcx, 0xc	       867	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012d8	        0x88542422	               mov byte [rsp + 0x22], dl	       869	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012dc	      0xc64424303a	            mov byte [rsp + 0x30], 0x3a 	       737	ihex.c	FUNCTION_10
0x40012e1	          0x4889ce	                            mov rsi, rcx	       747	ihex.c	FUNCTION_10	FOR_1
0x40012e4	        0x884c2420	               mov byte [rsp + 0x20], cl	       867	ihex.c	FUNCTION_11	IF_11	IF_12
0x40012e8	      0xc644243130	            mov byte [rsp + 0x31], 0x30 	       738	ihex.c	FUNCTION_10
0x40012ed	        0x48c1ee04	                              shr rsi, 4	       747	ihex.c	FUNCTION_10	FOR_1
0x40012f1	      0xc644243234	            mov byte [rsp + 0x32], 0x34 	       738	ihex.c	FUNCTION_10
0x40012f6	      0xc644243330	            mov byte [rsp + 0x33], 0x30 	       739	ihex.c	FUNCTION_10
0x40012fb	     0xfb6b6000000	                   movzx esi, byte [rsi]	       747	ihex.c	FUNCTION_10	FOR_1
0x4001302	      0xc644243430	            mov byte [rsp + 0x34], 0x30 	       739	ihex.c	FUNCTION_10
0x4001307	      0xc644243530	            mov byte [rsp + 0x35], 0x30 	       740	ihex.c	FUNCTION_10
0x400130c	      0xc644243630	            mov byte [rsp + 0x36], 0x30 	       740	ihex.c	FUNCTION_10
0x4001311	      0xc644243730	            mov byte [rsp + 0x37], 0x30 	       741	ihex.c	FUNCTION_10
0x4001316	      0xc644243833	            mov byte [rsp + 0x38], 0x33 	       741	ihex.c	FUNCTION_10
0x400131b	      0x4088742439	              mov byte [rsp + 0x39], sil	       747	ihex.c	FUNCTION_10	FOR_1
0x4001320	     0xfb635000000	           movzx esi, byte [0x04001327] 	       747	ihex.c	FUNCTION_10	FOR_1
0x4001327	      0x408874243a	              mov byte [rsp + 0x3a], sil	       747	ihex.c	FUNCTION_10	FOR_1
0x400132c	      0x408874243b	              mov byte [rsp + 0x3b], sil	       747	ihex.c	FUNCTION_10	FOR_1
0x4001331	      0x408874243c	              mov byte [rsp + 0x3c], sil	       747	ihex.c	FUNCTION_10	FOR_1
0x4001336	            0x89d6	                            mov esi, edx	       747	ihex.c	FUNCTION_10	FOR_1
0x4001338	        0x40c0ee04	                              shr sil, 4	       747	ihex.c	FUNCTION_10	FOR_1
0x400133c	          0x83e60f	                            and esi, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x400133f	     0xfb6b6000000	                   movzx esi, byte [rsi]	       747	ihex.c	FUNCTION_10	FOR_1
0x4001346	      0x408874243d	              mov byte [rsp + 0x3d], sil	       747	ihex.c	FUNCTION_10	FOR_1
0x400134b	          0x4889d6	                            mov rsi, rdx	       747	ihex.c	FUNCTION_10	FOR_1
0x400134e	           0xfb6d2	                           movzx edx, dl	       748	ihex.c	FUNCTION_10	FOR_1
0x4001351	          0x83e60f	                            and esi, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x4001354	        0x8d540a07	                lea edx, [rdx + rcx + 7]	       748	ihex.c	FUNCTION_10	FOR_1
0x4001358	     0xfb6b6000000	                   movzx esi, byte [rsi]	       747	ihex.c	FUNCTION_10	FOR_1
0x400135f	      0x408874243e	              mov byte [rsp + 0x3e], sil	       747	ihex.c	FUNCTION_10	FOR_1
0x4001364	            0x89c1	                            mov ecx, eax	       747	ihex.c	FUNCTION_10	FOR_1
0x4001366	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x400136b	      0xbe15000000	                           mov esi, 0x15	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001370	          0xc0e904	                               shr cl, 4	       747	ihex.c	FUNCTION_10	FOR_1
0x4001373	      0xc64424430d	              mov byte [rsp + 0x43], 0xd	       752	ihex.c	FUNCTION_10
0x4001378	      0xc64424440a	              mov byte [rsp + 0x44], 0xa	       753	ihex.c	FUNCTION_10
0x400137d	          0x83e10f	                            and ecx, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x4001380	          0x4889df	                            mov rdi, rbx	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001383	     0xfb689000000	                   movzx ecx, byte [rcx]	       747	ihex.c	FUNCTION_10	FOR_1
0x400138a	        0x884c243f	               mov byte [rsp + 0x3f], cl	       747	ihex.c	FUNCTION_10	FOR_1
0x400138e	          0x4889c1	                            mov rcx, rax	       747	ihex.c	FUNCTION_10	FOR_1
0x4001391	           0xfb6c0	                           movzx eax, al	       751	ihex.c	FUNCTION_10
0x4001394	             0x1d0	                            add eax, edx	       751	ihex.c	FUNCTION_10
0x4001396	          0x83e10f	                            and ecx, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x4001399	            0xf7d8	                                 neg eax	       751	ihex.c	FUNCTION_10
0x400139b	     0xfb689000000	                   movzx ecx, byte [rcx]	       747	ihex.c	FUNCTION_10	FOR_1
0x40013a2	          0x4889c2	                            mov rdx, rax	       751	ihex.c	FUNCTION_10
0x40013a5	          0x83e00f	                            and eax, 0xf	       751	ihex.c	FUNCTION_10
0x40013a8	        0x48c1ea04	                              shr rdx, 4	       751	ihex.c	FUNCTION_10
0x40013ac	     0xfb680000000	                   movzx eax, byte [rax]	       751	ihex.c	FUNCTION_10
0x40013b3	          0x83e20f	                            and edx, 0xf	       751	ihex.c	FUNCTION_10
0x40013b6	     0xfb692000000	                   movzx edx, byte [rdx]	       751	ihex.c	FUNCTION_10
0x40013bd	        0x884c2440	               mov byte [rsp + 0x40], cl	       747	ihex.c	FUNCTION_10	FOR_1
0x40013c1	        0x88442442	               mov byte [rsp + 0x42], al	       751	ihex.c	FUNCTION_10
0x40013c5	        0x88542441	               mov byte [rsp + 0x41], dl	       751	ihex.c	FUNCTION_10
0x40013c9	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x40013ce	      0xe800000000	                          call 0x40013d3	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x40013d3	        0x4883f815	                           cmp rax, 0x15	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x40013d7	     0xf8565feffff	                           jne 0x4001242	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x40013dd	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x40013e2	      0xbe0d000000	                            mov esi, 0xd	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x40013e7	          0x4889df	                            mov rdi, rbx	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x40013ea	      0xc64424303a	            mov byte [rsp + 0x30], 0x3a 	       737	ihex.c	FUNCTION_10
0x40013ef	      0xc644243130	            mov byte [rsp + 0x31], 0x30 	       738	ihex.c	FUNCTION_10
0x40013f4	      0xc644243230	            mov byte [rsp + 0x32], 0x30 	       738	ihex.c	FUNCTION_10
0x40013f9	      0xc644243330	            mov byte [rsp + 0x33], 0x30 	       739	ihex.c	FUNCTION_10
0x40013fe	      0xc644243430	            mov byte [rsp + 0x34], 0x30 	       739	ihex.c	FUNCTION_10
0x4001403	      0xc644243530	            mov byte [rsp + 0x35], 0x30 	       740	ihex.c	FUNCTION_10
0x4001408	      0xc644243630	            mov byte [rsp + 0x36], 0x30 	       740	ihex.c	FUNCTION_10
0x400140d	      0xc644243730	            mov byte [rsp + 0x37], 0x30 	       741	ihex.c	FUNCTION_10
0x4001412	      0xc644243831	            mov byte [rsp + 0x38], 0x31 	       741	ihex.c	FUNCTION_10
0x4001417	      0xc644243946	            mov byte [rsp + 0x39], 0x46 	       751	ihex.c	FUNCTION_10
0x400141c	      0xc644243a46	            mov byte [rsp + 0x3a], 0x46 	       751	ihex.c	FUNCTION_10
0x4001421	      0xc644243b0d	              mov byte [rsp + 0x3b], 0xd	       752	ihex.c	FUNCTION_10
0x4001426	      0xc644243c0a	              mov byte [rsp + 0x3c], 0xa	       753	ihex.c	FUNCTION_10
0x400142b	      0xe800000000	                          call 0x4001430	       756	ihex.c	FUNCTION_10	IF_1	CALL_1
0x4001430	        0x4883f80d	                            cmp rax, 0xd	       888	ihex.c	FUNCTION_11
0x4001434	           0xf94c0	                                 sete al	       888	ihex.c	FUNCTION_11
0x4001437	           0xfb6c0	                           movzx eax, al	       888	ihex.c	FUNCTION_11
0x400143a	      0xe905feffff	                           jmp 0x4001244	       888	ihex.c	FUNCTION_11
0x400143f	              0x90	                                     nop	       888	ihex.c	FUNCTION_11
0x4001440	          0x4489e8	                           mov eax, r13d	       888	ihex.c	FUNCTION_11
0x4001443	      0x4c8d442430	                    lea r8, [rsp + 0x30]	       888	ihex.c	FUNCTION_11
0x4001448	      0xe9aefcffff	                           jmp 0x40010fb	       888	ihex.c	FUNCTION_11
0x400144d	           0xf1f00	                         nop dword [rax]	       888	ihex.c	FUNCTION_11
0x4001450	          0x4d85ed	                           test r13, r13	       816	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5
0x4001453	            0x757f	                           jne 0x40014d4	       816	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5
0x4001455	          0x4c89f5	                            mov rbp, r14	       825	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1
0x4001458	    0x81e50000ffff	                     and ebp, 0xffff0000	       825	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1
0x400145e	    0x488d85ffff00	                 lea rax, [rbp + 0xffff]	       826	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7
0x4001465	          0x4c39f0	                            cmp rax, r14	       826	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7
0x4001468	     0xf8291000000	                            jb 0x40014ff	       826	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7
0x400146e	          0x4889e8	                            mov rax, rbp	       836	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1
0x4001471	      0x4c8d442430	                    lea r8, [rsp + 0x30]	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x4001476	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x400147b	        0x48c1e818	                           shr rax, 0x18	       836	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1
0x400147f	      0xbe04000000	                              mov esi, 4	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x4001484	        0x88442430	               mov byte [rsp + 0x30], al	       836	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1
0x4001488	          0x4889e8	                            mov rax, rbp	       837	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1
0x400148b	          0x4c89c2	                             mov rdx, r8	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x400148e	        0x48c1e810	                           shr rax, 0x10	       837	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1
0x4001492	      0x4c89442408	                 mov qword [rsp + 8], r8	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x4001497	        0x88442431	               mov byte [rsp + 0x31], al	       837	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1
0x400149b	      0xe820edffff	  call sym.ihex_write_record.constprop.4	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x40014a0	            0x85c0	                           test eax, eax	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x40014a2	     0xf849afdffff	                            je 0x4001242	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x40014a8	            0x31c0	                            xor eax, eax	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x40014aa	          0x4531ed	                          xor r13d, r13d	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x40014ad	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x40014b2	      0xe944fcffff	                           jmp 0x40010fb	       838	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_8	CALL_7
0x40014b7	        0x498d5009	                       lea rdx, [r8 + 9]	       745	ihex.c	FUNCTION_10	FOR_1
0x40014bb	      0xe934fdffff	                           jmp 0x40011f4	       745	ihex.c	FUNCTION_10	FOR_1
0x40014c0	      0xbe20030000	                          mov esi, 0x320	       800	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	CALL_1
0x40014c5	      0xbf00000000	                              mov edi, 0	       800	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	CALL_1
0x40014ca	      0xe800000000	                          call 0x40014cf	       800	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	CALL_1
0x40014cf	      0xe9e1fbffff	                           jmp 0x40010b5	       800	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	IF_3	CALL_1
0x40014d4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       820	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5	IF_6	CALL_3
0x40014d9	      0x488d542430	                   lea rdx, [rsp + 0x30]	       820	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5	IF_6	CALL_3
0x40014de	      0xbe02000000	                              mov esi, 2	       820	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5	IF_6	CALL_3
0x40014e3	      0xc644243000	                mov byte [rsp + 0x30], 0	       818	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5
0x40014e8	      0xc644243100	                mov byte [rsp + 0x31], 0	       819	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5
0x40014ed	      0xe8ceecffff	  call sym.ihex_write_record.constprop.4	       820	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5	IF_6	CALL_3
0x40014f2	            0x85c0	                           test eax, eax	       820	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5	IF_6	CALL_3
0x40014f4	     0xf855bffffff	                           jne 0x4001455	       820	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5	IF_6	CALL_3
0x40014fa	      0xe943fdffff	                           jmp 0x4001242	       820	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_5	IF_6	CALL_3
0x40014ff	      0xba05000000	                              mov edx, 5	       830	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_5
0x4001504	      0xbe00000000	                              mov esi, 0	       830	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_5
0x4001509	      0xbf00000000	                              mov edi, 0	       830	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_5
0x400150e	      0xe800000000	                          call 0x4001513	       830	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_5
0x4001513	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       828	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_4
0x4001518	          0x4889c7	                            mov rdi, rax	       828	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_4
0x400151b	          0x4c89f2	                            mov rdx, r14	       828	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_4
0x400151e	            0x31c0	                            xor eax, eax	       828	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_4
0x4001520	      0xe800000000	                          call 0x4001525	       828	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_4
0x4001525	      0xbf11000000	                           mov edi, 0x11	       833	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_6
0x400152a	      0xe800000000	                          call 0x400152f	       833	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7	CALL_6
0x400152f	      0xe90efdffff	                           jmp 0x4001242	       834	ihex.c	FUNCTION_11	FOR_1	WHILE_1	IF_2	ELSE_1	IF_7
0x4001534	          0x4889c6	                            mov rsi, rax	       876	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x4001537	          0x4889c2	                            mov rdx, rax	       877	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x400153a	          0x4889c1	                            mov rcx, rax	       878	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x400153d	        0x48c1ee18	                           shr rsi, 0x18	       876	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x4001541	        0x48c1ea10	                           shr rdx, 0x10	       877	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x4001545	        0x48c1e908	                              shr rcx, 8	       878	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x4001549	            0x89f7	                            mov edi, esi	       747	ihex.c	FUNCTION_10	FOR_1
0x400154b	      0x4088742420	              mov byte [rsp + 0x20], sil	       876	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x4001550	        0x88542421	               mov byte [rsp + 0x21], dl	       877	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x4001554	        0x40c0ef04	                              shr dil, 4	       747	ihex.c	FUNCTION_10	FOR_1
0x4001558	        0x884c2422	               mov byte [rsp + 0x22], cl	       878	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x400155c	        0x88442423	               mov byte [rsp + 0x23], al	       879	ihex.c	FUNCTION_11	IF_11	ELSE_2
0x4001560	          0x83e70f	                            and edi, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x4001563	      0xc64424303a	            mov byte [rsp + 0x30], 0x3a 	       737	ihex.c	FUNCTION_10
0x4001568	      0xc644243130	            mov byte [rsp + 0x31], 0x30 	       738	ihex.c	FUNCTION_10
0x400156d	     0xfb6bf000000	                   movzx edi, byte [rdi]	       747	ihex.c	FUNCTION_10	FOR_1
0x4001574	      0xc644243234	            mov byte [rsp + 0x32], 0x34 	       738	ihex.c	FUNCTION_10
0x4001579	      0xc644243330	            mov byte [rsp + 0x33], 0x30 	       739	ihex.c	FUNCTION_10
0x400157e	      0xc644243430	            mov byte [rsp + 0x34], 0x30 	       739	ihex.c	FUNCTION_10
0x4001583	      0xc644243530	            mov byte [rsp + 0x35], 0x30 	       740	ihex.c	FUNCTION_10
0x4001588	      0xc644243630	            mov byte [rsp + 0x36], 0x30 	       740	ihex.c	FUNCTION_10
0x400158d	      0xc644243730	            mov byte [rsp + 0x37], 0x30 	       741	ihex.c	FUNCTION_10
0x4001592	      0xc644243835	            mov byte [rsp + 0x38], 0x35 	       741	ihex.c	FUNCTION_10
0x4001597	      0x40887c2439	              mov byte [rsp + 0x39], dil	       747	ihex.c	FUNCTION_10	FOR_1
0x400159c	          0x4889f7	                            mov rdi, rsi	       747	ihex.c	FUNCTION_10	FOR_1
0x400159f	        0x400fb6f6	                          movzx esi, sil	       748	ihex.c	FUNCTION_10	FOR_1
0x40015a3	          0x83e70f	                            and edi, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x40015a6	     0xfb6bf000000	                   movzx edi, byte [rdi]	       747	ihex.c	FUNCTION_10	FOR_1
0x40015ad	      0x40887c243a	              mov byte [rsp + 0x3a], dil	       747	ihex.c	FUNCTION_10	FOR_1
0x40015b2	            0x89d7	                            mov edi, edx	       747	ihex.c	FUNCTION_10	FOR_1
0x40015b4	        0x40c0ef04	                              shr dil, 4	       747	ihex.c	FUNCTION_10	FOR_1
0x40015b8	          0x83e70f	                            and edi, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x40015bb	     0xfb6bf000000	                   movzx edi, byte [rdi]	       747	ihex.c	FUNCTION_10	FOR_1
0x40015c2	      0x40887c243b	              mov byte [rsp + 0x3b], dil	       747	ihex.c	FUNCTION_10	FOR_1
0x40015c7	          0x4889d7	                            mov rdi, rdx	       747	ihex.c	FUNCTION_10	FOR_1
0x40015ca	           0xfb6d2	                           movzx edx, dl	       748	ihex.c	FUNCTION_10	FOR_1
0x40015cd	        0x8d541609	                lea edx, [rsi + rdx + 9]	       748	ihex.c	FUNCTION_10	FOR_1
0x40015d1	            0x89ce	                            mov esi, ecx	       747	ihex.c	FUNCTION_10	FOR_1
0x40015d3	          0x83e70f	                            and edi, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x40015d6	        0x40c0ee04	                              shr sil, 4	       747	ihex.c	FUNCTION_10	FOR_1
0x40015da	     0xfb6bf000000	                   movzx edi, byte [rdi]	       747	ihex.c	FUNCTION_10	FOR_1
0x40015e1	          0x83e60f	                            and esi, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x40015e4	     0xfb6b6000000	                   movzx esi, byte [rsi]	       747	ihex.c	FUNCTION_10	FOR_1
0x40015eb	      0x40887c243c	              mov byte [rsp + 0x3c], dil	       747	ihex.c	FUNCTION_10	FOR_1
0x40015f0	      0x408874243d	              mov byte [rsp + 0x3d], sil	       747	ihex.c	FUNCTION_10	FOR_1
0x40015f5	          0x4889ce	                            mov rsi, rcx	       747	ihex.c	FUNCTION_10	FOR_1
0x40015f8	           0xfb6c9	                           movzx ecx, cl	       748	ihex.c	FUNCTION_10	FOR_1
0x40015fb	          0x83e60f	                            and esi, 0xf	       747	ihex.c	FUNCTION_10	FOR_1
0x40015fe	             0x1ca	                            add edx, ecx	       748	ihex.c	FUNCTION_10	FOR_1
0x4001600	     0xfb6b6000000	                   movzx esi, byte [rsi]	       747	ihex.c	FUNCTION_10	FOR_1
0x4001607	      0x408874243e	              mov byte [rsp + 0x3e], sil	       747	ihex.c	FUNCTION_10	FOR_1
0x400160c	      0xe953fdffff	                           jmp 0x4001364	       747	ihex.c	FUNCTION_10	FOR_1
0x4001611	      0xe800000000	                  call section_end..data	       889	ihex.c	FUNCTION_11
