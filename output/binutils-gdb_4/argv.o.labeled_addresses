buildargv	SWITCH,0:DO,1:WHILE,1:IF,12:ELSE,10:FOR,0:functions,0:CALL,9	149
0x4000120	            0x4157	                                push r15	       177	argv.c	FUNCTION_5
0x4000122	            0x4156	                                push r14	       177	argv.c	FUNCTION_5
0x4000124	            0x4155	                                push r13	       177	argv.c	FUNCTION_5
0x4000126	            0x4154	                                push r12	       177	argv.c	FUNCTION_5
0x4000128	              0x55	                                push rbp	       177	argv.c	FUNCTION_5
0x4000129	              0x53	                                push rbx	       177	argv.c	FUNCTION_5
0x400012a	        0x4883ec28	                           sub rsp, 0x28	       177	argv.c	FUNCTION_5
0x400012e	          0x4885ff	                           test rdi, rdi	       188	argv.c	FUNCTION_5	IF_1
0x4000131	     0xf8412020000	                            je 0x4000349	       188	argv.c	FUNCTION_5	IF_1
0x4000137	          0x4889fb	                            mov rbx, rdi	       188	argv.c	FUNCTION_5	IF_1
0x400013a	          0x4531e4	                          xor r12d, r12d	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x400013d	          0x4531ed	                          xor r13d, r13d	       185	argv.c	FUNCTION_5
0x4000140	      0xe800000000	                          call 0x4000145	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000145	        0x488d7801	                      lea rdi, [rax + 1]	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000149	            0x31ed	                            xor ebp, ebp	       182	argv.c	FUNCTION_5
0x400014b	          0x4531ff	                          xor r15d, r15d	       181	argv.c	FUNCTION_5
0x400014e	          0x4531f6	                          xor r14d, r14d	       180	argv.c	FUNCTION_5
0x4000151	      0xe800000000	                          call 0x4000156	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000156	           0xfb613	                   movzx edx, byte [rbx]	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000159	      0x4889442410	             mov qword [rsp + 0x10], rax	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x400015e	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       184	argv.c	FUNCTION_5
0x4000166	          0x4889d0	                            mov rax, rdx	       184	argv.c	FUNCTION_5
0x4000169	     0xfb794120000	             movzx edx, word [rdx + rdx]	       184	argv.c	FUNCTION_5
0x4000171	     0xf1f80000000	                         nop dword [rax]	       184	argv.c	FUNCTION_5
0x4000178	          0x83e240	                           and edx, 0x40	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400017b	          0x4489e1	                           mov ecx, r12d	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400017e	            0x7414	                            je 0x4000194	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000180	        0x4883c301	                              add rbx, 1	       123	argv.c	FUNCTION_3	WHILE_1
0x4000184	           0xfb613	                   movzx edx, byte [rbx]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000187	    0xf68412000000	            test byte [rdx + rdx], 0x40 	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400018f	          0x4889d0	                            mov rax, rdx	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000192	            0x75ec	                           jne 0x4000180	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000194	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x4000198	            0x85ff	                           test edi, edi	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x400019a	            0x740c	                            je 0x40001a8	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x400019c	          0x8d57ff	                      lea edx, [rdi - 1]	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x400019f	      0x4b8d74e500	                  lea rsi, [r13 + r12*8]	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001a4	            0x39d1	                            cmp ecx, edx	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001a6	            0x7c30	                            jl 0x40001d8	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001a8	          0x4d85ed	                           test r13, r13	       201	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x40001ab	     0xf8476010000	                            je 0x4000327	       201	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x40001b1	        0xd164240c	                shl dword [rsp + 0xc], 1	       208	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1
0x40001b5	          0x4c89ef	                            mov rdi, r13	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40001b8	      0x486374240c	          movsxd rsi, dword [rsp + 0xc] 	       208	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1
0x40001bd	        0x48c1e603	                              shl rsi, 3	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40001c1	      0xe800000000	                          call 0x40001c6	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40001c6	          0x4989c5	                            mov r13, rax	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40001c9	      0x4b8d74e500	                  lea rsi, [r13 + r12*8]	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001ce	    0x48c706000000	                      mov qword [rsi], 0	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001d5	           0xfb603	                   movzx eax, byte [rbx]	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001d8	            0x84c0	                             test al, al	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001da	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001df	            0x7522	                           jne 0x4000203	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001e1	      0xe95b010000	                           jmp 0x4000341	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001f0	            0x8802	                      mov byte [rdx], al	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x40001f2	            0x31ed	                            xor ebp, ebp	       226	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x40001f4	        0x4883c201	                              add rdx, 1	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x40001f8	        0x4883c301	                              add rbx, 1	       270	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2
0x40001fc	           0xfb603	                   movzx eax, byte [rbx]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001ff	            0x84c0	                             test al, al	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000201	            0x744d	                            je 0x4000250	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000203	           0xfb6c8	                           movzx ecx, al	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000206	    0xf68409000000	            test byte [rcx + rcx], 0x40 	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x400020e	            0x740e	                            je 0x400021e	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000210	          0x4489f1	                           mov ecx, r14d	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000213	          0x4409f9	                            or ecx, r15d	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000216	             0x9e9	                             or ecx, ebp	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000218	     0xf8402010000	                            je 0x4000320	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x400021e	            0x85ed	                           test ebp, ebp	       224	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000220	            0x75ce	                           jne 0x40001f0	       224	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000222	            0x3c5c	                            cmp al, 0x5c	       229	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x4000224	     0xf84ae000000	                            je 0x40002d8	       229	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x400022a	          0x4585f6	                         test r14d, r14d	       233	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7
0x400022d	     0xf848d000000	                            je 0x40002c0	       233	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7
0x4000233	            0x3c27	                            cmp al, 0x27	       235	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000235	     0xf84c5000000	                            je 0x4000300	       235	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x400023b	        0x4883c301	                              add rbx, 1	       270	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2
0x400023f	            0x8802	                      mov byte [rdx], al	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x4000241	        0x4883c201	                              add rdx, 1	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x4000245	           0xfb603	                   movzx eax, byte [rbx]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000248	            0x84c0	                             test al, al	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x400024a	            0x75b7	                           jne 0x4000203	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x400024c	         0xf1f4000	                         nop dword [rax]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000250	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000255	          0xc60200	                       mov byte [rdx], 0	       273	argv.c	FUNCTION_5	IF_1	DO_1
0x4000258	      0x4889742418	             mov qword [rsp + 0x18], rsi	       273	argv.c	FUNCTION_5	IF_1	DO_1
0x400025d	      0xe800000000	                          call 0x4000262	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000262	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000267	      0x4d8d4c2401	                       lea r9, [r12 + 1]	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x400026c	          0x488906	                    mov qword [rsi], rax	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x400026f	    0x4bc744cd0000	               mov qword [r13 + r9*8], 0	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x4000278	            0xeb0a	                           jmp 0x4000284	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x400027a	    0x660f1f440000	                    nop word [rax + rax]	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x4000280	        0x4883c301	                              add rbx, 1	       123	argv.c	FUNCTION_3	WHILE_1
0x4000284	           0xfb613	                   movzx edx, byte [rbx]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000287	          0x4889d0	                            mov rax, rdx	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400028a	     0xfb794120000	             movzx edx, word [rdx + rdx]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000292	          0xf6c240	                           test dl, 0x40	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000295	            0x75e9	                           jne 0x4000280	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000297	            0x84c0	                             test al, al	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x4000299	          0x4d89cc	                             mov r12, r9	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x400029c	     0xf85d6feffff	                           jne 0x4000178	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x40002a2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       282	argv.c	FUNCTION_5	IF_1	CALL_9
0x40002a7	      0xe800000000	                          call 0x40002ac	       282	argv.c	FUNCTION_5	IF_1	CALL_9
0x40002ac	        0x4883c428	                           add rsp, 0x28	       285	argv.c	FUNCTION_5
0x40002b0	          0x4c89e8	                            mov rax, r13	       285	argv.c	FUNCTION_5
0x40002b3	              0x5b	                                 pop rbx	       285	argv.c	FUNCTION_5
0x40002b4	              0x5d	                                 pop rbp	       285	argv.c	FUNCTION_5
0x40002b5	            0x415c	                                 pop r12	       285	argv.c	FUNCTION_5
0x40002b7	            0x415d	                                 pop r13	       285	argv.c	FUNCTION_5
0x40002b9	            0x415e	                                 pop r14	       285	argv.c	FUNCTION_5
0x40002bb	            0x415f	                                 pop r15	       285	argv.c	FUNCTION_5
0x40002bd	              0xc3	                                     ret	       285	argv.c	FUNCTION_5
0x40002be	            0x6690	                                     nop	       285	argv.c	FUNCTION_5
0x40002c0	          0x4585ff	                         test r15d, r15d	       244	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9
0x40002c3	            0x7423	                            je 0x40002e8	       244	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9
0x40002c5	            0x3c22	                            cmp al, 0x22	       246	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002c7	     0xf856effffff	                           jne 0x400023b	       246	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002cd	          0x4531ff	                          xor r15d, r15d	       248	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002d0	      0xe923ffffff	                           jmp 0x40001f8	       248	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002d5	           0xf1f00	                         nop dword [rax]	       248	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002d8	      0xbd01000000	                              mov ebp, 1	       231	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x40002dd	      0xe916ffffff	                           jmp 0x40001f8	       231	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x40002e2	    0x660f1f440000	                    nop word [rax + rax]	       231	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x40002e8	            0x3c27	                            cmp al, 0x27	       257	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40002ea	            0x7424	                            je 0x4000310	       257	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40002ec	            0x3c22	                            cmp al, 0x22	       261	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40002ee	     0xf8547ffffff	                           jne 0x400023b	       261	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40002f4	    0x41bf01000000	                             mov r15d, 1	       263	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40002fa	      0xe9f9feffff	                           jmp 0x40001f8	       263	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40002ff	              0x90	                                     nop	       263	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x4000300	          0x4531f6	                          xor r14d, r14d	       237	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000303	      0xe9f0feffff	                           jmp 0x40001f8	       237	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000308	     0xf1f84000000	                   nop dword [rax + rax]	       237	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000310	    0x41be01000000	                             mov r14d, 1	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x4000316	      0xe9ddfeffff	                           jmp 0x40001f8	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x400031b	       0xf1f440000	                   nop dword [rax + rax]	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x4000320	            0x31ed	                            xor ebp, ebp	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x4000322	      0xe929ffffff	                           jmp 0x4000250	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x4000327	      0xbf40000000	                           mov edi, 0x40	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x400032c	      0xe800000000	                          call 0x4000331	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000331	    0xc744240c0800	                mov dword [rsp + 0xc], 8	       203	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x4000339	          0x4989c5	                            mov r13, rax	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x400033c	      0xe988feffff	                           jmp 0x40001c9	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000341	          0x4889d7	                            mov rdi, rdx	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000344	      0xe90cffffff	                           jmp 0x4000255	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000349	          0x4531ed	                          xor r13d, r13d	       185	argv.c	FUNCTION_5
0x400034c	      0xe95bffffff	                           jmp 0x40002ac	       185	argv.c	FUNCTION_5
writeargv	SWITCH,0:DO,0:WHILE,2:IF,5:ELSE,0:FOR,0:functions,0:CALL,4	59
0x4000360	          0x4885f6	                           test rsi, rsi	       304	argv.c	FUNCTION_6	IF_1
0x4000363	     0xf84a5000000	                            je 0x400040e	       304	argv.c	FUNCTION_6	IF_1
0x4000369	            0x4156	                                push r14	       301	argv.c	FUNCTION_6
0x400036b	            0x4155	                                push r13	       301	argv.c	FUNCTION_6
0x400036d	          0x4989fd	                            mov r13, rdi	       301	argv.c	FUNCTION_6
0x4000370	            0x4154	                                push r12	       301	argv.c	FUNCTION_6
0x4000372	              0x55	                                push rbp	       301	argv.c	FUNCTION_6
0x4000373	    0x49bc21000000	          movabs r12, 0x400000000000021 	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x400037d	              0x53	                                push rbx	       301	argv.c	FUNCTION_6
0x400037e	          0x488b1f	                    mov rbx, qword [rdi]	       307	argv.c	FUNCTION_6	WHILE_1
0x4000381	          0x4889f5	                            mov rbp, rsi	       307	argv.c	FUNCTION_6	WHILE_1
0x4000384	          0x4885db	                           test rbx, rbx	       307	argv.c	FUNCTION_6	WHILE_1
0x4000387	            0x754b	                           jne 0x40003d4	       307	argv.c	FUNCTION_6	WHILE_1
0x4000389	            0xeb6f	                           jmp 0x40003fa	       307	argv.c	FUNCTION_6	WHILE_1
0x400038b	       0xf1f440000	                   nop dword [rax + rax]	       307	argv.c	FUNCTION_6	WHILE_1
0x4000390	           0xfb6d0	                           movzx edx, al	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000393	        0x440fbef0	                          movsx r14d, al	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000397	    0xf68412000000	            test byte [rdx + rdx], 0x40 	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x400039f	            0x750d	                           jne 0x40003ae	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40003a1	          0x83e822	                           sub eax, 0x22	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40003a4	            0x3c3a	                            cmp al, 0x3a	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40003a6	            0x7718	                            ja 0x40003c0	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40003a8	        0x490fa3c4	                             bt r12, rax	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40003ac	            0x7312	                           jae 0x40003c0	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x40003ae	          0x4889ee	                            mov rsi, rbp	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003b1	      0xbf5c000000	                           mov edi, 0x5c	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003b6	      0xe800000000	                          call 0x40003bb	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003bb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003be	            0x7440	                            je 0x4000400	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003c0	          0x4889ee	                            mov rsi, rbp	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003c3	          0x4489f7	                           mov edi, r14d	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003c6	      0xe800000000	                          call 0x40003cb	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003cb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003ce	            0x7430	                            je 0x4000400	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003d0	        0x4883c301	                              add rbx, 1	       327	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40003d4	           0xfb603	                   movzx eax, byte [rbx]	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40003d7	            0x84c0	                             test al, al	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40003d9	            0x75b5	                           jne 0x4000390	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40003db	          0x4889ee	                            mov rsi, rbp	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003de	      0xbf0a000000	                            mov edi, 0xa	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003e3	      0xe800000000	                          call 0x40003e8	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003e8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003eb	            0x7413	                            je 0x4000400	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003ed	        0x4983c508	                              add r13, 8	       335	argv.c	FUNCTION_6	WHILE_1
0x40003f1	        0x498b5d00	                    mov rbx, qword [r13]	       307	argv.c	FUNCTION_6	WHILE_1
0x40003f5	          0x4885db	                           test rbx, rbx	       307	argv.c	FUNCTION_6	WHILE_1
0x40003f8	            0x75da	                           jne 0x40003d4	       307	argv.c	FUNCTION_6	WHILE_1
0x40003fa	            0x31c0	                            xor eax, eax	       302	argv.c	FUNCTION_6
0x40003fc	            0xeb07	                           jmp 0x4000405	       302	argv.c	FUNCTION_6
0x40003fe	            0x6690	                                     nop	       302	argv.c	FUNCTION_6
0x4000400	      0xb801000000	                              mov eax, 1	       305	argv.c	FUNCTION_6	IF_1
0x4000405	              0x5b	                                 pop rbx	       340	argv.c	FUNCTION_6
0x4000406	              0x5d	                                 pop rbp	       340	argv.c	FUNCTION_6
0x4000407	            0x415c	                                 pop r12	       340	argv.c	FUNCTION_6
0x4000409	            0x415d	                                 pop r13	       340	argv.c	FUNCTION_6
0x400040b	            0x415e	                                 pop r14	       340	argv.c	FUNCTION_6
0x400040d	              0xc3	                                     ret	       340	argv.c	FUNCTION_6
0x400040e	      0xb801000000	                              mov eax, 1	       305	argv.c	FUNCTION_6	IF_1
0x4000413	              0xc3	                                     ret	       340	argv.c	FUNCTION_6
freeargv	SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:FOR,1:functions,0:CALL,2	23
0x40000d0	          0x4885ff	                           test rdi, rdi	       108	argv.c	FUNCTION_2	IF_1
0x40000d3	            0x743b	                            je 0x4000110	       108	argv.c	FUNCTION_2	IF_1
0x40000d5	              0x55	                                push rbp	       105	argv.c	FUNCTION_2
0x40000d6	              0x53	                                push rbx	       105	argv.c	FUNCTION_2
0x40000d7	          0x4889fd	                            mov rbp, rdi	       105	argv.c	FUNCTION_2
0x40000da	          0x4889eb	                            mov rbx, rbp	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000dd	        0x4883ec08	                              sub rsp, 8	       105	argv.c	FUNCTION_2
0x40000e1	          0x488b3f	                    mov rdi, qword [rdi]	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000e4	          0x4885ff	                           test rdi, rdi	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000e7	            0x7418	                            je 0x4000101	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000e9	     0xf1f80000000	                         nop dword [rax]	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000f0	        0x4883c308	                              add rbx, 8	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000f4	      0xe800000000	                          call 0x40000f9	       112	argv.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40000f9	          0x488b3b	                    mov rdi, qword [rbx]	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000fc	          0x4885ff	                           test rdi, rdi	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000ff	            0x75ef	                           jne 0x40000f0	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x4000101	        0x4883c408	                              add rsp, 8	       116	argv.c	FUNCTION_2
0x4000105	          0x4889ef	                            mov rdi, rbp	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x4000108	              0x5b	                                 pop rbx	       116	argv.c	FUNCTION_2
0x4000109	              0x5d	                                 pop rbp	       116	argv.c	FUNCTION_2
0x400010a	      0xe900000000	                           jmp 0x400010f	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x400010f	              0x90	                                     nop	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x4000110	            0xf3c3	                                     ret	       114	argv.c	FUNCTION_2	IF_1	CALL_2
countargv	SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:FOR,1:functions,0:CALL,0	15
0x4000870	          0x4885ff	                           test rdi, rdi	       501	argv.c	FUNCTION_8	IF_1
0x4000873	            0x742b	                            je 0x40008a0	       501	argv.c	FUNCTION_8	IF_1
0x4000875	        0x48833f00	                      cmp qword [rdi], 0	       503	argv.c	FUNCTION_8	FOR_1
0x4000879	            0x7425	                            je 0x40008a0	       503	argv.c	FUNCTION_8	FOR_1
0x400087b	        0x4883c708	                              add rdi, 8	       503	argv.c	FUNCTION_8	FOR_1
0x400087f	            0x31c0	                            xor eax, eax	       503	argv.c	FUNCTION_8	FOR_1
0x4000881	     0xf1f80000000	                         nop dword [rax]	       503	argv.c	FUNCTION_8	FOR_1
0x4000888	        0x4883c708	                              add rdi, 8	       503	argv.c	FUNCTION_8	FOR_1
0x400088c	          0x83c001	                              add eax, 1	       503	argv.c	FUNCTION_8	FOR_1
0x400088f	      0x48837ff800	                  cmp qword [rdi - 8], 0	       503	argv.c	FUNCTION_8	FOR_1
0x4000894	            0x75f2	                           jne 0x4000888	       503	argv.c	FUNCTION_8	FOR_1
0x4000896	            0xf3c3	                                     ret	       503	argv.c	FUNCTION_8	FOR_1
0x4000898	     0xf1f84000000	                   nop dword [rax + rax]	       503	argv.c	FUNCTION_8	FOR_1
0x40008a0	            0x31c0	                            xor eax, eax	       502	argv.c	FUNCTION_8	IF_1
0x40008a2	              0xc3	                                     ret	       506	argv.c	FUNCTION_8
