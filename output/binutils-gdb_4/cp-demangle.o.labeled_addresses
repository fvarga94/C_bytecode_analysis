d_substitution	CALL,9:IF,14:SWITCH,0:ELSE,4:WHILE,0:FOR,1:DO,1:functions,0	196
0x4000950	            0x4154	                                push r12	      3837	cp-demangle.c	FUNCTION_60
0x4000952	              0x55	                                push rbp	      3837	cp-demangle.c	FUNCTION_60
0x4000953	              0x53	                                push rbx	      3837	cp-demangle.c	FUNCTION_60
0x4000954	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4000958	          0x803853	                    cmp byte [rax], 0x53	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x400095b	            0x740b	                            je 0x4000968	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x400095d	            0x31c0	                            xor eax, eax	      3841	cp-demangle.c	FUNCTION_60	IF_1
0x400095f	              0x5b	                                 pop rbx	      3931	cp-demangle.c	FUNCTION_60
0x4000960	              0x5d	                                 pop rbp	      3931	cp-demangle.c	FUNCTION_60
0x4000961	            0x415c	                                 pop r12	      3931	cp-demangle.c	FUNCTION_60
0x4000963	              0xc3	                                     ret	      3931	cp-demangle.c	FUNCTION_60
0x4000964	         0xf1f4000	                         nop dword [rax]	      3931	cp-demangle.c	FUNCTION_60
0x4000968	        0x488d4801	                      lea rcx, [rax + 1]	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x400096c	        0x48894f18	             mov qword [rdi + 0x18], rcx	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4000970	        0x80780100	                   cmp byte [rax + 1], 0	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4000974	     0xf8486000000	                            je 0x4000a00	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x400097a	        0x488d4802	                      lea rcx, [rax + 2]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x400097e	        0x48894f18	             mov qword [rdi + 0x18], rcx	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4000982	         0xfbe4001	               movsx eax, byte [rax + 1]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4000986	          0x8d50d0	                   lea edx, [rax - 0x30]	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000989	          0x80fa09	                               cmp dl, 9	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x400098c	            0x7608	                           jbe 0x4000996	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x400098e	            0x3c5f	                            cmp al, 0x5f	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000990	     0xf8579020000	                           jne 0x4000c0f	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000996	            0x31d2	                            xor edx, edx	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000998	            0x3c5f	                            cmp al, 0x5f	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x400099a	     0xf84d8010000	                            je 0x4000b78	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x40009a0	          0x8d48d0	                   lea ecx, [rax - 0x30]	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009a3	          0x80f909	                               cmp cl, 9	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009a6	            0x773d	                            ja 0x40009e5	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009a8	     0xf1f84000000	                   nop dword [rax + rax]	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009b0	          0x8d0cd2	                  lea ecx, [rdx + rdx*8]	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009b3	        0x8d4c88d0	           lea ecx, [rax + rcx*4 - 0x30]	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009b7	            0x39ca	                            cmp edx, ecx	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x40009b9	            0x77a2	                            ja 0x400095d	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x40009bb	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40009bf	          0x803800	                       cmp byte [rax], 0	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40009c2	     0xf8480010000	                            je 0x4000b48	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40009c8	        0x488d5001	                      lea rdx, [rax + 1]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40009cc	        0x48895718	             mov qword [rdi + 0x18], rdx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40009d0	           0xfbe00	                   movsx eax, byte [rax]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40009d3	            0x3c5f	                            cmp al, 0x5f	      3866	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x40009d5	     0xf847d010000	                            je 0x4000b58	      3866	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x40009db	            0x89ca	                            mov edx, ecx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40009dd	          0x8d48d0	                   lea ecx, [rax - 0x30]	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009e0	          0x80f909	                               cmp cl, 9	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009e3	            0x76cb	                           jbe 0x40009b0	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40009e5	          0x8d48bf	                   lea ecx, [rax - 0x41]	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x40009e8	          0x80f919	                            cmp cl, 0x19	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x40009eb	     0xf876cffffff	                            ja 0x400095d	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x40009f1	          0x8d0cd2	                  lea ecx, [rdx + rdx*8]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x40009f4	        0x8d4c88c9	           lea ecx, [rax + rcx*4 - 0x37]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x40009f8	            0xebbd	                           jmp 0x40009b7	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x40009fa	    0x660f1f440000	                    nop word [rax + rax]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4000a00	            0x31c0	                            xor eax, eax	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4000a02	          0x8b5710	            mov edx, dword [rdi + 0x10] 	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4000a05	          0x4531c0	                            xor r8d, r8d	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4000a08	          0x83e208	                              and edx, 8	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4000a0b	        0x410f95c0	                               setne r8b	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4000a0f	            0x7516	                           jne 0x4000a27	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4000a11	            0x85f6	                           test esi, esi	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4000a13	            0x7412	                            je 0x4000a27	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4000a15	           0xfb619	                   movzx ebx, byte [rcx]	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4000a18	          0x8d53bd	                   lea edx, [rbx - 0x43]	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4000a1b	          0x80fa01	                               cmp dl, 1	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4000a1e	      0xba01000000	                              mov edx, 1	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4000a23	        0x440f46c2	                         cmovbe r8d, edx	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4000a27	            0x3c74	                            cmp al, 0x74	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a29	     0xf84b8010000	                            je 0x4000be7	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a2f	            0x3c61	                            cmp al, 0x61	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a31	     0xf84a6010000	                            je 0x4000bdd	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a37	            0x3c62	                            cmp al, 0x62	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a39	     0xf843d010000	                            je 0x4000b7c	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a3f	            0x3c73	                            cmp al, 0x73	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a41	     0xf84b4010000	                            je 0x4000bfb	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a47	            0x3c69	                            cmp al, 0x69	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a49	     0xf84a2010000	                            je 0x4000bf1	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a4f	            0x3c6f	                            cmp al, 0x6f	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a51	     0xf84ae010000	                            je 0x4000c05	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a57	            0x3c64	                            cmp al, 0x64	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a59	      0xbe00000000	                              mov esi, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000a5e	     0xf85f9feffff	                           jne 0x400095d	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000a64	        0x4c8b5628	            mov r10, qword [rsi + 0x28] 	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x4000a68	          0x4d85d2	                           test r10, r10	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x4000a6b	     0xf8415010000	                            je 0x4000b86	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x4000a71	          0x8b4728	            mov eax, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000a74	        0x448b4f2c	            mov r9d, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000a78	            0x31d2	                            xor edx, edx	       934	cp-demangle.c	FUNCTION_3	IF_1
0x4000a7a	        0x448b5e30	           mov r11d, dword [rsi + 0x30] 	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4000a7e	          0x4439c8	                            cmp eax, r9d	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000a81	            0x7d2a	                           jge 0x4000aad	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000a83	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x4000a86	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x4000a89	        0x488d1c52	                  lea rbx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x4000a8d	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4000a91	        0x488d14da	                  lea rdx, [rdx + rbx*8]	       935	cp-demangle.c	FUNCTION_3
0x4000a95	    0xc74204000000	                  mov dword [rdx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000a9c	          0x894728	             mov dword [rdi + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x4000a9f	    0xc70218000000	                   mov dword [rdx], 0x18	      1205	cp-demangle.c	FUNCTION_15	IF_1
0x4000aa5	        0x4c895208	                mov qword [rdx + 8], r10	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x4000aa9	        0x44895a10	            mov dword [rdx + 0x10], r11d	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x4000aad	        0x48895740	             mov qword [rdi + 0x40], rdx	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4000ab1	          0x4585c0	                           test r8d, r8d	      3905	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4000ab4	     0xf8417010000	                            je 0x4000bd1	      3905	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4000aba	        0x4c8b4618	              mov r8, qword [rsi + 0x18]	      3907	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4000abe	          0x8b5620	            mov edx, dword [rsi + 0x20] 	      3908	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4000ac1	           0x15748	             add dword [rdi + 0x48], edx	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000ac4	          0x4139c1	                            cmp r9d, eax	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000ac7	          0x4889fb	                            mov rbx, rdi	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000aca	     0xf8fc2000000	                            jg 0x4000b92	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000ad0	          0x803942	                    cmp byte [rcx], 0x42	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4000ad3	     0xf8584feffff	                           jne 0x400095d	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4000ad9	        0x4c8b6340	            mov r12, qword [rbx + 0x40] 	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000add	            0x31ed	                            xor ebp, ebp	       934	cp-demangle.c	FUNCTION_3	IF_1
0x4000adf	              0x90	                                     nop	       934	cp-demangle.c	FUNCTION_3	IF_1
0x4000ae0	        0x4883c101	                              add rcx, 1	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4000ae4	          0x4889df	                            mov rdi, rbx	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4000ae7	        0x48894b18	             mov qword [rbx + 0x18], rcx	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4000aeb	      0xe870fcffff	                  call sym.d_source_name	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4000af0	          0x4889ea	                            mov rdx, rbp	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000af3	          0x4889c1	                            mov rcx, rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000af6	      0xbe4b000000	                           mov esi, 0x4b	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000afb	          0x4889df	                            mov rdi, rbx	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000afe	      0xe83df5ffff	                    call sym.d_make_comp	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000b03	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000b07	          0x4889c5	                            mov rbp, rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000b0a	          0x803942	                    cmp byte [rcx], 0x42	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000b0d	            0x74d1	                            je 0x4000ae0	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000b0f	          0x4885c0	                           test rax, rax	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4000b12	        0x4c896340	             mov qword [rbx + 0x40], r12	      1382	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000b16	     0xf8441feffff	                            je 0x400095d	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4000b1c	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4000b1f	          0x3b433c	            cmp eax, dword [rbx + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4000b22	     0xf8d35feffff	                           jge 0x400095d	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4000b28	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x4000b2c	          0x4863c8	                         movsxd rcx, eax	      3786	cp-demangle.c	FUNCTION_59
0x4000b2f	          0x83c001	                              add eax, 1	      3787	cp-demangle.c	FUNCTION_59
0x4000b32	        0x48892cca	            mov qword [rdx + rcx*8], rbp	      3786	cp-demangle.c	FUNCTION_59
0x4000b36	          0x894338	             mov dword [rbx + 0x38], eax	      3787	cp-demangle.c	FUNCTION_59
0x4000b39	          0x4889e8	                            mov rax, rbp	      3787	cp-demangle.c	FUNCTION_59
0x4000b3c	      0xe91efeffff	                           jmp 0x400095f	      3787	cp-demangle.c	FUNCTION_59
0x4000b41	     0xf1f80000000	                         nop dword [rax]	      3787	cp-demangle.c	FUNCTION_59
0x4000b48	            0x31c0	                            xor eax, eax	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000b4a	            0x89ca	                            mov edx, ecx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000b4c	      0xe98cfeffff	                           jmp 0x40009dd	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000b51	     0xf1f80000000	                         nop dword [rax]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000b58	          0x83c101	                              add ecx, 1	      3868	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4000b5b	          0x3b4f38	            cmp ecx, dword [rdi + 0x38] 	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4000b5e	     0xf83f9fdffff	                           jae 0x400095d	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4000b64	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4000b68	              0x5b	                                 pop rbx	      3931	cp-demangle.c	FUNCTION_60
0x4000b69	              0x5d	                                 pop rbp	      3931	cp-demangle.c	FUNCTION_60
0x4000b6a	        0x488b04c8	            mov rax, qword [rax + rcx*8]	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4000b6e	            0x415c	                                 pop r12	      3931	cp-demangle.c	FUNCTION_60
0x4000b70	              0xc3	                                     ret	      3931	cp-demangle.c	FUNCTION_60
0x4000b71	     0xf1f80000000	                         nop dword [rax]	      3931	cp-demangle.c	FUNCTION_60
0x4000b78	            0x31c9	                            xor ecx, ecx	      3848	cp-demangle.c	FUNCTION_60	IF_2
0x4000b7a	            0xebdf	                           jmp 0x4000b5b	      3848	cp-demangle.c	FUNCTION_60	IF_2
0x4000b7c	      0xbe00000000	                              mov esi, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000b81	      0xe9defeffff	                           jmp 0x4000a64	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000b86	        0x448b4f2c	            mov r9d, dword [rdi + 0x2c] 	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000b8a	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000b8d	      0xe91fffffff	                           jmp 0x4000ab1	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000b92	          0x4863f0	                         movsxd rsi, eax	       935	cp-demangle.c	FUNCTION_3
0x4000b95	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x4000b98	        0x488d3c76	                  lea rdi, [rsi + rsi*2]	       935	cp-demangle.c	FUNCTION_3
0x4000b9c	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4000ba0	        0x488d2cfe	                  lea rbp, [rsi + rdi*8]	       935	cp-demangle.c	FUNCTION_3
0x4000ba4	    0xc74504000000	                  mov dword [rbp + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000bab	          0x894328	             mov dword [rbx + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x4000bae	          0x4889e8	                            mov rax, rbp	       937	cp-demangle.c	FUNCTION_3
0x4000bb1	    0xc74500180000	                   mov dword [rbp], 0x18	      1205	cp-demangle.c	FUNCTION_15	IF_1
0x4000bb8	        0x4c894508	                 mov qword [rbp + 8], r8	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x4000bbc	          0x895510	            mov dword [rbp + 0x10], edx 	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x4000bbf	          0x803942	                    cmp byte [rcx], 0x42	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4000bc2	     0xf8597fdffff	                           jne 0x400095f	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4000bc8	        0x4c8b6340	            mov r12, qword [rbx + 0x40] 	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000bcc	      0xe90fffffff	                           jmp 0x4000ae0	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000bd1	        0x4c8b4608	                 mov r8, qword [rsi + 8]	      3912	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4000bd5	          0x8b5610	            mov edx, dword [rsi + 0x10] 	      3913	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4000bd8	      0xe9e4feffff	                           jmp 0x4000ac1	      3913	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x4000bdd	      0xbe00000000	                              mov esi, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000be2	      0xe97dfeffff	                           jmp 0x4000a64	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000be7	      0xbe00000000	                              mov esi, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000bec	      0xe973feffff	                           jmp 0x4000a64	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000bf1	      0xbe00000000	                              mov esi, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000bf6	      0xe969feffff	                           jmp 0x4000a64	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000bfb	      0xbe00000000	                              mov esi, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000c00	      0xe95ffeffff	                           jmp 0x4000a64	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000c05	      0xbe00000000	                              mov esi, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000c0a	      0xe955feffff	                           jmp 0x4000a64	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000c0f	        0x448d40bf	                   lea r8d, [rax - 0x41]	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000c13	            0x31d2	                            xor edx, edx	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000c15	        0x4180f819	                           cmp r8b, 0x19	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000c19	     0xf8681fdffff	                           jbe 0x40009a0	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000c1f	      0xe9defdffff	                           jmp 0x4000a02	      3844	cp-demangle.c	FUNCTION_60	IF_2
java_demangle_v3_callback	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	168
0x4010f40	              0x55	                                push rbp	      6483	cp-demangle.c	FUNCTION_103
0x4010f41	          0x4889e5	                            mov rbp, rsp	      6483	cp-demangle.c	FUNCTION_103
0x4010f44	            0x4157	                                push r15	      6483	cp-demangle.c	FUNCTION_103
0x4010f46	            0x4156	                                push r14	      6483	cp-demangle.c	FUNCTION_103
0x4010f48	            0x4155	                                push r13	      6483	cp-demangle.c	FUNCTION_103
0x4010f4a	            0x4154	                                push r12	      6483	cp-demangle.c	FUNCTION_103
0x4010f4c	          0x4989d5	                            mov r13, rdx	      6483	cp-demangle.c	FUNCTION_103
0x4010f4f	              0x53	                                push rbx	      6483	cp-demangle.c	FUNCTION_103
0x4010f50	          0x4989f4	                            mov r12, rsi	      6483	cp-demangle.c	FUNCTION_103
0x4010f53	          0x4889fb	                            mov rbx, rdi	      6483	cp-demangle.c	FUNCTION_103
0x4010f56	    0x4881ec880000	                           sub rsp, 0x88	      6483	cp-demangle.c	FUNCTION_103
0x4010f5d	    0x64488b042528	                mov rax, qword fs:[0x28]	      6483	cp-demangle.c	FUNCTION_103
0x4010f66	        0x488945c8	             mov qword [rbp - 0x38], rax	      6483	cp-demangle.c	FUNCTION_103
0x4010f6a	            0x31c0	                            xor eax, eax	      6483	cp-demangle.c	FUNCTION_103
0x4010f6c	          0x803f5f	                    cmp byte [rdi], 0x5f	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010f6f	     0xf848b000000	                            je 0x4011000	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010f75	      0xbf00000000	                              mov edi, 0	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f7a	      0xb908000000	                              mov ecx, 8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f7f	          0x4889de	                            mov rsi, rbx	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f82	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f84	           0xf97c0	                                 seta al	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f87	           0xf92c2	                                 setb dl	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f8a	            0x29d0	                            sub eax, edx	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f8c	           0xfbec0	                           movsx eax, al	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f8f	            0x85c0	                           test eax, eax	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f91	            0x7545	                           jne 0x4010fd8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010f93	         0xfb67b08	               movzx edi, byte [rbx + 8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010f97	          0x8d57dc	                   lea edx, [rdi - 0x24]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010f9a	          0x80fa3b	                            cmp dl, 0x3b	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010f9d	            0x773b	                            ja 0x4010fda	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010f9f	    0x48b901040000	          movabs rcx, 0x800000000000401 	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fa9	        0x480fa3d1	                             bt rcx, rdx	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fad	            0x732b	                           jae 0x4010fda	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010faf	         0xfb65309	               movzx edx, byte [rbx + 9]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fb3	          0x80fa44	                            cmp dl, 0x44	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fb6	            0x7405	                            je 0x4010fbd	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fb8	          0x80fa49	                            cmp dl, 0x49	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fbb	            0x751d	                           jne 0x4010fda	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fbd	        0x807b0a5f	              cmp byte [rbx + 0xa], 0x5f	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fc1	            0x7517	                           jne 0x4010fda	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fc3	          0x4531ff	                          xor r15d, r15d	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fc6	          0x80fa49	                            cmp dl, 0x49	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fc9	        0x410f95c7	                              setne r15b	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fcd	        0x4183c702	                             add r15d, 2	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fd1	            0xeb3d	                           jmp 0x4011010	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fd3	       0xf1f440000	                   nop dword [rax + rax]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010fd8	            0x31c0	                            xor eax, eax	      6224	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4010fda	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      6487	cp-demangle.c	FUNCTION_103
0x4010fde	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      6487	cp-demangle.c	FUNCTION_103
0x4010fe7	     0xf850f020000	                           jne 0x40111fc	      6487	cp-demangle.c	FUNCTION_103
0x4010fed	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6487	cp-demangle.c	FUNCTION_103
0x4010ff1	              0x5b	                                 pop rbx	      6487	cp-demangle.c	FUNCTION_103
0x4010ff2	            0x415c	                                 pop r12	      6487	cp-demangle.c	FUNCTION_103
0x4010ff4	            0x415d	                                 pop r13	      6487	cp-demangle.c	FUNCTION_103
0x4010ff6	            0x415e	                                 pop r14	      6487	cp-demangle.c	FUNCTION_103
0x4010ff8	            0x415f	                                 pop r15	      6487	cp-demangle.c	FUNCTION_103
0x4010ffa	              0x5d	                                 pop rbp	      6487	cp-demangle.c	FUNCTION_103
0x4010ffb	              0xc3	                                     ret	      6487	cp-demangle.c	FUNCTION_103
0x4010ffc	         0xf1f4000	                         nop dword [rax]	      6487	cp-demangle.c	FUNCTION_103
0x4011000	        0x807f015a	                cmp byte [rdi + 1], 0x5a	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4011004	     0xf856bffffff	                           jne 0x4010f75	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x401100a	    0x41bf01000000	                             mov r15d, 1	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x4011010	          0x4889df	                            mov rdi, rbx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4011013	          0x4989e6	                            mov r14, rsp	      6230	cp-demangle.c	FUNCTION_96
0x4011016	      0xe800000000	                          call 0x401101b	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x401101b	        0x488d1403	                    lea rdx, [rbx + rax]	      6170	cp-demangle.c	
0x401101f	          0x8d3400	                    lea esi, [rax + rax]	      6178	cp-demangle.c	
0x4011022	          0x8945ac	             mov dword [rbp - 0x54], eax	      6183	cp-demangle.c	
0x4011025	            0x4898	                                    cdqe	      6233	cp-demangle.c	FUNCTION_96
0x4011027	    0x48899d70ffff	             mov qword [rbp - 0x90], rbx	      6169	cp-demangle.c	
0x401102e	    0xc74580250000	           mov dword [rbp - 0x80], 0x25 	      6171	cp-demangle.c	
0x4011035	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      6170	cp-demangle.c	
0x401103c	          0x4863d6	                         movsxd rdx, esi	      6232	cp-demangle.c	FUNCTION_96
0x401103f	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6233	cp-demangle.c	FUNCTION_96
0x4011047	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      6232	cp-demangle.c	FUNCTION_96
0x401104b	        0x48895d88	             mov qword [rbp - 0x78], rbx	      6173	cp-demangle.c	
0x401104f	          0x89759c	             mov dword [rbp - 0x64], esi	      6178	cp-demangle.c	
0x4011052	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      6233	cp-demangle.c	FUNCTION_96
0x4011056	    0xc74598000000	               mov dword [rbp - 0x68], 0	      6179	cp-demangle.c	
0x401105d	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      6184	cp-demangle.c	
0x4011064	    0x488d14d51000	                 lea rdx, [rdx*8 + 0x10]	      6232	cp-demangle.c	FUNCTION_96
0x401106c	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      6186	cp-demangle.c	
0x4011074	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      6188	cp-demangle.c	
0x401107b	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6189	cp-demangle.c	
0x4011082	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6190	cp-demangle.c	
0x4011089	          0x4829d4	                            sub rsp, rdx	      6232	cp-demangle.c	FUNCTION_96
0x401108c	      0x488d4c2407	                      lea rcx, [rsp + 7]	      6232	cp-demangle.c	FUNCTION_96
0x4011091	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x4011094	        0x418d47fe	                      lea eax, [r15 - 2]	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4011098	        0x488965a0	             mov qword [rbp - 0x60], rsp	      6236	cp-demangle.c	FUNCTION_96
0x401109c	        0x48c1e903	                              shr rcx, 3	      6232	cp-demangle.c	FUNCTION_96
0x40110a0	          0x83f801	                              cmp eax, 1	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40110a3	    0x488d14cd0000	                        lea rdx, [rcx*8]	      6232	cp-demangle.c	FUNCTION_96
0x40110ab	        0x48895590	             mov qword [rbp - 0x70], rdx	      6235	cp-demangle.c	FUNCTION_96
0x40110af	            0x764f	                           jbe 0x4011100	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40110b1	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40110b8	      0xbe01000000	                              mov esi, 1	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40110bd	      0xe800000000	                          call 0x40110c2	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40110c2	          0x4889c3	                            mov rbx, rax	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40110c5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40110c9	          0x803800	                       cmp byte [rax], 0	      6278	cp-demangle.c	FUNCTION_96
0x40110cc	     0xf8506010000	                           jne 0x40111d8	      6278	cp-demangle.c	FUNCTION_96
0x40110d2	          0x4885db	                           test rbx, rbx	      6278	cp-demangle.c	FUNCTION_96
0x40110d5	     0xf84fd000000	                            je 0x40111d8	      6278	cp-demangle.c	FUNCTION_96
0x40110db	          0x4c89e9	                            mov rcx, r13	      6278	cp-demangle.c	FUNCTION_96
0x40110de	          0x4c89e2	                            mov rdx, r12	      6278	cp-demangle.c	FUNCTION_96
0x40110e1	          0x4889de	                            mov rsi, rbx	      6278	cp-demangle.c	FUNCTION_96
0x40110e4	      0xbf25000000	                           mov edi, 0x25	      6278	cp-demangle.c	FUNCTION_96
0x40110e9	      0xe800000000	                          call 0x40110ee	      6278	cp-demangle.c	FUNCTION_96
0x40110ee	          0x4c89f4	                            mov rsp, r14	      6278	cp-demangle.c	FUNCTION_96
0x40110f1	      0xe9e4feffff	                           jmp 0x4010fda	      6278	cp-demangle.c	FUNCTION_96
0x40110f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6278	cp-demangle.c	FUNCTION_96
0x4011100	        0x807b0b5f	              cmp byte [rbx + 0xb], 0x5f	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4011104	        0x4c8d430b	                     lea r8, [rbx + 0xb]	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4011108	        0x4c894588	              mov qword [rbp - 0x78], r8	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x401110c	            0x750a	                           jne 0x4011118	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x401110e	        0x807b0c5a	              cmp byte [rbx + 0xc], 0x5a	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4011112	     0xf84c8000000	                            je 0x40111e0	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4011118	          0x4c89c7	                             mov rdi, r8	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x401111b	    0x48899550ffff	             mov qword [rbp - 0xb0], rdx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4011122	    0x48898d58ffff	             mov qword [rbp - 0xa8], rcx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4011129	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x401112f	    0x4c898568ffff	              mov qword [rbp - 0x98], r8	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4011136	      0xe800000000	                          call 0x401113b	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x401113b	    0x8bb564ffffff	             mov esi, dword [rbp - 0x9c]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4011141	    0x4c8b8568ffff	              mov r8, qword [rbp - 0x98]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4011148	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x401114f	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4011156	            0x85f6	                           test esi, esi	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4011158	            0x7e3e	                           jle 0x4011198	       933	cp-demangle.c	FUNCTION_3	IF_1
0x401115a	            0x85c0	                           test eax, eax	       861	cp-demangle.c	IF_1
0x401115c	    0xc704cd040000	                mov dword [rcx*8 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4011167	    0xc74598010000	               mov dword [rbp - 0x68], 1	       937	cp-demangle.c	FUNCTION_3
0x401116e	            0x7428	                            je 0x4011198	       861	cp-demangle.c	IF_1
0x4011170	    0xc704cd000000	                    mov dword [rcx*8], 0	       864	cp-demangle.c	
0x401117b	    0x4c8904cd0800	               mov qword [rcx*8 + 8], r8	       865	cp-demangle.c	
0x4011183	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	       865	cp-demangle.c	
0x401118a	    0x8904cd100000	           mov dword [rcx*8 + 0x10], eax	       866	cp-demangle.c	
0x4011191	            0xeb0e	                           jmp 0x40111a1	       866	cp-demangle.c	
0x4011193	       0xf1f440000	                   nop dword [rax + rax]	       866	cp-demangle.c	
0x4011198	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	       866	cp-demangle.c	
0x401119f	            0x31d2	                            xor edx, edx	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x40111a1	            0x31f6	                            xor esi, esi	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x40111a3	        0x4183ff02	                             cmp r15d, 2	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x40111a7	          0x4889df	                            mov rdi, rbx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x40111aa	        0x400f95c6	                               setne sil	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x40111ae	            0x31c9	                            xor ecx, ecx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x40111b0	          0x83c643	                           add esi, 0x43	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x40111b3	      0xe888eefeff	                    call sym.d_make_comp	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x40111b8	        0x4c8b7d88	             mov r15, qword [rbp - 0x78]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x40111bc	          0x4889c3	                            mov rbx, rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x40111bf	          0x4c89ff	                            mov rdi, r15	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x40111c2	      0xe800000000	                          call 0x40111c7	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x40111c7	          0x4c01f8	                            add rax, r15	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x40111ca	        0x48894588	             mov qword [rbp - 0x78], rax	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x40111ce	      0xe9f6feffff	                           jmp 0x40110c9	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x40111d3	       0xf1f440000	                   nop dword [rax + rax]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x40111d8	            0x31c0	                            xor eax, eax	      6278	cp-demangle.c	FUNCTION_96
0x40111da	      0xe90fffffff	                           jmp 0x40110ee	      6278	cp-demangle.c	FUNCTION_96
0x40111df	              0x90	                                     nop	      6278	cp-demangle.c	FUNCTION_96
0x40111e0	        0x4883c30d	                            add rbx, 0xd	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x40111e4	        0x48895d88	             mov qword [rbp - 0x78], rbx	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x40111e8	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40111ef	          0x4889df	                            mov rdi, rbx	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40111f2	      0xe899e1ffff	        call sym.d_encoding.constprop.23	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40111f7	          0x4889c2	                            mov rdx, rax	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40111fa	            0xeba5	                           jmp 0x40111a1	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40111fc	      0xe800000000	                          call 0x4011201	      6487	cp-demangle.c	FUNCTION_103
is_gnu_v3_mangled_ctor	CALL,1:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	17
0x4011210	        0x4883ec18	                           sub rsp, 0x18	      6572	cp-demangle.c	FUNCTION_105
0x4011214	      0x488d542404	                      lea rdx, [rsp + 4]	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x4011219	          0x4889e6	                            mov rsi, rsp	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x401121c	    0x64488b042528	                mov rax, qword fs:[0x28]	      6572	cp-demangle.c	FUNCTION_105
0x4011225	      0x4889442408	                mov qword [rsp + 8], rax	      6572	cp-demangle.c	FUNCTION_105
0x401122a	            0x31c0	                            xor eax, eax	      6572	cp-demangle.c	FUNCTION_105
0x401122c	      0xe8ffeeffff	                call sym.is_ctor_or_dtor	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x4011231	            0x31d2	                            xor edx, edx	      6577	cp-demangle.c	FUNCTION_105	IF_1
0x4011233	            0x85c0	                           test eax, eax	      6578	cp-demangle.c	FUNCTION_105
0x4011235	         0xf451424	                 cmovne edx, dword [rsp]	      6578	cp-demangle.c	FUNCTION_105
0x4011239	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6579	cp-demangle.c	FUNCTION_105
0x401123e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6579	cp-demangle.c	FUNCTION_105
0x4011247	            0x7507	                           jne 0x4011250	      6579	cp-demangle.c	FUNCTION_105
0x4011249	            0x89d0	                            mov eax, edx	      6579	cp-demangle.c	FUNCTION_105
0x401124b	        0x4883c418	                           add rsp, 0x18	      6579	cp-demangle.c	FUNCTION_105
0x401124f	              0xc3	                                     ret	      6579	cp-demangle.c	FUNCTION_105
0x4011250	      0xe800000000	                          call 0x4011255	      6579	cp-demangle.c	FUNCTION_105
d_print_mod_list	CALL,15:IF,7:SWITCH,0:ELSE,3:WHILE,1:FOR,0:DO,0:functions,0	551
0x400ad10	            0x4157	                                push r15	      5793	cp-demangle.c	FUNCTION_89
0x400ad12	            0x4156	                                push r14	      5793	cp-demangle.c	FUNCTION_89
0x400ad14	            0x4155	                                push r13	      5793	cp-demangle.c	FUNCTION_89
0x400ad16	            0x4154	                                push r12	      5793	cp-demangle.c	FUNCTION_89
0x400ad18	              0x55	                                push rbp	      5793	cp-demangle.c	FUNCTION_89
0x400ad19	              0x53	                                push rbx	      5793	cp-demangle.c	FUNCTION_89
0x400ad1a	        0x4883ec58	                           sub rsp, 0x58	      5793	cp-demangle.c	FUNCTION_89
0x400ad1e	    0x64488b042528	                mov rax, qword fs:[0x28]	      5793	cp-demangle.c	FUNCTION_89
0x400ad27	      0x4889442448	             mov qword [rsp + 0x48], rax	      5793	cp-demangle.c	FUNCTION_89
0x400ad2c	            0x31c0	                            xor eax, eax	      5793	cp-demangle.c	FUNCTION_89
0x400ad2e	          0x4885d2	                           test rdx, rdx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad31	     0xf8439010000	                            je 0x400ae70	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad37	          0x4889fd	                            mov rbp, rdi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad3a	    0x8bbf30010000	           mov edi, dword [rdi + 0x130] 	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad40	            0x85ff	                           test edi, edi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad42	     0xf8528010000	                           jne 0x400ae70	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad48	            0x85c9	                           test ecx, ecx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad4a	          0x4189f5	                           mov r13d, esi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad4d	          0x4889d3	                            mov rbx, rdx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad50	     0xf8504010000	                           jne 0x400ae5a	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad56	    0x49be1f000000	            movabs r14, 0xd00000000001f 	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad60	            0xeb6c	                           jmp 0x400adce	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad62	    0x660f1f440000	                    nop word [rax + rax]	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad68	        0x490fa3ce	                             bt r14, rcx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad6c	            0x7246	                            jb 0x400adb4	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ad6e	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      5810	cp-demangle.c	FUNCTION_89
0x400ad72	          0x83f829	                           cmp eax, 0x29	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x400ad75	    0xc74310010000	               mov dword [rbx + 0x10], 1	      5807	cp-demangle.c	FUNCTION_89
0x400ad7c	    0x4c8ba5200100	           mov r12, qword [rbp + 0x120] 	      5809	cp-demangle.c	FUNCTION_89
0x400ad83	    0x48898d200100	           mov qword [rbp + 0x120], rcx 	      5810	cp-demangle.c	FUNCTION_89
0x400ad8a	     0xf8408010000	                            je 0x400ae98	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x400ad90	          0x83f82a	                           cmp eax, 0x2a	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x400ad93	     0xf841f010000	                            je 0x400aeb8	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x400ad99	          0x83f802	                              cmp eax, 2	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400ad9c	     0xf8436010000	                            je 0x400aed8	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400ada2	          0x4489ee	                           mov esi, r13d	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x400ada5	          0x4889ef	                            mov rdi, rbp	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x400ada8	      0xe893e2ffff	                    call sym.d_print_mod	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x400adad	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5865	cp-demangle.c	FUNCTION_89
0x400adb4	          0x488b1b	                    mov rbx, qword [rbx]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x400adb7	          0x4885db	                           test rbx, rbx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400adba	     0xf84b0000000	                            je 0x400ae70	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400adc0	    0x8bb530010000	           mov esi, dword [rbp + 0x130] 	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400adc6	            0x85f6	                           test esi, esi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400adc8	     0xf85a2000000	                           jne 0x400ae70	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400adce	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x400add1	            0x85c0	                           test eax, eax	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x400add3	            0x75df	                           jne 0x400adb4	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x400add5	        0x488b5308	                mov rdx, qword [rbx + 8]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x400add9	            0x8b02	                    mov eax, dword [rdx]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x400addb	          0x8d48e4	                   lea ecx, [rax - 0x1c]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x400adde	          0x83f933	                           cmp ecx, 0x33	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x400ade1	            0x7685	                           jbe 0x400ad68	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x400ade3	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      5810	cp-demangle.c	FUNCTION_89
0x400ade7	    0xc74310010000	               mov dword [rbx + 0x10], 1	      5807	cp-demangle.c	FUNCTION_89
0x400adee	    0x4c8ba5200100	           mov r12, qword [rbp + 0x120] 	      5809	cp-demangle.c	FUNCTION_89
0x400adf5	    0x48898d200100	           mov qword [rbp + 0x120], rcx 	      5810	cp-demangle.c	FUNCTION_89
0x400adfc	            0xeb92	                           jmp 0x400ad90	      5810	cp-demangle.c	FUNCTION_89
0x400adfe	            0x6690	                                     nop	      5810	cp-demangle.c	FUNCTION_89
0x400ae00	        0x488b5308	                mov rdx, qword [rbx + 8]	      5810	cp-demangle.c	FUNCTION_89
0x400ae04	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      5810	cp-demangle.c	FUNCTION_89
0x400ae08	    0x4c8ba5200100	           mov r12, qword [rbp + 0x120] 	      5809	cp-demangle.c	FUNCTION_89
0x400ae0f	            0x8b02	                    mov eax, dword [rdx]	      5809	cp-demangle.c	FUNCTION_89
0x400ae11	    0xc74310010000	               mov dword [rbx + 0x10], 1	      5807	cp-demangle.c	FUNCTION_89
0x400ae18	    0x48898d200100	           mov qword [rbp + 0x120], rcx 	      5810	cp-demangle.c	FUNCTION_89
0x400ae1f	          0x83f829	                           cmp eax, 0x29	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x400ae22	            0x7474	                            je 0x400ae98	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x400ae24	          0x83f82a	                           cmp eax, 0x2a	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x400ae27	     0xf848b000000	                            je 0x400aeb8	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x400ae2d	          0x83f802	                              cmp eax, 2	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400ae30	     0xf84a2000000	                            je 0x400aed8	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400ae36	          0x4489ee	                           mov esi, r13d	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x400ae39	          0x4889ef	                            mov rdi, rbp	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x400ae3c	      0xe8ffe1ffff	                    call sym.d_print_mod	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x400ae41	          0x488b1b	                    mov rbx, qword [rbx]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x400ae44	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5865	cp-demangle.c	FUNCTION_89
0x400ae4b	          0x4885db	                           test rbx, rbx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ae4e	            0x7420	                            je 0x400ae70	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ae50	    0x8b9530010000	           mov edx, dword [rbp + 0x130] 	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ae56	            0x85d2	                           test edx, edx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ae58	            0x7516	                           jne 0x400ae70	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ae5a	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x400ae5d	            0x85c9	                           test ecx, ecx	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x400ae5f	            0x749f	                            je 0x400ae00	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x400ae61	          0x488b1b	                    mov rbx, qword [rbx]	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x400ae64	          0x4885db	                           test rbx, rbx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ae67	            0x75e7	                           jne 0x400ae50	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ae69	     0xf1f80000000	                         nop dword [rax]	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400ae70	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5868	cp-demangle.c	FUNCTION_89
0x400ae75	    0x644833042528	                xor rax, qword fs:[0x28]	      5868	cp-demangle.c	FUNCTION_89
0x400ae7e	     0xf852e090000	                           jne 0x400b7b2	      5868	cp-demangle.c	FUNCTION_89
0x400ae84	        0x4883c458	                           add rsp, 0x58	      5868	cp-demangle.c	FUNCTION_89
0x400ae88	              0x5b	                                 pop rbx	      5868	cp-demangle.c	FUNCTION_89
0x400ae89	              0x5d	                                 pop rbp	      5868	cp-demangle.c	FUNCTION_89
0x400ae8a	            0x415c	                                 pop r12	      5868	cp-demangle.c	FUNCTION_89
0x400ae8c	            0x415d	                                 pop r13	      5868	cp-demangle.c	FUNCTION_89
0x400ae8e	            0x415e	                                 pop r14	      5868	cp-demangle.c	FUNCTION_89
0x400ae90	            0x415f	                                 pop r15	      5868	cp-demangle.c	FUNCTION_89
0x400ae92	              0xc3	                                     ret	      5868	cp-demangle.c	FUNCTION_89
0x400ae93	       0xf1f440000	                   nop dword [rax + rax]	      5868	cp-demangle.c	FUNCTION_89
0x400ae98	          0x488b0b	                    mov rcx, qword [rbx]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x400ae9b	        0x4883c210	                           add rdx, 0x10	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x400ae9f	          0x4489ee	                           mov esi, r13d	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x400aea2	          0x4889ef	                            mov rdi, rbp	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x400aea5	      0xe8960c0000	  call sym.d_print_function_type.isra.11	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x400aeaa	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5815	cp-demangle.c	FUNCTION_89	IF_3
0x400aeb1	            0xebbd	                           jmp 0x400ae70	      5816	cp-demangle.c	FUNCTION_89	IF_3
0x400aeb3	       0xf1f440000	                   nop dword [rax + rax]	      5816	cp-demangle.c	FUNCTION_89	IF_3
0x400aeb8	          0x488b0b	                    mov rcx, qword [rbx]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x400aebb	        0x4883c208	                              add rdx, 8	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x400aebf	          0x4489ee	                           mov esi, r13d	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x400aec2	          0x4889ef	                            mov rdi, rbp	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x400aec5	      0xe8f6080000	     call sym.d_print_array_type.isra.10	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x400aeca	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5821	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x400aed1	            0xeb9d	                           jmp 0x400ae70	      5822	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x400aed3	       0xf1f440000	                   nop dword [rax + rax]	      5822	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x400aed8	    0x4c8bbd280100	           mov r15, qword [rbp + 0x128] 	      5834	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400aedf	    0x48c785280100	              mov qword [rbp + 0x128], 0	      5835	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400aeea	        0x4c8b7208	                mov r14, qword [rdx + 8]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x400aeee	          0x4d85f6	                           test r14, r14	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400aef1	            0x740d	                            je 0x400af00	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400aef3	        0x418b4604	                mov eax, dword [r14 + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400aef7	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400aefa	     0xf8e1d010000	                           jle 0x400b01d	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400af00	    0xc78530010000	              mov dword [rbp + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x400af0a	        0x41f6c504	                            test r13b, 4	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x400af0e	    0x4c89bd280100	           mov qword [rbp + 0x128], r15 	      5837	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400af15	     0xf846c010000	                            je 0x400b087	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x400af1b	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400af22	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400af28	     0xf84d6040000	                            je 0x400b404	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400af2e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400af32	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400af39	      0xc64405002e	              mov byte [rbp + rax], 0x2e	      4235	cp-demangle.c	FUNCTION_72
0x400af3e	    0xc68508010000	           mov byte [rbp + 0x108], 0x2e 	      4236	cp-demangle.c	FUNCTION_72
0x400af45	        0x488b4308	                mov rax, qword [rbx + 8]	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400af49	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400af4d	            0x8b03	                    mov eax, dword [rbx]	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af4f	          0x83f846	                           cmp eax, 0x46	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af52	     0xf8482010000	                            je 0x400b0da	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af58	          0x83e81c	                           sub eax, 0x1c	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af5b	          0x83f833	                           cmp eax, 0x33	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af5e	            0x7710	                            ja 0x400af70	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af60	    0x48ba1f000000	            movabs rdx, 0xd00000000001f 	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af6a	        0x480fa3c2	                             bt rdx, rax	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af6e	            0x721e	                            jb 0x400af8e	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400af70	          0x8b4304	                mov eax, dword [rbx + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400af73	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400af76	            0x7e41	                           jle 0x400afb9	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400af78	    0xc78530010000	              mov dword [rbp + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x400af82	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5859	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400af89	      0xe9e2feffff	                           jmp 0x400ae70	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400af8e	      0xbe01000000	                              mov esi, 1	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400af93	       0xf1f440000	                   nop dword [rax + rax]	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400af98	        0x488b5b08	                mov rbx, qword [rbx + 8]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400af9c	            0x8b03	                    mov eax, dword [rbx]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400af9e	          0x8d48e4	                   lea ecx, [rax - 0x1c]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400afa1	          0x83f933	                           cmp ecx, 0x33	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400afa4	            0x77ca	                            ja 0x400af70	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400afa6	          0x4889f0	                            mov rax, rsi	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400afa9	          0x48d3e0	                             shl rax, cl	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400afac	          0x4885d0	                           test rax, rdx	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400afaf	            0x75e7	                           jne 0x400af98	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x400afb1	          0x8b4304	                mov eax, dword [rbx + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400afb4	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400afb7	            0x7fbf	                            jg 0x400af78	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400afb9	    0x8b9534010000	           mov edx, dword [rbp + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400afbf	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400afc5	            0x7fb1	                            jg 0x400af78	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400afc7	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x400afca	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x400afcd	          0x4489ee	                           mov esi, r13d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400afd0	          0x894304	                mov dword [rbx + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x400afd3	    0x488b85480100	           mov rax, qword [rbp + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x400afda	          0x4889ef	                            mov rdi, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400afdd	    0x899534010000	           mov dword [rbp + 0x134], edx 	      5722	cp-demangle.c	FUNCTION_87
0x400afe3	          0x4889da	                            mov rdx, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400afe6	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      5724	cp-demangle.c	FUNCTION_87
0x400afeb	      0x4889442418	             mov qword [rsp + 0x18], rax	      5725	cp-demangle.c	FUNCTION_87
0x400aff0	      0x488d442410	                   lea rax, [rsp + 0x10]	      5726	cp-demangle.c	FUNCTION_87
0x400aff5	    0x488985480100	           mov qword [rbp + 0x148], rax 	      5726	cp-demangle.c	FUNCTION_87
0x400affc	      0xe82f5effff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400b001	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5730	cp-demangle.c	FUNCTION_87
0x400b006	    0x488985480100	           mov qword [rbp + 0x148], rax 	      5730	cp-demangle.c	FUNCTION_87
0x400b00d	        0x836b0401	                  sub dword [rbx + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x400b011	    0x83ad34010000	              sub dword [rbp + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x400b018	      0xe965ffffff	                           jmp 0x400af82	      5732	cp-demangle.c	FUNCTION_87
0x400b01d	    0x8b9534010000	           mov edx, dword [rbp + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400b023	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400b029	     0xf8fd1feffff	                            jg 0x400af00	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400b02f	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x400b032	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x400b035	          0x4489ee	                           mov esi, r13d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400b038	        0x41894604	                mov dword [r14 + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x400b03c	    0x488b85480100	           mov rax, qword [rbp + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x400b043	          0x4889ef	                            mov rdi, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400b046	    0x899534010000	           mov dword [rbp + 0x134], edx 	      5722	cp-demangle.c	FUNCTION_87
0x400b04c	          0x4c89f2	                            mov rdx, r14	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400b04f	      0x4c89742410	             mov qword [rsp + 0x10], r14	      5724	cp-demangle.c	FUNCTION_87
0x400b054	      0x4889442418	             mov qword [rsp + 0x18], rax	      5725	cp-demangle.c	FUNCTION_87
0x400b059	      0x488d442410	                   lea rax, [rsp + 0x10]	      5726	cp-demangle.c	FUNCTION_87
0x400b05e	    0x488985480100	           mov qword [rbp + 0x148], rax 	      5726	cp-demangle.c	FUNCTION_87
0x400b065	      0xe8c65dffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400b06a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5730	cp-demangle.c	FUNCTION_87
0x400b06f	    0x488985480100	           mov qword [rbp + 0x148], rax 	      5730	cp-demangle.c	FUNCTION_87
0x400b076	      0x41836e0401	                  sub dword [r14 + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x400b07b	    0x83ad34010000	              sub dword [rbp + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x400b082	      0xe983feffff	                           jmp 0x400af0a	      5732	cp-demangle.c	FUNCTION_87
0x400b087	    0x488b95000100	           mov rdx, qword [rbp + 0x100] 	      5732	cp-demangle.c	FUNCTION_87
0x400b08e	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b095	     0xf84c9030000	                            je 0x400b464	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b09b	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b09f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b0a5	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b0ac	      0xc64415003a	              mov byte [rbp + rdx], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400b0b1	    0xc68508010000	           mov byte [rbp + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x400b0b8	     0xf8476030000	                            je 0x400b434	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b0be	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b0c2	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b0c9	      0xc64405003a	              mov byte [rbp + rax], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400b0ce	    0xc68508010000	           mov byte [rbp + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x400b0d5	      0xe96bfeffff	                           jmp 0x400af45	      4236	cp-demangle.c	FUNCTION_72
0x400b0da	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b0e1	     0xf8405060000	                            je 0x400b6ec	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b0e7	        0x488d4a01	                      lea rcx, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b0eb	    0x4881f9ff0000	                           cmp rcx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b0f2	    0x48898d000100	           mov qword [rbp + 0x100], rcx 	      4235	cp-demangle.c	FUNCTION_72
0x400b0f9	      0xc64415007b	              mov byte [rbp + rdx], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x400b0fe	    0xc68508010000	           mov byte [rbp + 0x108], 0x7b 	      4236	cp-demangle.c	FUNCTION_72
0x400b105	     0xf84af050000	                            je 0x400b6ba	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b10b	        0x488d4101	                      lea rax, [rcx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b10f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b115	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b11c	      0xc6440d0064	              mov byte [rbp + rcx], 0x64	      4235	cp-demangle.c	FUNCTION_72
0x400b121	    0xc68508010000	           mov byte [rbp + 0x108], 0x64 	      4236	cp-demangle.c	FUNCTION_72
0x400b128	     0xf845a050000	                            je 0x400b688	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b12e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b132	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b139	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b140	      0xc644050065	              mov byte [rbp + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400b145	    0xc68508010000	           mov byte [rbp + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x400b14c	     0xf8404050000	                            je 0x400b656	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b152	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b156	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b15c	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b163	      0xc644150066	              mov byte [rbp + rdx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x400b168	    0xc68508010000	           mov byte [rbp + 0x108], 0x66 	      4236	cp-demangle.c	FUNCTION_72
0x400b16f	     0xf84af040000	                            je 0x400b624	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b175	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b179	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b180	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b187	      0xc644050061	              mov byte [rbp + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400b18c	    0xc68508010000	           mov byte [rbp + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x400b193	     0xf8459040000	                            je 0x400b5f2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b199	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b19d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b1a3	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b1aa	      0xc644150075	              mov byte [rbp + rdx], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x400b1af	    0xc68508010000	           mov byte [rbp + 0x108], 0x75 	      4236	cp-demangle.c	FUNCTION_72
0x400b1b6	     0xf8404040000	                            je 0x400b5c0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b1bc	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b1c0	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b1c7	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b1ce	      0xc64405006c	              mov byte [rbp + rax], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x400b1d3	    0xc68508010000	           mov byte [rbp + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x400b1da	     0xf84ae030000	                            je 0x400b58e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b1e0	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b1e4	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b1ea	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b1f1	      0xc644150074	              mov byte [rbp + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400b1f6	    0xc68508010000	           mov byte [rbp + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x400b1fd	     0xf8459030000	                            je 0x400b55c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b203	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b207	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b20e	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b215	      0xc644050020	              mov byte [rbp + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400b21a	    0xc68508010000	           mov byte [rbp + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400b221	     0xf8403030000	                            je 0x400b52a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b227	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b22b	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b231	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b238	      0xc644150061	              mov byte [rbp + rdx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400b23d	    0xc68508010000	           mov byte [rbp + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x400b244	     0xf84ae020000	                            je 0x400b4f8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b24a	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b24e	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b255	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b25c	      0xc644050072	              mov byte [rbp + rax], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400b261	    0xc68508010000	           mov byte [rbp + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x400b268	     0xf8458020000	                            je 0x400b4c6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b26e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b272	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b278	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b27f	      0xc644150067	              mov byte [rbp + rdx], 0x67	      4235	cp-demangle.c	FUNCTION_72
0x400b284	    0xc68508010000	           mov byte [rbp + 0x108], 0x67 	      4236	cp-demangle.c	FUNCTION_72
0x400b28b	     0xf8405020000	                            je 0x400b496	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b291	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b295	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b29c	      0xc644050023	              mov byte [rbp + rax], 0x23	      4235	cp-demangle.c	FUNCTION_72
0x400b2a1	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2a6	    0xc68508010000	           mov byte [rbp + 0x108], 0x23 	      4236	cp-demangle.c	FUNCTION_72
0x400b2ad	          0x8b4310	            mov eax, dword [rbx + 0x10] 	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2b0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2b5	          0x4c89cf	                             mov rdi, r9	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2b8	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2bd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2c2	        0x4c890c24	                     mov qword [rsp], r9	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2c6	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2ca	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2cc	      0xe800000000	                          call 0x400b2d1	        33	stdio2.h	FUNCTION_109	CALL_1
0x400b2d1	        0x4c8b0c24	                     mov r9, qword [rsp]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2d5	          0x4c89c9	                             mov rcx, r9	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2d8	            0x8b11	                    mov edx, dword [rcx]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2da	        0x4883c104	                              add rcx, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2de	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2e4	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2e6	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2e8	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2ed	            0x74e9	                            je 0x400b2d8	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2ef	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2f1	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2f4	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2f9	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b2fc	        0x488d5102	                      lea rdx, [rcx + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b300	            0x89c7	                            mov edi, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b302	        0x480f44ca	                          cmove rcx, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b306	          0x4000c7	                             add dil, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b309	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b310	        0x4883d903	                              sbb rcx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400b314	          0x4c29c9	                             sub rcx, r9	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400b317	            0x7476	                            je 0x400b38f	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400b319	          0x4531f6	                          xor r14d, r14d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400b31c	            0xeb25	                           jmp 0x400b343	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400b31e	            0x6690	                                     nop	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400b320	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b323	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b327	        0x4983c601	                              add r14, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400b32b	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b332	      0x44887c1500	              mov byte [rbp + rdx], r15b	      4235	cp-demangle.c	FUNCTION_72
0x400b337	          0x4c39f1	                            cmp rcx, r14	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400b33a	    0x4488bd080100	           mov byte [rbp + 0x108], r15b 	      4236	cp-demangle.c	FUNCTION_72
0x400b341	            0x744c	                            je 0x400b38f	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400b343	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b349	      0x470fb63c31	             movzx r15d, byte [r9 + r14]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400b34e	            0x75d0	                           jne 0x400b320	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b350	      0x4c894c2408	                 mov qword [rsp + 8], r9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b355	        0x48890c24	                    mov qword [rsp], rcx	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b359	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b35e	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b365	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b36c	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b36f	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b375	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b37d	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400b382	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400b384	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4224	cp-demangle.c	FUNCTION_71
0x400b389	        0x488b0c24	                    mov rcx, qword [rsp]	      4224	cp-demangle.c	FUNCTION_71
0x400b38d	            0xeb98	                           jmp 0x400b327	      4224	cp-demangle.c	FUNCTION_71
0x400b38f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b395	     0xf84e5030000	                            je 0x400b780	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b39b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b39f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b3a6	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b3ad	      0xc64405007d	              mov byte [rbp + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x400b3b2	    0xc68508010000	           mov byte [rbp + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x400b3b9	     0xf848f030000	                            je 0x400b74e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b3bf	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b3c3	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b3c9	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x400b3d0	      0xc64415003a	              mov byte [rbp + rdx], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400b3d5	    0xc68508010000	           mov byte [rbp + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x400b3dc	     0xf843c030000	                            je 0x400b71e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b3e2	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400b3e6	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x400b3ed	      0xc64405003a	              mov byte [rbp + rax], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400b3f2	    0xc68508010000	           mov byte [rbp + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x400b3f9	        0x488b5b08	                mov rbx, qword [rbx + 8]	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400b3fd	            0x8b03	                    mov eax, dword [rbx]	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400b3ff	      0xe954fbffff	                           jmp 0x400af58	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400b404	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b40b	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b412	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b417	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b41a	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b420	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b428	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400b42d	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400b42f	      0xe9fefaffff	                           jmp 0x400af32	      4224	cp-demangle.c	FUNCTION_71
0x400b434	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b43b	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b442	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b447	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b44a	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b450	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b458	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400b45d	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400b45f	      0xe95efcffff	                           jmp 0x400b0c2	      4224	cp-demangle.c	FUNCTION_71
0x400b464	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b46b	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b472	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b477	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b47a	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b480	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b488	        0xc645003a	                    mov byte [rbp], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400b48c	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b491	      0xe928fcffff	                           jmp 0x400b0be	      4235	cp-demangle.c	FUNCTION_72
0x400b496	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b49d	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b4a4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b4a9	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b4ac	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b4b2	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b4ba	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400b4bf	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400b4c1	      0xe9cffdffff	                           jmp 0x400b295	      4224	cp-demangle.c	FUNCTION_71
0x400b4c6	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b4cd	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b4d4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b4d9	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b4dc	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b4e2	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b4ea	        0xc6450067	                    mov byte [rbp], 0x67	      4235	cp-demangle.c	FUNCTION_72
0x400b4ee	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b4f3	      0xe999fdffff	                           jmp 0x400b291	      4235	cp-demangle.c	FUNCTION_72
0x400b4f8	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b4ff	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b506	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b50b	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b50e	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b514	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b51c	        0xc6450072	                    mov byte [rbp], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400b520	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b525	      0xe944fdffff	                           jmp 0x400b26e	      4235	cp-demangle.c	FUNCTION_72
0x400b52a	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b531	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b538	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b53d	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b540	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b546	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b54e	        0xc6450061	                    mov byte [rbp], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400b552	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b557	      0xe9eefcffff	                           jmp 0x400b24a	      4235	cp-demangle.c	FUNCTION_72
0x400b55c	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b563	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b56a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b56f	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b572	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b578	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b580	        0xc6450020	                    mov byte [rbp], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400b584	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b589	      0xe999fcffff	                           jmp 0x400b227	      4235	cp-demangle.c	FUNCTION_72
0x400b58e	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b595	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b59c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b5a1	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b5a4	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b5aa	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b5b2	        0xc6450074	                    mov byte [rbp], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400b5b6	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b5bb	      0xe943fcffff	                           jmp 0x400b203	      4235	cp-demangle.c	FUNCTION_72
0x400b5c0	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b5c7	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b5ce	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b5d3	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b5d6	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b5dc	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b5e4	        0xc645006c	                    mov byte [rbp], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x400b5e8	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b5ed	      0xe9eefbffff	                           jmp 0x400b1e0	      4235	cp-demangle.c	FUNCTION_72
0x400b5f2	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b5f9	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b600	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b605	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b608	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b60e	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b616	        0xc6450075	                    mov byte [rbp], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x400b61a	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b61f	      0xe998fbffff	                           jmp 0x400b1bc	      4235	cp-demangle.c	FUNCTION_72
0x400b624	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b62b	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b632	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b637	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b63a	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b640	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b648	        0xc6450061	                    mov byte [rbp], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400b64c	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b651	      0xe943fbffff	                           jmp 0x400b199	      4235	cp-demangle.c	FUNCTION_72
0x400b656	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b65d	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b664	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b669	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b66c	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b672	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b67a	        0xc6450066	                    mov byte [rbp], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x400b67e	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b683	      0xe9edfaffff	                           jmp 0x400b175	      4235	cp-demangle.c	FUNCTION_72
0x400b688	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b68f	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b696	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b69b	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b69e	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b6a4	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b6ac	        0xc6450065	                    mov byte [rbp], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400b6b0	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b6b5	      0xe998faffff	                           jmp 0x400b152	      4235	cp-demangle.c	FUNCTION_72
0x400b6ba	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b6c1	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b6c8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b6cd	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b6d0	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b6d6	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b6de	        0xc6450064	                    mov byte [rbp], 0x64	      4235	cp-demangle.c	FUNCTION_72
0x400b6e2	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b6e7	      0xe942faffff	                           jmp 0x400b12e	      4235	cp-demangle.c	FUNCTION_72
0x400b6ec	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b6f3	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b6fa	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b6ff	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b702	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b708	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b710	        0xc645007b	                    mov byte [rbp], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x400b714	      0xb901000000	                              mov ecx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b719	      0xe9edf9ffff	                           jmp 0x400b10b	      4235	cp-demangle.c	FUNCTION_72
0x400b71e	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b725	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b72c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b731	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b734	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b73a	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b742	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400b747	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400b749	      0xe998fcffff	                           jmp 0x400b3e6	      4224	cp-demangle.c	FUNCTION_71
0x400b74e	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b755	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b75c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b761	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b764	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b76a	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b772	        0xc645003a	                    mov byte [rbp], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400b776	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b77b	      0xe962fcffff	                           jmp 0x400b3e2	      4235	cp-demangle.c	FUNCTION_72
0x400b780	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b787	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400b78e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b793	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b796	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400b79c	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400b7a4	        0xc645007d	                    mov byte [rbp], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x400b7a8	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400b7ad	      0xe90dfcffff	                           jmp 0x400b3bf	      4235	cp-demangle.c	FUNCTION_72
0x400b7b2	      0xe800000000	                          call 0x400b7b7	      5868	cp-demangle.c	FUNCTION_89
d_function_type	CALL,6:IF,3:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	107
0x400d660	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x400d664	          0x803846	                    cmp byte [rax], 0x46	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x400d667	            0x7407	                            je 0x400d670	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x400d669	            0x31c0	                            xor eax, eax	      2849	cp-demangle.c	FUNCTION_37	IF_1
0x400d66b	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
0x400d66c	         0xf1f4000	                         nop dword [rax]	      2862	cp-demangle.c	FUNCTION_37
0x400d670	              0x55	                                push rbp	      2845	cp-demangle.c	FUNCTION_37
0x400d671	        0x488d5001	                      lea rdx, [rax + 1]	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x400d675	              0x53	                                push rbx	      2845	cp-demangle.c	FUNCTION_37
0x400d676	        0x4883ec08	                              sub rsp, 8	      2845	cp-demangle.c	FUNCTION_37
0x400d67a	        0x48895718	             mov qword [rdi + 0x18], rdx	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x400d67e	         0xfb64801	               movzx ecx, byte [rax + 1]	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x400d682	          0x80f959	                            cmp cl, 0x59	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x400d685	     0xf8435010000	                            je 0x400d7c0	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x400d68b	          0x80f94a	                            cmp cl, 0x4a	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x400d68e	     0xf841c010000	                            je 0x400d7b0	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x400d694	          0x4889fb	                            mov rbx, rdi	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x400d697	      0xe800000000	                          call 0x400d69c	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x400d69c	          0x4885c0	                           test rax, rax	      2933	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x400d69f	          0x4889c5	                            mov rbp, rax	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x400d6a2	     0xf84c0000000	                            je 0x400d768	      2933	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x400d6a8	          0x4889df	                            mov rdi, rbx	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x400d6ab	      0xe850f6ffff	                     call sym.d_parmlist	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x400d6b0	          0x4885c0	                           test rax, rax	      2940	cp-demangle.c	FUNCTION_39	IF_4
0x400d6b3	     0xf84af000000	                            je 0x400d768	      2940	cp-demangle.c	FUNCTION_39	IF_4
0x400d6b9	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d6bc	          0x3b4b2c	            cmp ecx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d6bf	     0xf8da3000000	                           jge 0x400d768	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d6c5	          0x4863d1	                         movsxd rdx, ecx	       935	cp-demangle.c	FUNCTION_3
0x400d6c8	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x400d6cb	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400d6cf	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400d6d3	        0x488d14f2	                  lea rdx, [rdx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x400d6d7	    0xc74204000000	                  mov dword [rdx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400d6de	          0x894b28	             mov dword [rbx + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x400d6e1	    0xc70229000000	                   mov dword [rdx], 0x29	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x400d6e7	        0x48896a08	                mov qword [rdx + 8], rbp	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x400d6eb	        0x48894210	             mov qword [rdx + 0x10], rax	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400d6ef	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x400d6f3	           0xfb608	                   movzx ecx, byte [rax]	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x400d6f6	          0x80f952	                            cmp cl, 0x52	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400d6f9	            0x741d	                            je 0x400d718	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400d6fb	          0x80f94f	                            cmp cl, 0x4f	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400d6fe	            0x89ce	                            mov esi, ecx	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400d700	            0x7416	                            je 0x400d718	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400d702	        0x4080fe45	                           cmp sil, 0x45	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400d706	            0x7447	                            je 0x400d74f	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400d708	        0x4883c408	                              add rsp, 8	      2862	cp-demangle.c	FUNCTION_37
0x400d70c	            0x31c0	                            xor eax, eax	      2849	cp-demangle.c	FUNCTION_37	IF_1
0x400d70e	              0x5b	                                 pop rbx	      2862	cp-demangle.c	FUNCTION_37
0x400d70f	              0x5d	                                 pop rbp	      2862	cp-demangle.c	FUNCTION_37
0x400d710	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
0x400d711	     0xf1f80000000	                         nop dword [rax]	      2862	cp-demangle.c	FUNCTION_37
0x400d718	          0x80f952	                            cmp cl, 0x52	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400d71b	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400d71e	     0xf84b4000000	                            je 0x400d7d8	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400d724	          0x8d4e03	                      lea ecx, [rsi + 3]	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x400d727	    0x41b920000000	                           mov r9d, 0x20	      2830	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x400d72d	          0x894b48	             mov dword [rbx + 0x48], ecx	      2830	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x400d730	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d733	        0x4c8d4001	                       lea r8, [rax + 1]	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x400d737	          0x3b4b2c	            cmp ecx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d73a	        0x4c894318	              mov qword [rbx + 0x18], r8	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x400d73e	            0x7c30	                            jl 0x400d770	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d740	         0xfb67001	               movzx esi, byte [rax + 1]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d744	            0x31d2	                            xor edx, edx	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d746	          0x4c89c0	                             mov rax, r8	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d749	        0x4080fe45	                           cmp sil, 0x45	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400d74d	            0x75b9	                           jne 0x400d708	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400d74f	        0x4883c001	                              add rax, 1	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400d753	        0x48894318	             mov qword [rbx + 0x18], rax	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400d757	        0x4883c408	                              add rsp, 8	      2862	cp-demangle.c	FUNCTION_37
0x400d75b	          0x4889d0	                            mov rax, rdx	      2861	cp-demangle.c	FUNCTION_37
0x400d75e	              0x5b	                                 pop rbx	      2862	cp-demangle.c	FUNCTION_37
0x400d75f	              0x5d	                                 pop rbp	      2862	cp-demangle.c	FUNCTION_37
0x400d760	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
0x400d761	     0xf1f80000000	                         nop dword [rax]	      2862	cp-demangle.c	FUNCTION_37
0x400d768	            0x31d2	                            xor edx, edx	      2934	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x400d76a	            0xeb83	                           jmp 0x400d6ef	      2934	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x400d76c	         0xf1f4000	                         nop dword [rax]	      2934	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x400d770	          0x4863f1	                         movsxd rsi, ecx	       935	cp-demangle.c	FUNCTION_3
0x400d773	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x400d776	        0x488d3c76	                  lea rdi, [rsi + rsi*2]	       935	cp-demangle.c	FUNCTION_3
0x400d77a	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400d77e	        0x488d3cfe	                  lea rdi, [rsi + rdi*8]	       935	cp-demangle.c	FUNCTION_3
0x400d782	    0xc74704000000	                  mov dword [rdi + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400d789	          0x894b28	             mov dword [rbx + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x400d78c	        0x48895708	                mov qword [rdi + 8], rdx	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x400d790	          0x44890f	                    mov dword [rdi], r9d	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x400d793	          0x4889fa	                            mov rdx, rdi	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400d796	    0x48c747100000	               mov qword [rdi + 0x10], 0	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400d79e	         0xfb67001	               movzx esi, byte [rax + 1]	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400d7a2	          0x4c89c0	                             mov rax, r8	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400d7a5	      0xe958ffffff	                           jmp 0x400d702	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400d7aa	    0x660f1f440000	                    nop word [rax + rax]	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400d7b0	        0x4883c201	                              add rdx, 1	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x400d7b4	        0x48895718	             mov qword [rdi + 0x18], rdx	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x400d7b8	      0xe9d7feffff	                           jmp 0x400d694	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x400d7bd	           0xf1f00	                         nop dword [rax]	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x400d7c0	        0x488d5002	                      lea rdx, [rax + 2]	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x400d7c4	        0x48895718	             mov qword [rdi + 0x18], rdx	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x400d7c8	         0xfb64802	               movzx ecx, byte [rax + 2]	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x400d7cc	      0xe9bafeffff	                           jmp 0x400d68b	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x400d7d1	     0xf1f80000000	                         nop dword [rax]	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x400d7d8	          0x8d4e02	                      lea ecx, [rsi + 2]	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400d7db	    0x41b91f000000	                           mov r9d, 0x1f	      2825	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400d7e1	      0xe947ffffff	                           jmp 0x400d72d	      2825	cp-demangle.c	FUNCTION_36	IF_1	IF_2
d_template_param	CALL,3:IF,2:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	62
0x4000570	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000574	          0x803854	                    cmp byte [rax], 0x54	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000577	            0x7407	                            je 0x4000580	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000579	            0x31c0	                            xor eax, eax	      3097	cp-demangle.c	FUNCTION_45	IF_2
0x400057b	              0xc3	                                     ret	      3100	cp-demangle.c	FUNCTION_45
0x400057c	         0xf1f4000	                         nop dword [rax]	      3100	cp-demangle.c	FUNCTION_45
0x4000580	        0x4c8d4001	                       lea r8, [rax + 1]	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000584	        0x4c894718	              mov qword [rdi + 0x18], r8	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000588	         0xfbe4801	               movsx ecx, byte [rax + 1]	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400058c	          0x80f95f	                            cmp cl, 0x5f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400058f	     0xf84ab000000	                            je 0x4000640	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x4000595	          0x80f96e	                            cmp cl, 0x6e	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x4000598	            0x74df	                            je 0x4000579	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400059a	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400059d	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400059f	            0x77d8	                            ja 0x4000579	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x40005a1	          0x4531c9	                            xor r9d, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005a4	    0x41bbffffff7f	                    mov r11d, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005aa	    0x41ba67666666	                    mov r10d, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005b0	            0xeb20	                           jmp 0x40005d2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005b2	    0x660f1f440000	                    nop word [rax + rax]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005b8	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005bb	          0x4489de	                           mov esi, r11d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005be	            0x29c6	                            sub esi, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005c0	            0x89f0	                            mov eax, esi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005c2	          0xc1fe1f	                           sar esi, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005c5	          0x41f7ea	                               imul r10d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005c8	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005cb	            0x29f2	                            sub edx, esi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005cd	          0x4439ca	                            cmp edx, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005d0	            0x7ca7	                            jl 0x4000579	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40005d2	        0x438d0489	                    lea eax, [r9 + r9*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x40005d6	        0x4983c001	                               add r8, 1	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x40005da	        0x4c894718	              mov qword [rdi + 0x18], r8	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x40005de	          0x8d0441	                  lea eax, [rcx + rax*2]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x40005e1	        0x410fbe08	                    movsx ecx, byte [r8]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x40005e5	        0x448d48d0	                   lea r9d, [rax - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x40005e9	          0x8d51d0	                   lea edx, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x40005ec	          0x80fa09	                               cmp dl, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x40005ef	            0x76c7	                           jbe 0x40005b8	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x40005f1	          0x80f95f	                            cmp cl, 0x5f	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40005f4	          0x8d50d1	                   lea edx, [rax - 0x2f]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40005f7	            0x7580	                           jne 0x4000579	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40005f9	        0x4983c001	                               add r8, 1	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40005fd	          0x8b4f28	            mov ecx, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000600	          0x3b4f2c	            cmp ecx, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000603	        0x4c894718	              mov qword [rdi + 0x18], r8	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000607	     0xf8d6cffffff	                           jge 0x4000579	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400060d	          0x4863c1	                         movsxd rax, ecx	       935	cp-demangle.c	FUNCTION_3
0x4000610	          0x4863d2	                         movsxd rdx, edx	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x4000613	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x4000616	        0x488d3440	                  lea rsi, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x400061a	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400061e	        0x488d04f0	                  lea rax, [rax + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x4000622	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000629	          0x894f28	             mov dword [rdi + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x400062c	    0xc70005000000	                      mov dword [rax], 5	      1173	cp-demangle.c	FUNCTION_13	IF_1
0x4000632	        0x48895008	                mov qword [rax + 8], rdx	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x4000636	              0xc3	                                     ret	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x4000637	    0x660f1f840000	                    nop word [rax + rax]	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x4000640	            0x31d2	                            xor edx, edx	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x4000642	            0xebb5	                           jmp 0x40005f9	      3072	cp-demangle.c	FUNCTION_44	IF_1
d_expr_primary	CALL,13:IF,7:SWITCH,0:ELSE,1:WHILE,1:FOR,0:DO,0:functions,0	114
0x400f550	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400f554	          0x80384c	                    cmp byte [rax], 0x4c	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400f557	            0x7407	                            je 0x400f560	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400f559	            0x31c0	                            xor eax, eax	      3524	cp-demangle.c	FUNCTION_53	IF_1
0x400f55b	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
0x400f55c	         0xf1f4000	                         nop dword [rax]	      3574	cp-demangle.c	FUNCTION_53
0x400f560	        0x488d5001	                      lea rdx, [rax + 1]	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400f564	              0x53	                                push rbx	      3520	cp-demangle.c	FUNCTION_53
0x400f565	          0x4889fb	                            mov rbx, rdi	      3520	cp-demangle.c	FUNCTION_53
0x400f568	        0x48895718	             mov qword [rdi + 0x18], rdx	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400f56c	         0xfb64801	               movzx ecx, byte [rax + 1]	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x400f570	          0x80f95f	                            cmp cl, 0x5f	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x400f573	     0xf84c7000000	                            je 0x400f640	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x400f579	          0x80f95a	                            cmp cl, 0x5a	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x400f57c	     0xf84be000000	                            je 0x400f640	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x400f582	      0xe800000000	                          call 0x400f587	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x400f587	          0x4885c0	                           test rax, rax	      3536	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x400f58a	     0xf84d8000000	                            je 0x400f668	      3536	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x400f590	          0x833827	                   cmp dword [rax], 0x27	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f593	     0xf8437010000	                            je 0x400f6d0	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f599	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x400f59d	      0xbe3c000000	                           mov esi, 0x3c	      3556	cp-demangle.c	FUNCTION_53	ELSE_1
0x400f5a2	           0xfb60f	                   movzx ecx, byte [rdi]	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x400f5a5	          0x80f96e	                            cmp cl, 0x6e	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x400f5a8	     0xf8402010000	                            je 0x400f6b0	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x400f5ae	          0x80f945	                            cmp cl, 0x45	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x400f5b1	     0xf8433010000	                            je 0x400f6ea	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x400f5b7	            0x84c9	                             test cl, cl	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400f5b9	     0xf84a9000000	                            je 0x400f668	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400f5bf	        0x488d4f01	                      lea rcx, [rdi + 1]	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400f5c3	            0xeb10	                           jmp 0x400f5d5	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400f5c5	           0xf1f00	                         nop dword [rax]	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400f5c8	        0x4883c101	                              add rcx, 1	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400f5cc	          0x4584c0	                           test r8b, r8b	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400f5cf	     0xf8493000000	                            je 0x400f668	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x400f5d5	        0x48894b18	             mov qword [rbx + 0x18], rcx	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x400f5d9	        0x440fb601	                   movzx r8d, byte [rcx]	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x400f5dd	        0x4180f845	                           cmp r8b, 0x45	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x400f5e1	            0x75e5	                           jne 0x400f5c8	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x400f5e3	            0x29f9	                            sub ecx, edi	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x400f5e5	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f5e8	          0x3b532c	            cmp edx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f5eb	     0xf8d8f000000	                           jge 0x400f680	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f5f1	          0x4c63c2	                          movsxd r8, edx	       935	cp-demangle.c	FUNCTION_3
0x400f5f4	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x400f5f7	          0x4885ff	                           test rdi, rdi	       861	cp-demangle.c	IF_1
0x400f5fa	        0x4f8d0c40	                     lea r9, [r8 + r8*2]	       935	cp-demangle.c	FUNCTION_3
0x400f5fe	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	       935	cp-demangle.c	FUNCTION_3
0x400f602	        0x4f8d04c8	                     lea r8, [r8 + r9*8]	       935	cp-demangle.c	FUNCTION_3
0x400f606	    0x41c740040000	                   mov dword [r8 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400f60e	          0x895328	             mov dword [rbx + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x400f611	           0xf94c2	                                 sete dl	       861	cp-demangle.c	IF_1
0x400f614	            0x85c9	                           test ecx, ecx	       861	cp-demangle.c	IF_1
0x400f616	            0x7468	                            je 0x400f680	       861	cp-demangle.c	IF_1
0x400f618	            0x84d2	                             test dl, dl	       861	cp-demangle.c	IF_1
0x400f61a	            0x7564	                           jne 0x400f680	       861	cp-demangle.c	IF_1
0x400f61c	        0x41894810	              mov dword [r8 + 0x10], ecx	       866	cp-demangle.c	
0x400f620	    0x41c740040000	                   mov dword [r8 + 4], 0	       863	cp-demangle.c	
0x400f628	          0x4c89c1	                             mov rcx, r8	       866	cp-demangle.c	
0x400f62b	    0x41c700000000	                       mov dword [r8], 0	       864	cp-demangle.c	
0x400f632	        0x49897808	                 mov qword [r8 + 8], rdi	       865	cp-demangle.c	
0x400f636	            0xeb4a	                           jmp 0x400f682	       865	cp-demangle.c	
0x400f638	     0xf1f84000000	                   nop dword [rax + rax]	       865	cp-demangle.c	
0x400f640	          0x80f95f	                            cmp cl, 0x5f	      1226	cp-demangle.c	IF_5
0x400f643	            0x745b	                            je 0x400f6a0	      1226	cp-demangle.c	IF_5
0x400f645	            0x31c0	                            xor eax, eax	      1229	cp-demangle.c	IF_6
0x400f647	          0x80f95a	                            cmp cl, 0x5a	      1228	cp-demangle.c	IF_6	CALL_84
0x400f64a	            0x7517	                           jne 0x400f663	      1228	cp-demangle.c	IF_6	CALL_84
0x400f64c	        0x4883c201	                              add rdx, 1	      1228	cp-demangle.c	IF_6	CALL_84
0x400f650	          0x4889df	                            mov rdi, rbx	      1230	cp-demangle.c	CALL_85
0x400f653	        0x48895318	             mov qword [rbx + 0x18], rdx	      1228	cp-demangle.c	IF_6	CALL_84
0x400f657	      0xe834fdffff	        call sym.d_encoding.constprop.23	      1230	cp-demangle.c	CALL_85
0x400f65c	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1230	cp-demangle.c	CALL_85
0x400f660	           0xfb60a	                   movzx ecx, byte [rdx]	      1230	cp-demangle.c	CALL_85
0x400f663	          0x80f945	                            cmp cl, 0x45	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400f666	            0x7408	                            je 0x400f670	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400f668	            0x31c0	                            xor eax, eax	      3524	cp-demangle.c	FUNCTION_53	IF_1
0x400f66a	              0x5b	                                 pop rbx	      3574	cp-demangle.c	FUNCTION_53
0x400f66b	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
0x400f66c	         0xf1f4000	                         nop dword [rax]	      3574	cp-demangle.c	FUNCTION_53
0x400f670	        0x4883c201	                              add rdx, 1	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400f674	        0x48895318	             mov qword [rbx + 0x18], rdx	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x400f678	              0x5b	                                 pop rbx	      3574	cp-demangle.c	FUNCTION_53
0x400f679	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
0x400f67a	    0x660f1f440000	                    nop word [rax + rax]	      3574	cp-demangle.c	FUNCTION_53
0x400f680	            0x31c9	                            xor ecx, ecx	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x400f682	          0x4889c2	                            mov rdx, rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x400f685	          0x4889df	                            mov rdi, rbx	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x400f688	      0xe8b309ffff	                    call sym.d_make_comp	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x400f68d	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x400f691	           0xfb60a	                   movzx ecx, byte [rdx]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x400f694	            0xebcd	                           jmp 0x400f663	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x400f696	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x400f6a0	        0x488d5002	                      lea rdx, [rax + 2]	      1222	cp-demangle.c	IF_5	CALL_83
0x400f6a4	        0x48895318	             mov qword [rbx + 0x18], rdx	      1222	cp-demangle.c	IF_5	CALL_83
0x400f6a8	         0xfb64802	               movzx ecx, byte [rax + 2]	      1222	cp-demangle.c	IF_5	CALL_83
0x400f6ac	            0xeb97	                           jmp 0x400f645	      1222	cp-demangle.c	IF_5	CALL_83
0x400f6ae	            0x6690	                                     nop	      1222	cp-demangle.c	IF_5	CALL_83
0x400f6b0	        0x488d5701	                      lea rdx, [rdi + 1]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400f6b4	      0xbe3d000000	                           mov esi, 0x3d	      3559	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5
0x400f6b9	        0x48895318	             mov qword [rbx + 0x18], rdx	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400f6bd	         0xfb64f01	               movzx ecx, byte [rdi + 1]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400f6c1	          0x4889d7	                            mov rdi, rdx	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400f6c4	      0xe9e5feffff	                           jmp 0x400f5ae	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400f6c9	     0xf1f80000000	                         nop dword [rax]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x400f6d0	        0x488b5008	                mov rdx, qword [rax + 8]	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f6d4	          0x8b4a1c	            mov ecx, dword [rdx + 0x1c] 	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f6d7	            0x85c9	                           test ecx, ecx	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f6d9	     0xf84bafeffff	                            je 0x400f599	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f6df	          0x8b5208	                mov edx, dword [rdx + 8]	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f6e2	          0x295348	             sub dword [rbx + 0x48], edx	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f6e5	      0xe9affeffff	                           jmp 0x400f599	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400f6ea	            0x31c9	                            xor ecx, ecx	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x400f6ec	      0xe9f4feffff	                           jmp 0x400f5e5	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
d_print_subexpr	CALL,3:IF,3:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	92
0x40088e0	            0x4155	                                push r13	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088e2	            0x4154	                                push r12	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088e4	          0x4189f5	                           mov r13d, esi	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088e7	              0x55	                                push rbp	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088e8	              0x53	                                push rbx	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088e9	          0x4889d5	                            mov rbp, rdx	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088ec	          0x4889fb	                            mov rbx, rdi	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088ef	        0x4883ec28	                           sub rsp, 0x28	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088f3	    0x64488b042528	                mov rax, qword fs:[0x28]	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x40088fc	      0x4889442418	             mov qword [rsp + 0x18], rax	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008901	            0x31c0	                            xor eax, eax	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008903	            0x8b02	                    mov eax, dword [rdx]	      4486	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4008905	          0x83f830	                           cmp eax, 0x30	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4008908	     0xf869a000000	                           jbe 0x40089a8	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x400890e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4008915	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400891b	     0xf84ff000000	                            je 0x4008a20	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4008921	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4008925	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400892c	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4008930	          0x4531e4	                          xor r12d, r12d	      4485	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008933	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x400893a	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400893d	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008940	     0xf8f88000000	                            jg 0x40089ce	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008946	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400894c	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008952	            0x7f7a	                            jg 0x40089ce	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4008954	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4008957	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x400895a	          0x4489ee	                           mov esi, r13d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400895d	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4008960	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4008967	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400896a	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4008970	    0x4889a3480100	            mov qword [rbx + 0x148], rsp	      5726	cp-demangle.c	FUNCTION_87
0x4008977	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400897a	        0x48892c24	                    mov qword [rsp], rbp	      5724	cp-demangle.c	FUNCTION_87
0x400897e	      0x4889442408	                mov qword [rsp + 8], rax	      5725	cp-demangle.c	FUNCTION_87
0x4008983	      0xe8a884ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4008988	      0x488b442408	                mov rax, qword [rsp + 8]	      5730	cp-demangle.c	FUNCTION_87
0x400898d	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4008994	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4008998	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x400899f	            0xeb37	                           jmp 0x40089d8	      5732	cp-demangle.c	FUNCTION_87
0x40089a1	     0xf1f80000000	                         nop dword [rax]	      5732	cp-demangle.c	FUNCTION_87
0x40089a8	    0x48ba43000000	            movabs rdx, 0x1000000000043 	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x40089b2	    0x41bc01000000	                             mov r12d, 1	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x40089b8	        0x480fa3c2	                             bt rdx, rax	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x40089bc	     0xf834cffffff	                           jae 0x400890e	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x40089c2	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40089c5	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40089c8	     0xf8e78ffffff	                           jle 0x4008946	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40089ce	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40089d8	          0x4585e4	                         test r12d, r12d	      4494	cp-demangle.c	ELSE_1	FUNCTION_82	IF_3
0x40089db	            0x7525	                           jne 0x4008a02	      4494	cp-demangle.c	ELSE_1	FUNCTION_82	IF_3
0x40089dd	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40089e4	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40089ea	            0x7464	                            je 0x4008a50	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40089ec	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40089f0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40089f7	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x40089fb	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4008a02	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a07	    0x644833042528	                xor rax, qword fs:[0x28]	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a10	            0x756e	                           jne 0x4008a80	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a12	        0x4883c428	                           add rsp, 0x28	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a16	              0x5b	                                 pop rbx	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a17	              0x5d	                                 pop rbp	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a18	            0x415c	                                 pop r12	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a1a	            0x415d	                                 pop r13	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a1c	              0xc3	                                     ret	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a1d	           0xf1f00	                         nop dword [rax]	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4008a20	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008a27	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008a2e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008a33	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008a36	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008a3c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008a44	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4008a49	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4008a4b	      0xe9d5feffff	                           jmp 0x4008925	      4224	cp-demangle.c	FUNCTION_71
0x4008a50	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008a57	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008a5e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008a63	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008a66	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008a6c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008a74	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4008a79	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4008a7b	      0xe970ffffff	                           jmp 0x40089f0	      4224	cp-demangle.c	FUNCTION_71
0x4008a80	      0xe800000000	                          call 0x4008a85	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
d_parmlist	CALL,3:IF,6:SWITCH,0:ELSE,0:WHILE,1:FOR,0:DO,0:functions,0	81
0x400cd00	              0x55	                                push rbp	      2868	cp-demangle.c	FUNCTION_38
0x400cd01	              0x53	                                push rbx	      2868	cp-demangle.c	FUNCTION_38
0x400cd02	        0x4883ec18	                           sub rsp, 0x18	      2868	cp-demangle.c	FUNCTION_38
0x400cd06	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x400cd0a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	cp-demangle.c	FUNCTION_38
0x400cd13	      0x4889442408	                mov qword [rsp + 8], rax	      2868	cp-demangle.c	FUNCTION_38
0x400cd18	            0x31c0	                            xor eax, eax	      2868	cp-demangle.c	FUNCTION_38
0x400cd1a	    0x48c704240000	                      mov qword [rsp], 0	      2872	cp-demangle.c	FUNCTION_38
0x400cd22	           0xfb602	                   movzx eax, byte [rdx]	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x400cd25	            0x3c45	                            cmp al, 0x45	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd27	        0x400f94c6	                                sete sil	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd2b	            0x84c0	                             test al, al	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd2d	           0xf94c1	                                 sete cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd30	          0x4008ce	                              or sil, cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd33	            0x753a	                           jne 0x400cd6f	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd35	            0x3c2e	                            cmp al, 0x2e	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd37	            0x7436	                            je 0x400cd6f	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd39	          0x4889fb	                            mov rbx, rdi	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd3c	          0x4889e5	                            mov rbp, rsp	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd3f	              0x90	                                     nop	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cd40	            0x3c52	                            cmp al, 0x52	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x400cd42	            0x7404	                            je 0x400cd48	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x400cd44	            0x3c4f	                            cmp al, 0x4f	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x400cd46	            0x750a	                           jne 0x400cd52	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x400cd48	        0x807a0145	                cmp byte [rdx + 1], 0x45	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x400cd4c	     0xf8493000000	                            je 0x400cde5	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x400cd52	          0x4889df	                            mov rdi, rbx	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x400cd55	      0xe800000000	                          call 0x400cd5a	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x400cd5a	          0x4885c0	                           test rax, rax	      2886	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x400cd5d	            0x7410	                            je 0x400cd6f	      2886	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x400cd5f	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cd62	          0x3b4b2c	            cmp ecx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cd65	            0x7c29	                            jl 0x400cd90	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cd67	    0x48c745000000	                      mov qword [rbp], 0	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x400cd6f	            0x31c0	                            xor eax, eax	      2890	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x400cd71	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2910	cp-demangle.c	FUNCTION_38
0x400cd76	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2910	cp-demangle.c	FUNCTION_38
0x400cd7f	     0xf85a6000000	                           jne 0x400ce2b	      2910	cp-demangle.c	FUNCTION_38
0x400cd85	        0x4883c418	                           add rsp, 0x18	      2910	cp-demangle.c	FUNCTION_38
0x400cd89	              0x5b	                                 pop rbx	      2910	cp-demangle.c	FUNCTION_38
0x400cd8a	              0x5d	                                 pop rbp	      2910	cp-demangle.c	FUNCTION_38
0x400cd8b	              0xc3	                                     ret	      2910	cp-demangle.c	FUNCTION_38
0x400cd8c	         0xf1f4000	                         nop dword [rax]	      2910	cp-demangle.c	FUNCTION_38
0x400cd90	          0x4863d1	                         movsxd rdx, ecx	       935	cp-demangle.c	FUNCTION_3
0x400cd93	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x400cd96	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400cd9a	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400cd9e	        0x488d14f2	                  lea rdx, [rdx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x400cda2	    0xc74204000000	                  mov dword [rdx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400cda9	          0x894b28	             mov dword [rbx + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x400cdac	    0xc7022e000000	                   mov dword [rdx], 0x2e	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x400cdb2	        0x48894208	                mov qword [rdx + 8], rax	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x400cdb6	    0x48c742100000	               mov qword [rdx + 0x10], 0	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400cdbe	        0x48895500	                    mov qword [rbp], rdx	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x400cdc2	        0x488d6a10	                   lea rbp, [rdx + 0x10]	      2891	cp-demangle.c	FUNCTION_38	WHILE_1
0x400cdc6	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x400cdca	           0xfb602	                   movzx eax, byte [rdx]	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x400cdcd	            0x84c0	                             test al, al	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cdcf	        0x400f94c6	                                sete sil	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cdd3	            0x3c45	                            cmp al, 0x45	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cdd5	           0xf94c1	                                 sete cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cdd8	          0x4008ce	                              or sil, cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cddb	            0x7508	                           jne 0x400cde5	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cddd	            0x3c2e	                            cmp al, 0x2e	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cddf	     0xf855bffffff	                           jne 0x400cd40	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400cde5	        0x488b0424	                    mov rax, qword [rsp]	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x400cde9	          0x4885c0	                           test rax, rax	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x400cdec	     0xf847dffffff	                            je 0x400cd6f	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x400cdf2	      0x4883781000	               cmp qword [rax + 0x10], 0	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x400cdf7	     0xf8574ffffff	                           jne 0x400cd71	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x400cdfd	        0x488b5008	                mov rdx, qword [rax + 8]	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x400ce01	          0x833a27	                   cmp dword [rdx], 0x27	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x400ce04	     0xf8567ffffff	                           jne 0x400cd71	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x400ce0a	        0x488b5208	                mov rdx, qword [rdx + 8]	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x400ce0e	        0x837a1c09	               cmp dword [rdx + 0x1c], 9	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x400ce12	     0xf8559ffffff	                           jne 0x400cd71	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x400ce18	          0x8b5208	                mov edx, dword [rdx + 8]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x400ce1b	          0x295348	             sub dword [rbx + 0x48], edx	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x400ce1e	    0x48c740080000	                  mov qword [rax + 8], 0	      2906	cp-demangle.c	FUNCTION_38	IF_6
0x400ce26	      0xe946ffffff	                           jmp 0x400cd71	      2906	cp-demangle.c	FUNCTION_38	IF_6
0x400ce2b	      0xe800000000	             call sym.d_unqualified_name	      2910	cp-demangle.c	FUNCTION_38
d_cv_qualifiers	CALL,10:IF,13:SWITCH,1:ELSE,6:WHILE,2:FOR,0:DO,0:functions,0	176
0x400e810	            0x4157	                                push r15	      2708	cp-demangle.c	FUNCTION_35
0x400e812	            0x4156	                                push r14	      2708	cp-demangle.c	FUNCTION_35
0x400e814	    0x49be01080000	                movabs r14, 0x8000000801	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400e81e	            0x4155	                                push r13	      2708	cp-demangle.c	FUNCTION_35
0x400e820	            0x4154	                                push r12	      2708	cp-demangle.c	FUNCTION_35
0x400e822	          0x4189d5	                           mov r13d, edx	      2708	cp-demangle.c	FUNCTION_35
0x400e825	              0x55	                                push rbp	      2708	cp-demangle.c	FUNCTION_35
0x400e826	              0x53	                                push rbx	      2708	cp-demangle.c	FUNCTION_35
0x400e827	          0x4889fb	                            mov rbx, rdi	      2708	cp-demangle.c	FUNCTION_35
0x400e82a	          0x4989f4	                            mov r12, rsi	      2708	cp-demangle.c	FUNCTION_35
0x400e82d	          0x4889f5	                            mov rbp, rsi	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x400e830	        0x4883ec18	                           sub rsp, 0x18	      2708	cp-demangle.c	FUNCTION_35
0x400e834	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x400e838	           0xfb60f	                   movzx ecx, byte [rdi]	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x400e83b	       0xf1f440000	                   nop dword [rax + rax]	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x400e840	          0x8d41b5	                   lea eax, [rcx - 0x4b]	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400e843	            0x3c27	                            cmp al, 0x27	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400e845	     0xf8685000000	                           jbe 0x400e8d0	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400e84b	          0x80f944	                            cmp cl, 0x44	      2293	cp-demangle.c	FUNCTION_34	IF_2
0x400e84e	            0x7518	                           jne 0x400e868	      2293	cp-demangle.c	FUNCTION_34	IF_2
0x400e850	         0xfb64701	               movzx eax, byte [rdi + 1]	      2295	cp-demangle.c	FUNCTION_34	IF_2	CALL_2
0x400e854	            0x89c2	                            mov edx, eax	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x400e856	          0x83e2df	                     and edx, 0xffffffdf	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x400e859	          0x80fa4f	                            cmp dl, 0x4f	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x400e85c	            0x7478	                            je 0x400e8d6	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x400e85e	          0x83e877	                           sub eax, 0x77	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x400e861	            0x3c01	                               cmp al, 1	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x400e863	            0x7671	                           jbe 0x400e8d6	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x400e865	           0xf1f00	                         nop dword [rax]	      2296	cp-demangle.c	FUNCTION_34	IF_2	IF_3
0x400e868	          0x4585ed	                         test r13d, r13d	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x400e86b	            0x7550	                           jne 0x400e8bd	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x400e86d	          0x80f946	                            cmp cl, 0x46	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x400e870	            0x754b	                           jne 0x400e8bd	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x400e872	          0x4c39e5	                            cmp rbp, r12	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e875	            0x7528	                           jne 0x400e89f	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e877	            0xeb44	                           jmp 0x400e8bd	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e879	     0xf1f80000000	                         nop dword [rax]	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e880	          0x83f81b	                           cmp eax, 0x1b	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e883	     0xf840f020000	                            je 0x400ea98	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e889	          0x83f819	                           cmp eax, 0x19	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e88c	            0x7508	                           jne 0x400e896	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e88e	    0x41c704241c00	                   mov dword [r12], 0x1c	      2792	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e896	        0x4983c408	                              add r12, 8	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e89a	          0x4c39e5	                            cmp rbp, r12	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e89d	            0x741e	                            je 0x400e8bd	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e89f	        0x4d8b2424	                    mov r12, qword [r12]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e8a3	        0x418b0424	                    mov eax, dword [r12]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e8a7	          0x83f81a	                           cmp eax, 0x1a	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e8aa	            0x75d4	                           jne 0x400e880	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e8ac	    0x41c704241d00	                   mov dword [r12], 0x1d	      2795	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400e8b4	        0x4983c408	                              add r12, 8	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e8b8	          0x4c39e5	                            cmp rbp, r12	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e8bb	            0x75e2	                           jne 0x400e89f	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e8bd	        0x4883c418	                           add rsp, 0x18	      2808	cp-demangle.c	FUNCTION_35
0x400e8c1	          0x4889e8	                            mov rax, rbp	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x400e8c4	              0x5b	                                 pop rbx	      2808	cp-demangle.c	FUNCTION_35
0x400e8c5	              0x5d	                                 pop rbp	      2808	cp-demangle.c	FUNCTION_35
0x400e8c6	            0x415c	                                 pop r12	      2808	cp-demangle.c	FUNCTION_35
0x400e8c8	            0x415d	                                 pop r13	      2808	cp-demangle.c	FUNCTION_35
0x400e8ca	            0x415e	                                 pop r14	      2808	cp-demangle.c	FUNCTION_35
0x400e8cc	            0x415f	                                 pop r15	      2808	cp-demangle.c	FUNCTION_35
0x400e8ce	              0xc3	                                     ret	      2808	cp-demangle.c	FUNCTION_35
0x400e8cf	              0x90	                                     nop	      2808	cp-demangle.c	FUNCTION_35
0x400e8d0	        0x490fa3c6	                             bt r14, rax	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400e8d4	            0x7392	                           jae 0x400e868	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400e8d6	        0x488d4701	                      lea rax, [rdi + 1]	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x400e8da	          0x80f972	                            cmp cl, 0x72	      2720	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e8dd	        0x48894318	             mov qword [rbx + 0x18], rax	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x400e8e1	     0xf84a9000000	                            je 0x400e990	      2720	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e8e7	          0x80f956	                            cmp cl, 0x56	      2727	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400e8ea	     0xf84c0000000	                            je 0x400e9b0	      2727	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400e8f0	          0x80f94b	                            cmp cl, 0x4b	      2734	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400e8f3	     0xf84d7000000	                            je 0x400e9d0	      2734	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400e8f9	        0x807f0100	                   cmp byte [rdi + 1], 0	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x400e8fd	            0x7431	                            je 0x400e930	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x400e8ff	        0x488d4702	                      lea rax, [rdi + 2]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x400e903	        0x48894318	             mov qword [rbx + 0x18], rax	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x400e907	         0xfb64701	               movzx eax, byte [rdi + 1]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x400e90b	            0x3c78	                            cmp al, 0x78	      2744	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x400e90d	     0xf85dd000000	                           jne 0x400e9f0	      2744	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x400e913	        0x83434811	            add dword [rbx + 0x48], 0x11	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x400e917	    0x41bf4c000000	                          mov r15d, 0x4c	      2746	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x400e91d	            0x31c0	                            xor eax, eax	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e91f	              0x90	                                     nop	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e920	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400e923	          0x3b7b2c	            cmp edi, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400e926	            0x7c20	                            jl 0x400e948	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400e928	    0x48c745000000	                      mov qword [rbp], 0	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x400e930	        0x4883c418	                           add rsp, 0x18	      2808	cp-demangle.c	FUNCTION_35
0x400e934	            0x31c0	                            xor eax, eax	      2779	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x400e936	              0x5b	                                 pop rbx	      2808	cp-demangle.c	FUNCTION_35
0x400e937	              0x5d	                                 pop rbp	      2808	cp-demangle.c	FUNCTION_35
0x400e938	            0x415c	                                 pop r12	      2808	cp-demangle.c	FUNCTION_35
0x400e93a	            0x415d	                                 pop r13	      2808	cp-demangle.c	FUNCTION_35
0x400e93c	            0x415e	                                 pop r14	      2808	cp-demangle.c	FUNCTION_35
0x400e93e	            0x415f	                                 pop r15	      2808	cp-demangle.c	FUNCTION_35
0x400e940	              0xc3	                                     ret	      2808	cp-demangle.c	FUNCTION_35
0x400e941	     0xf1f80000000	                         nop dword [rax]	      2808	cp-demangle.c	FUNCTION_35
0x400e948	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400e94c	          0x4863cf	                         movsxd rcx, edi	       935	cp-demangle.c	FUNCTION_3
0x400e94f	          0x83c701	                              add edi, 1	       937	cp-demangle.c	FUNCTION_3
0x400e952	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	       935	cp-demangle.c	FUNCTION_3
0x400e956	        0x488d0cca	                  lea rcx, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400e95a	    0xc74104000000	                  mov dword [rcx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400e961	          0x897b28	             mov dword [rbx + 0x28], edi	       937	cp-demangle.c	FUNCTION_3
0x400e964	    0x48c741080000	                  mov qword [rcx + 8], 0	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x400e96c	        0x48894110	             mov qword [rcx + 0x10], rax	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400e970	          0x448939	                   mov dword [rcx], r15d	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x400e973	        0x48894d00	                    mov qword [rbp], rcx	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x400e977	        0x488d6908	                      lea rbp, [rcx + 8]	      2780	cp-demangle.c	FUNCTION_35	WHILE_1
0x400e97b	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x400e97f	           0xfb60f	                   movzx ecx, byte [rdi]	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x400e982	      0xe9b9feffff	                           jmp 0x400e840	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x400e987	    0x660f1f840000	                    nop word [rax + rax]	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x400e990	        0x83434809	               add dword [rbx + 0x48], 9	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e994	            0x31c0	                            xor eax, eax	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x400e996	          0x4585ed	                         test r13d, r13d	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e999	    0x41bf1c000000	                          mov r15d, 0x1c	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e99f	     0xf857bffffff	                           jne 0x400e920	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e9a5	    0x41bf19000000	                          mov r15d, 0x19	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e9ab	      0xe970ffffff	                           jmp 0x400e920	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400e9b0	        0x83434809	               add dword [rbx + 0x48], 9	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400e9b4	            0x31c0	                            xor eax, eax	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x400e9b6	          0x4585ed	                         test r13d, r13d	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400e9b9	    0x41bf1d000000	                          mov r15d, 0x1d	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400e9bf	     0xf855bffffff	                           jne 0x400e920	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400e9c5	    0x41bf1a000000	                          mov r15d, 0x1a	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400e9cb	      0xe950ffffff	                           jmp 0x400e920	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400e9d0	        0x83434806	               add dword [rbx + 0x48], 6	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400e9d4	            0x31c0	                            xor eax, eax	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x400e9d6	          0x4585ed	                         test r13d, r13d	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400e9d9	    0x41bf1e000000	                          mov r15d, 0x1e	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400e9df	     0xf853bffffff	                           jne 0x400e920	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400e9e5	    0x41bf1b000000	                          mov r15d, 0x1b	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400e9eb	      0xe930ffffff	                           jmp 0x400e920	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400e9f0	            0x89c2	                            mov edx, eax	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x400e9f2	          0x83e2df	                     and edx, 0xffffffdf	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x400e9f5	          0x80fa4f	                            cmp dl, 0x4f	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x400e9f8	            0x7446	                            je 0x400ea40	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x400e9fa	            0x3c77	                            cmp al, 0x77	      2763	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x400e9fc	     0xf852effffff	                           jne 0x400e930	      2763	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x400ea02	        0x83434806	               add dword [rbx + 0x48], 6	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x400ea06	          0x4889df	                            mov rdi, rbx	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x400ea09	      0xe8f2e2ffff	                     call sym.d_parmlist	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x400ea0e	          0x4885c0	                           test rax, rax	      2768	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x400ea11	     0xf8419ffffff	                            je 0x400e930	      2768	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x400ea17	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x400ea1b	          0x803a45	                    cmp byte [rdx], 0x45	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x400ea1e	     0xf850cffffff	                           jne 0x400e930	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x400ea24	        0x4883c201	                              add rdx, 1	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x400ea28	    0x41bf4f000000	                          mov r15d, 0x4f	      2765	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x400ea2e	        0x48895318	             mov qword [rbx + 0x18], rdx	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x400ea32	      0xe9e9feffff	                           jmp 0x400e920	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x400ea37	    0x660f1f840000	                    nop word [rax + rax]	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x400ea40	        0x83434809	               add dword [rbx + 0x48], 9	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x400ea44	            0x3c4f	                            cmp al, 0x4f	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x400ea46	    0x41bf4e000000	                          mov r15d, 0x4e	      2752	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x400ea4c	     0xf85cbfeffff	                           jne 0x400e91d	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x400ea52	          0x8b534c	            mov edx, dword [rbx + 0x4c] 	      3505	cp-demangle.c	FUNCTION_52
0x400ea55	          0x4889df	                            mov rdi, rbx	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x400ea58	    0xc7434c010000	               mov dword [rbx + 0x4c], 1	      3507	cp-demangle.c	FUNCTION_52
0x400ea5f	        0x8954240c	              mov dword [rsp + 0xc], edx	      3505	cp-demangle.c	FUNCTION_52
0x400ea63	      0xe878f6ffff	                 call sym.d_expression_1	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x400ea68	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3509	cp-demangle.c	FUNCTION_52
0x400ea6c	          0x4885c0	                           test rax, rax	      2757	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x400ea6f	          0x89534c	             mov dword [rbx + 0x4c], edx	      3509	cp-demangle.c	FUNCTION_52
0x400ea72	     0xf84b8feffff	                            je 0x400e930	      2757	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x400ea78	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x400ea7c	          0x803a45	                    cmp byte [rdx], 0x45	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x400ea7f	     0xf85abfeffff	                           jne 0x400e930	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x400ea85	        0x4883c201	                              add rdx, 1	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x400ea89	        0x48895318	             mov qword [rbx + 0x18], rdx	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x400ea8d	      0xe98efeffff	                           jmp 0x400e920	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x400ea92	    0x660f1f440000	                    nop word [rax + rax]	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x400ea98	    0x41c704241e00	                   mov dword [r12], 0x1e	      2798	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x400eaa0	      0xe9f1fdffff	                           jmp 0x400e896	      2799	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
cplus_demangle_v3_callback	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	177
0x4010910	              0x55	                                push rbp	      6462	cp-demangle.c	FUNCTION_101
0x4010911	          0x4889e5	                            mov rbp, rsp	      6462	cp-demangle.c	FUNCTION_101
0x4010914	            0x4157	                                push r15	      6462	cp-demangle.c	FUNCTION_101
0x4010916	            0x4156	                                push r14	      6462	cp-demangle.c	FUNCTION_101
0x4010918	            0x4155	                                push r13	      6462	cp-demangle.c	FUNCTION_101
0x401091a	            0x4154	                                push r12	      6462	cp-demangle.c	FUNCTION_101
0x401091c	          0x4189f7	                           mov r15d, esi	      6462	cp-demangle.c	FUNCTION_101
0x401091f	              0x53	                                push rbx	      6462	cp-demangle.c	FUNCTION_101
0x4010920	          0x4989d5	                            mov r13, rdx	      6462	cp-demangle.c	FUNCTION_101
0x4010923	          0x4889fb	                            mov rbx, rdi	      6462	cp-demangle.c	FUNCTION_101
0x4010926	          0x4989ce	                            mov r14, rcx	      6462	cp-demangle.c	FUNCTION_101
0x4010929	    0x4881ec980000	                           sub rsp, 0x98	      6462	cp-demangle.c	FUNCTION_101
0x4010930	    0x64488b042528	                mov rax, qword fs:[0x28]	      6462	cp-demangle.c	FUNCTION_101
0x4010939	        0x488945c8	             mov qword [rbp - 0x38], rax	      6462	cp-demangle.c	FUNCTION_101
0x401093d	            0x31c0	                            xor eax, eax	      6462	cp-demangle.c	FUNCTION_101
0x401093f	          0x803f5f	                    cmp byte [rdi], 0x5f	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010942	     0xf8418020000	                            je 0x4010b60	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010948	      0xbf00000000	                              mov edi, 0	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x401094d	      0xb908000000	                              mov ecx, 8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010952	          0x4889de	                            mov rsi, rbx	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010955	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010957	            0x7537	                           jne 0x4010990	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010959	         0xfb64308	               movzx eax, byte [rbx + 8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401095d	          0x83e824	                           sub eax, 0x24	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010960	            0x3c3b	                            cmp al, 0x3b	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010962	            0x772c	                            ja 0x4010990	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010964	    0x48ba01040000	          movabs rdx, 0x800000000000401 	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401096e	        0x480fa3c2	                             bt rdx, rax	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010972	            0x731c	                           jae 0x4010990	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010974	         0xfb64309	               movzx eax, byte [rbx + 9]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010978	            0x3c44	                            cmp al, 0x44	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401097a	     0xf84f8010000	                            je 0x4010b78	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010980	            0x3c49	                            cmp al, 0x49	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010982	     0xf84f0010000	                            je 0x4010b78	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010988	     0xf1f84000000	                   nop dword [rax + rax]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010990	          0x4489f8	                           mov eax, r15d	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4010993	          0x83e010	                           and eax, 0x10	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4010996	     0xf849a010000	                            je 0x4010b36	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x401099c	          0x4531e4	                          xor r12d, r12d	      6225	cp-demangle.c	FUNCTION_96	ELSE_2
0x401099f	          0x4889df	                            mov rdi, rbx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40109a2	      0xe800000000	                          call 0x40109a7	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40109a7	        0x488d1403	                    lea rdx, [rbx + rax]	      6170	cp-demangle.c	
0x40109ab	          0x8d3400	                    lea esi, [rax + rax]	      6178	cp-demangle.c	
0x40109ae	    0x4889a568ffff	             mov qword [rbp - 0x98], rsp	      6230	cp-demangle.c	FUNCTION_96
0x40109b5	          0x8945ac	             mov dword [rbp - 0x54], eax	      6183	cp-demangle.c	
0x40109b8	            0x4898	                                    cdqe	      6233	cp-demangle.c	FUNCTION_96
0x40109ba	    0x48899d70ffff	             mov qword [rbp - 0x90], rbx	      6169	cp-demangle.c	
0x40109c1	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      6170	cp-demangle.c	
0x40109c8	          0x4863d6	                         movsxd rdx, esi	      6232	cp-demangle.c	FUNCTION_96
0x40109cb	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6233	cp-demangle.c	FUNCTION_96
0x40109d3	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      6232	cp-demangle.c	FUNCTION_96
0x40109d7	        0x44897d80	            mov dword [rbp - 0x80], r15d	      6171	cp-demangle.c	
0x40109db	        0x48895d88	             mov qword [rbp - 0x78], rbx	      6173	cp-demangle.c	
0x40109df	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      6233	cp-demangle.c	FUNCTION_96
0x40109e3	          0x89759c	             mov dword [rbp - 0x64], esi	      6178	cp-demangle.c	
0x40109e6	    0xc74598000000	               mov dword [rbp - 0x68], 0	      6179	cp-demangle.c	
0x40109ed	    0x488d14d51000	                 lea rdx, [rdx*8 + 0x10]	      6232	cp-demangle.c	FUNCTION_96
0x40109f5	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      6184	cp-demangle.c	
0x40109fc	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      6186	cp-demangle.c	
0x4010a04	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      6188	cp-demangle.c	
0x4010a0b	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6189	cp-demangle.c	
0x4010a12	          0x4829d4	                            sub rsp, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4010a15	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6190	cp-demangle.c	
0x4010a1c	      0x488d4c2407	                      lea rcx, [rsp + 7]	      6232	cp-demangle.c	FUNCTION_96
0x4010a21	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x4010a24	        0x488965a0	             mov qword [rbp - 0x60], rsp	      6236	cp-demangle.c	FUNCTION_96
0x4010a28	        0x48c1e903	                              shr rcx, 3	      6232	cp-demangle.c	FUNCTION_96
0x4010a2c	        0x4183fc01	                             cmp r12d, 1	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010a30	    0x488d14cd0000	                        lea rdx, [rcx*8]	      6232	cp-demangle.c	FUNCTION_96
0x4010a38	        0x48895590	             mov qword [rbp - 0x70], rdx	      6235	cp-demangle.c	FUNCTION_96
0x4010a3c	     0xf84ae000000	                            je 0x4010af0	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010a42	     0xf8290010000	                            jb 0x4010bd8	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010a48	        0x4183fc03	                             cmp r12d, 3	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010a4c	     0xf8786010000	                            ja 0x4010bd8	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010a52	        0x807b0b5f	              cmp byte [rbx + 0xb], 0x5f	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010a56	        0x4c8d4b0b	                     lea r9, [rbx + 0xb]	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4010a5a	        0x4c894d88	              mov qword [rbp - 0x78], r9	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4010a5e	            0x750a	                           jne 0x4010a6a	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010a60	        0x807b0c5a	              cmp byte [rbx + 0xc], 0x5a	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010a64	     0xf8496010000	                            je 0x4010c00	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010a6a	          0x4c89cf	                             mov rdi, r9	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010a6d	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010a74	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010a7b	    0x89b55cffffff	             mov dword [rbp - 0xa4], esi	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010a81	    0x4c898d60ffff	              mov qword [rbp - 0xa0], r9	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010a88	      0xe800000000	                          call 0x4010a8d	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010a8d	    0x8bb55cffffff	             mov esi, dword [rbp - 0xa4]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010a93	    0x4c8b8d60ffff	              mov r9, qword [rbp - 0xa0]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010a9a	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010aa1	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010aa8	            0x85f6	                           test esi, esi	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010aaa	     0xf8ee8000000	                           jle 0x4010b98	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010ab0	            0x85c0	                           test eax, eax	       861	cp-demangle.c	IF_1
0x4010ab2	    0xc704cd040000	                mov dword [rcx*8 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4010abd	    0xc74598010000	               mov dword [rbp - 0x68], 1	       937	cp-demangle.c	FUNCTION_3
0x4010ac4	     0xf84ce000000	                            je 0x4010b98	       861	cp-demangle.c	IF_1
0x4010aca	    0xc704cd000000	                    mov dword [rcx*8], 0	       864	cp-demangle.c	
0x4010ad5	    0x4c890ccd0800	               mov qword [rcx*8 + 8], r9	       865	cp-demangle.c	
0x4010add	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	       865	cp-demangle.c	
0x4010ae4	    0x8904cd100000	           mov dword [rcx*8 + 0x10], eax	       866	cp-demangle.c	
0x4010aeb	      0xe9b1000000	                           jmp 0x4010ba1	       866	cp-demangle.c	
0x4010af0	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010af7	      0xbe01000000	                              mov esi, 1	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010afc	      0xe800000000	                          call 0x4010b01	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010b01	          0x4889c3	                            mov rbx, rax	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010b04	        0x41f6c701	                            test r15b, 1	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010b08	            0x740b	                            je 0x4010b15	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010b0a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010b0e	            0x31c0	                            xor eax, eax	      6278	cp-demangle.c	FUNCTION_96
0x4010b10	          0x803a00	                       cmp byte [rdx], 0	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010b13	            0x751a	                           jne 0x4010b2f	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010b15	          0x4885db	                           test rbx, rbx	      6278	cp-demangle.c	FUNCTION_96
0x4010b18	     0xf84d2000000	                            je 0x4010bf0	      6278	cp-demangle.c	FUNCTION_96
0x4010b1e	          0x4c89f1	                            mov rcx, r14	      6278	cp-demangle.c	FUNCTION_96
0x4010b21	          0x4c89ea	                            mov rdx, r13	      6278	cp-demangle.c	FUNCTION_96
0x4010b24	          0x4889de	                            mov rsi, rbx	      6278	cp-demangle.c	FUNCTION_96
0x4010b27	          0x4489ff	                           mov edi, r15d	      6278	cp-demangle.c	FUNCTION_96
0x4010b2a	      0xe800000000	                          call 0x4010b2f	      6278	cp-demangle.c	FUNCTION_96
0x4010b2f	    0x488ba568ffff	             mov rsp, qword [rbp - 0x98]	      6278	cp-demangle.c	FUNCTION_96
0x4010b36	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      6464	cp-demangle.c	FUNCTION_101
0x4010b3a	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      6464	cp-demangle.c	FUNCTION_101
0x4010b43	     0xf85d3000000	                           jne 0x4010c1c	      6464	cp-demangle.c	FUNCTION_101
0x4010b49	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6464	cp-demangle.c	FUNCTION_101
0x4010b4d	              0x5b	                                 pop rbx	      6464	cp-demangle.c	FUNCTION_101
0x4010b4e	            0x415c	                                 pop r12	      6464	cp-demangle.c	FUNCTION_101
0x4010b50	            0x415d	                                 pop r13	      6464	cp-demangle.c	FUNCTION_101
0x4010b52	            0x415e	                                 pop r14	      6464	cp-demangle.c	FUNCTION_101
0x4010b54	            0x415f	                                 pop r15	      6464	cp-demangle.c	FUNCTION_101
0x4010b56	              0x5d	                                 pop rbp	      6464	cp-demangle.c	FUNCTION_101
0x4010b57	              0xc3	                                     ret	      6464	cp-demangle.c	FUNCTION_101
0x4010b58	     0xf1f84000000	                   nop dword [rax + rax]	      6464	cp-demangle.c	FUNCTION_101
0x4010b60	        0x807f015a	                cmp byte [rdi + 1], 0x5a	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010b64	     0xf85defdffff	                           jne 0x4010948	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010b6a	    0x41bc01000000	                             mov r12d, 1	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x4010b70	      0xe92afeffff	                           jmp 0x401099f	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x4010b75	           0xf1f00	                         nop dword [rax]	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x4010b78	        0x807b0a5f	              cmp byte [rbx + 0xa], 0x5f	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b7c	     0xf850efeffff	                           jne 0x4010990	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b82	          0x4531e4	                          xor r12d, r12d	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b85	            0x3c49	                            cmp al, 0x49	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b87	        0x410f95c4	                              setne r12b	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b8b	        0x4183c402	                             add r12d, 2	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b8f	      0xe90bfeffff	                           jmp 0x401099f	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b94	         0xf1f4000	                         nop dword [rax]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b98	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010b9f	            0x31d2	                            xor edx, edx	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x4010ba1	            0x31f6	                            xor esi, esi	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ba3	        0x4183fc02	                             cmp r12d, 2	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ba7	          0x4889df	                            mov rdi, rbx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010baa	        0x400f95c6	                               setne sil	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010bae	            0x31c9	                            xor ecx, ecx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010bb0	          0x83c643	                           add esi, 0x43	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010bb3	      0xe888f4feff	                    call sym.d_make_comp	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010bb8	        0x4c8b6588	             mov r12, qword [rbp - 0x78]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010bbc	          0x4889c3	                            mov rbx, rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010bbf	          0x4c89e7	                            mov rdi, r12	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010bc2	      0xe800000000	                          call 0x4010bc7	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010bc7	          0x4c01e0	                            add rax, r12	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010bca	        0x48894588	             mov qword [rbp - 0x78], rax	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010bce	      0xe931ffffff	                           jmp 0x4010b04	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010bd3	       0xf1f440000	                   nop dword [rax + rax]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010bd8	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010bdf	      0xe800000000	                          call 0x4010be4	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010be4	          0x4889c3	                            mov rbx, rax	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010be7	      0xe918ffffff	                           jmp 0x4010b04	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010bec	         0xf1f4000	                         nop dword [rax]	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010bf0	            0x31c0	                            xor eax, eax	      6278	cp-demangle.c	FUNCTION_96
0x4010bf2	      0xe938ffffff	                           jmp 0x4010b2f	      6278	cp-demangle.c	FUNCTION_96
0x4010bf7	    0x660f1f840000	                    nop word [rax + rax]	      6278	cp-demangle.c	FUNCTION_96
0x4010c00	        0x4883c30d	                            add rbx, 0xd	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x4010c04	        0x48895d88	             mov qword [rbp - 0x78], rbx	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x4010c08	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010c0f	          0x4889df	                            mov rdi, rbx	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010c12	      0xe879e7ffff	        call sym.d_encoding.constprop.23	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010c17	          0x4889c2	                            mov rdx, rax	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010c1a	            0xeb85	                           jmp 0x4010ba1	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010c1c	      0xe800000000	                          call 0x4010c21	      6464	cp-demangle.c	FUNCTION_101
d_find_pack	CALL,6:IF,3:SWITCH,1:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	67
0x4000490	          0x4885f6	                           test rsi, rsi	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x4000493	     0xf84bc000000	                            je 0x4000555	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x4000499	              0x55	                                push rbp	      4394	cp-demangle.c	FUNCTION_79
0x400049a	              0x53	                                push rbx	      4394	cp-demangle.c	FUNCTION_79
0x400049b	          0x4889fd	                            mov rbp, rdi	      4394	cp-demangle.c	FUNCTION_79
0x400049e	          0x4889f3	                            mov rbx, rsi	      4394	cp-demangle.c	FUNCTION_79
0x40004a1	        0x4883ec08	                              sub rsp, 8	      4394	cp-demangle.c	FUNCTION_79
0x40004a5	          0x833b4b	                   cmp dword [rbx], 0x4b	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40004a8	            0x770e	                            ja 0x40004b8	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40004aa	            0x8b03	                    mov eax, dword [rbx]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40004ac	    0xff24c5000000	                       jmp qword [rax*8]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40004b3	       0xf1f440000	                   nop dword [rax + rax]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40004b8	        0x488b7308	                mov rsi, qword [rbx + 8]	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x40004bc	          0x4889ef	                            mov rdi, rbp	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x40004bf	      0xe8ccffffff	                    call sym.d_find_pack	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x40004c4	          0x4885c0	                           test rax, rax	      4433	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x40004c7	            0x7511	                           jne 0x40004da	      4433	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x40004c9	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x40004cd	          0x4885db	                           test rbx, rbx	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40004d0	            0x75d3	                           jne 0x40004a5	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40004d2	    0x660f1f440000	                    nop word [rax + rax]	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40004d8	            0x31c0	                            xor eax, eax	      4405	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40004da	        0x4883c408	                              add rsp, 8	      4437	cp-demangle.c	FUNCTION_79
0x40004de	              0x5b	                                 pop rbx	      4437	cp-demangle.c	FUNCTION_79
0x40004df	              0x5d	                                 pop rbp	      4437	cp-demangle.c	FUNCTION_79
0x40004e0	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
0x40004e1	     0xf1f80000000	                         nop dword [rax]	      4437	cp-demangle.c	FUNCTION_79
0x40004e8	    0x488b85200100	           mov rax, qword [rbp + 0x120] 	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x40004ef	          0x4885c0	                           test rax, rax	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x40004f2	            0x7464	                            je 0x4000558	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x40004f4	        0x488b4b08	                mov rcx, qword [rbx + 8]	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40004f8	        0x488b4008	                mov rax, qword [rax + 8]	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40004fc	            0x85c9	                           test ecx, ecx	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x40004fe	            0x89ca	                            mov edx, ecx	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4000500	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4000504	            0x783e	                            js 0x4000544	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4000506	          0x4885c0	                           test rax, rax	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4000509	            0x74cd	                            je 0x40004d8	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x400050b	          0x83382f	                   cmp dword [rax], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x400050e	            0x75c8	                           jne 0x40004d8	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4000510	            0x85c9	                           test ecx, ecx	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4000512	            0x7515	                           jne 0x4000529	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4000514	            0xeb2a	                           jmp 0x4000540	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4000516	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4000520	          0x83382f	                   cmp dword [rax], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4000523	            0x75b3	                           jne 0x40004d8	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4000525	            0x85d2	                           test edx, edx	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4000527	            0x7417	                            je 0x4000540	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4000529	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x400052d	          0x83ea01	                              sub edx, 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x4000530	          0x4885c0	                           test rax, rax	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4000533	            0x75eb	                           jne 0x4000520	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4000535	            0xeba1	                           jmp 0x40004d8	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4000537	    0x660f1f840000	                    nop word [rax + rax]	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4000540	        0x488b4008	                mov rax, qword [rax + 8]	      4368	cp-demangle.c	FUNCTION_77
0x4000544	          0x4885c0	                           test rax, rax	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000547	            0x748f	                            je 0x40004d8	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000549	          0x83382f	                   cmp dword [rax], 0x2f	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x400054c	            0x758a	                           jne 0x40004d8	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x400054e	        0x4883c408	                              add rsp, 8	      4437	cp-demangle.c	FUNCTION_79
0x4000552	              0x5b	                                 pop rbx	      4437	cp-demangle.c	FUNCTION_79
0x4000553	              0x5d	                                 pop rbp	      4437	cp-demangle.c	FUNCTION_79
0x4000554	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
0x4000555	            0x31c0	                            xor eax, eax	      4405	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4000557	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
0x4000558	    0xc78530010000	              mov dword [rbp + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4000562	      0xe971ffffff	                           jmp 0x40004d8	      4207	cp-demangle.c	FUNCTION_69
is_ctor_or_dtor	CALL,1:IF,0:SWITCH,1:ELSE,0:WHILE,1:FOR,0:DO,0:functions,0	77
0x4010130	              0x55	                                push rbp	      6501	cp-demangle.c	FUNCTION_104
0x4010131	          0x4889e5	                            mov rbp, rsp	      6501	cp-demangle.c	FUNCTION_104
0x4010134	            0x4155	                                push r13	      6501	cp-demangle.c	FUNCTION_104
0x4010136	            0x4154	                                push r12	      6501	cp-demangle.c	FUNCTION_104
0x4010138	              0x53	                                push rbx	      6501	cp-demangle.c	FUNCTION_104
0x4010139	          0x4989fd	                            mov r13, rdi	      6501	cp-demangle.c	FUNCTION_104
0x401013c	          0x4989f4	                            mov r12, rsi	      6501	cp-demangle.c	FUNCTION_104
0x401013f	          0x4889d3	                            mov rbx, rdx	      6501	cp-demangle.c	FUNCTION_104
0x4010142	        0x4883ec68	                           sub rsp, 0x68	      6501	cp-demangle.c	FUNCTION_104
0x4010146	    0xc70600000000	                      mov dword [rsi], 0	      6506	cp-demangle.c	FUNCTION_104
0x401014c	    0xc70200000000	                      mov dword [rdx], 0	      6507	cp-demangle.c	FUNCTION_104
0x4010152	    0x64488b042528	                mov rax, qword fs:[0x28]	      6501	cp-demangle.c	FUNCTION_104
0x401015b	        0x488945d8	             mov qword [rbp - 0x28], rax	      6501	cp-demangle.c	FUNCTION_104
0x401015f	            0x31c0	                            xor eax, eax	      6501	cp-demangle.c	FUNCTION_104
0x4010161	      0xe800000000	                          call 0x4010166	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4010166	      0x498d540500	                    lea rdx, [r13 + rax]	      6170	cp-demangle.c	
0x401016b	          0x8945bc	             mov dword [rbp - 0x44], eax	      6183	cp-demangle.c	
0x401016e	        0x488d7d80	                   lea rdi, [rbp - 0x80]	      6523	cp-demangle.c	FUNCTION_104
0x4010172	      0xbe01000000	                              mov esi, 1	      6523	cp-demangle.c	FUNCTION_104
0x4010177	        0x4c896d80	             mov qword [rbp - 0x80], r13	      6169	cp-demangle.c	
0x401017b	    0xc74590004000	          mov dword [rbp - 0x70], 0x4000	      6171	cp-demangle.c	
0x4010182	        0x48895588	             mov qword [rbp - 0x78], rdx	      6170	cp-demangle.c	
0x4010186	          0x8d1400	                    lea edx, [rax + rax]	      6178	cp-demangle.c	
0x4010189	            0x4898	                                    cdqe	      6514	cp-demangle.c	FUNCTION_104
0x401018b	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6514	cp-demangle.c	FUNCTION_104
0x4010193	        0x4c896d98	             mov qword [rbp - 0x68], r13	      6173	cp-demangle.c	
0x4010197	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      6179	cp-demangle.c	
0x401019e	          0x8955ac	             mov dword [rbp - 0x54], edx	      6178	cp-demangle.c	
0x40101a1	          0x4863d2	                         movsxd rdx, edx	      6513	cp-demangle.c	FUNCTION_104
0x40101a4	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      6184	cp-demangle.c	
0x40101ab	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      6513	cp-demangle.c	FUNCTION_104
0x40101af	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      6514	cp-demangle.c	FUNCTION_104
0x40101b3	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      6186	cp-demangle.c	
0x40101bb	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      6188	cp-demangle.c	
0x40101c2	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      6189	cp-demangle.c	
0x40101c9	    0x488d14d51000	                 lea rdx, [rdx*8 + 0x10]	      6513	cp-demangle.c	FUNCTION_104
0x40101d1	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      6190	cp-demangle.c	
0x40101d8	          0x4829d4	                            sub rsp, rdx	      6513	cp-demangle.c	FUNCTION_104
0x40101db	          0x4889e2	                            mov rdx, rsp	      6513	cp-demangle.c	FUNCTION_104
0x40101de	          0x4829c4	                            sub rsp, rax	      6514	cp-demangle.c	FUNCTION_104
0x40101e1	        0x488955a0	             mov qword [rbp - 0x60], rdx	      6516	cp-demangle.c	FUNCTION_104
0x40101e5	        0x488965b0	             mov qword [rbp - 0x50], rsp	      6517	cp-demangle.c	FUNCTION_104
0x40101e9	      0xe800000000	                          call 0x40101ee	      6523	cp-demangle.c	FUNCTION_104
0x40101ee	          0x4889c1	                            mov rcx, rax	      6523	cp-demangle.c	FUNCTION_104
0x40101f1	            0x31c0	                            xor eax, eax	      6528	cp-demangle.c	FUNCTION_104
0x40101f3	       0xf1f440000	                   nop dword [rax + rax]	      6528	cp-demangle.c	FUNCTION_104
0x40101f8	          0x4885c9	                           test rcx, rcx	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x40101fb	            0x741d	                            je 0x401021a	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x40101fd	          0x833908	                      cmp dword [rcx], 8	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010200	            0x7718	                            ja 0x401021a	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010202	            0x8b31	                    mov esi, dword [rcx]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010204	    0xff24f5000000	                       jmp qword [rsi*8]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x401020b	       0xf1f440000	                   nop dword [rax + rax]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010210	          0x8b4108	                mov eax, dword [rcx + 8]	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010213	            0x8903	                    mov dword [rbx], eax	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010215	      0xb801000000	                              mov eax, 1	      6557	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x401021a	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      6565	cp-demangle.c	FUNCTION_104
0x401021e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      6565	cp-demangle.c	FUNCTION_104
0x4010227	            0x753d	                           jne 0x4010266	      6565	cp-demangle.c	FUNCTION_104
0x4010229	        0x488d65e8	                   lea rsp, [rbp - 0x18]	      6565	cp-demangle.c	FUNCTION_104
0x401022d	              0x5b	                                 pop rbx	      6565	cp-demangle.c	FUNCTION_104
0x401022e	            0x415c	                                 pop r12	      6565	cp-demangle.c	FUNCTION_104
0x4010230	            0x415d	                                 pop r13	      6565	cp-demangle.c	FUNCTION_104
0x4010232	              0x5d	                                 pop rbp	      6565	cp-demangle.c	FUNCTION_104
0x4010233	              0xc3	                                     ret	      6565	cp-demangle.c	FUNCTION_104
0x4010234	         0xf1f4000	                         nop dword [rax]	      6565	cp-demangle.c	FUNCTION_104
0x4010238	          0x8b4108	                mov eax, dword [rcx + 8]	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x401023b	        0x41890424	                    mov dword [r12], eax	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x401023f	      0xb801000000	                              mov eax, 1	      6552	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010244	            0xebd4	                           jmp 0x401021a	      6554	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010246	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6554	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010250	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      6548	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010254	            0xeba2	                           jmp 0x40101f8	      6549	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010256	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6549	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010260	        0x488b4908	                mov rcx, qword [rcx + 8]	      6544	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010264	            0xeb92	                           jmp 0x40101f8	      6545	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4010266	      0xe800000000	                          call 0x401026b	      6565	cp-demangle.c	FUNCTION_104
d_operator_name	CALL,7:IF,6:SWITCH,0:ELSE,4:WHILE,1:FOR,0:DO,0:functions,0	123
0x400cb60	              0x55	                                push rbp	      1856	cp-demangle.c	FUNCTION_28
0x400cb61	              0x53	                                push rbx	      1856	cp-demangle.c	FUNCTION_28
0x400cb62	        0x4883ec08	                              sub rsp, 8	      1856	cp-demangle.c	FUNCTION_28
0x400cb66	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cb6a	          0x803800	                       cmp byte [rax], 0	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cb6d	            0x7479	                            je 0x400cbe8	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cb6f	        0x488d5001	                      lea rdx, [rax + 1]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cb73	        0x48895718	             mov qword [rdi + 0x18], rdx	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cb77	        0x80780100	                   cmp byte [rax + 1], 0	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400cb7b	        0x440fb600	                   movzx r8d, byte [rax]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cb7f	     0xf846d010000	                            je 0x400ccf2	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400cb85	        0x488d5002	                      lea rdx, [rax + 2]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400cb89	        0x4180f876	                           cmp r8b, 0x76	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x400cb8d	          0x4889fd	                            mov rbp, rdi	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x400cb90	        0x48895718	             mov qword [rdi + 0x18], rdx	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400cb94	         0xfb65801	               movzx ebx, byte [rax + 1]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400cb98	     0xf84e2000000	                            je 0x400cc80	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x400cb9e	        0x4180f863	                           cmp r8b, 0x63	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cba2	            0x7549	                           jne 0x400cbed	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cba4	          0x80fb76	                            cmp bl, 0x76	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cba7	            0x7544	                           jne 0x400cbed	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cba9	          0x8b574c	            mov edx, dword [rdi + 0x4c] 	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cbac	            0x31c0	                            xor eax, eax	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cbae	          0x8b5f50	            mov ebx, dword [rdi + 0x50] 	      1867	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cbb1	            0x85d2	                           test edx, edx	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cbb3	           0xf94c0	                                 sete al	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cbb6	          0x894750	             mov dword [rdi + 0x50], eax	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cbb9	      0xe800000000	                          call 0x400cbbe	      1871	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cbbe	          0x8b7550	            mov esi, dword [rbp + 0x50] 	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x400cbc1	            0x31c9	                            xor ecx, ecx	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400cbc3	          0x4889c2	                            mov rdx, rax	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400cbc6	            0x85f6	                           test esi, esi	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x400cbc8	     0xf8512010000	                           jne 0x400cce0	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x400cbce	      0xbe33000000	                           mov esi, 0x33	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x400cbd3	          0x4889ef	                            mov rdi, rbp	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x400cbd6	      0xe86534ffff	                    call sym.d_make_comp	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x400cbdb	          0x895d50	            mov dword [rbp + 0x50], ebx 	      1876	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400cbde	        0x4883c408	                              add rsp, 8	      1908	cp-demangle.c	FUNCTION_28
0x400cbe2	              0x5b	                                 pop rbx	      1908	cp-demangle.c	FUNCTION_28
0x400cbe3	              0x5d	                                 pop rbp	      1908	cp-demangle.c	FUNCTION_28
0x400cbe4	              0xc3	                                     ret	      1908	cp-demangle.c	FUNCTION_28
0x400cbe5	           0xf1f00	                         nop dword [rax]	      1908	cp-demangle.c	FUNCTION_28
0x400cbe8	            0x31db	                            xor ebx, ebx	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400cbea	          0x4531c0	                            xor r8d, r8d	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cbed	      0xbe43000000	                           mov esi, 0x43	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cbf2	            0x31d2	                            xor edx, edx	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cbf4	         0xf1f4000	                         nop dword [rax]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400cbf8	            0x89f0	                            mov eax, esi	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cbfa	            0x29d0	                            sub eax, edx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cbfc	            0x89c1	                            mov ecx, eax	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cbfe	          0xc1e91f	                           shr ecx, 0x1f	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cc01	             0x1c8	                            add eax, ecx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cc03	            0xd1f8	                              sar eax, 1	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cc05	             0x1d0	                            add eax, edx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cc07	          0x4863c8	                         movsxd rcx, eax	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cc0a	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cc0e	    0x4c8d0ccd0000	                         lea r9, [rcx*8]	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400cc16	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x400cc1e	          0x443801	                     cmp byte [rcx], r8b	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x400cc21	            0x7415	                            je 0x400cc38	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x400cc23	            0x7e53	                           jle 0x400cc78	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x400cc25	            0x89c6	                            mov esi, eax	      1901	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x400cc27	            0x39f2	                            cmp edx, esi	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x400cc29	            0x75cd	                           jne 0x400cbf8	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x400cc2b	            0x31c0	                            xor eax, eax	      1117	cp-demangle.c	FUNCTION_9	IF_1
0x400cc2d	        0x4883c408	                              add rsp, 8	      1908	cp-demangle.c	FUNCTION_28
0x400cc31	              0x5b	                                 pop rbx	      1908	cp-demangle.c	FUNCTION_28
0x400cc32	              0x5d	                                 pop rbp	      1908	cp-demangle.c	FUNCTION_28
0x400cc33	              0xc3	                                     ret	      1908	cp-demangle.c	FUNCTION_28
0x400cc34	         0xf1f4000	                         nop dword [rax]	      1908	cp-demangle.c	FUNCTION_28
0x400cc38	          0x385901	                  cmp byte [rcx + 1], bl	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x400cc3b	            0x75e6	                           jne 0x400cc23	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x400cc3d	          0x8b5728	            mov edx, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cc40	          0x3b572c	            cmp edx, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cc43	            0x7de6	                           jge 0x400cc2b	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cc45	          0x4863c2	                         movsxd rax, edx	       935	cp-demangle.c	FUNCTION_3
0x400cc48	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x400cc4b	        0x488d0c40	                  lea rcx, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x400cc4f	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400cc53	        0x488d04c8	                  lea rax, [rax + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400cc57	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400cc5e	          0x895728	             mov dword [rdi + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x400cc61	    0xc70031000000	                   mov dword [rax], 0x31	      1101	cp-demangle.c	FUNCTION_8	IF_1
0x400cc67	        0x4c894808	                 mov qword [rax + 8], r9	      1102	cp-demangle.c	FUNCTION_8	IF_1
0x400cc6b	        0x4883c408	                              add rsp, 8	      1908	cp-demangle.c	FUNCTION_28
0x400cc6f	              0x5b	                                 pop rbx	      1908	cp-demangle.c	FUNCTION_28
0x400cc70	              0x5d	                                 pop rbp	      1908	cp-demangle.c	FUNCTION_28
0x400cc71	              0xc3	                                     ret	      1908	cp-demangle.c	FUNCTION_28
0x400cc72	    0x660f1f440000	                    nop word [rax + rax]	      1908	cp-demangle.c	FUNCTION_28
0x400cc78	          0x8d5001	                      lea edx, [rax + 1]	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x400cc7b	            0xebaa	                           jmp 0x400cc27	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x400cc7d	           0xf1f00	                         nop dword [rax]	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x400cc80	          0x8d43d0	                   lea eax, [rbx - 0x30]	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x400cc83	            0x3c09	                               cmp al, 9	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x400cc85	     0xf8762ffffff	                            ja 0x400cbed	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x400cc8b	      0xe8d03affff	                  call sym.d_source_name	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x400cc90	          0x8b4d28	            mov ecx, dword [rbp + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cc93	          0x3b4d2c	            cmp ecx, dword [rbp + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cc96	            0x7d93	                           jge 0x400cc2b	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cc98	          0x4863d1	                         movsxd rdx, ecx	       935	cp-demangle.c	FUNCTION_3
0x400cc9b	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x400cc9e	          0x4885c0	                           test rax, rax	       877	cp-demangle.c	IF_2
0x400cca1	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400cca5	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400cca9	        0x488d14f2	                  lea rdx, [rdx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x400ccad	    0xc74204000000	                  mov dword [rdx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400ccb4	          0x894d28	            mov dword [rbp + 0x28], ecx 	       937	cp-demangle.c	FUNCTION_3
0x400ccb7	     0xf846effffff	                            je 0x400cc2b	       877	cp-demangle.c	IF_2
0x400ccbd	           0xfbecb	                           movsx ecx, bl	       881	cp-demangle.c	
0x400ccc0	        0x48894210	             mov qword [rdx + 0x10], rax	       882	cp-demangle.c	
0x400ccc4	    0xc74204000000	                  mov dword [rdx + 4], 0	       879	cp-demangle.c	
0x400cccb	          0x83e930	                           sub ecx, 0x30	       881	cp-demangle.c	
0x400ccce	    0xc70232000000	                   mov dword [rdx], 0x32	       880	cp-demangle.c	
0x400ccd4	          0x4889d0	                            mov rax, rdx	       882	cp-demangle.c	
0x400ccd7	          0x894a08	                mov dword [rdx + 8], ecx	       881	cp-demangle.c	
0x400ccda	      0xe94effffff	                           jmp 0x400cc2d	       881	cp-demangle.c	
0x400ccdf	              0x90	                                     nop	       881	cp-demangle.c	
0x400cce0	      0xbe34000000	                           mov esi, 0x34	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400cce5	          0x4889ef	                            mov rdi, rbp	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400cce8	      0xe85333ffff	                    call sym.d_make_comp	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400cced	      0xe9e9feffff	                           jmp 0x400cbdb	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400ccf2	            0x31db	                            xor ebx, ebx	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400ccf4	      0xe9f4feffff	                           jmp 0x400cbed	      1861	cp-demangle.c	FUNCTION_28	CALL_2
d_template_args_1	CALL,7:IF,4:SWITCH,0:ELSE,0:WHILE,1:FOR,0:DO,0:functions,0	104
0x400eab0	            0x4155	                                push r13	      3119	cp-demangle.c	FUNCTION_47
0x400eab2	            0x4154	                                push r12	      3119	cp-demangle.c	FUNCTION_47
0x400eab4	              0x55	                                push rbp	      3119	cp-demangle.c	FUNCTION_47
0x400eab5	              0x53	                                push rbx	      3119	cp-demangle.c	FUNCTION_47
0x400eab6	          0x4889fb	                            mov rbx, rdi	      3119	cp-demangle.c	FUNCTION_47
0x400eab9	        0x4883ec18	                           sub rsp, 0x18	      3119	cp-demangle.c	FUNCTION_47
0x400eabd	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x400eac1	        0x488b6f40	            mov rbp, qword [rdi + 0x40] 	      3127	cp-demangle.c	FUNCTION_47
0x400eac5	    0x64488b042528	                mov rax, qword fs:[0x28]	      3119	cp-demangle.c	FUNCTION_47
0x400eace	      0x4889442408	                mov qword [rsp + 8], rax	      3119	cp-demangle.c	FUNCTION_47
0x400ead3	            0x31c0	                            xor eax, eax	      3119	cp-demangle.c	FUNCTION_47
0x400ead5	           0xfb602	                   movzx eax, byte [rdx]	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x400ead8	            0x3c45	                            cmp al, 0x45	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x400eada	     0xf842d010000	                            je 0x400ec0d	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x400eae0	    0x48c704240000	                      mov qword [rsp], 0	      3136	cp-demangle.c	FUNCTION_47
0x400eae8	          0x4989e4	                            mov r12, rsp	      3137	cp-demangle.c	FUNCTION_47
0x400eaeb	       0xf1f440000	                   nop dword [rax + rax]	      3137	cp-demangle.c	FUNCTION_47
0x400eaf0	            0x3c4c	                            cmp al, 0x4c	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400eaf2	     0xf84f8000000	                            je 0x400ebf0	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400eaf8	     0xf8fb2000000	                            jg 0x400ebb0	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400eafe	          0x83e849	                           sub eax, 0x49	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400eb01	            0x3c01	                               cmp al, 1	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400eb03	     0xf87f7000000	                            ja 0x400ec00	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400eb09	        0x4883c201	                              add rdx, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400eb0d	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400eb10	        0x48895318	             mov qword [rbx + 0x18], rdx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400eb14	      0xe897ffffff	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400eb19	          0x4885c0	                           test rax, rax	      3143	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x400eb1c	            0x7410	                            je 0x400eb2e	      3143	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x400eb1e	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400eb21	          0x3b4b2c	            cmp ecx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400eb24	            0x7c2a	                            jl 0x400eb50	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400eb26	    0x49c704240000	                      mov qword [r12], 0	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x400eb2e	            0x31c0	                            xor eax, eax	      3148	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x400eb30	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3161	cp-demangle.c	FUNCTION_47
0x400eb35	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3161	cp-demangle.c	FUNCTION_47
0x400eb3e	     0xf85f9000000	                           jne 0x400ec3d	      3161	cp-demangle.c	FUNCTION_47
0x400eb44	        0x4883c418	                           add rsp, 0x18	      3161	cp-demangle.c	FUNCTION_47
0x400eb48	              0x5b	                                 pop rbx	      3161	cp-demangle.c	FUNCTION_47
0x400eb49	              0x5d	                                 pop rbp	      3161	cp-demangle.c	FUNCTION_47
0x400eb4a	            0x415c	                                 pop r12	      3161	cp-demangle.c	FUNCTION_47
0x400eb4c	            0x415d	                                 pop r13	      3161	cp-demangle.c	FUNCTION_47
0x400eb4e	              0xc3	                                     ret	      3161	cp-demangle.c	FUNCTION_47
0x400eb4f	              0x90	                                     nop	      3161	cp-demangle.c	FUNCTION_47
0x400eb50	          0x4863d1	                         movsxd rdx, ecx	       935	cp-demangle.c	FUNCTION_3
0x400eb53	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x400eb56	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400eb5a	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400eb5e	        0x488d14f2	                  lea rdx, [rdx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x400eb62	    0xc74204000000	                  mov dword [rdx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400eb69	          0x894b28	             mov dword [rbx + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x400eb6c	    0xc7022f000000	                   mov dword [rdx], 0x2f	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x400eb72	        0x48894208	                mov qword [rdx + 8], rax	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x400eb76	    0x48c742100000	               mov qword [rdx + 0x10], 0	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400eb7e	        0x49891424	                    mov qword [r12], rdx	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x400eb82	        0x4c8d6210	                   lea r12, [rdx + 0x10]	      3149	cp-demangle.c	FUNCTION_47	WHILE_1
0x400eb86	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x400eb8a	           0xfb602	                   movzx eax, byte [rdx]	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x400eb8d	            0x3c45	                            cmp al, 0x45	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x400eb8f	     0xf855bffffff	                           jne 0x400eaf0	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x400eb95	        0x4883c201	                              add rdx, 1	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x400eb99	        0x48896b40	             mov qword [rbx + 0x40], rbp	      3158	cp-demangle.c	FUNCTION_47
0x400eb9d	        0x488b0424	                    mov rax, qword [rsp]	      3160	cp-demangle.c	FUNCTION_47
0x400eba1	        0x48895318	             mov qword [rbx + 0x18], rdx	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x400eba5	            0xeb89	                           jmp 0x400eb30	      3160	cp-demangle.c	FUNCTION_47
0x400eba7	    0x660f1f840000	                    nop word [rax + rax]	      3160	cp-demangle.c	FUNCTION_47
0x400ebb0	            0x3c58	                            cmp al, 0x58	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400ebb2	            0x754c	                           jne 0x400ec00	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x400ebb4	        0x4883c201	                              add rdx, 1	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x400ebb8	        0x448b6b4c	           mov r13d, dword [rbx + 0x4c] 	      3505	cp-demangle.c	FUNCTION_52
0x400ebbc	          0x4889df	                            mov rdi, rbx	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x400ebbf	        0x48895318	             mov qword [rbx + 0x18], rdx	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x400ebc3	    0xc7434c010000	               mov dword [rbx + 0x4c], 1	      3507	cp-demangle.c	FUNCTION_52
0x400ebca	      0xe811f5ffff	                 call sym.d_expression_1	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x400ebcf	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400ebd3	        0x44896b4c	            mov dword [rbx + 0x4c], r13d	      3509	cp-demangle.c	FUNCTION_52
0x400ebd7	          0x803a45	                    cmp byte [rdx], 0x45	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400ebda	     0xf854effffff	                           jne 0x400eb2e	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400ebe0	        0x4883c201	                              add rdx, 1	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400ebe4	        0x48895318	             mov qword [rbx + 0x18], rdx	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400ebe8	      0xe92cffffff	                           jmp 0x400eb19	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400ebed	           0xf1f00	                         nop dword [rax]	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x400ebf0	          0x4889df	                            mov rdi, rbx	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x400ebf3	      0xe858090000	                 call sym.d_expr_primary	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x400ebf8	      0xe91cffffff	                           jmp 0x400eb19	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x400ebfd	           0xf1f00	                         nop dword [rax]	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x400ec00	          0x4889df	                            mov rdi, rbx	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x400ec03	      0xe800000000	                          call 0x400ec08	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x400ec08	      0xe90cffffff	                           jmp 0x400eb19	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x400ec0d	        0x4883c201	                              add rdx, 1	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x400ec11	      0x488b442408	                mov rax, qword [rsp + 8]	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400ec16	    0x644833042528	                xor rax, qword fs:[0x28]	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400ec1f	        0x48895718	             mov qword [rdi + 0x18], rdx	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x400ec23	            0x7518	                           jne 0x400ec3d	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400ec25	        0x4883c418	                           add rsp, 0x18	      3161	cp-demangle.c	FUNCTION_47
0x400ec29	            0x31c9	                            xor ecx, ecx	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400ec2b	            0x31d2	                            xor edx, edx	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400ec2d	              0x5b	                                 pop rbx	      3161	cp-demangle.c	FUNCTION_47
0x400ec2e	              0x5d	                                 pop rbp	      3161	cp-demangle.c	FUNCTION_47
0x400ec2f	            0x415c	                                 pop r12	      3161	cp-demangle.c	FUNCTION_47
0x400ec31	            0x415d	                                 pop r13	      3161	cp-demangle.c	FUNCTION_47
0x400ec33	      0xbe2f000000	                           mov esi, 0x2f	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400ec38	      0xe90314ffff	                     jmp sym.d_make_comp	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x400ec3d	      0xe800000000	                          call 0x400ec42	      3161	cp-demangle.c	FUNCTION_47
d_growable_string_callback_adapter	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	66
0x4000290	            0x4155	                                push r13	      4021	cp-demangle.c	FUNCTION_66
0x4000292	            0x4154	                                push r12	      4021	cp-demangle.c	FUNCTION_66
0x4000294	          0x4989fd	                            mov r13, rdi	      4021	cp-demangle.c	FUNCTION_66
0x4000297	              0x55	                                push rbp	      4021	cp-demangle.c	FUNCTION_66
0x4000298	              0x53	                                push rbx	      4021	cp-demangle.c	FUNCTION_66
0x4000299	          0x4989f4	                            mov r12, rsi	      4021	cp-demangle.c	FUNCTION_66
0x400029c	          0x4889d5	                            mov rbp, rdx	      4021	cp-demangle.c	FUNCTION_66
0x400029f	        0x4883ec08	                              sub rsp, 8	      4021	cp-demangle.c	FUNCTION_66
0x40002a3	        0x488b4208	                mov rax, qword [rdx + 8]	      4005	cp-demangle.c	FUNCTION_65
0x40002a7	        0x488b5a10	            mov rbx, qword [rdx + 0x10] 	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40002ab	      0x488d440601	                lea rax, [rsi + rax + 1]	      4005	cp-demangle.c	FUNCTION_65
0x40002b0	          0x4839d8	                            cmp rax, rbx	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40002b3	            0x774b	                            ja 0x4000300	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40002b5	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x40002b8	            0x85c0	                           test eax, eax	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x40002ba	            0x7414	                            je 0x40002d0	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x40002bc	        0x4883c408	                              add rsp, 8	      4025	cp-demangle.c	FUNCTION_66
0x40002c0	              0x5b	                                 pop rbx	      4025	cp-demangle.c	FUNCTION_66
0x40002c1	              0x5d	                                 pop rbp	      4025	cp-demangle.c	FUNCTION_66
0x40002c2	            0x415c	                                 pop r12	      4025	cp-demangle.c	FUNCTION_66
0x40002c4	            0x415d	                                 pop r13	      4025	cp-demangle.c	FUNCTION_66
0x40002c6	              0xc3	                                     ret	      4025	cp-demangle.c	FUNCTION_66
0x40002c7	    0x660f1f840000	                    nop word [rax + rax]	      4025	cp-demangle.c	FUNCTION_66
0x40002d0	        0x488b7d08	                mov rdi, qword [rbp + 8]	        53	string3.h	FUNCTION_126	CALL_3
0x40002d4	        0x48037d00	                    add rdi, qword [rbp]	        53	string3.h	FUNCTION_126	CALL_3
0x40002d8	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_126	CALL_3
0x40002db	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_126	CALL_3
0x40002de	      0xe800000000	                          call 0x40002e3	        53	string3.h	FUNCTION_126	CALL_3
0x40002e3	          0x4c89e0	                            mov rax, r12	      4013	cp-demangle.c	FUNCTION_65
0x40002e6	        0x48034500	                    add rax, qword [rbp]	      4013	cp-demangle.c	FUNCTION_65
0x40002ea	        0x48034508	                add rax, qword [rbp + 8]	      4013	cp-demangle.c	FUNCTION_65
0x40002ee	          0xc60000	                       mov byte [rax], 0	      4013	cp-demangle.c	FUNCTION_65
0x40002f1	        0x4c016508	                add qword [rbp + 8], r12	      4014	cp-demangle.c	FUNCTION_65
0x40002f5	        0x4883c408	                              add rsp, 8	      4025	cp-demangle.c	FUNCTION_66
0x40002f9	              0x5b	                                 pop rbx	      4025	cp-demangle.c	FUNCTION_66
0x40002fa	              0x5d	                                 pop rbp	      4025	cp-demangle.c	FUNCTION_66
0x40002fb	            0x415c	                                 pop r12	      4025	cp-demangle.c	FUNCTION_66
0x40002fd	            0x415d	                                 pop r13	      4025	cp-demangle.c	FUNCTION_66
0x40002ff	              0xc3	                                     ret	      4025	cp-demangle.c	FUNCTION_66
0x4000300	          0x8b5218	            mov edx, dword [rdx + 0x18] 	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4000303	            0x85d2	                           test edx, edx	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4000305	            0x75b5	                           jne 0x40002bc	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4000307	          0x4885db	                           test rbx, rbx	      3979	cp-demangle.c	FUNCTION_64
0x400030a	            0x7514	                           jne 0x4000320	      3979	cp-demangle.c	FUNCTION_64
0x400030c	        0x4883f802	                              cmp rax, 2	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000310	      0xbb02000000	                              mov ebx, 2	      3979	cp-demangle.c	FUNCTION_64
0x4000315	            0x7611	                           jbe 0x4000328	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000317	    0x660f1f840000	                    nop word [rax + rax]	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000320	          0x4801db	                            add rbx, rbx	      3981	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000323	          0x4839d8	                            cmp rax, rbx	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000326	            0x77f8	                            ja 0x4000320	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000328	        0x488b7d00	                    mov rdi, qword [rbp]	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x400032c	          0x4889de	                            mov rsi, rbx	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x400032f	      0xe800000000	                          call 0x4000334	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4000334	          0x4885c0	                           test rax, rax	      3984	cp-demangle.c	FUNCTION_64	IF_2
0x4000337	            0x740d	                            je 0x4000346	      3984	cp-demangle.c	FUNCTION_64	IF_2
0x4000339	        0x48894500	                    mov qword [rbp], rax	      3993	cp-demangle.c	FUNCTION_64
0x400033d	        0x48895d10	            mov qword [rbp + 0x10], rbx 	      3994	cp-demangle.c	FUNCTION_64
0x4000341	      0xe96fffffff	                           jmp 0x40002b5	      3994	cp-demangle.c	FUNCTION_64
0x4000346	        0x488b7d00	                    mov rdi, qword [rbp]	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x400034a	      0xe800000000	                          call 0x400034f	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x400034f	    0x48c745000000	                      mov qword [rbp], 0	      3987	cp-demangle.c	FUNCTION_64	IF_2
0x4000357	    0x48c745080000	                  mov qword [rbp + 8], 0	      3988	cp-demangle.c	FUNCTION_64	IF_2
0x400035f	    0x48c745100000	               mov qword [rbp + 0x10], 0	      3989	cp-demangle.c	FUNCTION_64	IF_2
0x4000367	    0xc74518010000	               mov dword [rbp + 0x18], 1	      3990	cp-demangle.c	FUNCTION_64	IF_2
0x400036e	      0xe949ffffff	                           jmp 0x40002bc	      3990	cp-demangle.c	FUNCTION_64	IF_2
d_exprlist	CALL,7:IF,4:SWITCH,0:ELSE,0:WHILE,1:FOR,0:DO,0:functions,0	569
0x400d7f0	            0x4157	                                push r15	      3200	cp-demangle.c	FUNCTION_49
0x400d7f2	            0x4156	                                push r14	      3200	cp-demangle.c	FUNCTION_49
0x400d7f4	            0x4155	                                push r13	      3200	cp-demangle.c	FUNCTION_49
0x400d7f6	            0x4154	                                push r12	      3200	cp-demangle.c	FUNCTION_49
0x400d7f8	    0x41bdffffff7f	                    mov r13d, 0x7fffffff	      3200	cp-demangle.c	FUNCTION_49
0x400d7fe	              0x55	                                push rbp	      3200	cp-demangle.c	FUNCTION_49
0x400d7ff	              0x53	                                push rbx	      3200	cp-demangle.c	FUNCTION_49
0x400d800	          0x4189f4	                           mov r12d, esi	      3200	cp-demangle.c	FUNCTION_49
0x400d803	          0x4889fb	                            mov rbx, rdi	      3200	cp-demangle.c	FUNCTION_49
0x400d806	        0x4883ec28	                           sub rsp, 0x28	      3200	cp-demangle.c	FUNCTION_49
0x400d80a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3200	cp-demangle.c	FUNCTION_49
0x400d813	      0x4889442418	             mov qword [rsp + 0x18], rax	      3200	cp-demangle.c	FUNCTION_49
0x400d818	            0x31c0	                            xor eax, eax	      3200	cp-demangle.c	FUNCTION_49
0x400d81a	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x400d81e	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3201	cp-demangle.c	FUNCTION_49
0x400d827	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	      3201	cp-demangle.c	FUNCTION_49
0x400d82c	          0x403830	                     cmp byte [rax], sil	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x400d82f	     0xf844f070000	                            je 0x400df84	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x400d835	           0xf1f00	                         nop dword [rax]	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x400d838	        0x448b734c	           mov r14d, dword [rbx + 0x4c] 	      3505	cp-demangle.c	FUNCTION_52
0x400d83c	    0xc7434c010000	               mov dword [rbx + 0x4c], 1	      3507	cp-demangle.c	FUNCTION_52
0x400d843	           0xfb608	                   movzx ecx, byte [rax]	      3259	cp-demangle.c	FUNCTION_51	CALL_1
0x400d846	          0x80f94c	                            cmp cl, 0x4c	      3260	cp-demangle.c	FUNCTION_51	IF_1
0x400d849	     0xf8461020000	                            je 0x400dab0	      3260	cp-demangle.c	FUNCTION_51	IF_1
0x400d84f	          0x80f954	                            cmp cl, 0x54	      3262	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x400d852	     0xf8468020000	                            je 0x400dac0	      3262	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x400d858	          0x80f973	                            cmp cl, 0x73	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x400d85b	     0xf84cf000000	                            je 0x400d930	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x400d861	          0x80f966	                            cmp cl, 0x66	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x400d864	     0xf8426010000	                            je 0x400d990	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x400d86a	          0x8d51d0	                   lea edx, [rcx - 0x30]	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x400d86d	          0x80fa09	                               cmp dl, 9	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x400d870	     0xf87da070000	                            ja 0x400e050	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x400d876	          0x4889df	                            mov rdi, rbx	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x400d879	      0xe8b2f5ffff	             call sym.d_unqualified_name	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x400d87e	          0x4885c0	                           test rax, rax	      3317	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x400d881	          0x4989c7	                            mov r15, rax	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x400d884	     0xf84f6000000	                            je 0x400d980	      3317	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x400d88a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x400d88e	          0x803849	                    cmp byte [rax], 0x49	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x400d891	     0xf84a9010000	                            je 0x400da40	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x400d897	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x400d89a	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x400d89d	          0x4c89f8	                            mov rax, r15	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x400d8a0	        0x4489734c	            mov dword [rbx + 0x4c], r14d	      3509	cp-demangle.c	FUNCTION_52
0x400d8a4	            0x39d6	                            cmp esi, edx	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d8a6	            0x7c30	                            jl 0x400d8d8	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d8a8	    0x48c745000000	                      mov qword [rbp], 0	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x400d8b0	            0x31c0	                            xor eax, eax	      3218	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x400d8b2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3229	cp-demangle.c	FUNCTION_49
0x400d8b7	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3229	cp-demangle.c	FUNCTION_49
0x400d8c0	     0xf85a6070000	                           jne 0x400e06c	      3229	cp-demangle.c	FUNCTION_49
0x400d8c6	        0x4883c428	                           add rsp, 0x28	      3229	cp-demangle.c	FUNCTION_49
0x400d8ca	              0x5b	                                 pop rbx	      3229	cp-demangle.c	FUNCTION_49
0x400d8cb	              0x5d	                                 pop rbp	      3229	cp-demangle.c	FUNCTION_49
0x400d8cc	            0x415c	                                 pop r12	      3229	cp-demangle.c	FUNCTION_49
0x400d8ce	            0x415d	                                 pop r13	      3229	cp-demangle.c	FUNCTION_49
0x400d8d0	            0x415e	                                 pop r14	      3229	cp-demangle.c	FUNCTION_49
0x400d8d2	            0x415f	                                 pop r15	      3229	cp-demangle.c	FUNCTION_49
0x400d8d4	              0xc3	                                     ret	      3229	cp-demangle.c	FUNCTION_49
0x400d8d5	           0xf1f00	                         nop dword [rax]	      3229	cp-demangle.c	FUNCTION_49
0x400d8d8	          0x4863d6	                         movsxd rdx, esi	       935	cp-demangle.c	FUNCTION_3
0x400d8db	          0x83c601	                              add esi, 1	       937	cp-demangle.c	FUNCTION_3
0x400d8de	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400d8e2	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400d8e6	        0x488d0cca	                  lea rcx, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400d8ea	    0xc74104000000	                  mov dword [rcx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400d8f1	          0x897328	             mov dword [rbx + 0x28], esi	       937	cp-demangle.c	FUNCTION_3
0x400d8f4	        0x48894108	                mov qword [rcx + 8], rax	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x400d8f8	    0x48c741100000	               mov qword [rcx + 0x10], 0	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400d900	    0xc7012e000000	                   mov dword [rcx], 0x2e	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x400d906	        0x48894d00	                    mov qword [rbp], rcx	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x400d90a	        0x488d6910	                   lea rbp, [rcx + 0x10]	      3219	cp-demangle.c	FUNCTION_49	WHILE_1
0x400d90e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x400d912	          0x443a20	                    cmp r12b, byte [rax]	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x400d915	     0xf851dffffff	                           jne 0x400d838	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x400d91b	        0x4883c001	                              add rax, 1	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x400d91f	        0x48894318	             mov qword [rbx + 0x18], rax	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x400d923	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3228	cp-demangle.c	FUNCTION_49
0x400d928	            0xeb88	                           jmp 0x400d8b2	      3228	cp-demangle.c	FUNCTION_49
0x400d92a	    0x660f1f440000	                    nop word [rax + rax]	      3228	cp-demangle.c	FUNCTION_49
0x400d930	         0xfb65001	               movzx edx, byte [rax + 1]	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x400d934	          0x80fa72	                            cmp dl, 0x72	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x400d937	     0xf84b3030000	                            je 0x400dcf0	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x400d93d	          0x80fa70	                            cmp dl, 0x70	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x400d940	     0xf847a040000	                            je 0x400ddc0	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x400d946	          0x4889df	                            mov rdi, rbx	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x400d949	      0xe812f2ffff	                call sym.d_operator_name	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x400d94e	          0x4885c0	                           test rax, rax	      3345	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x400d951	          0x4989c7	                            mov r15, rax	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x400d954	            0x742a	                            je 0x400d980	      3345	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x400d956	            0x8b00	                    mov eax, dword [rax]	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400d958	          0x83f831	                           cmp eax, 0x31	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400d95b	     0xf846f010000	                            je 0x400dad0	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400d961	          0x83f832	                           cmp eax, 0x32	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x400d964	     0xf8516010000	                           jne 0x400da80	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x400d96a	        0x418b4708	                mov eax, dword [r15 + 8]	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400d96e	          0x83f801	                              cmp eax, 1	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400d971	     0xf84d1060000	                            je 0x400e048	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400d977	     0xf8ea3020000	                           jle 0x400dc20	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400d97d	           0xf1f00	                         nop dword [rax]	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400d980	        0x4489734c	            mov dword [rbx + 0x4c], r14d	      3509	cp-demangle.c	FUNCTION_52
0x400d984	            0x31c0	                            xor eax, eax	      3214	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400d986	      0xe927ffffff	                           jmp 0x400d8b2	      3214	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400d98b	       0xf1f440000	                   nop dword [rax + rax]	      3214	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400d990	        0x80780170	                cmp byte [rax + 1], 0x70	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x400d994	            0x75b0	                           jne 0x400d946	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x400d996	        0x488d5002	                      lea rdx, [rax + 2]	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x400d99a	        0x48895318	             mov qword [rbx + 0x18], rdx	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x400d99e	         0xfbe7002	               movsx esi, byte [rax + 2]	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x400d9a2	        0x4080fe54	                           cmp sil, 0x54	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x400d9a6	     0xf842c020000	                            je 0x400dbd8	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x400d9ac	        0x4080fe5f	                           cmp sil, 0x5f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400d9b0	     0xf8406060000	                            je 0x400dfbc	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400d9b6	        0x4080fe6e	                           cmp sil, 0x6e	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400d9ba	            0x74c4	                            je 0x400d980	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400d9bc	          0x8d56d0	                   lea edx, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d9bf	          0x80fa09	                               cmp dl, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d9c2	            0x77bc	                            ja 0x400d980	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d9c4	        0x488d4803	                      lea rcx, [rax + 3]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d9c8	            0x31ff	                            xor edi, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9ca	    0x41b867666666	                     mov r8d, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9d0	            0xeb27	                           jmp 0x400d9f9	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9d2	    0x660f1f440000	                    nop word [rax + rax]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9d8	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9db	          0x4589e9	                           mov r9d, r13d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9de	        0x4883c101	                              add rcx, 1	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9e2	          0x4129c1	                            sub r9d, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9e5	          0x4489c8	                            mov eax, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9e8	        0x41c1f91f	                           sar r9d, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9ec	          0x41f7e8	                                imul r8d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9ef	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9f2	          0x4429ca	                            sub edx, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9f5	            0x39fa	                            cmp edx, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9f7	            0x7c87	                            jl 0x400d980	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d9f9	          0x8d04bf	                  lea eax, [rdi + rdi*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400d9fc	        0x48894b18	             mov qword [rbx + 0x18], rcx	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400da00	          0x8d1446	                  lea edx, [rsi + rax*2]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400da03	           0xfbe31	                   movsx esi, byte [rcx]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400da06	          0x8d7ad0	                   lea edi, [rdx - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400da09	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400da0c	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400da0e	            0x76c8	                           jbe 0x400d9d8	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400da10	        0x4080fe5f	                           cmp sil, 0x5f	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400da14	     0xf8566ffffff	                           jne 0x400d980	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400da1a	        0x488d4101	                      lea rax, [rcx + 1]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400da1e	    0x81e7ffffff7f	                     and edi, 0x7fffffff	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400da24	    0x81fffeffff7f	                     cmp edi, 0x7ffffffe	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400da2a	        0x48894318	             mov qword [rbx + 0x18], rax	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400da2e	     0xf844cffffff	                            je 0x400d980	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400da34	          0x8d4ad2	                   lea ecx, [rdx - 0x2e]	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400da37	      0xe9a6010000	                           jmp 0x400dbe2	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400da3c	         0xf1f4000	                         nop dword [rax]	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400da40	        0x4883c001	                              add rax, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400da44	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400da47	        0x48894318	             mov qword [rbx + 0x18], rax	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400da4b	      0xe860100000	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400da50	          0x4c89fa	                            mov rdx, r15	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x400da53	          0x4889c1	                            mov rcx, rax	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x400da56	      0xbe04000000	                              mov esi, 4	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x400da5b	          0x4889df	                            mov rdi, rbx	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x400da5e	      0xe8dd25ffff	                    call sym.d_make_comp	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x400da63	          0x4885c0	                           test rax, rax	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400da66	        0x4489734c	            mov dword [rbx + 0x4c], r14d	      3509	cp-demangle.c	FUNCTION_52
0x400da6a	     0xf8442feffff	                            je 0x400d8b2	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400da70	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400da73	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400da76	      0xe929feffff	                           jmp 0x400d8a4	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400da7b	       0xf1f440000	                   nop dword [rax + rax]	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x400da80	          0x83f833	                           cmp eax, 0x33	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x400da83	     0xf85f7feffff	                           jne 0x400d980	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x400da89	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x400da8d	          0x80385f	                    cmp byte [rax], 0x5f	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x400da90	     0xf85b2050000	                           jne 0x400e048	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x400da96	        0x4883c001	                              add rax, 1	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x400da9a	      0xbe45000000	                           mov esi, 0x45	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x400da9f	          0x4889df	                            mov rdi, rbx	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x400daa2	        0x48894318	             mov qword [rbx + 0x18], rax	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x400daa6	      0xe845fdffff	                     call sym.d_exprlist	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x400daab	      0xe9f7020000	                           jmp 0x400dda7	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x400dab0	          0x4889df	                            mov rdi, rbx	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x400dab3	      0xe8981a0000	                 call sym.d_expr_primary	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x400dab8	            0xeba9	                           jmp 0x400da63	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x400daba	    0x660f1f440000	                    nop word [rax + rax]	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x400dac0	          0x4889df	                            mov rdi, rbx	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x400dac3	      0xe8a82affff	               call sym.d_template_param	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x400dac8	            0xeb99	                           jmp 0x400da63	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x400daca	    0x660f1f440000	                    nop word [rax + rax]	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x400dad0	        0x498b4708	                mov rax, qword [r15 + 8]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400dad4	          0x8b7810	            mov edi, dword [rax + 0x10] 	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400dad7	          0x488b10	                    mov rdx, qword [rax]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400dada	          0x8d4ffe	                      lea ecx, [rdi - 2]	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400dadd	           0x14b48	             add dword [rbx + 0x48], ecx	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400dae0	          0x803a73	                    cmp byte [rdx], 0x73	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x400dae3	     0xf84c7000000	                            je 0x400dbb0	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x400dae9	        0x498b4708	                mov rax, qword [r15 + 8]	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x400daed	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400daf0	          0x83f801	                              cmp eax, 1	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400daf3	     0xf8462020000	                            je 0x400dd5b	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400daf9	     0xf8e21010000	                           jle 0x400dc20	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400daff	          0x83f802	                              cmp eax, 2	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400db02	     0xf8438010000	                            je 0x400dc40	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400db08	          0x83f803	                              cmp eax, 3	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400db0b	     0xf856ffeffff	                           jne 0x400d980	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400db11	          0x4885d2	                           test rdx, rdx	      3439	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x400db14	     0xf8466feffff	                            je 0x400d980	      3439	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x400db1a	           0xfb602	                   movzx eax, byte [rdx]	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x400db1d	            0x3c71	                            cmp al, 0x71	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x400db1f	     0xf84cb020000	                            je 0x400ddf0	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x400db25	            0x3c66	                            cmp al, 0x66	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x400db27	     0xf84cb040000	                            je 0x400dff8	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x400db2d	            0x3c6e	                            cmp al, 0x6e	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400db2f	     0xf854bfeffff	                           jne 0x400d980	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400db35	         0xfb64201	               movzx eax, byte [rdx + 1]	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x400db39	            0x3c77	                            cmp al, 0x77	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x400db3b	            0x7408	                            je 0x400db45	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x400db3d	            0x3c61	                            cmp al, 0x61	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x400db3f	     0xf853bfeffff	                           jne 0x400d980	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x400db45	      0xbe5f000000	                           mov esi, 0x5f	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x400db4a	          0x4889df	                            mov rdi, rbx	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x400db4d	      0xe89efcffff	                     call sym.d_exprlist	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x400db52	          0x4889df	                            mov rdi, rbx	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400db55	        0x48890424	                    mov qword [rsp], rax	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x400db59	      0xe800000000	                          call 0x400db5e	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400db5e	          0x4889c2	                            mov rdx, rax	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400db61	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x400db65	           0xfb608	                   movzx ecx, byte [rax]	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x400db68	          0x80f945	                            cmp cl, 0x45	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x400db6b	     0xf8478040000	                            je 0x400dfe9	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x400db71	          0x80f970	                            cmp cl, 0x70	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x400db74	     0xf848b040000	                            je 0x400e005	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x400db7a	          0x80f969	                            cmp cl, 0x69	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x400db7d	      0x4889542408	                mov qword [rsp + 8], rdx	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x400db82	     0xf85f8fdffff	                           jne 0x400d980	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x400db88	        0x8078016c	                cmp byte [rax + 1], 0x6c	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x400db8c	     0xf85eefdffff	                           jne 0x400d980	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x400db92	          0x4889df	                            mov rdi, rbx	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x400db95	      0xe846050000	                 call sym.d_expression_1	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x400db9a	      0x488b542408	                mov rdx, qword [rsp + 8]	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x400db9f	          0x4889c1	                            mov rcx, rax	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x400dba2	      0xe98f020000	                           jmp 0x400de36	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x400dba7	    0x660f1f840000	                    nop word [rax + rax]	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x400dbb0	        0x807a0174	                cmp byte [rdx + 1], 0x74	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x400dbb4	     0xf852fffffff	                           jne 0x400dae9	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x400dbba	        0x807a0200	                   cmp byte [rdx + 2], 0	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x400dbbe	     0xf8529ffffff	                           jne 0x400daed	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x400dbc4	          0x4889df	                            mov rdi, rbx	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x400dbc7	      0xe800000000	                          call 0x400dbcc	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x400dbcc	      0xe9d6010000	                           jmp 0x400dda7	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x400dbd1	     0xf1f80000000	                         nop dword [rax]	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x400dbd8	        0x4883c003	                              add rax, 3	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x400dbdc	            0x31c9	                            xor ecx, ecx	      3294	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7
0x400dbde	        0x48894318	             mov qword [rbx + 0x18], rax	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x400dbe2	          0x8b7328	            mov esi, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400dbe5	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400dbe8	            0x39d6	                            cmp esi, edx	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400dbea	     0xf8d90fdffff	                           jge 0x400d980	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400dbf0	          0x4863c6	                         movsxd rax, esi	       935	cp-demangle.c	FUNCTION_3
0x400dbf3	          0x4863c9	                         movsxd rcx, ecx	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x400dbf6	          0x83c601	                              add esi, 1	       937	cp-demangle.c	FUNCTION_3
0x400dbf9	        0x488d3c40	                  lea rdi, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x400dbfd	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400dc01	        0x488d04f8	                  lea rax, [rax + rdi*8]	       935	cp-demangle.c	FUNCTION_3
0x400dc05	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400dc0c	          0x897328	             mov dword [rbx + 0x28], esi	       937	cp-demangle.c	FUNCTION_3
0x400dc0f	    0xc70006000000	                      mov dword [rax], 6	      1189	cp-demangle.c	FUNCTION_14	IF_1
0x400dc15	        0x48894808	                mov qword [rax + 8], rcx	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x400dc19	      0xe982fcffff	                           jmp 0x400d8a0	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x400dc1e	            0x6690	                                     nop	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x400dc20	            0x85c0	                           test eax, eax	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400dc22	     0xf8558fdffff	                           jne 0x400d980	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400dc28	            0x31c9	                            xor ecx, ecx	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400dc2a	          0x4c89fa	                            mov rdx, r15	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400dc2d	      0xbe35000000	                           mov esi, 0x35	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400dc32	          0x4889df	                            mov rdi, rbx	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400dc35	      0xe80624ffff	                    call sym.d_make_comp	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400dc3a	      0xe924feffff	                           jmp 0x400da63	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400dc3f	              0x90	                                     nop	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400dc40	          0x4885d2	                           test rdx, rdx	      3407	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x400dc43	     0xf8437fdffff	                            je 0x400d980	      3407	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x400dc49	        0x498b4708	                mov rax, qword [r15 + 8]	      3237	cp-demangle.c	FUNCTION_50
0x400dc4d	          0x488b00	                    mov rax, qword [rax]	      3237	cp-demangle.c	FUNCTION_50
0x400dc50	        0x80780163	                cmp byte [rax + 1], 0x63	      3239	cp-demangle.c	FUNCTION_50
0x400dc54	     0xf84ce020000	                            je 0x400df28	      3239	cp-demangle.c	FUNCTION_50
0x400dc5a	          0x803a66	                    cmp byte [rdx], 0x66	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400dc5d	     0xf846b030000	                            je 0x400dfce	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400dc63	          0x4889df	                            mov rdi, rbx	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x400dc66	      0x4889542408	                mov qword [rsp + 8], rdx	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x400dc6b	      0xe870040000	                 call sym.d_expression_1	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x400dc70	      0x488b542408	                mov rdx, qword [rsp + 8]	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x400dc75	        0x48890424	                    mov qword [rsp], rax	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x400dc79	           0xfb602	                   movzx eax, byte [rdx]	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400dc7c	          0x83f863	                           cmp eax, 0x63	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400dc7f	     0xf84eb010000	                            je 0x400de70	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400dc85	          0x83f864	                           cmp eax, 0x64	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400dc88	     0xf85a8030000	                           jne 0x400e036	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400dc8e	        0x807a0174	                cmp byte [rdx + 1], 0x74	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400dc92	     0xf85e2010000	                           jne 0x400de7a	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400dc98	        0x807a0200	                   cmp byte [rdx + 2], 0	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400dc9c	     0xf85d8010000	                           jne 0x400de7a	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400dca2	          0x4889df	                            mov rdi, rbx	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x400dca5	      0xe886f1ffff	             call sym.d_unqualified_name	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x400dcaa	          0x4889c2	                            mov rdx, rax	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x400dcad	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x400dcb1	          0x803849	                    cmp byte [rax], 0x49	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x400dcb4	     0xf85ce010000	                           jne 0x400de88	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x400dcba	        0x4883c001	                              add rax, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400dcbe	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400dcc1	      0x4889542408	                mov qword [rsp + 8], rdx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400dcc6	        0x48894318	             mov qword [rbx + 0x18], rax	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400dcca	      0xe8e10d0000	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400dccf	      0x488b542408	                mov rdx, qword [rsp + 8]	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400dcd4	          0x4889c1	                            mov rcx, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400dcd7	      0xbe04000000	                              mov esi, 4	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400dcdc	          0x4889df	                            mov rdi, rbx	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400dcdf	      0xe85c23ffff	                    call sym.d_make_comp	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400dce4	          0x4889c2	                            mov rdx, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400dce7	      0xe99c010000	                           jmp 0x400de88	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400dcec	         0xf1f4000	                         nop dword [rax]	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400dcf0	        0x4883c002	                              add rax, 2	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x400dcf4	          0x4889df	                            mov rdi, rbx	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x400dcf7	        0x48894318	             mov qword [rbx + 0x18], rax	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x400dcfb	      0xe800000000	                          call 0x400dd00	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x400dd00	          0x4889df	                            mov rdi, rbx	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x400dd03	          0x4989c7	                            mov r15, rax	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x400dd06	      0xe825f1ffff	             call sym.d_unqualified_name	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x400dd0b	          0x4889c2	                            mov rdx, rax	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x400dd0e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x400dd12	          0x803849	                    cmp byte [rax], 0x49	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x400dd15	     0xf85c5010000	                           jne 0x400dee0	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x400dd1b	        0x4883c001	                              add rax, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400dd1f	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400dd22	        0x48891424	                    mov qword [rsp], rdx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400dd26	        0x48894318	             mov qword [rbx + 0x18], rax	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400dd2a	      0xe8810d0000	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400dd2f	        0x488b1424	                    mov rdx, qword [rsp]	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd33	          0x4889df	                            mov rdi, rbx	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd36	          0x4889c1	                            mov rcx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd39	      0xbe04000000	                              mov esi, 4	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd3e	      0xe8fd22ffff	                    call sym.d_make_comp	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd43	          0x4c89fa	                            mov rdx, r15	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd46	          0x4889c1	                            mov rcx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd49	      0xbe01000000	                              mov esi, 1	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd4e	          0x4889df	                            mov rdi, rbx	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd51	      0xe8ea22ffff	                    call sym.d_make_comp	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd56	      0xe908fdffff	                           jmp 0x400da63	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x400dd5b	          0x4885d2	                           test rdx, rdx	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400dd5e	     0xf84e4020000	                            je 0x400e048	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400dd64	           0xfb602	                   movzx eax, byte [rdx]	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400dd67	            0x3c70	                            cmp al, 0x70	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400dd69	     0xf8491010000	                            je 0x400df00	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400dd6f	            0x3c6d	                            cmp al, 0x6d	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400dd71	     0xf8489010000	                            je 0x400df00	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400dd77	            0x31c9	                            xor ecx, ecx	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x400dd79	          0x803a73	                    cmp byte [rdx], 0x73	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400dd7c	     0xf8436010000	                            je 0x400deb8	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400dd82	          0x4889df	                            mov rdi, rbx	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x400dd85	          0x890c24	                    mov dword [rsp], ecx	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x400dd88	      0xe853030000	                 call sym.d_expression_1	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x400dd8d	          0x8b0c24	                    mov ecx, dword [rsp]	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x400dd90	            0x85c9	                           test ecx, ecx	      3395	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22
0x400dd92	            0x7413	                            je 0x400dda7	      3395	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22
0x400dd94	          0x4889c1	                            mov rcx, rax	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x400dd97	          0x4889c2	                            mov rdx, rax	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x400dd9a	      0xbe38000000	                           mov esi, 0x38	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x400dd9f	          0x4889df	                            mov rdi, rbx	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x400dda2	      0xe89922ffff	                    call sym.d_make_comp	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x400dda7	          0x4889c1	                            mov rcx, rax	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x400ddaa	          0x4c89fa	                            mov rdx, r15	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x400ddad	      0xbe36000000	                           mov esi, 0x36	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x400ddb2	          0x4889df	                            mov rdi, rbx	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x400ddb5	      0xe88622ffff	                    call sym.d_make_comp	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x400ddba	      0xe9a4fcffff	                           jmp 0x400da63	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x400ddbf	              0x90	                                     nop	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x400ddc0	        0x4883c002	                              add rax, 2	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x400ddc4	          0x4889df	                            mov rdi, rbx	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400ddc7	        0x48894318	             mov qword [rbx + 0x18], rax	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x400ddcb	      0xe810030000	                 call sym.d_expression_1	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400ddd0	            0x31c9	                            xor ecx, ecx	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400ddd2	          0x4889c2	                            mov rdx, rax	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400ddd5	      0xbe4a000000	                           mov esi, 0x4a	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400ddda	          0x4889df	                            mov rdi, rbx	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400dddd	      0xe85e22ffff	                    call sym.d_make_comp	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400dde2	      0xe97cfcffff	                           jmp 0x400da63	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400dde7	    0x660f1f840000	                    nop word [rax + rax]	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400ddf0	        0x807a0175	                cmp byte [rdx + 1], 0x75	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x400ddf4	     0xf8586fbffff	                           jne 0x400d980	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x400ddfa	        0x807a0200	                   cmp byte [rdx + 2], 0	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x400ddfe	     0xf857cfbffff	                           jne 0x400d980	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x400de04	          0x4889df	                            mov rdi, rbx	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x400de07	      0xe8d4020000	                 call sym.d_expression_1	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x400de0c	          0x4889df	                            mov rdi, rbx	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x400de0f	        0x48890424	                    mov qword [rsp], rax	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x400de13	      0xe8c8020000	                 call sym.d_expression_1	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x400de18	          0x4889df	                            mov rdi, rbx	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x400de1b	      0x4889442408	                mov qword [rsp + 8], rax	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x400de20	      0xe8bb020000	                 call sym.d_expression_1	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x400de25	          0x4885c0	                           test rax, rax	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x400de28	          0x4889c1	                            mov rcx, rax	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x400de2b	      0x488b542408	                mov rdx, qword [rsp + 8]	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x400de30	     0xf844afbffff	                            je 0x400d980	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x400de36	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de39	      0xbe3b000000	                           mov esi, 0x3b	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de3e	      0xe8fd21ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de43	        0x488b1424	                    mov rdx, qword [rsp]	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de47	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de4a	          0x4889c1	                            mov rcx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de4d	      0xbe3a000000	                           mov esi, 0x3a	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de52	      0xe8e921ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de57	          0x4c89fa	                            mov rdx, r15	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de5a	          0x4889c1	                            mov rcx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de5d	      0xbe39000000	                           mov esi, 0x39	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de62	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de65	      0xe8d621ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de6a	      0xe9f4fbffff	                           jmp 0x400da63	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de6f	              0x90	                                     nop	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400de70	        0x807a016c	                cmp byte [rdx + 1], 0x6c	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400de74	     0xf84eb000000	                            je 0x400df65	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400de7a	          0x4889df	                            mov rdi, rbx	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x400de7d	      0xe85e020000	                 call sym.d_expression_1	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x400de82	          0x4889c2	                            mov rdx, rax	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x400de85	           0xf1f00	                         nop dword [rax]	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x400de88	          0x4889d1	                            mov rcx, rdx	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400de8b	        0x488b1424	                    mov rdx, qword [rsp]	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400de8f	          0x4889df	                            mov rdi, rbx	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400de92	      0xbe38000000	                           mov esi, 0x38	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400de97	      0xe8a421ffff	                    call sym.d_make_comp	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400de9c	          0x4c89fa	                            mov rdx, r15	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400de9f	          0x4889c1	                            mov rcx, rax	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400dea2	      0xbe37000000	                           mov esi, 0x37	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400dea7	          0x4889df	                            mov rdi, rbx	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400deaa	      0xe89121ffff	                    call sym.d_make_comp	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400deaf	      0xe9affbffff	                           jmp 0x400da63	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400deb4	         0xf1f4000	                         nop dword [rax]	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400deb8	        0x807a0150	                cmp byte [rdx + 1], 0x50	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400debc	     0xf85c0feffff	                           jne 0x400dd82	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400dec2	        0x807a0200	                   cmp byte [rdx + 2], 0	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400dec6	     0xf85b6feffff	                           jne 0x400dd82	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400decc	          0x4889df	                            mov rdi, rbx	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x400decf	          0x890c24	                    mov dword [rsp], ecx	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x400ded2	      0xe8d90b0000	              call sym.d_template_args_1	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x400ded7	          0x8b0c24	                    mov ecx, dword [rsp]	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x400deda	      0xe9b1feffff	                           jmp 0x400dd90	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x400dedf	              0x90	                                     nop	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x400dee0	          0x4889d1	                            mov rcx, rdx	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x400dee3	      0xbe01000000	                              mov esi, 1	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x400dee8	          0x4c89fa	                            mov rdx, r15	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x400deeb	          0x4889df	                            mov rdi, rbx	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x400deee	      0xe84d21ffff	                    call sym.d_make_comp	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x400def3	      0xe96bfbffff	                           jmp 0x400da63	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x400def8	     0xf1f84000000	                   nop dword [rax + rax]	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x400df00	          0x3a4201	                  cmp al, byte [rdx + 1]	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400df03	     0xf856efeffff	                           jne 0x400dd77	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400df09	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400df0d	      0xb901000000	                              mov ecx, 1	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400df12	          0x80385f	                    cmp byte [rax], 0x5f	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400df15	     0xf855efeffff	                           jne 0x400dd79	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400df1b	        0x4883c001	                              add rax, 1	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400df1f	        0x48894318	             mov qword [rbx + 0x18], rax	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400df23	      0xe94ffeffff	                           jmp 0x400dd77	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400df28	           0xfb600	                   movzx eax, byte [rax]	      3240	cp-demangle.c	FUNCTION_50
0x400df2b	          0x8d488e	                   lea ecx, [rax - 0x72]	      3240	cp-demangle.c	FUNCTION_50
0x400df2e	          0x80f901	                               cmp cl, 1	      3240	cp-demangle.c	FUNCTION_50
0x400df31	            0x760b	                           jbe 0x400df3e	      3240	cp-demangle.c	FUNCTION_50
0x400df33	          0x83e863	                           sub eax, 0x63	      3240	cp-demangle.c	FUNCTION_50
0x400df36	            0x3c01	                               cmp al, 1	      3240	cp-demangle.c	FUNCTION_50
0x400df38	     0xf871cfdffff	                            ja 0x400dc5a	      3240	cp-demangle.c	FUNCTION_50
0x400df3e	          0x4889df	                            mov rdi, rbx	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x400df41	      0x4889542408	                mov qword [rsp + 8], rdx	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x400df46	      0xe800000000	                          call 0x400df4b	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x400df4b	      0x488b542408	                mov rdx, qword [rsp + 8]	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x400df50	        0x48890424	                    mov qword [rsp], rax	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x400df54	           0xfb602	                   movzx eax, byte [rdx]	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400df57	          0x83f863	                           cmp eax, 0x63	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400df5a	     0xf8525fdffff	                           jne 0x400dc85	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400df60	      0xe90bffffff	                           jmp 0x400de70	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400df65	        0x807a0200	                   cmp byte [rdx + 2], 0	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400df69	     0xf850bffffff	                           jne 0x400de7a	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400df6f	      0xbe45000000	                           mov esi, 0x45	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400df74	          0x4889df	                            mov rdi, rbx	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400df77	      0xe874f8ffff	                     call sym.d_exprlist	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400df7c	          0x4889c2	                            mov rdx, rax	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400df7f	      0xe904ffffff	                           jmp 0x400de88	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400df84	        0x4883c001	                              add rax, 1	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x400df88	        0x48894718	             mov qword [rdi + 0x18], rax	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x400df8c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400df91	    0x644833042528	                xor rax, qword fs:[0x28]	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400df9a	     0xf85cc000000	                           jne 0x400e06c	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400dfa0	        0x4883c428	                           add rsp, 0x28	      3229	cp-demangle.c	FUNCTION_49
0x400dfa4	            0x31c9	                            xor ecx, ecx	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400dfa6	            0x31d2	                            xor edx, edx	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400dfa8	              0x5b	                                 pop rbx	      3229	cp-demangle.c	FUNCTION_49
0x400dfa9	              0x5d	                                 pop rbp	      3229	cp-demangle.c	FUNCTION_49
0x400dfaa	            0x415c	                                 pop r12	      3229	cp-demangle.c	FUNCTION_49
0x400dfac	            0x415d	                                 pop r13	      3229	cp-demangle.c	FUNCTION_49
0x400dfae	            0x415e	                                 pop r14	      3229	cp-demangle.c	FUNCTION_49
0x400dfb0	            0x415f	                                 pop r15	      3229	cp-demangle.c	FUNCTION_49
0x400dfb2	      0xbe2e000000	                           mov esi, 0x2e	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400dfb7	      0xe98420ffff	                     jmp sym.d_make_comp	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400dfbc	        0x4883c003	                              add rax, 3	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400dfc0	      0xb901000000	                              mov ecx, 1	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400dfc5	        0x48894318	             mov qword [rbx + 0x18], rax	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400dfc9	      0xe914fcffff	                           jmp 0x400dbe2	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400dfce	          0x4889df	                            mov rdi, rbx	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400dfd1	      0x4889542408	                mov qword [rsp + 8], rdx	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400dfd6	      0xe885ebffff	                call sym.d_operator_name	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400dfdb	      0x488b542408	                mov rdx, qword [rsp + 8]	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400dfe0	        0x48890424	                    mov qword [rsp], rax	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400dfe4	      0xe990fcffff	                           jmp 0x400dc79	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400dfe9	        0x4883c001	                              add rax, 1	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x400dfed	            0x31c9	                            xor ecx, ecx	      3469	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36
0x400dfef	        0x48894318	             mov qword [rbx + 0x18], rax	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x400dff3	      0xe93efeffff	                           jmp 0x400de36	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x400dff8	          0x4889df	                            mov rdi, rbx	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x400dffb	      0xe860ebffff	                call sym.d_operator_name	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x400e000	      0xe907feffff	                           jmp 0x400de0c	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x400e005	        0x80780169	                cmp byte [rax + 1], 0x69	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x400e009	     0xf8571f9ffff	                           jne 0x400d980	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x400e00f	        0x4883c002	                              add rax, 2	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x400e013	      0xbe45000000	                           mov esi, 0x45	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400e018	          0x4889df	                            mov rdi, rbx	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400e01b	        0x48894318	             mov qword [rbx + 0x18], rax	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x400e01f	      0x4889542408	                mov qword [rsp + 8], rdx	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x400e024	      0xe8c7f7ffff	                     call sym.d_exprlist	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400e029	      0x488b542408	                mov rdx, qword [rsp + 8]	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400e02e	          0x4889c1	                            mov rcx, rax	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400e031	      0xe900feffff	                           jmp 0x400de36	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400e036	          0x83f870	                           cmp eax, 0x70	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400e039	     0xf844ffcffff	                            je 0x400dc8e	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400e03f	      0xe936feffff	                           jmp 0x400de7a	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400e044	         0xf1f4000	                         nop dword [rax]	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400e048	            0x31c9	                            xor ecx, ecx	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x400e04a	      0xe933fdffff	                           jmp 0x400dd82	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x400e04f	              0x90	                                     nop	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x400e050	          0x80f96f	                            cmp cl, 0x6f	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x400e053	            0x751c	                           jne 0x400e071	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x400e055	        0x8078016e	                cmp byte [rax + 1], 0x6e	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x400e059	     0xf85e7f8ffff	                           jne 0x400d946	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x400e05f	        0x4883c002	                              add rax, 2	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x400e063	        0x48894318	             mov qword [rbx + 0x18], rax	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x400e067	      0xe90af8ffff	                           jmp 0x400d876	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x400e06c	      0xe800000000	                          call 0x400e071	      3229	cp-demangle.c	FUNCTION_49
0x400e071	          0x80f969	                            cmp cl, 0x69	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400e074	            0x7409	                            je 0x400e07f	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400e076	          0x80f974	                            cmp cl, 0x74	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400e079	     0xf85c7f8ffff	                           jne 0x400d946	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400e07f	        0x8078016c	                cmp byte [rax + 1], 0x6c	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x400e083	     0xf85bdf8ffff	                           jne 0x400d946	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x400e089	          0x4531ff	                          xor r15d, r15d	      3329	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400e08c	          0x80f974	                            cmp cl, 0x74	      3330	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400e08f	            0x742d	                            je 0x400e0be	      3330	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400e091	        0x4883c002	                              add rax, 2	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x400e095	          0x4889df	                            mov rdi, rbx	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e098	      0xbe45000000	                           mov esi, 0x45	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e09d	        0x48894318	             mov qword [rbx + 0x18], rax	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x400e0a1	      0xe84af7ffff	                     call sym.d_exprlist	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e0a6	          0x4c89fa	                            mov rdx, r15	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e0a9	          0x4889c1	                            mov rcx, rax	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e0ac	      0xbe30000000	                           mov esi, 0x30	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e0b1	          0x4889df	                            mov rdi, rbx	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e0b4	      0xe8871fffff	                    call sym.d_make_comp	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e0b9	      0xe9a5f9ffff	                           jmp 0x400da63	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400e0be	          0x4889df	                            mov rdi, rbx	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400e0c1	      0xe800000000	                          call 0x400e0c6	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400e0c6	          0x4989c7	                            mov r15, rax	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400e0c9	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x400e0cd	        0x80780100	                   cmp byte [rax + 1], 0	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x400e0d1	     0xf84a9f8ffff	                            je 0x400d980	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x400e0d7	            0xebb8	                           jmp 0x400e091	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
cplus_demangle_v3	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	188
0x40105c0	              0x55	                                push rbp	      6453	cp-demangle.c	FUNCTION_100
0x40105c1	          0x4889e5	                            mov rbp, rsp	      6453	cp-demangle.c	FUNCTION_100
0x40105c4	            0x4157	                                push r15	      6453	cp-demangle.c	FUNCTION_100
0x40105c6	            0x4156	                                push r14	      6453	cp-demangle.c	FUNCTION_100
0x40105c8	            0x4155	                                push r13	      6453	cp-demangle.c	FUNCTION_100
0x40105ca	            0x4154	                                push r12	      6453	cp-demangle.c	FUNCTION_100
0x40105cc	          0x4189f6	                           mov r14d, esi	      6453	cp-demangle.c	FUNCTION_100
0x40105cf	              0x53	                                push rbx	      6453	cp-demangle.c	FUNCTION_100
0x40105d0	          0x4889fb	                            mov rbx, rdi	      6453	cp-demangle.c	FUNCTION_100
0x40105d3	    0x4881eca80000	                           sub rsp, 0xa8	      6453	cp-demangle.c	FUNCTION_100
0x40105da	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      3956	cp-demangle.c	FUNCTION_63
0x40105e5	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      3957	cp-demangle.c	FUNCTION_63
0x40105f0	    0x64488b042528	                mov rax, qword fs:[0x28]	      6453	cp-demangle.c	FUNCTION_100
0x40105f9	        0x488945c8	             mov qword [rbp - 0x38], rax	      6453	cp-demangle.c	FUNCTION_100
0x40105fd	            0x31c0	                            xor eax, eax	      6453	cp-demangle.c	FUNCTION_100
0x40105ff	          0x803f5f	                    cmp byte [rdi], 0x5f	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010602	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      3958	cp-demangle.c	FUNCTION_63
0x401060d	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	      3959	cp-demangle.c	FUNCTION_63
0x4010617	     0xf84cb010000	                            je 0x40107e8	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x401061d	      0xbf00000000	                              mov edi, 0	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010622	      0xb908000000	                              mov ecx, 8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010627	          0x4889de	                            mov rsi, rbx	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x401062a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x401062c	            0x7532	                           jne 0x4010660	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x401062e	         0xfb64308	               movzx eax, byte [rbx + 8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010632	          0x83e824	                           sub eax, 0x24	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010635	            0x3c3b	                            cmp al, 0x3b	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010637	            0x7727	                            ja 0x4010660	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010639	    0x48ba01040000	          movabs rdx, 0x800000000000401 	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010643	        0x480fa3c2	                             bt rdx, rax	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010647	            0x7317	                           jae 0x4010660	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010649	         0xfb64309	               movzx eax, byte [rbx + 9]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401064d	            0x3c44	                            cmp al, 0x44	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401064f	     0xf84db010000	                            je 0x4010830	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010655	            0x3c49	                            cmp al, 0x49	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010657	     0xf84d3010000	                            je 0x4010830	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401065d	           0xf1f00	                         nop dword [rax]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010660	          0x4531e4	                          xor r12d, r12d	      6225	cp-demangle.c	FUNCTION_96	ELSE_2
0x4010663	        0x41f6c610	                         test r14b, 0x10	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4010667	     0xf8443010000	                            je 0x40107b0	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x401066d	          0x4889df	                            mov rdi, rbx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4010670	          0x4989e5	                            mov r13, rsp	      6230	cp-demangle.c	FUNCTION_96
0x4010673	      0xe800000000	                          call 0x4010678	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4010678	        0x488d1403	                    lea rdx, [rbx + rax]	      6170	cp-demangle.c	
0x401067c	          0x8d0c00	                    lea ecx, [rax + rax]	      6178	cp-demangle.c	
0x401067f	          0x8945ac	             mov dword [rbp - 0x54], eax	      6183	cp-demangle.c	
0x4010682	            0x4898	                                    cdqe	      6233	cp-demangle.c	FUNCTION_96
0x4010684	    0x48899d70ffff	             mov qword [rbp - 0x90], rbx	      6169	cp-demangle.c	
0x401068b	        0x44897580	            mov dword [rbp - 0x80], r14d	      6171	cp-demangle.c	
0x401068f	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      6170	cp-demangle.c	
0x4010696	          0x4863d1	                         movsxd rdx, ecx	      6232	cp-demangle.c	FUNCTION_96
0x4010699	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6233	cp-demangle.c	FUNCTION_96
0x40106a1	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      6232	cp-demangle.c	FUNCTION_96
0x40106a5	        0x48895d88	             mov qword [rbp - 0x78], rbx	      6173	cp-demangle.c	
0x40106a9	          0x894d9c	             mov dword [rbp - 0x64], ecx	      6178	cp-demangle.c	
0x40106ac	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      6233	cp-demangle.c	FUNCTION_96
0x40106b0	    0xc74598000000	               mov dword [rbp - 0x68], 0	      6179	cp-demangle.c	
0x40106b7	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      6184	cp-demangle.c	
0x40106be	    0x488d14d51000	                 lea rdx, [rdx*8 + 0x10]	      6232	cp-demangle.c	FUNCTION_96
0x40106c6	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      6186	cp-demangle.c	
0x40106ce	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      6188	cp-demangle.c	
0x40106d5	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6189	cp-demangle.c	
0x40106dc	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6190	cp-demangle.c	
0x40106e3	          0x4829d4	                            sub rsp, rdx	      6232	cp-demangle.c	FUNCTION_96
0x40106e6	      0x4c8d7c2407	                      lea r15, [rsp + 7]	      6232	cp-demangle.c	FUNCTION_96
0x40106eb	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x40106ee	        0x488965a0	             mov qword [rbp - 0x60], rsp	      6236	cp-demangle.c	FUNCTION_96
0x40106f2	        0x49c1ef03	                              shr r15, 3	      6232	cp-demangle.c	FUNCTION_96
0x40106f6	        0x4183fc01	                             cmp r12d, 1	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40106fa	    0x4a8d14fd0000	                        lea rdx, [r15*8]	      6232	cp-demangle.c	FUNCTION_96
0x4010702	        0x48895590	             mov qword [rbp - 0x70], rdx	      6235	cp-demangle.c	FUNCTION_96
0x4010706	     0xf84f4000000	                            je 0x4010800	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x401070c	     0xf82ae010000	                            jb 0x40108c0	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010712	        0x4183fc03	                             cmp r12d, 3	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010716	     0xf87a4010000	                            ja 0x40108c0	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x401071c	        0x807b0b5f	              cmp byte [rbx + 0xb], 0x5f	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010720	        0x488d730b	                    lea rsi, [rbx + 0xb]	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4010724	        0x48897588	             mov qword [rbp - 0x78], rsi	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4010728	            0x750a	                           jne 0x4010734	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x401072a	        0x807b0c5a	              cmp byte [rbx + 0xc], 0x5a	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x401072e	     0xf84a4010000	                            je 0x40108d8	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010734	          0x4889f7	                            mov rdi, rsi	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010737	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x401073e	    0x898d44ffffff	             mov dword [rbp - 0xbc], ecx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010744	    0x4889b548ffff	             mov qword [rbp - 0xb8], rsi	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x401074b	      0xe800000000	                          call 0x4010750	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010750	    0x8b8d44ffffff	             mov ecx, dword [rbp - 0xbc]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010756	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x401075d	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010764	            0x85c9	                           test ecx, ecx	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010766	     0xf8ee4000000	                           jle 0x4010850	       933	cp-demangle.c	FUNCTION_3	IF_1
0x401076c	            0x85c0	                           test eax, eax	       861	cp-demangle.c	IF_1
0x401076e	    0x42c704fd0400	                mov dword [r15*8 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x401077a	    0xc74598010000	               mov dword [rbp - 0x68], 1	       937	cp-demangle.c	FUNCTION_3
0x4010781	     0xf84c9000000	                            je 0x4010850	       861	cp-demangle.c	IF_1
0x4010787	    0x42c704fd0000	                    mov dword [r15*8], 0	       864	cp-demangle.c	
0x4010793	    0x4a8934fd0800	              mov qword [r15*8 + 8], rsi	       865	cp-demangle.c	
0x401079b	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	       865	cp-demangle.c	
0x40107a2	    0x428904fd1000	           mov dword [r15*8 + 0x10], eax	       866	cp-demangle.c	
0x40107aa	      0xe9aa000000	                           jmp 0x4010859	       866	cp-demangle.c	
0x40107af	              0x90	                                     nop	       866	cp-demangle.c	
0x40107b0	            0x31ff	                            xor edi, edi	       866	cp-demangle.c	
0x40107b2	      0xe800000000	                          call 0x40107b7	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x40107b7	            0x31c0	                            xor eax, eax	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x40107b9	     0xf1f80000000	                         nop dword [rax]	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x40107c0	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      6457	cp-demangle.c	FUNCTION_100
0x40107c4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6457	cp-demangle.c	FUNCTION_100
0x40107cd	     0xf8524010000	                           jne 0x40108f7	      6457	cp-demangle.c	FUNCTION_100
0x40107d3	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6457	cp-demangle.c	FUNCTION_100
0x40107d7	              0x5b	                                 pop rbx	      6457	cp-demangle.c	FUNCTION_100
0x40107d8	            0x415c	                                 pop r12	      6457	cp-demangle.c	FUNCTION_100
0x40107da	            0x415d	                                 pop r13	      6457	cp-demangle.c	FUNCTION_100
0x40107dc	            0x415e	                                 pop r14	      6457	cp-demangle.c	FUNCTION_100
0x40107de	            0x415f	                                 pop r15	      6457	cp-demangle.c	FUNCTION_100
0x40107e0	              0x5d	                                 pop rbp	      6457	cp-demangle.c	FUNCTION_100
0x40107e1	              0xc3	                                     ret	      6457	cp-demangle.c	FUNCTION_100
0x40107e2	    0x660f1f440000	                    nop word [rax + rax]	      6457	cp-demangle.c	FUNCTION_100
0x40107e8	        0x807f015a	                cmp byte [rdi + 1], 0x5a	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x40107ec	     0xf852bfeffff	                           jne 0x401061d	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x40107f2	    0x41bc01000000	                             mov r12d, 1	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x40107f8	      0xe970feffff	                           jmp 0x401066d	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x40107fd	           0xf1f00	                         nop dword [rax]	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x4010800	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010807	      0xbe01000000	                              mov esi, 1	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x401080c	      0xe800000000	                          call 0x4010811	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010811	          0x4889c3	                            mov rbx, rax	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010814	        0x41f6c601	                            test r14b, 1	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010818	            0x7472	                            je 0x401088c	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x401081a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x401081e	          0x803800	                       cmp byte [rax], 0	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010821	            0x7469	                            je 0x401088c	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010823	          0x4c89ec	                            mov rsp, r13	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010826	    0x488bbd50ffff	             mov rdi, qword [rbp - 0xb0]	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x401082d	            0xeb83	                           jmp 0x40107b2	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x401082f	              0x90	                                     nop	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010830	        0x807b0a5f	              cmp byte [rbx + 0xa], 0x5f	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010834	     0xf8526feffff	                           jne 0x4010660	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401083a	          0x4531e4	                          xor r12d, r12d	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401083d	            0x3c49	                            cmp al, 0x49	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401083f	        0x410f95c4	                              setne r12b	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010843	        0x4183c402	                             add r12d, 2	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010847	      0xe921feffff	                           jmp 0x401066d	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x401084c	         0xf1f4000	                         nop dword [rax]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010850	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010857	            0x31d2	                            xor edx, edx	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x4010859	            0x31f6	                            xor esi, esi	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x401085b	        0x4183fc02	                             cmp r12d, 2	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x401085f	          0x4889df	                            mov rdi, rbx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010862	        0x400f95c6	                               setne sil	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010866	            0x31c9	                            xor ecx, ecx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010868	          0x83c643	                           add esi, 0x43	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x401086b	      0xe8d0f7feff	                    call sym.d_make_comp	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010870	        0x4c8b6588	             mov r12, qword [rbp - 0x78]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010874	          0x4889c3	                            mov rbx, rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010877	          0x4c89e7	                            mov rdi, r12	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x401087a	      0xe800000000	                          call 0x401087f	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x401087f	          0x4c01e0	                            add rax, r12	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010882	        0x41f6c601	                            test r14b, 1	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4010886	        0x48894588	             mov qword [rbp - 0x78], rax	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x401088a	            0x758e	                           jne 0x401081a	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x401088c	          0x4885db	                           test rbx, rbx	      6278	cp-demangle.c	FUNCTION_96
0x401088f	            0x7492	                            je 0x4010823	      6278	cp-demangle.c	FUNCTION_96
0x4010891	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	      6278	cp-demangle.c	FUNCTION_96
0x4010898	      0xba00000000	                              mov edx, 0	      6278	cp-demangle.c	FUNCTION_96
0x401089d	          0x4889de	                            mov rsi, rbx	      6278	cp-demangle.c	FUNCTION_96
0x40108a0	          0x4489f7	                           mov edi, r14d	      6278	cp-demangle.c	FUNCTION_96
0x40108a3	      0xe800000000	                          call 0x40108a8	      6278	cp-demangle.c	FUNCTION_96
0x40108a8	            0x85c0	                           test eax, eax	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x40108aa	          0x4c89ec	                            mov rsp, r13	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x40108ad	            0x744d	                            je 0x40108fc	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x40108af	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6309	cp-demangle.c	FUNCTION_97
0x40108b6	      0xe905ffffff	                           jmp 0x40107c0	      6309	cp-demangle.c	FUNCTION_97
0x40108bb	       0xf1f440000	                   nop dword [rax + rax]	      6309	cp-demangle.c	FUNCTION_97
0x40108c0	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40108c7	      0xe800000000	                          call 0x40108cc	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40108cc	          0x4889c3	                            mov rbx, rax	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40108cf	      0xe940ffffff	                           jmp 0x4010814	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40108d4	         0xf1f4000	                         nop dword [rax]	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40108d8	        0x4883c30d	                            add rbx, 0xd	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x40108dc	        0x48895d88	             mov qword [rbp - 0x78], rbx	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x40108e0	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40108e7	          0x4889df	                            mov rdi, rbx	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40108ea	      0xe8a1eaffff	        call sym.d_encoding.constprop.23	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40108ef	          0x4889c2	                            mov rdx, rax	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40108f2	      0xe962ffffff	                           jmp 0x4010859	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40108f7	      0xe800000000	                          call 0x40108fc	      6457	cp-demangle.c	FUNCTION_100
0x40108fc	    0x488bbd50ffff	             mov rdi, qword [rbp - 0xb0]	      6457	cp-demangle.c	FUNCTION_100
0x4010903	      0xe9aafeffff	                           jmp 0x40107b2	      6457	cp-demangle.c	FUNCTION_100
d_name	CALL,19:IF,6:SWITCH,1:ELSE,2:WHILE,0:FOR,0:DO,0:functions,0	464
0x400ec50	            0x4157	                                push r15	      1401	cp-demangle.c	FUNCTION_20
0x400ec52	            0x4156	                                push r14	      1401	cp-demangle.c	FUNCTION_20
0x400ec54	            0x4155	                                push r13	      1401	cp-demangle.c	FUNCTION_20
0x400ec56	            0x4154	                                push r12	      1401	cp-demangle.c	FUNCTION_20
0x400ec58	              0x55	                                push rbp	      1401	cp-demangle.c	FUNCTION_20
0x400ec59	              0x53	                                push rbx	      1401	cp-demangle.c	FUNCTION_20
0x400ec5a	          0x4889fb	                            mov rbx, rdi	      1401	cp-demangle.c	FUNCTION_20
0x400ec5d	        0x4883ec28	                           sub rsp, 0x28	      1401	cp-demangle.c	FUNCTION_20
0x400ec61	    0x64488b042528	                mov rax, qword fs:[0x28]	      1401	cp-demangle.c	FUNCTION_20
0x400ec6a	      0x4889442418	             mov qword [rsp + 0x18], rax	      1401	cp-demangle.c	FUNCTION_20
0x400ec6f	            0x31c0	                            xor eax, eax	      1401	cp-demangle.c	FUNCTION_20
0x400ec71	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1402	cp-demangle.c	FUNCTION_20	CALL_1
0x400ec75	           0xfb610	                   movzx edx, byte [rax]	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ec78	          0x80fa53	                            cmp dl, 0x53	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ec7b	     0xf84cf010000	                            je 0x400ee50	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ec81	            0x7e6d	                           jle 0x400ecf0	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ec83	          0x80fa55	                            cmp dl, 0x55	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ec86	            0x7438	                            je 0x400ecc0	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ec88	          0x80fa5a	                            cmp dl, 0x5a	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ec8b	     0xf854f010000	                           jne 0x400ede0	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ec91	        0x4883c001	                              add rax, 1	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x400ec95	        0x48894718	             mov qword [rdi + 0x18], rax	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x400ec99	      0xe8f2060000	        call sym.d_encoding.constprop.23	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x400ec9e	          0x4885c0	                           test rax, rax	      3591	cp-demangle.c	FUNCTION_54	IF_2
0x400eca1	          0x4889c5	                            mov rbp, rax	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x400eca4	            0x740d	                            je 0x400ecb3	      3591	cp-demangle.c	FUNCTION_54	IF_2
0x400eca6	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x400ecaa	          0x803945	                    cmp byte [rcx], 0x45	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x400ecad	     0xf845d020000	                            je 0x400ef10	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x400ecb3	            0x31c0	                            xor eax, eax	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x400ecb5	            0xeb11	                           jmp 0x400ecc8	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x400ecb7	    0x660f1f840000	                    nop word [rax + rax]	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x400ecc0	      0xe86be1ffff	             call sym.d_unqualified_name	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x400ecc5	           0xf1f00	                         nop dword [rax]	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x400ecc8	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1474	cp-demangle.c	FUNCTION_20
0x400eccd	    0x644833342528	                xor rsi, qword fs:[0x28]	      1474	cp-demangle.c	FUNCTION_20
0x400ecd6	     0xf854a060000	                           jne 0x400f326	      1474	cp-demangle.c	FUNCTION_20
0x400ecdc	        0x4883c428	                           add rsp, 0x28	      1474	cp-demangle.c	FUNCTION_20
0x400ece0	              0x5b	                                 pop rbx	      1474	cp-demangle.c	FUNCTION_20
0x400ece1	              0x5d	                                 pop rbp	      1474	cp-demangle.c	FUNCTION_20
0x400ece2	            0x415c	                                 pop r12	      1474	cp-demangle.c	FUNCTION_20
0x400ece4	            0x415d	                                 pop r13	      1474	cp-demangle.c	FUNCTION_20
0x400ece6	            0x415e	                                 pop r14	      1474	cp-demangle.c	FUNCTION_20
0x400ece8	            0x415f	                                 pop r15	      1474	cp-demangle.c	FUNCTION_20
0x400ecea	              0xc3	                                     ret	      1474	cp-demangle.c	FUNCTION_20
0x400eceb	       0xf1f440000	                   nop dword [rax + rax]	      1474	cp-demangle.c	FUNCTION_20
0x400ecf0	          0x80fa4e	                            cmp dl, 0x4e	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ecf3	     0xf85e7000000	                           jne 0x400ede0	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x400ecf9	        0x4883c001	                              add rax, 1	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x400ecfd	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x400ed02	      0xba01000000	                              mov edx, 1	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x400ed07	        0x48894718	             mov qword [rdi + 0x18], rax	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x400ed0b	      0xe800fbffff	                call sym.d_cv_qualifiers	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x400ed10	          0x4885c0	                           test rax, rax	      1491	cp-demangle.c	FUNCTION_21	IF_2
0x400ed13	          0x4989c5	                            mov r13, rax	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x400ed16	            0x749b	                            je 0x400ecb3	      1491	cp-demangle.c	FUNCTION_21	IF_2
0x400ed18	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x400ed1c	           0xfb602	                   movzx eax, byte [rdx]	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x400ed1f	            0x3c52	                            cmp al, 0x52	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400ed21	     0xf8499030000	                            je 0x400f0c0	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400ed27	          0x4531f6	                          xor r14d, r14d	      2816	cp-demangle.c	FUNCTION_36
0x400ed2a	            0x3c4f	                            cmp al, 0x4f	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400ed2c	            0x89c5	                            mov ebp, eax	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400ed2e	     0xf848c030000	                            je 0x400f0c0	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x400ed34	          0x4531ff	                          xor r15d, r15d	      1529	cp-demangle.c	FUNCTION_22
0x400ed37	    0x49bcff030810	                movabs r12, 0x20100803ff	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed41	     0xf1f80000000	                         nop dword [rax]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed48	          0x4084ed	                           test bpl, bpl	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x400ed4b	     0xf847f000000	                            je 0x400edd0	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x400ed51	        0x4080fd44	                           cmp bpl, 0x44	      1546	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x400ed55	     0xf848d020000	                            je 0x400efe8	      1546	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x400ed5b	          0x8d4dd0	                   lea ecx, [rbp - 0x30]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed5e	      0xb801000000	                              mov eax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed63	          0x80f925	                            cmp cl, 0x25	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed66	            0x7710	                            ja 0x400ed78	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed68	          0x4c89e0	                            mov rax, r12	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed6b	          0x48d3e8	                             shr rax, cl	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed6e	          0x83e001	                              and eax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed71	        0x4883f001	                              xor rax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed75	          0x83e001	                              and eax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed78	          0x8d4d9f	                   lea ecx, [rbp - 0x61]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed7b	          0x80f919	                            cmp cl, 0x19	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed7e	           0xf96c1	                                setbe cl	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed81	            0x38c1	                              cmp cl, al	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed83	     0xf83ff010000	                           jae 0x400ef88	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ed89	        0x4080fd53	                           cmp bpl, 0x53	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x400ed8d	     0xf840d030000	                            je 0x400f0a0	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x400ed93	        0x4080fd49	                           cmp bpl, 0x49	      1564	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x400ed97	     0xf84d3020000	                            je 0x400f070	      1564	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x400ed9d	        0x4080fd54	                           cmp bpl, 0x54	      1571	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x400eda1	     0xf8459030000	                            je 0x400f100	      1571	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x400eda7	        0x4080fd45	                           cmp bpl, 0x45	      1573	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x400edab	     0xf8491050000	                            je 0x400f342	      1573	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x400edb1	          0x4d85ff	                           test r15, r15	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x400edb4	            0x741a	                            je 0x400edd0	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x400edb6	        0x4080fd4d	                           cmp bpl, 0x4d	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x400edba	            0x7514	                           jne 0x400edd0	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x400edbc	        0x488d4201	                      lea rax, [rdx + 1]	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x400edc0	        0x48894318	             mov qword [rbx + 0x18], rax	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x400edc4	         0xfb66a01	               movzx ebp, byte [rdx + 1]	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x400edc8	          0x4889c2	                            mov rdx, rax	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x400edcb	          0x4084ed	                           test bpl, bpl	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x400edce	            0x7581	                           jne 0x400ed51	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x400edd0	    0x49c745000000	                      mov qword [r13], 0	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x400edd8	            0x31c0	                            xor eax, eax	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x400edda	      0xe9e9feffff	                           jmp 0x400ecc8	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x400eddf	              0x90	                                     nop	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x400ede0	          0x4889df	                            mov rdi, rbx	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x400ede3	      0xe848e0ffff	             call sym.d_unqualified_name	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x400ede8	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x400edec	          0x4889c2	                            mov rdx, rax	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x400edef	          0x803949	                    cmp byte [rcx], 0x49	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x400edf2	     0xf85d0feffff	                           jne 0x400ecc8	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x400edf8	          0x4885c0	                           test rax, rax	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400edfb	     0xf84b2feffff	                            je 0x400ecb3	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400ee01	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400ee04	          0x3b433c	            cmp eax, dword [rbx + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400ee07	     0xf8da6feffff	                           jge 0x400ecb3	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400ee0d	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x400ee11	          0x4863f0	                         movsxd rsi, eax	      3786	cp-demangle.c	FUNCTION_59
0x400ee14	          0x83c001	                              add eax, 1	      3787	cp-demangle.c	FUNCTION_59
0x400ee17	        0x488914f1	            mov qword [rcx + rsi*8], rdx	      3786	cp-demangle.c	FUNCTION_59
0x400ee1b	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400ee1f	            0x31c9	                            xor ecx, ecx	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x400ee21	          0x894338	             mov dword [rbx + 0x38], eax	      3787	cp-demangle.c	FUNCTION_59
0x400ee24	           0xfb607	                   movzx eax, byte [rdi]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400ee27	          0x8d70b7	                   lea esi, [rax - 0x49]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400ee2a	        0x4080fe01	                              cmp sil, 1	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400ee2e	     0xf86d0040000	                           jbe 0x400f304	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400ee34	      0xbe04000000	                              mov esi, 4	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x400ee39	          0x4889df	                            mov rdi, rbx	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x400ee3c	      0xe8ff11ffff	                    call sym.d_make_comp	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x400ee41	      0xe982feffff	                           jmp 0x400ecc8	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x400ee46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x400ee50	        0x80780174	                cmp byte [rax + 1], 0x74	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x400ee54	            0x743a	                            je 0x400ee90	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x400ee56	            0x31f6	                            xor esi, esi	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x400ee58	      0xe8f31affff	                 call sym.d_substitution	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x400ee5d	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x400ee61	          0x4889c2	                            mov rdx, rax	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x400ee64	          0x803949	                    cmp byte [rcx], 0x49	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x400ee67	     0xf855bfeffff	                           jne 0x400ecc8	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x400ee6d	        0x4883c101	                              add rcx, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400ee71	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400ee74	      0x4889542408	                mov qword [rsp + 8], rdx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400ee79	        0x48894b18	             mov qword [rbx + 0x18], rcx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400ee7d	      0xe82efcffff	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400ee82	      0x488b542408	                mov rdx, qword [rsp + 8]	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400ee87	          0x4889c1	                            mov rcx, rax	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400ee8a	            0xeba8	                           jmp 0x400ee34	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400ee8c	         0xf1f4000	                         nop dword [rax]	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400ee90	        0x4883c002	                              add rax, 2	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x400ee94	        0x48894718	             mov qword [rdi + 0x18], rax	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x400ee98	      0xe893dfffff	             call sym.d_unqualified_name	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400ee9d	          0x8b7328	            mov esi, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400eea0	            0x31d2	                            xor edx, edx	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x400eea2	          0x3b732c	            cmp esi, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400eea5	     0xf8c62020000	                            jl 0x400f10d	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400eeab	          0x4889c1	                            mov rcx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400eeae	      0xbe01000000	                              mov esi, 1	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400eeb3	          0x4889df	                            mov rdi, rbx	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400eeb6	      0xe88511ffff	                    call sym.d_make_comp	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400eebb	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x400eebf	        0x83434803	               add dword [rbx + 0x48], 3	      1431	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x400eec3	          0x4889c2	                            mov rdx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400eec6	          0x803949	                    cmp byte [rcx], 0x49	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x400eec9	     0xf85f9fdffff	                           jne 0x400ecc8	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x400eecf	          0x4885c0	                           test rax, rax	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400eed2	     0xf84dbfdffff	                            je 0x400ecb3	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400eed8	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400eedb	          0x3b433c	            cmp eax, dword [rbx + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400eede	     0xf8dcffdffff	                           jge 0x400ecb3	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400eee4	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x400eee8	          0x4863f0	                         movsxd rsi, eax	      3786	cp-demangle.c	FUNCTION_59
0x400eeeb	          0x83c001	                              add eax, 1	      3787	cp-demangle.c	FUNCTION_59
0x400eeee	        0x488914f1	            mov qword [rcx + rsi*8], rdx	      3786	cp-demangle.c	FUNCTION_59
0x400eef2	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400eef6	          0x894338	             mov dword [rbx + 0x38], eax	      3787	cp-demangle.c	FUNCTION_59
0x400eef9	           0xfb601	                   movzx eax, byte [rcx]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400eefc	          0x83e849	                           sub eax, 0x49	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400eeff	            0x3c01	                               cmp al, 1	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400ef01	     0xf8666ffffff	                           jbe 0x400ee6d	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x400ef07	            0x31c9	                            xor ecx, ecx	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x400ef09	      0xe926ffffff	                           jmp 0x400ee34	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x400ef0e	            0x6690	                                     nop	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x400ef10	        0x488d4101	                      lea rax, [rcx + 1]	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x400ef14	        0x48894318	             mov qword [rbx + 0x18], rax	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x400ef18	         0xfb64101	               movzx eax, byte [rcx + 1]	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x400ef1c	            0x3c73	                            cmp al, 0x73	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x400ef1e	     0xf8446030000	                            je 0x400f26a	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x400ef24	            0x3c64	                            cmp al, 0x64	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x400ef26	     0xf8431020000	                            je 0x400f15d	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x400ef2c	          0x4889df	                            mov rdi, rbx	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400ef2f	      0xe81cfdffff	                         call sym.d_name	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400ef34	          0x4885c0	                           test rax, rax	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400ef37	          0x4989c4	                            mov r12, rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400ef3a	            0x7424	                            je 0x400ef60	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400ef3c	            0x8b00	                    mov eax, dword [rax]	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400ef3e	          0x83e0fd	                     and eax, 0xfffffffd	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400ef41	          0x83f845	                           cmp eax, 0x45	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400ef44	            0x741a	                            je 0x400ef60	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400ef46	          0x4889df	                            mov rdi, rbx	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400ef49	      0xe80217ffff	                call sym.d_discriminator	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400ef4e	            0x85c0	                           test eax, eax	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400ef50	     0xf845dfdffff	                            je 0x400ecb3	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400ef56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400ef60	        0x837d0003	                      cmp dword [rbp], 3	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x400ef64	     0xf84d9010000	                            je 0x400f143	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x400ef6a	          0x4c89e1	                            mov rcx, r12	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400ef6d	          0x4889ea	                            mov rdx, rbp	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400ef70	      0xbe02000000	                              mov esi, 2	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400ef75	          0x4889df	                            mov rdi, rbx	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400ef78	      0xe8c310ffff	                    call sym.d_make_comp	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400ef7d	      0xe946fdffff	                           jmp 0x400ecc8	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400ef82	    0x660f1f440000	                    nop word [rax + rax]	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x400ef88	          0x4889df	                            mov rdi, rbx	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ef8b	      0xe8a0deffff	             call sym.d_unqualified_name	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x400ef90	          0x4d85ff	                           test r15, r15	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400ef93	            0x756b	                           jne 0x400f000	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400ef95	        0x4080fd53	                           cmp bpl, 0x53	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400ef99	            0x7437	                            je 0x400efd2	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400ef9b	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400ef9f	           0xfb62a	                   movzx ebp, byte [rdx]	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400efa2	        0x4080fd45	                           cmp bpl, 0x45	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400efa6	     0xf84a4000000	                            je 0x400f050	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400efac	          0x4885c0	                           test rax, rax	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400efaf	     0xf841bfeffff	                            je 0x400edd0	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400efb5	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400efb8	          0x3b533c	            cmp edx, dword [rbx + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400efbb	     0xf8d0ffeffff	                           jge 0x400edd0	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400efc1	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x400efc5	          0x4863f2	                         movsxd rsi, edx	      3786	cp-demangle.c	FUNCTION_59
0x400efc8	          0x83c201	                              add edx, 1	      3787	cp-demangle.c	FUNCTION_59
0x400efcb	        0x488904f1	            mov qword [rcx + rsi*8], rax	      3786	cp-demangle.c	FUNCTION_59
0x400efcf	          0x895338	             mov dword [rbx + 0x38], edx	      3787	cp-demangle.c	FUNCTION_59
0x400efd2	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3787	cp-demangle.c	FUNCTION_59
0x400efd6	          0x4989c7	                            mov r15, rax	      3787	cp-demangle.c	FUNCTION_59
0x400efd9	           0xfb62a	                   movzx ebp, byte [rdx]	      3787	cp-demangle.c	FUNCTION_59
0x400efdc	      0xe967fdffff	                           jmp 0x400ed48	      3787	cp-demangle.c	FUNCTION_59
0x400efe1	     0xf1f80000000	                         nop dword [rax]	      3787	cp-demangle.c	FUNCTION_59
0x400efe8	         0xfb64201	               movzx eax, byte [rdx + 1]	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400efec	          0x4889df	                            mov rdi, rbx	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400efef	          0x83e0df	                     and eax, 0xffffffdf	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400eff2	            0x3c54	                            cmp al, 0x54	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400eff4	            0x756a	                           jne 0x400f060	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400eff6	      0xe800000000	                          call 0x400effb	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400effb	          0x4d85ff	                           test r15, r15	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400effe	            0x749b	                            je 0x400ef9b	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400f000	          0x4885c0	                           test rax, rax	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f003	          0x4889c7	                            mov rdi, rax	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f006	    0x41b801000000	                              mov r8d, 1	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f00c	            0x7408	                            je 0x400f016	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f00e	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f011	          0x3b532c	            cmp edx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f014	            0x7c0a	                            jl 0x400f020	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f016	            0x31c0	                            xor eax, eax	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f018	      0xe978ffffff	                           jmp 0x400ef95	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f01d	           0xf1f00	                         nop dword [rax]	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f020	          0x4863ca	                         movsxd rcx, edx	       935	cp-demangle.c	FUNCTION_3
0x400f023	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x400f026	        0x488d3449	                  lea rsi, [rcx + rcx*2]	       935	cp-demangle.c	FUNCTION_3
0x400f02a	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400f02e	        0x488d04f1	                  lea rax, [rcx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x400f032	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400f039	          0x895328	             mov dword [rbx + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x400f03c	          0x448900	                    mov dword [rax], r8d	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x400f03f	        0x4c897808	                mov qword [rax + 8], r15	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x400f043	        0x48897810	             mov qword [rax + 0x10], rdi	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400f047	      0xe949ffffff	                           jmp 0x400ef95	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400f04c	         0xf1f4000	                         nop dword [rax]	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x400f050	          0x4989c7	                            mov r15, rax	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400f053	      0xe903fdffff	                           jmp 0x400ed5b	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400f058	     0xf1f84000000	                   nop dword [rax + rax]	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400f060	      0xe8cbddffff	             call sym.d_unqualified_name	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x400f065	            0xeb94	                           jmp 0x400effb	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x400f067	    0x660f1f840000	                    nop word [rax + rax]	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x400f070	          0x4d85ff	                           test r15, r15	      1566	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x400f073	     0xf8457fdffff	                            je 0x400edd0	      1566	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x400f079	        0x4883c201	                              add rdx, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400f07d	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400f080	        0x48895318	             mov qword [rbx + 0x18], rdx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400f084	      0xe827faffff	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400f089	          0x4885c0	                           test rax, rax	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f08c	          0x4889c7	                            mov rdi, rax	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400f08f	     0xf8432020000	                            je 0x400f2c7	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f095	    0x41b804000000	                              mov r8d, 4	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f09b	      0xe96effffff	                           jmp 0x400f00e	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f0a0	      0xbe01000000	                              mov esi, 1	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x400f0a5	          0x4889df	                            mov rdi, rbx	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x400f0a8	      0xe8a318ffff	                 call sym.d_substitution	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x400f0ad	          0x4d85ff	                           test r15, r15	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400f0b0	     0xf841cffffff	                            je 0x400efd2	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400f0b6	      0xe945ffffff	                           jmp 0x400f000	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400f0bb	       0xf1f440000	                   nop dword [rax + rax]	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400f0c0	            0x3c52	                            cmp al, 0x52	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400f0c2	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400f0c5	     0xf8492010000	                            je 0x400f25d	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400f0cb	          0x83c003	                              add eax, 3	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x400f0ce	      0xbe20000000	                           mov esi, 0x20	      2830	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x400f0d3	        0x4883c201	                              add rdx, 1	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x400f0d7	          0x894348	             mov dword [rbx + 0x48], eax	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x400f0da	            0x31c9	                            xor ecx, ecx	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f0dc	        0x48895318	             mov qword [rbx + 0x18], rdx	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x400f0e0	          0x4889df	                            mov rdi, rbx	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f0e3	            0x31d2	                            xor edx, edx	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f0e5	      0xe8560fffff	                    call sym.d_make_comp	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f0ea	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f0ee	          0x4989c6	                            mov r14, rax	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f0f1	           0xfb62a	                   movzx ebp, byte [rdx]	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f0f4	      0xe93bfcffff	                           jmp 0x400ed34	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f0f9	     0xf1f80000000	                         nop dword [rax]	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x400f100	          0x4889df	                            mov rdi, rbx	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x400f103	      0xe86814ffff	               call sym.d_template_param	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x400f108	      0xe9eefeffff	                           jmp 0x400effb	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x400f10d	          0x4863d6	                         movsxd rdx, esi	       935	cp-demangle.c	FUNCTION_3
0x400f110	          0x83c601	                              add esi, 1	       937	cp-demangle.c	FUNCTION_3
0x400f113	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400f117	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400f11b	          0x897328	             mov dword [rbx + 0x28], esi	       937	cp-demangle.c	FUNCTION_3
0x400f11e	        0x488d14ca	                  lea rdx, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400f122	    0xc74204000000	                  mov dword [rdx + 4], 0	       863	cp-demangle.c	
0x400f129	    0xc70200000000	                      mov dword [rdx], 0	       864	cp-demangle.c	
0x400f12f	    0x48c742080000	                  mov qword [rdx + 8], 0	       865	cp-demangle.c	
0x400f137	    0xc74210030000	               mov dword [rdx + 0x10], 3	       866	cp-demangle.c	
0x400f13e	      0xe968fdffff	                           jmp 0x400eeab	       866	cp-demangle.c	
0x400f143	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x400f147	          0x833829	                   cmp dword [rax], 0x29	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x400f14a	     0xf851afeffff	                           jne 0x400ef6a	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x400f150	    0x48c740080000	                  mov qword [rax + 8], 0	      3639	cp-demangle.c	FUNCTION_54	IF_11
0x400f158	      0xe90dfeffff	                           jmp 0x400ef6a	      3639	cp-demangle.c	FUNCTION_54	IF_11
0x400f15d	        0x488d4102	                      lea rax, [rcx + 2]	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x400f161	        0x48894318	             mov qword [rbx + 0x18], rax	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x400f165	         0xfbe7102	               movsx esi, byte [rcx + 2]	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400f169	        0x4080fe5f	                           cmp sil, 0x5f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400f16d	     0xf846d010000	                            je 0x400f2e0	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400f173	        0x4080fe6e	                           cmp sil, 0x6e	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400f177	     0xf8436fbffff	                            je 0x400ecb3	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400f17d	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f180	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f182	     0xf872bfbffff	                            ja 0x400ecb3	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f188	        0x4883c103	                              add rcx, 3	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f18c	          0x4531c0	                            xor r8d, r8d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f18f	    0x41baffffff7f	                    mov r10d, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f195	    0x41b967666666	                     mov r9d, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f19b	            0xeb25	                           jmp 0x400f1c2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f19d	           0xf1f00	                         nop dword [rax]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1a0	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1a3	          0x4489d7	                           mov edi, r10d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1a6	        0x4883c101	                              add rcx, 1	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1aa	            0x29c7	                            sub edi, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1ac	            0x89f8	                            mov eax, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1ae	          0xc1ff1f	                           sar edi, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1b1	          0x41f7e9	                                imul r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1b4	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1b7	            0x29fa	                            sub edx, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1b9	          0x4439c2	                            cmp edx, r8d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1bc	     0xf8cf1faffff	                            jl 0x400ecb3	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f1c2	        0x438d0480	                    lea eax, [r8 + r8*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400f1c6	        0x48894b18	             mov qword [rbx + 0x18], rcx	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400f1ca	          0x8d0446	                  lea eax, [rsi + rax*2]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400f1cd	           0xfbe31	                   movsx esi, byte [rcx]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400f1d0	        0x448d40d0	                   lea r8d, [rax - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400f1d4	          0x8d56d0	                   lea edx, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f1d7	          0x80fa09	                               cmp dl, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f1da	            0x76c4	                           jbe 0x400f1a0	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f1dc	        0x4080fe5f	                           cmp sil, 0x5f	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400f1e0	        0x448d68d1	                  lea r13d, [rax - 0x2f]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400f1e4	     0xf85c9faffff	                           jne 0x400ecb3	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400f1ea	        0x4883c101	                              add rcx, 1	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400f1ee	          0x4889df	                            mov rdi, rbx	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400f1f1	        0x48894b18	             mov qword [rbx + 0x18], rcx	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400f1f5	      0xe856faffff	                         call sym.d_name	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400f1fa	          0x4885c0	                           test rax, rax	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f1fd	          0x4989c6	                            mov r14, rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400f200	            0x740f	                            je 0x400f211	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f202	          0x418b06	                    mov eax, dword [r14]	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f205	          0x83e0fd	                     and eax, 0xfffffffd	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f208	          0x83f845	                           cmp eax, 0x45	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f20b	     0xf851a010000	                           jne 0x400f32b	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f211	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f214	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f217	            0x7c0f	                            jl 0x400f228	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f219	          0x4531e4	                          xor r12d, r12d	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x400f21c	      0xe93ffdffff	                           jmp 0x400ef60	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x400f221	     0xf1f80000000	                         nop dword [rax]	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x400f228	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x400f22b	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x400f22e	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400f232	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400f236	        0x4c8d24ca	                  lea r12, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400f23a	    0x41c744240400	                  mov dword [r12 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400f243	          0x894328	             mov dword [rbx + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x400f246	    0x41c704244600	                   mov dword [r12], 0x46	      1128	cp-demangle.c	FUNCTION_10	IF_1
0x400f24e	      0x45896c2410	            mov dword [r12 + 0x10], r13d	      1129	cp-demangle.c	FUNCTION_10	IF_1
0x400f253	      0x4d89742408	                mov qword [r12 + 8], r14	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x400f258	      0xe903fdffff	                           jmp 0x400ef60	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x400f25d	          0x83c002	                              add eax, 2	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400f260	      0xbe1f000000	                           mov esi, 0x1f	      2825	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400f265	      0xe969feffff	                           jmp 0x400f0d3	      2825	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x400f26a	        0x4883c102	                              add rcx, 2	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x400f26e	          0x4889df	                            mov rdi, rbx	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x400f271	        0x48894b18	             mov qword [rbx + 0x18], rcx	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x400f275	      0xe8d613ffff	                call sym.d_discriminator	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x400f27a	            0x85c0	                           test eax, eax	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x400f27c	     0xf8431faffff	                            je 0x400ecb3	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x400f282	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f285	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f288	            0x7d8f	                           jge 0x400f219	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f28a	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x400f28d	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x400f290	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400f294	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400f298	          0x894328	             mov dword [rbx + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x400f29b	        0x4c8d24ca	                  lea r12, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400f29f	    0x41c744240400	                  mov dword [r12 + 4], 0	       863	cp-demangle.c	
0x400f2a8	    0x41c704240000	                      mov dword [r12], 0	       864	cp-demangle.c	
0x400f2b0	    0x49c744240800	                  mov qword [r12 + 8], 0	       865	cp-demangle.c	
0x400f2b9	    0x41c74424100e	            mov dword [r12 + 0x10], 0xe 	       866	cp-demangle.c	
0x400f2c2	      0xe999fcffff	                           jmp 0x400ef60	       866	cp-demangle.c	
0x400f2c7	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400f2cb	           0xfb62a	                   movzx ebp, byte [rdx]	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400f2ce	        0x4080fd45	                           cmp bpl, 0x45	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400f2d2	     0xf85f8faffff	                           jne 0x400edd0	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400f2d8	          0x4531ff	                          xor r15d, r15d	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f2db	      0xe97bfaffff	                           jmp 0x400ed5b	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400f2e0	        0x4883c103	                              add rcx, 3	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400f2e4	          0x4889df	                            mov rdi, rbx	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400f2e7	          0x4531ed	                          xor r13d, r13d	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400f2ea	        0x48894b18	             mov qword [rbx + 0x18], rcx	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400f2ee	      0xe85df9ffff	                         call sym.d_name	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400f2f3	          0x4885c0	                           test rax, rax	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f2f6	          0x4989c6	                            mov r14, rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400f2f9	     0xf8503ffffff	                           jne 0x400f202	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f2ff	      0xe90dffffff	                           jmp 0x400f211	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400f304	        0x4883c701	                              add rdi, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400f308	      0x4889542408	                mov qword [rsp + 8], rdx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400f30d	        0x48897b18	             mov qword [rbx + 0x18], rdi	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400f311	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400f314	      0xe897f7ffff	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400f319	      0x488b542408	                mov rdx, qword [rsp + 8]	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400f31e	          0x4889c1	                            mov rcx, rax	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400f321	      0xe90efbffff	                           jmp 0x400ee34	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x400f326	      0xe800000000	                          call 0x400f32b	      1474	cp-demangle.c	FUNCTION_20
0x400f32b	          0x4889df	                            mov rdi, rbx	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400f32e	      0xe81d13ffff	                call sym.d_discriminator	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400f333	            0x85c0	                           test eax, eax	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400f335	     0xf85d6feffff	                           jne 0x400f211	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x400f33b	            0x31c0	                            xor eax, eax	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x400f33d	      0xe986f9ffff	                           jmp 0x400ecc8	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x400f342	          0x4d85ff	                           test r15, r15	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x400f345	        0x4d897d00	                    mov qword [r13], r15	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x400f349	     0xf8464f9ffff	                            je 0x400ecb3	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x400f34f	          0x4d85f6	                           test r14, r14	      1502	cp-demangle.c	FUNCTION_21	IF_4
0x400f352	            0x740e	                            je 0x400f362	      1502	cp-demangle.c	FUNCTION_21	IF_4
0x400f354	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x400f359	      0x4c89742410	             mov qword [rsp + 0x10], r14	      1505	cp-demangle.c	FUNCTION_21	IF_4
0x400f35e	        0x49894608	                mov qword [r14 + 8], rax	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x400f362	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x400f366	          0x803845	                    cmp byte [rax], 0x45	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x400f369	     0xf8544f9ffff	                           jne 0x400ecb3	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x400f36f	        0x4883c001	                              add rax, 1	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x400f373	        0x48894318	             mov qword [rbx + 0x18], rax	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x400f377	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1511	cp-demangle.c	FUNCTION_21
0x400f37c	      0xe947f9ffff	                           jmp 0x400ecc8	      1408	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_2
is_gnu_v3_mangled_dtor	CALL,1:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	17
0x4011260	        0x4883ec18	                           sub rsp, 0x18	      6587	cp-demangle.c	FUNCTION_106
0x4011264	      0x488d542404	                      lea rdx, [rsp + 4]	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x4011269	          0x4889e6	                            mov rsi, rsp	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x401126c	    0x64488b042528	                mov rax, qword fs:[0x28]	      6587	cp-demangle.c	FUNCTION_106
0x4011275	      0x4889442408	                mov qword [rsp + 8], rax	      6587	cp-demangle.c	FUNCTION_106
0x401127a	            0x31c0	                            xor eax, eax	      6587	cp-demangle.c	FUNCTION_106
0x401127c	      0xe8afeeffff	                call sym.is_ctor_or_dtor	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x4011281	            0x31d2	                            xor edx, edx	      6592	cp-demangle.c	FUNCTION_106	IF_1
0x4011283	            0x85c0	                           test eax, eax	      6593	cp-demangle.c	FUNCTION_106
0x4011285	       0xf45542404	             cmovne edx, dword [rsp + 4]	      6593	cp-demangle.c	FUNCTION_106
0x401128a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6594	cp-demangle.c	FUNCTION_106
0x401128f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6594	cp-demangle.c	FUNCTION_106
0x4011298	            0x7507	                           jne 0x40112a1	      6594	cp-demangle.c	FUNCTION_106
0x401129a	            0x89d0	                            mov eax, edx	      6594	cp-demangle.c	FUNCTION_106
0x401129c	        0x4883c418	                           add rsp, 0x18	      6594	cp-demangle.c	FUNCTION_106
0x40112a0	              0xc3	                                     ret	      6594	cp-demangle.c	FUNCTION_106
0x40112a1	      0xe800000000	         call section_end..text.unlikely	      6594	cp-demangle.c	FUNCTION_106
d_count_templates_scopes	CALL,8:IF,2:SWITCH,1:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	40
0x40000b0	          0x4885d2	                           test rdx, rdx	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x40000b3	            0x747d	                            je 0x4000132	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x40000b5	            0x4154	                                push r12	      4037	cp-demangle.c	FUNCTION_67
0x40000b7	          0x4989f4	                            mov r12, rsi	      4037	cp-demangle.c	FUNCTION_67
0x40000ba	              0x55	                                push rbp	      4037	cp-demangle.c	FUNCTION_67
0x40000bb	          0x4889fd	                            mov rbp, rdi	      4037	cp-demangle.c	FUNCTION_67
0x40000be	              0x53	                                push rbx	      4037	cp-demangle.c	FUNCTION_67
0x40000bf	          0x4889d3	                            mov rbx, rdx	      4037	cp-demangle.c	FUNCTION_67
0x40000c2	    0x660f1f440000	                    nop word [rax + rax]	      4037	cp-demangle.c	FUNCTION_67
0x40000c8	          0x833b4f	                   cmp dword [rbx], 0x4f	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40000cb	            0x771c	                            ja 0x40000e9	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40000cd	            0x8b03	                    mov eax, dword [rbx]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40000cf	    0xff24c5000000	                       jmp qword [rax*8]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40000d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40000e0	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4143	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40000e4	          0x4885db	                           test rbx, rbx	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x40000e7	            0x75df	                           jne 0x40000c8	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x40000e9	              0x5b	                                 pop rbx	      4163	cp-demangle.c	FUNCTION_67
0x40000ea	              0x5d	                                 pop rbp	      4163	cp-demangle.c	FUNCTION_67
0x40000eb	            0x415c	                                 pop r12	      4163	cp-demangle.c	FUNCTION_67
0x40000ed	              0xc3	                                     ret	      4163	cp-demangle.c	FUNCTION_67
0x40000ee	            0x6690	                                     nop	      4163	cp-demangle.c	FUNCTION_67
0x40000f0	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4160	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40000f4	            0xebee	                           jmp 0x40000e4	      4161	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40000f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4161	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000100	        0x488b5308	                mov rdx, qword [rbx + 8]	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000104	          0x833a05	                      cmp dword [rdx], 5	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000107	            0x7509	                           jne 0x4000112	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000109	      0x4183042401	                      add dword [r12], 1	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x400010e	        0x488b5308	                mov rdx, qword [rbx + 8]	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000112	          0x4c89e6	                            mov rsi, r12	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4000115	          0x4889ef	                            mov rdi, rbp	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4000118	      0xe893ffffff	       call sym.d_count_templates_scopes	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x400011d	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4128	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000121	            0xebc1	                           jmp 0x40000e4	      4129	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000123	       0xf1f440000	                   nop dword [rax + rax]	      4129	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000128	        0x83450001	                      add dword [rbp], 1	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400012c	        0x488b5308	                mov rdx, qword [rbx + 8]	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000130	            0xebe0	                           jmp 0x4000112	      4056	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000132	            0xf3c3	                                     ret	      4056	cp-demangle.c	FUNCTION_67	SWITCH_1
java_demangle_v3	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	171
0x4010c30	              0x55	                                push rbp	      6474	cp-demangle.c	FUNCTION_102
0x4010c31	          0x4889e5	                            mov rbp, rsp	      6474	cp-demangle.c	FUNCTION_102
0x4010c34	            0x4157	                                push r15	      6474	cp-demangle.c	FUNCTION_102
0x4010c36	            0x4156	                                push r14	      6474	cp-demangle.c	FUNCTION_102
0x4010c38	            0x4155	                                push r13	      6474	cp-demangle.c	FUNCTION_102
0x4010c3a	            0x4154	                                push r12	      6474	cp-demangle.c	FUNCTION_102
0x4010c3c	              0x53	                                push rbx	      6474	cp-demangle.c	FUNCTION_102
0x4010c3d	          0x4889fb	                            mov rbx, rdi	      6474	cp-demangle.c	FUNCTION_102
0x4010c40	    0x4881ec980000	                           sub rsp, 0x98	      6474	cp-demangle.c	FUNCTION_102
0x4010c47	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      3956	cp-demangle.c	FUNCTION_63
0x4010c52	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      3957	cp-demangle.c	FUNCTION_63
0x4010c5d	    0x64488b042528	                mov rax, qword fs:[0x28]	      6474	cp-demangle.c	FUNCTION_102
0x4010c66	        0x488945c8	             mov qword [rbp - 0x38], rax	      6474	cp-demangle.c	FUNCTION_102
0x4010c6a	            0x31c0	                            xor eax, eax	      6474	cp-demangle.c	FUNCTION_102
0x4010c6c	          0x803f5f	                    cmp byte [rdi], 0x5f	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010c6f	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      3958	cp-demangle.c	FUNCTION_63
0x4010c7a	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	      3959	cp-demangle.c	FUNCTION_63
0x4010c84	     0xf847e000000	                            je 0x4010d08	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010c8a	      0xbf00000000	                              mov edi, 0	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010c8f	      0xb908000000	                              mov ecx, 8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010c94	          0x4889de	                            mov rsi, rbx	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010c97	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010c99	            0x7535	                           jne 0x4010cd0	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4010c9b	         0xfb64308	               movzx eax, byte [rbx + 8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010c9f	          0x83e824	                           sub eax, 0x24	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010ca2	            0x3c3b	                            cmp al, 0x3b	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010ca4	            0x772a	                            ja 0x4010cd0	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010ca6	    0x48ba01040000	          movabs rdx, 0x800000000000401 	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cb0	        0x480fa3c2	                             bt rdx, rax	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cb4	            0x731a	                           jae 0x4010cd0	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cb6	         0xfb64309	               movzx eax, byte [rbx + 9]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cba	            0x3c44	                            cmp al, 0x44	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cbc	     0xf8456010000	                            je 0x4010e18	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cc2	            0x3c49	                            cmp al, 0x49	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cc4	     0xf844e010000	                            je 0x4010e18	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cca	    0x660f1f440000	                    nop word [rax + rax]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cd0	            0x31ff	                            xor edi, edi	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010cd2	      0xe800000000	                          call 0x4010cd7	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x4010cd7	            0x31c0	                            xor eax, eax	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x4010cd9	     0xf1f80000000	                         nop dword [rax]	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x4010ce0	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      6478	cp-demangle.c	FUNCTION_102
0x4010ce4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6478	cp-demangle.c	FUNCTION_102
0x4010ced	     0xf8539020000	                           jne 0x4010f2c	      6478	cp-demangle.c	FUNCTION_102
0x4010cf3	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6478	cp-demangle.c	FUNCTION_102
0x4010cf7	              0x5b	                                 pop rbx	      6478	cp-demangle.c	FUNCTION_102
0x4010cf8	            0x415c	                                 pop r12	      6478	cp-demangle.c	FUNCTION_102
0x4010cfa	            0x415d	                                 pop r13	      6478	cp-demangle.c	FUNCTION_102
0x4010cfc	            0x415e	                                 pop r14	      6478	cp-demangle.c	FUNCTION_102
0x4010cfe	            0x415f	                                 pop r15	      6478	cp-demangle.c	FUNCTION_102
0x4010d00	              0x5d	                                 pop rbp	      6478	cp-demangle.c	FUNCTION_102
0x4010d01	              0xc3	                                     ret	      6478	cp-demangle.c	FUNCTION_102
0x4010d02	    0x660f1f440000	                    nop word [rax + rax]	      6478	cp-demangle.c	FUNCTION_102
0x4010d08	        0x807f015a	                cmp byte [rdi + 1], 0x5a	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010d0c	     0xf8578ffffff	                           jne 0x4010c8a	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4010d12	    0x41bd01000000	                             mov r13d, 1	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x4010d18	          0x4889df	                            mov rdi, rbx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4010d1b	          0x4989e4	                            mov r12, rsp	      6230	cp-demangle.c	FUNCTION_96
0x4010d1e	      0xe800000000	                          call 0x4010d23	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4010d23	        0x488d1403	                    lea rdx, [rbx + rax]	      6170	cp-demangle.c	
0x4010d27	        0x448d3c00	                   lea r15d, [rax + rax]	      6178	cp-demangle.c	
0x4010d2b	          0x8945ac	             mov dword [rbp - 0x54], eax	      6183	cp-demangle.c	
0x4010d2e	            0x4898	                                    cdqe	      6233	cp-demangle.c	FUNCTION_96
0x4010d30	    0x48899d70ffff	             mov qword [rbp - 0x90], rbx	      6169	cp-demangle.c	
0x4010d37	    0xc74580250000	           mov dword [rbp - 0x80], 0x25 	      6171	cp-demangle.c	
0x4010d3e	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      6170	cp-demangle.c	
0x4010d45	          0x4963d7	                        movsxd rdx, r15d	      6232	cp-demangle.c	FUNCTION_96
0x4010d48	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6233	cp-demangle.c	FUNCTION_96
0x4010d50	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      6232	cp-demangle.c	FUNCTION_96
0x4010d54	        0x48895d88	             mov qword [rbp - 0x78], rbx	      6173	cp-demangle.c	
0x4010d58	        0x44897d9c	            mov dword [rbp - 0x64], r15d	      6178	cp-demangle.c	
0x4010d5c	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      6233	cp-demangle.c	FUNCTION_96
0x4010d60	    0xc74598000000	               mov dword [rbp - 0x68], 0	      6179	cp-demangle.c	
0x4010d67	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      6184	cp-demangle.c	
0x4010d6e	    0x488d14d51000	                 lea rdx, [rdx*8 + 0x10]	      6232	cp-demangle.c	FUNCTION_96
0x4010d76	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      6186	cp-demangle.c	
0x4010d7e	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      6188	cp-demangle.c	
0x4010d85	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6189	cp-demangle.c	
0x4010d8c	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6190	cp-demangle.c	
0x4010d93	          0x4829d4	                            sub rsp, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4010d96	      0x4c8d742407	                      lea r14, [rsp + 7]	      6232	cp-demangle.c	FUNCTION_96
0x4010d9b	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x4010d9e	        0x418d45fe	                      lea eax, [r13 - 2]	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010da2	        0x488965a0	             mov qword [rbp - 0x60], rsp	      6236	cp-demangle.c	FUNCTION_96
0x4010da6	        0x49c1ee03	                              shr r14, 3	      6232	cp-demangle.c	FUNCTION_96
0x4010daa	          0x83f801	                              cmp eax, 1	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010dad	    0x4a8d14f50000	                        lea rdx, [r14*8]	      6232	cp-demangle.c	FUNCTION_96
0x4010db5	        0x48895590	             mov qword [rbp - 0x70], rdx	      6235	cp-demangle.c	FUNCTION_96
0x4010db9	            0x767d	                           jbe 0x4010e38	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010dbb	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010dc2	      0xbe01000000	                              mov esi, 1	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010dc7	      0xe800000000	                          call 0x4010dcc	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010dcc	          0x4889c6	                            mov rsi, rax	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010dcf	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4010dd3	          0x803800	                       cmp byte [rax], 0	      6278	cp-demangle.c	FUNCTION_96
0x4010dd6	     0xf8524010000	                           jne 0x4010f00	      6278	cp-demangle.c	FUNCTION_96
0x4010ddc	          0x4885f6	                           test rsi, rsi	      6278	cp-demangle.c	FUNCTION_96
0x4010ddf	     0xf841b010000	                            je 0x4010f00	      6278	cp-demangle.c	FUNCTION_96
0x4010de5	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	      6278	cp-demangle.c	FUNCTION_96
0x4010dec	      0xba00000000	                              mov edx, 0	      6278	cp-demangle.c	FUNCTION_96
0x4010df1	      0xbf25000000	                           mov edi, 0x25	      6278	cp-demangle.c	FUNCTION_96
0x4010df6	      0xe800000000	                          call 0x4010dfb	      6278	cp-demangle.c	FUNCTION_96
0x4010dfb	            0x85c0	                           test eax, eax	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x4010dfd	          0x4c89e4	                            mov rsp, r12	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x4010e00	     0xf842b010000	                            je 0x4010f31	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x4010e06	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      6309	cp-demangle.c	FUNCTION_97
0x4010e0d	      0xe9cefeffff	                           jmp 0x4010ce0	      6309	cp-demangle.c	FUNCTION_97
0x4010e12	    0x660f1f440000	                    nop word [rax + rax]	      6309	cp-demangle.c	FUNCTION_97
0x4010e18	        0x807b0a5f	              cmp byte [rbx + 0xa], 0x5f	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010e1c	     0xf85aefeffff	                           jne 0x4010cd0	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010e22	          0x4531ed	                          xor r13d, r13d	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010e25	            0x3c49	                            cmp al, 0x49	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010e27	        0x410f95c5	                              setne r13b	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010e2b	        0x4183c502	                             add r13d, 2	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010e2f	      0xe9e4feffff	                           jmp 0x4010d18	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010e34	         0xf1f4000	                         nop dword [rax]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4010e38	        0x807b0b5f	              cmp byte [rbx + 0xb], 0x5f	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010e3c	        0x488d4b0b	                    lea rcx, [rbx + 0xb]	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4010e40	        0x48894d88	             mov qword [rbp - 0x78], rcx	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4010e44	            0x750a	                           jne 0x4010e50	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010e46	        0x807b0c5a	              cmp byte [rbx + 0xc], 0x5a	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010e4a	     0xf84c0000000	                            je 0x4010f10	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4010e50	          0x4889cf	                            mov rdi, rcx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010e53	    0x48899540ffff	             mov qword [rbp - 0xc0], rdx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010e5a	    0x48898d48ffff	             mov qword [rbp - 0xb8], rcx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010e61	      0xe800000000	                          call 0x4010e66	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4010e66	          0x4585ff	                         test r15d, r15d	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010e69	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010e70	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010e77	            0x7e3f	                           jle 0x4010eb8	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4010e79	            0x85c0	                           test eax, eax	       861	cp-demangle.c	IF_1
0x4010e7b	    0x42c704f50400	                mov dword [r14*8 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4010e87	    0xc74598010000	               mov dword [rbp - 0x68], 1	       937	cp-demangle.c	FUNCTION_3
0x4010e8e	            0x7428	                            je 0x4010eb8	       861	cp-demangle.c	IF_1
0x4010e90	    0x42c704f50000	                    mov dword [r14*8], 0	       864	cp-demangle.c	
0x4010e9c	    0x4a890cf50800	              mov qword [r14*8 + 8], rcx	       865	cp-demangle.c	
0x4010ea4	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	       865	cp-demangle.c	
0x4010eab	    0x428904f51000	           mov dword [r14*8 + 0x10], eax	       866	cp-demangle.c	
0x4010eb3	            0xeb0c	                           jmp 0x4010ec1	       866	cp-demangle.c	
0x4010eb5	           0xf1f00	                         nop dword [rax]	       866	cp-demangle.c	
0x4010eb8	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	       866	cp-demangle.c	
0x4010ebf	            0x31d2	                            xor edx, edx	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x4010ec1	            0x31f6	                            xor esi, esi	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ec3	        0x4183fd02	                             cmp r13d, 2	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ec7	          0x4889df	                            mov rdi, rbx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010eca	        0x400f95c6	                               setne sil	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ece	            0x31c9	                            xor ecx, ecx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ed0	          0x83c643	                           add esi, 0x43	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ed3	      0xe868f1feff	                    call sym.d_make_comp	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ed8	        0x488b5d88	             mov rbx, qword [rbp - 0x78]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010edc	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4010ee3	          0x4889df	                            mov rdi, rbx	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010ee6	      0xe800000000	                          call 0x4010eeb	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010eeb	          0x4801d8	                            add rax, rbx	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010eee	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010ef5	        0x48894588	             mov qword [rbp - 0x78], rax	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010ef9	      0xe9d5feffff	                           jmp 0x4010dd3	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010efe	            0x6690	                                     nop	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010f00	          0x4c89e4	                            mov rsp, r12	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010f03	    0x488bbd50ffff	             mov rdi, qword [rbp - 0xb0]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010f0a	      0xe9c3fdffff	                           jmp 0x4010cd2	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010f0f	              0x90	                                     nop	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4010f10	        0x4883c30d	                            add rbx, 0xd	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x4010f14	        0x48895d88	             mov qword [rbp - 0x78], rbx	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x4010f18	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010f1f	          0x4889df	                            mov rdi, rbx	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010f22	      0xe869e4ffff	        call sym.d_encoding.constprop.23	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010f27	          0x4889c2	                            mov rdx, rax	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010f2a	            0xeb95	                           jmp 0x4010ec1	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4010f2c	      0xe800000000	                          call 0x4010f31	      6478	cp-demangle.c	FUNCTION_102
0x4010f31	    0x488bbd50ffff	             mov rdi, qword [rbp - 0xb0]	      6478	cp-demangle.c	FUNCTION_102
0x4010f38	      0xe995fdffff	                           jmp 0x4010cd2	      6478	cp-demangle.c	FUNCTION_102
d_unqualified_name	CALL,17:IF,11:SWITCH,1:ELSE,5:WHILE,0:FOR,0:DO,0:functions,0	540
0x400ce30	            0x4157	                                push r15	      1611	cp-demangle.c	FUNCTION_23
0x400ce32	            0x4156	                                push r14	      1611	cp-demangle.c	FUNCTION_23
0x400ce34	          0x4989fe	                            mov r14, rdi	      1611	cp-demangle.c	FUNCTION_23
0x400ce37	            0x4155	                                push r13	      1611	cp-demangle.c	FUNCTION_23
0x400ce39	            0x4154	                                push r12	      1611	cp-demangle.c	FUNCTION_23
0x400ce3b	              0x55	                                push rbp	      1611	cp-demangle.c	FUNCTION_23
0x400ce3c	              0x53	                                push rbx	      1611	cp-demangle.c	FUNCTION_23
0x400ce3d	        0x4883ec08	                              sub rsp, 8	      1611	cp-demangle.c	FUNCTION_23
0x400ce41	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x400ce45	           0xfb601	                   movzx eax, byte [rcx]	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x400ce48	          0x8d50d0	                   lea edx, [rax - 0x30]	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x400ce4b	          0x80fa09	                               cmp dl, 9	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x400ce4e	     0xf869c010000	                           jbe 0x400cff0	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x400ce54	          0x8d509f	                   lea edx, [rax - 0x61]	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x400ce57	          0x80fa19	                            cmp dl, 0x19	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x400ce5a	            0x7744	                            ja 0x400cea0	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x400ce5c	            0x3c6f	                            cmp al, 0x6f	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x400ce5e	     0xf84cf040000	                            je 0x400d333	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x400ce64	          0x4c89f7	                            mov rdi, r14	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x400ce67	      0xe8f4fcffff	                call sym.d_operator_name	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x400ce6c	          0x4885c0	                           test rax, rax	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400ce6f	          0x4989c7	                            mov r15, rax	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x400ce72	            0x7409	                            je 0x400ce7d	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400ce74	          0x833831	                   cmp dword [rax], 0x31	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400ce77	     0xf84cd040000	                            je 0x400d34a	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400ce7d	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400ce81	           0xfb616	                   movzx edx, byte [rsi]	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400ce84	          0x80fa42	                            cmp dl, 0x42	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400ce87	          0x4c89f8	                            mov rax, r15	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400ce8a	     0xf847b010000	                            je 0x400d00b	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400ce90	        0x4883c408	                              add rsp, 8	      1663	cp-demangle.c	FUNCTION_23
0x400ce94	              0x5b	                                 pop rbx	      1663	cp-demangle.c	FUNCTION_23
0x400ce95	              0x5d	                                 pop rbp	      1663	cp-demangle.c	FUNCTION_23
0x400ce96	            0x415c	                                 pop r12	      1663	cp-demangle.c	FUNCTION_23
0x400ce98	            0x415d	                                 pop r13	      1663	cp-demangle.c	FUNCTION_23
0x400ce9a	            0x415e	                                 pop r14	      1663	cp-demangle.c	FUNCTION_23
0x400ce9c	            0x415f	                                 pop r15	      1663	cp-demangle.c	FUNCTION_23
0x400ce9e	              0xc3	                                     ret	      1663	cp-demangle.c	FUNCTION_23
0x400ce9f	              0x90	                                     nop	      1663	cp-demangle.c	FUNCTION_23
0x400cea0	          0x8d50bd	                   lea edx, [rax - 0x43]	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x400cea3	          0x80fa01	                               cmp dl, 1	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x400cea6	     0xf86fd040000	                           jbe 0x400d3a9	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x400ceac	            0x3c4c	                            cmp al, 0x4c	      1633	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7
0x400ceae	     0xf8449040000	                            je 0x400d2fd	      1633	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7
0x400ceb4	            0x3c55	                            cmp al, 0x55	      1643	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10
0x400ceb6	     0xf8566040000	                           jne 0x400d322	      1643	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10
0x400cebc	         0xfb64101	               movzx eax, byte [rcx + 1]	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400cec0	            0x3c6c	                            cmp al, 0x6c	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400cec2	     0xf84b8020000	                            je 0x400d180	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400cec8	            0x3c74	                            cmp al, 0x74	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400ceca	     0xf8552040000	                           jne 0x400d322	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400ced0	        0x488d7101	                      lea rsi, [rcx + 1]	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400ced4	          0x4531ff	                          xor r15d, r15d	      3731	cp-demangle.c	FUNCTION_57	IF_2
0x400ced7	        0x48897718	             mov qword [rdi + 0x18], rsi	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x400cedb	         0xfb65101	               movzx edx, byte [rcx + 1]	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x400cedf	          0x80fa74	                            cmp dl, 0x74	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x400cee2	            0x75a0	                           jne 0x400ce84	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x400cee4	        0x488d7102	                      lea rsi, [rcx + 2]	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x400cee8	        0x48897718	             mov qword [rdi + 0x18], rsi	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x400ceec	         0xfb65102	               movzx edx, byte [rcx + 2]	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400cef0	          0x80fa5f	                            cmp dl, 0x5f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400cef3	     0xf84a6040000	                            je 0x400d39f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400cef9	          0x80fa6e	                            cmp dl, 0x6e	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400cefc	     0xf8420040000	                            je 0x400d322	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400cf02	          0x8d42d0	                   lea eax, [rdx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400cf05	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400cf07	     0xf8771050000	                            ja 0x400d47e	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400cf0d	        0x440fbeca	                           movsx r9d, dl	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf11	          0x4531c0	                            xor r8d, r8d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf14	    0x41bbffffff7f	                    mov r11d, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf1a	    0x41ba67666666	                    mov r10d, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf20	            0xeb29	                           jmp 0x400cf4b	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf22	    0x660f1f440000	                    nop word [rax + rax]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf28	        0x440fbec9	                           movsx r9d, cl	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf2c	          0x4489df	                           mov edi, r11d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf2f	        0x418d41d0	                    lea eax, [r9 - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf33	            0x29c7	                            sub edi, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf35	            0x89f8	                            mov eax, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf37	          0xc1ff1f	                           sar edi, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf3a	          0x41f7ea	                               imul r10d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf3d	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf40	            0x29fa	                            sub edx, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf42	          0x4439c2	                            cmp edx, r8d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf45	     0xf8c31050000	                            jl 0x400d47c	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400cf4b	        0x4883c601	                              add rsi, 1	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400cf4f	        0x438d0480	                    lea eax, [r8 + r8*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400cf53	        0x49897618	             mov qword [r14 + 0x18], rsi	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400cf57	           0xfb60e	                   movzx ecx, byte [rsi]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400cf5a	        0x418d0441	                   lea eax, [r9 + rax*2]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400cf5e	        0x448d40d0	                   lea r8d, [rax - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400cf62	          0x8d51d0	                   lea edx, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400cf65	          0x80fa09	                               cmp dl, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400cf68	            0x76be	                           jbe 0x400cf28	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400cf6a	          0x83e82f	                           sub eax, 0x2f	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400cf6d	          0x80f95f	                            cmp cl, 0x5f	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400cf70	     0xf8506050000	                           jne 0x400d47c	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400cf76	          0x4889f7	                            mov rdi, rsi	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400cf79	        0x4883c601	                              add rsi, 1	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400cf7d	        0x418b5628	            mov edx, dword [r14 + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cf81	        0x413b562c	            cmp edx, dword [r14 + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cf85	        0x49897618	             mov qword [r14 + 0x18], rsi	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400cf89	     0xf8de1040000	                           jge 0x400d470	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400cf8f	          0x4863ca	                         movsxd rcx, edx	       935	cp-demangle.c	FUNCTION_3
0x400cf92	            0x4898	                                    cdqe	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x400cf94	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x400cf97	        0x4c8d0449	                   lea r8, [rcx + rcx*2]	       935	cp-demangle.c	FUNCTION_3
0x400cf9b	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400cf9f	        0x4e8d3cc1	                   lea r15, [rcx + r8*8]	       935	cp-demangle.c	FUNCTION_3
0x400cfa3	    0x41c747040000	                  mov dword [r15 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400cfab	        0x41895628	             mov dword [r14 + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x400cfaf	        0x49894708	                mov qword [r15 + 8], rax	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x400cfb3	        0x418b4638	            mov eax, dword [r14 + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400cfb7	        0x413b463c	            cmp eax, dword [r14 + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400cfbb	    0x41c707470000	                   mov dword [r15], 0x47	      3740	cp-demangle.c	FUNCTION_57	IF_4
0x400cfc2	     0xf8da8040000	                           jge 0x400d470	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400cfc8	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x400cfcc	          0x4863c8	                         movsxd rcx, eax	      3786	cp-demangle.c	FUNCTION_59
0x400cfcf	          0x83c001	                              add eax, 1	      3787	cp-demangle.c	FUNCTION_59
0x400cfd2	        0x4c893cca	            mov qword [rdx + rcx*8], r15	      3786	cp-demangle.c	FUNCTION_59
0x400cfd6	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      3786	cp-demangle.c	FUNCTION_59
0x400cfda	        0x41894638	             mov dword [r14 + 0x38], eax	      3787	cp-demangle.c	FUNCTION_59
0x400cfde	           0xfb616	                   movzx edx, byte [rsi]	      3787	cp-demangle.c	FUNCTION_59
0x400cfe1	      0xe99efeffff	                           jmp 0x400ce84	      3787	cp-demangle.c	FUNCTION_59
0x400cfe6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3787	cp-demangle.c	FUNCTION_59
0x400cff0	      0xe86b37ffff	                  call sym.d_source_name	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x400cff5	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x400cff9	          0x4989c7	                            mov r15, rax	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x400cffc	          0x4c89f8	                            mov rax, r15	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x400cfff	           0xfb616	                   movzx edx, byte [rsi]	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x400d002	          0x80fa42	                            cmp dl, 0x42	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400d005	     0xf8585feffff	                           jne 0x400ce90	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400d00b	        0x498b6e40	            mov rbp, qword [r14 + 0x40] 	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x400d00f	    0x48bb01040000	          movabs rbx, 0x800000000000401 	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d019	     0xf1f80000000	                         nop dword [rax]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d020	        0x4c8d6601	                      lea r12, [rsi + 1]	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x400d024	          0x4531c0	                            xor r8d, r8d	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400d027	        0x4d896618	             mov qword [r14 + 0x18], r12	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x400d02b	         0xfbe4e01	               movsx ecx, byte [rsi + 1]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x400d02f	          0x80f96e	                            cmp cl, 0x6e	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400d032	     0xf8498020000	                            je 0x400d2d0	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400d038	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d03b	          0x4531ed	                          xor r13d, r13d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d03e	      0xbfffffff7f	                     mov edi, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d043	      0xbe67666666	                     mov esi, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d048	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d04a	            0x762d	                           jbe 0x400d079	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d04c	      0xe96f020000	                           jmp 0x400d2c0	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d051	     0xf1f80000000	                         nop dword [rax]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d058	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d05b	          0x4189f9	                            mov r9d, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d05e	          0x4129c1	                            sub r9d, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d061	          0x4489c8	                            mov eax, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d064	        0x41c1f91f	                           sar r9d, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d068	            0xf7ee	                                imul esi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d06a	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d06d	          0x4429ca	                            sub edx, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d070	          0x4439ea	                           cmp edx, r13d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d073	     0xf8c47020000	                            jl 0x400d2c0	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d079	      0x438d44ad00	                  lea eax, [r13 + r13*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400d07e	        0x4983c401	                              add r12, 1	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400d082	        0x4d896618	             mov qword [r14 + 0x18], r12	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400d086	      0x448d6c41d0	          lea r13d, [rcx + rax*2 - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400d08b	      0x410fbe0c24	                   movsx ecx, byte [r12]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400d090	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d093	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d095	            0x76c1	                           jbe 0x400d058	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d097	          0x4585ed	                         test r13d, r13d	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x400d09a	     0xf8e20020000	                           jle 0x400d2c0	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x400d0a0	          0x4584c0	                           test r8b, r8b	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x400d0a3	     0xf8517020000	                           jne 0x400d2c0	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x400d0a9	        0x498b5608	                mov rdx, qword [r14 + 8]	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400d0ad	          0x4963c5	                        movsxd rax, r13d	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400d0b0	          0x4c29e2	                            sub rdx, r12	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400d0b3	          0x4839c2	                            cmp rdx, rax	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400d0b6	     0xf8cfc010000	                            jl 0x400d2b8	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400d0bc	          0x4c01e0	                            add rax, r12	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x400d0bf	      0x41f6461004	               test byte [r14 + 0x10], 4	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x400d0c4	        0x49894618	             mov qword [r14 + 0x18], rax	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x400d0c8	            0x7409	                            je 0x400d0d3	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x400d0ca	          0x803824	                    cmp byte [rax], 0x24	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x400d0cd	     0xf841d020000	                            je 0x400d2f0	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x400d0d3	        0x4183fd09	                             cmp r13d, 9	      1754	cp-demangle.c	FUNCTION_27	IF_3
0x400d0d7	            0x7e37	                           jle 0x400d110	      1754	cp-demangle.c	FUNCTION_27	IF_3
0x400d0d9	      0xba08000000	                              mov edx, 8	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x400d0de	      0xbe00000000	                              mov esi, 0	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x400d0e3	          0x4c89e7	                            mov rdi, r12	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x400d0e6	      0xe800000000	                          call 0x400d0eb	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x400d0eb	            0x85c0	                           test eax, eax	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x400d0ed	            0x7521	                           jne 0x400d110	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x400d0ef	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d0f5	          0x83e824	                           sub eax, 0x24	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d0f8	            0x3c3b	                            cmp al, 0x3b	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d0fa	            0x7714	                            ja 0x400d110	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d0fc	        0x480fa3c3	                             bt rbx, rax	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d100	            0x730e	                           jae 0x400d110	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d102	    0x41807c24094e	                cmp byte [r12 + 9], 0x4e	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d108	     0xf8478030000	                            je 0x400d486	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d10e	            0x6690	                                     nop	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d110	        0x418b4628	            mov eax, dword [r14 + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d114	        0x413b462c	            cmp eax, dword [r14 + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d118	     0xf8d9a010000	                           jge 0x400d2b8	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d11e	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x400d121	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x400d124	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400d128	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400d12c	        0x41894628	             mov dword [r14 + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x400d130	        0x488d0cca	                  lea rcx, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400d134	    0xc74104000000	                  mov dword [rcx + 4], 0	       863	cp-demangle.c	
0x400d13b	    0xc70100000000	                      mov dword [rcx], 0	       864	cp-demangle.c	
0x400d141	        0x4c896108	                mov qword [rcx + 8], r12	       865	cp-demangle.c	
0x400d145	        0x44896910	            mov dword [rcx + 0x10], r13d	       866	cp-demangle.c	
0x400d149	        0x49894e40	             mov qword [r14 + 0x40], rcx	      1677	cp-demangle.c	FUNCTION_24
0x400d14d	          0x4c89fa	                            mov rdx, r15	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x400d150	      0xbe4b000000	                           mov esi, 0x4b	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x400d155	          0x4c89f7	                            mov rdi, r14	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x400d158	      0xe8e32effff	                    call sym.d_make_comp	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x400d15d	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x400d161	          0x4989c7	                            mov r15, rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x400d164	          0x803e42	                    cmp byte [rsi], 0x42	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x400d167	     0xf84b3feffff	                            je 0x400d020	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x400d16d	        0x49896e40	             mov qword [r14 + 0x40], rbp	      1382	cp-demangle.c	ELSE_4	FUNCTION_19
0x400d171	        0x4883c408	                              add rsp, 8	      1663	cp-demangle.c	FUNCTION_23
0x400d175	              0x5b	                                 pop rbx	      1663	cp-demangle.c	FUNCTION_23
0x400d176	              0x5d	                                 pop rbp	      1663	cp-demangle.c	FUNCTION_23
0x400d177	            0x415c	                                 pop r12	      1663	cp-demangle.c	FUNCTION_23
0x400d179	            0x415d	                                 pop r13	      1663	cp-demangle.c	FUNCTION_23
0x400d17b	            0x415e	                                 pop r14	      1663	cp-demangle.c	FUNCTION_23
0x400d17d	            0x415f	                                 pop r15	      1663	cp-demangle.c	FUNCTION_23
0x400d17f	              0xc3	                                     ret	      1663	cp-demangle.c	FUNCTION_23
0x400d180	        0x488d7101	                      lea rsi, [rcx + 1]	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400d184	          0x4531ff	                          xor r15d, r15d	      3693	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2
0x400d187	        0x48897718	             mov qword [rdi + 0x18], rsi	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400d18b	         0xfb65101	               movzx edx, byte [rcx + 1]	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400d18f	          0x80fa6c	                            cmp dl, 0x6c	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400d192	     0xf85ecfcffff	                           jne 0x400ce84	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400d198	        0x4883c102	                              add rcx, 2	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400d19c	        0x48894f18	             mov qword [rdi + 0x18], rcx	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400d1a0	      0xe85bfbffff	                     call sym.d_parmlist	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x400d1a5	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x400d1a9	          0x4885c0	                           test rax, rax	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x400d1ac	          0x4989c3	                            mov r11, rax	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x400d1af	           0xfb616	                   movzx edx, byte [rsi]	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x400d1b2	     0xf84ccfcffff	                            je 0x400ce84	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x400d1b8	          0x80fa45	                            cmp dl, 0x45	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x400d1bb	     0xf85c3fcffff	                           jne 0x400ce84	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x400d1c1	        0x4c8d4601	                       lea r8, [rsi + 1]	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x400d1c5	        0x4d894618	              mov qword [r14 + 0x18], r8	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x400d1c9	         0xfb65601	               movzx edx, byte [rsi + 1]	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400d1cd	          0x80fa5f	                            cmp dl, 0x5f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400d1d0	     0xf84ee030000	                            je 0x400d5c4	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400d1d6	          0x80fa6e	                            cmp dl, 0x6e	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400d1d9	     0xf8443010000	                            je 0x400d322	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x400d1df	          0x8d42d0	                   lea eax, [rdx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d1e2	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d1e4	     0xf8720040000	                            ja 0x400d60a	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d1ea	        0x440fbed2	                          movsx r10d, dl	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d1ee	        0x4c8d4602	                       lea r8, [rsi + 2]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d1f2	          0x4531c9	                            xor r9d, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d1f5	      0xbdffffff7f	                     mov ebp, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d1fa	      0xbb67666666	                     mov ebx, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d1ff	            0xeb2c	                           jmp 0x400d22d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d201	     0xf1f80000000	                         nop dword [rax]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d208	        0x440fbed1	                          movsx r10d, cl	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d20c	            0x89ef	                            mov edi, ebp	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d20e	        0x4c8d4601	                       lea r8, [rsi + 1]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d212	        0x418d42d0	                   lea eax, [r10 - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d216	            0x29c7	                            sub edi, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d218	            0x89f8	                            mov eax, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d21a	          0xc1ff1f	                           sar edi, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d21d	            0xf7eb	                                imul ebx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d21f	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d222	            0x29fa	                            sub edx, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d224	          0x4439ca	                            cmp edx, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d227	     0xf8c4f020000	                            jl 0x400d47c	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400d22d	        0x4d894618	              mov qword [r14 + 0x18], r8	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400d231	        0x410fb608	                    movzx ecx, byte [r8]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400d235	        0x438d0489	                    lea eax, [r9 + r9*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400d239	          0x4c89c6	                             mov rsi, r8	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400d23c	        0x418d0442	                  lea eax, [r10 + rax*2]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400d240	          0x8d51d0	                   lea edx, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d243	        0x448d48d0	                   lea r9d, [rax - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400d247	          0x80fa09	                               cmp dl, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d24a	            0x76bc	                           jbe 0x400d208	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d24c	          0x83e82f	                           sub eax, 0x2f	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d24f	          0x80f95f	                            cmp cl, 0x5f	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400d252	     0xf8524020000	                           jne 0x400d47c	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400d258	        0x418b5628	            mov edx, dword [r14 + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d25c	        0x413b562c	            cmp edx, dword [r14 + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d260	        0x498d7001	                       lea rsi, [r8 + 1]	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400d264	        0x49897618	             mov qword [r14 + 0x18], rsi	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400d268	            0x7d3b	                           jge 0x400d2a5	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d26a	          0x4863ca	                         movsxd rcx, edx	       935	cp-demangle.c	FUNCTION_3
0x400d26d	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x400d270	        0x488d3c49	                  lea rdi, [rcx + rcx*2]	       935	cp-demangle.c	FUNCTION_3
0x400d274	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400d278	        0x4c8d3cf9	                  lea r15, [rcx + rdi*8]	       935	cp-demangle.c	FUNCTION_3
0x400d27c	    0x41c747040000	                  mov dword [r15 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400d284	        0x41895628	             mov dword [r14 + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x400d288	        0x4d895f08	                mov qword [r15 + 8], r11	      3710	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400d28c	        0x41894710	             mov dword [r15 + 0x10], eax	      3711	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400d290	        0x418b4638	            mov eax, dword [r14 + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400d294	        0x413b463c	            cmp eax, dword [r14 + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400d298	    0x41c707450000	                   mov dword [r15], 0x45	      3709	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400d29f	     0xf8c23fdffff	                            jl 0x400cfc8	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400d2a5	      0x410fb65001	                movzx edx, byte [r8 + 1]	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400d2aa	          0x4531ff	                          xor r15d, r15d	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x400d2ad	      0xe9d2fbffff	                           jmp 0x400ce84	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x400d2b2	    0x660f1f440000	                    nop word [rax + rax]	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x400d2b8	            0x31c9	                            xor ecx, ecx	      1740	cp-demangle.c	FUNCTION_27	IF_1
0x400d2ba	      0xe98afeffff	                           jmp 0x400d149	      1740	cp-demangle.c	FUNCTION_27	IF_1
0x400d2bf	              0x90	                                     nop	      1740	cp-demangle.c	FUNCTION_27	IF_1
0x400d2c0	            0x31c9	                            xor ecx, ecx	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x400d2c2	      0xe986feffff	                           jmp 0x400d14d	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x400d2c7	    0x660f1f840000	                    nop word [rax + rax]	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x400d2d0	        0x4c8d6602	                      lea r12, [rsi + 2]	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400d2d4	    0x41b801000000	                              mov r8d, 1	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400d2da	        0x4d896618	             mov qword [r14 + 0x18], r12	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400d2de	         0xfbe4e02	               movsx ecx, byte [rsi + 2]	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400d2e2	      0xe951fdffff	                           jmp 0x400d038	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400d2e7	    0x660f1f840000	                    nop word [rax + rax]	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400d2f0	        0x4883c001	                              add rax, 1	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x400d2f4	        0x49894618	             mov qword [r14 + 0x18], rax	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x400d2f8	      0xe9d6fdffff	                           jmp 0x400d0d3	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x400d2fd	        0x4883c101	                              add rcx, 1	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x400d301	        0x48894f18	             mov qword [rdi + 0x18], rcx	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x400d305	      0xe85634ffff	                  call sym.d_source_name	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x400d30a	          0x4885c0	                           test rax, rax	      1638	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x400d30d	          0x4989c7	                            mov r15, rax	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x400d310	            0x7410	                            je 0x400d322	      1638	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x400d312	          0x4c89f7	                            mov rdi, r14	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x400d315	      0xe83633ffff	                call sym.d_discriminator	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x400d31a	            0x85c0	                           test eax, eax	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x400d31c	     0xf855bfbffff	                           jne 0x400ce7d	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x400d322	        0x4883c408	                              add rsp, 8	      1663	cp-demangle.c	FUNCTION_23
0x400d326	            0x31c0	                            xor eax, eax	      2280	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400d328	              0x5b	                                 pop rbx	      1663	cp-demangle.c	FUNCTION_23
0x400d329	              0x5d	                                 pop rbp	      1663	cp-demangle.c	FUNCTION_23
0x400d32a	            0x415c	                                 pop r12	      1663	cp-demangle.c	FUNCTION_23
0x400d32c	            0x415d	                                 pop r13	      1663	cp-demangle.c	FUNCTION_23
0x400d32e	            0x415e	                                 pop r14	      1663	cp-demangle.c	FUNCTION_23
0x400d330	            0x415f	                                 pop r15	      1663	cp-demangle.c	FUNCTION_23
0x400d332	              0xc3	                                     ret	      1663	cp-demangle.c	FUNCTION_23
0x400d333	        0x8079016e	                cmp byte [rcx + 1], 0x6e	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x400d337	     0xf8527fbffff	                           jne 0x400ce64	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x400d33d	        0x4883c102	                              add rcx, 2	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x400d341	        0x48894f18	             mov qword [rdi + 0x18], rcx	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x400d345	      0xe91afbffff	                           jmp 0x400ce64	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x400d34a	        0x488b5008	                mov rdx, qword [rax + 8]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400d34e	          0x8b4210	            mov eax, dword [rdx + 0x10] 	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400d351	        0x41034648	             add eax, dword [r14 + 0x48]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400d355	          0x83c007	                              add eax, 7	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400d358	        0x41894648	             mov dword [r14 + 0x48], eax	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400d35c	          0x488b02	                    mov rax, qword [rdx]	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400d35f	          0x80386c	                    cmp byte [rax], 0x6c	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400d362	     0xf8515fbffff	                           jne 0x400ce7d	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400d368	        0x80780169	                cmp byte [rax + 1], 0x69	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400d36c	     0xf850bfbffff	                           jne 0x400ce7d	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400d372	        0x80780200	                   cmp byte [rax + 2], 0	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400d376	     0xf8501fbffff	                           jne 0x400ce7d	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x400d37c	          0x4c89f7	                            mov rdi, r14	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d37f	      0xe8dc33ffff	                  call sym.d_source_name	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d384	          0x4c89fa	                            mov rdx, r15	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d387	          0x4889c1	                            mov rcx, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d38a	      0xbe36000000	                           mov esi, 0x36	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d38f	          0x4c89f7	                            mov rdi, r14	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d392	      0xe8a92cffff	                    call sym.d_make_comp	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d397	          0x4989c7	                            mov r15, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d39a	      0xe9defaffff	                           jmp 0x400ce7d	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x400d39f	          0x4889f7	                            mov rdi, rsi	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400d3a2	            0x31c0	                            xor eax, eax	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400d3a4	      0xe9d0fbffff	                           jmp 0x400cf79	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400d3a9	        0x488b7f40	            mov rdi, qword [rdi + 0x40] 	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x400d3ad	          0x4885ff	                           test rdi, rdi	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x400d3b0	            0x7413	                            je 0x400d3c5	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x400d3b2	            0x8b17	                    mov edx, dword [rdi]	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x400d3b4	            0x85d2	                           test edx, edx	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x400d3b6	     0xf841d010000	                            je 0x400d4d9	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x400d3bc	          0x83fa18	                           cmp edx, 0x18	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x400d3bf	     0xf8414010000	                            je 0x400d4d9	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x400d3c5	            0x3c43	                            cmp al, 0x43	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d3c7	     0xf842f010000	                            je 0x400d4fc	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d3cd	            0x3c44	                            cmp al, 0x44	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d3cf	     0xf854dffffff	                           jne 0x400d322	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d3d5	         0xfb64101	               movzx eax, byte [rcx + 1]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400d3d9	          0x83e830	                           sub eax, 0x30	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400d3dc	            0x3c05	                               cmp al, 5	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400d3de	     0xf873effffff	                            ja 0x400d322	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400d3e4	           0xfb6c0	                           movzx eax, al	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400d3e7	    0xff24c5000000	                       jmp qword [rax*8]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400d3ee	      0xb805000000	                              mov eax, 5	      2270	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d3f3	        0x418b5628	            mov edx, dword [r14 + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d3f7	        0x413b562c	            cmp edx, dword [r14 + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d3fb	        0x488d7102	                      lea rsi, [rcx + 2]	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x400d3ff	        0x49897618	             mov qword [r14 + 0x18], rsi	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x400d403	     0xf8daf010000	                           jge 0x400d5b8	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d409	          0x4c63c2	                          movsxd r8, edx	       935	cp-demangle.c	FUNCTION_3
0x400d40c	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x400d40f	          0x4885ff	                           test rdi, rdi	       914	cp-demangle.c	IF_4
0x400d412	        0x4f8d0c40	                     lea r9, [r8 + r8*2]	       935	cp-demangle.c	FUNCTION_3
0x400d416	        0x4d8b4620	              mov r8, qword [r14 + 0x20]	       935	cp-demangle.c	FUNCTION_3
0x400d41a	        0x4f8d3cc8	                    lea r15, [r8 + r9*8]	       935	cp-demangle.c	FUNCTION_3
0x400d41e	    0x41c747040000	                  mov dword [r15 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400d426	        0x41895628	             mov dword [r14 + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x400d42a	     0xf8488010000	                            je 0x400d5b8	       914	cp-demangle.c	IF_4
0x400d430	    0x41c747040000	                  mov dword [r15 + 4], 0	       919	cp-demangle.c	
0x400d438	    0x41c707080000	                      mov dword [r15], 8	       920	cp-demangle.c	
0x400d43f	        0x41894708	                mov dword [r15 + 8], eax	       921	cp-demangle.c	
0x400d443	        0x49897f10	             mov qword [r15 + 0x10], rdi	       922	cp-demangle.c	
0x400d447	         0xfb65102	               movzx edx, byte [rcx + 2]	       922	cp-demangle.c	
0x400d44b	      0xe934faffff	                           jmp 0x400ce84	       922	cp-demangle.c	
0x400d450	      0xb804000000	                              mov eax, 4	      2267	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d455	            0xeb9c	                           jmp 0x400d3f3	      2267	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d457	      0xb803000000	                              mov eax, 3	      2263	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d45c	            0xeb95	                           jmp 0x400d3f3	      2263	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d45e	      0xb802000000	                              mov eax, 2	      2260	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d463	            0xeb8e	                           jmp 0x400d3f3	      2260	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d465	      0xb801000000	                              mov eax, 1	      2257	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d46a	            0xeb87	                           jmp 0x400d3f3	      2257	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d46c	         0xf1f4000	                         nop dword [rax]	      2257	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d470	         0xfb65701	               movzx edx, byte [rdi + 1]	      2257	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400d474	          0x4531ff	                          xor r15d, r15d	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x400d477	      0xe908faffff	                           jmp 0x400ce84	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x400d47c	            0x89ca	                            mov edx, ecx	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400d47e	          0x4531ff	                          xor r15d, r15d	      3735	cp-demangle.c	FUNCTION_57	IF_3
0x400d481	      0xe9fef9ffff	                           jmp 0x400ce84	      3735	cp-demangle.c	FUNCTION_57	IF_3
0x400d486	        0x418b4648	            mov eax, dword [r14 + 0x48] 	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d48a	          0x83c016	                           add eax, 0x16	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d48d	          0x4429e8	                           sub eax, r13d	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d490	        0x41894648	             mov dword [r14 + 0x48], eax	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400d494	        0x418b4628	            mov eax, dword [r14 + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d498	        0x413b462c	            cmp eax, dword [r14 + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d49c	     0xf8d16feffff	                           jge 0x400d2b8	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d4a2	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x400d4a5	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x400d4a8	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400d4ac	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400d4b0	        0x41894628	             mov dword [r14 + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x400d4b4	        0x488d0cca	                  lea rcx, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400d4b8	    0xc74104000000	                  mov dword [rcx + 4], 0	       863	cp-demangle.c	
0x400d4bf	    0xc70100000000	                      mov dword [rcx], 0	       864	cp-demangle.c	
0x400d4c5	    0x48c741080000	                  mov qword [rcx + 8], 0	       865	cp-demangle.c	
0x400d4cd	    0xc74110150000	           mov dword [rcx + 0x10], 0x15 	       866	cp-demangle.c	
0x400d4d4	      0xe970fcffff	                           jmp 0x400d149	       866	cp-demangle.c	
0x400d4d9	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x400d4dc	        0x41014648	             add dword [r14 + 0x48], eax	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x400d4e0	           0xfb611	                   movzx edx, byte [rcx]	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x400d4e3	          0x80fa43	                            cmp dl, 0x43	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d4e6	            0x7414	                            je 0x400d4fc	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d4e8	          0x80fa44	                            cmp dl, 0x44	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d4eb	     0xf84e4feffff	                            je 0x400d3d5	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d4f1	          0x4889ce	                            mov rsi, rcx	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400d4f4	          0x4531ff	                          xor r15d, r15d	      2280	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400d4f7	      0xe988f9ffff	                           jmp 0x400ce84	      2280	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400d4fc	         0xfb64101	               movzx eax, byte [rcx + 1]	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x400d500	            0x3c49	                            cmp al, 0x49	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x400d502	     0xf84e5000000	                            je 0x400d5ed	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x400d508	          0x83e831	                           sub eax, 0x31	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d50b	            0x3c04	                               cmp al, 4	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d50d	     0xf870ffeffff	                            ja 0x400d322	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d513	           0xfb6c0	                           movzx eax, al	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d516	    0xff24c5000000	                       jmp qword [rax*8]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d51d	            0x31c0	                            xor eax, eax	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400d51f	      0xbb04000000	                              mov ebx, 4	      2233	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d524	        0x488d7102	                      lea rsi, [rcx + 2]	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400d528	            0x85c0	                           test eax, eax	      2244	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x400d52a	        0x49897618	             mov qword [r14 + 0x18], rsi	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400d52e	     0xf85a4000000	                           jne 0x400d5d8	      2244	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x400d534	        0x418b4628	            mov eax, dword [r14 + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d538	        0x413b462c	            cmp eax, dword [r14 + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d53c	            0x7d6f	                           jge 0x400d5ad	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400d53e	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x400d541	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x400d544	          0x4885ff	                           test rdi, rdi	       894	cp-demangle.c	IF_3
0x400d547	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400d54b	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400d54f	        0x4c8d3cca	                  lea r15, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400d553	    0x41c747040000	                  mov dword [r15 + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400d55b	        0x41894628	             mov dword [r14 + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x400d55f	            0x744c	                            je 0x400d5ad	       894	cp-demangle.c	IF_3
0x400d561	    0x41c747040000	                  mov dword [r15 + 4], 0	       899	cp-demangle.c	
0x400d569	    0x41c707070000	                      mov dword [r15], 7	       900	cp-demangle.c	
0x400d570	        0x41895f08	                mov dword [r15 + 8], ebx	       901	cp-demangle.c	
0x400d574	        0x49897f10	             mov qword [r15 + 0x10], rdi	       902	cp-demangle.c	
0x400d578	           0xfb616	                   movzx edx, byte [rsi]	       902	cp-demangle.c	
0x400d57b	      0xe904f9ffff	                           jmp 0x400ce84	       902	cp-demangle.c	
0x400d580	            0x31c0	                            xor eax, eax	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400d582	      0xbb03000000	                              mov ebx, 3	      2230	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d587	            0xeb9b	                           jmp 0x400d524	      2230	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d589	            0x31c0	                            xor eax, eax	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400d58b	      0xbb02000000	                              mov ebx, 2	      2227	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d590	            0xeb92	                           jmp 0x400d524	      2227	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d592	        0x488d7102	                      lea rsi, [rcx + 2]	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400d596	      0xbb01000000	                              mov ebx, 1	      2224	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d59b	        0x49897618	             mov qword [r14 + 0x18], rsi	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400d59f	            0xeb93	                           jmp 0x400d534	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400d5a1	            0x31c0	                            xor eax, eax	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400d5a3	      0xbb05000000	                              mov ebx, 5	      2236	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d5a8	      0xe977ffffff	                           jmp 0x400d524	      2236	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d5ad	           0xfb616	                   movzx edx, byte [rsi]	      2236	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d5b0	          0x4531ff	                          xor r15d, r15d	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x400d5b3	      0xe9ccf8ffff	                           jmp 0x400ce84	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x400d5b8	         0xfb65102	               movzx edx, byte [rcx + 2]	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x400d5bc	          0x4531ff	                          xor r15d, r15d	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x400d5bf	      0xe9c0f8ffff	                           jmp 0x400ce84	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x400d5c4	            0x31c0	                            xor eax, eax	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400d5c6	      0xe98dfcffff	                           jmp 0x400d258	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400d5cb	        0x4883c103	                              add rcx, 3	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400d5cf	      0xbb01000000	                              mov ebx, 1	      2224	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d5d4	        0x49894e18	             mov qword [r14 + 0x18], rcx	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400d5d8	          0x4c89f7	                            mov rdi, r14	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x400d5db	      0xe800000000	                          call 0x400d5e0	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x400d5e0	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x400d5e4	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x400d5e8	      0xe947ffffff	                           jmp 0x400d534	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x400d5ed	        0x488d7101	                      lea rsi, [rcx + 1]	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x400d5f1	        0x49897618	             mov qword [r14 + 0x18], rsi	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x400d5f5	         0xfb64102	               movzx eax, byte [rcx + 2]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d5f9	          0x83e831	                           sub eax, 0x31	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d5fc	            0x3c04	                               cmp al, 4	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d5fe	            0x7749	                            ja 0x400d649	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d600	           0xfb6c0	                           movzx eax, al	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d603	    0xff24c5000000	                       jmp qword [rax*8]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d60a	          0x4c89c6	                             mov rsi, r8	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400d60d	          0x4531ff	                          xor r15d, r15d	      3704	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x400d610	      0xe96ff8ffff	                           jmp 0x400ce84	      3704	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x400d615	          0x4889f1	                            mov rcx, rsi	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d618	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d61d	      0xe9fdfeffff	                           jmp 0x400d51f	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d622	          0x4889f1	                            mov rcx, rsi	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d625	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d62a	      0xe953ffffff	                           jmp 0x400d582	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d62f	          0x4889f1	                            mov rcx, rsi	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d632	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d637	      0xe94fffffff	                           jmp 0x400d58b	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d63c	          0x4889f1	                            mov rcx, rsi	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400d63f	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d644	      0xe95affffff	                           jmp 0x400d5a3	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d649	         0xfb65101	               movzx edx, byte [rcx + 1]	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400d64d	          0x4531ff	                          xor r15d, r15d	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400d650	      0xe92ff8ffff	                           jmp 0x400ce84	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
d_print_mod	CALL,30:IF,4:SWITCH,1:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	1331
0x4009040	            0x4154	                                push r12	      5875	cp-demangle.c	FUNCTION_90
0x4009042	              0x55	                                push rbp	      5875	cp-demangle.c	FUNCTION_90
0x4009043	          0x4189f4	                           mov r12d, esi	      5875	cp-demangle.c	FUNCTION_90
0x4009046	              0x53	                                push rbx	      5875	cp-demangle.c	FUNCTION_90
0x4009047	          0x4889d5	                            mov rbp, rdx	      5875	cp-demangle.c	FUNCTION_90
0x400904a	          0x4889fb	                            mov rbx, rdi	      5875	cp-demangle.c	FUNCTION_90
0x400904d	        0x4883ec20	                           sub rsp, 0x20	      5875	cp-demangle.c	FUNCTION_90
0x4009051	    0x64488b042528	                mov rax, qword fs:[0x28]	      5875	cp-demangle.c	FUNCTION_90
0x400905a	      0x4889442418	             mov qword [rsp + 0x18], rax	      5875	cp-demangle.c	FUNCTION_90
0x400905f	            0x31c0	                            xor eax, eax	      5875	cp-demangle.c	FUNCTION_90
0x4009061	            0x8b02	                    mov eax, dword [rdx]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009063	          0x83e803	                              sub eax, 3	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009066	          0x83f84c	                           cmp eax, 0x4c	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009069	     0xf8702010000	                            ja 0x4009171	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400906f	    0xff24c5000000	                       jmp qword [rax*8]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009080	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4009087	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400908e	     0xf84fd0e0000	                            je 0x4009f91	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009094	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009098	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400909e	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40090a5	        0xc6041720	              mov byte [rdi + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40090a9	    0xc68708010000	           mov byte [rdi + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40090b0	     0xf848f170000	                            je 0x400a845	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40090b6	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40090ba	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40090c1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40090c8	        0xc6040374	              mov byte [rbx + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x40090cc	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x40090d3	     0xf843b170000	                            je 0x400a814	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40090d9	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40090dd	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40090e3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40090ea	        0xc6041368	              mov byte [rbx + rdx], 0x68	      4235	cp-demangle.c	FUNCTION_72
0x40090ee	    0xc68308010000	           mov byte [rbx + 0x108], 0x68 	      4236	cp-demangle.c	FUNCTION_72
0x40090f5	     0xf84e8160000	                            je 0x400a7e3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40090fb	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40090ff	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009106	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400910d	        0xc6040372	              mov byte [rbx + rax], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4009111	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4009118	     0xf8494160000	                            je 0x400a7b2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400911e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009122	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009128	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400912f	        0xc604136f	              mov byte [rbx + rdx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4009133	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x400913a	     0xf84b8150000	                            je 0x400a6f8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009140	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009144	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400914b	        0xc6040377	              mov byte [rbx + rax], 0x77	      4235	cp-demangle.c	FUNCTION_72
0x400914f	    0xc68308010000	           mov byte [rbx + 0x108], 0x77 	      4236	cp-demangle.c	FUNCTION_72
0x4009156	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x400915b	     0xf85df0b0000	                           jne 0x4009d40	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4009161	            0xeb2d	                           jmp 0x4009190	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4009163	       0xf1f440000	                   nop dword [rax + rax]	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4009168	        0x488b6a08	                mov rbp, qword [rdx + 8]	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x400916c	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400916f	            0x740c	                            je 0x400917d	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009171	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009174	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009177	     0xf8e330c0000	                           jle 0x4009db0	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400917d	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4009187	    0x660f1f840000	                    nop word [rax + rax]	      4207	cp-demangle.c	FUNCTION_69
0x4009190	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5960	cp-demangle.c	FUNCTION_90
0x4009195	    0x644833042528	                xor rax, qword fs:[0x28]	      5960	cp-demangle.c	FUNCTION_90
0x400919e	     0xf85581b0000	                           jne 0x400acfc	      5960	cp-demangle.c	FUNCTION_90
0x40091a4	        0x4883c420	                           add rsp, 0x20	      5960	cp-demangle.c	FUNCTION_90
0x40091a8	              0x5b	                                 pop rbx	      5960	cp-demangle.c	FUNCTION_90
0x40091a9	              0x5d	                                 pop rbp	      5960	cp-demangle.c	FUNCTION_90
0x40091aa	            0x415c	                                 pop r12	      5960	cp-demangle.c	FUNCTION_90
0x40091ac	              0xc3	                                     ret	      5960	cp-demangle.c	FUNCTION_90
0x40091ad	           0xf1f00	                         nop dword [rax]	      5960	cp-demangle.c	FUNCTION_90
0x40091b0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5960	cp-demangle.c	FUNCTION_90
0x40091b7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40091bd	     0xf84fc0d0000	                            je 0x4009fbf	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40091c3	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40091c7	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40091ce	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40091d5	        0xc6040720	              mov byte [rdi + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40091d9	    0xc68708010000	           mov byte [rdi + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40091e0	     0xf84d20f0000	                            je 0x400a1b8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40091e6	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40091ea	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40091f0	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40091f7	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x40091fb	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4009202	     0xf843a130000	                            je 0x400a542	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009208	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400920c	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009213	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400921a	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400921e	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4009225	     0xf84e6120000	                            je 0x400a511	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400922b	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400922f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009235	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400923c	        0xc6041373	              mov byte [rbx + rdx], 0x73	      4235	cp-demangle.c	FUNCTION_72
0x4009240	    0xc68308010000	           mov byte [rbx + 0x108], 0x73 	      4236	cp-demangle.c	FUNCTION_72
0x4009247	     0xf8493120000	                            je 0x400a4e0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400924d	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009251	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009258	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400925f	        0xc6040374	              mov byte [rbx + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4009263	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x400926a	     0xf843f120000	                            je 0x400a4af	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009270	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009274	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400927a	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009281	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4009285	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x400928c	     0xf84c7170000	                            je 0x400aa59	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009292	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009296	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400929d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40092a4	        0xc6040369	              mov byte [rbx + rax], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x40092a8	    0xc68308010000	           mov byte [rbx + 0x108], 0x69 	      4236	cp-demangle.c	FUNCTION_72
0x40092af	     0xf8473170000	                            je 0x400aa28	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40092b5	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40092b9	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40092bf	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40092c6	        0xc6041363	              mov byte [rbx + rdx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x40092ca	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x40092d1	     0xf8541020000	                           jne 0x4009518	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40092d7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40092de	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40092e5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40092ea	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40092ed	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40092f3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40092fb	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4009300	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4009302	      0xe915020000	                           jmp 0x400951c	      4224	cp-demangle.c	FUNCTION_71
0x4009307	    0x660f1f840000	                    nop word [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4009310	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4009317	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400931d	     0xf84ca0c0000	                            je 0x4009fed	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009323	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009327	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400932e	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009335	        0xc6040720	              mov byte [rdi + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009339	    0xc68708010000	           mov byte [rdi + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4009340	     0xf8483160000	                            je 0x400a9c9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009346	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400934a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009350	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009357	        0xc6041376	              mov byte [rbx + rdx], 0x76	      4235	cp-demangle.c	FUNCTION_72
0x400935b	    0xc68308010000	           mov byte [rbx + 0x108], 0x76 	      4236	cp-demangle.c	FUNCTION_72
0x4009362	     0xf8430160000	                            je 0x400a998	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009368	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400936c	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009373	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400937a	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400937e	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4009385	     0xf84dc150000	                            je 0x400a967	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400938b	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400938f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009395	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400939c	        0xc604136c	              mov byte [rbx + rdx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x40093a0	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x40093a7	     0xf8489150000	                            je 0x400a936	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093ad	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093b1	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093b8	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40093bf	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x40093c3	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x40093ca	     0xf8435150000	                            je 0x400a905	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093d0	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093d4	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093da	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40093e1	        0xc6041374	              mov byte [rbx + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x40093e5	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x40093ec	     0xf84e2140000	                            je 0x400a8d4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093f2	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093f6	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40093fd	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009404	        0xc6040369	              mov byte [rbx + rax], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x4009408	    0xc68308010000	           mov byte [rbx + 0x108], 0x69 	      4236	cp-demangle.c	FUNCTION_72
0x400940f	     0xf848e140000	                            je 0x400a8a3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009415	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009419	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400941f	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009426	        0xc604136c	              mov byte [rbx + rdx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x400942a	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x4009431	     0xf843c140000	                            je 0x400a873	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009437	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400943b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009442	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4009446	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x400944d	      0xe93efdffff	                           jmp 0x4009190	      4236	cp-demangle.c	FUNCTION_72
0x4009452	    0x660f1f440000	                    nop word [rax + rax]	      4236	cp-demangle.c	FUNCTION_72
0x4009458	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x400945f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009466	     0xf849b0a0000	                            je 0x4009f07	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400946c	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009470	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009476	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400947d	        0xc6041720	              mov byte [rdi + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009481	    0xc68708010000	           mov byte [rdi + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4009488	     0xf848f160000	                            je 0x400ab1d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400948e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009492	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009499	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40094a0	        0xc6040363	              mov byte [rbx + rax], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x40094a4	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x40094ab	     0xf843b160000	                            je 0x400aaec	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40094b1	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40094b5	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40094bb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40094c2	        0xc604136f	              mov byte [rbx + rdx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x40094c6	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x40094cd	     0xf84e8150000	                            je 0x400aabb	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40094d3	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40094d7	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40094de	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40094e5	        0xc604036e	              mov byte [rbx + rax], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x40094e9	    0xc68308010000	           mov byte [rbx + 0x108], 0x6e 	      4236	cp-demangle.c	FUNCTION_72
0x40094f0	     0xf8494150000	                            je 0x400aa8a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40094f6	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40094fa	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009500	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009507	        0xc6041373	              mov byte [rbx + rdx], 0x73	      4235	cp-demangle.c	FUNCTION_72
0x400950b	    0xc68308010000	           mov byte [rbx + 0x108], 0x73 	      4236	cp-demangle.c	FUNCTION_72
0x4009512	     0xf84bffdffff	                            je 0x40092d7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009518	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400951c	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009523	        0xc6040374	              mov byte [rbx + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4009527	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x400952e	      0xe95dfcffff	                           jmp 0x4009190	      4236	cp-demangle.c	FUNCTION_72
0x4009533	       0xf1f440000	                   nop dword [rax + rax]	      4236	cp-demangle.c	FUNCTION_72
0x4009538	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400953f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009546	     0xf8461090000	                            je 0x4009ead	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400954c	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009550	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009557	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400955b	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4009562	      0xe9c0000000	                           jmp 0x4009627	      4236	cp-demangle.c	FUNCTION_72
0x4009567	    0x660f1f840000	                    nop word [rax + rax]	      4236	cp-demangle.c	FUNCTION_72
0x4009570	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009577	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400957d	     0xf8457090000	                            je 0x4009eda	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009583	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009587	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400958e	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009592	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4009599	      0xe9b9000000	                           jmp 0x4009657	      4236	cp-demangle.c	FUNCTION_72
0x400959e	            0x6690	                                     nop	      4236	cp-demangle.c	FUNCTION_72
0x40095a0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40095a7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40095ad	     0xf84cd080000	                            je 0x4009e80	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40095b3	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40095b7	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40095be	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40095c2	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40095c9	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40095cd	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40095d0	     0xf859bfbffff	                           jne 0x4009171	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40095d6	      0xe9a2fbffff	                           jmp 0x400917d	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40095db	       0xf1f440000	                   nop dword [rax + rax]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40095e0	        0x4183e404	                             and r12d, 4	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x40095e4	     0xf85a6fbffff	                           jne 0x4009190	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x40095ea	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40095f1	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40095f7	     0xf84cc030000	                            je 0x40099c9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40095fd	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009601	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009608	        0xc604032a	              mov byte [rbx + rax], 0x2a	      4235	cp-demangle.c	FUNCTION_72
0x400960c	    0xc68308010000	           mov byte [rbx + 0x108], 0x2a 	      4236	cp-demangle.c	FUNCTION_72
0x4009613	      0xe978fbffff	                           jmp 0x4009190	      4236	cp-demangle.c	FUNCTION_72
0x4009618	     0xf1f84000000	                   nop dword [rax + rax]	      4236	cp-demangle.c	FUNCTION_72
0x4009620	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x4009627	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400962d	     0xf84bd0a0000	                            je 0x400a0f0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009633	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009637	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400963e	        0xc6040326	              mov byte [rbx + rax], 0x26	      4235	cp-demangle.c	FUNCTION_72
0x4009642	    0xc68308010000	           mov byte [rbx + 0x108], 0x26 	      4236	cp-demangle.c	FUNCTION_72
0x4009649	      0xe942fbffff	                           jmp 0x4009190	      4236	cp-demangle.c	FUNCTION_72
0x400964e	            0x6690	                                     nop	      4236	cp-demangle.c	FUNCTION_72
0x4009650	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x4009657	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400965e	     0xf84ec0a0000	                            je 0x400a150	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009664	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009668	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400966f	        0xc6041326	              mov byte [rbx + rdx], 0x26	      4235	cp-demangle.c	FUNCTION_72
0x4009673	    0xc68308010000	           mov byte [rbx + 0x108], 0x26 	      4236	cp-demangle.c	FUNCTION_72
0x400967a	            0xebab	                           jmp 0x4009627	      4236	cp-demangle.c	FUNCTION_72
0x400967c	         0xf1f4000	                         nop dword [rax]	      4236	cp-demangle.c	FUNCTION_72
0x4009680	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x4009687	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400968e	     0xf8487090000	                            je 0x400a01b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009694	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009698	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400969e	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40096a5	        0xc6041763	              mov byte [rdi + rdx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x40096a9	    0xc68708010000	           mov byte [rdi + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x40096b0	     0xf84cb0d0000	                            je 0x400a481	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40096b6	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40096ba	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40096c1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40096c8	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x40096cc	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x40096d3	     0xf84770d0000	                            je 0x400a450	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40096d9	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40096dd	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40096e3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40096ea	        0xc604136d	              mov byte [rbx + rdx], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x40096ee	    0xc68308010000	           mov byte [rbx + 0x108], 0x6d 	      4236	cp-demangle.c	FUNCTION_72
0x40096f5	     0xf84240d0000	                            je 0x400a41f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40096fb	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40096ff	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009706	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400970d	        0xc6040370	              mov byte [rbx + rax], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4009711	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x4009718	     0xf84d00c0000	                            je 0x400a3ee	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400971e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009722	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009728	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400972f	        0xc604136c	              mov byte [rbx + rdx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x4009733	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x400973a	     0xf8441100000	                            je 0x400a781	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009740	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009744	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400974b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009752	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4009756	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x400975d	     0xf84ed0f0000	                            je 0x400a750	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009763	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009767	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400976d	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009774	        0xc6041378	              mov byte [rbx + rdx], 0x78	      4235	cp-demangle.c	FUNCTION_72
0x4009778	    0xc68308010000	           mov byte [rbx + 0x108], 0x78 	      4236	cp-demangle.c	FUNCTION_72
0x400977f	     0xf8465010000	                            je 0x40098ea	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009785	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009789	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009790	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009794	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400979b	      0xe9f0f9ffff	                           jmp 0x4009190	      4236	cp-demangle.c	FUNCTION_72
0x40097a0	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x40097a7	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097ae	     0xf8495080000	                            je 0x400a049	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097b4	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097b8	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097be	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40097c5	        0xc6041769	              mov byte [rdi + rdx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x40097c9	    0xc68708010000	           mov byte [rdi + 0x108], 0x69 	      4236	cp-demangle.c	FUNCTION_72
0x40097d0	     0xf8407140000	                            je 0x400abdd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097d6	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097da	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097e1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40097e8	        0xc604036d	              mov byte [rbx + rax], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x40097ec	    0xc68308010000	           mov byte [rbx + 0x108], 0x6d 	      4236	cp-demangle.c	FUNCTION_72
0x40097f3	     0xf840a0e0000	                            je 0x400a603	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097f9	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40097fd	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009803	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400980a	        0xc6041361	              mov byte [rbx + rdx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400980e	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4009815	     0xf84b70d0000	                            je 0x400a5d2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400981b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400981f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009826	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400982d	        0xc6040367	              mov byte [rbx + rax], 0x67	      4235	cp-demangle.c	FUNCTION_72
0x4009831	    0xc68308010000	           mov byte [rbx + 0x108], 0x67 	      4236	cp-demangle.c	FUNCTION_72
0x4009838	     0xf84890e0000	                            je 0x400a6c7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400983e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009842	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009848	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400984f	        0xc6041369	              mov byte [rbx + rdx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x4009853	    0xc68308010000	           mov byte [rbx + 0x108], 0x69 	      4236	cp-demangle.c	FUNCTION_72
0x400985a	     0xf84360e0000	                            je 0x400a696	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009860	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009864	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400986b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009872	        0xc604036e	              mov byte [rbx + rax], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x4009876	    0xc68308010000	           mov byte [rbx + 0x108], 0x6e 	      4236	cp-demangle.c	FUNCTION_72
0x400987d	     0xf84e20d0000	                            je 0x400a665	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009883	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009887	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400988d	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009894	        0xc6041361	              mov byte [rbx + rdx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4009898	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x400989f	     0xf848f0d0000	                            je 0x400a634	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40098a5	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40098a9	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40098b0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40098b7	        0xc6040372	              mov byte [rbx + rax], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x40098bb	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x40098c2	     0xf8483120000	                            je 0x400ab4b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40098c8	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40098cc	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40098d2	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40098d9	        0xc6041379	              mov byte [rbx + rdx], 0x79	      4235	cp-demangle.c	FUNCTION_72
0x40098dd	    0xc68308010000	           mov byte [rbx + 0x108], 0x79 	      4236	cp-demangle.c	FUNCTION_72
0x40098e4	     0xf859bfeffff	                           jne 0x4009785	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40098ea	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40098f1	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40098f8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40098fd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009900	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009906	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400990e	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4009913	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4009915	      0xe96ffeffff	                           jmp 0x4009789	      4224	cp-demangle.c	FUNCTION_71
0x400991a	    0x660f1f440000	                    nop word [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4009920	    0x80bf08010000	           cmp byte [rdi + 0x108], 0x28 	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x4009927	            0x7429	                            je 0x4009952	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x4009929	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009930	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009936	     0xf8493130000	                            je 0x400accf	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400993c	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009940	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009947	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400994b	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4009952	        0x488b6d08	                mov rbp, qword [rbp + 8]	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4009956	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009959	            0x740c	                            je 0x4009967	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400995b	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400995e	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009961	     0xf8eb1040000	                           jle 0x4009e18	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009967	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4009971	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4207	cp-demangle.c	FUNCTION_69
0x4009978	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400997e	     0xf8428120000	                            je 0x400abac	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009984	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009988	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400998f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009996	        0xc604033a	              mov byte [rbx + rax], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400999a	    0xc68308010000	           mov byte [rbx + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x40099a1	     0xf8450100000	                            je 0x400a9f7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40099a7	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40099ab	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40099b1	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40099b8	        0xc604133a	              mov byte [rbx + rdx], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x40099bc	    0xc68308010000	           mov byte [rbx + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x40099c3	     0xf8534fcffff	                           jne 0x40095fd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40099c9	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40099d0	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40099d7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40099dc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40099df	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40099e5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40099ed	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40099f2	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40099f4	      0xe908fcffff	                           jmp 0x4009601	      4224	cp-demangle.c	FUNCTION_71
0x40099f9	     0xf1f80000000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4009a00	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4009a07	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a0d	     0xf8422050000	                            je 0x4009f35	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a13	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a17	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a1e	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009a25	        0xc6040720	              mov byte [rdi + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009a29	    0xc68708010000	           mov byte [rdi + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4009a30	     0xf848a090000	                            je 0x400a3c0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a36	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a3a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a40	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009a47	        0xc604135f	              mov byte [rbx + rdx], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x4009a4b	    0xc68308010000	           mov byte [rbx + 0x108], 0x5f 	      4236	cp-demangle.c	FUNCTION_72
0x4009a52	     0xf8437090000	                            je 0x400a38f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a58	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a5c	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a63	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009a6a	        0xc604035f	              mov byte [rbx + rax], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x4009a6e	    0xc68308010000	           mov byte [rbx + 0x108], 0x5f 	      4236	cp-demangle.c	FUNCTION_72
0x4009a75	     0xf84e3080000	                            je 0x400a35e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a7b	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a7f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a85	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009a8c	        0xc6041376	              mov byte [rbx + rdx], 0x76	      4235	cp-demangle.c	FUNCTION_72
0x4009a90	    0xc68308010000	           mov byte [rbx + 0x108], 0x76 	      4236	cp-demangle.c	FUNCTION_72
0x4009a97	     0xf8490080000	                            je 0x400a32d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009a9d	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009aa1	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009aa8	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009aaf	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4009ab3	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4009aba	     0xf843c080000	                            je 0x400a2fc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009ac0	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009ac4	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009aca	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009ad1	        0xc6041363	              mov byte [rbx + rdx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x4009ad5	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x4009adc	     0xf84e9070000	                            je 0x400a2cb	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009ae2	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009ae6	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009aed	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009af4	        0xc6040374	              mov byte [rbx + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4009af8	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4009aff	     0xf8495070000	                            je 0x400a29a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b05	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b09	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b0f	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009b16	        0xc604136f	              mov byte [rbx + rdx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4009b1a	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4009b21	     0xf8442070000	                            je 0x400a269	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b27	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b2b	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b32	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009b39	        0xc6040372	              mov byte [rbx + rax], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4009b3d	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4009b44	     0xf8432100000	                            je 0x400ab7c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b4a	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b4e	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009b55	        0xc6041328	              mov byte [rbx + rdx], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4009b59	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4009b60	        0x488b6d08	                mov rbp, qword [rbp + 8]	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x4009b64	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009b67	     0xf85ff010000	                           jne 0x4009d6c	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009b6d	      0xe906020000	                           jmp 0x4009d78	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009b72	    0x660f1f440000	                    nop word [rax + rax]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009b78	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009b7f	      0xbd00000000	                              mov ebp, 0	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009b84	            0xeb34	                           jmp 0x4009bba	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009b86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009b90	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b93	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b97	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009b9b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009ba2	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4009ba6	    0x4881fd000000	                              cmp rbp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4009bad	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4009bb4	     0xf84d6f5ffff	                            je 0x4009190	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4009bba	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009bc0	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4009bc5	            0x75c9	                           jne 0x4009b90	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009bc7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009bce	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009bd5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009bda	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009bdd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009be3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009beb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4009bf0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4009bf2	            0xeba3	                           jmp 0x4009b97	      4224	cp-demangle.c	FUNCTION_71
0x4009bf4	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4009bf8	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4009bff	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c05	     0xf8458030000	                            je 0x4009f63	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c0b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c0f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c16	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009c1d	        0xc6040720	              mov byte [rdi + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009c21	    0xc68708010000	           mov byte [rdi + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4009c28	     0xf8476090000	                            je 0x400a5a4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c2e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c32	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c38	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009c3f	        0xc604136e	              mov byte [rbx + rdx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x4009c43	    0xc68308010000	           mov byte [rbx + 0x108], 0x6e 	      4236	cp-demangle.c	FUNCTION_72
0x4009c4a	     0xf8423090000	                            je 0x400a573	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c50	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c54	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c5b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009c62	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4009c66	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4009c6d	     0xf842b100000	                            je 0x400ac9e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c73	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c77	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c7d	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009c84	        0xc6041365	              mov byte [rbx + rdx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4009c88	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4009c8f	     0xf84d80f0000	                            je 0x400ac6d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c95	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009c99	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009ca0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009ca7	        0xc6040378	              mov byte [rbx + rax], 0x78	      4235	cp-demangle.c	FUNCTION_72
0x4009cab	    0xc68308010000	           mov byte [rbx + 0x108], 0x78 	      4236	cp-demangle.c	FUNCTION_72
0x4009cb2	     0xf84840f0000	                            je 0x400ac3c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009cb8	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009cbc	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009cc2	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009cc9	        0xc6041363	              mov byte [rbx + rdx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x4009ccd	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x4009cd4	     0xf84310f0000	                            je 0x400ac0b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009cda	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009cde	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009ce5	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009cec	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4009cf0	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4009cf7	     0xf843b050000	                            je 0x400a238	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009cfd	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d01	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d07	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009d0e	        0xc6041370	              mov byte [rbx + rdx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4009d12	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x4009d19	     0xf84c7040000	                            je 0x400a1e6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d1f	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d23	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009d2a	        0xc6040374	              mov byte [rbx + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4009d2e	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4009d35	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x4009d3a	     0xf8450f4ffff	                            je 0x4009190	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x4009d40	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d47	     0xf843b040000	                            je 0x400a188	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d4d	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d51	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4009d58	        0xc6041328	              mov byte [rbx + rdx], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4009d5c	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4009d63	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4009d67	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009d6a	            0x740c	                            je 0x4009d78	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009d6c	          0x8b5504	                mov edx, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009d6f	          0x83fa01	                              cmp edx, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009d72	     0xf8e08030000	                           jle 0x400a080	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009d78	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4009d82	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d88	     0xf8492030000	                            je 0x400a120	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d8e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4009d92	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4009d99	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4009d9d	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4009da4	      0xe9e7f3ffff	                           jmp 0x4009190	      4236	cp-demangle.c	FUNCTION_72
0x4009da9	     0xf1f80000000	                         nop dword [rax]	      4236	cp-demangle.c	FUNCTION_72
0x4009db0	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009db6	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009dbc	     0xf8fbbf3ffff	                            jg 0x400917d	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009dc2	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4009dc5	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4009dc8	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4009dcb	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4009dce	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4009dd5	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4009dd8	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4009dde	    0x4889a3480100	            mov qword [rbx + 0x148], rsp	      5726	cp-demangle.c	FUNCTION_87
0x4009de5	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4009de8	        0x48892c24	                    mov qword [rsp], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4009dec	      0x4889442408	                mov qword [rsp + 8], rax	      5725	cp-demangle.c	FUNCTION_87
0x4009df1	      0xe83a70ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4009df6	      0x488b442408	                mov rax, qword [rsp + 8]	      5730	cp-demangle.c	FUNCTION_87
0x4009dfb	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4009e02	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4009e06	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4009e0d	      0xe97ef3ffff	                           jmp 0x4009190	      5732	cp-demangle.c	FUNCTION_87
0x4009e12	    0x660f1f440000	                    nop word [rax + rax]	      5732	cp-demangle.c	FUNCTION_87
0x4009e18	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009e1e	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009e24	     0xf8f3dfbffff	                            jg 0x4009967	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4009e2a	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4009e2d	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4009e30	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4009e33	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4009e36	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4009e3d	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4009e40	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4009e46	    0x4889a3480100	            mov qword [rbx + 0x148], rsp	      5726	cp-demangle.c	FUNCTION_87
0x4009e4d	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4009e50	        0x48892c24	                    mov qword [rsp], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4009e54	      0x4889442408	                mov qword [rsp + 8], rax	      5725	cp-demangle.c	FUNCTION_87
0x4009e59	      0xe8d26fffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4009e5e	      0x488b442408	                mov rax, qword [rsp + 8]	      5730	cp-demangle.c	FUNCTION_87
0x4009e63	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4009e6a	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4009e6e	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4009e75	      0xe9f7faffff	                           jmp 0x4009971	      5732	cp-demangle.c	FUNCTION_87
0x4009e7a	    0x660f1f440000	                    nop word [rax + rax]	      5732	cp-demangle.c	FUNCTION_87
0x4009e80	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009e87	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009e8e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009e93	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009e99	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009ea1	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4009ea6	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4009ea8	      0xe90af7ffff	                           jmp 0x40095b7	      4224	cp-demangle.c	FUNCTION_71
0x4009ead	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009eb4	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009ebb	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009ec0	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009ec6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009ece	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4009ed3	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4009ed5	      0xe976f6ffff	                           jmp 0x4009550	      4224	cp-demangle.c	FUNCTION_71
0x4009eda	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009ee1	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009ee8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009eed	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009ef3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009efb	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4009f00	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4009f02	      0xe980f6ffff	                           jmp 0x4009587	      4224	cp-demangle.c	FUNCTION_71
0x4009f07	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009f0e	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f15	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f1a	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f20	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009f28	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009f2b	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4009f30	      0xe959f5ffff	                           jmp 0x400948e	      4235	cp-demangle.c	FUNCTION_72
0x4009f35	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f3c	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009f43	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f48	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f4e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009f56	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009f59	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4009f5e	      0xe9d3faffff	                           jmp 0x4009a36	      4235	cp-demangle.c	FUNCTION_72
0x4009f63	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f6a	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009f71	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f76	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f7c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009f84	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009f87	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4009f8c	      0xe99dfcffff	                           jmp 0x4009c2e	      4235	cp-demangle.c	FUNCTION_72
0x4009f91	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009f98	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009f9f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009fa4	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009faa	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009fb2	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009fb5	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4009fba	      0xe9f7f0ffff	                           jmp 0x40090b6	      4235	cp-demangle.c	FUNCTION_72
0x4009fbf	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009fc6	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009fcd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009fd2	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009fd8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4009fe0	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4009fe3	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4009fe8	      0xe9f9f1ffff	                           jmp 0x40091e6	      4235	cp-demangle.c	FUNCTION_72
0x4009fed	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4009ff4	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4009ffb	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a000	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a006	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a00e	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400a011	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a016	      0xe92bf3ffff	                           jmp 0x4009346	      4235	cp-demangle.c	FUNCTION_72
0x400a01b	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a022	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a029	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a02e	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a034	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a03c	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400a03f	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a044	      0xe96df6ffff	                           jmp 0x40096b6	      4235	cp-demangle.c	FUNCTION_72
0x400a049	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a050	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a057	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a05c	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a062	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a06a	          0xc60369	                    mov byte [rbx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x400a06d	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a072	      0xe95ff7ffff	                           jmp 0x40097d6	      4235	cp-demangle.c	FUNCTION_72
0x400a077	    0x660f1f840000	                    nop word [rax + rax]	      4235	cp-demangle.c	FUNCTION_72
0x400a080	    0x8b8b34010000	           mov ecx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400a086	    0x81f900040000	                          cmp ecx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400a08c	     0xf8fe6fcffff	                            jg 0x4009d78	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400a092	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x400a099	          0x83c201	                              add edx, 1	      5721	cp-demangle.c	FUNCTION_87
0x400a09c	          0x83c101	                              add ecx, 1	      5722	cp-demangle.c	FUNCTION_87
0x400a09f	          0x895504	                mov dword [rbp + 4], edx	      5721	cp-demangle.c	FUNCTION_87
0x400a0a2	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400a0a5	    0x898b34010000	            mov dword [rbx + 0x134], ecx	      5722	cp-demangle.c	FUNCTION_87
0x400a0ab	    0x4889a3480100	            mov qword [rbx + 0x148], rsp	      5726	cp-demangle.c	FUNCTION_87
0x400a0b2	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400a0b5	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400a0b8	      0x4889442408	                mov qword [rsp + 8], rax	      5725	cp-demangle.c	FUNCTION_87
0x400a0bd	        0x48892c24	                    mov qword [rsp], rbp	      5724	cp-demangle.c	FUNCTION_87
0x400a0c1	      0xe86a6dffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400a0c6	      0x488b442408	                mov rax, qword [rsp + 8]	      5730	cp-demangle.c	FUNCTION_87
0x400a0cb	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x400a0d2	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x400a0d6	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x400a0dd	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5732	cp-demangle.c	FUNCTION_87
0x400a0e4	      0xe999fcffff	                           jmp 0x4009d82	      5732	cp-demangle.c	FUNCTION_87
0x400a0e9	     0xf1f80000000	                         nop dword [rax]	      5732	cp-demangle.c	FUNCTION_87
0x400a0f0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a0f7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a0fe	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a103	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a106	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a10c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a114	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400a119	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400a11b	      0xe917f5ffff	                           jmp 0x4009637	      4224	cp-demangle.c	FUNCTION_71
0x400a120	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a127	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a12e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a133	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a136	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a13c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a144	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400a149	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400a14b	      0xe942fcffff	                           jmp 0x4009d92	      4224	cp-demangle.c	FUNCTION_71
0x400a150	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a157	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a15e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a163	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a166	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a16c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a174	          0xc60326	                    mov byte [rbx], 0x26	      4235	cp-demangle.c	FUNCTION_72
0x400a177	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a17c	      0xe9b2f4ffff	                           jmp 0x4009633	      4235	cp-demangle.c	FUNCTION_72
0x400a181	     0xf1f80000000	                         nop dword [rax]	      4235	cp-demangle.c	FUNCTION_72
0x400a188	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a18f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a196	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a19b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a19e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a1a4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a1ac	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400a1b1	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400a1b3	      0xe999fbffff	                           jmp 0x4009d51	      4224	cp-demangle.c	FUNCTION_71
0x400a1b8	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a1bf	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a1c6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a1cb	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a1d1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a1d9	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400a1dc	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a1e1	      0xe922f0ffff	                           jmp 0x4009208	      4235	cp-demangle.c	FUNCTION_72
0x400a1e6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a1ed	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a1f4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a1f9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a1fc	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a202	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a20a	    0x48c783000100	              mov qword [rbx + 0x100], 1	      4235	cp-demangle.c	FUNCTION_72
0x400a215	      0xba01000000	                              mov edx, 1	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x400a21a	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400a21d	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x400a224	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x400a229	     0xf851efbffff	                           jne 0x4009d4d	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x400a22f	      0xe95cefffff	                           jmp 0x4009190	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x400a234	         0xf1f4000	                         nop dword [rax]	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x400a238	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a23f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a246	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a24b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a24e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a254	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a25c	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x400a25f	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a264	      0xe9b6faffff	                           jmp 0x4009d1f	      4235	cp-demangle.c	FUNCTION_72
0x400a269	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a270	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a277	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a27c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a27f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a285	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a28d	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400a290	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a295	      0xe9b0f8ffff	                           jmp 0x4009b4a	      4235	cp-demangle.c	FUNCTION_72
0x400a29a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a2a1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a2a8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a2ad	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a2b0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a2b6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a2be	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400a2c1	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a2c6	      0xe95cf8ffff	                           jmp 0x4009b27	      4235	cp-demangle.c	FUNCTION_72
0x400a2cb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a2d2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a2d9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a2de	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a2e1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a2e7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a2ef	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400a2f2	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a2f7	      0xe909f8ffff	                           jmp 0x4009b05	      4235	cp-demangle.c	FUNCTION_72
0x400a2fc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a303	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a30a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a30f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a312	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a318	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a320	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400a323	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a328	      0xe9b5f7ffff	                           jmp 0x4009ae2	      4235	cp-demangle.c	FUNCTION_72
0x400a32d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a334	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a33b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a340	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a343	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a349	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a351	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400a354	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a359	      0xe962f7ffff	                           jmp 0x4009ac0	      4235	cp-demangle.c	FUNCTION_72
0x400a35e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a365	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a36c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a371	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a374	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a37a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a382	          0xc60376	                    mov byte [rbx], 0x76	      4235	cp-demangle.c	FUNCTION_72
0x400a385	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a38a	      0xe90ef7ffff	                           jmp 0x4009a9d	      4235	cp-demangle.c	FUNCTION_72
0x400a38f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a396	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a39d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a3a2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a3a5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a3ab	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a3b3	          0xc6035f	                    mov byte [rbx], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x400a3b6	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a3bb	      0xe9bbf6ffff	                           jmp 0x4009a7b	      4235	cp-demangle.c	FUNCTION_72
0x400a3c0	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a3c7	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a3ce	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a3d3	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a3d9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a3e1	          0xc6035f	                    mov byte [rbx], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x400a3e4	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a3e9	      0xe96af6ffff	                           jmp 0x4009a58	      4235	cp-demangle.c	FUNCTION_72
0x400a3ee	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a3f5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a3fc	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a401	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a404	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a40a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a412	          0xc6036c	                    mov byte [rbx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x400a415	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a41a	      0xe921f3ffff	                           jmp 0x4009740	      4235	cp-demangle.c	FUNCTION_72
0x400a41f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a426	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a42d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a432	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a435	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a43b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a443	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x400a446	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a44b	      0xe9cef2ffff	                           jmp 0x400971e	      4235	cp-demangle.c	FUNCTION_72
0x400a450	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a457	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a45e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a463	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a466	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a46c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a474	          0xc6036d	                    mov byte [rbx], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x400a477	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a47c	      0xe97af2ffff	                           jmp 0x40096fb	      4235	cp-demangle.c	FUNCTION_72
0x400a481	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a488	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a48f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a494	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a49a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a4a2	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400a4a5	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a4aa	      0xe92af2ffff	                           jmp 0x40096d9	      4235	cp-demangle.c	FUNCTION_72
0x400a4af	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a4b6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a4bd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a4c2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a4c5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a4cb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a4d3	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400a4d6	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a4db	      0xe9b2edffff	                           jmp 0x4009292	      4235	cp-demangle.c	FUNCTION_72
0x400a4e0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a4e7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a4ee	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a4f3	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a4f6	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a4fc	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a504	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400a507	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a50c	      0xe95fedffff	                           jmp 0x4009270	      4235	cp-demangle.c	FUNCTION_72
0x400a511	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a518	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a51f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a524	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a527	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a52d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a535	          0xc60373	                    mov byte [rbx], 0x73	      4235	cp-demangle.c	FUNCTION_72
0x400a538	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a53d	      0xe90bedffff	                           jmp 0x400924d	      4235	cp-demangle.c	FUNCTION_72
0x400a542	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a549	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a550	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a555	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a558	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a55e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a566	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400a569	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a56e	      0xe9b8ecffff	                           jmp 0x400922b	      4235	cp-demangle.c	FUNCTION_72
0x400a573	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a57a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a581	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a586	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a589	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a58f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a597	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400a59a	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a59f	      0xe9cff6ffff	                           jmp 0x4009c73	      4235	cp-demangle.c	FUNCTION_72
0x400a5a4	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a5ab	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a5b2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a5b7	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a5bd	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a5c5	          0xc6036e	                    mov byte [rbx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x400a5c8	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a5cd	      0xe97ef6ffff	                           jmp 0x4009c50	      4235	cp-demangle.c	FUNCTION_72
0x400a5d2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a5d9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a5e0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a5e5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a5e8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a5ee	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a5f6	          0xc60367	                    mov byte [rbx], 0x67	      4235	cp-demangle.c	FUNCTION_72
0x400a5f9	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a5fe	      0xe93bf2ffff	                           jmp 0x400983e	      4235	cp-demangle.c	FUNCTION_72
0x400a603	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a60a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a611	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a616	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a619	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a61f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a627	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400a62a	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a62f	      0xe9e7f1ffff	                           jmp 0x400981b	      4235	cp-demangle.c	FUNCTION_72
0x400a634	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a63b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a642	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a647	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a64a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a650	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a658	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400a65b	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a660	      0xe963f2ffff	                           jmp 0x40098c8	      4235	cp-demangle.c	FUNCTION_72
0x400a665	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a66c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a673	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a678	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a67b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a681	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a689	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400a68c	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a691	      0xe90ff2ffff	                           jmp 0x40098a5	      4235	cp-demangle.c	FUNCTION_72
0x400a696	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a69d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a6a4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a6a9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a6ac	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a6b2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a6ba	          0xc6036e	                    mov byte [rbx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x400a6bd	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a6c2	      0xe9bcf1ffff	                           jmp 0x4009883	      4235	cp-demangle.c	FUNCTION_72
0x400a6c7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a6ce	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a6d5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a6da	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a6dd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a6e3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a6eb	          0xc60369	                    mov byte [rbx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x400a6ee	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a6f3	      0xe968f1ffff	                           jmp 0x4009860	      4235	cp-demangle.c	FUNCTION_72
0x400a6f8	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a6ff	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a706	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a70b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a70e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a714	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a71c	    0x48c783000100	              mov qword [rbx + 0x100], 1	      4235	cp-demangle.c	FUNCTION_72
0x400a727	      0xba01000000	                              mov edx, 1	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x400a72c	          0xc60377	                    mov byte [rbx], 0x77	      4235	cp-demangle.c	FUNCTION_72
0x400a72f	    0xc68308010000	           mov byte [rbx + 0x108], 0x77 	      4236	cp-demangle.c	FUNCTION_72
0x400a736	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x400a73b	     0xf850cf6ffff	                           jne 0x4009d4d	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x400a741	      0xe94aeaffff	                           jmp 0x4009190	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x400a746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x400a750	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a757	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a75e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a763	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a766	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a76c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a774	          0xc60378	                    mov byte [rbx], 0x78	      4235	cp-demangle.c	FUNCTION_72
0x400a777	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a77c	      0xe904f0ffff	                           jmp 0x4009785	      4235	cp-demangle.c	FUNCTION_72
0x400a781	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a788	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a78f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a794	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a797	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a79d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a7a5	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400a7a8	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a7ad	      0xe9b1efffff	                           jmp 0x4009763	      4235	cp-demangle.c	FUNCTION_72
0x400a7b2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a7b9	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a7c0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a7c5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a7c8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a7ce	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a7d6	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400a7d9	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a7de	      0xe95de9ffff	                           jmp 0x4009140	      4235	cp-demangle.c	FUNCTION_72
0x400a7e3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a7ea	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a7f1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a7f6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a7f9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a7ff	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a807	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400a80a	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a80f	      0xe90ae9ffff	                           jmp 0x400911e	      4235	cp-demangle.c	FUNCTION_72
0x400a814	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a81b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a822	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a827	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a82a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a830	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a838	          0xc60368	                    mov byte [rbx], 0x68	      4235	cp-demangle.c	FUNCTION_72
0x400a83b	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a840	      0xe9b6e8ffff	                           jmp 0x40090fb	      4235	cp-demangle.c	FUNCTION_72
0x400a845	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a84c	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a853	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a858	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a85e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a866	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400a869	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a86e	      0xe966e8ffff	                           jmp 0x40090d9	      4235	cp-demangle.c	FUNCTION_72
0x400a873	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a87a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a881	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a886	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a889	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a88f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a897	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400a89c	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400a89e	      0xe998ebffff	                           jmp 0x400943b	      4224	cp-demangle.c	FUNCTION_71
0x400a8a3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a8aa	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a8b1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a8b6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a8b9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a8bf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a8c7	          0xc6036c	                    mov byte [rbx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x400a8ca	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a8cf	      0xe963ebffff	                           jmp 0x4009437	      4235	cp-demangle.c	FUNCTION_72
0x400a8d4	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a8db	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a8e2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a8e7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a8ea	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a8f0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a8f8	          0xc60369	                    mov byte [rbx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x400a8fb	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a900	      0xe910ebffff	                           jmp 0x4009415	      4235	cp-demangle.c	FUNCTION_72
0x400a905	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a90c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a913	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a918	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a91b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a921	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a929	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400a92c	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a931	      0xe9bceaffff	                           jmp 0x40093f2	      4235	cp-demangle.c	FUNCTION_72
0x400a936	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a93d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a944	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a949	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a94c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a952	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a95a	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400a95d	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a962	      0xe969eaffff	                           jmp 0x40093d0	      4235	cp-demangle.c	FUNCTION_72
0x400a967	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a96e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a975	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a97a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a97d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a983	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a98b	          0xc6036c	                    mov byte [rbx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x400a98e	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a993	      0xe915eaffff	                           jmp 0x40093ad	      4235	cp-demangle.c	FUNCTION_72
0x400a998	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a99f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a9a6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a9ab	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a9ae	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a9b4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a9bc	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400a9bf	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a9c4	      0xe9c2e9ffff	                           jmp 0x400938b	      4235	cp-demangle.c	FUNCTION_72
0x400a9c9	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a9d0	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a9d7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a9dc	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400a9e2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400a9ea	          0xc60376	                    mov byte [rbx], 0x76	      4235	cp-demangle.c	FUNCTION_72
0x400a9ed	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400a9f2	      0xe971e9ffff	                           jmp 0x4009368	      4235	cp-demangle.c	FUNCTION_72
0x400a9f7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400a9fe	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa05	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa0a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa0d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa13	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400aa1b	          0xc6033a	                    mov byte [rbx], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400aa1e	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400aa23	      0xe9d5ebffff	                           jmp 0x40095fd	      4235	cp-demangle.c	FUNCTION_72
0x400aa28	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400aa2f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa36	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa3b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa3e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa44	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400aa4c	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400aa4f	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400aa54	      0xe9bfeaffff	                           jmp 0x4009518	      4235	cp-demangle.c	FUNCTION_72
0x400aa59	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa60	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400aa67	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa6c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa6f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa75	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400aa7d	          0xc60369	                    mov byte [rbx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x400aa80	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400aa85	      0xe92be8ffff	                           jmp 0x40092b5	      4235	cp-demangle.c	FUNCTION_72
0x400aa8a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400aa91	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa98	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aa9d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aaa0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aaa6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400aaae	          0xc60373	                    mov byte [rbx], 0x73	      4235	cp-demangle.c	FUNCTION_72
0x400aab1	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400aab6	      0xe95deaffff	                           jmp 0x4009518	      4235	cp-demangle.c	FUNCTION_72
0x400aabb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aac2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400aac9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aace	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aad1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aad7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400aadf	          0xc6036e	                    mov byte [rbx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x400aae2	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400aae7	      0xe90aeaffff	                           jmp 0x40094f6	      4235	cp-demangle.c	FUNCTION_72
0x400aaec	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400aaf3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aafa	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400aaff	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab02	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab08	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400ab10	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400ab13	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400ab18	      0xe9b6e9ffff	                           jmp 0x40094d3	      4235	cp-demangle.c	FUNCTION_72
0x400ab1d	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab24	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400ab2b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab30	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab36	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400ab3e	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400ab41	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400ab46	      0xe966e9ffff	                           jmp 0x40094b1	      4235	cp-demangle.c	FUNCTION_72
0x400ab4b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400ab52	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab59	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab5e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab61	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab67	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400ab6f	          0xc60379	                    mov byte [rbx], 0x79	      4235	cp-demangle.c	FUNCTION_72
0x400ab72	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400ab77	      0xe909ecffff	                           jmp 0x4009785	      4235	cp-demangle.c	FUNCTION_72
0x400ab7c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab83	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400ab8a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab8f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab92	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ab98	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400aba0	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400aba5	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400aba7	      0xe9a2efffff	                           jmp 0x4009b4e	      4224	cp-demangle.c	FUNCTION_71
0x400abac	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400abb3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400abba	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400abbf	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400abc2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400abc8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400abd0	          0xc6033a	                    mov byte [rbx], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x400abd3	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400abd8	      0xe9caedffff	                           jmp 0x40099a7	      4235	cp-demangle.c	FUNCTION_72
0x400abdd	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400abe4	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400abeb	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400abf0	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400abf6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400abfe	          0xc6036d	                    mov byte [rbx], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x400ac01	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400ac06	      0xe9eeebffff	                           jmp 0x40097f9	      4235	cp-demangle.c	FUNCTION_72
0x400ac0b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac12	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400ac19	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac1e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac21	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac27	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400ac2f	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400ac32	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400ac37	      0xe9c1f0ffff	                           jmp 0x4009cfd	      4235	cp-demangle.c	FUNCTION_72
0x400ac3c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400ac43	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac4a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac4f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac52	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac58	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400ac60	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400ac63	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400ac68	      0xe96df0ffff	                           jmp 0x4009cda	      4235	cp-demangle.c	FUNCTION_72
0x400ac6d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac74	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400ac7b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac80	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac83	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ac89	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400ac91	          0xc60378	                    mov byte [rbx], 0x78	      4235	cp-demangle.c	FUNCTION_72
0x400ac94	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400ac99	      0xe91af0ffff	                           jmp 0x4009cb8	      4235	cp-demangle.c	FUNCTION_72
0x400ac9e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400aca5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400acac	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400acb1	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400acb4	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400acba	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400acc2	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400acc5	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400acca	      0xe9c6efffff	                           jmp 0x4009c95	      4235	cp-demangle.c	FUNCTION_72
0x400accf	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400acd6	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400acdd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ace2	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400ace8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400acf0	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400acf5	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400acf7	      0xe944ecffff	                           jmp 0x4009940	      4224	cp-demangle.c	FUNCTION_71
0x400acfc	      0xe800000000	                          call 0x400ad01	      5960	cp-demangle.c	FUNCTION_90
d_print_comp_inner	CALL,237:IF,91:SWITCH,4:ELSE,17:WHILE,5:FOR,3:DO,0:functions,0	6035
0x4000e30	            0x4157	                                push r15	      4623	cp-demangle.c	FUNCTION_86
0x4000e32	            0x4156	                                push r14	      4623	cp-demangle.c	FUNCTION_86
0x4000e34	            0x4155	                                push r13	      4623	cp-demangle.c	FUNCTION_86
0x4000e36	            0x4154	                                push r12	      4623	cp-demangle.c	FUNCTION_86
0x4000e38	              0x55	                                push rbp	      4623	cp-demangle.c	FUNCTION_86
0x4000e39	              0x53	                                push rbx	      4623	cp-demangle.c	FUNCTION_86
0x4000e3a	          0x4889fb	                            mov rbx, rdi	      4623	cp-demangle.c	FUNCTION_86
0x4000e3d	    0x4881ecf80000	                           sub rsp, 0xf8	      4623	cp-demangle.c	FUNCTION_86
0x4000e44	    0x64488b042528	                mov rax, qword fs:[0x28]	      4623	cp-demangle.c	FUNCTION_86
0x4000e4d	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      4623	cp-demangle.c	FUNCTION_86
0x4000e55	            0x31c0	                            xor eax, eax	      4623	cp-demangle.c	FUNCTION_86
0x4000e57	          0x4885d2	                           test rdx, rdx	      4635	cp-demangle.c	FUNCTION_86	IF_1
0x4000e5a	     0xf8480010000	                            je 0x4000fe0	      4635	cp-demangle.c	FUNCTION_86	IF_1
0x4000e60	    0x8b8730010000	           mov eax, dword [rdi + 0x130] 	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4000e66	            0x85c0	                           test eax, eax	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4000e68	     0xf8532010000	                           jne 0x4000fa0	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4000e6e	            0x8b02	                    mov eax, dword [rdx]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e70	          0x4889d5	                            mov rbp, rdx	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e73	          0x83f84f	                           cmp eax, 0x4f	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e76	     0xf87d42d0000	                            ja 0x4003c50	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e7c	            0x89c2	                            mov edx, eax	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e7e	          0x4189f4	                           mov r12d, esi	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e81	    0xff24d5000000	                       jmp qword [rdx*8]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e88	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4000e8c	          0x833838	                   cmp dword [rax], 0x38	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4000e8f	     0xf854b010000	                           jne 0x4000fe0	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4000e95	        0x488b5508	                mov rdx, qword [rbp + 8]	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4000e99	        0x488b4208	                mov rax, qword [rdx + 8]	      3237	cp-demangle.c	FUNCTION_50
0x4000e9d	          0x488b00	                    mov rax, qword [rax]	      3237	cp-demangle.c	FUNCTION_50
0x4000ea0	        0x80780163	                cmp byte [rax + 1], 0x63	      3239	cp-demangle.c	FUNCTION_50
0x4000ea4	     0xf84e4640000	                            je 0x400738e	      3239	cp-demangle.c	FUNCTION_50
0x4000eaa	        0x488d4d10	                   lea rcx, [rbp + 0x10]	      3239	cp-demangle.c	FUNCTION_50
0x4000eae	          0x4489e6	                           mov esi, r12d	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000eb1	          0x4889df	                            mov rdi, rbx	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000eb4	      0xe8d77b0000	call sym.d_maybe_print_fold_expression.isra.15	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000eb9	            0x85c0	                           test eax, eax	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000ebb	     0xf85df000000	                           jne 0x4000fa0	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000ec1	        0x488b4508	                mov rax, qword [rbp + 8]	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4000ec5	          0x833831	                   cmp dword [rax], 0x31	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4000ec8	     0xf84b7730000	                            je 0x4008285	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4000ece	        0x488b4008	                mov rax, qword [rax + 8]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000ed2	          0x488b00	                    mov rax, qword [rax]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000ed5	          0x803863	                    cmp byte [rax], 0x63	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000ed8	     0xf85f6660000	                           jne 0x40075d4	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000ede	        0x8078016c	                cmp byte [rax + 1], 0x6c	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000ee2	     0xf85ec660000	                           jne 0x40075d4	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000ee8	        0x80780200	                   cmp byte [rax + 2], 0	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000eec	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4000ef0	            0x750d	                           jne 0x4000eff	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000ef2	        0x488b4208	                mov rax, qword [rdx + 8]	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4000ef6	          0x833803	                      cmp dword [rax], 3	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4000ef9	     0xf84ca740000	                            je 0x40083c9	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4000eff	        0x488b5208	                mov rdx, qword [rdx + 8]	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4000f03	          0x4489e6	                           mov esi, r12d	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4000f06	          0x4889df	                            mov rdi, rbx	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4000f09	      0xe8d2790000	                call sym.d_print_subexpr	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4000f0e	        0x488b5508	                mov rdx, qword [rbp + 8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000f12	        0x488b4208	                mov rax, qword [rdx + 8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000f16	          0x488b00	                    mov rax, qword [rax]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000f19	           0xfb608	                   movzx ecx, byte [rax]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000f1c	          0x83f969	                           cmp ecx, 0x69	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000f1f	     0xf84e76b0000	                            je 0x4007b0c	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000f25	          0x83f963	                           cmp ecx, 0x63	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000f28	     0xf85e86b0000	                           jne 0x4007b16	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000f2e	        0x8078016c	                cmp byte [rax + 1], 0x6c	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000f32	     0xf85de6b0000	                           jne 0x4007b16	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000f38	        0x80780200	                   cmp byte [rax + 2], 0	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000f3c	     0xf85d46b0000	                           jne 0x4007b16	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000f42	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000f46	          0x4489e6	                           mov esi, r12d	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000f49	          0x4889df	                            mov rdi, rbx	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000f4c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000f50	      0xe88b790000	                call sym.d_print_subexpr	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000f55	        0x488b4508	                mov rax, qword [rbp + 8]	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f59	          0x833831	                   cmp dword [rax], 0x31	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f5c	            0x7542	                           jne 0x4000fa0	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f5e	        0x488b4008	                mov rax, qword [rax + 8]	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f62	        0x83781001	               cmp dword [rax + 0x10], 1	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f66	            0x7538	                           jne 0x4000fa0	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f68	        0x488b4008	                mov rax, qword [rax + 8]	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f6c	          0x80383e	                    cmp byte [rax], 0x3e	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f6f	            0x752f	                           jne 0x4000fa0	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000f71	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000f7c	     0xf8457760000	                            je 0x40085d9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000f82	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000f89	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000f8d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000f94	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4000f98	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4000f9f	              0x90	                                     nop	      4236	cp-demangle.c	FUNCTION_72
0x4000fa0	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	      5708	cp-demangle.c	FUNCTION_86
0x4000fa8	    0x644833042528	                xor rax, qword fs:[0x28]	      5708	cp-demangle.c	FUNCTION_86
0x4000fb1	     0xf85416f0000	                           jne 0x4007ef8	      5708	cp-demangle.c	FUNCTION_86
0x4000fb7	    0x4881c4f80000	                           add rsp, 0xf8	      5708	cp-demangle.c	FUNCTION_86
0x4000fbe	              0x5b	                                 pop rbx	      5708	cp-demangle.c	FUNCTION_86
0x4000fbf	              0x5d	                                 pop rbp	      5708	cp-demangle.c	FUNCTION_86
0x4000fc0	            0x415c	                                 pop r12	      5708	cp-demangle.c	FUNCTION_86
0x4000fc2	            0x415d	                                 pop r13	      5708	cp-demangle.c	FUNCTION_86
0x4000fc4	            0x415e	                                 pop r14	      5708	cp-demangle.c	FUNCTION_86
0x4000fc6	            0x415f	                                 pop r15	      5708	cp-demangle.c	FUNCTION_86
0x4000fc8	              0xc3	                                     ret	      5708	cp-demangle.c	FUNCTION_86
0x4000fc9	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4000fd3	          0x4585f6	                         test r14d, r14d	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4000fd6	            0x7408	                            je 0x4000fe0	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4000fd8	    0x4c89ab200100	            mov qword [rbx + 0x120], r13	      5061	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4000fdf	              0x90	                                     nop	      5061	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4000fe0	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4000fea	            0xebb4	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4000fec	        0x488b5508	                mov rdx, qword [rbp + 8]	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000ff0	      0xe8eb760000	                   call sym.d_print_comp	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000ff5	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000ffc	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001003	     0xf8412540000	                            je 0x400641b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001009	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400100d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001013	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400101a	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400101e	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4001025	     0xf84bf530000	                            je 0x40063ea	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400102b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400102f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001036	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400103d	        0xc604035b	              mov byte [rbx + rax], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x4001041	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x4001048	     0xf846b530000	                            je 0x40063b9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400104e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001052	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001058	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400105f	        0xc6041363	              mov byte [rbx + rdx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x4001063	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x400106a	     0xf8418530000	                            je 0x4006388	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001070	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001074	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400107b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001082	        0xc604036c	              mov byte [rbx + rax], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x4001086	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x400108d	     0xf84c4520000	                            je 0x4006357	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001093	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001097	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400109d	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40010a4	        0xc604136f	              mov byte [rbx + rdx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x40010a8	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x40010af	     0xf8471520000	                            je 0x4006326	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010b5	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010b9	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010c0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40010c7	        0xc604036e	              mov byte [rbx + rax], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x40010cb	    0xc68308010000	           mov byte [rbx + 0x108], 0x6e 	      4236	cp-demangle.c	FUNCTION_72
0x40010d2	     0xf841d520000	                            je 0x40062f5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010d8	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010dc	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010e2	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40010e9	        0xc6041365	              mov byte [rbx + rdx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x40010ed	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x40010f4	     0xf84cb510000	                            je 0x40062c5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010fa	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010fe	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001105	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4001109	          0x4489e6	                           mov esi, r12d	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x400110c	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4001113	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4001117	          0x4889df	                            mov rdi, rbx	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x400111a	      0xe8c1750000	                   call sym.d_print_comp	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x400111f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001126	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400112c	     0xf8465440000	                            je 0x4005597	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001132	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001136	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400113d	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4001141	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x4001148	      0xe953feffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x400114d	        0x488b5508	                mov rdx, qword [rbp + 8]	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4001151	      0xe88a750000	                   call sym.d_print_comp	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4001156	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x400115d	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001164	     0xf844d4b0000	                            je 0x4005cb7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400116a	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400116e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001174	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400117b	        0xc604135b	              mov byte [rbx + rdx], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x400117f	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x4001186	     0xf84fa4a0000	                            je 0x4005c86	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400118c	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001190	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001197	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400119e	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x40011a2	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x40011a9	     0xf84a64a0000	                            je 0x4005c55	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011af	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011b3	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011b9	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40011c0	        0xc6041362	              mov byte [rbx + rdx], 0x62	      4235	cp-demangle.c	FUNCTION_72
0x40011c4	    0xc68308010000	           mov byte [rbx + 0x108], 0x62 	      4236	cp-demangle.c	FUNCTION_72
0x40011cb	     0xf84415a0000	                            je 0x4006c12	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011d1	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011d5	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011dc	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40011e3	        0xc6040369	              mov byte [rbx + rax], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x40011e7	    0xc68308010000	           mov byte [rbx + 0x108], 0x69 	      4236	cp-demangle.c	FUNCTION_72
0x40011ee	     0xf84ee590000	                            je 0x4006be2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011f4	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011f8	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40011ff	        0xc604133a	              mov byte [rbx + rdx], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x4001203	    0xc68308010000	           mov byte [rbx + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x400120a	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x400120e	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001211	            0x740c	                            je 0x400121f	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001213	          0x8b5504	                mov edx, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001216	          0x83fa01	                              cmp edx, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001219	     0xf8eb9360000	                           jle 0x40048d8	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400121f	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4001229	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400122f	     0xf8492430000	                            je 0x40055c7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001235	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001239	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001240	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4001244	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x400124b	      0xe950fdffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x4001250	        0x488b7508	                mov rsi, qword [rbp + 8]	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4001254	          0x4531f6	                          xor r14d, r14d	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4001257	      0xe834f2ffff	                    call sym.d_find_pack	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x400125c	          0x4885c0	                           test rax, rax	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x400125f	     0xf84046e0000	                            je 0x4008069	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4001265	           0xf1f00	                         nop dword [rax]	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4001268	          0x83382f	                   cmp dword [rax], 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400126b	     0xf85db2e0000	                           jne 0x400414c	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4001271	      0x4883780800	                  cmp qword [rax + 8], 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4001276	     0xf84d02e0000	                            je 0x400414c	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400127c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x4001280	        0x4183c601	                             add r14d, 1	      4448	cp-demangle.c	FUNCTION_80	WHILE_1
0x4001284	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4001287	            0x75df	                           jne 0x4001268	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4001289	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400128d	        0x458d6eff	                     lea r13d, [r14 - 1]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001291	            0x31ed	                            xor ebp, ebp	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001293	            0xeb6a	                           jmp 0x40012ff	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001295	           0xf1f00	                         nop dword [rax]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001298	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40012a2	          0x4139ed	                           cmp r13d, ebp	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x40012a5	            0x7e4c	                           jle 0x40012f3	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x40012a7	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40012ae	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40012b4	     0xf84962a0000	                            je 0x4003d50	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40012ba	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40012be	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40012c5	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40012cc	        0xc604032c	              mov byte [rbx + rax], 0x2c	      4235	cp-demangle.c	FUNCTION_72
0x40012d0	    0xc68308010000	           mov byte [rbx + 0x108], 0x2c 	      4236	cp-demangle.c	FUNCTION_72
0x40012d7	     0xf84432a0000	                            je 0x4003d20	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40012dd	        0x4883c002	                              add rax, 2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40012e1	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40012e8	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40012ec	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40012f3	          0x83c501	                              add ebp, 1	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40012f6	          0x4439f5	                           cmp ebp, r14d	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40012f9	     0xf84a1fcffff	                            je 0x4000fa0	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40012ff	          0x4d85ff	                           test r15, r15	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001302	    0x89ab3c010000	            mov dword [rbx + 0x13c], ebp	      5647	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4001308	            0x748e	                            je 0x4001298	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400130a	        0x418b4704	                mov eax, dword [r15 + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400130e	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001311	            0x7f85	                            jg 0x4001298	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001313	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001319	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400131f	     0xf8f73ffffff	                            jg 0x4001298	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001325	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4001328	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x400132b	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400132e	        0x41894704	                mov dword [r15 + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4001332	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4001339	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400133c	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4001342	          0x4c89fa	                            mov rdx, r15	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4001345	      0x4c897c2420	             mov qword [rsp + 0x20], r15	      5724	cp-demangle.c	FUNCTION_87
0x400134a	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x400134f	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4001354	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x400135b	      0xe8d0faffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4001360	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4001365	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x400136c	      0x41836f0401	                  sub dword [r15 + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4001371	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4001378	      0xe925ffffff	                           jmp 0x40012a2	      5732	cp-demangle.c	FUNCTION_87
0x400137d	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5732	cp-demangle.c	FUNCTION_87
0x4001384	    0x41bd00000000	                             mov r13d, 0	      5732	cp-demangle.c	FUNCTION_87
0x400138a	    0x41bf00000000	                             mov r15d, 0	      5732	cp-demangle.c	FUNCTION_87
0x4001390	            0xeb2c	                           jmp 0x40013be	      5732	cp-demangle.c	FUNCTION_87
0x4001392	    0x660f1f440000	                    nop word [rax + rax]	      5732	cp-demangle.c	FUNCTION_87
0x4001398	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400139b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400139f	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013a3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40013aa	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40013ae	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40013b1	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40013b8	     0xf842a2d0000	                            je 0x40040e8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40013be	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013c4	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40013c9	            0x75cd	                           jne 0x4001398	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013cb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40013d2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40013d9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40013de	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40013e1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40013e7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40013ef	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40013f4	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40013f6	            0xeba7	                           jmp 0x400139f	      4224	cp-demangle.c	FUNCTION_71
0x40013f8	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40013ff	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001406	     0xf84c7580000	                            je 0x4006cd3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400140c	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001410	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001416	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400141d	        0xc604177b	              mov byte [rdi + rdx], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x4001421	    0xc68708010000	           mov byte [rdi + 0x108], 0x7b 	      4236	cp-demangle.c	FUNCTION_72
0x4001428	     0xf8477580000	                            je 0x4006ca5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400142e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001432	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001439	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001440	        0xc6040375	              mov byte [rbx + rax], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x4001444	    0xc68308010000	           mov byte [rbx + 0x108], 0x75 	      4236	cp-demangle.c	FUNCTION_72
0x400144b	     0xf8423580000	                            je 0x4006c74	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001451	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001455	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400145b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001462	        0xc604136e	              mov byte [rbx + rdx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x4001466	    0xc68308010000	           mov byte [rbx + 0x108], 0x6e 	      4236	cp-demangle.c	FUNCTION_72
0x400146d	     0xf84d0570000	                            je 0x4006c43	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001473	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001477	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400147e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001485	        0xc604036e	              mov byte [rbx + rax], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x4001489	    0xc68308010000	           mov byte [rbx + 0x108], 0x6e 	      4236	cp-demangle.c	FUNCTION_72
0x4001490	     0xf8439550000	                            je 0x40069cf	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001496	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400149a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014a0	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40014a7	        0xc6041361	              mov byte [rbx + rdx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x40014ab	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x40014b2	     0xf84e6540000	                            je 0x400699e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014b8	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014bc	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014c3	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40014ca	        0xc604036d	              mov byte [rbx + rax], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x40014ce	    0xc68308010000	           mov byte [rbx + 0x108], 0x6d 	      4236	cp-demangle.c	FUNCTION_72
0x40014d5	     0xf8492540000	                            je 0x400696d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014db	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014df	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014e5	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40014ec	        0xc6041365	              mov byte [rbx + rdx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x40014f0	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x40014f7	     0xf843f540000	                            je 0x400693c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014fd	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001501	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001508	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400150f	        0xc6040364	              mov byte [rbx + rax], 0x64	      4235	cp-demangle.c	FUNCTION_72
0x4001513	    0xc68308010000	           mov byte [rbx + 0x108], 0x64 	      4236	cp-demangle.c	FUNCTION_72
0x400151a	     0xf84eb530000	                            je 0x400690b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001520	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001524	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400152a	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001531	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4001535	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400153c	     0xf8498530000	                            je 0x40068da	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001542	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001546	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400154d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001554	        0xc6040374	              mov byte [rbx + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4001558	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x400155f	     0xf8444530000	                            je 0x40068a9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001565	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001569	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400156f	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001576	        0xc6041379	              mov byte [rbx + rdx], 0x79	      4235	cp-demangle.c	FUNCTION_72
0x400157a	    0xc68308010000	           mov byte [rbx + 0x108], 0x79 	      4236	cp-demangle.c	FUNCTION_72
0x4001581	     0xf84f1520000	                            je 0x4006878	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001587	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400158b	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001592	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001599	        0xc6040370	              mov byte [rbx + rax], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x400159d	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x40015a4	     0xf8454500000	                            je 0x40065fe	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015aa	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015ae	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015b4	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40015bb	        0xc6041365	              mov byte [rbx + rdx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x40015bf	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x40015c6	     0xf8402500000	                            je 0x40065ce	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015cc	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015d0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40015d7	        0xc6040323	              mov byte [rbx + rax], 0x23	      4235	cp-demangle.c	FUNCTION_72
0x40015db	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40015e3	    0xc68308010000	           mov byte [rbx + 0x108], 0x23 	      4236	cp-demangle.c	FUNCTION_72
0x40015ea	        0x488b4508	                mov rax, qword [rbp + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40015ee	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x40015f3	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x40015f8	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x40015fd	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001600	          0x4d89e6	                            mov r14, r12	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001603	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001607	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001609	      0xe800000000	                          call 0x400160e	        33	stdio2.h	FUNCTION_109	CALL_1
0x400160e	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001611	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001615	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400161b	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400161d	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400161f	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001624	            0x74e8	                            je 0x400160e	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001626	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001628	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400162b	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001630	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001633	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001637	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001639	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400163d	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400163f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001646	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400164a	          0x4d29e6	                            sub r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400164d	     0xf84a0290000	                            je 0x4003ff3	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001653	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001655	            0xeb2f	                           jmp 0x4001686	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001657	    0x660f1f840000	                    nop word [rax + rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001660	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001663	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001667	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400166b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001672	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4001676	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001679	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4001680	     0xf846d290000	                            je 0x4003ff3	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001686	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400168c	      0x450fb62c2c	            movzx r13d, byte [r12 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001691	            0x75cd	                           jne 0x4001660	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001693	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400169a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40016a1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016a6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016a9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016af	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40016b7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40016bc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40016be	            0xeba7	                           jmp 0x4001667	      4224	cp-demangle.c	FUNCTION_71
0x40016c0	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40016c7	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016ce	     0xf8496440000	                            je 0x4005b6a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016d4	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016d8	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016de	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40016e5	        0xc604177b	              mov byte [rdi + rdx], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x40016e9	    0xc68708010000	           mov byte [rdi + 0x108], 0x7b 	      4236	cp-demangle.c	FUNCTION_72
0x40016f0	     0xf84ef430000	                            je 0x4005ae5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016f6	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016fa	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001701	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001708	        0xc604036c	              mov byte [rbx + rax], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x400170c	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x4001713	     0xf849b430000	                            je 0x4005ab4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001719	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400171d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001723	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400172a	        0xc6041361	              mov byte [rbx + rdx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400172e	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4001735	     0xf8448430000	                            je 0x4005a83	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400173b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400173f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001746	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400174d	        0xc604036d	              mov byte [rbx + rax], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x4001751	    0xc68308010000	           mov byte [rbx + 0x108], 0x6d 	      4236	cp-demangle.c	FUNCTION_72
0x4001758	     0xf84f4420000	                            je 0x4005a52	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400175e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001762	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001768	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400176f	        0xc6041362	              mov byte [rbx + rdx], 0x62	      4235	cp-demangle.c	FUNCTION_72
0x4001773	    0xc68308010000	           mov byte [rbx + 0x108], 0x62 	      4236	cp-demangle.c	FUNCTION_72
0x400177a	     0xf8454570000	                            je 0x4006ed4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001780	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001784	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400178b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001792	        0xc6040364	              mov byte [rbx + rax], 0x64	      4235	cp-demangle.c	FUNCTION_72
0x4001796	    0xc68308010000	           mov byte [rbx + 0x108], 0x64 	      4236	cp-demangle.c	FUNCTION_72
0x400179d	     0xf8400570000	                            je 0x4006ea3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017a3	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017a7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017ad	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40017b4	        0xc6041361	              mov byte [rbx + rdx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x40017b8	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x40017bf	     0xf84ae560000	                            je 0x4006e73	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017c5	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017c9	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40017d0	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40017d4	    0x8b8338010000	           mov eax, dword [rbx + 0x138] 	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40017da	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40017e1	          0x83c001	                              add eax, 1	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40017e4	    0x898338010000	            mov dword [rbx + 0x138], eax	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40017ea	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x40017ee	          0x4d85ed	                           test r13, r13	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40017f1	            0x740d	                            je 0x4001800	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40017f3	        0x418b4d04	                mov ecx, dword [r13 + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40017f7	          0x83f901	                              cmp ecx, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40017fa	     0xf8eb7330000	                           jle 0x4004bb7	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4001800	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x400180a	          0x83e801	                              sub eax, 1	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400180d	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001814	    0x898338010000	            mov dword [rbx + 0x138], eax	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400181a	     0xf8422560000	                            je 0x4006e42	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001820	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001824	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400182a	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001831	        0xc6041329	              mov byte [rbx + rdx], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4001835	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x400183c	     0xf84e3430000	                            je 0x4005c25	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001842	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001846	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400184d	        0xc6040323	              mov byte [rbx + rax], 0x23	      4235	cp-demangle.c	FUNCTION_72
0x4001851	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001859	    0xc68308010000	           mov byte [rbx + 0x108], 0x23 	      4236	cp-demangle.c	FUNCTION_72
0x4001860	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001863	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001868	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x400186d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001872	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001875	          0x4d89e6	                            mov r14, r12	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001878	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400187c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x400187e	      0xe800000000	                          call 0x4001883	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001883	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001886	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400188a	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001890	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001892	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001894	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001899	            0x74e8	                            je 0x4001883	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400189b	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400189d	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018a0	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018a5	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018a8	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018ac	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018ae	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018b2	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018b4	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018bb	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40018bf	          0x4d29e6	                            sub r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018c2	     0xf8404270000	                            je 0x4003fcc	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018c8	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018ca	            0xeb2a	                           jmp 0x40018f6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018cc	         0xf1f4000	                         nop dword [rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018d0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018d3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018d7	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018db	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40018e2	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x40018e6	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018e9	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x40018f0	     0xf84d6260000	                            je 0x4003fcc	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018f6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018fc	      0x450fb62c2c	            movzx r13d, byte [r12 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001901	            0x75cd	                           jne 0x40018d0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001903	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400190a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001911	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001916	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001919	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400191f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001927	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400192c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400192e	            0xeba7	                           jmp 0x40018d7	      4224	cp-demangle.c	FUNCTION_71
0x4001930	    0x488b87280100	           mov rax, qword [rdi + 0x128] 	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001937	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      5243	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400193c	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5244	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001944	      0x4889442420	             mov qword [rsp + 0x20], rax	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001949	      0x488d442420	                   lea rax, [rsp + 0x20]	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400194e	    0x488987280100	            mov qword [rdi + 0x128], rax	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001955	    0x488b87200100	           mov rax, qword [rdi + 0x120] 	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400195c	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x4001960	      0x4889442438	             mov qword [rsp + 0x38], rax	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001965	      0xe8766d0000	                   call sym.d_print_comp	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x400196a	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x400196e	            0x85ff	                           test edi, edi	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x4001970	            0x750e	                           jne 0x4001980	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x4001972	          0x4889ea	                            mov rdx, rbp	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x4001975	          0x4489e6	                           mov esi, r12d	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x4001978	          0x4889df	                            mov rdi, rbx	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x400197b	      0xe8c0760000	                    call sym.d_print_mod	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x4001980	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001985	    0x488983280100	            mov qword [rbx + 0x128], rax	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400198c	      0xe90ff6ffff	                           jmp 0x4000fa0	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001991	    0x488bb7280100	           mov rsi, qword [rdi + 0x128] 	      5185	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001998	    0x488b97200100	           mov rdx, qword [rdi + 0x120] 	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400199f	      0x488d442440	                   lea rax, [rsp + 0x40]	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019a4	      0x48896c2448	             mov qword [rsp + 0x48], rbp	      5189	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019a9	    0xc74424500000	               mov dword [rsp + 0x50], 0	      5190	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019b1	    0x488987280100	            mov qword [rdi + 0x128], rax	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019b8	          0x4989f6	                            mov r14, rsi	      5185	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019bb	      0x4889742440	             mov qword [rsp + 0x40], rsi	      5187	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019c0	      0x4889542458	             mov qword [rsp + 0x58], rdx	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019c5	          0x4d85f6	                           test r14, r14	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019c8	          0x4889c6	                            mov rsi, rax	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019cb	     0xf84e0600000	                            je 0x4007ab1	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019d1	        0x498b5608	                mov rdx, qword [r14 + 8]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019d5	            0x8b12	                    mov edx, dword [rdx]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019d7	          0x83ea19	                           sub edx, 0x19	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019da	          0x83fa02	                              cmp edx, 2	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019dd	     0xf87ce600000	                            ja 0x4007ab1	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019e3	          0x4c89f2	                            mov rdx, r14	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019e6	    0x41bd01000000	                             mov r13d, 1	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019ec	            0xeb10	                           jmp 0x40019fe	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019ee	            0x6690	                                     nop	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019f0	        0x488b4a08	                mov rcx, qword [rdx + 8]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019f4	            0x8b09	                    mov ecx, dword [rcx]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019f6	          0x83e919	                           sub ecx, 0x19	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019f9	          0x83f902	                              cmp ecx, 2	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019fc	            0x7760	                            ja 0x4001a5e	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40019fe	        0x448b4a10	            mov r9d, dword [rdx + 0x10] 	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a02	          0x4585c9	                           test r9d, r9d	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a05	            0x754f	                           jne 0x4001a56	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a07	        0x4183fd03	                             cmp r13d, 3	      5202	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x4001a0b	     0xf87d03c0000	                            ja 0x40056e1	      5202	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x4001a11	          0x488b3a	                    mov rdi, qword [rdx]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a14	          0x4489e9	                           mov ecx, r13d	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a17	        0x4183c501	                             add r13d, 1	      5212	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a1b	        0x48c1e105	                              shl rcx, 5	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a1f	      0x48897c0c40	       mov qword [rsp + rcx + 0x40], rdi	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a24	        0x488b7a08	                mov rdi, qword [rdx + 8]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a28	      0x48897c0c48	       mov qword [rsp + rcx + 0x48], rdi	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a2d	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a31	      0x48897c0c50	       mov qword [rsp + rcx + 0x50], rdi	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a36	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a3a	      0x4889740c40	       mov qword [rsp + rcx + 0x40], rsi	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a3f	        0x488d3408	                    lea rsi, [rax + rcx]	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a43	      0x48897c0c58	       mov qword [rsp + rcx + 0x58], rdi	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a48	    0x4889b3280100	            mov qword [rbx + 0x128], rsi	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a4f	    0xc74210010000	               mov dword [rdx + 0x10], 1	      5211	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4001a56	          0x488b12	                    mov rdx, qword [rdx]	      5215	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4001a59	          0x4885d2	                           test rdx, rdx	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4001a5c	            0x7592	                           jne 0x40019f0	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4001a5e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4001a62	          0x4489e6	                           mov esi, r12d	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4001a65	          0x4889df	                            mov rdi, rbx	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4001a68	      0xe8736c0000	                   call sym.d_print_comp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4001a6d	      0x448b442450	            mov r8d, dword [rsp + 0x50] 	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4001a72	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a79	          0x4585c0	                           test r8d, r8d	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4001a7c	            0x7425	                            je 0x4001aa3	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4001a7e	      0xe91df5ffff	                           jmp 0x4000fa0	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4001a83	       0xf1f440000	                   nop dword [rax + rax]	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4001a88	        0x418d45ff	                      lea eax, [r13 - 1]	      5227	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x4001a8c	          0x4489e6	                           mov esi, r12d	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x4001a8f	          0x4889df	                            mov rdi, rbx	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x4001a92	          0x4989c5	                            mov r13, rax	      5227	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x4001a95	        0x48c1e005	                              shl rax, 5	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x4001a99	      0x488b540448	      mov rdx, qword [rsp + rax + 0x48] 	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x4001a9e	      0xe89d750000	                    call sym.d_print_mod	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x4001aa3	        0x4183fd01	                             cmp r13d, 1	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x4001aa7	            0x75df	                           jne 0x4001a88	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x4001aa9	    0x488b8b280100	           mov rcx, qword [rbx + 0x128] 	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4001ab0	        0x488d5508	                      lea rdx, [rbp + 8]	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4001ab4	          0x4489e6	                           mov esi, r12d	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4001ab7	          0x4889df	                            mov rdi, rbx	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4001aba	      0xe8019d0000	     call sym.d_print_array_type.isra.10	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4001abf	      0xe9dcf4ffff	                           jmp 0x4000fa0	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001ac4	        0x40f6c620	                          test sil, 0x20	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x4001ac8	     0xf850d340000	                           jne 0x4004edb	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x4001ace	      0x48837d0800	                  cmp qword [rbp + 8], 0	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4001ad3	     0xf84ef5a0000	                            je 0x40075c8	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4001ad9	          0x4589e5	                          mov r13d, r12d	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4001adc	        0x4183e59f	                    and r13d, 0xffffff9f	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4001ae0	        0x4183e440	                          and r12d, 0x40	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4001ae4	     0xf84a33c0000	                            je 0x400578d	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4001aea	    0x488b8b280100	           mov rcx, qword [rbx + 0x128] 	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4001af1	        0x488d5510	                   lea rdx, [rbp + 0x10]	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4001af5	          0x4489ee	                           mov esi, r13d	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4001af8	          0x4889df	                            mov rdi, rbx	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4001afb	      0xe840a00000	  call sym.d_print_function_type.isra.11	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4001b00	      0xe99bf4ffff	                           jmp 0x4000fa0	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4001b05	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b0c	          0x8b6d08	                mov ebp, dword [rbp + 8]	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x4001b0f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b15	     0xf84693b0000	                            je 0x4005684	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b1b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b1f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001b26	        0x40882c03	               mov byte [rbx + rax], bpl	      4235	cp-demangle.c	FUNCTION_72
0x4001b2a	    0x4088ab080100	             mov byte [rbx + 0x108], bpl	      4236	cp-demangle.c	FUNCTION_72
0x4001b31	      0xe96af4ffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x4001b36	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x4001b3d	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b44	     0xf84e6570000	                            je 0x4007330	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b4a	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b4e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b54	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001b5b	        0xc604176a	              mov byte [rdi + rdx], 0x6a	      4235	cp-demangle.c	FUNCTION_72
0x4001b5f	    0xc68708010000	           mov byte [rdi + 0x108], 0x6a 	      4236	cp-demangle.c	FUNCTION_72
0x4001b66	     0xf8496570000	                            je 0x4007302	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b6c	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b70	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b77	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001b7e	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4001b82	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4001b89	     0xf8442570000	                            je 0x40072d1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b8f	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b93	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b99	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001ba0	        0xc6041376	              mov byte [rbx + rdx], 0x76	      4235	cp-demangle.c	FUNCTION_72
0x4001ba4	    0xc68308010000	           mov byte [rbx + 0x108], 0x76 	      4236	cp-demangle.c	FUNCTION_72
0x4001bab	     0xf84ef560000	                            je 0x40072a0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bb1	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bb5	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bbc	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001bc3	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4001bc7	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4001bce	     0xf849b560000	                            je 0x400726f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bd4	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bd8	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bde	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001be5	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4001be9	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4001bf0	     0xf8448560000	                            je 0x400723e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bf6	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bfa	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c01	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001c08	        0xc6040372	              mov byte [rbx + rax], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4001c0c	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4001c13	     0xf84f4550000	                            je 0x400720d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c19	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c1d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c23	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001c2a	        0xc6041365	              mov byte [rbx + rdx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4001c2e	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4001c35	     0xf84a1550000	                            je 0x40071dc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c3b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c3f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c46	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001c4d	        0xc6040373	              mov byte [rbx + rax], 0x73	      4235	cp-demangle.c	FUNCTION_72
0x4001c51	    0xc68308010000	           mov byte [rbx + 0x108], 0x73 	      4236	cp-demangle.c	FUNCTION_72
0x4001c58	     0xf844d550000	                            je 0x40071ab	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c5e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c62	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c68	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001c6f	        0xc604136f	              mov byte [rbx + rdx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4001c73	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4001c7a	     0xf84fa540000	                            je 0x400717a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c80	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c84	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c8b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001c92	        0xc6040375	              mov byte [rbx + rax], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x4001c96	    0xc68308010000	           mov byte [rbx + 0x108], 0x75 	      4236	cp-demangle.c	FUNCTION_72
0x4001c9d	     0xf84a6540000	                            je 0x4007149	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ca3	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ca7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001cad	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001cb4	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4001cb8	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4001cbf	     0xf8453540000	                            je 0x4007118	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001cc5	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001cc9	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001cd0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001cd7	        0xc6040363	              mov byte [rbx + rax], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x4001cdb	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x4001ce2	     0xf84ff530000	                            je 0x40070e7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ce8	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001cec	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001cf2	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001cf9	        0xc6041365	              mov byte [rbx + rdx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4001cfd	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4001d04	     0xf84ad530000	                            je 0x40070b7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d0a	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d0e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001d15	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4001d19	          0x4489e6	                           mov esi, r12d	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4001d1c	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4001d23	        0x488b5508	                mov rdx, qword [rbp + 8]	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4001d27	          0x4889df	                            mov rdi, rbx	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4001d2a	      0xe8b1690000	                   call sym.d_print_comp	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4001d2f	      0xe96cf2ffff	                           jmp 0x4000fa0	      5611	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001d34	        0x488b5508	                mov rdx, qword [rbp + 8]	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4001d38	          0x4531ed	                          xor r13d, r13d	      5526	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001d3b	          0x833a27	                   cmp dword [rdx], 0x27	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4001d3e	     0xf846d360000	                            je 0x40053b1	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4001d44	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d4b	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d51	     0xf84604a0000	                            je 0x40067b7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d57	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d5b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001d62	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4001d66	          0x4489e6	                           mov esi, r12d	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4001d69	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4001d70	        0x488b5508	                mov rdx, qword [rbp + 8]	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4001d74	          0x4889df	                            mov rdi, rbx	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4001d77	      0xe864690000	                   call sym.d_print_comp	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x4001d7c	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d83	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d8a	     0xf849f4f0000	                            je 0x4006d2f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d90	        0x488d4201	                      lea rax, [rdx + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001d94	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001d9b	        0xc6041329	              mov byte [rbx + rdx], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4001d9f	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4001da6	        0x837d003d	                   cmp dword [rbp], 0x3d	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4001daa	     0xf8426370000	                            je 0x40054d6	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4001db0	        0x4183fd08	                             cmp r13d, 8	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4001db4	     0xf8446370000	                            je 0x4005500	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4001dba	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001dbe	          0x4489e6	                           mov esi, r12d	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001dc1	          0x4889df	                            mov rdi, rbx	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001dc4	      0xe817690000	                   call sym.d_print_comp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001dc9	      0xe9d2f1ffff	                           jmp 0x4000fa0	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001dce	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001dd5	    0x41bd00000000	                             mov r13d, 0	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001ddb	            0xeb2d	                           jmp 0x4001e0a	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001ddd	           0xf1f00	                         nop dword [rax]	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001de0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001de3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001de7	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001deb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001df2	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001df6	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001dfd	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001e04	     0xf8402230000	                            je 0x400410c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001e0a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e10	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001e15	            0x75c9	                           jne 0x4001de0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e17	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e1e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001e25	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e2a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e2d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e33	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001e3b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001e40	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001e42	            0xeba3	                           jmp 0x4001de7	      4224	cp-demangle.c	FUNCTION_71
0x4001e44	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4001e4b	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e51	     0xf8402520000	                            je 0x4007059	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e57	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e5b	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e62	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001e69	        0xc6040774	              mov byte [rdi + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4001e6d	    0xc68708010000	           mov byte [rdi + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4001e74	     0xf84b1510000	                            je 0x400702b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e7a	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e7e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e84	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001e8b	        0xc6041379	              mov byte [rbx + rdx], 0x79	      4235	cp-demangle.c	FUNCTION_72
0x4001e8f	    0xc68308010000	           mov byte [rbx + 0x108], 0x79 	      4236	cp-demangle.c	FUNCTION_72
0x4001e96	     0xf845e510000	                            je 0x4006ffa	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e9c	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ea0	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ea7	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001eae	        0xc6040370	              mov byte [rbx + rax], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4001eb2	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x4001eb9	     0xf840a510000	                            je 0x4006fc9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ebf	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ec3	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ec9	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001ed0	        0xc6041365	              mov byte [rbx + rdx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4001ed4	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4001edb	     0xf84b7500000	                            je 0x4006f98	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ee1	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ee5	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001eec	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001ef3	        0xc6040369	              mov byte [rbx + rax], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x4001ef7	    0xc68308010000	           mov byte [rbx + 0x108], 0x69 	      4236	cp-demangle.c	FUNCTION_72
0x4001efe	     0xf8463500000	                            je 0x4006f67	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f04	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f08	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f0e	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001f15	        0xc604136e	              mov byte [rbx + rdx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x4001f19	    0xc68308010000	           mov byte [rbx + 0x108], 0x6e 	      4236	cp-demangle.c	FUNCTION_72
0x4001f20	     0xf8410500000	                            je 0x4006f36	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f26	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f2a	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f31	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001f38	        0xc6040366	              mov byte [rbx + rax], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x4001f3c	    0xc68308010000	           mov byte [rbx + 0x108], 0x66 	      4236	cp-demangle.c	FUNCTION_72
0x4001f43	     0xf84bc4f0000	                            je 0x4006f05	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f49	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f4d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f53	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001f5a	        0xc604136f	              mov byte [rbx + rdx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4001f5e	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4001f65	     0xf84a1410000	                            je 0x400610c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f6b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f6f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f76	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001f7d	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4001f81	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4001f88	     0xf844d410000	                            je 0x40060db	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f8e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f92	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f98	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001f9f	        0xc6041366	              mov byte [rbx + rdx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x4001fa3	    0xc68308010000	           mov byte [rbx + 0x108], 0x66 	      4236	cp-demangle.c	FUNCTION_72
0x4001faa	     0xf84fa400000	                            je 0x40060aa	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fb0	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fb4	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fbb	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001fc2	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4001fc6	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4001fcd	     0xf84a6400000	                            je 0x4006079	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fd3	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fd7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fdd	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001fe4	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4001fe8	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4001fef	     0xf8492500000	                            je 0x4007087	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ff5	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ff9	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002000	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002004	          0x4489e6	                           mov esi, r12d	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4002007	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400200e	        0x488b5508	                mov rdx, qword [rbp + 8]	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4002012	          0x4889df	                            mov rdi, rbx	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4002015	      0xe8c6660000	                   call sym.d_print_comp	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x400201a	      0xe981efffff	                           jmp 0x4000fa0	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400201f	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002026	    0x41bd00000000	                             mov r13d, 0	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400202c	            0xeb2c	                           jmp 0x400205a	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400202e	            0x6690	                                     nop	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002030	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002033	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002037	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400203b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002042	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002046	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400204d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002054	     0xf84c01f0000	                            je 0x400401a	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400205a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002060	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002065	            0x75c9	                           jne 0x4002030	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002067	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400206e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002075	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400207a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400207d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002083	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400208b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002090	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002092	            0xeba3	                           jmp 0x4002037	      4224	cp-demangle.c	FUNCTION_71
0x4002094	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x400209b	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020a2	     0xf84a33f0000	                            je 0x400604b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020a8	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020ac	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020b2	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40020b9	        0xc6041756	              mov byte [rdi + rdx], 0x56	      4235	cp-demangle.c	FUNCTION_72
0x40020bd	    0xc68708010000	           mov byte [rdi + 0x108], 0x56 	      4236	cp-demangle.c	FUNCTION_72
0x40020c4	     0xf84533f0000	                            je 0x400601d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020ca	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020ce	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020d5	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40020dc	        0xc6040354	              mov byte [rbx + rax], 0x54	      4235	cp-demangle.c	FUNCTION_72
0x40020e0	    0xc68308010000	           mov byte [rbx + 0x108], 0x54 	      4236	cp-demangle.c	FUNCTION_72
0x40020e7	     0xf849e3e0000	                            je 0x4005f8b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020ed	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020f1	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020f7	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40020fe	        0xc6041354	              mov byte [rbx + rdx], 0x54	      4235	cp-demangle.c	FUNCTION_72
0x4002102	    0xc68308010000	           mov byte [rbx + 0x108], 0x54 	      4236	cp-demangle.c	FUNCTION_72
0x4002109	     0xf844b3e0000	                            je 0x4005f5a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400210f	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002113	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400211a	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002121	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002125	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400212c	     0xf84f73d0000	                            je 0x4005f29	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002132	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002136	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400213c	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002143	        0xc6041366	              mov byte [rbx + rdx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x4002147	    0xc68308010000	           mov byte [rbx + 0x108], 0x66 	      4236	cp-demangle.c	FUNCTION_72
0x400214e	     0xf84a43d0000	                            je 0x4005ef8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002154	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002158	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400215f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002166	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400216a	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4002171	     0xf84753e0000	                            je 0x4005fec	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002177	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400217b	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002181	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002188	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400218c	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4002193	     0xf84233e0000	                            je 0x4005fbc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002199	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400219d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40021a4	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40021a8	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40021af	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x40021b3	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40021b6	            0x740c	                            je 0x40021c4	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40021b8	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40021bb	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40021be	     0xf8ebb280000	                           jle 0x4004a7f	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40021c4	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40021ce	      0xe9cdedffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x40021d3	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4207	cp-demangle.c	FUNCTION_69
0x40021da	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40021e0	     0xf84e43c0000	                            je 0x4005eca	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40021e6	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40021ea	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40021f1	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40021f8	        0xc6040776	              mov byte [rdi + rax], 0x76	      4235	cp-demangle.c	FUNCTION_72
0x40021fc	    0xc68708010000	           mov byte [rdi + 0x108], 0x76 	      4236	cp-demangle.c	FUNCTION_72
0x4002203	     0xf84933c0000	                            je 0x4005e9c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002209	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400220d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002213	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400221a	        0xc6041374	              mov byte [rbx + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400221e	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4002225	     0xf8469400000	                            je 0x4006294	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400222b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400222f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002236	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400223d	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4002241	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4002248	     0xf8415400000	                            je 0x4006263	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400224e	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002252	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002258	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400225f	        0xc6041362	              mov byte [rbx + rdx], 0x62	      4235	cp-demangle.c	FUNCTION_72
0x4002263	    0xc68308010000	           mov byte [rbx + 0x108], 0x62 	      4236	cp-demangle.c	FUNCTION_72
0x400226a	     0xf84c23f0000	                            je 0x4006232	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002270	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002274	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400227b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002282	        0xc604036c	              mov byte [rbx + rax], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x4002286	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x400228d	     0xf846e3f0000	                            je 0x4006201	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002293	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002297	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400229d	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40022a4	        0xc6041365	              mov byte [rbx + rdx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x40022a8	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x40022af	     0xf841b3f0000	                            je 0x40061d0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022b5	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022b9	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022c0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40022c7	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40022cb	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40022d2	     0xf84c73e0000	                            je 0x400619f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022d8	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022dc	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022e2	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40022e9	        0xc6041366	              mov byte [rbx + rdx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x40022ed	    0xc68308010000	           mov byte [rbx + 0x108], 0x66 	      4236	cp-demangle.c	FUNCTION_72
0x40022f4	     0xf84743e0000	                            je 0x400616e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022fa	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022fe	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002305	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400230c	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4002310	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4002317	     0xf84203e0000	                            je 0x400613d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400231d	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002321	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002327	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400232e	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4002332	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4002339	     0xf84e3360000	                            je 0x4005a22	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400233f	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002343	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400234a	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400234e	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4002355	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4002359	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400235c	            0x740c	                            je 0x400236a	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400235e	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4002361	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4002364	     0xf8e7d270000	                           jle 0x4004ae7	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400236a	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4002374	      0xe927ecffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4002379	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4207	cp-demangle.c	FUNCTION_69
0x4002380	    0x41bd00000000	                             mov r13d, 0	      4207	cp-demangle.c	FUNCTION_69
0x4002386	            0xeb32	                           jmp 0x40023ba	      4207	cp-demangle.c	FUNCTION_69
0x4002388	     0xf1f84000000	                   nop dword [rax + rax]	      4207	cp-demangle.c	FUNCTION_69
0x4002390	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002393	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002397	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400239b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40023a2	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40023a6	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40023ad	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40023b4	     0xf84161b0000	                            je 0x4003ed0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40023ba	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40023c0	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40023c5	            0x75c9	                           jne 0x4002390	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40023c7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40023ce	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40023d5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40023da	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40023dd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40023e3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40023eb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40023f0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40023f2	            0xeba3	                           jmp 0x4002397	      4224	cp-demangle.c	FUNCTION_71
0x40023f4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40023fb	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4002401	            0xeb2f	                           jmp 0x4002432	      4224	cp-demangle.c	FUNCTION_71
0x4002403	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4002408	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400240b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400240f	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002413	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400241a	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400241e	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002425	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x400242c	     0xf84761b0000	                            je 0x4003fa8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002432	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002438	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400243d	            0x75c9	                           jne 0x4002408	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400243f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002446	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400244d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002452	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002455	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400245b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002463	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002468	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400246a	            0xeba3	                           jmp 0x400240f	      4224	cp-demangle.c	FUNCTION_71
0x400246c	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002473	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400247a	     0xf8420410000	                            je 0x40065a0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002480	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002484	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400248a	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002491	        0xc6041764	              mov byte [rdi + rdx], 0x64	      4235	cp-demangle.c	FUNCTION_72
0x4002495	    0xc68708010000	           mov byte [rdi + 0x108], 0x64 	      4236	cp-demangle.c	FUNCTION_72
0x400249c	     0xf84d0400000	                            je 0x4006572	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024a2	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024a6	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024ad	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40024b4	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x40024b8	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x40024bf	     0xf847c400000	                            je 0x4006541	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024c5	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024c9	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024cf	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40024d6	        0xc6041363	              mov byte [rbx + rdx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x40024da	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x40024e1	     0xf8429400000	                            je 0x4006510	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024e7	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024eb	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40024f2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40024f9	        0xc604036c	              mov byte [rbx + rax], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x40024fd	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x4002504	     0xf84d53f0000	                            je 0x40064df	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400250a	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400250e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002514	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400251b	        0xc6041374	              mov byte [rbx + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400251f	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4002526	     0xf84823f0000	                            je 0x40064ae	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400252c	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002530	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002537	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400253e	        0xc6040379	              mov byte [rbx + rax], 0x79	      4235	cp-demangle.c	FUNCTION_72
0x4002542	    0xc68308010000	           mov byte [rbx + 0x108], 0x79 	      4236	cp-demangle.c	FUNCTION_72
0x4002549	     0xf842e3f0000	                            je 0x400647d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400254f	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002553	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002559	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002560	        0xc6041370	              mov byte [rbx + rdx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4002564	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x400256b	     0xf84db3e0000	                            je 0x400644c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002571	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002575	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400257c	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002583	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4002587	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x400258e	     0xf84b3420000	                            je 0x4006847	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002594	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002598	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400259e	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40025a5	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40025a9	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40025b0	     0xf8461420000	                            je 0x4006817	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025b6	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025ba	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40025c1	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40025c5	          0x4489e6	                           mov esi, r12d	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x40025c8	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40025cf	        0x488b5508	                mov rdx, qword [rbp + 8]	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x40025d3	          0x4889df	                            mov rdi, rbx	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x40025d6	      0xe805610000	                   call sym.d_print_comp	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x40025db	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025e2	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025e8	     0xf8466300000	                            je 0x4005654	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025ee	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025f2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40025f9	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x40025fd	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4002604	      0xe997e9ffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x4002609	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002611	        0x448b4508	                mov r8d, dword [rbp + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002615	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x400261a	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x400261f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002624	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002626	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002629	          0x4d89e6	                            mov r14, r12	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400262c	      0xe800000000	                          call 0x4002631	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002631	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002634	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002638	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400263e	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002640	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002642	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002647	            0x74e8	                            je 0x4002631	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002649	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400264b	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400264e	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002653	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002656	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400265a	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400265c	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002660	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002662	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002666	          0x4d29e6	                            sub r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002669	     0xf8431e9ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400266f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002676	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002678	            0xeb2c	                           jmp 0x40026a6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400267a	    0x660f1f440000	                    nop word [rax + rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002680	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002683	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002687	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400268b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002692	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4002696	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002699	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x40026a0	     0xf84fae8ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026a6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40026ac	      0x450fb62c2c	            movzx r13d, byte [r12 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40026b1	            0x75cd	                           jne 0x4002680	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40026b3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026ba	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40026c1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026c6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026c9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026cf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40026d7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40026dc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40026de	            0xeba7	                           jmp 0x4002687	      4224	cp-demangle.c	FUNCTION_71
0x40026e0	        0x4c636d10	         movsxd r13, dword [rbp + 0x10] 	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x40026e4	        0x4c8b7508	                mov r14, qword [rbp + 8]	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x40026e8	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026eb	     0xf84afe8ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026f1	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026f8	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026fa	            0xeb2a	                           jmp 0x4002726	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026fc	         0xf1f4000	                         nop dword [rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002700	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002703	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002707	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400270b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002712	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4002716	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002719	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4002720	     0xf847ae8ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002726	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400272c	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002731	            0x75cd	                           jne 0x4002700	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002733	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400273a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002741	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002746	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002749	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400274f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002757	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400275c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400275e	            0xeba7	                           jmp 0x4002707	      4224	cp-demangle.c	FUNCTION_71
0x4002760	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002767	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400276d	            0xeb2b	                           jmp 0x400279a	      4224	cp-demangle.c	FUNCTION_71
0x400276f	              0x90	                                     nop	      4224	cp-demangle.c	FUNCTION_71
0x4002770	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002773	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002777	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400277b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002782	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002786	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400278d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002794	     0xf8422170000	                            je 0x4003ebc	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400279a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027a0	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40027a5	            0x75c9	                           jne 0x4002770	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027a7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027ae	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40027b5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027ba	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027bd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027c3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40027cb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40027d0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40027d2	            0xeba3	                           jmp 0x4002777	      4224	cp-demangle.c	FUNCTION_71
0x40027d4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40027db	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40027e1	            0xeb2f	                           jmp 0x4002812	      4224	cp-demangle.c	FUNCTION_71
0x40027e3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40027e8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027eb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027ef	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027f3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40027fa	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40027fe	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002805	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x400280c	     0xf84d4150000	                            je 0x4003de6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002812	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002818	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400281d	            0x75c9	                           jne 0x40027e8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400281f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002826	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400282d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002832	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002835	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400283b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002843	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002848	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400284a	            0xeba3	                           jmp 0x40027ef	      4224	cp-demangle.c	FUNCTION_71
0x400284c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002853	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4002859	            0xeb2f	                           jmp 0x400288a	      4224	cp-demangle.c	FUNCTION_71
0x400285b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4002860	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002863	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002867	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400286b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002872	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002876	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400287d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002884	     0xf8434150000	                            je 0x4003dbe	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400288a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002890	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002895	            0x75c9	                           jne 0x4002860	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002897	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400289e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40028a5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028aa	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028ad	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028b3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40028bb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40028c0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40028c2	            0xeba3	                           jmp 0x4002867	      4224	cp-demangle.c	FUNCTION_71
0x40028c4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40028cb	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40028d1	            0xeb2f	                           jmp 0x4002902	      4224	cp-demangle.c	FUNCTION_71
0x40028d3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40028d8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028db	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028df	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028e3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40028ea	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40028ee	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40028f5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40028fc	     0xf84a8140000	                            je 0x4003daa	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002902	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002908	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400290d	            0x75c9	                           jne 0x40028d8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400290f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002916	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400291d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002922	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002925	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400292b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002933	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002938	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400293a	            0xeba3	                           jmp 0x40028df	      4224	cp-demangle.c	FUNCTION_71
0x400293c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002943	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4002949	            0xeb2f	                           jmp 0x400297a	      4224	cp-demangle.c	FUNCTION_71
0x400294b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4002950	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002953	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002957	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400295b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002962	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002966	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400296d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002974	     0xf8458140000	                            je 0x4003dd2	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400297a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002980	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002985	            0x75c9	                           jne 0x4002950	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002987	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400298e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002995	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400299a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400299d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40029a3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40029ab	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40029b0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40029b2	            0xeba3	                           jmp 0x4002957	      4224	cp-demangle.c	FUNCTION_71
0x40029b4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40029bb	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40029c1	            0xeb2f	                           jmp 0x40029f2	      4224	cp-demangle.c	FUNCTION_71
0x40029c3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40029c8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029cb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029cf	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029d3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40029da	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40029de	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40029e5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40029ec	     0xf8494130000	                            je 0x4003d86	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40029f2	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029f8	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40029fd	            0x75c9	                           jne 0x40029c8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029ff	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a06	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002a0d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a12	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a15	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a1b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002a23	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002a28	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002a2a	            0xeba3	                           jmp 0x40029cf	      4224	cp-demangle.c	FUNCTION_71
0x4002a2c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002a33	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4002a39	            0xeb2f	                           jmp 0x4002a6a	      4224	cp-demangle.c	FUNCTION_71
0x4002a3b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4002a40	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a43	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a47	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a4b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002a52	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002a56	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002a5d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002a64	     0xf84ae140000	                            je 0x4003f18	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002a6a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a70	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002a75	            0x75c9	                           jne 0x4002a40	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a77	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a7e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002a85	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a8a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a8d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a93	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002a9b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002aa0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002aa2	            0xeba3	                           jmp 0x4002a47	      4224	cp-demangle.c	FUNCTION_71
0x4002aa4	        0x4183e404	                             and r12d, 4	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x4002aa8	        0x488b4508	                mov rax, qword [rbp + 8]	      5115	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x4002aac	     0xf85a7170000	                           jne 0x4004259	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x4002ab2	        0x4c636808	            movsxd r13, dword [rax + 8] 	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x4002ab6	          0x4c8b30	                    mov r14, qword [rax]	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x4002ab9	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002abc	     0xf84dee4ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002ac2	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002ac9	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002acb	            0xeb29	                           jmp 0x4002af6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002acd	           0xf1f00	                         nop dword [rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002ad0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ad3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ad7	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002adb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002ae2	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4002ae6	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002ae9	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4002af0	     0xf84aae4ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002af6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002afc	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002b01	            0x75cd	                           jne 0x4002ad0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b03	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002b0a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002b11	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002b16	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002b19	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002b1f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002b27	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002b2c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002b2e	            0xeba7	                           jmp 0x4002ad7	      4224	cp-demangle.c	FUNCTION_71
0x4002b30	    0x448bb7380100	          mov r14d, dword [rdi + 0x138] 	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4002b37	        0x488b5508	                mov rdx, qword [rbp + 8]	      5009	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b3b	          0x4585f6	                         test r14d, r14d	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4002b3e	            0x8b32	                    mov esi, dword [rdx]	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4002b40	            0x7509	                           jne 0x4002b4b	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4002b42	          0x83fe05	                              cmp esi, 5	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4002b45	     0xf84cf2c0000	                            je 0x400581a	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4002b4b	    0x488b8b200100	           mov rcx, qword [rbx + 0x120] 	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4002b52	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x4002b55	          0x83fe23	                           cmp esi, 0x23	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4002b58	     0xf8468180000	                            je 0x40043c6	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4002b5e	            0x39f0	                            cmp eax, esi	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4002b60	     0xf8460180000	                            je 0x40043c6	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4002b66	          0x83fe24	                           cmp esi, 0x24	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4002b69	     0xf84f0100000	                            je 0x4003c5f	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4002b6f	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4002b76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4002b80	      0x4889442420	             mov qword [rsp + 0x20], rax	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b85	      0x488d442420	                   lea rax, [rsp + 0x20]	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b8a	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      5090	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b8f	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5091	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b97	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b9c	    0x488983280100	            mov qword [rbx + 0x128], rax	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002ba3	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      5095	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4002ba7	          0x4d85ff	                           test r15, r15	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4002baa	     0xf85e6100000	                           jne 0x4003c96	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4002bb0	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4002bba	          0x4889ea	                            mov rdx, rbp	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4002bbd	          0x4489e6	                           mov esi, r12d	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4002bc0	          0x4889df	                            mov rdi, rbx	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4002bc3	      0xe878640000	                    call sym.d_print_mod	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4002bc8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002bcd	          0x4585f6	                         test r14d, r14d	      5106	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4002bd0	    0x488983280100	            mov qword [rbx + 0x128], rax	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002bd7	     0xf84c3e3ffff	                            je 0x4000fa0	      5106	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4002bdd	    0x4c89ab200100	            mov qword [rbx + 0x120], r13	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4002be4	      0xe9b7e3ffff	                           jmp 0x4000fa0	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4002be9	        0x4c8b7508	                mov r14, qword [rbp + 8]	      5343	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002bed	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      5344	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002bf1	          0x418b06	                    mov eax, dword [r14]	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4002bf4	          0x83f831	                           cmp eax, 0x31	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4002bf7	     0xf84d6230000	                            je 0x4004fd3	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4002bfd	          0x83f833	                           cmp eax, 0x33	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4002c00	     0xf859a5a0000	                           jne 0x40086a0	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4002c06	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c0d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c13	     0xf843a530000	                            je 0x4007f53	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c19	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002c1d	          0x4489e6	                           mov esi, r12d	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4002c20	          0x4889df	                            mov rdi, rbx	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4002c23	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002c2a	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4002c2e	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4002c35	        0x498b5608	                mov rdx, qword [r14 + 8]	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4002c39	      0xe8a25a0000	                   call sym.d_print_comp	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4002c3e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c45	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c4b	     0xf84d7520000	                            je 0x4007f28	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c51	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002c55	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002c5c	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4002c60	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4002c67	          0x4889ea	                            mov rdx, rbp	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4002c6a	          0x4489e6	                           mov esi, r12d	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4002c6d	          0x4889df	                            mov rdi, rbx	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4002c70	      0xe86b5c0000	                call sym.d_print_subexpr	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4002c75	      0xe926e3ffff	                           jmp 0x4000fa0	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4002c7a	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4002c81	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c87	     0xf8474400000	                            je 0x4006d01	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c8d	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c91	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c98	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002c9f	        0xc604076f	              mov byte [rdi + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4002ca3	    0xc68708010000	           mov byte [rdi + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4002caa	     0xf848e310000	                            je 0x4005e3e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cb0	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cb4	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cba	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002cc1	        0xc6041370	              mov byte [rbx + rdx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4002cc5	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x4002ccc	     0xf843b310000	                            je 0x4005e0d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cd2	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cd6	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cdd	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002ce4	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4002ce8	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4002cef	     0xf84e7300000	                            je 0x4005ddc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cf5	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cf9	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002cff	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002d06	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4002d0a	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4002d11	     0xf8494300000	                            je 0x4005dab	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d17	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d1b	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d22	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002d29	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4002d2d	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4002d34	     0xf8440300000	                            je 0x4005d7a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d3a	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d3e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d44	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002d4b	        0xc6041374	              mov byte [rbx + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4002d4f	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4002d56	     0xf84ed2f0000	                            je 0x4005d49	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d5c	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d60	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d67	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002d6e	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4002d72	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4002d79	     0xf84992f0000	                            je 0x4005d18	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d7f	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d83	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d89	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002d90	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4002d94	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4002d9b	     0xf84472f0000	                            je 0x4005ce8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002da1	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002da5	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002dac	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002db0	    0x488b83700100	           mov rax, qword [rbx + 0x170] 	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002db7	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4002dbe	          0x4885c0	                           test rax, rax	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002dc1	            0x741d	                            je 0x4002de0	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002dc3	    0x488b93200100	           mov rdx, qword [rbx + 0x120] 	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x4002dca	      0x4889442428	             mov qword [rsp + 0x28], rax	      6130	cp-demangle.c	FUNCTION_95	IF_1
0x4002dcf	      0x4889542420	             mov qword [rsp + 0x20], rdx	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x4002dd4	      0x488d542420	                   lea rdx, [rsp + 0x20]	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x4002dd9	    0x488993200100	            mov qword [rbx + 0x120], rdx	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x4002de0	        0x488b5508	                mov rdx, qword [rbp + 8]	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002de4	          0x833a04	                      cmp dword [rdx], 4	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002de7	     0xf841b250000	                            je 0x4005308	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002ded	          0x4489e6	                           mov esi, r12d	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002df0	          0x4889df	                            mov rdi, rbx	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002df3	      0xe8e8580000	                   call sym.d_print_comp	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002df8	    0x4883bb700100	              cmp qword [rbx + 0x170], 0	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e00	     0xf849ae1ffff	                            je 0x4000fa0	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e06	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e0b	    0x488983200100	            mov qword [rbx + 0x120], rax	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e12	      0xe989e1ffff	                           jmp 0x4000fa0	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e17	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e1e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e24	     0xf842a3d0000	                            je 0x4006b54	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e2a	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e2e	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e35	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002e3c	        0xc604076f	              mov byte [rdi + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4002e40	    0xc68708010000	           mov byte [rdi + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4002e47	     0xf84d93c0000	                            je 0x4006b26	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e4d	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e51	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e57	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002e5e	        0xc6041370	              mov byte [rbx + rdx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4002e62	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x4002e69	     0xf84863c0000	                            je 0x4006af5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e6f	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e73	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e7a	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002e81	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4002e85	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4002e8c	     0xf84323c0000	                            je 0x4006ac4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e92	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e96	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002e9c	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002ea3	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4002ea7	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4002eae	     0xf84df3b0000	                            je 0x4006a93	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002eb4	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002eb8	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ebf	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002ec6	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4002eca	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4002ed1	     0xf848b3b0000	                            je 0x4006a62	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ed7	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002edb	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ee1	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002ee8	        0xc6041374	              mov byte [rbx + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4002eec	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4002ef3	     0xf84383b0000	                            je 0x4006a31	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ef9	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002efd	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f04	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002f0b	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4002f0f	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4002f16	     0xf84e43a0000	                            je 0x4006a00	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f1c	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f20	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f26	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002f2d	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4002f31	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4002f38	     0xf84743c0000	                            je 0x4006bb2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f3e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f42	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002f49	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002f4d	          0x4489e6	                           mov esi, r12d	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002f50	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4002f57	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002f5b	          0x4889df	                            mov rdi, rbx	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002f5e	      0xe87d570000	                   call sym.d_print_comp	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002f63	      0xe938e0ffff	                           jmp 0x4000fa0	      5330	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002f68	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f6f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f75	     0xf847c260000	                            je 0x40055f7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f7b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f7f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002f86	        0xc604037e	              mov byte [rbx + rax], 0x7e	      4235	cp-demangle.c	FUNCTION_72
0x4002f8a	          0x4489e6	                           mov esi, r12d	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4002f8d	    0xc68308010000	           mov byte [rbx + 0x108], 0x7e 	      4236	cp-demangle.c	FUNCTION_72
0x4002f94	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4002f98	          0x4889df	                            mov rdi, rbx	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4002f9b	      0xe840570000	                   call sym.d_print_comp	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4002fa0	      0xe9fbdfffff	                           jmp 0x4000fa0	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002fa5	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002fac	    0x41bd00000000	                             mov r13d, 0	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002fb2	            0xeb2e	                           jmp 0x4002fe2	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002fb4	         0xf1f4000	                         nop dword [rax]	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002fb8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fbb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fbf	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fc3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002fca	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002fce	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fd5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002fdc	     0xf847e0f0000	                            je 0x4003f60	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fe2	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fe8	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002fed	            0x75c9	                           jne 0x4002fb8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fef	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ff6	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002ffd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003002	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003005	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400300b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003013	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003018	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400301a	            0xeba3	                           jmp 0x4002fbf	      4224	cp-demangle.c	FUNCTION_71
0x400301c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4003023	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4003029	            0xeb2f	                           jmp 0x400305a	      4224	cp-demangle.c	FUNCTION_71
0x400302b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4003030	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003033	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003037	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400303b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003042	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4003046	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400304d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4003054	     0xf84e20e0000	                            je 0x4003f3c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400305a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003060	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003065	            0x75c9	                           jne 0x4003030	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003067	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400306e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003075	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400307a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400307d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003083	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400308b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003090	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4003092	            0xeba3	                           jmp 0x4003037	      4224	cp-demangle.c	FUNCTION_71
0x4003094	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x400309b	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40030a1	            0xeb2f	                           jmp 0x40030d2	      4224	cp-demangle.c	FUNCTION_71
0x40030a3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40030a8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40030ab	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40030af	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40030b3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40030ba	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40030be	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40030c5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40030cc	     0xf84b20e0000	                            je 0x4003f84	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40030d2	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40030d8	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40030dd	            0x75c9	                           jne 0x40030a8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40030df	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40030e6	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40030ed	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40030f2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40030f5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40030fb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003103	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003108	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400310a	            0xeba3	                           jmp 0x40030af	      4224	cp-demangle.c	FUNCTION_71
0x400310c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4003113	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4003119	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400311f	            0xeb2d	                           jmp 0x400314e	      4224	cp-demangle.c	FUNCTION_71
0x4003121	     0xf1f80000000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4003128	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400312b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400312f	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003133	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400313a	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400313e	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003141	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4003148	     0xf84a60d0000	                            je 0x4003ef4	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400314e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003154	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003159	            0x75cd	                           jne 0x4003128	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400315b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003162	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003169	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400316e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003171	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003177	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400317f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003184	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4003186	            0xeba7	                           jmp 0x400312f	      4224	cp-demangle.c	FUNCTION_71
0x4003188	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003192	      0xe909deffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003197	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x400319b	          0x83383a	                   cmp dword [rax], 0x3a	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x400319e	     0xf853cdeffff	                           jne 0x4000fe0	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40031a4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40031a8	          0x83383b	                   cmp dword [rax], 0x3b	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40031ab	     0xf852fdeffff	                           jne 0x4000fe0	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40031b1	        0x488b5508	                mov rdx, qword [rbp + 8]	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40031b5	        0x488d4d10	                   lea rcx, [rbp + 0x10]	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40031b9	      0xe8d2580000	call sym.d_maybe_print_fold_expression.isra.15	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40031be	            0x85c0	                           test eax, eax	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40031c0	     0xf85daddffff	                           jne 0x4000fa0	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x40031c6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40031ca	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      5486	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40031ce	        0x4c8b6808	                mov r13, qword [rax + 8]	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40031d2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40031d6	        0x4c8b7008	                mov r14, qword [rax + 8]	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40031da	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5489	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40031de	        0x498b4708	                mov rax, qword [r15 + 8]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x40031e2	          0x488b00	                    mov rax, qword [rax]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x40031e5	          0x803871	                    cmp byte [rax], 0x71	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x40031e8	     0xf85cc4e0000	                           jne 0x40080ba	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x40031ee	        0x80780175	                cmp byte [rax + 1], 0x75	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x40031f2	     0xf85c24e0000	                           jne 0x40080ba	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x40031f8	        0x80780200	                   cmp byte [rax + 2], 0	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x40031fc	     0xf85b84e0000	                           jne 0x40080ba	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4003202	          0x4c89ea	                            mov rdx, r13	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4003205	          0x4489e6	                           mov esi, r12d	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4003208	          0x4889df	                            mov rdi, rbx	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x400320b	      0xe8d0560000	                call sym.d_print_subexpr	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4003210	          0x4c89fa	                            mov rdx, r15	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4003213	          0x4489e6	                           mov esi, r12d	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4003216	          0x4889df	                            mov rdi, rbx	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4003219	      0xe872550000	                call sym.d_print_expr_op	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x400321e	          0x4c89f2	                            mov rdx, r14	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4003221	          0x4489e6	                           mov esi, r12d	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4003224	          0x4889df	                            mov rdi, rbx	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4003227	      0xe8b4560000	                call sym.d_print_subexpr	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x400322c	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400322f	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003234	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003239	      0xe802cfffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400323e	          0x4889ea	                            mov rdx, rbp	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4003241	          0x4489e6	                           mov esi, r12d	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4003244	          0x4889df	                            mov rdi, rbx	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4003247	      0xe894560000	                call sym.d_print_subexpr	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x400324c	      0xe94fddffff	                           jmp 0x4000fa0	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4003251	     0xf1f80000000	                         nop dword [rax]	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4003258	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003262	      0xe939ddffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003267	        0x488b5508	                mov rdx, qword [rbp + 8]	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x400326b	      0xe870540000	                   call sym.d_print_comp	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x4003270	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x4003274	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003277	            0x740c	                            je 0x4003285	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003279	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400327c	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400327f	     0xf8eb3140000	                           jle 0x4004738	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003285	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x400328f	      0xe90cddffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003294	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4207	cp-demangle.c	FUNCTION_69
0x400329b	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      5313	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400329f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032a5	        0x458b6510	           mov r12d, dword [r13 + 0x10] 	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40032a9	     0xf8448290000	                            je 0x4005bf7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032af	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032b3	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032ba	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40032c1	        0xc604076f	              mov byte [rdi + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x40032c5	    0xc68708010000	           mov byte [rdi + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x40032cc	     0xf84f7280000	                            je 0x4005bc9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032d2	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032d6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032dc	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40032e3	        0xc6041370	              mov byte [rbx + rdx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x40032e7	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x40032ee	     0xf84a4280000	                            je 0x4005b98	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032f4	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032f8	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40032ff	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003306	        0xc6040365	              mov byte [rbx + rax], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400330a	    0xc68308010000	           mov byte [rbx + 0x108], 0x65 	      4236	cp-demangle.c	FUNCTION_72
0x4003311	     0xf846f340000	                            je 0x4006786	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003317	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400331b	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003321	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003328	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x400332c	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4003333	     0xf841c340000	                            je 0x4006755	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003339	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400333d	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003344	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400334b	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400334f	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4003356	     0xf84c8330000	                            je 0x4006724	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400335c	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003360	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003366	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400336d	        0xc6041374	              mov byte [rbx + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4003371	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4003378	     0xf8475330000	                            je 0x40066f3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400337e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003382	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003389	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003390	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4003394	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x400339b	     0xf8472270000	                            je 0x4005b13	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40033a1	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40033a5	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40033ac	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x40033b0	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x40033b7	        0x498b6d08	                mov rbp, qword [r13 + 8]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40033bb	         0xfb64d00	                   movzx ecx, byte [rbp]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40033bf	          0x8d519f	                   lea edx, [rcx - 0x61]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40033c2	          0x80fa19	                            cmp dl, 0x19	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40033c5	            0x7729	                            ja 0x40033f0	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40033c7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40033cd	     0xf8404470000	                            je 0x4007ad7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40033d3	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40033d7	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40033de	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40033e2	          0x4889d0	                            mov rax, rdx	      4236	cp-demangle.c	FUNCTION_72
0x40033e5	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40033ec	        0x498b6d08	                mov rbp, qword [r13 + 8]	      4236	cp-demangle.c	FUNCTION_72
0x40033f0	          0x4d63ec	                        movsxd r13, r12d	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x40033f3	    0x42807c2dff20	         cmp byte [rbp + r13 - 1], 0x20 	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x40033f9	            0x7508	                           jne 0x4003403	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x40033fb	      0x458d6c24ff	                     lea r13d, [r12 - 1]	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4003400	          0x4d63ed	                        movsxd r13, r13d	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4003403	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003406	     0xf8494dbffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400340c	          0x4901ed	                            add r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400340f	            0xeb2d	                           jmp 0x400343e	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003411	     0xf1f80000000	                         nop dword [rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003418	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400341b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400341f	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003423	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400342a	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x400342e	          0x4c39ed	                            cmp rbp, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003431	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003438	     0xf8462dbffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400343e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003444	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003449	            0x75cd	                           jne 0x4003418	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400344b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003452	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003459	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400345e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003461	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003467	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400346f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003474	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4003476	            0xeba7	                           jmp 0x400341f	      4224	cp-demangle.c	FUNCTION_71
0x4003478	        0x488b5508	                mov rdx, qword [rbp + 8]	      5300	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400347c	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      5301	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003480	          0x4885d2	                           test rdx, rdx	      5303	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_56
0x4003483	            0x7405	                            je 0x400348a	      5303	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_56
0x4003485	      0xe856520000	                   call sym.d_print_comp	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x400348a	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003491	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003497	     0xf8453240000	                            je 0x40058f0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400349d	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034a1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40034a8	          0x4489e6	                           mov esi, r12d	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40034ab	        0xc604037b	              mov byte [rbx + rax], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x40034af	          0x4889ea	                            mov rdx, rbp	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40034b2	    0xc68308010000	           mov byte [rbx + 0x108], 0x7b 	      4236	cp-demangle.c	FUNCTION_72
0x40034b9	          0x4889df	                            mov rdi, rbx	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40034bc	      0xe81f520000	                   call sym.d_print_comp	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40034c1	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034c8	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034ce	     0xf8450210000	                            je 0x4005624	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034d4	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034d8	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40034df	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x40034e3	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x40034ea	      0xe9b1daffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x40034ef	        0x488b5508	                mov rdx, qword [rbp + 8]	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x40034f3	          0x4885d2	                           test rdx, rdx	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x40034f6	            0x7405	                            je 0x40034fd	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x40034f8	      0xe8e3510000	                   call sym.d_print_comp	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40034fd	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x4003502	     0xf8498daffff	                            je 0x4000fa0	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x4003508	    0x4c8bab000100	           mov r13, qword [rbx + 0x100] 	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x400350f	    0x4981fdfd0000	                           cmp r13, 0xfd	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x4003516	     0xf876a1f0000	                            ja 0x4005486	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x400351c	        0x4d8d7502	                      lea r14, [r13 + 2]	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x4003520	      0x42c6042b2c	              mov byte [rbx + r13], 0x2c	      4235	cp-demangle.c	FUNCTION_72
0x4003525	          0x4489e6	                           mov esi, r12d	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4003528	          0x4889df	                            mov rdi, rbx	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400352b	    0x4c89b3000100	            mov qword [rbx + 0x100], r14	      4235	cp-demangle.c	FUNCTION_72
0x4003532	    0x42c6442b0120	         mov byte [rbx + r13 + 1], 0x20 	      4235	cp-demangle.c	FUNCTION_72
0x4003538	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400353f	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4003543	    0x4c8bbb400100	           mov r15, qword [rbx + 0x140] 	      5289	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x400354a	      0xe891510000	                   call sym.d_print_comp	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400354f	    0x4c3bbb400100	           cmp r15, qword [rbx + 0x140] 	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003556	     0xf8544daffff	                           jne 0x4000fa0	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x400355c	    0x4c39b3000100	           cmp qword [rbx + 0x100], r14 	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003563	     0xf8537daffff	                           jne 0x4000fa0	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003569	    0x4c89ab000100	            mov qword [rbx + 0x100], r13	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003570	      0xe92bdaffff	                           jmp 0x4000fa0	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003575	           0xf1f00	                         nop dword [rax]	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003578	      0x66837d1200	                cmp word [rbp + 0x12], 0	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x400357d	     0xf8598190000	                           jne 0x4004f1b	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x4003583	        0x488b5508	                mov rdx, qword [rbp + 8]	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x4003587	    0x48817a080000	                  cmp qword [rdx + 8], 0	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x400358f	     0xf847a190000	                            je 0x4004f0f	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x4003595	          0x4489e6	                           mov esi, r12d	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x4003598	          0x4889df	                            mov rdi, rbx	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x400359b	      0xe840510000	                   call sym.d_print_comp	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x40035a0	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035a7	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035ae	     0xf84013f0000	                            je 0x40074b5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035b4	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035b8	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40035bf	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40035c3	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40035ca	      0x66837d1000	                cmp word [rbp + 0x10], 0	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x40035cf	     0xf84b00b0000	                            je 0x4004185	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x40035d5	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035db	     0xf8427440000	                            je 0x4007a08	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035e1	        0x488d4801	                      lea rcx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035e5	    0x4881f9ff0000	                           cmp rcx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035ec	    0x48898b000100	            mov qword [rbx + 0x100], rcx	      4235	cp-demangle.c	FUNCTION_72
0x40035f3	        0xc604035f	              mov byte [rbx + rax], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x40035f7	    0xc68308010000	           mov byte [rbx + 0x108], 0x5f 	      4236	cp-demangle.c	FUNCTION_72
0x40035fe	     0xf84d3430000	                            je 0x40079d7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003604	        0x488d5101	                      lea rdx, [rcx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003608	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400360f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003616	        0xc6040b41	              mov byte [rbx + rcx], 0x41	      4235	cp-demangle.c	FUNCTION_72
0x400361a	    0xc68308010000	           mov byte [rbx + 0x108], 0x41 	      4236	cp-demangle.c	FUNCTION_72
0x4003621	     0xf847f430000	                            je 0x40079a6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003627	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400362b	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003631	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003638	        0xc6041363	              mov byte [rbx + rdx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400363c	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x4003643	     0xf842c430000	                            je 0x4007975	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003649	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400364d	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003654	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400365b	        0xc6040363	              mov byte [rbx + rax], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400365f	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x4003666	     0xf84b3410000	                            je 0x400781f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400366c	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003670	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003676	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400367d	        0xc6041375	              mov byte [rbx + rdx], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x4003681	    0xc68308010000	           mov byte [rbx + 0x108], 0x75 	      4236	cp-demangle.c	FUNCTION_72
0x4003688	     0xf8461410000	                            je 0x40077ef	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400368e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003692	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003699	        0xc604036d	              mov byte [rbx + rax], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x400369d	    0xc68308010000	           mov byte [rbx + 0x108], 0x6d 	      4236	cp-demangle.c	FUNCTION_72
0x40036a4	      0xe9f7d8ffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x40036a9	        0x488b5508	                mov rdx, qword [rbp + 8]	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x40036ad	      0xe82e500000	                   call sym.d_print_comp	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x40036b2	      0xe9e9d8ffff	                           jmp 0x4000fa0	      5123	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40036b7	        0x488b5508	                mov rdx, qword [rbp + 8]	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x40036bb	      0xe8d0500000	                call sym.d_print_expr_op	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x40036c0	      0xe9dbd8ffff	                           jmp 0x4000fa0	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40036c5	        0x40f6c604	                             test sil, 4	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40036c9	    0x4c8baf700100	           mov r13, qword [rdi + 0x170] 	      4795	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40036d0	    0x4c8bb7280100	           mov r14, qword [rdi + 0x128] 	      4802	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40036d7	    0x4889af700100	            mov qword [rdi + 0x170], rbp	      4796	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40036de	    0x48c787280100	              mov qword [rdi + 0x128], 0	      4803	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40036e9	        0x488b5508	                mov rdx, qword [rbp + 8]	      4805	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40036ed	            0x7410	                            je 0x40036ff	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40036ef	            0x8b02	                    mov eax, dword [rdx]	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40036f1	            0x85c0	                           test eax, eax	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40036f3	            0x750a	                           jne 0x40036ff	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40036f5	        0x837a1006	               cmp dword [rdx + 0x10], 6	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40036f9	     0xf844a3d0000	                            je 0x4007449	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x40036ff	          0x4489e6	                           mov esi, r12d	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4003702	          0x4889df	                            mov rdi, rbx	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4003705	      0xe8d64f0000	                   call sym.d_print_comp	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x400370a	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3c 	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x4003711	     0xf84401d0000	                            je 0x4005457	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x4003717	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x400371e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003724	     0xf8458340000	                            je 0x4006b82	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400372a	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400372e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003735	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x4003739	          0x4489e6	                           mov esi, r12d	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x400373c	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x4003743	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x4003747	          0x4889df	                            mov rdi, rbx	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x400374a	      0xe8914f0000	                   call sym.d_print_comp	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x400374f	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3e 	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x4003756	     0xf84cc1c0000	                            je 0x4005428	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x400375c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x4003763	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003769	     0xf8478300000	                            je 0x40067e7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400376f	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003773	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400377a	        0xc604033e	              mov byte [rbx + rax], 0x3e	      4235	cp-demangle.c	FUNCTION_72
0x400377e	    0xc68308010000	           mov byte [rbx + 0x108], 0x3e 	      4236	cp-demangle.c	FUNCTION_72
0x4003785	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      4832	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400378c	    0x4c89ab700100	            mov qword [rbx + 0x170], r13	      4833	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003793	      0xe908d8ffff	                           jmp 0x4000fa0	      4835	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003798	    0x4c8bbf280100	           mov r15, qword [rdi + 0x128] 	      4690	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400379f	    0x48c787280100	              mov qword [rdi + 0x128], 0	      4691	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40037aa	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      4693	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40037ae	          0x4d85ed	                           test r13, r13	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037b1	     0xf8486090000	                            je 0x400413d	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037b7	        0x418b7500	                    mov esi, dword [r13]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x40037bb	    0x488b97200100	           mov rdx, qword [rdi + 0x120] 	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037c2	      0x488d442440	                   lea rax, [rsp + 0x40]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037c7	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037d0	      0x4c896c2448	             mov qword [rsp + 0x48], r13	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037d5	    0x488987280100	            mov qword [rdi + 0x128], rax	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037dc	    0xc74424500000	               mov dword [rsp + 0x50], 0	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037e4	          0x8d4ee4	                   lea ecx, [rsi - 0x1c]	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037e7	      0x4889542458	             mov qword [rsp + 0x58], rdx	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037ec	          0x83f933	                           cmp ecx, 0x33	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037ef	     0xf87e00b0000	                            ja 0x40043d5	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037f5	    0x48bf1f000000	            movabs rdi, 0xd00000000001f 	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40037ff	    0x41b801000000	                              mov r8d, 1	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003805	    0x41be01000000	                             mov r14d, 1	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400380b	        0x480fa3cf	                             bt rdi, rcx	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400380f	     0xf82db1e0000	                            jb 0x40056f0	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003815	          0x83fe04	                              cmp esi, 4	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4003818	            0x7516	                           jne 0x4003830	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x400381a	      0x488d442420	                   lea rax, [rsp + 0x20]	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x400381f	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4760	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4003824	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      4762	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4003829	    0x488983200100	            mov qword [rbx + 0x120], rax	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4003830	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4003834	          0x4489e6	                           mov esi, r12d	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4003837	          0x4889df	                            mov rdi, rbx	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x400383a	      0xe8a14e0000	                   call sym.d_print_comp	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x400383f	      0x41837d0004	                      cmp dword [r13], 4	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4003844	     0xf84b2440000	                            je 0x4007cfc	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x400384a	        0x418d6eff	                      lea ebp, [r14 - 1]	      4774	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x400384e	          0x4889e8	                            mov rax, rbp	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4003851	          0x4989ee	                            mov r14, rbp	      4774	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x4003854	        0x48c1e005	                              shl rax, 5	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4003858	        0x8b440450	      mov eax, dword [rsp + rax + 0x50] 	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x400385c	            0x85c0	                           test eax, eax	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x400385e	            0x753d	                           jne 0x400389d	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4003860	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003867	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400386d	     0xf848a460000	                            je 0x4007efd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003873	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003877	        0x48c1e505	                              shl rbp, 5	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400387b	          0x4489e6	                           mov esi, r12d	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400387e	          0x4889df	                            mov rdi, rbx	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4003881	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003888	      0x488b542c48	      mov rdx, qword [rsp + rbp + 0x48] 	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400388d	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4003891	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4003898	      0xe8a3570000	                    call sym.d_print_mod	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400389d	          0x4585f6	                         test r14d, r14d	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x40038a0	            0x75a8	                           jne 0x400384a	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x40038a2	    0x4c89bb280100	            mov qword [rbx + 0x128], r15	      4782	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40038a9	      0xe9f2d6ffff	                           jmp 0x4000fa0	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40038ae	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x40038b2	          0x4d85ed	                           test r13, r13	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40038b5	            0x740d	                            je 0x40038c4	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40038b7	        0x418b4504	                mov eax, dword [r13 + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40038bb	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40038be	     0xf8ed2130000	                           jle 0x4004c96	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40038c4	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40038ce	        0x41f6c404	                            test r12b, 4	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x40038d2	     0xf84df190000	                            je 0x40052b7	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x40038d8	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40038df	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40038e5	     0xf849a3b0000	                            je 0x4007485	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40038eb	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40038ef	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40038f6	        0xc604032e	              mov byte [rbx + rax], 0x2e	      4235	cp-demangle.c	FUNCTION_72
0x40038fa	    0xc68308010000	           mov byte [rbx + 0x108], 0x2e 	      4236	cp-demangle.c	FUNCTION_72
0x4003901	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4667	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003905	        0x837d0046	                   cmp dword [rbp], 0x46	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4003909	     0xf843a1e0000	                            je 0x4005749	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x400390f	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003912	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003915	     0xf8eb8140000	                           jle 0x4004dd3	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400391b	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003925	      0xe976d6ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x400392a	        0x4183e404	                             and r12d, 4	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x400392e	     0xf85a4090000	                           jne 0x40042d8	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x4003934	        0x4c636d10	         movsxd r13, dword [rbp + 0x10] 	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x4003938	        0x4c8b7508	                mov r14, qword [rbp + 8]	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x400393c	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400393f	     0xf845bd6ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003945	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400394c	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400394e	            0xeb26	                           jmp 0x4003976	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003950	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003953	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003957	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400395b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003962	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4003966	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003969	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003970	     0xf842ad6ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003976	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400397c	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003981	            0x75cd	                           jne 0x4003950	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003983	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400398a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003991	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003996	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003999	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400399f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40039a7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40039ac	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40039ae	            0xeba7	                           jmp 0x4003957	      4224	cp-demangle.c	FUNCTION_71
0x40039b0	    0x488b87280100	           mov rax, qword [rdi + 0x128] 	      4224	cp-demangle.c	FUNCTION_71
0x40039b7	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x40039ba	    0x488b8f200100	           mov rcx, qword [rdi + 0x120] 	      4633	cp-demangle.c	FUNCTION_86
0x40039c1	      0xe9baf1ffff	                           jmp 0x4002b80	      4633	cp-demangle.c	FUNCTION_86
0x40039c6	    0x488bbf280100	           mov rdi, qword [rdi + 0x128] 	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x40039cd	          0x4885ff	                           test rdi, rdi	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x40039d0	     0xf8457490000	                            je 0x400832d	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x40039d6	          0x4889fa	                            mov rdx, rdi	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x40039d9	     0xf1f80000000	                         nop dword [rax]	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x40039e0	        0x448b7a10	           mov r15d, dword [rdx + 0x10] 	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x40039e4	          0x4585ff	                         test r15d, r15d	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x40039e7	            0x7516	                           jne 0x40039ff	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x40039e9	        0x488b4a08	                mov rcx, qword [rdx + 8]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x40039ed	            0x8b09	                    mov ecx, dword [rcx]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x40039ef	          0x8d71e7	                   lea esi, [rcx - 0x19]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x40039f2	          0x83fe02	                              cmp esi, 2	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x40039f5	            0x7710	                            ja 0x4003a07	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x40039f7	            0x39c8	                            cmp eax, ecx	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x40039f9	     0xf84af1a0000	                            je 0x40054ae	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x40039ff	          0x488b12	                    mov rdx, qword [rdx]	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4003a02	          0x4885d2	                           test rdx, rdx	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4003a05	            0x75d9	                           jne 0x40039e0	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4003a07	          0x4889f8	                            mov rax, rdi	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4003a0a	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x4003a0d	    0x488b8b200100	           mov rcx, qword [rbx + 0x120] 	      4633	cp-demangle.c	FUNCTION_86
0x4003a14	      0xe967f1ffff	                           jmp 0x4002b80	      4633	cp-demangle.c	FUNCTION_86
0x4003a19	        0x488b6d08	                mov rbp, qword [rbp + 8]	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003a1d	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003a24	          0x4885ed	                           test rbp, rbp	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4003a27	     0xf84830a0000	                            je 0x40044b0	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4003a2d	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a34	     0xf84a33b0000	                            je 0x40075dd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a3a	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a3e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a44	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003a4b	        0xc604177b	              mov byte [rdi + rdx], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x4003a4f	    0xc68708010000	           mov byte [rdi + 0x108], 0x7b 	      4236	cp-demangle.c	FUNCTION_72
0x4003a56	     0xf84423c0000	                            je 0x400769e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a5c	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a60	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a67	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003a6e	        0xc6040370	              mov byte [rbx + rax], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4003a72	    0xc68308010000	           mov byte [rbx + 0x108], 0x70 	      4236	cp-demangle.c	FUNCTION_72
0x4003a79	     0xf84ee3b0000	                            je 0x400766d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a7f	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a83	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a89	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003a90	        0xc6041361	              mov byte [rbx + rdx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4003a94	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4003a9b	     0xf849b3b0000	                            je 0x400763c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003aa1	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003aa5	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003aac	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003ab3	        0xc6040372	              mov byte [rbx + rax], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4003ab7	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4003abe	     0xf84473b0000	                            je 0x400760b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003ac4	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003ac8	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003ace	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003ad5	        0xc604136d	              mov byte [rbx + rdx], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x4003ad9	    0xc68308010000	           mov byte [rbx + 0x108], 0x6d 	      4236	cp-demangle.c	FUNCTION_72
0x4003ae0	     0xf84e63b0000	                            je 0x40076cc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003ae6	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003aea	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003af2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003af9	          0x4189e8	                            mov r8d, ebp	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003afc	        0xc6040323	              mov byte [rbx + rax], 0x23	      4235	cp-demangle.c	FUNCTION_72
0x4003b00	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003b05	    0xc68308010000	           mov byte [rbx + 0x108], 0x23 	      4236	cp-demangle.c	FUNCTION_72
0x4003b0c	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003b11	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003b16	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003b19	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003b1b	          0x4d89e6	                            mov r14, r12	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b1e	      0xe800000000	                          call 0x4003b23	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003b23	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b26	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b2a	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b30	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b32	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b34	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b39	            0x74e8	                            je 0x4003b23	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b3b	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b3d	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b40	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b45	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b48	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b4c	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b4e	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b52	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b54	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b5b	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003b5f	          0x4d29e6	                            sub r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b62	     0xf84f6050000	                            je 0x400415e	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b68	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b6a	            0xeb2a	                           jmp 0x4003b96	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b6c	         0xf1f4000	                         nop dword [rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b70	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b73	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b77	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b7b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003b82	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4003b86	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b89	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4003b90	     0xf84c8050000	                            je 0x400415e	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b96	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b9c	      0x450fb62c2c	            movzx r13d, byte [r12 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003ba1	            0x75cd	                           jne 0x4003b70	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003ba3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003baa	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003bb1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003bb6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003bb9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003bbf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003bc7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003bcc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4003bce	            0xeba7	                           jmp 0x4003b77	      4224	cp-demangle.c	FUNCTION_71
0x4003bd0	    0x8b8738010000	           mov eax, dword [rdi + 0x138] 	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4003bd6	            0x85c0	                           test eax, eax	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4003bd8	     0xf8561090000	                           jne 0x400453f	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4003bde	    0x4c8baf200100	           mov r13, qword [rdi + 0x120] 	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x4003be5	          0x4d85ed	                           test r13, r13	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x4003be8	     0xf84f2d3ffff	                            je 0x4000fe0	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x4003bee	        0x488b4d08	                mov rcx, qword [rbp + 8]	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4003bf2	        0x498b5508	                mov rdx, qword [r13 + 8]	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4003bf6	            0x85c9	                           test ecx, ecx	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4003bf8	            0x89c8	                            mov eax, ecx	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4003bfa	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4003bfe	     0xf88a3120000	                            js 0x4004ea7	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4003c04	          0x4885d2	                           test rdx, rdx	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4003c07	     0xf84d3d3ffff	                            je 0x4000fe0	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4003c0d	          0x833a2f	                   cmp dword [rdx], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4003c10	     0xf85cad3ffff	                           jne 0x4000fe0	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4003c16	            0x85c9	                           test ecx, ecx	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4003c18	            0x7517	                           jne 0x4003c31	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4003c1a	      0xe984120000	                           jmp 0x4004ea3	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4003c1f	              0x90	                                     nop	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4003c20	          0x833a2f	                   cmp dword [rdx], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4003c23	     0xf85b7d3ffff	                           jne 0x4000fe0	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4003c29	            0x85c0	                           test eax, eax	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4003c2b	     0xf8472120000	                            je 0x4004ea3	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4003c31	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4003c35	          0x83e801	                              sub eax, 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x4003c38	          0x4885d2	                           test rdx, rdx	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4003c3b	            0x75e3	                           jne 0x4003c20	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4003c3d	      0xe99ed3ffff	                           jmp 0x4000fe0	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4003c42	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x4003c46	      0xe8954a0000	                   call sym.d_print_comp	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x4003c4b	      0xe950d3ffff	                           jmp 0x4000fa0	      4877	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003c50	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003c5a	      0xe941d3ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003c5f	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003c66	        0x4c8b7a08	                mov r15, qword [rdx + 8]	      5074	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4003c6a	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      5090	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003c6f	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5091	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003c77	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003c7c	      0x4889442420	             mov qword [rsp + 0x20], rax	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003c81	      0x488d442420	                   lea rax, [rsp + 0x20]	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003c86	          0x4d85ff	                           test r15, r15	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4003c89	    0x488983280100	            mov qword [rbx + 0x128], rax	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003c90	     0xf840defffff	                            je 0x4002ba3	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4003c96	        0x418b4704	                mov eax, dword [r15 + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003c9a	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003c9d	     0xf8f0defffff	                            jg 0x4002bb0	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003ca3	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003ca9	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003caf	     0xf8ffbeeffff	                            jg 0x4002bb0	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003cb5	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4003cb8	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4003cbb	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4003cbe	        0x41894704	                mov dword [r15 + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4003cc2	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4003cc9	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4003ccc	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4003cd2	          0x4c89fa	                            mov rdx, r15	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4003cd5	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      5724	cp-demangle.c	FUNCTION_87
0x4003cda	      0x4889442418	             mov qword [rsp + 0x18], rax	      5725	cp-demangle.c	FUNCTION_87
0x4003cdf	      0x488d442410	                   lea rax, [rsp + 0x10]	      5726	cp-demangle.c	FUNCTION_87
0x4003ce4	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4003ceb	      0xe840d1ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4003cf0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5730	cp-demangle.c	FUNCTION_87
0x4003cf5	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4003cfa	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4003d01	      0x41836f0401	                  sub dword [r15 + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4003d06	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4003d0d	          0x4585db	                         test r11d, r11d	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4003d10	     0xf85b2eeffff	                           jne 0x4002bc8	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4003d16	      0xe99feeffff	                           jmp 0x4002bba	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4003d1b	       0xf1f440000	                   nop dword [rax + rax]	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4003d20	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d27	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003d2e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d33	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d36	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d3c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d44	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d49	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4003d4b	      0xe991d5ffff	                           jmp 0x40012e1	      4224	cp-demangle.c	FUNCTION_71
0x4003d50	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d57	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003d5e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d63	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d66	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d6c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d74	          0xc6032c	                    mov byte [rbx], 0x2c	      4235	cp-demangle.c	FUNCTION_72
0x4003d77	      0xb802000000	                              mov eax, 2	      4235	cp-demangle.c	FUNCTION_72
0x4003d7c	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4003d81	      0xe95bd5ffff	                           jmp 0x40012e1	      4235	cp-demangle.c	FUNCTION_72
0x4003d86	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4003d8a	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003d8d	            0x740c	                            je 0x4003d9b	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003d8f	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003d92	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003d95	     0xf8e140c0000	                           jle 0x40049af	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003d9b	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003da5	      0xe9f6d1ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003daa	        0x488b5508	                mov rdx, qword [rbp + 8]	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4003dae	          0x4489e6	                           mov esi, r12d	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4003db1	          0x4889df	                            mov rdi, rbx	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4003db4	      0xe827490000	                   call sym.d_print_comp	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4003db9	      0xe9e2d1ffff	                           jmp 0x4000fa0	      4944	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003dbe	        0x488b5508	                mov rdx, qword [rbp + 8]	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4003dc2	          0x4489e6	                           mov esi, r12d	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4003dc5	          0x4889df	                            mov rdi, rbx	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4003dc8	      0xe813490000	                   call sym.d_print_comp	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4003dcd	      0xe9ced1ffff	                           jmp 0x4000fa0	      4949	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003dd2	        0x488b5508	                mov rdx, qword [rbp + 8]	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4003dd6	          0x4489e6	                           mov esi, r12d	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4003dd9	          0x4889df	                            mov rdi, rbx	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4003ddc	      0xe8ff480000	                   call sym.d_print_comp	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4003de1	      0xe9bad1ffff	                           jmp 0x4000fa0	      4939	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003de6	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4003dea	          0x4489e6	                           mov esi, r12d	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4003ded	          0x4889df	                            mov rdi, rbx	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4003df0	      0xe8eb480000	                   call sym.d_print_comp	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4003df5	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4003dfc	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e02	     0xf84ba280000	                            je 0x40066c2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e08	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e0c	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e13	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003e1a	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4003e1e	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4003e25	     0xf8466280000	                            je 0x4006691	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e2b	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e2f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e35	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003e3c	        0xc6041366	              mov byte [rbx + rdx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x4003e40	    0xc68308010000	           mov byte [rbx + 0x108], 0x66 	      4236	cp-demangle.c	FUNCTION_72
0x4003e47	     0xf8413280000	                            je 0x4006660	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e4d	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e51	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e58	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003e5f	        0xc604036f	              mov byte [rbx + rax], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4003e63	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x4003e6a	     0xf84bf270000	                            je 0x400662f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e70	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e74	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e7a	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003e81	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4003e85	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4003e8c	     0xf84da1f0000	                            je 0x4005e6c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e92	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e96	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003e9d	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4003ea1	          0x4489e6	                           mov esi, r12d	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4003ea4	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4003eab	        0x488b5508	                mov rdx, qword [rbp + 8]	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4003eaf	          0x4889df	                            mov rdi, rbx	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4003eb2	      0xe829480000	                   call sym.d_print_comp	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4003eb7	      0xe9e4d0ffff	                           jmp 0x4000fa0	      4956	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003ebc	        0x488b5508	                mov rdx, qword [rbp + 8]	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4003ec0	          0x4489e6	                           mov esi, r12d	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4003ec3	          0x4889df	                            mov rdi, rbx	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4003ec6	      0xe815480000	                   call sym.d_print_comp	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4003ecb	      0xe9d0d0ffff	                           jmp 0x4000fa0	      4961	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003ed0	        0x488b6d08	                mov rbp, qword [rbp + 8]	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4003ed4	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003ed7	            0x740c	                            je 0x4003ee5	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003ed9	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003edc	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003edf	     0xf8e320b0000	                           jle 0x4004a17	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003ee5	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003eef	      0xe9acd0ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003ef4	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4003ef8	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003efb	            0x740c	                            je 0x4003f09	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003efd	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f00	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f03	     0xf8e3e0a0000	                           jle 0x4004947	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f09	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003f13	      0xe988d0ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003f18	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4003f1c	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f1f	            0x740c	                            je 0x4003f2d	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f21	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f24	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f27	     0xf8e73080000	                           jle 0x40047a0	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f2d	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003f37	      0xe964d0ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003f3c	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4003f40	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f43	            0x740c	                            je 0x4003f51	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f45	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f48	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f4b	     0xf8eb7080000	                           jle 0x4004808	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f51	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003f5b	      0xe940d0ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003f60	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4003f64	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f67	            0x740c	                            je 0x4003f75	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f69	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f6c	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f6f	     0xf8efb080000	                           jle 0x4004870	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f75	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003f7f	      0xe91cd0ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003f84	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4003f88	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f8b	            0x740c	                            je 0x4003f99	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f8d	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f90	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f93	     0xf8e37070000	                           jle 0x40046d0	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003f99	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003fa3	      0xe9f8cfffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003fa8	        0x488b6d08	                mov rbp, qword [rbp + 8]	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x4003fac	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003faf	            0x740c	                            je 0x4003fbd	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003fb1	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003fb4	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003fb7	     0xf8e7e0e0000	                           jle 0x4004e3b	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4003fbd	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003fc7	      0xe9d4cfffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4003fcc	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003fd2	     0xf848f150000	                            je 0x4005567	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003fd8	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003fdc	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003fe3	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x4003fe7	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x4003fee	      0xe9adcfffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x4003ff3	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003ff9	     0xf84b2160000	                            je 0x40056b1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003fff	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004003	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400400a	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x400400e	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x4004015	      0xe986cfffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x400401a	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x400401e	          0x4d85ed	                           test r13, r13	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004021	            0x740d	                            je 0x4004030	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004023	        0x418b5504	                mov edx, dword [r13 + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004027	          0x83fa01	                              cmp edx, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400402a	     0xf8e320d0000	                           jle 0x4004d62	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004030	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x400403a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004040	     0xf8449190000	                            je 0x400598f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004046	        0x488d4801	                      lea rcx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400404a	    0x4881f9ff0000	                           cmp rcx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004051	    0x48898b000100	            mov qword [rbx + 0x100], rcx	      4235	cp-demangle.c	FUNCTION_72
0x4004058	        0xc604032d	              mov byte [rbx + rax], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x400405c	    0xc68308010000	           mov byte [rbx + 0x108], 0x2d 	      4236	cp-demangle.c	FUNCTION_72
0x4004063	     0xf8488190000	                            je 0x40059f1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004069	        0x488d5101	                      lea rdx, [rcx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400406d	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004074	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400407b	        0xc6040b69	              mov byte [rbx + rcx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x400407f	    0xc68308010000	           mov byte [rbx + 0x108], 0x69 	      4236	cp-demangle.c	FUNCTION_72
0x4004086	     0xf8434190000	                            je 0x40059c0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400408c	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004090	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004096	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400409d	        0xc604136e	              mov byte [rbx + rdx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x40040a1	    0xc68308010000	           mov byte [rbx + 0x108], 0x6e 	      4236	cp-demangle.c	FUNCTION_72
0x40040a8	     0xf84b1180000	                            je 0x400595f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40040ae	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40040b2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40040b9	        0xc604032d	              mov byte [rbx + rax], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x40040bd	    0xc68308010000	           mov byte [rbx + 0x108], 0x2d 	      4236	cp-demangle.c	FUNCTION_72
0x40040c4	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x40040c8	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040cb	            0x740c	                            je 0x40040d9	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040cd	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040d0	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040d3	     0xf8e210c0000	                           jle 0x4004cfa	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040d9	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40040e3	      0xe9b8ceffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x40040e8	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x40040ec	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040ef	            0x740c	                            je 0x40040fd	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040f1	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040f4	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040f7	     0xf8e520a0000	                           jle 0x4004b4f	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40040fd	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4004107	      0xe994ceffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x400410c	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4004110	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004113	            0x740c	                            je 0x4004121	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004115	          0x8b4504	                mov eax, dword [rbp + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004118	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400411b	     0xf8e0d0b0000	                           jle 0x4004c2e	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004121	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x400412b	      0xe970ceffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4004130	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4729	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x4004134	          0x4d85ed	                           test r13, r13	      4730	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x4004137	     0xf85b6020000	                           jne 0x40043f3	      4730	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x400413d	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4004147	      0xe954ceffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x400414c	          0x4585f6	                         test r14d, r14d	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x400414f	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004153	     0xf8534d1ffff	                           jne 0x400128d	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4004159	      0xe942ceffff	                           jmp 0x4000fa0	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x400415e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004164	     0xf84f4310000	                            je 0x400735e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400416a	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400416e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004175	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x4004179	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x4004180	      0xe91bceffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x4004185	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400418b	     0xf8452370000	                            je 0x40078e3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004191	        0x488d4801	                      lea rcx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004195	    0x4881f9ff0000	                           cmp rcx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400419c	    0x48898b000100	            mov qword [rbx + 0x100], rcx	      4235	cp-demangle.c	FUNCTION_72
0x40041a3	        0xc604035f	              mov byte [rbx + rax], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x40041a7	    0xc68308010000	           mov byte [rbx + 0x108], 0x5f 	      4236	cp-demangle.c	FUNCTION_72
0x40041ae	     0xf84fe360000	                            je 0x40078b2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041b4	        0x488d5101	                      lea rdx, [rcx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041b8	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041bf	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40041c6	        0xc6040b46	              mov byte [rbx + rcx], 0x46	      4235	cp-demangle.c	FUNCTION_72
0x40041ca	    0xc68308010000	           mov byte [rbx + 0x108], 0x46 	      4236	cp-demangle.c	FUNCTION_72
0x40041d1	     0xf84aa360000	                            je 0x4007881	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041d7	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041db	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041e1	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40041e8	        0xc6041372	              mov byte [rbx + rdx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x40041ec	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x40041f3	     0xf8457360000	                            je 0x4007850	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041f9	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041fd	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004204	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400420b	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400420f	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4004216	     0xf8428370000	                            je 0x4007944	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400421c	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004220	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004226	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400422d	        0xc6041363	              mov byte [rbx + rdx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x4004231	    0xc68308010000	           mov byte [rbx + 0x108], 0x63 	      4236	cp-demangle.c	FUNCTION_72
0x4004238	     0xf84d6360000	                            je 0x4007914	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400423e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004242	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004249	        0xc6040374	              mov byte [rbx + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400424d	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4004254	      0xe947cdffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x4004259	        0x4c636818	         movsxd r13, dword [rax + 0x18] 	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x400425d	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x4004261	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004264	     0xf8436cdffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400426a	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004271	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004273	            0xeb29	                           jmp 0x400429e	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004275	           0xf1f00	                         nop dword [rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004278	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400427b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400427f	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004283	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400428a	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x400428e	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004291	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4004298	     0xf8402cdffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400429e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40042a4	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40042a9	            0x75cd	                           jne 0x4004278	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40042ab	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042b2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40042b9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042be	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042c1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042c7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40042cf	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40042d4	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40042d6	            0xeba7	                           jmp 0x400427f	      4224	cp-demangle.c	FUNCTION_71
0x40042d8	        0x4c636d10	         movsxd r13, dword [rbp + 0x10] 	      5746	cp-demangle.c	FUNCTION_88
0x40042dc	        0x4c8b6508	                mov r12, qword [rbp + 8]	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x40042e0	          0x4d01e5	                            add r13, r12	      5746	cp-demangle.c	FUNCTION_88
0x40042e3	          0x4d39ec	                            cmp r12, r13	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x40042e6	     0xf83b4ccffff	                           jae 0x4000fa0	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x40042ec	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x40042f3	            0xeb35	                           jmp 0x400432a	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x40042f5	           0xf1f00	                         nop dword [rax]	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x40042f8	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40042fe	     0xf8492000000	                            je 0x4004396	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004304	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004307	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400430b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004312	        0x40882c13	               mov byte [rbx + rdx], bpl	      4235	cp-demangle.c	FUNCTION_72
0x4004316	    0x4088ab080100	             mov byte [rbx + 0x108], bpl	      4236	cp-demangle.c	FUNCTION_72
0x400431d	        0x4983c401	                              add r12, 1	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4004321	          0x4d39e5	                            cmp r13, r12	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4004324	     0xf8676ccffff	                           jbe 0x4000fa0	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x400432a	          0x4c89ea	                            mov rdx, r13	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x400432d	      0x410fb62c24	                   movzx ebp, byte [r12]	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4004332	          0x4c29e2	                            sub rdx, r12	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4004335	        0x4883fa03	                              cmp rdx, 3	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4004339	            0x7ebd	                           jle 0x40042f8	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x400433b	        0x4080fd5f	                           cmp bpl, 0x5f	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x400433f	            0x75b7	                           jne 0x40042f8	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4004341	    0x41807c24015f	                cmp byte [r12 + 1], 0x5f	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4004347	            0x75af	                           jne 0x40042f8	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4004349	    0x41807c240255	                cmp byte [r12 + 2], 0x55	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x400434f	            0x75a7	                           jne 0x40042f8	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4004351	      0x4d8d742403	                      lea r14, [r12 + 3]	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4004356	          0x4d39f5	                            cmp r13, r14	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4004359	            0x769d	                           jbe 0x40042f8	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x400435b	            0x31f6	                            xor esi, esi	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x400435d	            0xeb1a	                           jmp 0x4004379	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x400435f	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4004362	        0x48c1e604	                              shl rsi, 4	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4004366	          0x4863d1	                         movsxd rdx, ecx	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4004369	        0x4983c601	                              add r14, 1	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x400436d	          0x4801d6	                            add rsi, rdx	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4004370	          0x4d39f5	                            cmp r13, r14	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4004373	     0xf8489370000	                            je 0x4007b02	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4004379	        0x410fbe16	                   movsx edx, byte [r14]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x400437d	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4004380	          0x80f909	                               cmp cl, 9	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4004383	            0x76da	                           jbe 0x400435f	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4004385	          0x8d4abf	                   lea ecx, [rdx - 0x41]	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4004388	          0x80f905	                               cmp cl, 5	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x400438b	     0xf8731110000	                            ja 0x40054c2	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4004391	          0x8d4ac9	                   lea ecx, [rdx - 0x37]	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4004394	            0xebcc	                           jmp 0x4004362	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4004396	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400439d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40043a4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40043a9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40043ac	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40043b2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40043ba	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40043bf	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40043c1	      0xe945ffffff	                           jmp 0x400430b	      4224	cp-demangle.c	FUNCTION_71
0x40043c6	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      4224	cp-demangle.c	FUNCTION_71
0x40043cd	          0x4889d5	                            mov rbp, rdx	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40043d0	      0xe9abe7ffff	                           jmp 0x4002b80	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40043d5	    0x41be01000000	                             mov r14d, 1	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40043db	          0x83fe02	                              cmp esi, 2	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40043de	     0xf8531f4ffff	                           jne 0x4003815	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40043e4	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      4727	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40043e8	      0x41837d0046	                   cmp dword [r13], 0x46	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40043ed	     0xf843dfdffff	                            je 0x4004130	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40043f3	        0x418b7500	                    mov esi, dword [r13]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40043f7	          0x8d4ee4	                   lea ecx, [rsi - 0x1c]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40043fa	          0x83f933	                           cmp ecx, 0x33	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40043fd	     0xf8712f4ffff	                            ja 0x4003815	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4004403	    0x49bb1f000000	            movabs r11, 0xd00000000001f 	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x400440d	        0x490fa3cb	                             bt r11, rcx	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4004411	     0xf8319f4ffff	                           jae 0x4003830	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4004417	        0x4183fe04	                             cmp r14d, 4	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x400441b	     0xf841cfdffff	                            je 0x400413d	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4004421	    0x488d8c24f000	                   lea rcx, [rsp + 0xf0]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004429	          0x4589f1	                           mov r9d, r14d	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400442c	        0x458d46ff	                      lea r8d, [r14 - 1]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004430	        0x49c1e105	                               shl r9, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004434	        0x4e8d1409	                     lea r10, [rcx + r9]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004438	        0x49c1e005	                               shl r8, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400443c	      0xb908000000	                              mov ecx, 8	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004441	      0x4a8d740440	              lea rsi, [rsp + r8 + 0x40]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004446	    0x498dba50ffff	                   lea rdi, [r10 - 0xb0]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400444d	      0x48897c2408	                mov qword [rsp + 8], rdi	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004452	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004454	        0x4a8d0c00	                     lea rcx, [rax + r8]	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004458	        0x418d7e01	                      lea edi, [r14 + 1]	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400445c	      0x4a894c0c40	        mov qword [rsp + r9 + 0x40], rcx	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004461	          0x4901c1	                             add r9, rax	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004464	      0x4e896c0448	        mov qword [rsp + r8 + 0x48], r13	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004469	    0x4c898b280100	             mov qword [rbx + 0x128], r9	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004470	    0x42c744045000	          mov dword [rsp + r8 + 0x50], 0	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004479	      0x4a89540458	        mov qword [rsp + r8 + 0x58], rdx	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400447e	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4752	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4004482	        0x418b7500	                    mov esi, dword [r13]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4004486	          0x8d4ee4	                   lea ecx, [rsi - 0x1c]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4004489	          0x83f933	                           cmp ecx, 0x33	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x400448c	     0xf872f3f0000	                            ja 0x40083c1	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4004492	    0x41b801000000	                              mov r8d, 1	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4004498	          0x49d3e0	                              shl r8, cl	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x400449b	          0x4d85d8	                            test r8, r11	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x400449e	     0xf8556390000	                           jne 0x4007dfa	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40044a4	          0x4189fe	                           mov r14d, edi	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40044a7	      0xe984f3ffff	                           jmp 0x4003830	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40044ac	         0xf1f4000	                         nop dword [rax]	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40044b0	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044b7	     0xf84f8360000	                            je 0x4007bb5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044bd	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044c1	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044c7	    0x488987000100	            mov qword [rdi + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40044ce	        0xc6041774	              mov byte [rdi + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x40044d2	    0xc68708010000	           mov byte [rdi + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x40044d9	     0xf84a8360000	                            je 0x4007b87	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044df	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044e3	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044ea	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40044f1	        0xc6040368	              mov byte [rbx + rax], 0x68	      4235	cp-demangle.c	FUNCTION_72
0x40044f5	    0xc68308010000	           mov byte [rbx + 0x108], 0x68 	      4236	cp-demangle.c	FUNCTION_72
0x40044fc	     0xf8454360000	                            je 0x4007b56	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004502	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004506	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400450c	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004513	        0xc6041369	              mov byte [rbx + rdx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x4004517	    0xc68308010000	           mov byte [rbx + 0x108], 0x69 	      4236	cp-demangle.c	FUNCTION_72
0x400451e	     0xf8402360000	                            je 0x4007b26	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004524	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004528	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400452f	        0xc6040373	              mov byte [rbx + rax], 0x73	      4235	cp-demangle.c	FUNCTION_72
0x4004533	    0xc68308010000	           mov byte [rbx + 0x108], 0x73 	      4236	cp-demangle.c	FUNCTION_72
0x400453a	      0xe961caffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x400453f	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x4004546	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400454c	     0xf84bc360000	                            je 0x4007c0e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004552	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004556	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400455d	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004564	        0xc6040761	              mov byte [rdi + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4004568	    0xc68708010000	           mov byte [rdi + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x400456f	     0xf8459370000	                            je 0x4007cce	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004575	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004579	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400457f	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004586	        0xc6041375	              mov byte [rbx + rdx], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x400458a	    0xc68308010000	           mov byte [rbx + 0x108], 0x75 	      4236	cp-demangle.c	FUNCTION_72
0x4004591	     0xf8406370000	                            je 0x4007c9d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004597	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400459b	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40045a2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40045a9	        0xc6040374	              mov byte [rbx + rax], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x40045ad	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x40045b4	     0xf84b2360000	                            je 0x4007c6c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40045ba	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40045be	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40045c4	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40045cb	        0xc604136f	              mov byte [rbx + rdx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x40045cf	    0xc68308010000	           mov byte [rbx + 0x108], 0x6f 	      4236	cp-demangle.c	FUNCTION_72
0x40045d6	     0xf8460360000	                            je 0x4007c3c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40045dc	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40045e0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40045e7	        0xc604033a	              mov byte [rbx + rax], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x40045eb	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40045f3	    0xc68308010000	           mov byte [rbx + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x40045fa	        0x488b4508	                mov rax, qword [rbp + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40045fe	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004603	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004608	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x400460d	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004610	          0x4d89e6	                            mov r14, r12	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004613	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004617	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004619	      0xe800000000	                          call 0x400461e	        33	stdio2.h	FUNCTION_109	CALL_1
0x400461e	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004621	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004625	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400462b	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400462d	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400462f	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004634	            0x74e8	                            je 0x400461e	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004636	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004638	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400463b	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004640	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004643	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004647	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004649	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400464d	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400464f	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004653	          0x4d29e6	                            sub r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004656	     0xf8444c9ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400465c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004663	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004665	            0xeb2f	                           jmp 0x4004696	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004667	    0x660f1f840000	                    nop word [rax + rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004670	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004673	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004677	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400467b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004682	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4004686	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004689	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4004690	     0xf840ac9ffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004696	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400469c	      0x450fb62c2c	            movzx r13d, byte [r12 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40046a1	            0x75cd	                           jne 0x4004670	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40046a3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046aa	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40046b1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046b6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046b9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046bf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40046c7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40046cc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40046ce	            0xeba7	                           jmp 0x4004677	      4224	cp-demangle.c	FUNCTION_71
0x40046d0	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40046d6	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40046dc	     0xf8fb7f8ffff	                            jg 0x4003f99	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40046e2	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x40046e5	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x40046e8	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40046eb	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x40046ee	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x40046f5	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40046f8	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x40046fe	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004701	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004706	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x400470b	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004710	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004717	      0xe814c7ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400471c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004721	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004728	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x400472c	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004733	      0xe968c8ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004738	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400473e	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004744	     0xf8f3bebffff	                            jg 0x4003285	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400474a	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x400474d	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004750	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004753	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004756	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x400475d	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004760	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004766	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004769	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x400476e	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004773	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004778	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x400477f	      0xe8acc6ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004784	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004789	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004790	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004794	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x400479b	      0xe900c8ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x40047a0	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40047a6	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40047ac	     0xf8f7bf7ffff	                            jg 0x4003f2d	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40047b2	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x40047b5	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x40047b8	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40047bb	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x40047be	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x40047c5	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40047c8	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x40047ce	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40047d1	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x40047d6	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x40047db	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x40047e0	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x40047e7	      0xe844c6ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40047ec	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x40047f1	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x40047f8	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x40047fc	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004803	      0xe998c7ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004808	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400480e	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004814	     0xf8f37f7ffff	                            jg 0x4003f51	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400481a	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x400481d	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004820	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004823	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004826	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x400482d	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004830	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004836	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004839	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x400483e	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004843	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004848	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x400484f	      0xe8dcc5ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004854	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004859	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004860	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004864	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x400486b	      0xe930c7ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004870	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004876	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400487c	     0xf8ff3f6ffff	                            jg 0x4003f75	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004882	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004885	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004888	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400488b	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x400488e	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004895	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004898	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x400489e	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40048a1	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x40048a6	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x40048ab	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x40048b0	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x40048b7	      0xe874c5ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40048bc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x40048c1	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x40048c8	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x40048cc	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x40048d3	      0xe9c8c6ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x40048d8	    0x8b8b34010000	           mov ecx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40048de	    0x81f900040000	                          cmp ecx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40048e4	     0xf8f35c9ffff	                            jg 0x400121f	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40048ea	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x40048f1	          0x83c201	                              add edx, 1	      5721	cp-demangle.c	FUNCTION_87
0x40048f4	          0x83c101	                              add ecx, 1	      5722	cp-demangle.c	FUNCTION_87
0x40048f7	          0x895504	                mov dword [rbp + 4], edx	      5721	cp-demangle.c	FUNCTION_87
0x40048fa	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40048fd	    0x898b34010000	            mov dword [rbx + 0x134], ecx	      5722	cp-demangle.c	FUNCTION_87
0x4004903	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004906	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004909	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x400490e	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004913	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004918	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x400491f	      0xe80cc5ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004924	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004929	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004930	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004934	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5731	cp-demangle.c	FUNCTION_87
0x400493b	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004942	      0xe9e2c8ffff	                           jmp 0x4001229	      5732	cp-demangle.c	FUNCTION_87
0x4004947	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400494d	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004953	     0xf8fb0f5ffff	                            jg 0x4003f09	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004959	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x400495c	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x400495f	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004962	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004965	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x400496c	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400496f	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004975	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004978	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x400497d	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004982	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004987	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x400498e	      0xe89dc4ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004993	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004998	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x400499f	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x40049a3	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x40049aa	      0xe9f1c5ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x40049af	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40049b5	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40049bb	     0xf8fdaf3ffff	                            jg 0x4003d9b	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40049c1	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x40049c4	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x40049c7	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40049ca	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x40049cd	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x40049d4	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40049d7	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x40049dd	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40049e0	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x40049e5	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x40049ea	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x40049ef	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x40049f6	      0xe835c4ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x40049fb	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004a00	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004a07	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004a0b	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004a12	      0xe989c5ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004a17	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004a1d	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004a23	     0xf8fbcf4ffff	                            jg 0x4003ee5	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004a29	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004a2c	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004a2f	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004a32	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004a35	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004a3c	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004a3f	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004a45	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004a48	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004a4d	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004a52	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004a57	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004a5e	      0xe8cdc3ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004a63	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004a68	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004a6f	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004a73	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004a7a	      0xe921c5ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004a7f	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004a85	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004a8b	     0xf8f33d7ffff	                            jg 0x40021c4	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004a91	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004a94	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004a97	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004a9a	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004a9d	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004aa4	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004aa7	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004aad	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004ab0	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004ab5	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004aba	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004abf	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004ac6	      0xe865c3ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004acb	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004ad0	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004ad7	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004adb	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004ae2	      0xe9b9c4ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004ae7	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004aed	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004af3	     0xf8f71d8ffff	                            jg 0x400236a	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004af9	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004afc	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004aff	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004b02	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004b05	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004b0c	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004b0f	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004b15	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004b18	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004b1d	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004b22	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004b27	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004b2e	      0xe8fdc2ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004b33	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004b38	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004b3f	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004b43	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004b4a	      0xe951c4ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004b4f	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004b55	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004b5b	     0xf8f9cf5ffff	                            jg 0x40040fd	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004b61	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004b64	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004b67	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004b6a	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004b6d	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004b74	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004b77	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004b7d	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004b80	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004b85	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004b8a	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004b8f	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004b96	      0xe895c2ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004b9b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004ba0	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004ba7	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004bab	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004bb2	      0xe9e9c3ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004bb7	    0x8bb334010000	           mov esi, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004bbd	    0x81fe00040000	                          cmp esi, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004bc3	     0xf8f37ccffff	                            jg 0x4001800	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004bc9	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004bd0	          0x83c101	                              add ecx, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004bd3	          0x83c601	                              add esi, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004bd6	        0x41894d04	                mov dword [r13 + 4], ecx	      5721	cp-demangle.c	FUNCTION_87
0x4004bda	          0x4c89ea	                            mov rdx, r13	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004bdd	    0x89b334010000	            mov dword [rbx + 0x134], esi	      5722	cp-demangle.c	FUNCTION_87
0x4004be3	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004be6	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004be9	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      5724	cp-demangle.c	FUNCTION_87
0x4004bee	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004bf3	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004bf8	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004bff	      0xe82cc2ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004c04	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004c09	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      5730	cp-demangle.c	FUNCTION_87
0x4004c10	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004c17	      0x41836d0401	                  sub dword [r13 + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004c1c	    0x8b8338010000	           mov eax, dword [rbx + 0x138] 	      5731	cp-demangle.c	FUNCTION_87
0x4004c22	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004c29	      0xe9dccbffff	                           jmp 0x400180a	      5732	cp-demangle.c	FUNCTION_87
0x4004c2e	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004c34	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004c3a	     0xf8fe1f4ffff	                            jg 0x4004121	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004c40	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004c43	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004c46	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004c49	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004c4c	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004c53	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004c56	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004c5c	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004c5f	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004c64	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004c69	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004c6e	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004c75	      0xe8b6c1ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004c7a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004c7f	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004c86	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004c8a	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004c91	      0xe90ac3ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004c96	    0x8b9734010000	           mov edx, dword [rdi + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004c9c	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004ca2	     0xf8f1cecffff	                            jg 0x40038c4	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004ca8	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004cab	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004cae	        0x41894504	                mov dword [r13 + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004cb2	    0x488b87480100	           mov rax, qword [rdi + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004cb9	    0x899734010000	            mov dword [rdi + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004cbf	          0x4c89ea	                            mov rdx, r13	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004cc2	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      5724	cp-demangle.c	FUNCTION_87
0x4004cc7	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004ccc	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004cd1	    0x488987480100	            mov qword [rdi + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004cd8	      0xe853c1ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004cdd	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004ce2	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004ce9	      0x41836d0401	                  sub dword [r13 + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004cee	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004cf5	      0xe9d4ebffff	                           jmp 0x40038ce	      5732	cp-demangle.c	FUNCTION_87
0x4004cfa	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d00	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d06	     0xf8fcdf3ffff	                            jg 0x40040d9	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d0c	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004d0f	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004d12	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004d15	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004d18	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004d1f	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004d22	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004d28	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004d2b	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004d30	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004d35	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004d3a	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004d41	      0xe8eac0ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004d46	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004d4b	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004d52	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004d56	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004d5d	      0xe93ec2ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004d62	    0x8b8b34010000	           mov ecx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d68	    0x81f900040000	                          cmp ecx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d6e	     0xf8fbcf2ffff	                            jg 0x4004030	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d74	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004d7b	          0x83c201	                              add edx, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004d7e	          0x83c101	                              add ecx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004d81	        0x41895504	                mov dword [r13 + 4], edx	      5721	cp-demangle.c	FUNCTION_87
0x4004d85	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004d88	    0x898b34010000	            mov dword [rbx + 0x134], ecx	      5722	cp-demangle.c	FUNCTION_87
0x4004d8e	          0x4c89ea	                            mov rdx, r13	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004d91	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004d94	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      5724	cp-demangle.c	FUNCTION_87
0x4004d99	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004d9e	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004da3	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004daa	      0xe881c0ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004daf	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004db4	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004dbb	      0x41836d0401	                  sub dword [r13 + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004dc0	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5731	cp-demangle.c	FUNCTION_87
0x4004dc7	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004dce	      0xe967f2ffff	                           jmp 0x400403a	      5732	cp-demangle.c	FUNCTION_87
0x4004dd3	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004dd9	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004ddf	     0xf8f36ebffff	                            jg 0x400391b	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004de5	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004de8	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004deb	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004dee	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004df1	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004df8	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004dfb	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004e01	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004e04	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004e09	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004e0e	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004e13	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004e1a	      0xe811c0ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004e1f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004e24	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004e2b	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004e2f	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004e36	      0xe965c1ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004e3b	    0x8b9334010000	           mov edx, dword [rbx + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004e41	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004e47	     0xf8f70f1ffff	                            jg 0x4003fbd	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004e4d	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004e50	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004e53	          0x4489e6	                           mov esi, r12d	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004e56	          0x894504	                mov dword [rbp + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004e59	    0x488b83480100	           mov rax, qword [rbx + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004e60	          0x4889df	                            mov rdi, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004e63	    0x899334010000	            mov dword [rbx + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004e69	          0x4889ea	                            mov rdx, rbp	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004e6c	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5724	cp-demangle.c	FUNCTION_87
0x4004e71	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004e76	      0x488d442420	                   lea rax, [rsp + 0x20]	      5726	cp-demangle.c	FUNCTION_87
0x4004e7b	    0x488983480100	            mov qword [rbx + 0x148], rax	      5726	cp-demangle.c	FUNCTION_87
0x4004e82	      0xe8a9bfffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004e87	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5730	cp-demangle.c	FUNCTION_87
0x4004e8c	    0x488983480100	            mov qword [rbx + 0x148], rax	      5730	cp-demangle.c	FUNCTION_87
0x4004e93	        0x836d0401	                  sub dword [rbp + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004e97	    0x83ab34010000	              sub dword [rbx + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004e9e	      0xe9fdc0ffff	                           jmp 0x4000fa0	      5732	cp-demangle.c	FUNCTION_87
0x4004ea3	        0x488b5208	                mov rdx, qword [rdx + 8]	      4368	cp-demangle.c	FUNCTION_77
0x4004ea7	          0x4885d2	                           test rdx, rdx	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x4004eaa	     0xf8430c1ffff	                            je 0x4000fe0	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x4004eb0	          0x833a2f	                   cmp dword [rdx], 0x2f	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x4004eb3	     0xf84670a0000	                            je 0x4005920	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x4004eb9	        0x498b4500	                    mov rax, qword [r13]	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4004ebd	          0x4489e6	                           mov esi, r12d	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4004ec0	          0x4889df	                            mov rdi, rbx	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4004ec3	    0x488983200100	            mov qword [rbx + 0x120], rax	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4004eca	      0xe811380000	                   call sym.d_print_comp	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4004ecf	    0x4c89ab200100	            mov qword [rbx + 0x120], r13	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4004ed6	      0xe9c5c0ffff	                           jmp 0x4000fa0	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4004edb	    0x488b8f280100	           mov rcx, qword [rdi + 0x128] 	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4004ee2	        0x4183e49f	                    and r12d, 0xffffff9f	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4004ee6	        0x488d5510	                   lea rdx, [rbp + 0x10]	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4004eea	          0x4489e6	                           mov esi, r12d	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4004eed	      0xe84e6c0000	  call sym.d_print_function_type.isra.11	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4004ef2	        0x488b5508	                mov rdx, qword [rbp + 8]	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4004ef6	          0x4885d2	                           test rdx, rdx	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4004ef9	     0xf84a1c0ffff	                            je 0x4000fa0	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4004eff	          0x4489e6	                           mov esi, r12d	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4004f02	          0x4889df	                            mov rdi, rbx	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4004f05	      0xe8d6370000	                   call sym.d_print_comp	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4004f0a	      0xe991c0ffff	                           jmp 0x4000fa0	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4004f0f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4004f16	      0xe9afe6ffff	                           jmp 0x40035ca	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4004f1b	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4004f22	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f28	     0xf840d310000	                            je 0x400803b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f2e	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f32	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f39	    0x488997000100	            mov qword [rdi + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004f40	        0xc604075f	              mov byte [rdi + rax], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x4004f44	    0xc68708010000	           mov byte [rdi + 0x108], 0x5f 	      4236	cp-demangle.c	FUNCTION_72
0x4004f4b	     0xf84bc300000	                            je 0x400800d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f51	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f55	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f5b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004f62	        0xc6041353	              mov byte [rbx + rdx], 0x53	      4235	cp-demangle.c	FUNCTION_72
0x4004f66	    0xc68308010000	           mov byte [rbx + 0x108], 0x53 	      4236	cp-demangle.c	FUNCTION_72
0x4004f6d	     0xf8469300000	                            je 0x4007fdc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f73	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f77	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f7e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004f85	        0xc6040361	              mov byte [rbx + rax], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4004f89	    0xc68308010000	           mov byte [rbx + 0x108], 0x61 	      4236	cp-demangle.c	FUNCTION_72
0x4004f90	     0xf8415300000	                            je 0x4007fab	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f96	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f9a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004fa0	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004fa7	        0xc6041374	              mov byte [rbx + rdx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4004fab	    0xc68308010000	           mov byte [rbx + 0x108], 0x74 	      4236	cp-demangle.c	FUNCTION_72
0x4004fb2	     0xf84c32f0000	                            je 0x4007f7b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004fb8	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004fbc	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004fc3	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4004fc7	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4004fce	      0xe9b0e5ffff	                           jmp 0x4003583	      4236	cp-demangle.c	FUNCTION_72
0x4004fd3	        0x498b4608	                mov rax, qword [r14 + 8]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4004fd7	          0x4c8b28	                    mov r13, qword [rax]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4004fda	      0x410fb64500	                   movzx eax, byte [r13]	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4004fdf	          0x83f861	                           cmp eax, 0x61	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4004fe2	     0xf8577050000	                           jne 0x400555f	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4004fe8	      0x41807d0164	                cmp byte [r13 + 1], 0x64	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4004fed	     0xf856c050000	                           jne 0x400555f	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4004ff3	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4004ff8	          0x8b5500	                    mov edx, dword [rbp]	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4004ffb	            0x7509	                           jne 0x4005006	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4004ffd	          0x83fa03	                              cmp edx, 3	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4005000	     0xf84cf010000	                            je 0x40051d5	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4005006	          0x83fa38	                           cmp edx, 0x38	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4005009	     0xf845a330000	                            je 0x4008369	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x400500f	          0x83f873	                           cmp eax, 0x73	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4005012	     0xf85d1010000	                           jne 0x40051e9	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4005018	      0x41807d015a	                cmp byte [r13 + 1], 0x5a	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x400501d	     0xf850d010000	                           jne 0x4005130	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4005023	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4005028	     0xf85bb010000	                           jne 0x40051e9	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x400502e	          0x4889ee	                            mov rsi, rbp	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4005031	          0x4889df	                            mov rdi, rbx	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4005034	      0xe857b4ffff	                    call sym.d_find_pack	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4005039	          0x4531c0	                            xor r8d, r8d	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400503c	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400503f	            0x751b	                           jne 0x400505c	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005041	            0xeb1e	                           jmp 0x4005061	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005043	       0xf1f440000	                   nop dword [rax + rax]	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005048	      0x4883780800	                  cmp qword [rax + 8], 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400504d	            0x7412	                            je 0x4005061	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400504f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005053	        0x4183c001	                              add r8d, 1	      4448	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005057	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400505a	            0x7405	                            je 0x4005061	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400505c	          0x83382f	                   cmp dword [rax], 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400505f	            0x74e7	                            je 0x4005048	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4005061	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005069	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x400506e	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005073	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005078	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x400507a	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_109	CALL_1
0x400507d	          0x4d89e6	                            mov r14, r12	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005080	      0xe800000000	                          call 0x4005085	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005085	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005088	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400508c	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005092	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005094	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005096	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400509b	            0x74e8	                            je 0x4005085	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400509d	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400509f	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40050a2	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40050a7	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40050aa	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40050ae	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40050b0	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40050b4	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40050b6	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40050ba	          0x4d29e6	                            sub r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050bd	     0xf84ddbeffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050c3	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050ca	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050cc	            0xeb28	                           jmp 0x40050f6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050ce	            0x6690	                                     nop	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050d0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050d3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050d7	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050db	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40050e2	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x40050e6	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050e9	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x40050f0	     0xf84aabeffff	                            je 0x4000fa0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40050f6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050fc	      0x450fb62c2c	            movzx r13d, byte [r12 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005101	            0x75cd	                           jne 0x40050d0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005103	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400510a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005111	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005116	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005119	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400511f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005127	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400512c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400512e	            0xeba7	                           jmp 0x40050d7	      4224	cp-demangle.c	FUNCTION_71
0x4005130	      0x41807d0150	                cmp byte [r13 + 1], 0x50	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4005135	     0xf85ae000000	                           jne 0x40051e9	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x400513b	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4005140	     0xf85a3000000	                           jne 0x40051e9	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4005146	          0x4885ed	                           test rbp, rbp	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005149	     0xf8401350000	                            je 0x4008650	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x400514f	          0x83fa2f	                           cmp edx, 0x2f	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005152	     0xf85f8340000	                           jne 0x4008650	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005158	        0x488b4508	                mov rax, qword [rbp + 8]	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x400515c	          0x4531c0	                            xor r8d, r8d	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x400515f	          0x4885c0	                           test rax, rax	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4005162	     0xf84211c0000	                            je 0x4006d89	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4005168	          0x4589c7	                           mov r15d, r8d	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x400516b	            0xeb2b	                           jmp 0x4005198	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x400516d	           0xf1f00	                         nop dword [rax]	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4005170	        0x4183c701	                             add r15d, 1	      4473	cp-demangle.c	FUNCTION_81	FOR_1	ELSE_1
0x4005174	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4462	cp-demangle.c	FUNCTION_81	FOR_1
0x4005178	          0x4885ed	                           test rbp, rbp	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x400517b	     0xf84051c0000	                            je 0x4006d86	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005181	        0x837d002f	                   cmp dword [rbp], 0x2f	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4005185	     0xf85fb1b0000	                           jne 0x4006d86	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x400518b	        0x488b4508	                mov rax, qword [rbp + 8]	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x400518f	          0x4885c0	                           test rax, rax	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4005192	     0xf84ee1b0000	                            je 0x4006d86	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4005198	          0x83384a	                   cmp dword [rax], 0x4a	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x400519b	            0x75d3	                           jne 0x4005170	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x400519d	        0x488b7008	                mov rsi, qword [rax + 8]	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x40051a1	          0x4889df	                            mov rdi, rbx	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x40051a4	      0xe8e7b2ffff	                    call sym.d_find_pack	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x40051a9	            0x31d2	                            xor edx, edx	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051ab	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051ae	            0x751b	                           jne 0x40051cb	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051b0	            0xeb1e	                           jmp 0x40051d0	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051b2	    0x660f1f440000	                    nop word [rax + rax]	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051b8	      0x4883780800	                  cmp qword [rax + 8], 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051bd	            0x7411	                            je 0x40051d0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051c3	          0x83c201	                              add edx, 1	      4448	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051c6	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051c9	            0x7405	                            je 0x40051d0	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051cb	          0x83382f	                   cmp dword [rax], 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051ce	            0x74e8	                            je 0x40051b8	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40051d0	          0x4101d7	                           add r15d, edx	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x40051d3	            0xeb9f	                           jmp 0x4005174	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x40051d5	        0x488b4508	                mov rax, qword [rbp + 8]	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40051d9	          0x833801	                      cmp dword [rax], 1	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40051dc	            0x750b	                           jne 0x40051e9	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40051de	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40051e2	          0x833a29	                   cmp dword [rdx], 0x29	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40051e5	        0x480f44e8	                          cmove rbp, rax	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40051e9	          0x4c89f2	                            mov rdx, r14	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x40051ec	          0x4489e6	                           mov esi, r12d	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x40051ef	          0x4889df	                            mov rdi, rbx	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x40051f2	      0xe899350000	                call sym.d_print_expr_op	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x40051f7	          0x4d85ed	                           test r13, r13	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x40051fa	     0xf8467daffff	                            je 0x4002c67	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4005200	      0x410fb64500	                   movzx eax, byte [r13]	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4005205	          0x83f867	                           cmp eax, 0x67	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4005208	            0x7529	                           jne 0x4005233	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x400520a	      0x41807d0173	                cmp byte [r13 + 1], 0x73	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x400520f	     0xf8552daffff	                           jne 0x4002c67	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4005215	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x400521a	     0xf8547daffff	                           jne 0x4002c67	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4005220	          0x4889ea	                            mov rdx, rbp	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4005223	          0x4489e6	                           mov esi, r12d	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4005226	          0x4889df	                            mov rdi, rbx	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4005229	      0xe8b2340000	                   call sym.d_print_comp	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x400522e	      0xe96dbdffff	                           jmp 0x4000fa0	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4005233	          0x83f873	                           cmp eax, 0x73	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4005236	     0xf852bdaffff	                           jne 0x4002c67	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x400523c	      0x41807d0174	                cmp byte [r13 + 1], 0x74	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4005241	     0xf8520daffff	                           jne 0x4002c67	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4005247	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x400524c	     0xf8515daffff	                           jne 0x4002c67	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4005252	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005259	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400525f	     0xf846a2b0000	                            je 0x4007dcf	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005265	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005269	          0x4489e6	                           mov esi, r12d	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x400526c	          0x4889df	                            mov rdi, rbx	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x400526f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005276	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x400527a	          0x4889ea	                            mov rdx, rbp	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x400527d	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4005284	      0xe857340000	                   call sym.d_print_comp	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4005289	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005290	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005296	     0xf8447290000	                            je 0x4007be3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400529c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40052a0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40052a7	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x40052ab	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x40052b2	      0xe9e9bcffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x40052b7	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x40052be	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052c5	     0xf847d2a0000	                            je 0x4007d48	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052cb	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052cf	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052d5	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40052dc	        0xc604133a	              mov byte [rbx + rdx], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x40052e0	    0xc68308010000	           mov byte [rbx + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x40052e7	     0xf842b2a0000	                            je 0x4007d18	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052ed	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052f1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40052f8	        0xc604033a	              mov byte [rbx + rax], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x40052fc	    0xc68308010000	           mov byte [rbx + 0x108], 0x3a 	      4236	cp-demangle.c	FUNCTION_72
0x4005303	      0xe9f9e5ffff	                           jmp 0x4003901	      4236	cp-demangle.c	FUNCTION_72
0x4005308	        0x488b5208	                mov rdx, qword [rdx + 8]	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x400530c	          0x4489e6	                           mov esi, r12d	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x400530f	          0x4889df	                            mov rdi, rbx	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4005312	      0xe8c9330000	                   call sym.d_print_comp	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4005317	    0x4883bb700100	              cmp qword [rbx + 0x170], 0	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x400531f	            0x740c	                            je 0x400532d	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4005321	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4005326	    0x488983200100	            mov qword [rbx + 0x120], rax	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x400532d	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3c 	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x4005334	     0xf8482240000	                            je 0x40077bc	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x400533a	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005341	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005347	     0xf84572a0000	                            je 0x4007da4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400534d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005351	          0x4489e6	                           mov esi, r12d	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4005354	          0x4889df	                            mov rdi, rbx	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4005357	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400535e	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x4005362	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x4005369	        0x488b4508	                mov rax, qword [rbp + 8]	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x400536d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4005371	      0xe86a330000	                   call sym.d_print_comp	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4005376	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3e 	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x400537d	     0xf8406240000	                            je 0x4007789	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x4005383	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400538a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005390	     0xf84e3290000	                            je 0x4007d79	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005396	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400539a	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40053a1	        0xc604033e	              mov byte [rbx + rax], 0x3e	      4235	cp-demangle.c	FUNCTION_72
0x40053a5	    0xc68308010000	           mov byte [rbx + 0x108], 0x3e 	      4236	cp-demangle.c	FUNCTION_72
0x40053ac	      0xe9efbbffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x40053b1	        0x488b5208	                mov rdx, qword [rdx + 8]	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40053b5	        0x448b6a1c	           mov r13d, dword [rdx + 0x1c] 	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40053b9	        0x4183fd01	                             cmp r13d, 1	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40053bd	     0xf8281c9ffff	                            jb 0x4001d44	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40053c3	        0x4183fd06	                             cmp r13d, 6	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40053c7	     0xf8618210000	                           jbe 0x40074e5	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40053cd	        0x4183fd07	                             cmp r13d, 7	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40053d1	     0xf856dc9ffff	                           jne 0x4001d44	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x40053d7	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40053db	            0x8b0a	                    mov ecx, dword [rdx]	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40053dd	            0x85c9	                           test ecx, ecx	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40053df	     0xf855fc9ffff	                           jne 0x4001d44	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40053e5	        0x837a1001	               cmp dword [rdx + 0x10], 1	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40053e9	     0xf8555c9ffff	                           jne 0x4001d44	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40053ef	          0x83f83c	                           cmp eax, 0x3c	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40053f2	     0xf854cc9ffff	                           jne 0x4001d44	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x40053f8	        0x488b4208	                mov rax, qword [rdx + 8]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x40053fc	           0xfb600	                   movzx eax, byte [rax]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x40053ff	            0x3c30	                            cmp al, 0x30	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4005401	     0xf8451320000	                            je 0x4008658	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4005407	            0x3c31	                            cmp al, 0x31	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4005409	     0xf8535c9ffff	                           jne 0x4001d44	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400540f	      0xba04000000	                              mov edx, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005414	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005419	      0xe822adffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400541e	      0xe97dbbffff	                           jmp 0x4000fa0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005423	       0xf1f440000	                   nop dword [rax + rax]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005428	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400542f	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005436	     0xf84322d0000	                            je 0x400816e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400543c	        0x488d4201	                      lea rax, [rdx + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005440	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4005447	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400544b	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4005452	      0xe90ce3ffff	                           jmp 0x4003763	      4236	cp-demangle.c	FUNCTION_72
0x4005457	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400545e	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005465	     0xf84d32e0000	                            je 0x400833e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400546b	        0x488d4201	                      lea rax, [rdx + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400546f	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4005476	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400547a	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4005481	      0xe998e2ffff	                           jmp 0x400371e	      4236	cp-demangle.c	FUNCTION_72
0x4005486	      0x42c6042b00	                 mov byte [rbx + r13], 0	      4221	cp-demangle.c	FUNCTION_71
0x400548b	          0x4c89ee	                            mov rsi, r13	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400548e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005495	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005498	          0x4531ed	                          xor r13d, r13d	      4224	cp-demangle.c	FUNCTION_71
0x400549b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054a1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40054a9	      0xe96ee0ffff	                           jmp 0x400351c	      4224	cp-demangle.c	FUNCTION_71
0x40054ae	        0x488b5508	                mov rdx, qword [rbp + 8]	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x40054b2	          0x4489e6	                           mov esi, r12d	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x40054b5	          0x4889df	                            mov rdi, rbx	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x40054b8	      0xe823320000	                   call sym.d_print_comp	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x40054bd	      0xe9debaffff	                           jmp 0x4000fa0	      4998	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x40054c2	          0x8d4a9f	                   lea ecx, [rdx - 0x61]	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x40054c5	          0x80f905	                               cmp cl, 5	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x40054c8	     0xf87222f0000	                            ja 0x40083f0	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x40054ce	          0x8d4aa9	                   lea ecx, [rdx - 0x57]	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x40054d1	      0xe98ceeffff	                           jmp 0x4004362	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x40054d6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40054dc	     0xf84ad2b0000	                            je 0x400808f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40054e2	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40054e6	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40054ed	        0xc604032d	              mov byte [rbx + rax], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x40054f1	          0x4889d0	                            mov rax, rdx	      4236	cp-demangle.c	FUNCTION_72
0x40054f4	    0xc68308010000	           mov byte [rbx + 0x108], 0x2d 	      4236	cp-demangle.c	FUNCTION_72
0x40054fb	      0xe9b0c8ffff	                           jmp 0x4001db0	      4236	cp-demangle.c	FUNCTION_72
0x4005500	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005506	     0xf84372c0000	                            je 0x4008143	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400550c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005510	          0x4489e6	                           mov esi, r12d	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4005513	          0x4889df	                            mov rdi, rbx	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4005516	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400551d	        0xc604035b	              mov byte [rbx + rax], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x4005521	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x4005528	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x400552c	      0xe8af310000	                   call sym.d_print_comp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4005531	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005538	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400553e	     0xf841a220000	                            je 0x400775e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005544	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005548	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400554f	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4005553	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x400555a	      0xe941baffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x400555f	          0x8b5500	                    mov edx, dword [rbp]	      4236	cp-demangle.c	FUNCTION_72
0x4005562	      0xe99ffaffff	                           jmp 0x4005006	      4236	cp-demangle.c	FUNCTION_72
0x4005567	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400556e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005575	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400557a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400557d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005583	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400558b	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005590	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005592	      0xe945eaffff	                           jmp 0x4003fdc	      4224	cp-demangle.c	FUNCTION_71
0x4005597	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400559e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40055a5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055aa	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055ad	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055b3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40055bb	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40055c0	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40055c2	      0xe96fbbffff	                           jmp 0x4001136	      4224	cp-demangle.c	FUNCTION_71
0x40055c7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055ce	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40055d5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055da	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055dd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055e3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40055eb	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40055ed	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40055f2	      0xe942bcffff	                           jmp 0x4001239	      4224	cp-demangle.c	FUNCTION_71
0x40055f7	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055fe	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005605	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400560a	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005610	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005618	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400561d	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400561f	      0xe95bd9ffff	                           jmp 0x4002f7f	      4224	cp-demangle.c	FUNCTION_71
0x4005624	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400562b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005632	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005637	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400563a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005640	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005648	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400564d	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400564f	      0xe984deffff	                           jmp 0x40034d8	      4224	cp-demangle.c	FUNCTION_71
0x4005654	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400565b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005662	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005667	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400566a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005670	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005678	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400567d	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400567f	      0xe96ecfffff	                           jmp 0x40025f2	      4224	cp-demangle.c	FUNCTION_71
0x4005684	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400568b	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005692	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005697	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400569d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40056a5	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40056aa	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40056ac	      0xe96ec4ffff	                           jmp 0x4001b1f	      4224	cp-demangle.c	FUNCTION_71
0x40056b1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056b8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40056bf	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056c4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056c7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056cd	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40056d5	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40056da	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40056dc	      0xe922e9ffff	                           jmp 0x4004003	      4224	cp-demangle.c	FUNCTION_71
0x40056e1	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40056eb	      0xe9b0b8ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x40056f0	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4712	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40056f4	          0x4d85ed	                           test r13, r13	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40056f7	     0xf8440eaffff	                            je 0x400413d	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40056fd	        0x418b7500	                    mov esi, dword [r13]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4005701	        0x4c8d4820	                    lea r9, [rax + 0x20]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005705	      0x4889442460	             mov qword [rsp + 0x60], rax	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400570a	      0x4c896c2468	             mov qword [rsp + 0x68], r13	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400570f	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005717	    0x4c898b280100	             mov qword [rbx + 0x128], r9	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400571e	      0x4889542478	             mov qword [rsp + 0x78], rdx	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005723	          0x8d4ee4	                   lea ecx, [rsi - 0x1c]	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005726	          0x83f933	                           cmp ecx, 0x33	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005729	     0xf870f1d0000	                            ja 0x400743e	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400572f	          0x4d89c3	                             mov r11, r8	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005732	          0x49d3e3	                             shl r11, cl	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005735	          0x4985fb	                           test r11, rdi	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005738	     0xf85be1f0000	                           jne 0x40076fc	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400573e	    0x41be02000000	                             mov r14d, 2	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005744	      0xe9cce0ffff	                           jmp 0x4003815	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4005749	      0xba0d000000	                            mov edx, 0xd	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400574e	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005753	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005756	      0xe8e5a9ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400575b	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x400575e	          0x4889df	                            mov rdi, rbx	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4005761	          0x8d7001	                      lea esi, [rax + 1]	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4005764	      0xe817acffff	                   call sym.d_append_num	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4005769	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400576e	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005773	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005776	      0xe8c5a9ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400577b	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4673	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x400577f	          0x4885ed	                           test rbp, rbp	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4005782	     0xf8493e1ffff	                            je 0x400391b	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4005788	      0xe982e1ffff	                           jmp 0x400390f	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400578d	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4005794	          0x4489ee	                           mov esi, r13d	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4005797	          0x4889df	                            mov rdi, rbx	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x400579a	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      5144	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x400579f	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5145	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40057a7	      0x4889442420	             mov qword [rsp + 0x20], rax	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40057ac	      0x488d442420	                   lea rax, [rsp + 0x20]	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40057b1	    0x488983280100	            mov qword [rbx + 0x128], rax	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40057b8	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40057bf	        0x488b5508	                mov rdx, qword [rbp + 8]	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x40057c3	      0x4889442438	             mov qword [rsp + 0x38], rax	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40057c8	      0xe8132f0000	                   call sym.d_print_comp	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x40057cd	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x40057d2	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40057d7	          0x4585d2	                         test r10d, r10d	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x40057da	    0x488983280100	            mov qword [rbx + 0x128], rax	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x40057e1	     0xf85b9b7ffff	                           jne 0x4000fa0	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x40057e7	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40057f2	     0xf84dd2c0000	                            je 0x40084d5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40057f8	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40057ff	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005803	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400580a	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400580e	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4005815	      0xe9d0c2ffff	                           jmp 0x4001aea	      4236	cp-demangle.c	FUNCTION_72
0x400581a	    0x448b8f580100	           mov r9d, dword [rdi + 0x158] 	      4236	cp-demangle.c	FUNCTION_72
0x4005821	    0x4c8b87500100	            mov r8, qword [rdi + 0x150] 	      4236	cp-demangle.c	FUNCTION_72
0x4005828	          0x4585c9	                           test r9d, r9d	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x400582b	            0x7e39	                           jle 0x4005866	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x400582d	          0x493b10	                     cmp rdx, qword [r8]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005830	     0xf8466150000	                            je 0x4006d9c	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005836	        0x418d71ff	                       lea esi, [r9 - 1]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400583a	        0x498d4810	                    lea rcx, [r8 + 0x10]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400583e	        0x4883c601	                              add rsi, 1	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005842	        0x48c1e604	                              shl rsi, 4	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005846	          0x4c01c6	                             add rsi, r8	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005849	            0xeb16	                           jmp 0x4005861	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400584b	       0xf1f440000	                   nop dword [rax + rax]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005850	          0x4889cf	                            mov rdi, rcx	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005853	        0x4883c110	                           add rcx, 0x10	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005857	        0x483b51f0	             cmp rdx, qword [rcx - 0x10]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400585b	     0xf8438150000	                            je 0x4006d99	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4005861	          0x4839f1	                            cmp rcx, rsi	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005864	            0x75ea	                           jne 0x4005850	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4005866	    0x443b8b5c0100	           cmp r9d, dword [rbx + 0x15c] 	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x400586d	     0xf8dce2d0000	                           jge 0x4008641	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4005873	          0x4963c9	                         movsxd rcx, r9d	      4512	cp-demangle.c	FUNCTION_83
0x4005876	        0x4183c101	                              add r9d, 1	      4513	cp-demangle.c	FUNCTION_83
0x400587a	        0x48c1e104	                              shl rcx, 4	      4512	cp-demangle.c	FUNCTION_83
0x400587e	    0x44898b580100	            mov dword [rbx + 0x158], r9d	      4513	cp-demangle.c	FUNCTION_83
0x4005885	          0x4c01c1	                             add rcx, r8	      4512	cp-demangle.c	FUNCTION_83
0x4005888	    0x4c8b83200100	            mov r8, qword [rbx + 0x120] 	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x400588f	          0x488911	                    mov qword [rcx], rdx	      4515	cp-demangle.c	FUNCTION_83
0x4005892	        0x4883c108	                              add rcx, 8	      4516	cp-demangle.c	FUNCTION_83
0x4005896	            0xeb3a	                           jmp 0x40058d2	      4516	cp-demangle.c	FUNCTION_83
0x4005898	    0x8bbb68010000	           mov edi, dword [rbx + 0x168] 	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x400589e	    0x3bbb6c010000	           cmp edi, dword [rbx + 0x16c] 	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x40058a4	     0xf8d972d0000	                           jge 0x4008641	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x40058aa	          0x4863f7	                         movsxd rsi, edi	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x40058ad	          0x83c701	                              add edi, 1	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x40058b0	        0x48c1e604	                              shl rsi, 4	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x40058b4	    0x4803b3600100	            add rsi, qword [rbx + 0x160]	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x40058bb	    0x89bb68010000	            mov dword [rbx + 0x168], edi	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x40058c1	        0x498b7808	                 mov rdi, qword [r8 + 8]	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x40058c5	        0x48897e08	                mov qword [rsi + 8], rdi	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x40058c9	          0x488931	                    mov qword [rcx], rsi	      4531	cp-demangle.c	FUNCTION_83	FOR_1
0x40058cc	          0x4889f1	                            mov rcx, rsi	      4532	cp-demangle.c	FUNCTION_83	FOR_1
0x40058cf	          0x4d8b00	                      mov r8, qword [r8]	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x40058d2	          0x4d85c0	                             test r8, r8	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x40058d5	            0x75c1	                           jne 0x4005898	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x40058d7	    0x48c701000000	                      mov qword [rcx], 0	      4535	cp-demangle.c	FUNCTION_83
0x40058de	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x40058e1	    0x488b8b200100	           mov rcx, qword [rbx + 0x120] 	      4633	cp-demangle.c	FUNCTION_86
0x40058e8	      0xe9f0140000	                           jmp 0x4006ddd	      4633	cp-demangle.c	FUNCTION_86
0x40058ed	           0xf1f00	                         nop dword [rax]	      4633	cp-demangle.c	FUNCTION_86
0x40058f0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40058f7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40058fe	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005903	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005906	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400590c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005914	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005919	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400591b	      0xe981dbffff	                           jmp 0x40034a1	      4224	cp-demangle.c	FUNCTION_71
0x4005920	    0x8b833c010000	           mov eax, dword [rbx + 0x13c] 	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x4005926	            0x85c0	                           test eax, eax	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4005928	            0x791f	                           jns 0x4005949	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x400592a	      0xe98af5ffff	                           jmp 0x4004eb9	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x400592f	              0x90	                                     nop	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4005930	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4005934	          0x83e801	                              sub eax, 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x4005937	          0x4885d2	                           test rdx, rdx	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x400593a	     0xf84a0b6ffff	                            je 0x4000fe0	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4005940	          0x833a2f	                   cmp dword [rdx], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4005943	     0xf8597b6ffff	                           jne 0x4000fe0	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4005949	            0x85c0	                           test eax, eax	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400594b	            0x75e3	                           jne 0x4005930	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400594d	        0x488b5208	                mov rdx, qword [rdx + 8]	      4368	cp-demangle.c	FUNCTION_77
0x4005951	          0x4885d2	                           test rdx, rdx	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x4005954	     0xf8486b6ffff	                            je 0x4000fe0	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x400595a	      0xe95af5ffff	                           jmp 0x4004eb9	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x400595f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005966	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400596d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005972	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005975	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400597b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005983	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005988	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400598a	      0xe923e7ffff	                           jmp 0x40040b2	      4224	cp-demangle.c	FUNCTION_71
0x400598f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005996	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400599d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059a2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059a5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059ab	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40059b3	          0xc6032d	                    mov byte [rbx], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x40059b6	      0xb901000000	                              mov ecx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40059bb	      0xe9a9e6ffff	                           jmp 0x4004069	      4235	cp-demangle.c	FUNCTION_72
0x40059c0	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40059c7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059ce	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059d3	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059d6	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059dc	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40059e4	          0xc6036e	                    mov byte [rbx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x40059e7	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40059ec	      0xe9bde6ffff	                           jmp 0x40040ae	      4235	cp-demangle.c	FUNCTION_72
0x40059f1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059f8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40059ff	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a04	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a07	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a0d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005a15	          0xc60369	                    mov byte [rbx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x4005a18	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005a1d	      0xe96ae6ffff	                           jmp 0x400408c	      4235	cp-demangle.c	FUNCTION_72
0x4005a22	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a29	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005a30	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a35	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a38	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a3e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005a46	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005a4b	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005a4d	      0xe9f1c8ffff	                           jmp 0x4002343	      4224	cp-demangle.c	FUNCTION_71
0x4005a52	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005a59	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a60	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a65	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a68	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a6e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005a76	          0xc60362	                    mov byte [rbx], 0x62	      4235	cp-demangle.c	FUNCTION_72
0x4005a79	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005a7e	      0xe9fdbcffff	                           jmp 0x4001780	      4235	cp-demangle.c	FUNCTION_72
0x4005a83	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a8a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005a91	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a96	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a99	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a9f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005aa7	          0xc6036d	                    mov byte [rbx], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x4005aaa	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005aaf	      0xe9aabcffff	                           jmp 0x400175e	      4235	cp-demangle.c	FUNCTION_72
0x4005ab4	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005abb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ac2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ac7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005aca	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ad0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005ad8	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4005adb	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005ae0	      0xe956bcffff	                           jmp 0x400173b	      4235	cp-demangle.c	FUNCTION_72
0x4005ae5	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005aec	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005af3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005af8	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005afe	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005b06	          0xc6036c	                    mov byte [rbx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x4005b09	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005b0e	      0xe906bcffff	                           jmp 0x4001719	      4235	cp-demangle.c	FUNCTION_72
0x4005b13	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b1a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005b21	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b26	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b29	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b2f	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4005b32	    0xc68308010000	           mov byte [rbx + 0x108], 0x72 	      4236	cp-demangle.c	FUNCTION_72
0x4005b39	        0x498b6d08	                mov rbp, qword [r13 + 8]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4005b3d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005b45	    0x48c783000100	              mov qword [rbx + 0x100], 1	      4235	cp-demangle.c	FUNCTION_72
0x4005b50	         0xfb64500	                   movzx eax, byte [rbp]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4005b54	          0x8d509f	                   lea edx, [rax - 0x61]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4005b57	      0xb801000000	                              mov eax, 1	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4005b5c	          0x80fa19	                            cmp dl, 0x19	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4005b5f	     0xf866ed8ffff	                           jbe 0x40033d3	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4005b65	      0xe986d8ffff	                           jmp 0x40033f0	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4005b6a	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005b71	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b78	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b7d	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b83	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005b8b	          0xc6037b	                    mov byte [rbx], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x4005b8e	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005b93	      0xe95ebbffff	                           jmp 0x40016f6	      4235	cp-demangle.c	FUNCTION_72
0x4005b98	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b9f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005ba6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bab	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bae	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bb4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005bbc	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4005bbf	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005bc4	      0xe94ed7ffff	                           jmp 0x4003317	      4235	cp-demangle.c	FUNCTION_72
0x4005bc9	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005bd0	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bd7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bdc	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005be2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005bea	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4005bed	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005bf2	      0xe9fdd6ffff	                           jmp 0x40032f4	      4235	cp-demangle.c	FUNCTION_72
0x4005bf7	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bfe	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005c05	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c0a	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c10	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005c18	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4005c1b	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005c20	      0xe9add6ffff	                           jmp 0x40032d2	      4235	cp-demangle.c	FUNCTION_72
0x4005c25	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c2c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005c33	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c38	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c3b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c41	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005c49	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005c4e	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005c50	      0xe9f1bbffff	                           jmp 0x4001846	      4224	cp-demangle.c	FUNCTION_71
0x4005c55	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005c5c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c63	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c68	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c6b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c71	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005c79	          0xc60362	                    mov byte [rbx], 0x62	      4235	cp-demangle.c	FUNCTION_72
0x4005c7c	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005c81	      0xe94bb5ffff	                           jmp 0x40011d1	      4235	cp-demangle.c	FUNCTION_72
0x4005c86	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c8d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005c94	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c99	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005c9c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ca2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005caa	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4005cad	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005cb2	      0xe9f8b4ffff	                           jmp 0x40011af	      4235	cp-demangle.c	FUNCTION_72
0x4005cb7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005cbe	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cc5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cca	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ccd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cd3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005cdb	          0xc6035b	                    mov byte [rbx], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x4005cde	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005ce3	      0xe9a4b4ffff	                           jmp 0x400118c	      4235	cp-demangle.c	FUNCTION_72
0x4005ce8	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cef	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005cf6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cfb	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cfe	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d04	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005d0c	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005d11	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005d13	      0xe98dd0ffff	                           jmp 0x4002da5	      4224	cp-demangle.c	FUNCTION_71
0x4005d18	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005d1f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d26	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d2b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d2e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d34	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005d3c	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4005d3f	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005d44	      0xe958d0ffff	                           jmp 0x4002da1	      4235	cp-demangle.c	FUNCTION_72
0x4005d49	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d50	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005d57	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d5c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d5f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d65	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005d6d	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4005d70	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005d75	      0xe905d0ffff	                           jmp 0x4002d7f	      4235	cp-demangle.c	FUNCTION_72
0x4005d7a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005d81	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d88	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d8d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d90	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d96	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005d9e	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4005da1	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005da6	      0xe9b1cfffff	                           jmp 0x4002d5c	      4235	cp-demangle.c	FUNCTION_72
0x4005dab	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005db2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005db9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005dbe	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005dc1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005dc7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005dcf	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4005dd2	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005dd7	      0xe95ecfffff	                           jmp 0x4002d3a	      4235	cp-demangle.c	FUNCTION_72
0x4005ddc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005de3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005dea	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005def	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005df2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005df8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005e00	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4005e03	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005e08	      0xe90acfffff	                           jmp 0x4002d17	      4235	cp-demangle.c	FUNCTION_72
0x4005e0d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e14	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005e1b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e20	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e23	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e29	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005e31	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4005e34	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005e39	      0xe9b7ceffff	                           jmp 0x4002cf5	      4235	cp-demangle.c	FUNCTION_72
0x4005e3e	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005e45	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e4c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e51	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e57	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005e5f	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4005e62	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005e67	      0xe966ceffff	                           jmp 0x4002cd2	      4235	cp-demangle.c	FUNCTION_72
0x4005e6c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e73	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005e7a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e7f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e82	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e88	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005e90	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005e95	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005e97	      0xe9fadfffff	                           jmp 0x4003e96	      4224	cp-demangle.c	FUNCTION_71
0x4005e9c	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005ea3	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005eaa	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005eaf	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005eb5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005ebd	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4005ec0	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005ec5	      0xe961c3ffff	                           jmp 0x400222b	      4235	cp-demangle.c	FUNCTION_72
0x4005eca	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ed1	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005ed8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005edd	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ee3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005eeb	          0xc60376	                    mov byte [rbx], 0x76	      4235	cp-demangle.c	FUNCTION_72
0x4005eee	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005ef3	      0xe911c3ffff	                           jmp 0x4002209	      4235	cp-demangle.c	FUNCTION_72
0x4005ef8	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005eff	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005f06	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f0b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f0e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f14	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005f1c	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4005f1f	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005f24	      0xe94ec2ffff	                           jmp 0x4002177	      4235	cp-demangle.c	FUNCTION_72
0x4005f29	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005f30	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f37	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f3c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f3f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f45	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005f4d	          0xc60366	                    mov byte [rbx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x4005f50	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005f55	      0xe9fac1ffff	                           jmp 0x4002154	      4235	cp-demangle.c	FUNCTION_72
0x4005f5a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f61	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005f68	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f6d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f70	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f76	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005f7e	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4005f81	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005f86	      0xe9a7c1ffff	                           jmp 0x4002132	      4235	cp-demangle.c	FUNCTION_72
0x4005f8b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005f92	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f99	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f9e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fa1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fa7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005faf	          0xc60354	                    mov byte [rbx], 0x54	      4235	cp-demangle.c	FUNCTION_72
0x4005fb2	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4005fb7	      0xe953c1ffff	                           jmp 0x400210f	      4235	cp-demangle.c	FUNCTION_72
0x4005fbc	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fc3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005fca	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fcf	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fd2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fd8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005fe0	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005fe5	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005fe7	      0xe9b1c1ffff	                           jmp 0x400219d	      4224	cp-demangle.c	FUNCTION_71
0x4005fec	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005ff3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ffa	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fff	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006002	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006008	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006010	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4006013	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006018	      0xe97cc1ffff	                           jmp 0x4002199	      4235	cp-demangle.c	FUNCTION_72
0x400601d	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006024	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400602b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006030	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006036	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400603e	          0xc60354	                    mov byte [rbx], 0x54	      4235	cp-demangle.c	FUNCTION_72
0x4006041	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006046	      0xe9a2c0ffff	                           jmp 0x40020ed	      4235	cp-demangle.c	FUNCTION_72
0x400604b	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006052	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006059	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400605e	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006064	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400606c	          0xc60356	                    mov byte [rbx], 0x56	      4235	cp-demangle.c	FUNCTION_72
0x400606f	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006074	      0xe951c0ffff	                           jmp 0x40020ca	      4235	cp-demangle.c	FUNCTION_72
0x4006079	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006080	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006087	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400608c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400608f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006095	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400609d	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x40060a0	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40060a5	      0xe94bbfffff	                           jmp 0x4001ff5	      4235	cp-demangle.c	FUNCTION_72
0x40060aa	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40060b1	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40060b8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40060bd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40060c0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40060c6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40060ce	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x40060d1	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40060d6	      0xe9f8beffff	                           jmp 0x4001fd3	      4235	cp-demangle.c	FUNCTION_72
0x40060db	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40060e2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40060e9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40060ee	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40060f1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40060f7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40060ff	          0xc60366	                    mov byte [rbx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x4006102	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006107	      0xe9a4beffff	                           jmp 0x4001fb0	      4235	cp-demangle.c	FUNCTION_72
0x400610c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006113	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400611a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400611f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006122	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006128	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006130	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4006133	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006138	      0xe951beffff	                           jmp 0x4001f8e	      4235	cp-demangle.c	FUNCTION_72
0x400613d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006144	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400614b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006150	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006153	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006159	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006161	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4006164	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006169	      0xe9d1c1ffff	                           jmp 0x400233f	      4235	cp-demangle.c	FUNCTION_72
0x400616e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006175	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400617c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006181	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006184	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400618a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006192	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4006195	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400619a	      0xe97ec1ffff	                           jmp 0x400231d	      4235	cp-demangle.c	FUNCTION_72
0x400619f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40061a6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40061ad	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40061b2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40061b5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40061bb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40061c3	          0xc60366	                    mov byte [rbx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x40061c6	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40061cb	      0xe92ac1ffff	                           jmp 0x40022fa	      4235	cp-demangle.c	FUNCTION_72
0x40061d0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40061d7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40061de	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40061e3	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40061e6	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40061ec	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40061f4	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40061f7	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40061fc	      0xe9d7c0ffff	                           jmp 0x40022d8	      4235	cp-demangle.c	FUNCTION_72
0x4006201	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006208	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400620f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006214	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006217	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400621d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006225	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4006228	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400622d	      0xe983c0ffff	                           jmp 0x40022b5	      4235	cp-demangle.c	FUNCTION_72
0x4006232	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006239	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006240	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006245	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006248	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400624e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006256	          0xc6036c	                    mov byte [rbx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x4006259	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400625e	      0xe930c0ffff	                           jmp 0x4002293	      4235	cp-demangle.c	FUNCTION_72
0x4006263	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400626a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006271	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006276	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006279	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400627f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006287	          0xc60362	                    mov byte [rbx], 0x62	      4235	cp-demangle.c	FUNCTION_72
0x400628a	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400628f	      0xe9dcbfffff	                           jmp 0x4002270	      4235	cp-demangle.c	FUNCTION_72
0x4006294	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400629b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40062a2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062a7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062aa	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062b0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40062b8	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x40062bb	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40062c0	      0xe989bfffff	                           jmp 0x400224e	      4235	cp-demangle.c	FUNCTION_72
0x40062c5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062cc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40062d3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062d8	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062db	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062e1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40062e9	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40062ee	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40062f0	      0xe909aeffff	                           jmp 0x40010fe	      4224	cp-demangle.c	FUNCTION_71
0x40062f5	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40062fc	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006303	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006308	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400630b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006311	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006319	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400631c	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006321	      0xe9d4adffff	                           jmp 0x40010fa	      4235	cp-demangle.c	FUNCTION_72
0x4006326	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400632d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006334	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006339	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400633c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006342	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400634a	          0xc6036e	                    mov byte [rbx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x400634d	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006352	      0xe981adffff	                           jmp 0x40010d8	      4235	cp-demangle.c	FUNCTION_72
0x4006357	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400635e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006365	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400636a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400636d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006373	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400637b	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400637e	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006383	      0xe92dadffff	                           jmp 0x40010b5	      4235	cp-demangle.c	FUNCTION_72
0x4006388	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400638f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006396	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400639b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400639e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40063a4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40063ac	          0xc6036c	                    mov byte [rbx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x40063af	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40063b4	      0xe9daacffff	                           jmp 0x4001093	      4235	cp-demangle.c	FUNCTION_72
0x40063b9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40063c0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40063c7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40063cc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40063cf	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40063d5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40063dd	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x40063e0	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40063e5	      0xe986acffff	                           jmp 0x4001070	      4235	cp-demangle.c	FUNCTION_72
0x40063ea	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40063f1	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40063f8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40063fd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006400	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006406	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400640e	          0xc6035b	                    mov byte [rbx], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x4006411	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006416	      0xe933acffff	                           jmp 0x400104e	      4235	cp-demangle.c	FUNCTION_72
0x400641b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006422	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006429	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400642e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006431	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006437	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400643f	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4006442	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006447	      0xe9dfabffff	                           jmp 0x400102b	      4235	cp-demangle.c	FUNCTION_72
0x400644c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006453	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400645a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400645f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006462	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006468	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006470	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4006473	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006478	      0xe917c1ffff	                           jmp 0x4002594	      4235	cp-demangle.c	FUNCTION_72
0x400647d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006484	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400648b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006490	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006493	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006499	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40064a1	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x40064a4	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40064a9	      0xe9c3c0ffff	                           jmp 0x4002571	      4235	cp-demangle.c	FUNCTION_72
0x40064ae	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40064b5	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40064bc	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40064c1	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40064c4	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40064ca	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40064d2	          0xc60379	                    mov byte [rbx], 0x79	      4235	cp-demangle.c	FUNCTION_72
0x40064d5	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40064da	      0xe970c0ffff	                           jmp 0x400254f	      4235	cp-demangle.c	FUNCTION_72
0x40064df	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40064e6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40064ed	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40064f2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40064f5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40064fb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006503	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4006506	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400650b	      0xe91cc0ffff	                           jmp 0x400252c	      4235	cp-demangle.c	FUNCTION_72
0x4006510	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006517	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400651e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006523	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006526	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400652c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006534	          0xc6036c	                    mov byte [rbx], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x4006537	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400653c	      0xe9c9bfffff	                           jmp 0x400250a	      4235	cp-demangle.c	FUNCTION_72
0x4006541	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006548	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400654f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006554	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006557	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400655d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006565	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x4006568	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400656d	      0xe975bfffff	                           jmp 0x40024e7	      4235	cp-demangle.c	FUNCTION_72
0x4006572	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006579	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006580	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006585	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400658b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006593	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4006596	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400659b	      0xe925bfffff	                           jmp 0x40024c5	      4235	cp-demangle.c	FUNCTION_72
0x40065a0	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40065a7	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40065ae	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40065b3	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40065b9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40065c1	          0xc60364	                    mov byte [rbx], 0x64	      4235	cp-demangle.c	FUNCTION_72
0x40065c4	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40065c9	      0xe9d4beffff	                           jmp 0x40024a2	      4235	cp-demangle.c	FUNCTION_72
0x40065ce	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40065d5	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40065dc	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40065e1	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40065e4	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40065ea	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40065f2	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40065f7	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40065f9	      0xe9d2afffff	                           jmp 0x40015d0	      4224	cp-demangle.c	FUNCTION_71
0x40065fe	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006605	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400660c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006611	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006614	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400661a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006622	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4006625	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400662a	      0xe99dafffff	                           jmp 0x40015cc	      4235	cp-demangle.c	FUNCTION_72
0x400662f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006636	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400663d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006642	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006645	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400664b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006653	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4006656	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400665b	      0xe932d8ffff	                           jmp 0x4003e92	      4235	cp-demangle.c	FUNCTION_72
0x4006660	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006667	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400666e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006673	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006676	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400667c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006684	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4006687	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400668c	      0xe9dfd7ffff	                           jmp 0x4003e70	      4235	cp-demangle.c	FUNCTION_72
0x4006691	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006698	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400669f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40066a4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40066a7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40066ad	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40066b5	          0xc60366	                    mov byte [rbx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x40066b8	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40066bd	      0xe98bd7ffff	                           jmp 0x4003e4d	      4235	cp-demangle.c	FUNCTION_72
0x40066c2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40066c9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40066d0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40066d5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40066d8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40066de	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40066e6	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40066e9	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40066ee	      0xe938d7ffff	                           jmp 0x4003e2b	      4235	cp-demangle.c	FUNCTION_72
0x40066f3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40066fa	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006701	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006706	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006709	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400670f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006717	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x400671a	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400671f	      0xe97dccffff	                           jmp 0x40033a1	      4235	cp-demangle.c	FUNCTION_72
0x4006724	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400672b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006732	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006737	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400673a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006740	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006748	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400674b	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006750	      0xe929ccffff	                           jmp 0x400337e	      4235	cp-demangle.c	FUNCTION_72
0x4006755	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400675c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006763	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006768	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400676b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006771	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006779	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x400677c	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006781	      0xe9d6cbffff	                           jmp 0x400335c	      4235	cp-demangle.c	FUNCTION_72
0x4006786	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400678d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006794	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006799	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400679c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40067a2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40067aa	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x40067ad	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40067b2	      0xe982cbffff	                           jmp 0x4003339	      4235	cp-demangle.c	FUNCTION_72
0x40067b7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40067be	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40067c5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40067ca	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40067cd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40067d3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40067db	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40067e0	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40067e2	      0xe974b5ffff	                           jmp 0x4001d5b	      4224	cp-demangle.c	FUNCTION_71
0x40067e7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40067ee	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40067f5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40067fa	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40067fd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006803	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400680b	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4006810	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4006812	      0xe95ccfffff	                           jmp 0x4003773	      4224	cp-demangle.c	FUNCTION_71
0x4006817	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400681e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006825	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400682a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400682d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006833	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400683b	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4006840	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4006842	      0xe973bdffff	                           jmp 0x40025ba	      4224	cp-demangle.c	FUNCTION_71
0x4006847	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400684e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006855	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400685a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400685d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006863	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400686b	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400686e	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006873	      0xe93ebdffff	                           jmp 0x40025b6	      4235	cp-demangle.c	FUNCTION_72
0x4006878	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400687f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006886	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400688b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400688e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006894	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400689c	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x400689f	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40068a4	      0xe901adffff	                           jmp 0x40015aa	      4235	cp-demangle.c	FUNCTION_72
0x40068a9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40068b0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40068b7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40068bc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40068bf	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40068c5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40068cd	          0xc60379	                    mov byte [rbx], 0x79	      4235	cp-demangle.c	FUNCTION_72
0x40068d0	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40068d5	      0xe9adacffff	                           jmp 0x4001587	      4235	cp-demangle.c	FUNCTION_72
0x40068da	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40068e1	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40068e8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40068ed	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40068f0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40068f6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40068fe	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4006901	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006906	      0xe95aacffff	                           jmp 0x4001565	      4235	cp-demangle.c	FUNCTION_72
0x400690b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006912	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006919	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400691e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006921	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006927	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400692f	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4006932	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006937	      0xe906acffff	                           jmp 0x4001542	      4235	cp-demangle.c	FUNCTION_72
0x400693c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006943	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400694a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400694f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006952	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006958	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006960	          0xc60364	                    mov byte [rbx], 0x64	      4235	cp-demangle.c	FUNCTION_72
0x4006963	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006968	      0xe9b3abffff	                           jmp 0x4001520	      4235	cp-demangle.c	FUNCTION_72
0x400696d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006974	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400697b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006980	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006983	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006989	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006991	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4006994	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006999	      0xe95fabffff	                           jmp 0x40014fd	      4235	cp-demangle.c	FUNCTION_72
0x400699e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40069a5	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40069ac	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40069b1	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40069b4	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40069ba	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40069c2	          0xc6036d	                    mov byte [rbx], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x40069c5	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40069ca	      0xe90cabffff	                           jmp 0x40014db	      4235	cp-demangle.c	FUNCTION_72
0x40069cf	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40069d6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40069dd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40069e2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40069e5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40069eb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40069f3	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x40069f6	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40069fb	      0xe9b8aaffff	                           jmp 0x40014b8	      4235	cp-demangle.c	FUNCTION_72
0x4006a00	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006a07	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a0e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a13	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a16	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a1c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006a24	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4006a27	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006a2c	      0xe90dc5ffff	                           jmp 0x4002f3e	      4235	cp-demangle.c	FUNCTION_72
0x4006a31	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a38	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006a3f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a44	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a47	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a4d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006a55	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4006a58	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006a5d	      0xe9bac4ffff	                           jmp 0x4002f1c	      4235	cp-demangle.c	FUNCTION_72
0x4006a62	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006a69	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a70	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a75	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a78	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a7e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006a86	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4006a89	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006a8e	      0xe966c4ffff	                           jmp 0x4002ef9	      4235	cp-demangle.c	FUNCTION_72
0x4006a93	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006a9a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006aa1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006aa6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006aa9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006aaf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006ab7	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4006aba	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006abf	      0xe913c4ffff	                           jmp 0x4002ed7	      4235	cp-demangle.c	FUNCTION_72
0x4006ac4	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006acb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ad2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ad7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ada	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ae0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006ae8	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4006aeb	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006af0	      0xe9bfc3ffff	                           jmp 0x4002eb4	      4235	cp-demangle.c	FUNCTION_72
0x4006af5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006afc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006b03	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b08	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b0b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b11	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006b19	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4006b1c	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006b21	      0xe96cc3ffff	                           jmp 0x4002e92	      4235	cp-demangle.c	FUNCTION_72
0x4006b26	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006b2d	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b34	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b39	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b3f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006b47	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4006b4a	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006b4f	      0xe91bc3ffff	                           jmp 0x4002e6f	      4235	cp-demangle.c	FUNCTION_72
0x4006b54	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b5b	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006b62	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b67	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b6d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006b75	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4006b78	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006b7d	      0xe9cbc2ffff	                           jmp 0x4002e4d	      4235	cp-demangle.c	FUNCTION_72
0x4006b82	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b89	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006b90	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b95	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b98	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006b9e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006ba6	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4006bab	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4006bad	      0xe97ccbffff	                           jmp 0x400372e	      4224	cp-demangle.c	FUNCTION_71
0x4006bb2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006bb9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006bc0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006bc5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006bc8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006bce	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006bd6	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4006bdb	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4006bdd	      0xe960c3ffff	                           jmp 0x4002f42	      4224	cp-demangle.c	FUNCTION_71
0x4006be2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006be9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006bf0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006bf5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006bf8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006bfe	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006c06	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4006c0b	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4006c0d	      0xe9e6a5ffff	                           jmp 0x40011f8	      4224	cp-demangle.c	FUNCTION_71
0x4006c12	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c19	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006c20	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c25	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c28	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c2e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006c36	          0xc60369	                    mov byte [rbx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x4006c39	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006c3e	      0xe9b1a5ffff	                           jmp 0x40011f4	      4235	cp-demangle.c	FUNCTION_72
0x4006c43	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c4a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006c51	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c56	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c59	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c5f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006c67	          0xc6036e	                    mov byte [rbx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x4006c6a	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006c6f	      0xe922a8ffff	                           jmp 0x4001496	      4235	cp-demangle.c	FUNCTION_72
0x4006c74	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006c7b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c82	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c87	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c8a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006c90	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006c98	          0xc6036e	                    mov byte [rbx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x4006c9b	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006ca0	      0xe9cea7ffff	                           jmp 0x4001473	      4235	cp-demangle.c	FUNCTION_72
0x4006ca5	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006cac	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006cb3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006cb8	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006cbe	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006cc6	          0xc60375	                    mov byte [rbx], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x4006cc9	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006cce	      0xe97ea7ffff	                           jmp 0x4001451	      4235	cp-demangle.c	FUNCTION_72
0x4006cd3	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006cda	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ce1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ce6	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006cec	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006cf4	          0xc6037b	                    mov byte [rbx], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x4006cf7	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006cfc	      0xe92da7ffff	                           jmp 0x400142e	      4235	cp-demangle.c	FUNCTION_72
0x4006d01	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006d08	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006d0f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006d14	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006d1a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006d22	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4006d25	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006d2a	      0xe981bfffff	                           jmp 0x4002cb0	      4235	cp-demangle.c	FUNCTION_72
0x4006d2f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006d36	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006d3d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006d42	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006d45	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006d4b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006d53	          0xc60329	                    mov byte [rbx], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4006d56	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4006d5d	        0x837d003d	                   cmp dword [rbp], 0x3d	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4006d61	    0x48c783000100	              mov qword [rbx + 0x100], 1	      4235	cp-demangle.c	FUNCTION_72
0x4006d6c	     0xf84c7130000	                            je 0x4008139	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4006d72	        0x4183fd08	                             cmp r13d, 8	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4006d76	     0xf853eb0ffff	                           jne 0x4001dba	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4006d7c	      0xb801000000	                              mov eax, 1	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4006d81	      0xe986e7ffff	                           jmp 0x400550c	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4006d86	          0x4589f8	                           mov r8d, r15d	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4006d89	          0x4489c6	                            mov esi, r8d	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4006d8c	          0x4889df	                            mov rdi, rbx	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4006d8f	      0xe8ec95ffff	                   call sym.d_append_num	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4006d94	      0xe907a2ffff	                           jmp 0x4000fa0	      5381	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64
0x4006d99	          0x4989f8	                             mov r8, rdi	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4006d9c	    0x488bbb480100	           mov rdi, qword [rbx + 0x148] 	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006da3	          0x4885ff	                           test rdi, rdi	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006da6	     0xf848d0c0000	                            je 0x4007a39	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006dac	          0x483b17	                    cmp rdx, qword [rdi]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006daf	            0x7422	                            je 0x4006dd3	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006db1	          0x4889f9	                            mov rcx, rdi	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006db4	        0x488b4908	                mov rcx, qword [rcx + 8]	      5035	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006db8	          0x4885c9	                           test rcx, rcx	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006dbb	     0xf84780c0000	                            je 0x4007a39	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4006dc1	          0x488b31	                    mov rsi, qword [rcx]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006dc4	          0x4839f2	                            cmp rdx, rsi	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006dc7	            0x740a	                            je 0x4006dd3	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006dc9	          0x4839f5	                            cmp rbp, rsi	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006dcc	            0x75e6	                           jne 0x4006db4	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006dce	          0x4839cf	                            cmp rdi, rcx	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006dd1	            0x74e1	                            je 0x4006db4	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006dd3	    0x488b8b200100	           mov rcx, qword [rbx + 0x120] 	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4006dda	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x4006ddd	          0x4885c9	                           test rcx, rcx	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x4006de0	     0xf84e3a1ffff	                            je 0x4000fc9	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x4006de6	        0x488b7a08	                mov rdi, qword [rdx + 8]	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4006dea	        0x488b5108	                mov rdx, qword [rcx + 8]	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4006dee	            0x85ff	                           test edi, edi	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4006df0	            0x89fe	                            mov esi, edi	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4006df2	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x4006df6	     0xf885e0c0000	                            js 0x4007a5a	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4006dfc	          0x4885d2	                           test rdx, rdx	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4006dff	     0xf84cea1ffff	                            je 0x4000fd3	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4006e05	          0x833a2f	                   cmp dword [rdx], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4006e08	     0xf85c5a1ffff	                           jne 0x4000fd3	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4006e0e	            0x85ff	                           test edi, edi	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4006e10	            0x751f	                           jne 0x4006e31	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4006e12	      0xe93f0c0000	                           jmp 0x4007a56	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4006e17	    0x660f1f840000	                    nop word [rax + rax]	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4006e20	          0x833a2f	                   cmp dword [rdx], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4006e23	     0xf85aaa1ffff	                           jne 0x4000fd3	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4006e29	            0x85f6	                           test esi, esi	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4006e2b	     0xf84250c0000	                            je 0x4007a56	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4006e31	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4006e35	          0x83ee01	                              sub esi, 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x4006e38	          0x4885d2	                           test rdx, rdx	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4006e3b	            0x75e3	                           jne 0x4006e20	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4006e3d	      0xe991a1ffff	                           jmp 0x4000fd3	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4006e42	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006e49	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006e50	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006e55	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006e58	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006e5e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006e66	          0xc60329	                    mov byte [rbx], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4006e69	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006e6e	      0xe9cfa9ffff	                           jmp 0x4001842	      4235	cp-demangle.c	FUNCTION_72
0x4006e73	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006e7a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006e81	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006e86	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006e89	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006e8f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006e97	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4006e9c	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4006e9e	      0xe926a9ffff	                           jmp 0x40017c9	      4224	cp-demangle.c	FUNCTION_71
0x4006ea3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006eaa	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006eb1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006eb6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006eb9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ebf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006ec7	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4006eca	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006ecf	      0xe9f1a8ffff	                           jmp 0x40017c5	      4235	cp-demangle.c	FUNCTION_72
0x4006ed4	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006edb	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006ee2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ee7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006eea	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006ef0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006ef8	          0xc60364	                    mov byte [rbx], 0x64	      4235	cp-demangle.c	FUNCTION_72
0x4006efb	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006f00	      0xe99ea8ffff	                           jmp 0x40017a3	      4235	cp-demangle.c	FUNCTION_72
0x4006f05	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006f0c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f13	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f18	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f1b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f21	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006f29	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4006f2c	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006f31	      0xe935b0ffff	                           jmp 0x4001f6b	      4235	cp-demangle.c	FUNCTION_72
0x4006f36	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f3d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006f44	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f49	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f4c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f52	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006f5a	          0xc60366	                    mov byte [rbx], 0x66	      4235	cp-demangle.c	FUNCTION_72
0x4006f5d	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006f62	      0xe9e2afffff	                           jmp 0x4001f49	      4235	cp-demangle.c	FUNCTION_72
0x4006f67	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006f6e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f75	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f7a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f7d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f83	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006f8b	          0xc6036e	                    mov byte [rbx], 0x6e	      4235	cp-demangle.c	FUNCTION_72
0x4006f8e	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006f93	      0xe98eafffff	                           jmp 0x4001f26	      4235	cp-demangle.c	FUNCTION_72
0x4006f98	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006f9f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006fa6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006fab	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006fae	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006fb4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006fbc	          0xc60369	                    mov byte [rbx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x4006fbf	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006fc4	      0xe93bafffff	                           jmp 0x4001f04	      4235	cp-demangle.c	FUNCTION_72
0x4006fc9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4006fd0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006fd7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006fdc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006fdf	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006fe5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006fed	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4006ff0	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4006ff5	      0xe9e7aeffff	                           jmp 0x4001ee1	      4235	cp-demangle.c	FUNCTION_72
0x4006ffa	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007001	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007008	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400700d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007010	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007016	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400701e	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x4007021	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007026	      0xe994aeffff	                           jmp 0x4001ebf	      4235	cp-demangle.c	FUNCTION_72
0x400702b	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007032	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007039	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400703e	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007044	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400704c	          0xc60379	                    mov byte [rbx], 0x79	      4235	cp-demangle.c	FUNCTION_72
0x400704f	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007054	      0xe943aeffff	                           jmp 0x4001e9c	      4235	cp-demangle.c	FUNCTION_72
0x4007059	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007060	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007067	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400706c	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007072	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400707a	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x400707d	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007082	      0xe9f3adffff	                           jmp 0x4001e7a	      4235	cp-demangle.c	FUNCTION_72
0x4007087	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400708e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007095	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400709a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400709d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40070a3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40070ab	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40070b0	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40070b2	      0xe942afffff	                           jmp 0x4001ff9	      4224	cp-demangle.c	FUNCTION_71
0x40070b7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40070be	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40070c5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40070ca	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40070cd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40070d3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40070db	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40070e0	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40070e2	      0xe927acffff	                           jmp 0x4001d0e	      4224	cp-demangle.c	FUNCTION_71
0x40070e7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40070ee	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40070f5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40070fa	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40070fd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007103	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400710b	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x400710e	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007113	      0xe9f2abffff	                           jmp 0x4001d0a	      4235	cp-demangle.c	FUNCTION_72
0x4007118	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400711f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007126	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400712b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400712e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007134	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400713c	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400713f	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007144	      0xe99fabffff	                           jmp 0x4001ce8	      4235	cp-demangle.c	FUNCTION_72
0x4007149	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007150	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007157	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400715c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400715f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007165	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400716d	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4007170	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007175	      0xe94babffff	                           jmp 0x4001cc5	      4235	cp-demangle.c	FUNCTION_72
0x400717a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007181	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007188	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400718d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007190	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007196	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400719e	          0xc60375	                    mov byte [rbx], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x40071a1	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40071a6	      0xe9f8aaffff	                           jmp 0x4001ca3	      4235	cp-demangle.c	FUNCTION_72
0x40071ab	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40071b2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40071b9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40071be	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40071c1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40071c7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40071cf	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x40071d2	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40071d7	      0xe9a4aaffff	                           jmp 0x4001c80	      4235	cp-demangle.c	FUNCTION_72
0x40071dc	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40071e3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40071ea	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40071ef	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40071f2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40071f8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007200	          0xc60373	                    mov byte [rbx], 0x73	      4235	cp-demangle.c	FUNCTION_72
0x4007203	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007208	      0xe951aaffff	                           jmp 0x4001c5e	      4235	cp-demangle.c	FUNCTION_72
0x400720d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007214	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400721b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007220	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007223	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007229	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007231	          0xc60365	                    mov byte [rbx], 0x65	      4235	cp-demangle.c	FUNCTION_72
0x4007234	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007239	      0xe9fda9ffff	                           jmp 0x4001c3b	      4235	cp-demangle.c	FUNCTION_72
0x400723e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007245	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400724c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007251	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007254	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400725a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007262	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4007265	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400726a	      0xe9aaa9ffff	                           jmp 0x4001c19	      4235	cp-demangle.c	FUNCTION_72
0x400726f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007276	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400727d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007282	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007285	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400728b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007293	          0xc60320	                    mov byte [rbx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4007296	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400729b	      0xe956a9ffff	                           jmp 0x4001bf6	      4235	cp-demangle.c	FUNCTION_72
0x40072a0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40072a7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40072ae	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40072b3	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40072b6	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40072bc	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40072c4	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x40072c7	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40072cc	      0xe903a9ffff	                           jmp 0x4001bd4	      4235	cp-demangle.c	FUNCTION_72
0x40072d1	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40072d8	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40072df	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40072e4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40072e7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40072ed	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40072f5	          0xc60376	                    mov byte [rbx], 0x76	      4235	cp-demangle.c	FUNCTION_72
0x40072f8	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40072fd	      0xe9afa8ffff	                           jmp 0x4001bb1	      4235	cp-demangle.c	FUNCTION_72
0x4007302	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007309	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007310	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007315	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400731b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007323	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4007326	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400732b	      0xe95fa8ffff	                           jmp 0x4001b8f	      4235	cp-demangle.c	FUNCTION_72
0x4007330	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007337	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400733e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007343	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007349	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007351	          0xc6036a	                    mov byte [rbx], 0x6a	      4235	cp-demangle.c	FUNCTION_72
0x4007354	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007359	      0xe90ea8ffff	                           jmp 0x4001b6c	      4235	cp-demangle.c	FUNCTION_72
0x400735e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007365	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400736c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007371	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007374	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400737a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007382	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4007387	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007389	      0xe9e0cdffff	                           jmp 0x400416e	      4224	cp-demangle.c	FUNCTION_71
0x400738e	           0xfb600	                   movzx eax, byte [rax]	      3240	cp-demangle.c	FUNCTION_50
0x4007391	          0x8d489d	                   lea ecx, [rax - 0x63]	      3240	cp-demangle.c	FUNCTION_50
0x4007394	          0x80f901	                               cmp cl, 1	      3240	cp-demangle.c	FUNCTION_50
0x4007397	            0x760b	                           jbe 0x40073a4	      3240	cp-demangle.c	FUNCTION_50
0x4007399	          0x83e872	                           sub eax, 0x72	      3240	cp-demangle.c	FUNCTION_50
0x400739c	            0x3c01	                               cmp al, 1	      3240	cp-demangle.c	FUNCTION_50
0x400739e	     0xf87069bffff	                            ja 0x4000eaa	      3240	cp-demangle.c	FUNCTION_50
0x40073a4	          0x4489e6	                           mov esi, r12d	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x40073a7	          0x4889df	                            mov rdi, rbx	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x40073aa	      0xe8e1130000	                call sym.d_print_expr_op	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x40073af	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40073b6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40073bc	     0xf84c90f0000	                            je 0x400838b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40073c2	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40073c6	          0x4489e6	                           mov esi, r12d	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40073c9	          0x4889df	                            mov rdi, rbx	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40073cc	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40073d3	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x40073d7	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x40073de	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40073e2	        0x488b5008	                mov rdx, qword [rax + 8]	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40073e6	      0xe8f5120000	                   call sym.d_print_comp	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40073eb	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40073f0	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40073f5	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40073f8	      0xe8438dffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40073fd	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007401	          0x4489e6	                           mov esi, r12d	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007404	          0x4889df	                            mov rdi, rbx	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007407	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x400740b	      0xe8d0120000	                   call sym.d_print_comp	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4007410	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4007417	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400741d	     0xf84df0e0000	                            je 0x4008302	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4007423	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4007427	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400742e	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4007432	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4007439	      0xe9629bffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x400743e	    0x41be02000000	                             mov r14d, 2	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007444	      0xe992cfffff	                           jmp 0x40043db	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007449	        0x488b7208	                mov rsi, qword [rdx + 8]	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x400744d	      0xbf00000000	                              mov edi, 0	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4007452	      0xb906000000	                              mov ecx, 6	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4007457	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4007459	     0xf85a0c2ffff	                           jne 0x40036ff	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x400745f	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x4007463	          0x4489e6	                           mov esi, r12d	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x4007466	          0x4889df	                            mov rdi, rbx	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x4007469	      0xe872120000	                   call sym.d_print_comp	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x400746e	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007473	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007478	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400747b	      0xe8c08cffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007480	      0xe900c3ffff	                           jmp 0x4003785	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007485	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400748c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007493	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007498	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400749b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40074a1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40074a9	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40074ae	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40074b0	      0xe93ac4ffff	                           jmp 0x40038ef	      4224	cp-demangle.c	FUNCTION_71
0x40074b5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40074bc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40074c3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40074c8	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40074cb	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40074d1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40074d9	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40074de	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40074e0	      0xe9d3c0ffff	                           jmp 0x40035b8	      4224	cp-demangle.c	FUNCTION_71
0x40074e5	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40074e9	            0x8b32	                    mov esi, dword [rdx]	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40074eb	            0x85f6	                           test esi, esi	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40074ed	     0xf8551a8ffff	                           jne 0x4001d44	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x40074f3	          0x83f83d	                           cmp eax, 0x3d	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x40074f6	     0xf840d100000	                            je 0x4008509	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x40074fc	          0x4489e6	                           mov esi, r12d	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x40074ff	          0x4889df	                            mov rdi, rbx	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4007502	        0x4183ed02	                             sub r13d, 2	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4007506	      0xe8d5110000	                   call sym.d_print_comp	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x400750b	        0x4183fd04	                             cmp r13d, 4	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x400750f	     0xf878b9affff	                            ja 0x4000fa0	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4007515	    0x42ff24ed0000	                       jmp qword [r13*8]	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x400751d	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007522	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007527	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400752a	      0xe8118cffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400752f	      0xe96c9affff	                           jmp 0x4000fa0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007534	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007539	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400753e	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007541	      0xe8fa8bffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4007546	      0xe9559affff	                           jmp 0x4000fa0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400754b	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4007556	     0xf844c110000	                            je 0x40086a8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400755c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4007563	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4007567	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400756e	        0xc604036c	              mov byte [rbx + rax], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x4007572	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x4007579	      0xe9229affff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x400757e	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4007589	     0xf847e100000	                            je 0x400860d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400758f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4007596	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400759a	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40075a1	        0xc6040375	              mov byte [rbx + rax], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x40075a5	    0xc68308010000	           mov byte [rbx + 0x108], 0x75 	      4236	cp-demangle.c	FUNCTION_72
0x40075ac	      0xe9ef99ffff	                           jmp 0x4000fa0	      4236	cp-demangle.c	FUNCTION_72
0x40075b1	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075b6	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075bb	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075be	      0xe87d8bffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075c3	      0xe9d899ffff	                           jmp 0x4000fa0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075c8	        0x4183e49f	                    and r12d, 0xffffff9f	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075cc	          0x4589e5	                          mov r13d, r12d	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075cf	      0xe916a5ffff	                           jmp 0x4001aea	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075d4	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075d8	      0xe92299ffff	                           jmp 0x4000eff	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40075dd	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40075e4	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40075eb	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40075f0	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40075f6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40075fe	          0xc6037b	                    mov byte [rbx], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x4007601	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007606	      0xe951c4ffff	                           jmp 0x4003a5c	      4235	cp-demangle.c	FUNCTION_72
0x400760b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007612	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007619	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400761e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007621	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007627	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400762f	          0xc6036d	                    mov byte [rbx], 0x6d	      4235	cp-demangle.c	FUNCTION_72
0x4007632	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007637	      0xe9aac4ffff	                           jmp 0x4003ae6	      4235	cp-demangle.c	FUNCTION_72
0x400763c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007643	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400764a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400764f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007652	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007658	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007660	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x4007663	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007668	      0xe957c4ffff	                           jmp 0x4003ac4	      4235	cp-demangle.c	FUNCTION_72
0x400766d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007674	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400767b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007680	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007683	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007689	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007691	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4007694	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007699	      0xe903c4ffff	                           jmp 0x4003aa1	      4235	cp-demangle.c	FUNCTION_72
0x400769e	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40076a5	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40076ac	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40076b1	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40076b7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40076bf	          0xc60370	                    mov byte [rbx], 0x70	      4235	cp-demangle.c	FUNCTION_72
0x40076c2	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40076c7	      0xe9b3c3ffff	                           jmp 0x4003a7f	      4235	cp-demangle.c	FUNCTION_72
0x40076cc	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40076d3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40076da	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40076df	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40076e2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40076e8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40076f0	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40076f5	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40076f7	      0xe9eec3ffff	                           jmp 0x4003aea	      4224	cp-demangle.c	FUNCTION_71
0x40076fc	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4712	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007700	          0x4d85ed	                           test r13, r13	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007703	     0xf8434caffff	                            je 0x400413d	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007709	        0x418b7500	                    mov esi, dword [r13]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x400770d	        0x488d4840	                   lea rcx, [rax + 0x40]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007711	    0x4c898c248000	              mov qword [rsp + 0x80], r9	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007719	    0x4c89ac248800	             mov qword [rsp + 0x88], r13	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007721	    0xc78424900000	               mov dword [rsp + 0x90], 0	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400772c	    0x48898b280100	            mov qword [rbx + 0x128], rcx	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007733	    0x488994249800	             mov qword [rsp + 0x98], rdx	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400773b	          0x8d4ee4	                   lea ecx, [rsi - 0x1c]	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400773e	          0x83f933	                           cmp ecx, 0x33	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007741	     0xf87c6050000	                            ja 0x4007d0d	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007747	          0x49d3e0	                              shl r8, cl	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400774a	          0x4985f8	                            test r8, rdi	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400774d	     0xf85460a0000	                           jne 0x4008199	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007753	    0x41be03000000	                             mov r14d, 3	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007759	      0xe9b7c0ffff	                           jmp 0x4003815	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400775e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007765	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400776c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007771	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007774	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400777a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007782	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007784	      0xe9bbddffff	                           jmp 0x4005544	      4224	cp-demangle.c	FUNCTION_71
0x4007789	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4007794	     0xf84070d0000	                            je 0x40084a1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400779a	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40077a1	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40077a5	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40077ac	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40077b0	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40077b7	      0xe9c7dbffff	                           jmp 0x4005383	      4236	cp-demangle.c	FUNCTION_72
0x40077bc	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40077c7	     0xf84a00c0000	                            je 0x400846d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40077cd	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40077d4	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40077d8	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40077df	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40077e3	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40077ea	      0xe94bdbffff	                           jmp 0x400533a	      4236	cp-demangle.c	FUNCTION_72
0x40077ef	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40077f6	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40077fd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007802	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007805	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400780b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007813	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4007818	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400781a	      0xe973beffff	                           jmp 0x4003692	      4224	cp-demangle.c	FUNCTION_71
0x400781f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007826	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400782d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007832	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007835	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400783b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007843	          0xc60375	                    mov byte [rbx], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x4007846	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x400784b	      0xe93ebeffff	                           jmp 0x400368e	      4235	cp-demangle.c	FUNCTION_72
0x4007850	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007857	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400785e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007863	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007866	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400786c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007874	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4007877	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400787c	      0xe99bc9ffff	                           jmp 0x400421c	      4235	cp-demangle.c	FUNCTION_72
0x4007881	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007888	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400788f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007894	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007897	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400789d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40078a5	          0xc60372	                    mov byte [rbx], 0x72	      4235	cp-demangle.c	FUNCTION_72
0x40078a8	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40078ad	      0xe947c9ffff	                           jmp 0x40041f9	      4235	cp-demangle.c	FUNCTION_72
0x40078b2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40078b9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40078c0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40078c5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40078c8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40078ce	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40078d6	          0xc60346	                    mov byte [rbx], 0x46	      4235	cp-demangle.c	FUNCTION_72
0x40078d9	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40078de	      0xe9f4c8ffff	                           jmp 0x40041d7	      4235	cp-demangle.c	FUNCTION_72
0x40078e3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40078ea	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40078f1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40078f6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40078f9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40078ff	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007907	          0xc6035f	                    mov byte [rbx], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x400790a	      0xb901000000	                              mov ecx, 1	      4235	cp-demangle.c	FUNCTION_72
0x400790f	      0xe9a0c8ffff	                           jmp 0x40041b4	      4235	cp-demangle.c	FUNCTION_72
0x4007914	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400791b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007922	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007927	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400792a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007930	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007938	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400793d	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400793f	      0xe9fec8ffff	                           jmp 0x4004242	      4224	cp-demangle.c	FUNCTION_71
0x4007944	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400794b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007952	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007957	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400795a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007960	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007968	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400796b	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007970	      0xe9c9c8ffff	                           jmp 0x400423e	      4235	cp-demangle.c	FUNCTION_72
0x4007975	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400797c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007983	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007988	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400798b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007991	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007999	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x400799c	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x40079a1	      0xe9c6bcffff	                           jmp 0x400366c	      4235	cp-demangle.c	FUNCTION_72
0x40079a6	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40079ad	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40079b4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40079b9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40079bc	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40079c2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40079ca	          0xc60363	                    mov byte [rbx], 0x63	      4235	cp-demangle.c	FUNCTION_72
0x40079cd	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x40079d2	      0xe972bcffff	                           jmp 0x4003649	      4235	cp-demangle.c	FUNCTION_72
0x40079d7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40079de	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40079e5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40079ea	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40079ed	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40079f3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40079fb	          0xc60341	                    mov byte [rbx], 0x41	      4235	cp-demangle.c	FUNCTION_72
0x40079fe	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007a03	      0xe91fbcffff	                           jmp 0x4003627	      4235	cp-demangle.c	FUNCTION_72
0x4007a08	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007a0f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007a16	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007a1b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007a1e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007a24	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007a2c	          0xc6035f	                    mov byte [rbx], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x4007a2f	      0xb901000000	                              mov ecx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007a34	      0xe9cbbbffff	                           jmp 0x4003604	      4235	cp-demangle.c	FUNCTION_72
0x4007a39	        0x498b4808	                 mov rcx, qword [r8 + 8]	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007a3d	    0x4c8bab200100	           mov r13, qword [rbx + 0x120] 	      5048	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007a44	    0x41be01000000	                             mov r14d, 1	      5050	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007a4a	    0x48898b200100	            mov qword [rbx + 0x120], rcx	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007a51	      0xe987f3ffff	                           jmp 0x4006ddd	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4007a56	        0x488b5208	                mov rdx, qword [rdx + 8]	      4368	cp-demangle.c	FUNCTION_77
0x4007a5a	          0x4885d2	                           test rdx, rdx	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4007a5d	     0xf847095ffff	                            je 0x4000fd3	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4007a63	            0x8b32	                    mov esi, dword [rdx]	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4007a65	          0x83fe2f	                           cmp esi, 0x2f	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4007a68	     0xf85e7b0ffff	                           jne 0x4002b55	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4007a6e	    0x8bb33c010000	           mov esi, dword [rbx + 0x13c] 	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x4007a74	            0x85f6	                           test esi, esi	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4007a76	            0x7921	                           jns 0x4007a99	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4007a78	      0xe9f2b0ffff	                           jmp 0x4002b6f	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4007a7d	           0xf1f00	                         nop dword [rax]	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4007a80	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4007a84	          0x83ee01	                              sub esi, 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x4007a87	          0x4885d2	                           test rdx, rdx	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4007a8a	     0xf844395ffff	                            je 0x4000fd3	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4007a90	          0x833a2f	                   cmp dword [rdx], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4007a93	     0xf853a95ffff	                           jne 0x4000fd3	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4007a99	            0x85f6	                           test esi, esi	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4007a9b	            0x75e3	                           jne 0x4007a80	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4007a9d	        0x488b5208	                mov rdx, qword [rdx + 8]	      4368	cp-demangle.c	FUNCTION_77
0x4007aa1	          0x4885d2	                           test rdx, rdx	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x4007aa4	     0xf842995ffff	                            je 0x4000fd3	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x4007aaa	            0x8b32	                    mov esi, dword [rdx]	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x4007aac	      0xe9a4b0ffff	                           jmp 0x4002b55	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x4007ab1	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4007ab5	          0x4489e6	                           mov esi, r12d	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4007ab8	          0x4889df	                            mov rdi, rbx	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4007abb	      0xe8200c0000	                   call sym.d_print_comp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4007ac0	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4007ac5	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4007acc	     0xf84d79fffff	                            je 0x4001aa9	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4007ad2	      0xe9c994ffff	                           jmp 0x4000fa0	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4007ad7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007ade	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007ae5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007aea	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007aed	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007af3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007afb	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007afd	      0xe9d1b8ffff	                           jmp 0x40033d3	      4224	cp-demangle.c	FUNCTION_71
0x4007b02	      0xbd5f000000	                           mov ebp, 0x5f	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4007b07	      0xe9ecc7ffff	                           jmp 0x40042f8	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4007b0c	        0x80780178	                cmp byte [rax + 1], 0x78	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4007b10	     0xf84f1060000	                            je 0x4008207	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4007b16	          0x4489e6	                           mov esi, r12d	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x4007b19	          0x4889df	                            mov rdi, rbx	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x4007b1c	      0xe86f0c0000	                call sym.d_print_expr_op	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x4007b21	      0xe91c94ffff	                           jmp 0x4000f42	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x4007b26	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b2d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007b34	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b39	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b3c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b42	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007b4a	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4007b4f	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007b51	      0xe9d2c9ffff	                           jmp 0x4004528	      4224	cp-demangle.c	FUNCTION_71
0x4007b56	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007b5d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b64	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b69	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b6c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b72	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007b7a	          0xc60369	                    mov byte [rbx], 0x69	      4235	cp-demangle.c	FUNCTION_72
0x4007b7d	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007b82	      0xe99dc9ffff	                           jmp 0x4004524	      4235	cp-demangle.c	FUNCTION_72
0x4007b87	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b8e	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007b95	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007b9a	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007ba0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007ba8	          0xc60368	                    mov byte [rbx], 0x68	      4235	cp-demangle.c	FUNCTION_72
0x4007bab	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007bb0	      0xe94dc9ffff	                           jmp 0x4004502	      4235	cp-demangle.c	FUNCTION_72
0x4007bb5	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007bbc	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007bc3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007bc8	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007bce	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007bd6	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4007bd9	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007bde	      0xe9fcc8ffff	                           jmp 0x40044df	      4235	cp-demangle.c	FUNCTION_72
0x4007be3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007bea	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007bf1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007bf6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007bf9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007bff	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007c07	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007c09	      0xe98ed6ffff	                           jmp 0x400529c	      4224	cp-demangle.c	FUNCTION_71
0x4007c0e	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c15	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007c1c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c21	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c27	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007c2f	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4007c32	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007c37	      0xe939c9ffff	                           jmp 0x4004575	      4235	cp-demangle.c	FUNCTION_72
0x4007c3c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c43	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007c4a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c4f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c52	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c58	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007c60	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4007c65	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007c67	      0xe974c9ffff	                           jmp 0x40045e0	      4224	cp-demangle.c	FUNCTION_71
0x4007c6c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007c73	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c7a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c7f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c82	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007c88	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007c90	          0xc6036f	                    mov byte [rbx], 0x6f	      4235	cp-demangle.c	FUNCTION_72
0x4007c93	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007c98	      0xe93fc9ffff	                           jmp 0x40045dc	      4235	cp-demangle.c	FUNCTION_72
0x4007c9d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007ca4	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007cab	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007cb0	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007cb3	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007cb9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007cc1	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4007cc4	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007cc9	      0xe9ecc8ffff	                           jmp 0x40045ba	      4235	cp-demangle.c	FUNCTION_72
0x4007cce	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007cd5	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007cdc	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007ce1	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007ce7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007cef	          0xc60375	                    mov byte [rbx], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x4007cf2	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007cf7	      0xe99bc8ffff	                           jmp 0x4004597	      4235	cp-demangle.c	FUNCTION_72
0x4007cfc	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4007d01	    0x488983200100	            mov qword [rbx + 0x120], rax	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4007d08	      0xe93dbbffff	                           jmp 0x400384a	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4007d0d	    0x41be03000000	                             mov r14d, 3	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007d13	      0xe9c3c6ffff	                           jmp 0x40043db	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4007d18	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d1f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007d26	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d2b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d2e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d34	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007d3c	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4007d41	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007d43	      0xe9a9d5ffff	                           jmp 0x40052f1	      4224	cp-demangle.c	FUNCTION_71
0x4007d48	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007d4f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d56	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d5b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d5e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d64	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007d6c	          0xc6033a	                    mov byte [rbx], 0x3a	      4235	cp-demangle.c	FUNCTION_72
0x4007d6f	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007d74	      0xe974d5ffff	                           jmp 0x40052ed	      4235	cp-demangle.c	FUNCTION_72
0x4007d79	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007d80	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d87	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d8c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d8f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007d95	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007d9d	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007d9f	      0xe9f2d5ffff	                           jmp 0x4005396	      4224	cp-demangle.c	FUNCTION_71
0x4007da4	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007dab	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007db2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007db7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007dba	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007dc0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007dc8	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007dca	      0xe97ed5ffff	                           jmp 0x400534d	      4224	cp-demangle.c	FUNCTION_71
0x4007dcf	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007dd6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007ddd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007de2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007de5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007deb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007df3	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007df5	      0xe96bd4ffff	                           jmp 0x4005265	      4224	cp-demangle.c	FUNCTION_71
0x4007dfa	          0x83ff04	                              cmp edi, 4	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4007dfd	     0xf843ac3ffff	                            je 0x400413d	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4007e03	          0x4989f8	                             mov r8, rdi	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e06	        0x4183c602	                             add r14d, 2	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e0a	        0x49c1e005	                               shl r8, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e0e	      0x4a8d4c0440	              lea rcx, [rsp + r8 + 0x40]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e13	          0x4889ce	                            mov rsi, rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e16	      0xb908000000	                              mov ecx, 8	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e1b	          0x4889f7	                            mov rdi, rsi	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e1e	      0x488b742408	                mov rsi, qword [rsp + 8]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e23	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e25	      0x4e894c0440	         mov qword [rsp + r8 + 0x40], r9	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e2a	          0x4901c0	                             add r8, rax	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e2d	    0x4d89aa58ffff	             mov qword [r10 - 0xa8], r13	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e34	    0x4c8983280100	             mov qword [rbx + 0x128], r8	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e3b	    0x41c78260ffff	               mov dword [r10 - 0xa0], 0	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e46	    0x49899268ffff	             mov qword [r10 - 0x98], rdx	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e4d	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4752	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e51	        0x418b7500	                    mov esi, dword [r13]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007e55	          0x8d4ee4	                   lea ecx, [rsi - 0x1c]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007e58	          0x83f933	                           cmp ecx, 0x33	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007e5b	     0xf87b4b9ffff	                            ja 0x4003815	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007e61	      0xbf01000000	                              mov edi, 1	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007e66	          0x48d3e7	                             shl rdi, cl	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007e69	          0x4c85df	                           test rdi, r11	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007e6c	     0xf84beb9ffff	                            je 0x4003830	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007e72	        0x4183fe04	                             cmp r14d, 4	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4007e76	     0xf84c1c2ffff	                            je 0x400413d	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4007e7c	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e84	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e8c	      0xb908000000	                              mov ecx, 8	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e91	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e93	        0x488d4840	                   lea rcx, [rax + 0x40]	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e97	        0x4883c060	                           add rax, 0x60	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007e9b	    0x4c89ac248800	             mov qword [rsp + 0x88], r13	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007ea3	    0x488983280100	            mov qword [rbx + 0x128], rax	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007eaa	    0xc78424900000	               mov dword [rsp + 0x90], 0	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007eb5	    0x48898c24a000	             mov qword [rsp + 0xa0], rcx	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007ebd	    0x488994249800	             mov qword [rsp + 0x98], rdx	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007ec5	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4752	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007ec9	        0x418b7500	                    mov esi, dword [r13]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007ecd	          0x8d46e4	                   lea eax, [rsi - 0x1c]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007ed0	          0x83f833	                           cmp eax, 0x33	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007ed3	     0xf8723030000	                            ja 0x40081fc	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007ed9	    0x48ba1f000000	            movabs rdx, 0xd00000000001f 	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4007ee3	    0x41be04000000	                             mov r14d, 4	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007ee9	        0x480fa3c2	                             bt rdx, rax	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007eed	     0xf833db9ffff	                           jae 0x4003830	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007ef3	      0xe945c2ffff	                           jmp 0x400413d	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4007ef8	      0xe800000000	                          call 0x4007efd	      5708	cp-demangle.c	FUNCTION_86
0x4007efd	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007f04	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f0b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f10	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f13	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f19	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007f21	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007f23	      0xe94bb9ffff	                           jmp 0x4003873	      4224	cp-demangle.c	FUNCTION_71
0x4007f28	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007f2f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f36	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f3b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f3e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f44	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007f4c	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007f4e	      0xe9feacffff	                           jmp 0x4002c51	      4224	cp-demangle.c	FUNCTION_71
0x4007f53	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007f5a	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f61	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f66	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f6c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007f74	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007f76	      0xe99eacffff	                           jmp 0x4002c19	      4224	cp-demangle.c	FUNCTION_71
0x4007f7b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f82	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007f89	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f8e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f91	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007f97	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007f9f	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4007fa4	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4007fa6	      0xe911d0ffff	                           jmp 0x4004fbc	      4224	cp-demangle.c	FUNCTION_71
0x4007fab	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007fb2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007fb9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007fbe	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007fc1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007fc7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4007fcf	          0xc60374	                    mov byte [rbx], 0x74	      4235	cp-demangle.c	FUNCTION_72
0x4007fd2	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4007fd7	      0xe9dccfffff	                           jmp 0x4004fb8	      4235	cp-demangle.c	FUNCTION_72
0x4007fdc	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007fe3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4007fea	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007fef	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007ff2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4007ff8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008000	          0xc60361	                    mov byte [rbx], 0x61	      4235	cp-demangle.c	FUNCTION_72
0x4008003	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4008008	      0xe989cfffff	                           jmp 0x4004f96	      4235	cp-demangle.c	FUNCTION_72
0x400800d	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008014	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400801b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008020	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008026	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400802e	          0xc60353	                    mov byte [rbx], 0x53	      4235	cp-demangle.c	FUNCTION_72
0x4008031	      0xb801000000	                              mov eax, 1	      4235	cp-demangle.c	FUNCTION_72
0x4008036	      0xe938cfffff	                           jmp 0x4004f73	      4235	cp-demangle.c	FUNCTION_72
0x400803b	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008042	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008049	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400804e	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008054	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400805c	          0xc6035f	                    mov byte [rbx], 0x5f	      4235	cp-demangle.c	FUNCTION_72
0x400805f	      0xba01000000	                              mov edx, 1	      4235	cp-demangle.c	FUNCTION_72
0x4008064	      0xe9e8ceffff	                           jmp 0x4004f51	      4235	cp-demangle.c	FUNCTION_72
0x4008069	        0x488b5508	                mov rdx, qword [rbp + 8]	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x400806d	          0x4489e6	                           mov esi, r12d	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4008070	          0x4889df	                            mov rdi, rbx	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4008073	      0xe868080000	                call sym.d_print_subexpr	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4008078	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400807d	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4008082	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4008085	      0xe8b680ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400808a	      0xe9118fffff	                           jmp 0x4000fa0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400808f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008096	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400809d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40080a2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40080a5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40080ab	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40080b3	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40080b5	      0xe928d4ffff	                           jmp 0x40054e2	      4224	cp-demangle.c	FUNCTION_71
0x40080ba	      0xba04000000	                              mov edx, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40080bf	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40080c4	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40080c7	      0xe87480ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40080cc	      0x49837d0800	                  cmp qword [r13 + 8], 0	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40080d1	            0x743c	                            je 0x400810f	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40080d3	          0x4c89ea	                            mov rdx, r13	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40080d6	          0x4489e6	                           mov esi, r12d	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40080d9	          0x4889df	                            mov rdi, rbx	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40080dc	      0xe8ff070000	                call sym.d_print_subexpr	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40080e1	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40080ec	     0xf847a050000	                            je 0x400866c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40080f2	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40080f9	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40080fd	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4008104	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4008108	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400810f	          0x4c89f2	                            mov rdx, r14	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4008112	          0x4489e6	                           mov esi, r12d	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4008115	          0x4889df	                            mov rdi, rbx	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4008118	      0xe8c3050000	                   call sym.d_print_comp	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x400811d	          0x4885ed	                           test rbp, rbp	      5508	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_81
0x4008120	     0xf847a8effff	                            je 0x4000fa0	      5508	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_81
0x4008126	          0x4889ea	                            mov rdx, rbp	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4008129	          0x4489e6	                           mov esi, r12d	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x400812c	          0x4889df	                            mov rdi, rbx	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x400812f	      0xe8ac070000	                call sym.d_print_subexpr	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4008134	      0xe9678effff	                           jmp 0x4000fa0	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4008139	      0xb801000000	                              mov eax, 1	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x400813e	      0xe99fd3ffff	                           jmp 0x40054e2	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4008143	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400814a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008151	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008156	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008159	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400815f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008167	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4008169	      0xe99ed3ffff	                           jmp 0x400550c	      4224	cp-demangle.c	FUNCTION_71
0x400816e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008175	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400817c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008181	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008184	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400818a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008192	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4008194	      0xe9a3d2ffff	                           jmp 0x400543c	      4224	cp-demangle.c	FUNCTION_71
0x4008199	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4712	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400819d	          0x4d85ed	                           test r13, r13	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081a0	     0xf8497bfffff	                            je 0x400413d	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081a6	        0x488d4840	                   lea rcx, [rax + 0x40]	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081aa	        0x418b7500	                    mov esi, dword [r13]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x40081ae	    0x4c89ac24a800	             mov qword [rsp + 0xa8], r13	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081b6	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081c1	    0x48899424b800	             mov qword [rsp + 0xb8], rdx	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081c9	    0x48898c24a000	             mov qword [rsp + 0xa0], rcx	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081d1	        0x488d4860	                   lea rcx, [rax + 0x60]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081d5	    0x48898b280100	            mov qword [rbx + 0x128], rcx	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081dc	          0x8d4ee4	                   lea ecx, [rsi - 0x1c]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081df	          0x83f933	                           cmp ecx, 0x33	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081e2	     0xf87ce010000	                            ja 0x40083b6	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081e8	    0x48b81f000000	            movabs rax, 0xd00000000001f 	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081f2	        0x480fa3c8	                             bt rax, rcx	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081f6	     0xf8241bfffff	                            jb 0x400413d	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40081fc	    0x41be04000000	                             mov r14d, 4	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4008202	      0xe90eb6ffff	                           jmp 0x4003815	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4008207	        0x80780200	                   cmp byte [rax + 2], 0	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400820b	     0xf8505f9ffff	                           jne 0x4007b16	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4008211	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400821c	     0xf8452030000	                            je 0x4008574	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4008222	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4008229	          0x4489e6	                           mov esi, r12d	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400822c	          0x4889df	                            mov rdi, rbx	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400822f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4008233	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400823a	        0xc604035b	              mov byte [rbx + rax], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x400823e	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x4008245	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x4008249	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400824d	      0xe88e040000	                   call sym.d_print_comp	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x4008252	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400825d	     0xf84dd020000	                            je 0x4008540	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4008263	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400826a	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400826e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4008275	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4008279	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x4008280	      0xe9d08cffff	                           jmp 0x4000f55	      4236	cp-demangle.c	FUNCTION_72
0x4008285	        0x488b5008	                mov rdx, qword [rax + 8]	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008289	        0x837a1001	               cmp dword [rdx + 0x10], 1	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400828d	     0xf853b8cffff	                           jne 0x4000ece	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008293	        0x488b5208	                mov rdx, qword [rdx + 8]	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4008297	          0x803a3e	                    cmp byte [rdx], 0x3e	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400829a	     0xf852e8cffff	                           jne 0x4000ece	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x40082a0	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40082ab	            0x752f	                           jne 0x40082dc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40082ad	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40082b4	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40082bb	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40082c0	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40082c3	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40082c9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40082d1	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40082dc	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40082e3	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40082e7	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40082ee	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40082f2	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40082f9	        0x488b4508	                mov rax, qword [rbp + 8]	      4236	cp-demangle.c	FUNCTION_72
0x40082fd	      0xe9cc8bffff	                           jmp 0x4000ece	      4236	cp-demangle.c	FUNCTION_72
0x4008302	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008309	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008310	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008315	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008318	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400831e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008326	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4008328	      0xe9f6f0ffff	                           jmp 0x4007423	      4224	cp-demangle.c	FUNCTION_71
0x400832d	            0x31c0	                            xor eax, eax	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x400832f	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x4008332	    0x488b8b200100	           mov rcx, qword [rbx + 0x120] 	      4633	cp-demangle.c	FUNCTION_86
0x4008339	      0xe942a8ffff	                           jmp 0x4002b80	      4633	cp-demangle.c	FUNCTION_86
0x400833e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008345	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400834c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008351	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008354	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400835a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008362	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4008364	      0xe902d1ffff	                           jmp 0x400546b	      4224	cp-demangle.c	FUNCTION_71
0x4008369	        0x488b5508	                mov rdx, qword [rbp + 8]	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x400836d	          0x4489e6	                           mov esi, r12d	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4008370	          0x4889df	                            mov rdi, rbx	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4008373	      0xe868050000	                call sym.d_print_subexpr	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4008378	          0x4c89f2	                            mov rdx, r14	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x400837b	          0x4489e6	                           mov esi, r12d	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x400837e	          0x4889df	                            mov rdi, rbx	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4008381	      0xe80a040000	                call sym.d_print_expr_op	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4008386	      0xe9158cffff	                           jmp 0x4000fa0	      5365	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x400838b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008392	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008399	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400839e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40083a1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40083a7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40083af	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40083b1	      0xe90cf0ffff	                           jmp 0x40073c2	      4224	cp-demangle.c	FUNCTION_71
0x40083b6	    0x41be04000000	                             mov r14d, 4	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40083bc	      0xe91ac0ffff	                           jmp 0x40043db	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40083c1	          0x4189fe	                           mov r14d, edi	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40083c4	      0xe94cb4ffff	                           jmp 0x4003815	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x40083c9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x40083cd	          0x833a29	                   cmp dword [rdx], 0x29	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x40083d0	            0x740a	                            je 0x40083dc	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x40083d2	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40083dc	        0x488b5008	                mov rdx, qword [rax + 8]	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40083e0	          0x4489e6	                           mov esi, r12d	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40083e3	          0x4889df	                            mov rdi, rbx	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40083e6	      0xe8f5040000	                call sym.d_print_subexpr	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x40083eb	      0xe91e8bffff	                           jmp 0x4000f0e	      5438	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x40083f0	          0x4d39f5	                            cmp r13, r14	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x40083f3	     0xf8609f7ffff	                           jbe 0x4007b02	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x40083f9	          0x80fa5f	                            cmp dl, 0x5f	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x40083fc	     0xf8500f7ffff	                           jne 0x4007b02	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008402	    0x4881feff0000	                           cmp rsi, 0xff	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4008409	     0xf87f3f6ffff	                            ja 0x4007b02	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x400840f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4008415	            0x89f5	                            mov ebp, esi	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4008417	            0x752f	                           jne 0x4008448	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4008419	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008420	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008427	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400842c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400842f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008435	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400843d	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4008448	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400844f	          0x4d89f4	                            mov r12, r14	      4236	cp-demangle.c	FUNCTION_72
0x4008452	        0x488d4201	                      lea rax, [rdx + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4008456	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400845d	        0x40882c13	               mov byte [rbx + rdx], bpl	      4235	cp-demangle.c	FUNCTION_72
0x4008461	    0x4088ab080100	             mov byte [rbx + 0x108], bpl	      4236	cp-demangle.c	FUNCTION_72
0x4008468	      0xe9b0beffff	                           jmp 0x400431d	      4236	cp-demangle.c	FUNCTION_72
0x400846d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008474	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400847b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008480	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008483	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008489	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4008494	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400849c	      0xe92cf3ffff	                           jmp 0x40077cd	      4224	cp-demangle.c	FUNCTION_71
0x40084a1	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40084a8	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40084af	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40084b4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40084b7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40084bd	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40084c8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40084d0	      0xe9c5f2ffff	                           jmp 0x400779a	      4224	cp-demangle.c	FUNCTION_71
0x40084d5	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40084dc	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40084e3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40084e8	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40084eb	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40084f1	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40084fc	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008504	      0xe9efd2ffff	                           jmp 0x40057f8	      4224	cp-demangle.c	FUNCTION_71
0x4008509	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4008514	     0xf848e000000	                            je 0x40085a8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400851a	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4008521	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4008525	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400852c	        0xc604032d	              mov byte [rbx + rax], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x4008530	    0xc68308010000	           mov byte [rbx + 0x108], 0x2d 	      4236	cp-demangle.c	FUNCTION_72
0x4008537	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4236	cp-demangle.c	FUNCTION_72
0x400853b	      0xe9bcefffff	                           jmp 0x40074fc	      4236	cp-demangle.c	FUNCTION_72
0x4008540	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008547	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400854e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008553	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008556	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400855c	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4008567	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400856f	      0xe9effcffff	                           jmp 0x4008263	      4224	cp-demangle.c	FUNCTION_71
0x4008574	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400857b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008582	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008587	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400858a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008590	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400859b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40085a3	      0xe97afcffff	                           jmp 0x4008222	      4224	cp-demangle.c	FUNCTION_71
0x40085a8	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40085af	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40085b6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40085bb	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40085c1	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40085cc	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40085d4	      0xe941ffffff	                           jmp 0x400851a	      4224	cp-demangle.c	FUNCTION_71
0x40085d9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40085e0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40085e7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40085ec	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40085ef	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40085f5	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4008600	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4008608	      0xe97589ffff	                           jmp 0x4000f82	      4224	cp-demangle.c	FUNCTION_71
0x400860d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008614	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400861b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008620	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008623	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008629	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4008634	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400863c	      0xe94eefffff	                           jmp 0x400758f	      4224	cp-demangle.c	FUNCTION_71
0x4008641	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x400864b	      0xe95089ffff	                           jmp 0x4000fa0	      4207	cp-demangle.c	FUNCTION_69
0x4008650	          0x4531c0	                            xor r8d, r8d	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4008653	      0xe931e7ffff	                           jmp 0x4006d89	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4008658	      0xba05000000	                              mov edx, 5	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400865d	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4008662	      0xe8d97affff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4008667	      0xe93489ffff	                           jmp 0x4000fa0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400866c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4008673	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400867a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400867f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008682	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4008688	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4008693	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400869b	      0xe952faffff	                           jmp 0x40080f2	      4224	cp-demangle.c	FUNCTION_71
0x40086a0	          0x4531ed	                          xor r13d, r13d	      5345	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40086a3	      0xe941cbffff	                           jmp 0x40051e9	      5345	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40086a8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40086af	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40086b6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40086bb	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40086be	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40086c4	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40086cf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40086d7	      0xe980eeffff	                           jmp 0x400755c	      4224	cp-demangle.c	FUNCTION_71
d_special_name	CALL,40:IF,8:SWITCH,3:ELSE,2:WHILE,0:FOR,0:DO,0:functions,0	423
0x400f700	            0x4154	                                push r12	      2026	cp-demangle.c	FUNCTION_31
0x400f702	              0x55	                                push rbp	      2026	cp-demangle.c	FUNCTION_31
0x400f703	              0x53	                                push rbx	      2026	cp-demangle.c	FUNCTION_31
0x400f704	          0x8b4f48	            mov ecx, dword [rdi + 0x48] 	      2027	cp-demangle.c	FUNCTION_31
0x400f707	          0x4889fb	                            mov rbx, rdi	      2026	cp-demangle.c	FUNCTION_31
0x400f70a	          0x8d4114	                   lea eax, [rcx + 0x14]	      2027	cp-demangle.c	FUNCTION_31
0x400f70d	          0x894748	             mov dword [rdi + 0x48], eax	      2027	cp-demangle.c	FUNCTION_31
0x400f710	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400f714	           0xfb610	                   movzx edx, byte [rax]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400f717	          0x80fa54	                            cmp dl, 0x54	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400f71a	            0x7414	                            je 0x400f730	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400f71c	          0x80fa47	                            cmp dl, 0x47	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x400f71f	            0x743f	                            je 0x400f760	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x400f721	              0x5b	                                 pop rbx	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f722	            0x31c0	                            xor eax, eax	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f724	              0x5d	                                 pop rbp	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f725	            0x415c	                                 pop r12	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f727	              0xc3	                                     ret	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f728	     0xf1f84000000	                   nop dword [rax + rax]	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f730	        0x488d5001	                      lea rdx, [rax + 1]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400f734	        0x48895718	             mov qword [rdi + 0x18], rdx	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400f738	        0x80780100	                   cmp byte [rax + 1], 0	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f73c	            0x74e3	                            je 0x400f721	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f73e	        0x488d5002	                      lea rdx, [rax + 2]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f742	        0x48895718	             mov qword [rdi + 0x18], rdx	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f746	         0xfb64001	               movzx eax, byte [rax + 1]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f74a	          0x83e843	                           sub eax, 0x43	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f74d	            0x3c33	                            cmp al, 0x33	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f74f	            0x77d0	                            ja 0x400f721	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f751	           0xfb6c0	                           movzx eax, al	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f754	    0xff24c5000000	                       jmp qword [rax*8]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f75b	       0xf1f440000	                   nop dword [rax + rax]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x400f760	        0x488d5001	                      lea rdx, [rax + 1]	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x400f764	        0x48895318	             mov qword [rbx + 0x18], rdx	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x400f768	        0x80780100	                   cmp byte [rax + 1], 0	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f76c	            0x74b3	                            je 0x400f721	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f76e	        0x488d5002	                      lea rdx, [rax + 2]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f772	        0x48895318	             mov qword [rbx + 0x18], rdx	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f776	         0xfb67801	               movzx edi, byte [rax + 1]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f77a	          0x8d4fbf	                   lea ecx, [rdi - 0x41]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f77d	          0x80f931	                            cmp cl, 0x31	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f780	            0x779f	                            ja 0x400f721	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f782	           0xfb6c9	                           movzx ecx, cl	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f785	    0xff24cd000000	                       jmp qword [rcx*8]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f78c	         0xf1f4000	                         nop dword [rax]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400f790	         0xfb64802	               movzx ecx, byte [rax + 2]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x400f794	            0x31ff	                            xor edi, edi	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400f796	          0x80f96e	                            cmp cl, 0x6e	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400f799	     0xf8450050000	                            je 0x400fcef	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400f79f	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f7a2	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f7a4	     0xf8777ffffff	                            ja 0x400f721	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f7aa	        0x440fbed1	                          movsx r10d, cl	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7ae	        0x488d7201	                      lea rsi, [rdx + 1]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7b2	          0x4531c0	                            xor r8d, r8d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7b5	    0x41bbffffff7f	                    mov r11d, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7bb	    0x41b967666666	                     mov r9d, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7c1	            0xeb2c	                           jmp 0x400f7ef	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7c3	       0xf1f440000	                   nop dword [rax + rax]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7c8	        0x440fbed1	                          movsx r10d, cl	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7cc	          0x4489d9	                           mov ecx, r11d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7cf	        0x4883c601	                              add rsi, 1	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7d3	        0x418d42d0	                   lea eax, [r10 - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7d7	            0x29c1	                            sub ecx, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7d9	            0x89c8	                            mov eax, ecx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7db	          0xc1f91f	                           sar ecx, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7de	          0x41f7e9	                                imul r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7e1	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7e4	            0x29ca	                            sub edx, ecx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7e6	          0x4439c2	                            cmp edx, r8d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7e9	     0xf8c32ffffff	                            jl 0x400f721	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f7ef	        0x48897318	             mov qword [rbx + 0x18], rsi	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400f7f3	           0xfb60e	                   movzx ecx, byte [rsi]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400f7f6	        0x438d0480	                    lea eax, [r8 + r8*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400f7fa	        0x458d1442	                 lea r10d, [r10 + rax*2]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400f7fe	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f801	        0x458d42d0	                   lea r8d, [r10 - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400f805	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f807	            0x76bf	                           jbe 0x400f7c8	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f809	        0x4183f801	                              cmp r8d, 1	      1933	cp-demangle.c	FUNCTION_30	IF_1
0x400f80d	     0xf8e0effffff	                           jle 0x400f721	      1933	cp-demangle.c	FUNCTION_30	IF_1
0x400f813	          0x4084ff	                           test dil, dil	      1933	cp-demangle.c	FUNCTION_30	IF_1
0x400f816	     0xf8505ffffff	                           jne 0x400f721	      1933	cp-demangle.c	FUNCTION_30	IF_1
0x400f81c	            0x84c9	                             test cl, cl	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400f81e	     0xf84fdfeffff	                            je 0x400f721	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400f824	        0x488d6e01	                      lea rbp, [rsi + 1]	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400f828	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400f82c	          0x803e5f	                    cmp byte [rsi], 0x5f	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400f82f	     0xf85ecfeffff	                           jne 0x400f721	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400f835	        0x458d62cf	                  lea r12d, [r10 - 0x31]	      1939	cp-demangle.c	FUNCTION_30
0x400f839	            0x31d2	                            xor edx, edx	      1926	cp-demangle.c	FUNCTION_30
0x400f83b	       0xf1f440000	                   nop dword [rax + rax]	      1926	cp-demangle.c	FUNCTION_30
0x400f840	         0xfb64500	                   movzx eax, byte [rbp]	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x400f844	            0x84c0	                             test al, al	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x400f846	     0xf84d5feffff	                            je 0x400f721	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x400f84c	            0x3c24	                            cmp al, 0x24	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x400f84e	      0xbe01000000	                              mov esi, 1	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x400f853	            0x7520	                           jne 0x400f875	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x400f855	      0xe916040000	                           jmp 0x400fc70	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x400f85a	    0x660f1f440000	                    nop word [rax + rax]	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x400f860	       0xfb64c3500	             movzx ecx, byte [rbp + rsi]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f865	        0x488d7e01	                      lea rdi, [rsi + 1]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f869	          0x80f924	                            cmp cl, 0x24	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f86c	            0x7412	                            je 0x400f880	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f86e	            0x84c9	                             test cl, cl	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f870	            0x740e	                            je 0x400f880	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f872	          0x4889fe	                            mov rsi, rdi	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f875	          0x4439e6	                           cmp esi, r12d	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f878	          0x4189f0	                            mov r8d, esi	      1980	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f87b	            0x7ce3	                            jl 0x400f860	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f87d	          0x4863f6	                         movsxd rsi, esi	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400f880	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f883	          0x3b7b2c	            cmp edi, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f886	     0xf8c74030000	                            jl 0x400fc00	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f88c	        0x48017318	            add qword [rbx + 0x18], rsi 	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x400f890	            0x31c0	                            xor eax, eax	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f892	              0x5b	                                 pop rbx	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f893	              0x5d	                                 pop rbp	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f894	            0x415c	                                 pop r12	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f896	              0xc3	                                     ret	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f897	    0x660f1f840000	                    nop word [rax + rax]	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f8a0	          0x4889df	                            mov rdi, rbx	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x400f8a3	      0xe8a8f3ffff	                         call sym.d_name	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x400f8a8	            0x31c9	                            xor ecx, ecx	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x400f8aa	          0x4889c2	                            mov rdx, rax	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x400f8ad	      0xbe13000000	                           mov esi, 0x13	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x400f8b2	          0x4889df	                            mov rdi, rbx	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x400f8b5	              0x5b	                                 pop rbx	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f8b6	              0x5d	                                 pop rbp	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f8b7	            0x415c	                                 pop r12	      2151	cp-demangle.c	FUNCTION_31	ELSE_2
0x400f8b9	      0xe98207ffff	                     jmp sym.d_make_comp	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x400f8be	            0x6690	                                     nop	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x400f8c0	        0x80780200	                   cmp byte [rax + 2], 0	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x400f8c4	          0x4889df	                            mov rdi, rbx	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400f8c7	     0xf8413010000	                            je 0x400f9e0	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x400f8cd	        0x488d5003	                      lea rdx, [rax + 3]	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x400f8d1	        0x48895318	             mov qword [rbx + 0x18], rdx	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x400f8d5	        0x8078026e	                cmp byte [rax + 2], 0x6e	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x400f8d9	     0xf8501010000	                           jne 0x400f9e0	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x400f8df	      0xe8acfaffff	        call sym.d_encoding.constprop.23	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400f8e4	            0x31c9	                            xor ecx, ecx	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400f8e6	          0x4889c2	                            mov rdx, rax	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400f8e9	      0xbe49000000	                           mov esi, 0x49	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400f8ee	            0xebc2	                           jmp 0x400f8b2	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400f8f0	          0x4889df	                            mov rdi, rbx	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x400f8f3	      0xe858f3ffff	                         call sym.d_name	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x400f8f8	          0x4889c5	                            mov rbp, rax	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x400f8fb	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f8fe	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f901	     0xf8d23040000	                           jge 0x400fd2a	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400f907	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x400f90a	        0x4c8b4318	              mov r8, qword [rbx + 0x18]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x400f90e	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x400f911	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400f915	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400f919	        0x488d0cca	                  lea rcx, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400f91d	    0xc74104000000	                  mov dword [rcx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400f924	          0x894328	             mov dword [rbx + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x400f927	    0xc70141000000	                   mov dword [rcx], 0x41	      1724	cp-demangle.c	FUNCTION_26	IF_1
0x400f92d	        0x410fbe30	                    movsx esi, byte [r8]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x400f931	        0x4080fe6e	                           cmp sil, 0x6e	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400f935	     0xf8494020000	                            je 0x400fbcf	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400f93b	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f93e	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f940	     0xf87eb030000	                            ja 0x400fd31	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f946	          0x4531e4	                          xor r12d, r12d	      1690	cp-demangle.c	FUNCTION_25
0x400f949	        0x4983c001	                               add r8, 1	      1690	cp-demangle.c	FUNCTION_25
0x400f94d	          0x4531c9	                            xor r9d, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f950	    0x41bbffffff7f	                    mov r11d, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f956	    0x41ba67666666	                    mov r10d, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f95c	            0xeb24	                           jmp 0x400f982	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f95e	            0x6690	                                     nop	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f960	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f963	          0x4489df	                           mov edi, r11d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f966	        0x4983c001	                               add r8, 1	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f96a	            0x29c7	                            sub edi, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f96c	            0x89f8	                            mov eax, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f96e	          0xc1ff1f	                           sar edi, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f971	          0x41f7ea	                               imul r10d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f974	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f977	            0x29fa	                            sub edx, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f979	          0x4439ca	                            cmp edx, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f97c	     0xf8c53030000	                            jl 0x400fcd5	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400f982	        0x438d0489	                    lea eax, [r9 + r9*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400f986	        0x4c894318	              mov qword [rbx + 0x18], r8	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400f98a	      0x448d4c46d0	           lea r9d, [rsi + rax*2 - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400f98f	        0x410fbe30	                    movsx esi, byte [r8]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400f993	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f996	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f998	            0x76c6	                           jbe 0x400f960	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400f99a	          0x4585e4	                         test r12d, r12d	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400f99d	            0x7403	                            je 0x400f9a2	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400f99f	          0x41f7d9	                                 neg r9d	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400f9a2	          0x4d63c9	                          movsxd r9, r9d	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400f9a5	        0x4c894908	                 mov qword [rcx + 8], r9	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x400f9a9	          0x4889ea	                            mov rdx, rbp	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x400f9ac	      0xbe16000000	                           mov esi, 0x16	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x400f9b1	      0xe9fcfeffff	                           jmp 0x400f8b2	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x400f9b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x400f9c0	          0x4889df	                            mov rdi, rbx	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x400f9c3	      0xe8c8f9ffff	        call sym.d_encoding.constprop.23	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x400f9c8	            0x31c9	                            xor ecx, ecx	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x400f9ca	          0x4889c2	                            mov rdx, rax	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x400f9cd	      0xbe17000000	                           mov esi, 0x17	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x400f9d2	      0xe9dbfeffff	                           jmp 0x400f8b2	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x400f9d7	    0x660f1f840000	                    nop word [rax + rax]	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x400f9e0	      0xe8abf9ffff	        call sym.d_encoding.constprop.23	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x400f9e5	            0x31c9	                            xor ecx, ecx	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x400f9e7	          0x4889c2	                            mov rdx, rax	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x400f9ea	      0xbe48000000	                           mov esi, 0x48	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x400f9ef	      0xe9befeffff	                           jmp 0x400f8b2	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x400f9f4	      0xe800000000	                          call 0x400f9f9	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400f9f9	        0x4c8b4318	              mov r8, qword [rbx + 0x18]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x400f9fd	          0x4531d2	                          xor r10d, r10d	      1690	cp-demangle.c	FUNCTION_25
0x400fa00	          0x4889c5	                            mov rbp, rax	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400fa03	        0x410fbe30	                    movsx esi, byte [r8]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x400fa07	        0x4080fe6e	                           cmp sil, 0x6e	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400fa0b	     0xf84fe020000	                            je 0x400fd0f	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x400fa11	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fa14	          0x4531c9	                            xor r9d, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa17	    0x41bbffffff7f	                    mov r11d, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa1d	      0xb967666666	                     mov ecx, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa22	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fa24	            0x7627	                           jbe 0x400fa4d	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fa26	            0xeb4f	                           jmp 0x400fa77	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fa28	     0xf1f84000000	                   nop dword [rax + rax]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fa30	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa33	          0x4489df	                           mov edi, r11d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa36	            0x29c7	                            sub edi, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa38	            0x89f8	                            mov eax, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa3a	          0xc1ff1f	                           sar edi, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa3d	            0xf7e9	                                imul ecx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa3f	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa42	            0x29fa	                            sub edx, edi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa44	          0x4439ca	                            cmp edx, r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa47	     0xf8cd4fcffff	                            jl 0x400f721	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fa4d	        0x438d0489	                    lea eax, [r9 + r9*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400fa51	        0x4983c001	                               add r8, 1	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400fa55	        0x4c894318	              mov qword [rbx + 0x18], r8	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400fa59	      0x448d4c46d0	           lea r9d, [rsi + rax*2 - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400fa5e	        0x410fbe30	                    movsx esi, byte [r8]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x400fa62	          0x8d46d0	                   lea eax, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fa65	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fa67	            0x76c7	                           jbe 0x400fa30	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fa69	          0x4585d2	                         test r10d, r10d	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400fa6c	            0x7409	                            je 0x400fa77	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400fa6e	          0x4585c9	                           test r9d, r9d	      2075	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x400fa71	     0xf85aafcffff	                           jne 0x400f721	      2075	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x400fa77	        0x4080fe5f	                           cmp sil, 0x5f	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x400fa7b	     0xf85a0fcffff	                           jne 0x400f721	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x400fa81	        0x4983c001	                               add r8, 1	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x400fa85	          0x4889df	                            mov rdi, rbx	      2079	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400fa88	        0x4c894318	              mov qword [rbx + 0x18], r8	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x400fa8c	      0xe800000000	                          call 0x400fa91	      2079	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400fa91	        0x83434805	               add dword [rbx + 0x48], 5	      2082	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400fa95	          0x4889e9	                            mov rcx, rbp	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x400fa98	          0x4889c2	                            mov rdx, rax	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x400fa9b	      0xbe0b000000	                            mov esi, 0xb	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x400faa0	      0xe90dfeffff	                           jmp 0x400f8b2	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x400faa5	      0xe800000000	                          call 0x400faaa	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x400faaa	            0x31c9	                            xor ecx, ecx	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x400faac	          0x4889c2	                            mov rdx, rax	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x400faaf	      0xbe0e000000	                            mov esi, 0xe	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x400fab4	      0xe9f9fdffff	                           jmp 0x400f8b2	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x400fab9	      0xe892f1ffff	                         call sym.d_name	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x400fabe	            0x31c9	                            xor ecx, ecx	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x400fac0	          0x4889c2	                            mov rdx, rax	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x400fac3	      0xbe14000000	                           mov esi, 0x14	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x400fac8	      0xe9e5fdffff	                           jmp 0x400f8b2	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x400facd	      0xe800000000	                          call 0x400fad2	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x400fad2	            0x31c9	                            xor ecx, ecx	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x400fad4	          0x4889c2	                            mov rdx, rax	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x400fad7	      0xbe0c000000	                            mov esi, 0xc	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x400fadc	      0xe9d1fdffff	                           jmp 0x400f8b2	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x400fae1	      0xe800000000	                          call 0x400fae6	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x400fae6	            0x31c9	                            xor ecx, ecx	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x400fae8	          0x4889c2	                            mov rdx, rax	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x400faeb	      0xbe12000000	                           mov esi, 0x12	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x400faf0	      0xe9bdfdffff	                           jmp 0x400f8b2	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x400faf5	      0xe800000000	                          call 0x400fafa	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400fafa	            0x31c9	                            xor ecx, ecx	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400fafc	          0x4889c2	                            mov rdx, rax	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400faff	      0xbe0d000000	                            mov esi, 0xd	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400fb04	      0xe9a9fdffff	                           jmp 0x400f8b2	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400fb09	          0x83c10a	                            add ecx, 0xa	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400fb0c	          0x894f48	             mov dword [rdi + 0x48], ecx	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400fb0f	      0xe800000000	                          call 0x400fb14	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x400fb14	            0x31c9	                            xor ecx, ecx	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x400fb16	          0x4889c2	                            mov rdx, rax	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x400fb19	      0xbe0a000000	                            mov esi, 0xa	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x400fb1e	      0xe98ffdffff	                           jmp 0x400f8b2	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x400fb23	          0x83c10f	                            add ecx, 0xf	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400fb26	          0x894f48	             mov dword [rdi + 0x48], ecx	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400fb29	      0xe800000000	                          call 0x400fb2e	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x400fb2e	            0x31c9	                            xor ecx, ecx	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x400fb30	          0x4889c2	                            mov rdx, rax	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x400fb33	      0xbe09000000	                              mov esi, 9	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x400fb38	      0xe975fdffff	                           jmp 0x400f8b2	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x400fb3d	      0xe80ef1ffff	                         call sym.d_name	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400fb42	            0x31c9	                            xor ecx, ecx	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400fb44	          0x4889c2	                            mov rdx, rax	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400fb47	      0xbe15000000	                           mov esi, 0x15	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400fb4c	      0xe961fdffff	                           jmp 0x400f8b2	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400fb51	            0x31f6	                            xor esi, esi	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x400fb53	      0xe8d810ffff	                  call sym.d_call_offset	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x400fb58	            0x85c0	                           test eax, eax	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x400fb5a	     0xf84c1fbffff	                            je 0x400f721	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x400fb60	            0x31f6	                            xor esi, esi	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x400fb62	      0xe8c910ffff	                  call sym.d_call_offset	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x400fb67	            0x85c0	                           test eax, eax	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x400fb69	     0xf84b2fbffff	                            je 0x400f721	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x400fb6f	      0xe81cf8ffff	        call sym.d_encoding.constprop.23	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400fb74	            0x31c9	                            xor ecx, ecx	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400fb76	          0x4889c2	                            mov rdx, rax	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400fb79	      0xbe11000000	                           mov esi, 0x11	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400fb7e	      0xe92ffdffff	                           jmp 0x400f8b2	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400fb83	      0xbe68000000	                           mov esi, 0x68	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x400fb88	      0xe8a310ffff	                  call sym.d_call_offset	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x400fb8d	            0x85c0	                           test eax, eax	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x400fb8f	     0xf848cfbffff	                            je 0x400f721	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x400fb95	      0xe8f6f7ffff	        call sym.d_encoding.constprop.23	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x400fb9a	            0x31c9	                            xor ecx, ecx	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x400fb9c	          0x4889c2	                            mov rdx, rax	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x400fb9f	      0xbe0f000000	                            mov esi, 0xf	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x400fba4	      0xe909fdffff	                           jmp 0x400f8b2	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x400fba9	      0xbe76000000	                           mov esi, 0x76	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x400fbae	      0xe87d10ffff	                  call sym.d_call_offset	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x400fbb3	            0x85c0	                           test eax, eax	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x400fbb5	     0xf8466fbffff	                            je 0x400f721	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x400fbbb	      0xe8d0f7ffff	        call sym.d_encoding.constprop.23	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x400fbc0	            0x31c9	                            xor ecx, ecx	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x400fbc2	          0x4889c2	                            mov rdx, rax	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x400fbc5	      0xbe10000000	                           mov esi, 0x10	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x400fbca	      0xe9e3fcffff	                           jmp 0x400f8b2	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x400fbcf	        0x498d4001	                       lea rax, [r8 + 1]	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400fbd3	        0x48894318	             mov qword [rbx + 0x18], rax	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400fbd7	      0x410fbe7001	                movsx esi, byte [r8 + 1]	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400fbdc	          0x8d56d0	                   lea edx, [rsi - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fbdf	          0x80fa09	                               cmp dl, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fbe2	     0xf8749010000	                            ja 0x400fd31	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fbe8	          0x4989c0	                             mov r8, rax	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fbeb	    0x41bc01000000	                             mov r12d, 1	      1694	cp-demangle.c	FUNCTION_25	IF_1
0x400fbf1	      0xe953fdffff	                           jmp 0x400f949	      1694	cp-demangle.c	FUNCTION_25	IF_1
0x400fbf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1694	cp-demangle.c	FUNCTION_25	IF_1
0x400fc00	          0x4863c7	                         movsxd rax, edi	       935	cp-demangle.c	FUNCTION_3
0x400fc03	          0x83c701	                              add edi, 1	       937	cp-demangle.c	FUNCTION_3
0x400fc06	          0x4529c4	                           sub r12d, r8d	      1985	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1
0x400fc09	        0x488d0c40	                  lea rcx, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x400fc0d	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400fc11	          0x897b28	             mov dword [rbx + 0x28], edi	       937	cp-demangle.c	FUNCTION_3
0x400fc14	        0x488d0cc8	                  lea rcx, [rax + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400fc18	        0x48896908	                mov qword [rcx + 8], rbp	       865	cp-demangle.c	
0x400fc1c	        0x44894110	             mov dword [rcx + 0x10], r8d	       866	cp-demangle.c	
0x400fc20	        0x48037318	             add rsi, qword [rbx + 0x18]	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x400fc24	    0xc74104000000	                  mov dword [rcx + 4], 0	       863	cp-demangle.c	
0x400fc2b	    0xc70100000000	                      mov dword [rcx], 0	       864	cp-demangle.c	
0x400fc31	          0x4889f5	                            mov rbp, rsi	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x400fc34	        0x48897318	             mov qword [rbx + 0x18], rsi	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x400fc38	          0x4885d2	                           test rdx, rdx	      1991	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x400fc3b	     0xf848f000000	                            je 0x400fcd0	      1991	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x400fc41	      0xbe3f000000	                           mov esi, 0x3f	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x400fc46	          0x4889df	                            mov rdi, rbx	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x400fc49	      0xe8f203ffff	                    call sym.d_make_comp	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x400fc4e	          0x4885c0	                           test rax, rax	      1996	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x400fc51	          0x4889c2	                            mov rdx, rax	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x400fc54	     0xf84c7faffff	                            je 0x400f721	      1996	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x400fc5a	          0x4585e4	                         test r12d, r12d	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x400fc5d	     0xf8fddfbffff	                            jg 0x400f840	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x400fc63	            0x31c9	                            xor ecx, ecx	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x400fc65	      0xbe3e000000	                           mov esi, 0x3e	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x400fc6a	      0xe943fcffff	                           jmp 0x400f8b2	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x400fc6f	              0x90	                                     nop	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x400fc70	         0xfb64501	               movzx eax, byte [rbp + 1]	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fc74	            0x3c53	                            cmp al, 0x53	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fc76	            0x7470	                            je 0x400fce8	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fc78	            0x3c5f	                            cmp al, 0x5f	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fc7a	            0x7465	                            je 0x400fce1	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fc7c	            0x3c24	                            cmp al, 0x24	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fc7e	     0xf859dfaffff	                           jne 0x400f721	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fc84	      0xbe24000000	                           mov esi, 0x24	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fc89	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400fc8c	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400fc8f	            0x7d74	                           jge 0x400fd05	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400fc91	          0x4863c8	                         movsxd rcx, eax	       935	cp-demangle.c	FUNCTION_3
0x400fc94	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x400fc97	        0x4183ec02	                             sub r12d, 2	      1971	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x400fc9b	        0x488d3c49	                  lea rdi, [rcx + rcx*2]	       935	cp-demangle.c	FUNCTION_3
0x400fc9f	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400fca3	        0x488d0cf9	                  lea rcx, [rcx + rdi*8]	       935	cp-demangle.c	FUNCTION_3
0x400fca7	    0xc74104000000	                  mov dword [rcx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400fcae	          0x894328	             mov dword [rbx + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x400fcb1	          0x897108	                mov dword [rcx + 8], esi	      1918	cp-demangle.c	FUNCTION_29	IF_1
0x400fcb4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400fcb8	    0xc70140000000	                   mov dword [rcx], 0x40	      1917	cp-demangle.c	FUNCTION_29	IF_1
0x400fcbe	        0x488d6802	                      lea rbp, [rax + 2]	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400fcc2	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400fcc6	      0xe96dffffff	                           jmp 0x400fc38	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400fccb	       0xf1f440000	                   nop dword [rax + rax]	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400fcd0	          0x4889ca	                            mov rdx, rcx	      1992	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x400fcd3	            0xeb85	                           jmp 0x400fc5a	      1992	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x400fcd5	    0x49c7c1ffffff	              mov r9, 0xffffffffffffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fcdc	      0xe9c4fcffff	                           jmp 0x400f9a5	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400fce1	      0xbe2e000000	                           mov esi, 0x2e	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fce6	            0xeba1	                           jmp 0x400fc89	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fce8	      0xbe2f000000	                           mov esi, 0x2f	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fced	            0xeb9a	                           jmp 0x400fc89	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400fcef	        0x488d5003	                      lea rdx, [rax + 3]	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400fcf3	      0xbf01000000	                              mov edi, 1	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400fcf8	        0x48895318	             mov qword [rbx + 0x18], rdx	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400fcfc	         0xfb64803	               movzx ecx, byte [rax + 3]	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400fd00	      0xe99afaffff	                           jmp 0x400f79f	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400fd05	      0x4883431802	               add qword [rbx + 0x18], 2	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400fd0a	      0xe912faffff	                           jmp 0x400f721	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400fd0f	        0x498d4001	                       lea rax, [r8 + 1]	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400fd13	    0x41ba01000000	                             mov r10d, 1	      1694	cp-demangle.c	FUNCTION_25	IF_1
0x400fd19	        0x48894318	             mov qword [rbx + 0x18], rax	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x400fd1d	      0x410fbe7001	                movsx esi, byte [r8 + 1]	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400fd22	          0x4989c0	                             mov r8, rax	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400fd25	      0xe9e7fcffff	                           jmp 0x400fa11	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x400fd2a	            0x31c9	                            xor ecx, ecx	       934	cp-demangle.c	FUNCTION_3	IF_1
0x400fd2c	      0xe978fcffff	                           jmp 0x400f9a9	       934	cp-demangle.c	FUNCTION_3	IF_1
0x400fd31	          0x4531c9	                            xor r9d, r9d	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400fd34	      0xe96cfcffff	                           jmp 0x400f9a5	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
