_rl_input_queued	IF,0:CALL,3:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	11
0x40007f0	            0x85ff	                           test edi, edi	       302	input.c	FUNCTION_8	IF_1
0x40007f2	              0x53	                                push rbx	       355	input.c	FUNCTION_10
0x40007f3	    0x8b1d00000000	            mov ebx, dword [0x040007f9] 	       301	input.c	FUNCTION_8
0x40007f9	            0x7806	                            js 0x4000801	       302	input.c	FUNCTION_8	IF_1
0x40007fb	    0x893d00000000	            mov dword [0x04000801], edi 	       303	input.c	FUNCTION_8	IF_1
0x4000801	      0xe800000000	                          call 0x4000806	       359	input.c	FUNCTION_10	CALL_2
0x4000806	            0x85db	                           test ebx, ebx	       302	input.c	FUNCTION_8	IF_1
0x4000808	            0x7806	                            js 0x4000810	       302	input.c	FUNCTION_8	IF_1
0x400080a	    0x891d00000000	            mov dword [0x04000810], ebx 	       303	input.c	FUNCTION_8	IF_1
0x4000810	              0x5b	                                 pop rbx	       362	input.c	FUNCTION_10
0x4000811	              0xc3	                                     ret	       362	input.c	FUNCTION_10
_rl_input_available	IF,2:CALL,8:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	61
0x4000700	            0x4156	                                push r14	       315	input.c	FUNCTION_9
0x4000702	            0x4155	                                push r13	       315	input.c	FUNCTION_9
0x4000704	            0x4154	                                push r12	       315	input.c	FUNCTION_9
0x4000706	              0x55	                                push rbp	       315	input.c	FUNCTION_9
0x4000707	              0x53	                                push rbx	       315	input.c	FUNCTION_9
0x4000708	    0x4881ec200100	                          sub rsp, 0x120	       315	input.c	FUNCTION_9
0x400070f	    0x488b3d000000	            mov rdi, qword [0x04000716] 	       325	input.c	FUNCTION_9	CALL_1
0x4000716	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       328	input.c	FUNCTION_9	CALL_2
0x400071b	    0x64488b042528	                mov rax, qword fs:[0x28]	       315	input.c	FUNCTION_9
0x4000724	    0x488984241801	            mov qword [rsp + 0x118], rax	       315	input.c	FUNCTION_9
0x400072c	            0x31c0	                            xor eax, eax	       315	input.c	FUNCTION_9
0x400072e	      0xe800000000	                          call 0x4000733	       325	input.c	FUNCTION_9	CALL_1
0x4000733	      0xba10000000	                           mov edx, 0x10	       328	input.c	FUNCTION_9	CALL_2
0x4000738	          0x4c63f0	                         movsxd r14, eax	       325	input.c	FUNCTION_9	CALL_1
0x400073b	          0x4c89e7	                            mov rdi, r12	       328	input.c	FUNCTION_9	CALL_2
0x400073e	            0x31c0	                            xor eax, eax	       328	input.c	FUNCTION_9	CALL_2
0x4000740	          0x4889d1	                            mov rcx, rdx	       328	input.c	FUNCTION_9	CALL_2
0x4000743	              0xfc	                                     cld	       328	input.c	FUNCTION_9	CALL_2
0x4000744	          0xf348ab	              rep stosq qword [rdi], rax	       328	input.c	FUNCTION_9	CALL_2
0x4000747	    0x4c8dac249000	                   lea r13, [rsp + 0x90]	       329	input.c	FUNCTION_9	CALL_3
0x400074f	          0x4889d1	                            mov rcx, rdx	       329	input.c	FUNCTION_9	CALL_3
0x4000752	          0x4c89ef	                            mov rdi, r13	       329	input.c	FUNCTION_9	CALL_3
0x4000755	              0xfc	                                     cld	       329	input.c	FUNCTION_9	CALL_3
0x4000756	          0xf348ab	              rep stosq qword [rdi], rax	       329	input.c	FUNCTION_9	CALL_3
0x4000759	          0x4c89f7	                            mov rdi, r14	       330	input.c	FUNCTION_9	CALL_4
0x400075c	      0xbd01000000	                              mov ebp, 1	       330	input.c	FUNCTION_9	CALL_4
0x4000761	      0xe800000000	                          call 0x4000766	       330	input.c	FUNCTION_9	CALL_4
0x4000766	          0x4489f2	                           mov edx, r14d	       330	input.c	FUNCTION_9	CALL_4
0x4000769	          0x4c89f7	                            mov rdi, r14	       331	input.c	FUNCTION_9	CALL_5
0x400076c	          0xc1fa1f	                           sar edx, 0x1f	       330	input.c	FUNCTION_9	CALL_4
0x400076f	          0xc1ea1a	                           shr edx, 0x1a	       330	input.c	FUNCTION_9	CALL_4
0x4000772	        0x418d0c16	                    lea ecx, [r14 + rdx]	       330	input.c	FUNCTION_9	CALL_4
0x4000776	          0x83e13f	                           and ecx, 0x3f	       330	input.c	FUNCTION_9	CALL_4
0x4000779	            0x29d1	                            sub ecx, edx	       330	input.c	FUNCTION_9	CALL_4
0x400077b	          0x48d3e5	                             shl rbp, cl	       330	input.c	FUNCTION_9	CALL_4
0x400077e	      0x48096cc410	      or qword [rsp + rax*8 + 0x10], rbp	       330	input.c	FUNCTION_9	CALL_4
0x4000783	      0xe800000000	                          call 0x4000788	       331	input.c	FUNCTION_9	CALL_5
0x4000788	    0x4809acc49000	      or qword [rsp + rax*8 + 0x90], rbp	       331	input.c	FUNCTION_9	CALL_5
0x4000790	    0x486305000000	         movsxd rax, dword [0x04000797] 	       333	input.c	FUNCTION_9
0x4000797	        0x418d7e01	                      lea edi, [r14 + 1]	       334	input.c	FUNCTION_9	CALL_6
0x400079b	            0x31d2	                            xor edx, edx	       334	input.c	FUNCTION_9	CALL_6
0x400079d	          0x4c89e6	                            mov rsi, r12	       334	input.c	FUNCTION_9	CALL_6
0x40007a0	          0x4989e0	                             mov r8, rsp	       334	input.c	FUNCTION_9	CALL_6
0x40007a3	          0x4c89e9	                            mov rcx, r13	       334	input.c	FUNCTION_9	CALL_6
0x40007a6	    0x48c704240000	                      mov qword [rsp], 0	       332	input.c	FUNCTION_9
0x40007ae	      0x4889442408	                mov qword [rsp + 8], rax	       333	input.c	FUNCTION_9
0x40007b3	      0xe800000000	                          call 0x40007b8	       334	input.c	FUNCTION_9	CALL_6
0x40007b8	            0x85c0	                           test eax, eax	       334	input.c	FUNCTION_9	CALL_6
0x40007ba	           0xf9fc0	                                 setg al	       334	input.c	FUNCTION_9	CALL_6
0x40007bd	    0x488bb4241801	           mov rsi, qword [rsp + 0x118] 	       350	input.c	FUNCTION_9
0x40007c5	    0x644833342528	                xor rsi, qword fs:[0x28]	       350	input.c	FUNCTION_9
0x40007ce	            0x7513	                           jne 0x40007e3	       350	input.c	FUNCTION_9
0x40007d0	    0x4881c4200100	                          add rsp, 0x120	       350	input.c	FUNCTION_9
0x40007d7	           0xfb6c0	                           movzx eax, al	       350	input.c	FUNCTION_9
0x40007da	              0x5b	                                 pop rbx	       350	input.c	FUNCTION_9
0x40007db	              0x5d	                                 pop rbp	       350	input.c	FUNCTION_9
0x40007dc	            0x415c	                                 pop r12	       350	input.c	FUNCTION_9
0x40007de	            0x415d	                                 pop r13	       350	input.c	FUNCTION_9
0x40007e0	            0x415e	                                 pop r14	       350	input.c	FUNCTION_9
0x40007e2	              0xc3	                                     ret	       350	input.c	FUNCTION_9
0x40007e3	      0xe800000000	                          call 0x40007e8	       350	input.c	FUNCTION_9
rl_execute_next	IF,0:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	4
0x40009b0	    0x893d00000000	            mov dword [0x040009b6], edi 	       419	input.c	FUNCTION_13
0x40009b6	    0x810d00000000	          or dword [0x040009c0], 0x20000	       420	input.c	FUNCTION_13	CALL_1
0x40009c0	            0x31c0	                            xor eax, eax	       422	input.c	FUNCTION_13
0x40009c2	              0xc3	                                     ret	       422	input.c	FUNCTION_13
_rl_insert_typein	IF,1:CALL,5:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,1	69
0x4000820	              0x55	                                push rbp	       367	input.c	FUNCTION_11
0x4000821	              0x53	                                push rbx	       367	input.c	FUNCTION_11
0x4000822	            0x89fd	                            mov ebp, edi	       367	input.c	FUNCTION_11
0x4000824	      0xbf00020000	                          mov edi, 0x200	       372	input.c	FUNCTION_11	CALL_1
0x4000829	        0x4883ec08	                              sub rsp, 8	       367	input.c	FUNCTION_11
0x400082d	      0xe800000000	                          call 0x4000832	       372	input.c	FUNCTION_11	CALL_1
0x4000832	    0x486315000000	         movsxd rdx, dword [0x04000839] 	       156	input.c	FUNCTION_4	IF_1
0x4000839	    0x448b05000000	            mov r8d, dword [0x04000840] 	       156	input.c	FUNCTION_4	IF_1
0x4000840	          0x4531c9	                            xor r9d, r9d	       163	input.c	FUNCTION_4	IF_2	IF_3
0x4000843	          0x4889c3	                            mov rbx, rax	       372	input.c	FUNCTION_11	CALL_1
0x4000846	          0x408828	                     mov byte [rax], bpl	       373	input.c	FUNCTION_11
0x4000849	        0x488d4801	                      lea rcx, [rax + 1]	       373	input.c	FUNCTION_11
0x400084d	      0xbf01000000	                              mov edi, 1	       156	input.c	FUNCTION_4	IF_1
0x4000852	          0x4439c2	                            cmp edx, r8d	       156	input.c	FUNCTION_4	IF_1
0x4000855	     0xf84b7000000	                            je 0x4000912	       156	input.c	FUNCTION_4	IF_1
0x400085b	       0xf1f440000	                   nop dword [rax + rax]	       156	input.c	FUNCTION_4	IF_1
0x4000860	          0x8d4201	                      lea eax, [rdx + 1]	       159	input.c	FUNCTION_4
0x4000863	     0xfb6b2000000	                   movzx esi, byte [rdx]	       159	input.c	FUNCTION_4
0x400086a	      0x3dff010000	                          cmp eax, 0x1ff	       163	input.c	FUNCTION_4	IF_2	IF_3
0x400086f	        0x410f4fc1	                          cmovg eax, r9d	       163	input.c	FUNCTION_4	IF_2	IF_3
0x4000873	          0x4863d0	                         movsxd rdx, eax	       163	input.c	FUNCTION_4	IF_2	IF_3
0x4000876	        0x400fb6c6	                          movzx eax, sil	       376	input.c	FUNCTION_11	WHILE_1
0x400087a	        0x48c1e004	                              shl rax, 4	       376	input.c	FUNCTION_11	WHILE_1
0x400087e	    0x480305000000	             add rax, qword [0x04000885]	       376	input.c	FUNCTION_11	WHILE_1
0x4000885	          0x803800	                       cmp byte [rax], 0	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000888	            0x7546	                           jne 0x40008d0	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400088a	    0x488178080000	                  cmp qword [rax + 8], 0	       376	input.c	FUNCTION_11	WHILE_1
0x4000892	            0x753c	                           jne 0x40008d0	       376	input.c	FUNCTION_11	WHILE_1
0x4000894	          0x408831	                     mov byte [rcx], sil	       378	input.c	FUNCTION_11	WHILE_1
0x4000897	          0x83c701	                              add edi, 1	       378	input.c	FUNCTION_11	WHILE_1
0x400089a	        0x4883c101	                              add rcx, 1	       378	input.c	FUNCTION_11	WHILE_1
0x400089e	          0x4439c2	                            cmp edx, r8d	       156	input.c	FUNCTION_4	IF_1
0x40008a1	            0x75bd	                           jne 0x4000860	       156	input.c	FUNCTION_4	IF_1
0x40008a3	    0x891500000000	            mov dword [0x040008a9], edx 	       156	input.c	FUNCTION_4	IF_1
0x40008a9	          0x4863ff	                         movsxd rdi, edi	       156	input.c	FUNCTION_4	IF_1
0x40008ac	        0xc6043b00	                 mov byte [rbx + rdi], 0	       383	input.c	FUNCTION_11
0x40008b0	          0x4889df	                            mov rdi, rbx	       384	input.c	FUNCTION_11	CALL_4
0x40008b3	      0xe800000000	                          call 0x40008b8	       384	input.c	FUNCTION_11	CALL_4
0x40008b8	        0x4883c408	                              add rsp, 8	       386	input.c	FUNCTION_11
0x40008bc	          0x4889df	                            mov rdi, rbx	       385	input.c	FUNCTION_11	CALL_5
0x40008bf	              0x5b	                                 pop rbx	       386	input.c	FUNCTION_11
0x40008c0	              0x5d	                                 pop rbp	       386	input.c	FUNCTION_11
0x40008c1	      0xe900000000	                           jmp 0x40008c6	       385	input.c	FUNCTION_11	CALL_5
0x40008c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       385	input.c	FUNCTION_11	CALL_5
0x40008d0	          0x4439c2	                            cmp edx, r8d	       143	input.c	FUNCTION_3	IF_1
0x40008d3	    0x891500000000	            mov dword [0x040008d9], edx 	       143	input.c	FUNCTION_3	IF_1
0x40008d9	            0x7f2d	                            jg 0x4000908	       143	input.c	FUNCTION_3	IF_1
0x40008db	            0x89d0	                            mov eax, edx	       146	input.c	FUNCTION_3	ELSE_1
0x40008dd	          0x4429c0	                            sub eax, r8d	       146	input.c	FUNCTION_3	ELSE_1
0x40008e0	       0x5ff010000	                          add eax, 0x1ff	       146	input.c	FUNCTION_3	ELSE_1
0x40008e5	            0x85c0	                           test eax, eax	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x40008e7	            0x7415	                            je 0x40008fe	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x40008e9	          0x83ea01	                              sub edx, 1	       180	input.c	FUNCTION_5	IF_1	IF_2
0x40008ec	            0x782b	                            js 0x4000919	       180	input.c	FUNCTION_5	IF_1	IF_2
0x40008ee	    0x891500000000	            mov dword [0x040008f4], edx 	       179	input.c	FUNCTION_5	IF_1
0x40008f4	          0x4863d2	                         movsxd rdx, edx	       182	input.c	FUNCTION_5	IF_1
0x40008f7	    0x4088b2000000	                     mov byte [rdx], sil	       182	input.c	FUNCTION_5	IF_1
0x40008fe	          0x4863ff	                         movsxd rdi, edi	       182	input.c	FUNCTION_5	IF_1
0x4000901	            0xeba9	                           jmp 0x40008ac	       182	input.c	FUNCTION_5	IF_1
0x4000903	       0xf1f440000	                   nop dword [rax + rax]	       182	input.c	FUNCTION_5	IF_1
0x4000908	            0x89d0	                            mov eax, edx	       144	input.c	FUNCTION_3	IF_1
0x400090a	          0x4429c0	                            sub eax, r8d	       144	input.c	FUNCTION_3	IF_1
0x400090d	          0x83e801	                              sub eax, 1	       144	input.c	FUNCTION_3	IF_1
0x4000910	            0xebd3	                           jmp 0x40008e5	       144	input.c	FUNCTION_3	IF_1
0x4000912	      0xbf01000000	                              mov edi, 1	       156	input.c	FUNCTION_4	IF_1
0x4000917	            0xeb93	                           jmp 0x40008ac	       156	input.c	FUNCTION_4	IF_1
0x4000919	    0xc70500000000	          mov dword [0x04000923], 0x1ff 	       181	input.c	FUNCTION_5	IF_1	IF_2
0x4000923	      0xbaff010000	                          mov edx, 0x1ff	       181	input.c	FUNCTION_5	IF_1	IF_2
0x4000928	            0xebca	                           jmp 0x40008f4	       181	input.c	FUNCTION_5	IF_1	IF_2
