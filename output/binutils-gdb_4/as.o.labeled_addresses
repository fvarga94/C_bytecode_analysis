macro_expr	ELSE,0:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,0:IF,1:CALL,3	45
0x4000040	            0x4156	                                push r14	      1099	as.c	FUNCTION_10	CALL_3
0x4000042	            0x4155	                                push r13	      1099	as.c	FUNCTION_10	CALL_3
0x4000044	          0x4989fd	                            mov r13, rdi	      1099	as.c	FUNCTION_10	CALL_3
0x4000047	            0x4154	                                push r12	      1099	as.c	FUNCTION_10	CALL_3
0x4000049	              0x55	                                push rbp	      1099	as.c	FUNCTION_10	CALL_3
0x400004a	          0x4889d7	                            mov rdi, rdx	      1103	as.c	FUNCTION_10	CALL_5
0x400004d	              0x53	                                push rbx	      1099	as.c	FUNCTION_10	CALL_3
0x400004e	          0x4889d5	                            mov rbp, rdx	      1099	as.c	FUNCTION_10	CALL_3
0x4000051	          0x4889f3	                            mov rbx, rsi	      1099	as.c	FUNCTION_10	CALL_3
0x4000054	          0x4989cc	                            mov r12, rcx	      1099	as.c	FUNCTION_10	CALL_3
0x4000057	        0x4883ec30	                           sub rsp, 0x30	      1099	as.c	FUNCTION_10	CALL_3
0x400005b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1099	as.c	FUNCTION_10	CALL_3
0x4000064	      0x4889442428	             mov qword [rsp + 0x28], rax	      1099	as.c	FUNCTION_10	CALL_3
0x4000069	            0x31c0	                            xor eax, eax	      1099	as.c	FUNCTION_10	CALL_3
0x400006b	      0xe800000000	                          call 0x4000070	      1103	as.c	FUNCTION_10	CALL_5
0x4000070	        0x48035d00	                    add rbx, qword [rbp]	      1106	as.c	FUNCTION_10	CALL_6
0x4000074	            0x31d2	                            xor edx, edx	      1107	as.c	FUNCTION_10
0x4000076	            0x31ff	                            xor edi, edi	      1107	as.c	FUNCTION_10
0x4000078	          0x4889e6	                            mov rsi, rsp	      1107	as.c	FUNCTION_10
0x400007b	    0x4c8b35000000	            mov r14, qword [0x04000082] 	      1105	as.c	FUNCTION_10
0x4000082	    0x48891d000000	            mov qword [0x04000089], rbx 	      1106	as.c	FUNCTION_10	CALL_6
0x4000089	      0xe800000000	                          call 0x400008e	      1107	as.c	FUNCTION_10
0x400008e	    0x488b1d000000	            mov rbx, qword [0x04000095] 	      1108	as.c	FUNCTION_10
0x4000095	        0x482b5d00	                    sub rbx, qword [rbp]	      1108	as.c	FUNCTION_10
0x4000099	      0x807c241802	                cmp byte [rsp + 0x18], 2	      1111	as.c	FUNCTION_10
0x400009e	    0x4c8935000000	            mov qword [0x040000a5], r14 	      1109	as.c	FUNCTION_10	CALL_7
0x40000a5	            0x740f	                            je 0x40000b6	      1111	as.c	FUNCTION_10
0x40000a7	          0x4c89ee	                            mov rsi, r13	      1112	as.c	FUNCTION_10	CALL_9
0x40000aa	      0xbf00000000	                              mov edi, 0	      1112	as.c	FUNCTION_10	CALL_9
0x40000af	            0x31c0	                            xor eax, eax	      1112	as.c	FUNCTION_10	CALL_9
0x40000b1	      0xe800000000	                          call 0x40000b6	      1112	as.c	FUNCTION_10	CALL_9
0x40000b6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1114	as.c	FUNCTION_10	CALL_11
0x40000bb	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1117	as.c	FUNCTION_10
0x40000c0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1117	as.c	FUNCTION_10
0x40000c9	        0x49890424	                    mov qword [r12], rax	      1114	as.c	FUNCTION_10	CALL_11
0x40000cd	          0x4889d8	                            mov rax, rbx	      1117	as.c	FUNCTION_10
0x40000d0	            0x750d	                           jne 0x40000df	      1117	as.c	FUNCTION_10
0x40000d2	        0x4883c430	                           add rsp, 0x30	      1117	as.c	FUNCTION_10
0x40000d6	              0x5b	                                 pop rbx	      1117	as.c	FUNCTION_10
0x40000d7	              0x5d	                                 pop rbp	      1117	as.c	FUNCTION_10
0x40000d8	            0x415c	                                 pop r12	      1117	as.c	FUNCTION_10
0x40000da	            0x415d	                                 pop r13	      1117	as.c	FUNCTION_10
0x40000dc	            0x415e	                                 pop r14	      1117	as.c	FUNCTION_10
0x40000de	              0xc3	                                     ret	      1117	as.c	FUNCTION_10
0x40000df	      0xe800000000	                          call 0x40000e4	      1117	as.c	FUNCTION_10
dump_statistics	ELSE,0:WHILE,0:SWITCH,0:DO,0:functions,0:FOR,0:IF,0:CALL,8	42
0x40000f0	              0x55	                                push rbp	      1067	as.c	FUNCTION_9	IF_1
0x40000f1	              0x53	                                push rbx	      1067	as.c	FUNCTION_9	IF_1
0x40000f2	        0x4883ec08	                              sub rsp, 8	      1067	as.c	FUNCTION_9	IF_1
0x40000f6	      0xe800000000	                          call 0x40000fb	      1068	as.c	FUNCTION_9	CALL_3
0x40000fb	    0x482b05000000	             sub rax, qword [0x04000102]	      1068	as.c	FUNCTION_9	CALL_3
0x4000102	      0xba05000000	                              mov edx, 5	      1070	as.c	FUNCTION_9
0x4000107	      0xbe00000000	                              mov esi, 0	      1070	as.c	FUNCTION_9
0x400010c	            0x31ff	                            xor edi, edi	      1070	as.c	FUNCTION_9
0x400010e	    0x488b2d000000	            mov rbp, qword [0x04000115] 	      1070	as.c	FUNCTION_9
0x4000115	          0x4889c3	                            mov rbx, rax	      1068	as.c	FUNCTION_9	CALL_3
0x4000118	      0xe800000000	                          call 0x400011d	      1070	as.c	FUNCTION_9
0x400011d	    0x48badb34b6d7	          movabs rdx, 0x431bde82d7b634db	        97	stdio2.h	CALL_11
0x4000127	          0x4889c6	                            mov rsi, rax	      1070	as.c	FUNCTION_9
0x400012a	          0x4889d8	                            mov rax, rbx	        97	stdio2.h	CALL_11
0x400012d	          0x48f7ea	                                imul rdx	        97	stdio2.h	CALL_11
0x4000130	          0x4889d8	                            mov rax, rbx	        97	stdio2.h	CALL_11
0x4000133	    0x488b3d000000	            mov rdi, qword [0x0400013a] 	        97	stdio2.h	CALL_11
0x400013a	        0x48c1f83f	                           sar rax, 0x3f	        97	stdio2.h	CALL_11
0x400013e	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_11
0x4000141	        0x48c1fa12	                           sar rdx, 0x12	        97	stdio2.h	CALL_11
0x4000145	          0x4989d0	                             mov r8, rdx	        97	stdio2.h	CALL_11
0x4000148	          0x4889f2	                            mov rdx, rsi	        97	stdio2.h	CALL_11
0x400014b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x4000150	          0x4929c0	                             sub r8, rax	        97	stdio2.h	CALL_11
0x4000153	    0x4969c040420f	                   imul rax, r8, 0xf4240	        97	stdio2.h	CALL_11
0x400015a	          0x4829c3	                            sub rbx, rax	        97	stdio2.h	CALL_11
0x400015d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_11
0x400015f	          0x4989d9	                             mov r9, rbx	        97	stdio2.h	CALL_11
0x4000162	      0xe800000000	                          call 0x4000167	        97	stdio2.h	CALL_11
0x4000167	    0x488b3d000000	            mov rdi, qword [0x0400016e] 	      1073	as.c	FUNCTION_9
0x400016e	      0xe800000000	                          call 0x4000173	      1073	as.c	FUNCTION_9
0x4000173	    0x488b3d000000	            mov rdi, qword [0x0400017a] 	      1074	as.c	
0x400017a	      0xe800000000	                          call 0x400017f	      1074	as.c	
0x400017f	    0x488b3d000000	            mov rdi, qword [0x04000186] 	      1075	as.c	
0x4000186	      0xe800000000	                          call 0x400018b	      1075	as.c	
0x400018b	    0x488b3d000000	            mov rdi, qword [0x04000192] 	      1076	as.c	
0x4000192	      0xe800000000	                          call 0x4000197	      1076	as.c	
0x4000197	    0x488b3d000000	            mov rdi, qword [0x0400019e] 	      1079	as.c	
0x400019e	        0x4883c408	                              add rsp, 8	      1085	as.c	
0x40001a2	              0x5b	                                 pop rbx	      1085	as.c	
0x40001a3	              0x5d	                                 pop rbp	      1085	as.c	
0x40001a4	      0xe900000000	                           jmp 0x40001a9	      1079	as.c	
main	ELSE,1:WHILE,1:SWITCH,0:DO,0:functions,0:FOR,1:IF,12:CALL,65	123
0x4000040	            0x4156	                                push r14	      1099	as.c	FUNCTION_10	CALL_3
0x4000042	            0x4155	                                push r13	      1099	as.c	FUNCTION_10	CALL_3
0x4000044	          0x4989fd	                            mov r13, rdi	      1099	as.c	FUNCTION_10	CALL_3
0x4000047	            0x4154	                                push r12	      1099	as.c	FUNCTION_10	CALL_3
0x4000049	              0x55	                                push rbp	      1099	as.c	FUNCTION_10	CALL_3
0x400004a	          0x4889d7	                            mov rdi, rdx	      1103	as.c	FUNCTION_10	CALL_5
0x400004d	              0x53	                                push rbx	      1099	as.c	FUNCTION_10	CALL_3
0x400004e	          0x4889d5	                            mov rbp, rdx	      1099	as.c	FUNCTION_10	CALL_3
0x4000051	          0x4889f3	                            mov rbx, rsi	      1099	as.c	FUNCTION_10	CALL_3
0x4000054	          0x4989cc	                            mov r12, rcx	      1099	as.c	FUNCTION_10	CALL_3
0x4000057	        0x4883ec30	                           sub rsp, 0x30	      1099	as.c	FUNCTION_10	CALL_3
0x400005b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1099	as.c	FUNCTION_10	CALL_3
0x4000064	      0x4889442428	             mov qword [rsp + 0x28], rax	      1099	as.c	FUNCTION_10	CALL_3
0x4000069	            0x31c0	                            xor eax, eax	      1099	as.c	FUNCTION_10	CALL_3
0x400006b	      0xe800000000	                          call 0x4000070	      1103	as.c	FUNCTION_10	CALL_5
0x4000070	        0x48035d00	                    add rbx, qword [rbp]	      1106	as.c	FUNCTION_10	CALL_6
0x4000074	            0x31d2	                            xor edx, edx	      1107	as.c	FUNCTION_10
0x4000076	            0x31ff	                            xor edi, edi	      1107	as.c	FUNCTION_10
0x4000078	          0x4889e6	                            mov rsi, rsp	      1107	as.c	FUNCTION_10
0x400007b	    0x4c8b35000000	            mov r14, qword [0x04000082] 	      1105	as.c	FUNCTION_10
0x4000082	    0x48891d000000	            mov qword [0x04000089], rbx 	      1106	as.c	FUNCTION_10	CALL_6
0x4000089	      0xe800000000	                          call 0x400008e	      1107	as.c	FUNCTION_10
0x400008e	    0x488b1d000000	            mov rbx, qword [0x04000095] 	      1108	as.c	FUNCTION_10
0x4000095	        0x482b5d00	                    sub rbx, qword [rbp]	      1108	as.c	FUNCTION_10
0x4000099	      0x807c241802	                cmp byte [rsp + 0x18], 2	      1111	as.c	FUNCTION_10
0x400009e	    0x4c8935000000	            mov qword [0x040000a5], r14 	      1109	as.c	FUNCTION_10	CALL_7
0x40000a5	            0x740f	                            je 0x40000b6	      1111	as.c	FUNCTION_10
0x40000a7	          0x4c89ee	                            mov rsi, r13	      1112	as.c	FUNCTION_10	CALL_9
0x40000aa	      0xbf00000000	                              mov edi, 0	      1112	as.c	FUNCTION_10	CALL_9
0x40000af	            0x31c0	                            xor eax, eax	      1112	as.c	FUNCTION_10	CALL_9
0x40000b1	      0xe800000000	                          call 0x40000b6	      1112	as.c	FUNCTION_10	CALL_9
0x40000b6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1114	as.c	FUNCTION_10	CALL_11
0x40000bb	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1117	as.c	FUNCTION_10
0x40000c0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1117	as.c	FUNCTION_10
0x40000c9	        0x49890424	                    mov qword [r12], rax	      1114	as.c	FUNCTION_10	CALL_11
0x40000cd	          0x4889d8	                            mov rax, rbx	      1117	as.c	FUNCTION_10
0x40000d0	            0x750d	                           jne 0x40000df	      1117	as.c	FUNCTION_10
0x40000d2	        0x4883c430	                           add rsp, 0x30	      1117	as.c	FUNCTION_10
0x40000d6	              0x5b	                                 pop rbx	      1117	as.c	FUNCTION_10
0x40000d7	              0x5d	                                 pop rbp	      1117	as.c	FUNCTION_10
0x40000d8	            0x415c	                                 pop r12	      1117	as.c	FUNCTION_10
0x40000da	            0x415d	                                 pop r13	      1117	as.c	FUNCTION_10
0x40000dc	            0x415e	                                 pop r14	      1117	as.c	FUNCTION_10
0x40000de	              0xc3	                                     ret	      1117	as.c	FUNCTION_10
0x40000df	      0xe800000000	                          call 0x40000e4	      1117	as.c	FUNCTION_10
0x40000e4	            0x6690	                                     nop	      1117	as.c	FUNCTION_10
0x40000e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1117	as.c	FUNCTION_10
0x40000f0	              0x55	                                push rbp	      1067	as.c	FUNCTION_9	IF_1
0x40000f1	              0x53	                                push rbx	      1067	as.c	FUNCTION_9	IF_1
0x40000f2	        0x4883ec08	                              sub rsp, 8	      1067	as.c	FUNCTION_9	IF_1
0x40000f6	      0xe800000000	                          call 0x40000fb	      1068	as.c	FUNCTION_9	CALL_3
0x40000fb	    0x482b05000000	             sub rax, qword [0x04000102]	      1068	as.c	FUNCTION_9	CALL_3
0x4000102	      0xba05000000	                              mov edx, 5	      1070	as.c	FUNCTION_9
0x4000107	      0xbe00000000	                              mov esi, 0	      1070	as.c	FUNCTION_9
0x400010c	            0x31ff	                            xor edi, edi	      1070	as.c	FUNCTION_9
0x400010e	    0x488b2d000000	            mov rbp, qword [0x04000115] 	      1070	as.c	FUNCTION_9
0x4000115	          0x4889c3	                            mov rbx, rax	      1068	as.c	FUNCTION_9	CALL_3
0x4000118	      0xe800000000	                          call 0x400011d	      1070	as.c	FUNCTION_9
0x400011d	    0x48badb34b6d7	          movabs rdx, 0x431bde82d7b634db	        97	stdio2.h	CALL_11
0x4000127	          0x4889c6	                            mov rsi, rax	      1070	as.c	FUNCTION_9
0x400012a	          0x4889d8	                            mov rax, rbx	        97	stdio2.h	CALL_11
0x400012d	          0x48f7ea	                                imul rdx	        97	stdio2.h	CALL_11
0x4000130	          0x4889d8	                            mov rax, rbx	        97	stdio2.h	CALL_11
0x4000133	    0x488b3d000000	            mov rdi, qword [0x0400013a] 	        97	stdio2.h	CALL_11
0x400013a	        0x48c1f83f	                           sar rax, 0x3f	        97	stdio2.h	CALL_11
0x400013e	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_11
0x4000141	        0x48c1fa12	                           sar rdx, 0x12	        97	stdio2.h	CALL_11
0x4000145	          0x4989d0	                             mov r8, rdx	        97	stdio2.h	CALL_11
0x4000148	          0x4889f2	                            mov rdx, rsi	        97	stdio2.h	CALL_11
0x400014b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x4000150	          0x4929c0	                             sub r8, rax	        97	stdio2.h	CALL_11
0x4000153	    0x4969c040420f	                   imul rax, r8, 0xf4240	        97	stdio2.h	CALL_11
0x400015a	          0x4829c3	                            sub rbx, rax	        97	stdio2.h	CALL_11
0x400015d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_11
0x400015f	          0x4989d9	                             mov r9, rbx	        97	stdio2.h	CALL_11
0x4000162	      0xe800000000	                          call 0x4000167	        97	stdio2.h	CALL_11
0x4000167	    0x488b3d000000	            mov rdi, qword [0x0400016e] 	      1073	as.c	FUNCTION_9
0x400016e	      0xe800000000	                          call 0x4000173	      1073	as.c	FUNCTION_9
0x4000173	    0x488b3d000000	            mov rdi, qword [0x0400017a] 	      1074	as.c	
0x400017a	      0xe800000000	                          call 0x400017f	      1074	as.c	
0x400017f	    0x488b3d000000	            mov rdi, qword [0x04000186] 	      1075	as.c	
0x4000186	      0xe800000000	                          call 0x400018b	      1075	as.c	
0x400018b	    0x488b3d000000	            mov rdi, qword [0x04000192] 	      1076	as.c	
0x4000192	      0xe800000000	                          call 0x4000197	      1076	as.c	
0x4000197	    0x488b3d000000	            mov rdi, qword [0x0400019e] 	      1079	as.c	
0x400019e	        0x4883c408	                              add rsp, 8	      1085	as.c	
0x40001a2	              0x5b	                                 pop rbx	      1085	as.c	
0x40001a3	              0x5d	                                 pop rbp	      1085	as.c	
0x40001a4	      0xe900000000	                           jmp 0x40001a9	      1079	as.c	
0x40001a9	     0xf1f80000000	                         nop dword [rax]	      1079	as.c	
0x40001b0	        0x4883ec08	                              sub rsp, 8	      1089	as.c	FUNCTION_10
0x40001b4	    0x488b3d000000	            mov rdi, qword [0x040001bb] 	      1090	as.c	FUNCTION_10
0x40001bb	      0xe800000000	                          call 0x40001c0	      1090	as.c	FUNCTION_10
0x40001c0	    0x8b0500000000	            mov eax, dword [0x040001c6] 	      1091	as.c	FUNCTION_10
0x40001c6	            0x85c0	                           test eax, eax	      1091	as.c	FUNCTION_10
0x40001c8	            0x7406	                            je 0x40001d0	      1091	as.c	FUNCTION_10
0x40001ca	        0x4883c408	                              add rsp, 8	      1093	as.c	FUNCTION_10
0x40001ce	              0xc3	                                     ret	      1093	as.c	FUNCTION_10
0x40001cf	              0x90	                                     nop	      1093	as.c	FUNCTION_10
0x40001d0	    0x488b3d000000	            mov rdi, qword [0x040001d7] 	      1092	as.c	FUNCTION_10
0x40001d7	        0x4883c408	                              add rsp, 8	      1093	as.c	FUNCTION_10
0x40001db	      0xe900000000	                jmp sym.print_version_id	      1092	as.c	FUNCTION_10
0x40001e0	    0x8b0500000000	            mov eax, dword [0x040001e6] 	       221	as.c	ELSE_1	FUNCTION_4	IF_1
0x40001e6	            0x85c0	                           test eax, eax	       221	as.c	ELSE_1	FUNCTION_4	IF_1
0x40001e8	            0x7406	                            je 0x40001f0	       221	as.c	ELSE_1	FUNCTION_4	IF_1
0x40001ea	            0xf3c3	                                     ret	       221	as.c	ELSE_1	FUNCTION_4	IF_1
0x40001ec	         0xf1f4000	                         nop dword [rax]	       221	as.c	ELSE_1	FUNCTION_4	IF_1
0x40001f0	        0x4883ec08	                              sub rsp, 8	       218	as.c	ELSE_1	FUNCTION_4
0x40001f4	      0xba05000000	                              mov edx, 5	       225	as.c	ELSE_1	FUNCTION_4	CALL_1
0x40001f9	      0xbe00000000	                              mov esi, 0	       225	as.c	ELSE_1	FUNCTION_4	CALL_1
0x40001fe	            0x31ff	                            xor edi, edi	       225	as.c	ELSE_1	FUNCTION_4	CALL_1
0x4000200	    0xc70500000000	               mov dword [0x0400020a], 1	       223	as.c	ELSE_1	FUNCTION_4
0x400020a	      0xe800000000	                          call 0x400020f	       225	as.c	ELSE_1	FUNCTION_4	CALL_1
0x400020f	    0x488b3d000000	            mov rdi, qword [0x04000216] 	        97	stdio2.h	CALL_11
0x4000216	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_11
0x4000219	    0x41b900000000	                              mov r9d, 0	        97	stdio2.h	CALL_11
0x400021f	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_11
0x4000225	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_11
0x400022a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x400022f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_11
0x4000231	        0x4883c408	                              add rsp, 8	       227	as.c	ELSE_1	FUNCTION_4
0x4000235	      0xe900000000	                   jmp section_end..text	        97	stdio2.h	CALL_11
0x400023a	              0xff	                                 invalid	       799	as.c	FUNCTION_6	WHILE_1	SWITCH_1
