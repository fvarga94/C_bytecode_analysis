alpha_find_call	ELSE,0:FOR,1:DO,0:CALL,16:functions,0:IF,5:SWITCH,1:WHILE,0	177
0x4000040	            0x4157	                                push r15	        94	alpha.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        94	alpha.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	        94	alpha.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	        94	alpha.c	FUNCTION_1
0x4000048	          0x4989fd	                            mov r13, rdi	        94	alpha.c	FUNCTION_1
0x400004b	              0x55	                                push rbp	        94	alpha.c	FUNCTION_1
0x400004c	              0x53	                                push rbx	        94	alpha.c	FUNCTION_1
0x400004d	          0x4989d4	                            mov r12, rdx	        94	alpha.c	FUNCTION_1
0x4000050	          0x4889f3	                            mov rbx, rsi	        94	alpha.c	FUNCTION_1
0x4000053	        0x4883ec18	                           sub rsp, 0x18	        94	alpha.c	FUNCTION_1
0x4000057	    0x48833d000000	               cmp qword [0x0400005f], 0	        99	alpha.c	FUNCTION_1	IF_1
0x400005f	     0xf849a020000	                            je 0x40002ff	        99	alpha.c	FUNCTION_1	IF_1
0x4000065	    0xf60500000000	               test byte [0x0400006c], 1	       107	alpha.c	FUNCTION_1	CALL_4
0x400006c	     0xf85de010000	                           jne 0x4000250	       107	alpha.c	FUNCTION_1	CALL_4
0x4000072	        0x4883c303	                              add rbx, 3	       110	alpha.c	FUNCTION_1	FOR_1
0x4000076	    0x41be00000000	                             mov r14d, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x400007c	        0x4883e3fc	             and rbx, 0xfffffffffffffffc	       110	alpha.c	FUNCTION_1	FOR_1
0x4000080	          0x4939dc	                            cmp r12, rbx	       110	alpha.c	FUNCTION_1	FOR_1
0x4000083	            0x7767	                            ja 0x40000ec	       110	alpha.c	FUNCTION_1	FOR_1
0x4000085	      0xe909010000	                           jmp 0x4000193	       110	alpha.c	FUNCTION_1	FOR_1
0x400008a	    0x660f1f440000	                    nop word [rax + rax]	       110	alpha.c	FUNCTION_1	FOR_1
0x4000090	      0x3d000000d0	                     cmp eax, 0xd0000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000095	            0x7548	                           jne 0x40000df	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000097	    0xf60500000000	               test byte [0x0400009e], 1	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x400009e	     0xf8564010000	                           jne 0x4000208	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x40000a4	    0x81e5ffff1f00	                       and ebp, 0x1fffff	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40000aa	    0x4881f5000010	                       xor rbp, 0x100000	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40000b1	          0x4801dd	                            add rbp, rbx	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40000b4	    0x4c8dbd0400f0	                lea r15, [rbp - 0xffffc]	       146	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x40000bb	          0x4489ff	                           mov edi, r15d	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40000be	      0xe800000000	                          call 0x40000c3	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40000c3	    0x8b1500000000	            mov edx, dword [0x040000c9] 	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40000c9	    0x81e200010000	                          and edx, 0x100	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40000cf	            0x85c0	                           test eax, eax	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40000d1	     0xf85d1000000	                           jne 0x40001a8	       148	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_11
0x40000d7	            0x85d2	                           test edx, edx	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_16
0x40000d9	     0xf8559010000	                           jne 0x4000238	       169	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_16
0x40000df	        0x4883c304	                              add rbx, 4	       110	alpha.c	FUNCTION_1	FOR_1
0x40000e3	          0x4939dc	                            cmp r12, rbx	       110	alpha.c	FUNCTION_1	FOR_1
0x40000e6	     0xf86a7000000	                           jbe 0x4000193	       110	alpha.c	FUNCTION_1	FOR_1
0x40000ec	    0x488b05000000	            mov rax, qword [0x040000f3] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x40000f3	          0x4889df	                            mov rdi, rbx	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x40000f6	        0x482b7828	             sub rdi, qword [rax + 0x28]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x40000fa	    0x488b05000000	            mov rax, qword [0x04000101] 	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x4000101	    0x48033d000000	             add rdi, qword [0x04000108]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x4000108	        0x488b4008	                mov rax, qword [rax + 8]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x400010c	          0xff5038	                 call qword [rax + 0x38]	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x400010f	          0x4889c5	                            mov rbp, rax	       112	alpha.c	FUNCTION_1	FOR_1	CALL_5
0x4000112	      0x25000000fc	                     and eax, 0xfc000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000117	      0x3d00000068	                     cmp eax, 0x68000000	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x400011c	     0xf856effffff	                           jne 0x4000090	       114	alpha.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000122	            0x89e8	                            mov eax, ebp	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000124	      0x2500400000	                         and eax, 0x4000	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000129	      0x3d00400000	                         cmp eax, 0x4000	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x400012e	            0x75af	                           jne 0x40000df	       125	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000130	    0xf60500000000	               test byte [0x04000137], 1	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000137	            0x743e	                            je 0x4000177	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000139	    0x81e500c00000	                         and ebp, 0xc000	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x400013f	      0xba05000000	                              mov edx, 5	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000144	      0xbe00000000	                              mov esi, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000149	    0x81fd00400000	                         cmp ebp, 0x4000	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x400014f	      0xbd00000000	                              mov ebp, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000154	      0xbf00000000	                              mov edi, 0	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000159	        0x490f45ee	                         cmovne rbp, r14	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x400015d	      0xe800000000	                          call 0x4000162	       128	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_6
0x4000162	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_13
0x4000165	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_13
0x4000168	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_13
0x400016b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x4000170	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_13
0x4000172	      0xe800000000	                          call 0x4000177	       104	stdio2.h	CALL_13
0x4000177	            0x31d2	                            xor edx, edx	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x4000179	      0xbe00000000	                              mov esi, 0	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x400017e	          0x4c89ef	                            mov rdi, r13	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x4000181	        0x4883c304	                              add rbx, 4	       110	alpha.c	FUNCTION_1	FOR_1
0x4000185	      0xe800000000	                          call 0x400018a	       133	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2	CALL_8
0x400018a	          0x4939dc	                            cmp r12, rbx	       110	alpha.c	FUNCTION_1	FOR_1
0x400018d	     0xf8759ffffff	                            ja 0x40000ec	       110	alpha.c	FUNCTION_1	FOR_1
0x4000193	        0x4883c418	                           add rsp, 0x18	       176	alpha.c	FUNCTION_1
0x4000197	              0x5b	                                 pop rbx	       176	alpha.c	FUNCTION_1
0x4000198	              0x5d	                                 pop rbp	       176	alpha.c	FUNCTION_1
0x4000199	            0x415c	                                 pop r12	       176	alpha.c	FUNCTION_1
0x400019b	            0x415d	                                 pop r13	       176	alpha.c	FUNCTION_1
0x400019d	            0x415e	                                 pop r14	       176	alpha.c	FUNCTION_1
0x400019f	            0x415f	                                 pop r15	       176	alpha.c	FUNCTION_1
0x40001a1	              0xc3	                                     ret	       176	alpha.c	FUNCTION_1
0x40001a2	    0x660f1f440000	                    nop word [rax + rax]	       176	alpha.c	FUNCTION_1
0x40001a8	          0x4c89fe	                            mov rsi, r15	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x40001ab	      0xbf00000000	                              mov edi, 0	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x40001b0	      0xe800000000	                          call 0x40001b5	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x40001b5	    0x8b1500000000	            mov edx, dword [0x040001bb] 	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x40001bb	          0x4989c1	                             mov r9, rax	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x40001be	    0x81e200010000	                          and edx, 0x100	       150	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	CALL_12
0x40001c4	          0x4885c0	                           test rax, rax	       151	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4
0x40001c7	     0xf840affffff	                            je 0x40000d7	       151	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4
0x40001cd	    0xf60500000000	               test byte [0x040001d4], 1	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_13
0x40001d4	     0xf85ae000000	                           jne 0x4000288	       153	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	CALL_13
0x40001da	          0x488b00	                    mov rax, qword [rax]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40001dd	          0x4939c7	                            cmp r15, rax	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40001e0	            0x7410	                            je 0x40001f2	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40001e2	    0x4881ed040010	                       sub rbp, 0x100004	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40001e9	          0x4839e8	                            cmp rax, rbp	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40001ec	     0xf85edfeffff	                           jne 0x40000df	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40001f2	            0x31d2	                            xor edx, edx	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40001f4	          0x4c89ce	                             mov rsi, r9	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40001f7	          0x4c89ef	                            mov rdi, r13	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40001fa	      0xe800000000	                          call 0x40001ff	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40001ff	      0xe9dbfeffff	                           jmp 0x40000df	       162	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000204	         0xf1f4000	                         nop dword [rax]	       162	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000208	      0xba05000000	                              mov edx, 5	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x400020d	      0xbe00000000	                              mov esi, 0	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x4000212	      0xbf00000000	                              mov edi, 0	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x4000217	      0xe800000000	                          call 0x400021c	       138	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	CALL_9
0x400021c	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_13
0x400021f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_13
0x4000222	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x4000227	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_13
0x4000229	      0xe800000000	                          call 0x400022e	       104	stdio2.h	CALL_13
0x400022e	      0xe971feffff	                           jmp 0x40000a4	       104	stdio2.h	CALL_13
0x4000233	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_13
0x4000238	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_13
0x400023d	      0xe800000000	                          call 0x4000242	       104	stdio2.h	CALL_13
0x4000242	      0xe998feffff	                           jmp 0x40000df	       104	stdio2.h	CALL_13
0x4000247	    0x660f1f840000	                    nop word [rax + rax]	       104	stdio2.h	CALL_13
0x4000250	        0x498b6d10	            mov rbp, qword [r13 + 0x10] 	       107	alpha.c	FUNCTION_1	CALL_4
0x4000254	      0xba05000000	                              mov edx, 5	       107	alpha.c	FUNCTION_1	CALL_4
0x4000259	      0xbe00000000	                              mov esi, 0	       107	alpha.c	FUNCTION_1	CALL_4
0x400025e	      0xbf00000000	                              mov edi, 0	       107	alpha.c	FUNCTION_1	CALL_4
0x4000263	      0xe800000000	                          call 0x4000268	       107	alpha.c	FUNCTION_1	CALL_4
0x4000268	          0x4d89e0	                             mov r8, r12	       104	stdio2.h	CALL_13
0x400026b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_13
0x400026e	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_13
0x4000271	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_13
0x4000274	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x4000279	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_13
0x400027b	      0xe800000000	                          call 0x4000280	       104	stdio2.h	CALL_13
0x4000280	      0xe9edfdffff	                           jmp 0x4000072	       104	stdio2.h	CALL_13
0x4000285	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_13
0x4000288	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       104	stdio2.h	CALL_13
0x400028c	          0x4c8b00	                     mov r8, qword [rax]	       104	stdio2.h	CALL_13
0x400028f	          0x4c89fa	                            mov rdx, r15	       104	stdio2.h	CALL_13
0x4000292	      0x4889442408	                mov qword [rsp + 8], rax	       104	stdio2.h	CALL_13
0x4000297	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_13
0x400029c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_13
0x400029e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x40002a3	      0xe800000000	                          call 0x40002a8	       104	stdio2.h	CALL_13
0x40002a8	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002ad	    0x8b1500000000	            mov edx, dword [0x040002b3] 	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002b3	          0x498b01	                     mov rax, qword [r9]	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002b6	    0x81e200010000	                          and edx, 0x100	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002bc	          0x4939c7	                            cmp r15, rax	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002bf	            0x7410	                            je 0x40002d1	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002c1	    0x4881ed040010	                       sub rbp, 0x100004	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002c8	          0x4839e8	                            cmp rax, rbp	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002cb	     0xf8506feffff	                           jne 0x40000d7	       157	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40002d1	            0x85d2	                           test edx, edx	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_14
0x40002d3	     0xf8419ffffff	                            je 0x40001f2	       159	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_14
0x40002d9	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_13
0x40002de	      0x4c894c2408	                 mov qword [rsp + 8], r9	       104	stdio2.h	CALL_13
0x40002e3	      0xe800000000	                          call 0x40002e8	       104	stdio2.h	CALL_13
0x40002e8	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       104	stdio2.h	CALL_13
0x40002ed	            0x31d2	                            xor edx, edx	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40002ef	          0x4c89ef	                            mov rdi, r13	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40002f2	          0x4c89ce	                             mov rsi, r9	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40002f5	      0xe800000000	                          call 0x40002fa	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40002fa	      0xe9e0fdffff	                           jmp 0x40000df	       161	alpha.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_15
0x40002ff	      0xbf00000000	                              mov edi, 0	       101	alpha.c	FUNCTION_1	IF_1	CALL_1
0x4000304	      0xe800000000	                          call 0x4000309	       101	alpha.c	FUNCTION_1	IF_1	CALL_1
0x4000309	      0xba05000000	                              mov edx, 5	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x400030e	      0xbe00000000	                              mov esi, 0	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x4000313	      0xbf00000000	                              mov edi, 0	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x4000318	      0xe800000000	                          call 0x400031d	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x400031d	    0xf20f10050000	         movsd xmm0, qword [0x04000325] 	       103	alpha.c	FUNCTION_1	IF_1
0x4000325	    0x488905000000	            mov qword [0x0400032c], rax 	       102	alpha.c	FUNCTION_1	IF_1	CALL_2
0x400032c	    0x48c705000000	               mov qword [0x04000337], 0	       104	alpha.c	FUNCTION_1	IF_1
0x4000337	    0xf20f11050000	         movsd qword [0x0400033f], xmm0 	       103	alpha.c	FUNCTION_1	IF_1
0x400033f	      0xe921fdffff	                           jmp 0x4000065	       103	alpha.c	FUNCTION_1	IF_1
